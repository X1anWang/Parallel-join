
enclave.signed.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000002000 <.plt>:
    2000:	ff 35 02 80 02 00    	push   0x28002(%rip)        # 2a008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2006:	ff 25 04 80 02 00    	jmp    *0x28004(%rip)        # 2a010 <_GLOBAL_OFFSET_TABLE_+0x10>
    200c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000002010 <_Z9pcl_entryPvS_@plt>:
    2010:	ff 25 c2 7f 02 00    	jmp    *0x27fc2(%rip)        # 29fd8 <_Z9pcl_entryPvS_>
    2016:	66 90                	xchg   %ax,%ax

0000000000002018 <ippcpSetCpuFeatures@plt>:
    2018:	ff 25 d2 7f 02 00    	jmp    *0x27fd2(%rip)        # 29ff0 <ippcpSetCpuFeatures>
    201e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002020 <_ZSt10unexpectedv.cold>:
    2020:	48 8d 3d b1 90 02 00 	lea    0x290b1(%rip),%rdi        # 2b0d8 <_ZGVZSt10unexpectedvE4info>
    2027:	e8 64 a0 01 00       	call   1c090 <__cxa_guard_abort>
    202c:	48 89 ef             	mov    %rbp,%rdi
    202f:	e8 5c 65 01 00       	call   18590 <_Unwind_Resume>

0000000000002034 <__cxa_call_unexpected>:
    2034:	f3 0f 1e fa          	endbr64 
    2038:	50                   	push   %rax
    2039:	58                   	pop    %rax
    203a:	50                   	push   %rax
    203b:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
    2042:	55 4e 47 
    2045:	48 39 07             	cmp    %rax,(%rdi)
    2048:	75 10                	jne    205a <__cxa_call_unexpected+0x26>
    204a:	48 8b 47 b8          	mov    -0x48(%rdi),%rax
    204e:	48 85 c0             	test   %rax,%rax
    2051:	74 07                	je     205a <__cxa_call_unexpected+0x26>
    2053:	ff d0                	call   *%rax
    2055:	e8 3a e7 01 00       	call   20794 <abort>
    205a:	e8 41 95 01 00       	call   1b5a0 <_ZSt10unexpectedv>
    205f:	e8 30 e7 01 00       	call   20794 <abort>

0000000000002064 <__cxa_begin_catch.cold>:
    2064:	48 83 c0 01          	add    $0x1,%rax
    2068:	75 05                	jne    206f <__cxa_begin_catch.cold+0xb>
    206a:	e8 c5 ff ff ff       	call   2034 <__cxa_call_unexpected>
    206f:	e8 1c 65 01 00       	call   18590 <_Unwind_Resume>

0000000000002074 <_ZSt9terminatev.cold>:
    2074:	48 8d 3d 6d 90 02 00 	lea    0x2906d(%rip),%rdi        # 2b0e8 <_ZGVZSt9terminatevE4info>
    207b:	e8 10 a0 01 00       	call   1c090 <__cxa_guard_abort>
    2080:	48 89 ef             	mov    %rbp,%rdi
    2083:	e8 08 65 01 00       	call   18590 <_Unwind_Resume>
    2088:	e8 93 95 01 00       	call   1b620 <__cxa_begin_catch>
    208d:	e8 02 e7 01 00       	call   20794 <abort>
    2092:	e8 89 95 01 00       	call   1b620 <__cxa_begin_catch>
    2097:	e8 f8 e6 01 00       	call   20794 <abort>
    209c:	f3 0f 1e fa          	endbr64 
    20a0:	48 89 c5             	mov    %rax,%rbp
    20a3:	e8 48 97 01 00       	call   1b7f0 <__cxa_end_catch>
    20a8:	48 89 ef             	mov    %rbp,%rdi
    20ab:	e8 e0 64 01 00       	call   18590 <_Unwind_Resume>
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	48 89 c5             	mov    %rax,%rbp
    20b7:	e8 34 97 01 00       	call   1b7f0 <__cxa_end_catch>
    20bc:	48 89 ef             	mov    %rbp,%rdi
    20bf:	e8 cc 64 01 00       	call   18590 <_Unwind_Resume>

00000000000020c4 <__cxa_free_exception.cold>:
    20c4:	e8 57 95 01 00       	call   1b620 <__cxa_begin_catch>
    20c9:	e8 d2 95 01 00       	call   1b6a0 <_ZSt9terminatev>
    20ce:	f3 0f 1e fa          	endbr64 
    20d2:	48 89 c5             	mov    %rax,%rbp
    20d5:	e8 16 97 01 00       	call   1b7f0 <__cxa_end_catch>
    20da:	48 89 ef             	mov    %rbp,%rdi
    20dd:	e8 ae 64 01 00       	call   18590 <_Unwind_Resume>

00000000000020e2 <_Znwm.cold>:
    20e2:	bf 08 00 00 00       	mov    $0x8,%edi
    20e7:	e8 94 98 01 00       	call   1b980 <__cxa_allocate_exception>
    20ec:	48 89 c7             	mov    %rax,%rdi
    20ef:	48 89 c5             	mov    %rax,%rbp
    20f2:	e8 29 a0 01 00       	call   1c120 <_ZNSt9bad_allocC1Ev>
    20f7:	48 8d 15 d2 9f 01 00 	lea    0x19fd2(%rip),%rdx        # 1c0d0 <_ZNSt9bad_allocD1Ev>
    20fe:	48 8d 35 6b 7c 02 00 	lea    0x27c6b(%rip),%rsi        # 29d70 <_ZTISt9bad_alloc>
    2105:	48 89 ef             	mov    %rbp,%rdi
    2108:	e8 73 99 01 00       	call   1ba80 <__cxa_throw>
    210d:	90                   	nop

000000000000210e <_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv>:
    210e:	f3 0f 1e fa          	endbr64 
    2112:	41 54                	push   %r12
    2114:	bf 10 00 00 00       	mov    $0x10,%edi
    2119:	55                   	push   %rbp
    211a:	50                   	push   %rax
    211b:	e8 60 98 01 00       	call   1b980 <__cxa_allocate_exception>
    2120:	48 8d 35 7e 03 02 00 	lea    0x2037e(%rip),%rsi        # 224a5 <_ZTSN10__cxxabiv120__si_class_type_infoE+0x25>
    2127:	48 89 c7             	mov    %rax,%rdi
    212a:	48 89 c5             	mov    %rax,%rbp
    212d:	e8 ee a3 01 00       	call   1c520 <_ZNSt11logic_errorC1EPKc>
    2132:	48 8d 15 07 a2 01 00 	lea    0x1a207(%rip),%rdx        # 1c340 <_ZNSt12length_errorD1Ev>
    2139:	48 8d 05 78 7b 02 00 	lea    0x27b78(%rip),%rax        # 29cb8 <_ZTVSt12length_error+0x10>
    2140:	48 8d 35 01 7d 02 00 	lea    0x27d01(%rip),%rsi        # 29e48 <_ZTISt12length_error>
    2147:	48 89 ef             	mov    %rbp,%rdi
    214a:	48 89 45 00          	mov    %rax,0x0(%rbp)
    214e:	e8 2d 99 01 00       	call   1ba80 <__cxa_throw>
    2153:	f3 0f 1e fa          	endbr64 
    2157:	49 89 c4             	mov    %rax,%r12
    215a:	48 89 ef             	mov    %rbp,%rdi
    215d:	e8 ce 95 01 00       	call   1b730 <__cxa_free_exception>
    2162:	4c 89 e7             	mov    %r12,%rdi
    2165:	e8 26 64 01 00       	call   18590 <_Unwind_Resume>

000000000000216a <_ZNSt11logic_errorC2EPKc.cold>:
    216a:	4c 89 e7             	mov    %r12,%rdi
    216d:	e8 3e 9f 01 00       	call   1c0b0 <_ZNSt9exceptionD1Ev>
    2172:	48 89 ef             	mov    %rbp,%rdi
    2175:	e8 16 64 01 00       	call   18590 <_Unwind_Resume>

000000000000217a <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>:
    217a:	4c 89 e7             	mov    %r12,%rdi
    217d:	e8 2e 9f 01 00       	call   1c0b0 <_ZNSt9exceptionD1Ev>
    2182:	48 89 ef             	mov    %rbp,%rdi
    2185:	e8 06 64 01 00       	call   18590 <_Unwind_Resume>

000000000000218a <_ZNSt13runtime_errorC2EPKc.cold>:
    218a:	4c 89 e7             	mov    %r12,%rdi
    218d:	e8 1e 9f 01 00       	call   1c0b0 <_ZNSt9exceptionD1Ev>
    2192:	48 89 ef             	mov    %rbp,%rdi
    2195:	e8 f6 63 01 00       	call   18590 <_Unwind_Resume>

000000000000219a <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>:
    219a:	f3 0f 1e fa          	endbr64 
    219e:	41 54                	push   %r12
    21a0:	bf 10 00 00 00       	mov    $0x10,%edi
    21a5:	55                   	push   %rbp
    21a6:	50                   	push   %rax
    21a7:	e8 d4 97 01 00       	call   1b980 <__cxa_allocate_exception>
    21ac:	48 8d 35 5e 03 02 00 	lea    0x2035e(%rip),%rsi        # 22511 <_ZTSSt12out_of_range+0x11>
    21b3:	48 89 c7             	mov    %rax,%rdi
    21b6:	48 89 c5             	mov    %rax,%rbp
    21b9:	e8 62 a3 01 00       	call   1c520 <_ZNSt11logic_errorC1EPKc>
    21be:	48 8d 15 7b a1 01 00 	lea    0x1a17b(%rip),%rdx        # 1c340 <_ZNSt12length_errorD1Ev>
    21c5:	48 8d 05 ec 7a 02 00 	lea    0x27aec(%rip),%rax        # 29cb8 <_ZTVSt12length_error+0x10>
    21cc:	48 8d 35 75 7c 02 00 	lea    0x27c75(%rip),%rsi        # 29e48 <_ZTISt12length_error>
    21d3:	48 89 ef             	mov    %rbp,%rdi
    21d6:	48 89 45 00          	mov    %rax,0x0(%rbp)
    21da:	e8 a1 98 01 00       	call   1ba80 <__cxa_throw>
    21df:	f3 0f 1e fa          	endbr64 
    21e3:	49 89 c4             	mov    %rax,%r12
    21e6:	48 89 ef             	mov    %rbp,%rdi
    21e9:	e8 42 95 01 00       	call   1b730 <__cxa_free_exception>
    21ee:	4c 89 e7             	mov    %r12,%rdi
    21f1:	e8 9a 63 01 00       	call   18590 <_Unwind_Resume>

00000000000021f6 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>:
    21f6:	f3 0f 1e fa          	endbr64 
    21fa:	41 54                	push   %r12
    21fc:	bf 10 00 00 00       	mov    $0x10,%edi
    2201:	55                   	push   %rbp
    2202:	50                   	push   %rax
    2203:	e8 78 97 01 00       	call   1b980 <__cxa_allocate_exception>
    2208:	48 8d 35 02 03 02 00 	lea    0x20302(%rip),%rsi        # 22511 <_ZTSSt12out_of_range+0x11>
    220f:	48 89 c7             	mov    %rax,%rdi
    2212:	48 89 c5             	mov    %rax,%rbp
    2215:	e8 06 a3 01 00       	call   1c520 <_ZNSt11logic_errorC1EPKc>
    221a:	48 8d 15 6f a1 01 00 	lea    0x1a16f(%rip),%rdx        # 1c390 <_ZNSt12out_of_rangeD1Ev>
    2221:	48 8d 05 b8 7a 02 00 	lea    0x27ab8(%rip),%rax        # 29ce0 <_ZTVSt12out_of_range+0x10>
    2228:	48 8d 35 31 7c 02 00 	lea    0x27c31(%rip),%rsi        # 29e60 <_ZTISt12out_of_range>
    222f:	48 89 ef             	mov    %rbp,%rdi
    2232:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2236:	e8 45 98 01 00       	call   1ba80 <__cxa_throw>
    223b:	f3 0f 1e fa          	endbr64 
    223f:	49 89 c4             	mov    %rax,%r12
    2242:	48 89 ef             	mov    %rbp,%rdi
    2245:	e8 e6 94 01 00       	call   1b730 <__cxa_free_exception>
    224a:	4c 89 e7             	mov    %r12,%rdi
    224d:	e8 3e 63 01 00       	call   18590 <_Unwind_Resume>

0000000000002252 <_ULx86_64_r_uc_addr.cold>:
    2252:	31 c0                	xor    %eax,%eax
    2254:	c3                   	ret    

0000000000002255 <_ULx86_64_access_reg.cold>:
    2255:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    225a:	e9 69 b4 01 00       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
    225f:	90                   	nop

0000000000002260 <trts_access_version_dummy1>:
    2260:	f3 0f 1e fa          	endbr64 
    2264:	48 8d 05 55 7f 02 00 	lea    0x27f55(%rip),%rax        # 2a1c0 <sgx_trts_version>
    226b:	c6 00 73             	movb   $0x73,(%rax)
    226e:	c3                   	ret    
    226f:	90                   	nop

0000000000002270 <tstdc_access_version_dummy1>:
    2270:	f3 0f 1e fa          	endbr64 
    2274:	c6 05 75 7f 02 00 73 	movb   $0x73,0x27f75(%rip)        # 2a1f0 <sgx_tstdc_version>
    227b:	48 8d 05 6e 7f 02 00 	lea    0x27f6e(%rip),%rax        # 2a1f0 <sgx_tstdc_version>
    2282:	c3                   	ret    
    2283:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228a:	00 00 00 
    228d:	0f 1f 00             	nopl   (%rax)

0000000000002290 <tcxx_access_version_dummy1>:
    2290:	f3 0f 1e fa          	endbr64 
    2294:	c6 05 c5 7f 02 00 73 	movb   $0x73,0x27fc5(%rip)        # 2a260 <sgx_tcxx_version>
    229b:	48 8d 05 be 7f 02 00 	lea    0x27fbe(%rip),%rax        # 2a260 <sgx_tcxx_version>
    22a2:	c3                   	ret    
    22a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22aa:	00 00 00 
    22ad:	0f 1f 00             	nopl   (%rax)

00000000000022b0 <tcxx_access_version_dummy3>:
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	c6 05 a5 7f 02 00 73 	movb   $0x73,0x27fa5(%rip)        # 2a260 <sgx_tcxx_version>
    22bb:	48 8d 05 9e 7f 02 00 	lea    0x27f9e(%rip),%rax        # 2a260 <sgx_tcxx_version>
    22c2:	c3                   	ret    
    22c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ca:	00 00 00 
    22cd:	0f 1f 00             	nopl   (%rax)

00000000000022d0 <tcxx_access_version_dummy5>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	c6 05 85 7f 02 00 73 	movb   $0x73,0x27f85(%rip)        # 2a260 <sgx_tcxx_version>
    22db:	48 8d 05 7e 7f 02 00 	lea    0x27f7e(%rip),%rax        # 2a260 <sgx_tcxx_version>
    22e2:	c3                   	ret    
    22e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ea:	00 00 00 
    22ed:	0f 1f 00             	nopl   (%rax)

00000000000022f0 <tcxx_access_version_dummy4>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	c6 05 65 7f 02 00 73 	movb   $0x73,0x27f65(%rip)        # 2a260 <sgx_tcxx_version>
    22fb:	48 8d 05 5e 7f 02 00 	lea    0x27f5e(%rip),%rax        # 2a260 <sgx_tcxx_version>
    2302:	c3                   	ret    
    2303:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230a:	00 00 00 
    230d:	0f 1f 00             	nopl   (%rax)

0000000000002310 <tcrypto_access_version_dummy1>:
    2310:	f3 0f 1e fa          	endbr64 
    2314:	c6 05 75 7f 02 00 73 	movb   $0x73,0x27f75(%rip)        # 2a290 <sgx_tcrypto_version>
    231b:	48 8d 05 6e 7f 02 00 	lea    0x27f6e(%rip),%rax        # 2a290 <sgx_tcrypto_version>
    2322:	c3                   	ret    
    2323:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232a:	00 00 00 
    232d:	0f 1f 00             	nopl   (%rax)

0000000000002330 <tservice_access_version_dummy1>:
    2330:	f3 0f 1e fa          	endbr64 
    2334:	c6 05 85 7f 02 00 73 	movb   $0x73,0x27f85(%rip)        # 2a2c0 <sgx_tservice_version>
    233b:	48 8d 05 7e 7f 02 00 	lea    0x27f7e(%rip),%rax        # 2a2c0 <sgx_tservice_version>
    2342:	c3                   	ret    
    2343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234a:	00 00 00 
    234d:	0f 1f 00             	nopl   (%rax)

0000000000002350 <sgx_ecall_consumer>:
    2350:	48 85 ff             	test   %rdi,%rdi
    2353:	74 0b                	je     2360 <sgx_ecall_consumer+0x10>
    2355:	b8 02 00 00 00       	mov    $0x2,%eax
    235a:	c3                   	ret    
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2360:	48 83 ec 08          	sub    $0x8,%rsp
    2364:	e8 57 4f 00 00       	call   72c0 <ecall_consumer>
    2369:	31 c0                	xor    %eax,%eax
    236b:	48 83 c4 08          	add    $0x8,%rsp
    236f:	c3                   	ret    

0000000000002370 <sgx_ecall_producer>:
    2370:	48 85 ff             	test   %rdi,%rdi
    2373:	74 0b                	je     2380 <sgx_ecall_producer+0x10>
    2375:	b8 02 00 00 00       	mov    $0x2,%eax
    237a:	c3                   	ret    
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2380:	48 83 ec 08          	sub    $0x8,%rsp
    2384:	e8 87 4e 00 00       	call   7210 <ecall_producer>
    2389:	31 c0                	xor    %eax,%eax
    238b:	48 83 c4 08          	add    $0x8,%rsp
    238f:	c3                   	ret    

0000000000002390 <sgx_ecall_map>:
    2390:	48 85 ff             	test   %rdi,%rdi
    2393:	74 0b                	je     23a0 <sgx_ecall_map+0x10>
    2395:	b8 02 00 00 00       	mov    $0x2,%eax
    239a:	c3                   	ret    
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23a0:	48 83 ec 08          	sub    $0x8,%rsp
    23a4:	e8 f7 53 00 00       	call   77a0 <ecall_map>
    23a9:	31 c0                	xor    %eax,%eax
    23ab:	48 83 c4 08          	add    $0x8,%rsp
    23af:	c3                   	ret    

00000000000023b0 <sgx_ecall_exception>:
    23b0:	48 85 ff             	test   %rdi,%rdi
    23b3:	74 0b                	je     23c0 <sgx_ecall_exception+0x10>
    23b5:	b8 02 00 00 00       	mov    $0x2,%eax
    23ba:	c3                   	ret    
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23c0:	48 83 ec 08          	sub    $0x8,%rsp
    23c4:	e8 57 56 00 00       	call   7a20 <ecall_exception>
    23c9:	31 c0                	xor    %eax,%eax
    23cb:	48 83 c4 08          	add    $0x8,%rsp
    23cf:	c3                   	ret    

00000000000023d0 <sgx_ecall_malloc_free>:
    23d0:	48 85 ff             	test   %rdi,%rdi
    23d3:	74 0b                	je     23e0 <sgx_ecall_malloc_free+0x10>
    23d5:	b8 02 00 00 00       	mov    $0x2,%eax
    23da:	c3                   	ret    
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23e0:	48 83 ec 08          	sub    $0x8,%rsp
    23e4:	e8 f7 58 00 00       	call   7ce0 <ecall_malloc_free>
    23e9:	31 c0                	xor    %eax,%eax
    23eb:	48 83 c4 08          	add    $0x8,%rsp
    23ef:	c3                   	ret    

00000000000023f0 <sgx_ecall_function_public>:
    23f0:	48 85 ff             	test   %rdi,%rdi
    23f3:	74 0b                	je     2400 <sgx_ecall_function_public+0x10>
    23f5:	b8 02 00 00 00       	mov    $0x2,%eax
    23fa:	c3                   	ret    
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2400:	48 83 ec 08          	sub    $0x8,%rsp
    2404:	e8 77 4d 00 00       	call   7180 <ecall_function_public>
    2409:	31 c0                	xor    %eax,%eax
    240b:	48 83 c4 08          	add    $0x8,%rsp
    240f:	c3                   	ret    

0000000000002410 <sgx_ecall_function_calling_convs>:
    2410:	48 85 ff             	test   %rdi,%rdi
    2413:	74 0b                	je     2420 <sgx_ecall_function_calling_convs+0x10>
    2415:	b8 02 00 00 00       	mov    $0x2,%eax
    241a:	c3                   	ret    
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2420:	48 83 ec 08          	sub    $0x8,%rsp
    2424:	e8 17 4c 00 00       	call   7040 <ecall_function_calling_convs>
    2429:	31 c0                	xor    %eax,%eax
    242b:	48 83 c4 08          	add    $0x8,%rsp
    242f:	c3                   	ret    

0000000000002430 <sgx_ocall_pointer_attr>:
    2430:	48 85 ff             	test   %rdi,%rdi
    2433:	74 0b                	je     2440 <sgx_ocall_pointer_attr+0x10>
    2435:	b8 02 00 00 00       	mov    $0x2,%eax
    243a:	c3                   	ret    
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2440:	48 83 ec 08          	sub    $0x8,%rsp
    2444:	e8 67 48 00 00       	call   6cb0 <ocall_pointer_attr>
    2449:	31 c0                	xor    %eax,%eax
    244b:	48 83 c4 08          	add    $0x8,%rsp
    244f:	c3                   	ret    

0000000000002450 <sgx_ecall_increase_counter>:
    2450:	53                   	push   %rbx
    2451:	48 83 ec 20          	sub    $0x20,%rsp
    2455:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    245c:	00 00 
    245e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2463:	31 c0                	xor    %eax,%eax
    2465:	48 85 ff             	test   %rdi,%rdi
    2468:	74 11                	je     247b <sgx_ecall_increase_counter+0x2b>
    246a:	be 08 00 00 00       	mov    $0x8,%esi
    246f:	48 89 fb             	mov    %rdi,%rbx
    2472:	e8 b9 5a 00 00       	call   7f30 <sgx_is_outside_enclave>
    2477:	85 c0                	test   %eax,%eax
    2479:	75 25                	jne    24a0 <sgx_ecall_increase_counter+0x50>
    247b:	b8 02 00 00 00       	mov    $0x2,%eax
    2480:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2485:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    248c:	00 00 
    248e:	75 5e                	jne    24ee <sgx_ecall_increase_counter+0x9e>
    2490:	48 83 c4 20          	add    $0x20,%rsp
    2494:	5b                   	pop    %rbx
    2495:	c3                   	ret    
    2496:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249d:	00 00 00 
    24a0:	48 89 da             	mov    %rbx,%rdx
    24a3:	48 89 e7             	mov    %rsp,%rdi
    24a6:	b9 08 00 00 00       	mov    $0x8,%ecx
    24ab:	be 08 00 00 00       	mov    $0x8,%esi
    24b0:	0f ae e8             	lfence 
    24b3:	e8 d8 cb 00 00       	call   f090 <memcpy_s>
    24b8:	89 c2                	mov    %eax,%edx
    24ba:	b8 01 00 00 00       	mov    $0x1,%eax
    24bf:	85 d2                	test   %edx,%edx
    24c1:	75 bd                	jne    2480 <sgx_ecall_increase_counter+0x30>
    24c3:	e8 e8 4c 00 00       	call   71b0 <ecall_increase_counter>
    24c8:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    24cd:	b9 08 00 00 00       	mov    $0x8,%ecx
    24d2:	be 08 00 00 00       	mov    $0x8,%esi
    24d7:	48 89 df             	mov    %rbx,%rdi
    24da:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    24df:	e8 2c cc 00 00       	call   f110 <memcpy_verw_s>
    24e4:	85 c0                	test   %eax,%eax
    24e6:	0f 95 c0             	setne  %al
    24e9:	0f b6 c0             	movzbl %al,%eax
    24ec:	eb 92                	jmp    2480 <sgx_ecall_increase_counter+0x30>
    24ee:	e8 5d c6 00 00       	call   eb50 <__stack_chk_fail>
    24f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fa:	00 00 00 
    24fd:	0f 1f 00             	nopl   (%rax)

0000000000002500 <sgx_ecall_sgx_cpuid>:
    2500:	55                   	push   %rbp
    2501:	53                   	push   %rbx
    2502:	48 83 ec 38          	sub    $0x38,%rsp
    2506:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    250d:	00 00 
    250f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2514:	31 c0                	xor    %eax,%eax
    2516:	48 85 ff             	test   %rdi,%rdi
    2519:	74 11                	je     252c <sgx_ecall_sgx_cpuid+0x2c>
    251b:	be 10 00 00 00       	mov    $0x10,%esi
    2520:	48 89 fb             	mov    %rdi,%rbx
    2523:	e8 08 5a 00 00       	call   7f30 <sgx_is_outside_enclave>
    2528:	85 c0                	test   %eax,%eax
    252a:	75 24                	jne    2550 <sgx_ecall_sgx_cpuid+0x50>
    252c:	b8 02 00 00 00       	mov    $0x2,%eax
    2531:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    2536:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    253d:	00 00 
    253f:	0f 85 c9 00 00 00    	jne    260e <sgx_ecall_sgx_cpuid+0x10e>
    2545:	48 83 c4 38          	add    $0x38,%rsp
    2549:	5b                   	pop    %rbx
    254a:	5d                   	pop    %rbp
    254b:	c3                   	ret    
    254c:	0f 1f 40 00          	nopl   0x0(%rax)
    2550:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2555:	48 89 da             	mov    %rbx,%rdx
    2558:	b9 10 00 00 00       	mov    $0x10,%ecx
    255d:	be 10 00 00 00       	mov    $0x10,%esi
    2562:	0f ae e8             	lfence 
    2565:	e8 26 cb 00 00       	call   f090 <memcpy_s>
    256a:	89 c2                	mov    %eax,%edx
    256c:	b8 01 00 00 00       	mov    $0x1,%eax
    2571:	85 d2                	test   %edx,%edx
    2573:	75 bc                	jne    2531 <sgx_ecall_sgx_cpuid+0x31>
    2575:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    257a:	48 85 db             	test   %rbx,%rbx
    257d:	74 70                	je     25ef <sgx_ecall_sgx_cpuid+0xef>
    257f:	be 10 00 00 00       	mov    $0x10,%esi
    2584:	48 89 df             	mov    %rbx,%rdi
    2587:	e8 a4 59 00 00       	call   7f30 <sgx_is_outside_enclave>
    258c:	89 c2                	mov    %eax,%edx
    258e:	b8 02 00 00 00       	mov    $0x2,%eax
    2593:	85 d2                	test   %edx,%edx
    2595:	74 9a                	je     2531 <sgx_ecall_sgx_cpuid+0x31>
    2597:	be 01 00 00 00       	mov    $0x1,%esi
    259c:	bf 10 00 00 00       	mov    $0x10,%edi
    25a1:	0f ae e8             	lfence 
    25a4:	e8 d7 b5 00 00       	call   db80 <calloc>
    25a9:	48 85 c0             	test   %rax,%rax
    25ac:	48 89 c5             	mov    %rax,%rbp
    25af:	74 53                	je     2604 <sgx_ecall_sgx_cpuid+0x104>
    25b1:	8b 74 24 18          	mov    0x18(%rsp),%esi
    25b5:	48 89 ef             	mov    %rbp,%rdi
    25b8:	e8 83 57 00 00       	call   7d40 <ecall_sgx_cpuid>
    25bd:	b9 10 00 00 00       	mov    $0x10,%ecx
    25c2:	48 89 ea             	mov    %rbp,%rdx
    25c5:	be 10 00 00 00       	mov    $0x10,%esi
    25ca:	48 89 df             	mov    %rbx,%rdi
    25cd:	e8 3e cb 00 00       	call   f110 <memcpy_verw_s>
    25d2:	85 c0                	test   %eax,%eax
    25d4:	48 89 ef             	mov    %rbp,%rdi
    25d7:	0f 95 c0             	setne  %al
    25da:	0f b6 c0             	movzbl %al,%eax
    25dd:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    25e1:	e8 8a ab 00 00       	call   d170 <dlfree>
    25e6:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    25ea:	e9 42 ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    25ef:	0f ae e8             	lfence 
    25f2:	8b 74 24 18          	mov    0x18(%rsp),%esi
    25f6:	31 ff                	xor    %edi,%edi
    25f8:	e8 43 57 00 00       	call   7d40 <ecall_sgx_cpuid>
    25fd:	31 c0                	xor    %eax,%eax
    25ff:	e9 2d ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    2604:	b8 03 00 00 00       	mov    $0x3,%eax
    2609:	e9 23 ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    260e:	e8 3d c5 00 00       	call   eb50 <__stack_chk_fail>
    2613:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261a:	00 00 00 
    261d:	0f 1f 00             	nopl   (%rax)

0000000000002620 <sgx_ecall_function_private>:
    2620:	53                   	push   %rbx
    2621:	48 83 ec 10          	sub    $0x10,%rsp
    2625:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    262c:	00 00 
    262e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2633:	31 c0                	xor    %eax,%eax
    2635:	48 85 ff             	test   %rdi,%rdi
    2638:	74 11                	je     264b <sgx_ecall_function_private+0x2b>
    263a:	be 04 00 00 00       	mov    $0x4,%esi
    263f:	48 89 fb             	mov    %rdi,%rbx
    2642:	e8 e9 58 00 00       	call   7f30 <sgx_is_outside_enclave>
    2647:	85 c0                	test   %eax,%eax
    2649:	75 25                	jne    2670 <sgx_ecall_function_private+0x50>
    264b:	b8 02 00 00 00       	mov    $0x2,%eax
    2650:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2655:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    265c:	00 00 
    265e:	75 5d                	jne    26bd <sgx_ecall_function_private+0x9d>
    2660:	48 83 c4 10          	add    $0x10,%rsp
    2664:	5b                   	pop    %rbx
    2665:	c3                   	ret    
    2666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266d:	00 00 00 
    2670:	48 89 da             	mov    %rbx,%rdx
    2673:	48 89 e7             	mov    %rsp,%rdi
    2676:	b9 04 00 00 00       	mov    $0x4,%ecx
    267b:	be 04 00 00 00       	mov    $0x4,%esi
    2680:	0f ae e8             	lfence 
    2683:	e8 08 ca 00 00       	call   f090 <memcpy_s>
    2688:	89 c2                	mov    %eax,%edx
    268a:	b8 01 00 00 00       	mov    $0x1,%eax
    268f:	85 d2                	test   %edx,%edx
    2691:	75 bd                	jne    2650 <sgx_ecall_function_private+0x30>
    2693:	e8 08 4b 00 00       	call   71a0 <ecall_function_private>
    2698:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    269d:	b9 04 00 00 00       	mov    $0x4,%ecx
    26a2:	be 04 00 00 00       	mov    $0x4,%esi
    26a7:	48 89 df             	mov    %rbx,%rdi
    26aa:	89 44 24 04          	mov    %eax,0x4(%rsp)
    26ae:	e8 5d ca 00 00       	call   f110 <memcpy_verw_s>
    26b3:	85 c0                	test   %eax,%eax
    26b5:	0f 95 c0             	setne  %al
    26b8:	0f b6 c0             	movzbl %al,%eax
    26bb:	eb 93                	jmp    2650 <sgx_ecall_function_private+0x30>
    26bd:	e8 8e c4 00 00       	call   eb50 <__stack_chk_fail>
    26c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c9:	00 00 00 
    26cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000026d0 <sgx_ecall_array_isary>:
    26d0:	53                   	push   %rbx
    26d1:	48 83 ec 10          	sub    $0x10,%rsp
    26d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    26dc:	00 00 
    26de:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    26e3:	31 c0                	xor    %eax,%eax
    26e5:	48 85 ff             	test   %rdi,%rdi
    26e8:	74 11                	je     26fb <sgx_ecall_array_isary+0x2b>
    26ea:	be 08 00 00 00       	mov    $0x8,%esi
    26ef:	48 89 fb             	mov    %rdi,%rbx
    26f2:	e8 39 58 00 00       	call   7f30 <sgx_is_outside_enclave>
    26f7:	85 c0                	test   %eax,%eax
    26f9:	75 25                	jne    2720 <sgx_ecall_array_isary+0x50>
    26fb:	b8 02 00 00 00       	mov    $0x2,%eax
    2700:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2705:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    270c:	00 00 
    270e:	75 40                	jne    2750 <sgx_ecall_array_isary+0x80>
    2710:	48 83 c4 10          	add    $0x10,%rsp
    2714:	5b                   	pop    %rbx
    2715:	c3                   	ret    
    2716:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271d:	00 00 00 
    2720:	48 89 da             	mov    %rbx,%rdx
    2723:	48 89 e7             	mov    %rsp,%rdi
    2726:	b9 08 00 00 00       	mov    $0x8,%ecx
    272b:	be 08 00 00 00       	mov    $0x8,%esi
    2730:	0f ae e8             	lfence 
    2733:	e8 58 c9 00 00       	call   f090 <memcpy_s>
    2738:	89 c2                	mov    %eax,%edx
    273a:	b8 01 00 00 00       	mov    $0x1,%eax
    273f:	85 d2                	test   %edx,%edx
    2741:	75 bd                	jne    2700 <sgx_ecall_array_isary+0x30>
    2743:	48 8b 3c 24          	mov    (%rsp),%rdi
    2747:	e8 84 48 00 00       	call   6fd0 <ecall_array_isary>
    274c:	31 c0                	xor    %eax,%eax
    274e:	eb b0                	jmp    2700 <sgx_ecall_array_isary+0x30>
    2750:	e8 fb c3 00 00       	call   eb50 <__stack_chk_fail>
    2755:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275c:	00 00 00 
    275f:	90                   	nop

0000000000002760 <sgx_ecall_array_in_out>:
    2760:	41 54                	push   %r12
    2762:	55                   	push   %rbp
    2763:	53                   	push   %rbx
    2764:	48 83 ec 10          	sub    $0x10,%rsp
    2768:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    276f:	00 00 
    2771:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2776:	31 c0                	xor    %eax,%eax
    2778:	48 85 ff             	test   %rdi,%rdi
    277b:	74 11                	je     278e <sgx_ecall_array_in_out+0x2e>
    277d:	be 08 00 00 00       	mov    $0x8,%esi
    2782:	48 89 fb             	mov    %rdi,%rbx
    2785:	e8 a6 57 00 00       	call   7f30 <sgx_is_outside_enclave>
    278a:	85 c0                	test   %eax,%eax
    278c:	75 22                	jne    27b0 <sgx_ecall_array_in_out+0x50>
    278e:	b8 02 00 00 00       	mov    $0x2,%eax
    2793:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2798:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    279f:	00 00 
    27a1:	0f 85 ce 00 00 00    	jne    2875 <sgx_ecall_array_in_out+0x115>
    27a7:	48 83 c4 10          	add    $0x10,%rsp
    27ab:	5b                   	pop    %rbx
    27ac:	5d                   	pop    %rbp
    27ad:	41 5c                	pop    %r12
    27af:	c3                   	ret    
    27b0:	48 89 da             	mov    %rbx,%rdx
    27b3:	48 89 e7             	mov    %rsp,%rdi
    27b6:	b9 08 00 00 00       	mov    $0x8,%ecx
    27bb:	be 08 00 00 00       	mov    $0x8,%esi
    27c0:	0f ae e8             	lfence 
    27c3:	e8 c8 c8 00 00       	call   f090 <memcpy_s>
    27c8:	89 c2                	mov    %eax,%edx
    27ca:	b8 01 00 00 00       	mov    $0x1,%eax
    27cf:	85 d2                	test   %edx,%edx
    27d1:	75 c0                	jne    2793 <sgx_ecall_array_in_out+0x33>
    27d3:	48 8b 2c 24          	mov    (%rsp),%rbp
    27d7:	48 85 ed             	test   %rbp,%rbp
    27da:	74 7e                	je     285a <sgx_ecall_array_in_out+0xfa>
    27dc:	be 10 00 00 00       	mov    $0x10,%esi
    27e1:	48 89 ef             	mov    %rbp,%rdi
    27e4:	e8 47 57 00 00       	call   7f30 <sgx_is_outside_enclave>
    27e9:	89 c2                	mov    %eax,%edx
    27eb:	b8 02 00 00 00       	mov    $0x2,%eax
    27f0:	85 d2                	test   %edx,%edx
    27f2:	74 9f                	je     2793 <sgx_ecall_array_in_out+0x33>
    27f4:	bf 10 00 00 00       	mov    $0x10,%edi
    27f9:	0f ae e8             	lfence 
    27fc:	e8 ff 8e 00 00       	call   b700 <dlmalloc>
    2801:	48 85 c0             	test   %rax,%rax
    2804:	49 89 c4             	mov    %rax,%r12
    2807:	74 62                	je     286b <sgx_ecall_array_in_out+0x10b>
    2809:	b9 10 00 00 00       	mov    $0x10,%ecx
    280e:	48 89 ea             	mov    %rbp,%rdx
    2811:	be 10 00 00 00       	mov    $0x10,%esi
    2816:	4c 89 e7             	mov    %r12,%rdi
    2819:	bb 01 00 00 00       	mov    $0x1,%ebx
    281e:	e8 6d c8 00 00       	call   f090 <memcpy_s>
    2823:	85 c0                	test   %eax,%eax
    2825:	75 24                	jne    284b <sgx_ecall_array_in_out+0xeb>
    2827:	4c 89 e7             	mov    %r12,%rdi
    282a:	31 db                	xor    %ebx,%ebx
    282c:	e8 4f 47 00 00       	call   6f80 <ecall_array_in_out>
    2831:	b9 10 00 00 00       	mov    $0x10,%ecx
    2836:	4c 89 e2             	mov    %r12,%rdx
    2839:	be 10 00 00 00       	mov    $0x10,%esi
    283e:	48 89 ef             	mov    %rbp,%rdi
    2841:	e8 ca c8 00 00       	call   f110 <memcpy_verw_s>
    2846:	85 c0                	test   %eax,%eax
    2848:	0f 95 c3             	setne  %bl
    284b:	4c 89 e7             	mov    %r12,%rdi
    284e:	e8 1d a9 00 00       	call   d170 <dlfree>
    2853:	89 d8                	mov    %ebx,%eax
    2855:	e9 39 ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    285a:	31 ff                	xor    %edi,%edi
    285c:	0f ae e8             	lfence 
    285f:	e8 1c 47 00 00       	call   6f80 <ecall_array_in_out>
    2864:	31 c0                	xor    %eax,%eax
    2866:	e9 28 ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    286b:	b8 03 00 00 00       	mov    $0x3,%eax
    2870:	e9 1e ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    2875:	e8 d6 c2 00 00       	call   eb50 <__stack_chk_fail>
    287a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002880 <sgx_ecall_array_out>:
    2880:	55                   	push   %rbp
    2881:	53                   	push   %rbx
    2882:	48 83 ec 28          	sub    $0x28,%rsp
    2886:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    288d:	00 00 
    288f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2894:	31 c0                	xor    %eax,%eax
    2896:	48 85 ff             	test   %rdi,%rdi
    2899:	74 11                	je     28ac <sgx_ecall_array_out+0x2c>
    289b:	be 08 00 00 00       	mov    $0x8,%esi
    28a0:	48 89 fb             	mov    %rdi,%rbx
    28a3:	e8 88 56 00 00       	call   7f30 <sgx_is_outside_enclave>
    28a8:	85 c0                	test   %eax,%eax
    28aa:	75 24                	jne    28d0 <sgx_ecall_array_out+0x50>
    28ac:	b8 02 00 00 00       	mov    $0x2,%eax
    28b1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    28b6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    28bd:	00 00 
    28bf:	0f 85 c1 00 00 00    	jne    2986 <sgx_ecall_array_out+0x106>
    28c5:	48 83 c4 28          	add    $0x28,%rsp
    28c9:	5b                   	pop    %rbx
    28ca:	5d                   	pop    %rbp
    28cb:	c3                   	ret    
    28cc:	0f 1f 40 00          	nopl   0x0(%rax)
    28d0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    28d5:	48 89 da             	mov    %rbx,%rdx
    28d8:	b9 08 00 00 00       	mov    $0x8,%ecx
    28dd:	be 08 00 00 00       	mov    $0x8,%esi
    28e2:	0f ae e8             	lfence 
    28e5:	e8 a6 c7 00 00       	call   f090 <memcpy_s>
    28ea:	89 c2                	mov    %eax,%edx
    28ec:	b8 01 00 00 00       	mov    $0x1,%eax
    28f1:	85 d2                	test   %edx,%edx
    28f3:	75 bc                	jne    28b1 <sgx_ecall_array_out+0x31>
    28f5:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    28fa:	48 85 db             	test   %rbx,%rbx
    28fd:	74 6c                	je     296b <sgx_ecall_array_out+0xeb>
    28ff:	be 10 00 00 00       	mov    $0x10,%esi
    2904:	48 89 df             	mov    %rbx,%rdi
    2907:	e8 24 56 00 00       	call   7f30 <sgx_is_outside_enclave>
    290c:	89 c2                	mov    %eax,%edx
    290e:	b8 02 00 00 00       	mov    $0x2,%eax
    2913:	85 d2                	test   %edx,%edx
    2915:	74 9a                	je     28b1 <sgx_ecall_array_out+0x31>
    2917:	be 01 00 00 00       	mov    $0x1,%esi
    291c:	bf 10 00 00 00       	mov    $0x10,%edi
    2921:	0f ae e8             	lfence 
    2924:	e8 57 b2 00 00       	call   db80 <calloc>
    2929:	48 85 c0             	test   %rax,%rax
    292c:	48 89 c5             	mov    %rax,%rbp
    292f:	74 4b                	je     297c <sgx_ecall_array_out+0xfc>
    2931:	48 89 ef             	mov    %rbp,%rdi
    2934:	e8 e7 45 00 00       	call   6f20 <ecall_array_out>
    2939:	b9 10 00 00 00       	mov    $0x10,%ecx
    293e:	48 89 ea             	mov    %rbp,%rdx
    2941:	be 10 00 00 00       	mov    $0x10,%esi
    2946:	48 89 df             	mov    %rbx,%rdi
    2949:	e8 c2 c7 00 00       	call   f110 <memcpy_verw_s>
    294e:	85 c0                	test   %eax,%eax
    2950:	48 89 ef             	mov    %rbp,%rdi
    2953:	0f 95 c0             	setne  %al
    2956:	0f b6 c0             	movzbl %al,%eax
    2959:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    295d:	e8 0e a8 00 00       	call   d170 <dlfree>
    2962:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    2966:	e9 46 ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    296b:	31 ff                	xor    %edi,%edi
    296d:	0f ae e8             	lfence 
    2970:	e8 ab 45 00 00       	call   6f20 <ecall_array_out>
    2975:	31 c0                	xor    %eax,%eax
    2977:	e9 35 ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    297c:	b8 03 00 00 00       	mov    $0x3,%eax
    2981:	e9 2b ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    2986:	e8 c5 c1 00 00       	call   eb50 <__stack_chk_fail>
    298b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002990 <sgx_ecall_array_in>:
    2990:	55                   	push   %rbp
    2991:	53                   	push   %rbx
    2992:	48 83 ec 18          	sub    $0x18,%rsp
    2996:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    299d:	00 00 
    299f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    29a4:	31 c0                	xor    %eax,%eax
    29a6:	48 85 ff             	test   %rdi,%rdi
    29a9:	74 11                	je     29bc <sgx_ecall_array_in+0x2c>
    29ab:	be 08 00 00 00       	mov    $0x8,%esi
    29b0:	48 89 fb             	mov    %rdi,%rbx
    29b3:	e8 78 55 00 00       	call   7f30 <sgx_is_outside_enclave>
    29b8:	85 c0                	test   %eax,%eax
    29ba:	75 24                	jne    29e0 <sgx_ecall_array_in+0x50>
    29bc:	b8 02 00 00 00       	mov    $0x2,%eax
    29c1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    29c6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    29cd:	00 00 
    29cf:	0f 85 b3 00 00 00    	jne    2a88 <sgx_ecall_array_in+0xf8>
    29d5:	48 83 c4 18          	add    $0x18,%rsp
    29d9:	5b                   	pop    %rbx
    29da:	5d                   	pop    %rbp
    29db:	c3                   	ret    
    29dc:	0f 1f 40 00          	nopl   0x0(%rax)
    29e0:	48 89 da             	mov    %rbx,%rdx
    29e3:	48 89 e7             	mov    %rsp,%rdi
    29e6:	b9 08 00 00 00       	mov    $0x8,%ecx
    29eb:	be 08 00 00 00       	mov    $0x8,%esi
    29f0:	0f ae e8             	lfence 
    29f3:	e8 98 c6 00 00       	call   f090 <memcpy_s>
    29f8:	89 c2                	mov    %eax,%edx
    29fa:	b8 01 00 00 00       	mov    $0x1,%eax
    29ff:	85 d2                	test   %edx,%edx
    2a01:	75 be                	jne    29c1 <sgx_ecall_array_in+0x31>
    2a03:	48 8b 1c 24          	mov    (%rsp),%rbx
    2a07:	48 85 db             	test   %rbx,%rbx
    2a0a:	74 5f                	je     2a6b <sgx_ecall_array_in+0xdb>
    2a0c:	be 10 00 00 00       	mov    $0x10,%esi
    2a11:	48 89 df             	mov    %rbx,%rdi
    2a14:	e8 17 55 00 00       	call   7f30 <sgx_is_outside_enclave>
    2a19:	89 c2                	mov    %eax,%edx
    2a1b:	b8 02 00 00 00       	mov    $0x2,%eax
    2a20:	85 d2                	test   %edx,%edx
    2a22:	74 9d                	je     29c1 <sgx_ecall_array_in+0x31>
    2a24:	bf 10 00 00 00       	mov    $0x10,%edi
    2a29:	0f ae e8             	lfence 
    2a2c:	e8 cf 8c 00 00       	call   b700 <dlmalloc>
    2a31:	48 89 c5             	mov    %rax,%rbp
    2a34:	b8 03 00 00 00       	mov    $0x3,%eax
    2a39:	48 85 ed             	test   %rbp,%rbp
    2a3c:	74 83                	je     29c1 <sgx_ecall_array_in+0x31>
    2a3e:	b9 10 00 00 00       	mov    $0x10,%ecx
    2a43:	48 89 da             	mov    %rbx,%rdx
    2a46:	be 10 00 00 00       	mov    $0x10,%esi
    2a4b:	48 89 ef             	mov    %rbp,%rdi
    2a4e:	e8 3d c6 00 00       	call   f090 <memcpy_s>
    2a53:	85 c0                	test   %eax,%eax
    2a55:	74 25                	je     2a7c <sgx_ecall_array_in+0xec>
    2a57:	bb 01 00 00 00       	mov    $0x1,%ebx
    2a5c:	48 89 ef             	mov    %rbp,%rdi
    2a5f:	e8 0c a7 00 00       	call   d170 <dlfree>
    2a64:	89 d8                	mov    %ebx,%eax
    2a66:	e9 56 ff ff ff       	jmp    29c1 <sgx_ecall_array_in+0x31>
    2a6b:	31 ff                	xor    %edi,%edi
    2a6d:	0f ae e8             	lfence 
    2a70:	e8 5b 44 00 00       	call   6ed0 <ecall_array_in>
    2a75:	31 c0                	xor    %eax,%eax
    2a77:	e9 45 ff ff ff       	jmp    29c1 <sgx_ecall_array_in+0x31>
    2a7c:	48 89 ef             	mov    %rbp,%rdi
    2a7f:	31 db                	xor    %ebx,%ebx
    2a81:	e8 4a 44 00 00       	call   6ed0 <ecall_array_in>
    2a86:	eb d4                	jmp    2a5c <sgx_ecall_array_in+0xcc>
    2a88:	e8 c3 c0 00 00       	call   eb50 <__stack_chk_fail>
    2a8d:	0f 1f 00             	nopl   (%rax)

0000000000002a90 <sgx_ecall_array_user_check>:
    2a90:	53                   	push   %rbx
    2a91:	48 83 ec 10          	sub    $0x10,%rsp
    2a95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2a9c:	00 00 
    2a9e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2aa3:	31 c0                	xor    %eax,%eax
    2aa5:	48 85 ff             	test   %rdi,%rdi
    2aa8:	74 11                	je     2abb <sgx_ecall_array_user_check+0x2b>
    2aaa:	be 08 00 00 00       	mov    $0x8,%esi
    2aaf:	48 89 fb             	mov    %rdi,%rbx
    2ab2:	e8 79 54 00 00       	call   7f30 <sgx_is_outside_enclave>
    2ab7:	85 c0                	test   %eax,%eax
    2ab9:	75 25                	jne    2ae0 <sgx_ecall_array_user_check+0x50>
    2abb:	b8 02 00 00 00       	mov    $0x2,%eax
    2ac0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2ac5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2acc:	00 00 
    2ace:	75 40                	jne    2b10 <sgx_ecall_array_user_check+0x80>
    2ad0:	48 83 c4 10          	add    $0x10,%rsp
    2ad4:	5b                   	pop    %rbx
    2ad5:	c3                   	ret    
    2ad6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2add:	00 00 00 
    2ae0:	48 89 da             	mov    %rbx,%rdx
    2ae3:	48 89 e7             	mov    %rsp,%rdi
    2ae6:	b9 08 00 00 00       	mov    $0x8,%ecx
    2aeb:	be 08 00 00 00       	mov    $0x8,%esi
    2af0:	0f ae e8             	lfence 
    2af3:	e8 98 c5 00 00       	call   f090 <memcpy_s>
    2af8:	89 c2                	mov    %eax,%edx
    2afa:	b8 01 00 00 00       	mov    $0x1,%eax
    2aff:	85 d2                	test   %edx,%edx
    2b01:	75 bd                	jne    2ac0 <sgx_ecall_array_user_check+0x30>
    2b03:	48 8b 3c 24          	mov    (%rsp),%rdi
    2b07:	e8 64 43 00 00       	call   6e70 <ecall_array_user_check>
    2b0c:	31 c0                	xor    %eax,%eax
    2b0e:	eb b0                	jmp    2ac0 <sgx_ecall_array_user_check+0x30>
    2b10:	e8 3b c0 00 00       	call   eb50 <__stack_chk_fail>
    2b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1c:	00 00 00 
    2b1f:	90                   	nop

0000000000002b20 <sgx_ecall_pointer_isptr_readonly>:
    2b20:	41 54                	push   %r12
    2b22:	55                   	push   %rbp
    2b23:	53                   	push   %rbx
    2b24:	48 83 ec 20          	sub    $0x20,%rsp
    2b28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2b2f:	00 00 
    2b31:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2b36:	31 c0                	xor    %eax,%eax
    2b38:	48 85 ff             	test   %rdi,%rdi
    2b3b:	74 11                	je     2b4e <sgx_ecall_pointer_isptr_readonly+0x2e>
    2b3d:	be 10 00 00 00       	mov    $0x10,%esi
    2b42:	48 89 fb             	mov    %rdi,%rbx
    2b45:	e8 e6 53 00 00       	call   7f30 <sgx_is_outside_enclave>
    2b4a:	85 c0                	test   %eax,%eax
    2b4c:	75 22                	jne    2b70 <sgx_ecall_pointer_isptr_readonly+0x50>
    2b4e:	b8 02 00 00 00       	mov    $0x2,%eax
    2b53:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2b58:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2b5f:	00 00 
    2b61:	0f 85 cd 00 00 00    	jne    2c34 <sgx_ecall_pointer_isptr_readonly+0x114>
    2b67:	48 83 c4 20          	add    $0x20,%rsp
    2b6b:	5b                   	pop    %rbx
    2b6c:	5d                   	pop    %rbp
    2b6d:	41 5c                	pop    %r12
    2b6f:	c3                   	ret    
    2b70:	48 89 da             	mov    %rbx,%rdx
    2b73:	48 89 e7             	mov    %rsp,%rdi
    2b76:	b9 10 00 00 00       	mov    $0x10,%ecx
    2b7b:	be 10 00 00 00       	mov    $0x10,%esi
    2b80:	0f ae e8             	lfence 
    2b83:	e8 08 c5 00 00       	call   f090 <memcpy_s>
    2b88:	89 c2                	mov    %eax,%edx
    2b8a:	b8 01 00 00 00       	mov    $0x1,%eax
    2b8f:	85 d2                	test   %edx,%edx
    2b91:	75 c0                	jne    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2b93:	48 8b 1c 24          	mov    (%rsp),%rbx
    2b97:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2b9c:	48 85 db             	test   %rbx,%rbx
    2b9f:	74 60                	je     2c01 <sgx_ecall_pointer_isptr_readonly+0xe1>
    2ba1:	48 89 ee             	mov    %rbp,%rsi
    2ba4:	48 89 df             	mov    %rbx,%rdi
    2ba7:	e8 84 53 00 00       	call   7f30 <sgx_is_outside_enclave>
    2bac:	89 c2                	mov    %eax,%edx
    2bae:	b8 02 00 00 00       	mov    $0x2,%eax
    2bb3:	85 d2                	test   %edx,%edx
    2bb5:	74 9c                	je     2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2bb7:	48 85 ed             	test   %rbp,%rbp
    2bba:	0f ae e8             	lfence 
    2bbd:	74 65                	je     2c24 <sgx_ecall_pointer_isptr_readonly+0x104>
    2bbf:	48 89 ef             	mov    %rbp,%rdi
    2bc2:	e8 39 8b 00 00       	call   b700 <dlmalloc>
    2bc7:	49 89 c4             	mov    %rax,%r12
    2bca:	b8 03 00 00 00       	mov    $0x3,%eax
    2bcf:	4d 85 e4             	test   %r12,%r12
    2bd2:	0f 84 7b ff ff ff    	je     2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2bd8:	48 89 e9             	mov    %rbp,%rcx
    2bdb:	48 89 da             	mov    %rbx,%rdx
    2bde:	48 89 ee             	mov    %rbp,%rsi
    2be1:	4c 89 e7             	mov    %r12,%rdi
    2be4:	e8 a7 c4 00 00       	call   f090 <memcpy_s>
    2be9:	85 c0                	test   %eax,%eax
    2beb:	74 28                	je     2c15 <sgx_ecall_pointer_isptr_readonly+0xf5>
    2bed:	bb 01 00 00 00       	mov    $0x1,%ebx
    2bf2:	4c 89 e7             	mov    %r12,%rdi
    2bf5:	e8 76 a5 00 00       	call   d170 <dlfree>
    2bfa:	89 d8                	mov    %ebx,%eax
    2bfc:	e9 52 ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c01:	48 89 ee             	mov    %rbp,%rsi
    2c04:	31 ff                	xor    %edi,%edi
    2c06:	0f ae e8             	lfence 
    2c09:	e8 42 42 00 00       	call   6e50 <ecall_pointer_isptr_readonly>
    2c0e:	31 c0                	xor    %eax,%eax
    2c10:	e9 3e ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c15:	48 89 ee             	mov    %rbp,%rsi
    2c18:	4c 89 e7             	mov    %r12,%rdi
    2c1b:	31 db                	xor    %ebx,%ebx
    2c1d:	e8 2e 42 00 00       	call   6e50 <ecall_pointer_isptr_readonly>
    2c22:	eb ce                	jmp    2bf2 <sgx_ecall_pointer_isptr_readonly+0xd2>
    2c24:	31 f6                	xor    %esi,%esi
    2c26:	31 ff                	xor    %edi,%edi
    2c28:	e8 23 42 00 00       	call   6e50 <ecall_pointer_isptr_readonly>
    2c2d:	31 c0                	xor    %eax,%eax
    2c2f:	e9 1f ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c34:	e8 17 bf 00 00       	call   eb50 <__stack_chk_fail>
    2c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c40 <sgx_ecall_pointer_count>:
    2c40:	41 56                	push   %r14
    2c42:	41 55                	push   %r13
    2c44:	41 54                	push   %r12
    2c46:	55                   	push   %rbp
    2c47:	53                   	push   %rbx
    2c48:	48 83 ec 20          	sub    $0x20,%rsp
    2c4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c53:	00 00 
    2c55:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2c5a:	31 c0                	xor    %eax,%eax
    2c5c:	48 85 ff             	test   %rdi,%rdi
    2c5f:	74 11                	je     2c72 <sgx_ecall_pointer_count+0x32>
    2c61:	be 10 00 00 00       	mov    $0x10,%esi
    2c66:	48 89 fb             	mov    %rdi,%rbx
    2c69:	e8 c2 52 00 00       	call   7f30 <sgx_is_outside_enclave>
    2c6e:	85 c0                	test   %eax,%eax
    2c70:	75 2e                	jne    2ca0 <sgx_ecall_pointer_count+0x60>
    2c72:	b8 02 00 00 00       	mov    $0x2,%eax
    2c77:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2c7c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2c83:	00 00 
    2c85:	0f 85 e2 00 00 00    	jne    2d6d <sgx_ecall_pointer_count+0x12d>
    2c8b:	48 83 c4 20          	add    $0x20,%rsp
    2c8f:	5b                   	pop    %rbx
    2c90:	5d                   	pop    %rbp
    2c91:	41 5c                	pop    %r12
    2c93:	41 5d                	pop    %r13
    2c95:	41 5e                	pop    %r14
    2c97:	c3                   	ret    
    2c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2c9f:	00 
    2ca0:	48 89 da             	mov    %rbx,%rdx
    2ca3:	48 89 e7             	mov    %rsp,%rdi
    2ca6:	b9 10 00 00 00       	mov    $0x10,%ecx
    2cab:	be 10 00 00 00       	mov    $0x10,%esi
    2cb0:	0f ae e8             	lfence 
    2cb3:	e8 d8 c3 00 00       	call   f090 <memcpy_s>
    2cb8:	89 c2                	mov    %eax,%edx
    2cba:	b8 01 00 00 00       	mov    $0x1,%eax
    2cbf:	85 d2                	test   %edx,%edx
    2cc1:	75 b4                	jne    2c77 <sgx_ecall_pointer_count+0x37>
    2cc3:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
    2cc7:	85 ed                	test   %ebp,%ebp
    2cc9:	78 a7                	js     2c72 <sgx_ecall_pointer_count+0x32>
    2ccb:	4c 8b 2c 24          	mov    (%rsp),%r13
    2ccf:	4d 85 ed             	test   %r13,%r13
    2cd2:	0f 84 82 00 00 00    	je     2d5a <sgx_ecall_pointer_count+0x11a>
    2cd8:	4c 63 e5             	movslq %ebp,%r12
    2cdb:	4c 89 ef             	mov    %r13,%rdi
    2cde:	49 c1 e4 02          	shl    $0x2,%r12
    2ce2:	4c 89 e6             	mov    %r12,%rsi
    2ce5:	e8 46 52 00 00       	call   7f30 <sgx_is_outside_enclave>
    2cea:	85 c0                	test   %eax,%eax
    2cec:	74 84                	je     2c72 <sgx_ecall_pointer_count+0x32>
    2cee:	4d 85 e4             	test   %r12,%r12
    2cf1:	0f ae e8             	lfence 
    2cf4:	74 67                	je     2d5d <sgx_ecall_pointer_count+0x11d>
    2cf6:	4c 89 e7             	mov    %r12,%rdi
    2cf9:	e8 02 8a 00 00       	call   b700 <dlmalloc>
    2cfe:	49 89 c6             	mov    %rax,%r14
    2d01:	b8 03 00 00 00       	mov    $0x3,%eax
    2d06:	4d 85 f6             	test   %r14,%r14
    2d09:	0f 84 68 ff ff ff    	je     2c77 <sgx_ecall_pointer_count+0x37>
    2d0f:	4c 89 e1             	mov    %r12,%rcx
    2d12:	4c 89 ea             	mov    %r13,%rdx
    2d15:	4c 89 e6             	mov    %r12,%rsi
    2d18:	4c 89 f7             	mov    %r14,%rdi
    2d1b:	bb 01 00 00 00       	mov    $0x1,%ebx
    2d20:	e8 6b c3 00 00       	call   f090 <memcpy_s>
    2d25:	85 c0                	test   %eax,%eax
    2d27:	75 22                	jne    2d4b <sgx_ecall_pointer_count+0x10b>
    2d29:	89 ee                	mov    %ebp,%esi
    2d2b:	4c 89 f7             	mov    %r14,%rdi
    2d2e:	31 db                	xor    %ebx,%ebx
    2d30:	e8 fb 40 00 00       	call   6e30 <ecall_pointer_count>
    2d35:	4c 89 e1             	mov    %r12,%rcx
    2d38:	4c 89 f2             	mov    %r14,%rdx
    2d3b:	4c 89 e6             	mov    %r12,%rsi
    2d3e:	4c 89 ef             	mov    %r13,%rdi
    2d41:	e8 ca c3 00 00       	call   f110 <memcpy_verw_s>
    2d46:	85 c0                	test   %eax,%eax
    2d48:	0f 95 c3             	setne  %bl
    2d4b:	4c 89 f7             	mov    %r14,%rdi
    2d4e:	e8 1d a4 00 00       	call   d170 <dlfree>
    2d53:	89 d8                	mov    %ebx,%eax
    2d55:	e9 1d ff ff ff       	jmp    2c77 <sgx_ecall_pointer_count+0x37>
    2d5a:	0f ae e8             	lfence 
    2d5d:	89 ee                	mov    %ebp,%esi
    2d5f:	31 ff                	xor    %edi,%edi
    2d61:	e8 ca 40 00 00       	call   6e30 <ecall_pointer_count>
    2d66:	31 c0                	xor    %eax,%eax
    2d68:	e9 0a ff ff ff       	jmp    2c77 <sgx_ecall_pointer_count+0x37>
    2d6d:	e8 de bd 00 00       	call   eb50 <__stack_chk_fail>
    2d72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d79:	00 00 00 
    2d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002d80 <sgx_ecall_pointer_size>:
    2d80:	41 55                	push   %r13
    2d82:	41 54                	push   %r12
    2d84:	55                   	push   %rbp
    2d85:	53                   	push   %rbx
    2d86:	48 83 ec 28          	sub    $0x28,%rsp
    2d8a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2d91:	00 00 
    2d93:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2d98:	31 c0                	xor    %eax,%eax
    2d9a:	48 85 ff             	test   %rdi,%rdi
    2d9d:	74 11                	je     2db0 <sgx_ecall_pointer_size+0x30>
    2d9f:	be 10 00 00 00       	mov    $0x10,%esi
    2da4:	48 89 fb             	mov    %rdi,%rbx
    2da7:	e8 84 51 00 00       	call   7f30 <sgx_is_outside_enclave>
    2dac:	85 c0                	test   %eax,%eax
    2dae:	75 28                	jne    2dd8 <sgx_ecall_pointer_size+0x58>
    2db0:	b8 02 00 00 00       	mov    $0x2,%eax
    2db5:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2dba:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2dc1:	00 00 
    2dc3:	0f 85 db 00 00 00    	jne    2ea4 <sgx_ecall_pointer_size+0x124>
    2dc9:	48 83 c4 28          	add    $0x28,%rsp
    2dcd:	5b                   	pop    %rbx
    2dce:	5d                   	pop    %rbp
    2dcf:	41 5c                	pop    %r12
    2dd1:	41 5d                	pop    %r13
    2dd3:	c3                   	ret    
    2dd4:	0f 1f 40 00          	nopl   0x0(%rax)
    2dd8:	48 89 da             	mov    %rbx,%rdx
    2ddb:	48 89 e7             	mov    %rsp,%rdi
    2dde:	b9 10 00 00 00       	mov    $0x10,%ecx
    2de3:	be 10 00 00 00       	mov    $0x10,%esi
    2de8:	0f ae e8             	lfence 
    2deb:	e8 a0 c2 00 00       	call   f090 <memcpy_s>
    2df0:	89 c2                	mov    %eax,%edx
    2df2:	b8 01 00 00 00       	mov    $0x1,%eax
    2df7:	85 d2                	test   %edx,%edx
    2df9:	75 ba                	jne    2db5 <sgx_ecall_pointer_size+0x35>
    2dfb:	4c 8b 24 24          	mov    (%rsp),%r12
    2dff:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2e04:	4d 85 e4             	test   %r12,%r12
    2e07:	0f 84 83 00 00 00    	je     2e90 <sgx_ecall_pointer_size+0x110>
    2e0d:	48 89 ee             	mov    %rbp,%rsi
    2e10:	4c 89 e7             	mov    %r12,%rdi
    2e13:	e8 18 51 00 00       	call   7f30 <sgx_is_outside_enclave>
    2e18:	89 c2                	mov    %eax,%edx
    2e1a:	b8 02 00 00 00       	mov    $0x2,%eax
    2e1f:	85 d2                	test   %edx,%edx
    2e21:	74 92                	je     2db5 <sgx_ecall_pointer_size+0x35>
    2e23:	48 85 ed             	test   %rbp,%rbp
    2e26:	0f ae e8             	lfence 
    2e29:	74 68                	je     2e93 <sgx_ecall_pointer_size+0x113>
    2e2b:	48 89 ef             	mov    %rbp,%rdi
    2e2e:	e8 cd 88 00 00       	call   b700 <dlmalloc>
    2e33:	49 89 c5             	mov    %rax,%r13
    2e36:	b8 03 00 00 00       	mov    $0x3,%eax
    2e3b:	4d 85 ed             	test   %r13,%r13
    2e3e:	0f 84 71 ff ff ff    	je     2db5 <sgx_ecall_pointer_size+0x35>
    2e44:	48 89 e9             	mov    %rbp,%rcx
    2e47:	4c 89 e2             	mov    %r12,%rdx
    2e4a:	48 89 ee             	mov    %rbp,%rsi
    2e4d:	4c 89 ef             	mov    %r13,%rdi
    2e50:	bb 01 00 00 00       	mov    $0x1,%ebx
    2e55:	e8 36 c2 00 00       	call   f090 <memcpy_s>
    2e5a:	85 c0                	test   %eax,%eax
    2e5c:	75 23                	jne    2e81 <sgx_ecall_pointer_size+0x101>
    2e5e:	48 89 ee             	mov    %rbp,%rsi
    2e61:	4c 89 ef             	mov    %r13,%rdi
    2e64:	31 db                	xor    %ebx,%ebx
    2e66:	e8 f5 3f 00 00       	call   6e60 <ecall_pointer_size>
    2e6b:	48 89 e9             	mov    %rbp,%rcx
    2e6e:	4c 89 ea             	mov    %r13,%rdx
    2e71:	48 89 ee             	mov    %rbp,%rsi
    2e74:	4c 89 e7             	mov    %r12,%rdi
    2e77:	e8 94 c2 00 00       	call   f110 <memcpy_verw_s>
    2e7c:	85 c0                	test   %eax,%eax
    2e7e:	0f 95 c3             	setne  %bl
    2e81:	4c 89 ef             	mov    %r13,%rdi
    2e84:	e8 e7 a2 00 00       	call   d170 <dlfree>
    2e89:	89 d8                	mov    %ebx,%eax
    2e8b:	e9 25 ff ff ff       	jmp    2db5 <sgx_ecall_pointer_size+0x35>
    2e90:	0f ae e8             	lfence 
    2e93:	48 89 ee             	mov    %rbp,%rsi
    2e96:	31 ff                	xor    %edi,%edi
    2e98:	e8 c3 3f 00 00       	call   6e60 <ecall_pointer_size>
    2e9d:	31 c0                	xor    %eax,%eax
    2e9f:	e9 11 ff ff ff       	jmp    2db5 <sgx_ecall_pointer_size+0x35>
    2ea4:	e8 a7 bc 00 00       	call   eb50 <__stack_chk_fail>
    2ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002eb0 <sgx_ecall_pointer_string_const>:
    2eb0:	41 54                	push   %r12
    2eb2:	55                   	push   %rbp
    2eb3:	53                   	push   %rbx
    2eb4:	48 83 ec 20          	sub    $0x20,%rsp
    2eb8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2ebf:	00 00 
    2ec1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2ec6:	31 c0                	xor    %eax,%eax
    2ec8:	48 85 ff             	test   %rdi,%rdi
    2ecb:	74 11                	je     2ede <sgx_ecall_pointer_string_const+0x2e>
    2ecd:	be 10 00 00 00       	mov    $0x10,%esi
    2ed2:	48 89 fb             	mov    %rdi,%rbx
    2ed5:	e8 56 50 00 00       	call   7f30 <sgx_is_outside_enclave>
    2eda:	85 c0                	test   %eax,%eax
    2edc:	75 22                	jne    2f00 <sgx_ecall_pointer_string_const+0x50>
    2ede:	b8 02 00 00 00       	mov    $0x2,%eax
    2ee3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2ee8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2eef:	00 00 
    2ef1:	0f 85 17 01 00 00    	jne    300e <sgx_ecall_pointer_string_const+0x15e>
    2ef7:	48 83 c4 20          	add    $0x20,%rsp
    2efb:	5b                   	pop    %rbx
    2efc:	5d                   	pop    %rbp
    2efd:	41 5c                	pop    %r12
    2eff:	c3                   	ret    
    2f00:	48 89 da             	mov    %rbx,%rdx
    2f03:	48 89 e7             	mov    %rsp,%rdi
    2f06:	b9 10 00 00 00       	mov    $0x10,%ecx
    2f0b:	be 10 00 00 00       	mov    $0x10,%esi
    2f10:	0f ae e8             	lfence 
    2f13:	e8 78 c1 00 00       	call   f090 <memcpy_s>
    2f18:	89 c2                	mov    %eax,%edx
    2f1a:	b8 01 00 00 00       	mov    $0x1,%eax
    2f1f:	85 d2                	test   %edx,%edx
    2f21:	75 c0                	jne    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f23:	48 8b 1c 24          	mov    (%rsp),%rbx
    2f27:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2f2c:	48 85 db             	test   %rbx,%rbx
    2f2f:	0f 84 ae 00 00 00    	je     2fe3 <sgx_ecall_pointer_string_const+0x133>
    2f35:	48 89 ee             	mov    %rbp,%rsi
    2f38:	48 89 df             	mov    %rbx,%rdi
    2f3b:	e8 f0 4f 00 00       	call   7f30 <sgx_is_outside_enclave>
    2f40:	89 c2                	mov    %eax,%edx
    2f42:	b8 02 00 00 00       	mov    $0x2,%eax
    2f47:	85 d2                	test   %edx,%edx
    2f49:	74 98                	je     2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f4b:	48 85 ed             	test   %rbp,%rbp
    2f4e:	0f ae e8             	lfence 
    2f51:	0f 84 9d 00 00 00    	je     2ff4 <sgx_ecall_pointer_string_const+0x144>
    2f57:	48 89 ef             	mov    %rbp,%rdi
    2f5a:	e8 a1 87 00 00       	call   b700 <dlmalloc>
    2f5f:	49 89 c4             	mov    %rax,%r12
    2f62:	b8 03 00 00 00       	mov    $0x3,%eax
    2f67:	4d 85 e4             	test   %r12,%r12
    2f6a:	0f 84 73 ff ff ff    	je     2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f70:	48 89 e9             	mov    %rbp,%rcx
    2f73:	48 89 da             	mov    %rbx,%rdx
    2f76:	48 89 ee             	mov    %rbp,%rsi
    2f79:	4c 89 e7             	mov    %r12,%rdi
    2f7c:	e8 0f c1 00 00       	call   f090 <memcpy_s>
    2f81:	85 c0                	test   %eax,%eax
    2f83:	75 4a                	jne    2fcf <sgx_ecall_pointer_string_const+0x11f>
    2f85:	41 c6 44 2c ff 00    	movb   $0x0,-0x1(%r12,%rbp,1)
    2f8b:	4c 89 e2             	mov    %r12,%rdx
    2f8e:	8b 0a                	mov    (%rdx),%ecx
    2f90:	48 83 c2 04          	add    $0x4,%rdx
    2f94:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    2f9a:	f7 d1                	not    %ecx
    2f9c:	21 c8                	and    %ecx,%eax
    2f9e:	25 80 80 80 80       	and    $0x80808080,%eax
    2fa3:	74 e9                	je     2f8e <sgx_ecall_pointer_string_const+0xde>
    2fa5:	89 c1                	mov    %eax,%ecx
    2fa7:	c1 e9 10             	shr    $0x10,%ecx
    2faa:	a9 80 80 00 00       	test   $0x8080,%eax
    2faf:	0f 44 c1             	cmove  %ecx,%eax
    2fb2:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    2fb6:	89 c6                	mov    %eax,%esi
    2fb8:	48 0f 44 d1          	cmove  %rcx,%rdx
    2fbc:	40 00 c6             	add    %al,%sil
    2fbf:	48 83 da 03          	sbb    $0x3,%rdx
    2fc3:	4c 29 e2             	sub    %r12,%rdx
    2fc6:	48 83 c2 01          	add    $0x1,%rdx
    2fca:	48 39 d5             	cmp    %rdx,%rbp
    2fcd:	74 33                	je     3002 <sgx_ecall_pointer_string_const+0x152>
    2fcf:	bb 01 00 00 00       	mov    $0x1,%ebx
    2fd4:	4c 89 e7             	mov    %r12,%rdi
    2fd7:	e8 94 a1 00 00       	call   d170 <dlfree>
    2fdc:	89 d8                	mov    %ebx,%eax
    2fde:	e9 00 ff ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2fe3:	31 ff                	xor    %edi,%edi
    2fe5:	0f ae e8             	lfence 
    2fe8:	e8 03 3e 00 00       	call   6df0 <ecall_pointer_string_const>
    2fed:	31 c0                	xor    %eax,%eax
    2fef:	e9 ef fe ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2ff4:	31 ff                	xor    %edi,%edi
    2ff6:	e8 f5 3d 00 00       	call   6df0 <ecall_pointer_string_const>
    2ffb:	31 c0                	xor    %eax,%eax
    2ffd:	e9 e1 fe ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    3002:	4c 89 e7             	mov    %r12,%rdi
    3005:	31 db                	xor    %ebx,%ebx
    3007:	e8 e4 3d 00 00       	call   6df0 <ecall_pointer_string_const>
    300c:	eb c6                	jmp    2fd4 <sgx_ecall_pointer_string_const+0x124>
    300e:	e8 3d bb 00 00       	call   eb50 <__stack_chk_fail>
    3013:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    301a:	00 00 00 
    301d:	0f 1f 00             	nopl   (%rax)

0000000000003020 <sgx_ecall_pointer_string>:
    3020:	41 55                	push   %r13
    3022:	41 54                	push   %r12
    3024:	55                   	push   %rbp
    3025:	53                   	push   %rbx
    3026:	48 83 ec 28          	sub    $0x28,%rsp
    302a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3031:	00 00 
    3033:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3038:	31 c0                	xor    %eax,%eax
    303a:	48 85 ff             	test   %rdi,%rdi
    303d:	74 11                	je     3050 <sgx_ecall_pointer_string+0x30>
    303f:	be 10 00 00 00       	mov    $0x10,%esi
    3044:	48 89 fb             	mov    %rdi,%rbx
    3047:	e8 e4 4e 00 00       	call   7f30 <sgx_is_outside_enclave>
    304c:	85 c0                	test   %eax,%eax
    304e:	75 28                	jne    3078 <sgx_ecall_pointer_string+0x58>
    3050:	b8 02 00 00 00       	mov    $0x2,%eax
    3055:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    305a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3061:	00 00 
    3063:	0f 85 6d 01 00 00    	jne    31d6 <sgx_ecall_pointer_string+0x1b6>
    3069:	48 83 c4 28          	add    $0x28,%rsp
    306d:	5b                   	pop    %rbx
    306e:	5d                   	pop    %rbp
    306f:	41 5c                	pop    %r12
    3071:	41 5d                	pop    %r13
    3073:	c3                   	ret    
    3074:	0f 1f 40 00          	nopl   0x0(%rax)
    3078:	48 89 da             	mov    %rbx,%rdx
    307b:	48 89 e7             	mov    %rsp,%rdi
    307e:	b9 10 00 00 00       	mov    $0x10,%ecx
    3083:	be 10 00 00 00       	mov    $0x10,%esi
    3088:	0f ae e8             	lfence 
    308b:	e8 00 c0 00 00       	call   f090 <memcpy_s>
    3090:	89 c2                	mov    %eax,%edx
    3092:	b8 01 00 00 00       	mov    $0x1,%eax
    3097:	85 d2                	test   %edx,%edx
    3099:	75 ba                	jne    3055 <sgx_ecall_pointer_string+0x35>
    309b:	48 8b 1c 24          	mov    (%rsp),%rbx
    309f:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    30a4:	48 85 db             	test   %rbx,%rbx
    30a7:	0f 84 b2 00 00 00    	je     315f <sgx_ecall_pointer_string+0x13f>
    30ad:	48 89 ee             	mov    %rbp,%rsi
    30b0:	48 89 df             	mov    %rbx,%rdi
    30b3:	e8 78 4e 00 00       	call   7f30 <sgx_is_outside_enclave>
    30b8:	89 c2                	mov    %eax,%edx
    30ba:	b8 02 00 00 00       	mov    $0x2,%eax
    30bf:	85 d2                	test   %edx,%edx
    30c1:	74 92                	je     3055 <sgx_ecall_pointer_string+0x35>
    30c3:	48 85 ed             	test   %rbp,%rbp
    30c6:	0f ae e8             	lfence 
    30c9:	0f 84 93 00 00 00    	je     3162 <sgx_ecall_pointer_string+0x142>
    30cf:	48 89 ef             	mov    %rbp,%rdi
    30d2:	e8 29 86 00 00       	call   b700 <dlmalloc>
    30d7:	49 89 c4             	mov    %rax,%r12
    30da:	b8 03 00 00 00       	mov    $0x3,%eax
    30df:	4d 85 e4             	test   %r12,%r12
    30e2:	0f 84 6d ff ff ff    	je     3055 <sgx_ecall_pointer_string+0x35>
    30e8:	48 89 e9             	mov    %rbp,%rcx
    30eb:	48 89 da             	mov    %rbx,%rdx
    30ee:	48 89 ee             	mov    %rbp,%rsi
    30f1:	4c 89 e7             	mov    %r12,%rdi
    30f4:	e8 97 bf 00 00       	call   f090 <memcpy_s>
    30f9:	85 c0                	test   %eax,%eax
    30fb:	75 4e                	jne    314b <sgx_ecall_pointer_string+0x12b>
    30fd:	4d 8d 6c 2c ff       	lea    -0x1(%r12,%rbp,1),%r13
    3102:	4c 89 e2             	mov    %r12,%rdx
    3105:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
    310a:	8b 0a                	mov    (%rdx),%ecx
    310c:	48 83 c2 04          	add    $0x4,%rdx
    3110:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    3116:	f7 d1                	not    %ecx
    3118:	21 c8                	and    %ecx,%eax
    311a:	25 80 80 80 80       	and    $0x80808080,%eax
    311f:	74 e9                	je     310a <sgx_ecall_pointer_string+0xea>
    3121:	89 c1                	mov    %eax,%ecx
    3123:	c1 e9 10             	shr    $0x10,%ecx
    3126:	a9 80 80 00 00       	test   $0x8080,%eax
    312b:	0f 44 c1             	cmove  %ecx,%eax
    312e:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3132:	89 c6                	mov    %eax,%esi
    3134:	48 0f 44 d1          	cmove  %rcx,%rdx
    3138:	40 00 c6             	add    %al,%sil
    313b:	48 83 da 03          	sbb    $0x3,%rdx
    313f:	4c 29 e2             	sub    %r12,%rdx
    3142:	48 83 c2 01          	add    $0x1,%rdx
    3146:	48 39 d5             	cmp    %rdx,%rbp
    3149:	74 25                	je     3170 <sgx_ecall_pointer_string+0x150>
    314b:	bb 01 00 00 00       	mov    $0x1,%ebx
    3150:	4c 89 e7             	mov    %r12,%rdi
    3153:	e8 18 a0 00 00       	call   d170 <dlfree>
    3158:	89 d8                	mov    %ebx,%eax
    315a:	e9 f6 fe ff ff       	jmp    3055 <sgx_ecall_pointer_string+0x35>
    315f:	0f ae e8             	lfence 
    3162:	31 ff                	xor    %edi,%edi
    3164:	e8 67 3c 00 00       	call   6dd0 <ecall_pointer_string>
    3169:	31 c0                	xor    %eax,%eax
    316b:	e9 e5 fe ff ff       	jmp    3055 <sgx_ecall_pointer_string+0x35>
    3170:	4c 89 e7             	mov    %r12,%rdi
    3173:	e8 58 3c 00 00       	call   6dd0 <ecall_pointer_string>
    3178:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
    317d:	4c 89 e2             	mov    %r12,%rdx
    3180:	8b 0a                	mov    (%rdx),%ecx
    3182:	48 83 c2 04          	add    $0x4,%rdx
    3186:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    318c:	f7 d1                	not    %ecx
    318e:	21 c8                	and    %ecx,%eax
    3190:	25 80 80 80 80       	and    $0x80808080,%eax
    3195:	74 e9                	je     3180 <sgx_ecall_pointer_string+0x160>
    3197:	89 c1                	mov    %eax,%ecx
    3199:	48 89 df             	mov    %rbx,%rdi
    319c:	c1 e9 10             	shr    $0x10,%ecx
    319f:	a9 80 80 00 00       	test   $0x8080,%eax
    31a4:	0f 44 c1             	cmove  %ecx,%eax
    31a7:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    31ab:	89 c6                	mov    %eax,%esi
    31ad:	48 0f 44 d1          	cmove  %rcx,%rdx
    31b1:	40 00 c6             	add    %al,%sil
    31b4:	48 83 da 03          	sbb    $0x3,%rdx
    31b8:	31 db                	xor    %ebx,%ebx
    31ba:	4c 29 e2             	sub    %r12,%rdx
    31bd:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    31c1:	4c 89 e2             	mov    %r12,%rdx
    31c4:	48 89 f1             	mov    %rsi,%rcx
    31c7:	e8 44 bf 00 00       	call   f110 <memcpy_verw_s>
    31cc:	85 c0                	test   %eax,%eax
    31ce:	0f 95 c3             	setne  %bl
    31d1:	e9 7a ff ff ff       	jmp    3150 <sgx_ecall_pointer_string+0x130>
    31d6:	e8 75 b9 00 00       	call   eb50 <__stack_chk_fail>
    31db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000031e0 <sgx_ecall_pointer_in_out>:
    31e0:	41 54                	push   %r12
    31e2:	55                   	push   %rbp
    31e3:	53                   	push   %rbx
    31e4:	48 83 ec 10          	sub    $0x10,%rsp
    31e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    31ef:	00 00 
    31f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    31f6:	31 c0                	xor    %eax,%eax
    31f8:	48 85 ff             	test   %rdi,%rdi
    31fb:	74 11                	je     320e <sgx_ecall_pointer_in_out+0x2e>
    31fd:	be 08 00 00 00       	mov    $0x8,%esi
    3202:	48 89 fb             	mov    %rdi,%rbx
    3205:	e8 26 4d 00 00       	call   7f30 <sgx_is_outside_enclave>
    320a:	85 c0                	test   %eax,%eax
    320c:	75 22                	jne    3230 <sgx_ecall_pointer_in_out+0x50>
    320e:	b8 02 00 00 00       	mov    $0x2,%eax
    3213:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3218:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    321f:	00 00 
    3221:	0f 85 ce 00 00 00    	jne    32f5 <sgx_ecall_pointer_in_out+0x115>
    3227:	48 83 c4 10          	add    $0x10,%rsp
    322b:	5b                   	pop    %rbx
    322c:	5d                   	pop    %rbp
    322d:	41 5c                	pop    %r12
    322f:	c3                   	ret    
    3230:	48 89 da             	mov    %rbx,%rdx
    3233:	48 89 e7             	mov    %rsp,%rdi
    3236:	b9 08 00 00 00       	mov    $0x8,%ecx
    323b:	be 08 00 00 00       	mov    $0x8,%esi
    3240:	0f ae e8             	lfence 
    3243:	e8 48 be 00 00       	call   f090 <memcpy_s>
    3248:	89 c2                	mov    %eax,%edx
    324a:	b8 01 00 00 00       	mov    $0x1,%eax
    324f:	85 d2                	test   %edx,%edx
    3251:	75 c0                	jne    3213 <sgx_ecall_pointer_in_out+0x33>
    3253:	48 8b 2c 24          	mov    (%rsp),%rbp
    3257:	48 85 ed             	test   %rbp,%rbp
    325a:	74 7e                	je     32da <sgx_ecall_pointer_in_out+0xfa>
    325c:	be 04 00 00 00       	mov    $0x4,%esi
    3261:	48 89 ef             	mov    %rbp,%rdi
    3264:	e8 c7 4c 00 00       	call   7f30 <sgx_is_outside_enclave>
    3269:	89 c2                	mov    %eax,%edx
    326b:	b8 02 00 00 00       	mov    $0x2,%eax
    3270:	85 d2                	test   %edx,%edx
    3272:	74 9f                	je     3213 <sgx_ecall_pointer_in_out+0x33>
    3274:	bf 04 00 00 00       	mov    $0x4,%edi
    3279:	0f ae e8             	lfence 
    327c:	e8 7f 84 00 00       	call   b700 <dlmalloc>
    3281:	48 85 c0             	test   %rax,%rax
    3284:	49 89 c4             	mov    %rax,%r12
    3287:	74 62                	je     32eb <sgx_ecall_pointer_in_out+0x10b>
    3289:	b9 04 00 00 00       	mov    $0x4,%ecx
    328e:	48 89 ea             	mov    %rbp,%rdx
    3291:	be 04 00 00 00       	mov    $0x4,%esi
    3296:	4c 89 e7             	mov    %r12,%rdi
    3299:	bb 01 00 00 00       	mov    $0x1,%ebx
    329e:	e8 ed bd 00 00       	call   f090 <memcpy_s>
    32a3:	85 c0                	test   %eax,%eax
    32a5:	75 24                	jne    32cb <sgx_ecall_pointer_in_out+0xeb>
    32a7:	4c 89 e7             	mov    %r12,%rdi
    32aa:	31 db                	xor    %ebx,%ebx
    32ac:	e8 cf 39 00 00       	call   6c80 <ecall_pointer_in_out>
    32b1:	b9 04 00 00 00       	mov    $0x4,%ecx
    32b6:	4c 89 e2             	mov    %r12,%rdx
    32b9:	be 04 00 00 00       	mov    $0x4,%esi
    32be:	48 89 ef             	mov    %rbp,%rdi
    32c1:	e8 4a be 00 00       	call   f110 <memcpy_verw_s>
    32c6:	85 c0                	test   %eax,%eax
    32c8:	0f 95 c3             	setne  %bl
    32cb:	4c 89 e7             	mov    %r12,%rdi
    32ce:	e8 9d 9e 00 00       	call   d170 <dlfree>
    32d3:	89 d8                	mov    %ebx,%eax
    32d5:	e9 39 ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32da:	31 ff                	xor    %edi,%edi
    32dc:	0f ae e8             	lfence 
    32df:	e8 9c 39 00 00       	call   6c80 <ecall_pointer_in_out>
    32e4:	31 c0                	xor    %eax,%eax
    32e6:	e9 28 ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32eb:	b8 03 00 00 00       	mov    $0x3,%eax
    32f0:	e9 1e ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32f5:	e8 56 b8 00 00       	call   eb50 <__stack_chk_fail>
    32fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003300 <sgx_ecall_pointer_out>:
    3300:	55                   	push   %rbp
    3301:	53                   	push   %rbx
    3302:	48 83 ec 28          	sub    $0x28,%rsp
    3306:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    330d:	00 00 
    330f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3314:	31 c0                	xor    %eax,%eax
    3316:	48 85 ff             	test   %rdi,%rdi
    3319:	74 11                	je     332c <sgx_ecall_pointer_out+0x2c>
    331b:	be 08 00 00 00       	mov    $0x8,%esi
    3320:	48 89 fb             	mov    %rdi,%rbx
    3323:	e8 08 4c 00 00       	call   7f30 <sgx_is_outside_enclave>
    3328:	85 c0                	test   %eax,%eax
    332a:	75 24                	jne    3350 <sgx_ecall_pointer_out+0x50>
    332c:	b8 02 00 00 00       	mov    $0x2,%eax
    3331:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3336:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    333d:	00 00 
    333f:	0f 85 c1 00 00 00    	jne    3406 <sgx_ecall_pointer_out+0x106>
    3345:	48 83 c4 28          	add    $0x28,%rsp
    3349:	5b                   	pop    %rbx
    334a:	5d                   	pop    %rbp
    334b:	c3                   	ret    
    334c:	0f 1f 40 00          	nopl   0x0(%rax)
    3350:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    3355:	48 89 da             	mov    %rbx,%rdx
    3358:	b9 08 00 00 00       	mov    $0x8,%ecx
    335d:	be 08 00 00 00       	mov    $0x8,%esi
    3362:	0f ae e8             	lfence 
    3365:	e8 26 bd 00 00       	call   f090 <memcpy_s>
    336a:	89 c2                	mov    %eax,%edx
    336c:	b8 01 00 00 00       	mov    $0x1,%eax
    3371:	85 d2                	test   %edx,%edx
    3373:	75 bc                	jne    3331 <sgx_ecall_pointer_out+0x31>
    3375:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    337a:	48 85 db             	test   %rbx,%rbx
    337d:	74 6c                	je     33eb <sgx_ecall_pointer_out+0xeb>
    337f:	be 04 00 00 00       	mov    $0x4,%esi
    3384:	48 89 df             	mov    %rbx,%rdi
    3387:	e8 a4 4b 00 00       	call   7f30 <sgx_is_outside_enclave>
    338c:	89 c2                	mov    %eax,%edx
    338e:	b8 02 00 00 00       	mov    $0x2,%eax
    3393:	85 d2                	test   %edx,%edx
    3395:	74 9a                	je     3331 <sgx_ecall_pointer_out+0x31>
    3397:	be 01 00 00 00       	mov    $0x1,%esi
    339c:	bf 04 00 00 00       	mov    $0x4,%edi
    33a1:	0f ae e8             	lfence 
    33a4:	e8 d7 a7 00 00       	call   db80 <calloc>
    33a9:	48 85 c0             	test   %rax,%rax
    33ac:	48 89 c5             	mov    %rax,%rbp
    33af:	74 4b                	je     33fc <sgx_ecall_pointer_out+0xfc>
    33b1:	48 89 ef             	mov    %rbp,%rdi
    33b4:	e8 77 38 00 00       	call   6c30 <ecall_pointer_out>
    33b9:	b9 04 00 00 00       	mov    $0x4,%ecx
    33be:	48 89 ea             	mov    %rbp,%rdx
    33c1:	be 04 00 00 00       	mov    $0x4,%esi
    33c6:	48 89 df             	mov    %rbx,%rdi
    33c9:	e8 42 bd 00 00       	call   f110 <memcpy_verw_s>
    33ce:	85 c0                	test   %eax,%eax
    33d0:	48 89 ef             	mov    %rbp,%rdi
    33d3:	0f 95 c0             	setne  %al
    33d6:	0f b6 c0             	movzbl %al,%eax
    33d9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    33dd:	e8 8e 9d 00 00       	call   d170 <dlfree>
    33e2:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    33e6:	e9 46 ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    33eb:	31 ff                	xor    %edi,%edi
    33ed:	0f ae e8             	lfence 
    33f0:	e8 3b 38 00 00       	call   6c30 <ecall_pointer_out>
    33f5:	31 c0                	xor    %eax,%eax
    33f7:	e9 35 ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    33fc:	b8 03 00 00 00       	mov    $0x3,%eax
    3401:	e9 2b ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    3406:	e8 45 b7 00 00       	call   eb50 <__stack_chk_fail>
    340b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003410 <sgx_ecall_pointer_in>:
    3410:	55                   	push   %rbp
    3411:	53                   	push   %rbx
    3412:	48 83 ec 18          	sub    $0x18,%rsp
    3416:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    341d:	00 00 
    341f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3424:	31 c0                	xor    %eax,%eax
    3426:	48 85 ff             	test   %rdi,%rdi
    3429:	74 11                	je     343c <sgx_ecall_pointer_in+0x2c>
    342b:	be 08 00 00 00       	mov    $0x8,%esi
    3430:	48 89 fb             	mov    %rdi,%rbx
    3433:	e8 f8 4a 00 00       	call   7f30 <sgx_is_outside_enclave>
    3438:	85 c0                	test   %eax,%eax
    343a:	75 24                	jne    3460 <sgx_ecall_pointer_in+0x50>
    343c:	b8 02 00 00 00       	mov    $0x2,%eax
    3441:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3446:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    344d:	00 00 
    344f:	0f 85 b3 00 00 00    	jne    3508 <sgx_ecall_pointer_in+0xf8>
    3455:	48 83 c4 18          	add    $0x18,%rsp
    3459:	5b                   	pop    %rbx
    345a:	5d                   	pop    %rbp
    345b:	c3                   	ret    
    345c:	0f 1f 40 00          	nopl   0x0(%rax)
    3460:	48 89 da             	mov    %rbx,%rdx
    3463:	48 89 e7             	mov    %rsp,%rdi
    3466:	b9 08 00 00 00       	mov    $0x8,%ecx
    346b:	be 08 00 00 00       	mov    $0x8,%esi
    3470:	0f ae e8             	lfence 
    3473:	e8 18 bc 00 00       	call   f090 <memcpy_s>
    3478:	89 c2                	mov    %eax,%edx
    347a:	b8 01 00 00 00       	mov    $0x1,%eax
    347f:	85 d2                	test   %edx,%edx
    3481:	75 be                	jne    3441 <sgx_ecall_pointer_in+0x31>
    3483:	48 8b 1c 24          	mov    (%rsp),%rbx
    3487:	48 85 db             	test   %rbx,%rbx
    348a:	74 5f                	je     34eb <sgx_ecall_pointer_in+0xdb>
    348c:	be 04 00 00 00       	mov    $0x4,%esi
    3491:	48 89 df             	mov    %rbx,%rdi
    3494:	e8 97 4a 00 00       	call   7f30 <sgx_is_outside_enclave>
    3499:	89 c2                	mov    %eax,%edx
    349b:	b8 02 00 00 00       	mov    $0x2,%eax
    34a0:	85 d2                	test   %edx,%edx
    34a2:	74 9d                	je     3441 <sgx_ecall_pointer_in+0x31>
    34a4:	bf 04 00 00 00       	mov    $0x4,%edi
    34a9:	0f ae e8             	lfence 
    34ac:	e8 4f 82 00 00       	call   b700 <dlmalloc>
    34b1:	48 89 c5             	mov    %rax,%rbp
    34b4:	b8 03 00 00 00       	mov    $0x3,%eax
    34b9:	48 85 ed             	test   %rbp,%rbp
    34bc:	74 83                	je     3441 <sgx_ecall_pointer_in+0x31>
    34be:	b9 04 00 00 00       	mov    $0x4,%ecx
    34c3:	48 89 da             	mov    %rbx,%rdx
    34c6:	be 04 00 00 00       	mov    $0x4,%esi
    34cb:	48 89 ef             	mov    %rbp,%rdi
    34ce:	e8 bd bb 00 00       	call   f090 <memcpy_s>
    34d3:	85 c0                	test   %eax,%eax
    34d5:	74 25                	je     34fc <sgx_ecall_pointer_in+0xec>
    34d7:	bb 01 00 00 00       	mov    $0x1,%ebx
    34dc:	48 89 ef             	mov    %rbp,%rdi
    34df:	e8 8c 9c 00 00       	call   d170 <dlfree>
    34e4:	89 d8                	mov    %ebx,%eax
    34e6:	e9 56 ff ff ff       	jmp    3441 <sgx_ecall_pointer_in+0x31>
    34eb:	31 ff                	xor    %edi,%edi
    34ed:	0f ae e8             	lfence 
    34f0:	e8 ab 37 00 00       	call   6ca0 <ecall_pointer_in>
    34f5:	31 c0                	xor    %eax,%eax
    34f7:	e9 45 ff ff ff       	jmp    3441 <sgx_ecall_pointer_in+0x31>
    34fc:	48 89 ef             	mov    %rbp,%rdi
    34ff:	31 db                	xor    %ebx,%ebx
    3501:	e8 9a 37 00 00       	call   6ca0 <ecall_pointer_in>
    3506:	eb d4                	jmp    34dc <sgx_ecall_pointer_in+0xcc>
    3508:	e8 43 b6 00 00       	call   eb50 <__stack_chk_fail>
    350d:	0f 1f 00             	nopl   (%rax)

0000000000003510 <sgx_ecall_pointer_user_check>:
    3510:	53                   	push   %rbx
    3511:	48 83 ec 30          	sub    $0x30,%rsp
    3515:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    351c:	00 00 
    351e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3523:	31 c0                	xor    %eax,%eax
    3525:	48 85 ff             	test   %rdi,%rdi
    3528:	74 11                	je     353b <sgx_ecall_pointer_user_check+0x2b>
    352a:	be 18 00 00 00       	mov    $0x18,%esi
    352f:	48 89 fb             	mov    %rdi,%rbx
    3532:	e8 f9 49 00 00       	call   7f30 <sgx_is_outside_enclave>
    3537:	85 c0                	test   %eax,%eax
    3539:	75 25                	jne    3560 <sgx_ecall_pointer_user_check+0x50>
    353b:	b8 02 00 00 00       	mov    $0x2,%eax
    3540:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3545:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    354c:	00 00 
    354e:	75 6a                	jne    35ba <sgx_ecall_pointer_user_check+0xaa>
    3550:	48 83 c4 30          	add    $0x30,%rsp
    3554:	5b                   	pop    %rbx
    3555:	c3                   	ret    
    3556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    355d:	00 00 00 
    3560:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    3565:	48 89 da             	mov    %rbx,%rdx
    3568:	b9 18 00 00 00       	mov    $0x18,%ecx
    356d:	be 18 00 00 00       	mov    $0x18,%esi
    3572:	0f ae e8             	lfence 
    3575:	e8 16 bb 00 00       	call   f090 <memcpy_s>
    357a:	89 c2                	mov    %eax,%edx
    357c:	b8 01 00 00 00       	mov    $0x1,%eax
    3581:	85 d2                	test   %edx,%edx
    3583:	75 bb                	jne    3540 <sgx_ecall_pointer_user_check+0x30>
    3585:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    358a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    358f:	e8 cc 34 00 00       	call   6a60 <ecall_pointer_user_check>
    3594:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3599:	b9 08 00 00 00       	mov    $0x8,%ecx
    359e:	be 08 00 00 00       	mov    $0x8,%esi
    35a3:	48 89 df             	mov    %rbx,%rdi
    35a6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    35ab:	e8 60 bb 00 00       	call   f110 <memcpy_verw_s>
    35b0:	85 c0                	test   %eax,%eax
    35b2:	0f 95 c0             	setne  %al
    35b5:	0f b6 c0             	movzbl %al,%eax
    35b8:	eb 86                	jmp    3540 <sgx_ecall_pointer_user_check+0x30>
    35ba:	e8 91 b5 00 00       	call   eb50 <__stack_chk_fail>
    35bf:	90                   	nop

00000000000035c0 <sgx_ecall_type_enum_union>:
    35c0:	53                   	push   %rbx
    35c1:	48 83 ec 20          	sub    $0x20,%rsp
    35c5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    35cc:	00 00 
    35ce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    35d3:	31 c0                	xor    %eax,%eax
    35d5:	48 85 ff             	test   %rdi,%rdi
    35d8:	74 11                	je     35eb <sgx_ecall_type_enum_union+0x2b>
    35da:	be 10 00 00 00       	mov    $0x10,%esi
    35df:	48 89 fb             	mov    %rdi,%rbx
    35e2:	e8 49 49 00 00       	call   7f30 <sgx_is_outside_enclave>
    35e7:	85 c0                	test   %eax,%eax
    35e9:	75 25                	jne    3610 <sgx_ecall_type_enum_union+0x50>
    35eb:	b8 02 00 00 00       	mov    $0x2,%eax
    35f0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    35f5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    35fc:	00 00 
    35fe:	75 44                	jne    3644 <sgx_ecall_type_enum_union+0x84>
    3600:	48 83 c4 20          	add    $0x20,%rsp
    3604:	5b                   	pop    %rbx
    3605:	c3                   	ret    
    3606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    360d:	00 00 00 
    3610:	48 89 da             	mov    %rbx,%rdx
    3613:	48 89 e7             	mov    %rsp,%rdi
    3616:	b9 10 00 00 00       	mov    $0x10,%ecx
    361b:	be 10 00 00 00       	mov    $0x10,%esi
    3620:	0f ae e8             	lfence 
    3623:	e8 68 ba 00 00       	call   f090 <memcpy_s>
    3628:	89 c2                	mov    %eax,%edx
    362a:	b8 01 00 00 00       	mov    $0x1,%eax
    362f:	85 d2                	test   %edx,%edx
    3631:	75 bd                	jne    35f0 <sgx_ecall_type_enum_union+0x30>
    3633:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3638:	8b 3c 24             	mov    (%rsp),%edi
    363b:	e8 c0 33 00 00       	call   6a00 <ecall_type_enum_union>
    3640:	31 c0                	xor    %eax,%eax
    3642:	eb ac                	jmp    35f0 <sgx_ecall_type_enum_union+0x30>
    3644:	e8 07 b5 00 00       	call   eb50 <__stack_chk_fail>
    3649:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003650 <sgx_ecall_type_struct>:
    3650:	53                   	push   %rbx
    3651:	48 83 ec 20          	sub    $0x20,%rsp
    3655:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    365c:	00 00 
    365e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3663:	31 c0                	xor    %eax,%eax
    3665:	48 85 ff             	test   %rdi,%rdi
    3668:	74 11                	je     367b <sgx_ecall_type_struct+0x2b>
    366a:	be 10 00 00 00       	mov    $0x10,%esi
    366f:	48 89 fb             	mov    %rdi,%rbx
    3672:	e8 b9 48 00 00       	call   7f30 <sgx_is_outside_enclave>
    3677:	85 c0                	test   %eax,%eax
    3679:	75 25                	jne    36a0 <sgx_ecall_type_struct+0x50>
    367b:	b8 02 00 00 00       	mov    $0x2,%eax
    3680:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3685:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    368c:	00 00 
    368e:	75 44                	jne    36d4 <sgx_ecall_type_struct+0x84>
    3690:	48 83 c4 20          	add    $0x20,%rsp
    3694:	5b                   	pop    %rbx
    3695:	c3                   	ret    
    3696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    369d:	00 00 00 
    36a0:	48 89 da             	mov    %rbx,%rdx
    36a3:	48 89 e7             	mov    %rsp,%rdi
    36a6:	b9 10 00 00 00       	mov    $0x10,%ecx
    36ab:	be 10 00 00 00       	mov    $0x10,%esi
    36b0:	0f ae e8             	lfence 
    36b3:	e8 d8 b9 00 00       	call   f090 <memcpy_s>
    36b8:	89 c2                	mov    %eax,%edx
    36ba:	b8 01 00 00 00       	mov    $0x1,%eax
    36bf:	85 d2                	test   %edx,%edx
    36c1:	75 bd                	jne    3680 <sgx_ecall_type_struct+0x30>
    36c3:	8b 3c 24             	mov    (%rsp),%edi
    36c6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    36cb:	e8 d0 32 00 00       	call   69a0 <ecall_type_struct>
    36d0:	31 c0                	xor    %eax,%eax
    36d2:	eb ac                	jmp    3680 <sgx_ecall_type_struct+0x30>
    36d4:	e8 77 b4 00 00       	call   eb50 <__stack_chk_fail>
    36d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036e0 <sgx_ecall_type_wchar_t>:
    36e0:	53                   	push   %rbx
    36e1:	48 83 ec 10          	sub    $0x10,%rsp
    36e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    36ec:	00 00 
    36ee:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    36f3:	31 c0                	xor    %eax,%eax
    36f5:	48 85 ff             	test   %rdi,%rdi
    36f8:	74 11                	je     370b <sgx_ecall_type_wchar_t+0x2b>
    36fa:	be 04 00 00 00       	mov    $0x4,%esi
    36ff:	48 89 fb             	mov    %rdi,%rbx
    3702:	e8 29 48 00 00       	call   7f30 <sgx_is_outside_enclave>
    3707:	85 c0                	test   %eax,%eax
    3709:	75 25                	jne    3730 <sgx_ecall_type_wchar_t+0x50>
    370b:	b8 02 00 00 00       	mov    $0x2,%eax
    3710:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3715:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    371c:	00 00 
    371e:	75 3f                	jne    375f <sgx_ecall_type_wchar_t+0x7f>
    3720:	48 83 c4 10          	add    $0x10,%rsp
    3724:	5b                   	pop    %rbx
    3725:	c3                   	ret    
    3726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    372d:	00 00 00 
    3730:	48 89 da             	mov    %rbx,%rdx
    3733:	48 89 e7             	mov    %rsp,%rdi
    3736:	b9 04 00 00 00       	mov    $0x4,%ecx
    373b:	be 04 00 00 00       	mov    $0x4,%esi
    3740:	0f ae e8             	lfence 
    3743:	e8 48 b9 00 00       	call   f090 <memcpy_s>
    3748:	89 c2                	mov    %eax,%edx
    374a:	b8 01 00 00 00       	mov    $0x1,%eax
    374f:	85 d2                	test   %edx,%edx
    3751:	75 bd                	jne    3710 <sgx_ecall_type_wchar_t+0x30>
    3753:	8b 3c 24             	mov    (%rsp),%edi
    3756:	e8 05 32 00 00       	call   6960 <ecall_type_wchar_t>
    375b:	31 c0                	xor    %eax,%eax
    375d:	eb b1                	jmp    3710 <sgx_ecall_type_wchar_t+0x30>
    375f:	e8 ec b3 00 00       	call   eb50 <__stack_chk_fail>
    3764:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    376b:	00 00 00 
    376e:	66 90                	xchg   %ax,%ax

0000000000003770 <sgx_ecall_type_size_t>:
    3770:	53                   	push   %rbx
    3771:	48 83 ec 10          	sub    $0x10,%rsp
    3775:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    377c:	00 00 
    377e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3783:	31 c0                	xor    %eax,%eax
    3785:	48 85 ff             	test   %rdi,%rdi
    3788:	74 11                	je     379b <sgx_ecall_type_size_t+0x2b>
    378a:	be 08 00 00 00       	mov    $0x8,%esi
    378f:	48 89 fb             	mov    %rdi,%rbx
    3792:	e8 99 47 00 00       	call   7f30 <sgx_is_outside_enclave>
    3797:	85 c0                	test   %eax,%eax
    3799:	75 25                	jne    37c0 <sgx_ecall_type_size_t+0x50>
    379b:	b8 02 00 00 00       	mov    $0x2,%eax
    37a0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    37a5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    37ac:	00 00 
    37ae:	75 40                	jne    37f0 <sgx_ecall_type_size_t+0x80>
    37b0:	48 83 c4 10          	add    $0x10,%rsp
    37b4:	5b                   	pop    %rbx
    37b5:	c3                   	ret    
    37b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    37bd:	00 00 00 
    37c0:	48 89 da             	mov    %rbx,%rdx
    37c3:	48 89 e7             	mov    %rsp,%rdi
    37c6:	b9 08 00 00 00       	mov    $0x8,%ecx
    37cb:	be 08 00 00 00       	mov    $0x8,%esi
    37d0:	0f ae e8             	lfence 
    37d3:	e8 b8 b8 00 00       	call   f090 <memcpy_s>
    37d8:	89 c2                	mov    %eax,%edx
    37da:	b8 01 00 00 00       	mov    $0x1,%eax
    37df:	85 d2                	test   %edx,%edx
    37e1:	75 bd                	jne    37a0 <sgx_ecall_type_size_t+0x30>
    37e3:	48 8b 3c 24          	mov    (%rsp),%rdi
    37e7:	e8 34 31 00 00       	call   6920 <ecall_type_size_t>
    37ec:	31 c0                	xor    %eax,%eax
    37ee:	eb b0                	jmp    37a0 <sgx_ecall_type_size_t+0x30>
    37f0:	e8 5b b3 00 00       	call   eb50 <__stack_chk_fail>
    37f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    37fc:	00 00 00 
    37ff:	90                   	nop

0000000000003800 <sgx_ecall_type_double>:
    3800:	53                   	push   %rbx
    3801:	48 83 ec 10          	sub    $0x10,%rsp
    3805:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    380c:	00 00 
    380e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3813:	31 c0                	xor    %eax,%eax
    3815:	48 85 ff             	test   %rdi,%rdi
    3818:	74 11                	je     382b <sgx_ecall_type_double+0x2b>
    381a:	be 08 00 00 00       	mov    $0x8,%esi
    381f:	48 89 fb             	mov    %rdi,%rbx
    3822:	e8 09 47 00 00       	call   7f30 <sgx_is_outside_enclave>
    3827:	85 c0                	test   %eax,%eax
    3829:	75 25                	jne    3850 <sgx_ecall_type_double+0x50>
    382b:	b8 02 00 00 00       	mov    $0x2,%eax
    3830:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3835:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    383c:	00 00 
    383e:	75 41                	jne    3881 <sgx_ecall_type_double+0x81>
    3840:	48 83 c4 10          	add    $0x10,%rsp
    3844:	5b                   	pop    %rbx
    3845:	c3                   	ret    
    3846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    384d:	00 00 00 
    3850:	48 89 da             	mov    %rbx,%rdx
    3853:	48 89 e7             	mov    %rsp,%rdi
    3856:	b9 08 00 00 00       	mov    $0x8,%ecx
    385b:	be 08 00 00 00       	mov    $0x8,%esi
    3860:	0f ae e8             	lfence 
    3863:	e8 28 b8 00 00       	call   f090 <memcpy_s>
    3868:	89 c2                	mov    %eax,%edx
    386a:	b8 01 00 00 00       	mov    $0x1,%eax
    386f:	85 d2                	test   %edx,%edx
    3871:	75 bd                	jne    3830 <sgx_ecall_type_double+0x30>
    3873:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3878:	e8 43 30 00 00       	call   68c0 <ecall_type_double>
    387d:	31 c0                	xor    %eax,%eax
    387f:	eb af                	jmp    3830 <sgx_ecall_type_double+0x30>
    3881:	e8 ca b2 00 00       	call   eb50 <__stack_chk_fail>
    3886:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    388d:	00 00 00 

0000000000003890 <sgx_ecall_type_float>:
    3890:	53                   	push   %rbx
    3891:	48 83 ec 10          	sub    $0x10,%rsp
    3895:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    389c:	00 00 
    389e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    38a3:	31 c0                	xor    %eax,%eax
    38a5:	48 85 ff             	test   %rdi,%rdi
    38a8:	74 11                	je     38bb <sgx_ecall_type_float+0x2b>
    38aa:	be 04 00 00 00       	mov    $0x4,%esi
    38af:	48 89 fb             	mov    %rdi,%rbx
    38b2:	e8 79 46 00 00       	call   7f30 <sgx_is_outside_enclave>
    38b7:	85 c0                	test   %eax,%eax
    38b9:	75 25                	jne    38e0 <sgx_ecall_type_float+0x50>
    38bb:	b8 02 00 00 00       	mov    $0x2,%eax
    38c0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    38c5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    38cc:	00 00 
    38ce:	75 41                	jne    3911 <sgx_ecall_type_float+0x81>
    38d0:	48 83 c4 10          	add    $0x10,%rsp
    38d4:	5b                   	pop    %rbx
    38d5:	c3                   	ret    
    38d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    38dd:	00 00 00 
    38e0:	48 89 da             	mov    %rbx,%rdx
    38e3:	48 89 e7             	mov    %rsp,%rdi
    38e6:	b9 04 00 00 00       	mov    $0x4,%ecx
    38eb:	be 04 00 00 00       	mov    $0x4,%esi
    38f0:	0f ae e8             	lfence 
    38f3:	e8 98 b7 00 00       	call   f090 <memcpy_s>
    38f8:	89 c2                	mov    %eax,%edx
    38fa:	b8 01 00 00 00       	mov    $0x1,%eax
    38ff:	85 d2                	test   %edx,%edx
    3901:	75 bd                	jne    38c0 <sgx_ecall_type_float+0x30>
    3903:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
    3908:	e8 53 2f 00 00       	call   6860 <ecall_type_float>
    390d:	31 c0                	xor    %eax,%eax
    390f:	eb af                	jmp    38c0 <sgx_ecall_type_float+0x30>
    3911:	e8 3a b2 00 00       	call   eb50 <__stack_chk_fail>
    3916:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    391d:	00 00 00 

0000000000003920 <sgx_ecall_type_int>:
    3920:	53                   	push   %rbx
    3921:	48 83 ec 10          	sub    $0x10,%rsp
    3925:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    392c:	00 00 
    392e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3933:	31 c0                	xor    %eax,%eax
    3935:	48 85 ff             	test   %rdi,%rdi
    3938:	74 11                	je     394b <sgx_ecall_type_int+0x2b>
    393a:	be 04 00 00 00       	mov    $0x4,%esi
    393f:	48 89 fb             	mov    %rdi,%rbx
    3942:	e8 e9 45 00 00       	call   7f30 <sgx_is_outside_enclave>
    3947:	85 c0                	test   %eax,%eax
    3949:	75 25                	jne    3970 <sgx_ecall_type_int+0x50>
    394b:	b8 02 00 00 00       	mov    $0x2,%eax
    3950:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3955:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    395c:	00 00 
    395e:	75 3f                	jne    399f <sgx_ecall_type_int+0x7f>
    3960:	48 83 c4 10          	add    $0x10,%rsp
    3964:	5b                   	pop    %rbx
    3965:	c3                   	ret    
    3966:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    396d:	00 00 00 
    3970:	48 89 da             	mov    %rbx,%rdx
    3973:	48 89 e7             	mov    %rsp,%rdi
    3976:	b9 04 00 00 00       	mov    $0x4,%ecx
    397b:	be 04 00 00 00       	mov    $0x4,%esi
    3980:	0f ae e8             	lfence 
    3983:	e8 08 b7 00 00       	call   f090 <memcpy_s>
    3988:	89 c2                	mov    %eax,%edx
    398a:	b8 01 00 00 00       	mov    $0x1,%eax
    398f:	85 d2                	test   %edx,%edx
    3991:	75 bd                	jne    3950 <sgx_ecall_type_int+0x30>
    3993:	8b 3c 24             	mov    (%rsp),%edi
    3996:	e8 85 2e 00 00       	call   6820 <ecall_type_int>
    399b:	31 c0                	xor    %eax,%eax
    399d:	eb b1                	jmp    3950 <sgx_ecall_type_int+0x30>
    399f:	e8 ac b1 00 00       	call   eb50 <__stack_chk_fail>
    39a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    39ab:	00 00 00 
    39ae:	66 90                	xchg   %ax,%ax

00000000000039b0 <sgx_ecall_type_char>:
    39b0:	53                   	push   %rbx
    39b1:	48 83 ec 10          	sub    $0x10,%rsp
    39b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    39bc:	00 00 
    39be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    39c3:	31 c0                	xor    %eax,%eax
    39c5:	48 85 ff             	test   %rdi,%rdi
    39c8:	74 11                	je     39db <sgx_ecall_type_char+0x2b>
    39ca:	be 01 00 00 00       	mov    $0x1,%esi
    39cf:	48 89 fb             	mov    %rdi,%rbx
    39d2:	e8 59 45 00 00       	call   7f30 <sgx_is_outside_enclave>
    39d7:	85 c0                	test   %eax,%eax
    39d9:	75 25                	jne    3a00 <sgx_ecall_type_char+0x50>
    39db:	b8 02 00 00 00       	mov    $0x2,%eax
    39e0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    39e5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    39ec:	00 00 
    39ee:	75 43                	jne    3a33 <sgx_ecall_type_char+0x83>
    39f0:	48 83 c4 10          	add    $0x10,%rsp
    39f4:	5b                   	pop    %rbx
    39f5:	c3                   	ret    
    39f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    39fd:	00 00 00 
    3a00:	48 8d 7c 24 07       	lea    0x7(%rsp),%rdi
    3a05:	48 89 da             	mov    %rbx,%rdx
    3a08:	b9 01 00 00 00       	mov    $0x1,%ecx
    3a0d:	be 01 00 00 00       	mov    $0x1,%esi
    3a12:	0f ae e8             	lfence 
    3a15:	e8 76 b6 00 00       	call   f090 <memcpy_s>
    3a1a:	89 c2                	mov    %eax,%edx
    3a1c:	b8 01 00 00 00       	mov    $0x1,%eax
    3a21:	85 d2                	test   %edx,%edx
    3a23:	75 bb                	jne    39e0 <sgx_ecall_type_char+0x30>
    3a25:	0f be 7c 24 07       	movsbl 0x7(%rsp),%edi
    3a2a:	e8 c1 2d 00 00       	call   67f0 <ecall_type_char>
    3a2f:	31 c0                	xor    %eax,%eax
    3a31:	eb ad                	jmp    39e0 <sgx_ecall_type_char+0x30>
    3a33:	e8 18 b1 00 00       	call   eb50 <__stack_chk_fail>
    3a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3a3f:	00 

0000000000003a40 <sgx_process_input>:
    3a40:	41 55                	push   %r13
    3a42:	41 54                	push   %r12
    3a44:	55                   	push   %rbp
    3a45:	53                   	push   %rbx
    3a46:	48 83 ec 28          	sub    $0x28,%rsp
    3a4a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3a51:	00 00 
    3a53:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3a58:	31 c0                	xor    %eax,%eax
    3a5a:	48 85 ff             	test   %rdi,%rdi
    3a5d:	74 11                	je     3a70 <sgx_process_input+0x30>
    3a5f:	be 10 00 00 00       	mov    $0x10,%esi
    3a64:	48 89 fb             	mov    %rdi,%rbx
    3a67:	e8 c4 44 00 00       	call   7f30 <sgx_is_outside_enclave>
    3a6c:	85 c0                	test   %eax,%eax
    3a6e:	75 28                	jne    3a98 <sgx_process_input+0x58>
    3a70:	b8 02 00 00 00       	mov    $0x2,%eax
    3a75:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3a7a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3a81:	00 00 
    3a83:	0f 85 db 00 00 00    	jne    3b64 <sgx_process_input+0x124>
    3a89:	48 83 c4 28          	add    $0x28,%rsp
    3a8d:	5b                   	pop    %rbx
    3a8e:	5d                   	pop    %rbp
    3a8f:	41 5c                	pop    %r12
    3a91:	41 5d                	pop    %r13
    3a93:	c3                   	ret    
    3a94:	0f 1f 40 00          	nopl   0x0(%rax)
    3a98:	48 89 da             	mov    %rbx,%rdx
    3a9b:	48 89 e7             	mov    %rsp,%rdi
    3a9e:	b9 10 00 00 00       	mov    $0x10,%ecx
    3aa3:	be 10 00 00 00       	mov    $0x10,%esi
    3aa8:	0f ae e8             	lfence 
    3aab:	e8 e0 b5 00 00       	call   f090 <memcpy_s>
    3ab0:	89 c2                	mov    %eax,%edx
    3ab2:	b8 01 00 00 00       	mov    $0x1,%eax
    3ab7:	85 d2                	test   %edx,%edx
    3ab9:	75 ba                	jne    3a75 <sgx_process_input+0x35>
    3abb:	4c 8b 24 24          	mov    (%rsp),%r12
    3abf:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    3ac4:	4d 85 e4             	test   %r12,%r12
    3ac7:	0f 84 83 00 00 00    	je     3b50 <sgx_process_input+0x110>
    3acd:	48 89 ee             	mov    %rbp,%rsi
    3ad0:	4c 89 e7             	mov    %r12,%rdi
    3ad3:	e8 58 44 00 00       	call   7f30 <sgx_is_outside_enclave>
    3ad8:	89 c2                	mov    %eax,%edx
    3ada:	b8 02 00 00 00       	mov    $0x2,%eax
    3adf:	85 d2                	test   %edx,%edx
    3ae1:	74 92                	je     3a75 <sgx_process_input+0x35>
    3ae3:	48 85 ed             	test   %rbp,%rbp
    3ae6:	0f ae e8             	lfence 
    3ae9:	74 68                	je     3b53 <sgx_process_input+0x113>
    3aeb:	48 89 ef             	mov    %rbp,%rdi
    3aee:	e8 0d 7c 00 00       	call   b700 <dlmalloc>
    3af3:	49 89 c5             	mov    %rax,%r13
    3af6:	b8 03 00 00 00       	mov    $0x3,%eax
    3afb:	4d 85 ed             	test   %r13,%r13
    3afe:	0f 84 71 ff ff ff    	je     3a75 <sgx_process_input+0x35>
    3b04:	48 89 e9             	mov    %rbp,%rcx
    3b07:	4c 89 e2             	mov    %r12,%rdx
    3b0a:	48 89 ee             	mov    %rbp,%rsi
    3b0d:	4c 89 ef             	mov    %r13,%rdi
    3b10:	bb 01 00 00 00       	mov    $0x1,%ebx
    3b15:	e8 76 b5 00 00       	call   f090 <memcpy_s>
    3b1a:	85 c0                	test   %eax,%eax
    3b1c:	75 23                	jne    3b41 <sgx_process_input+0x101>
    3b1e:	48 89 ee             	mov    %rbp,%rsi
    3b21:	4c 89 ef             	mov    %r13,%rdi
    3b24:	31 db                	xor    %ebx,%ebx
    3b26:	e8 55 28 00 00       	call   6380 <process_input>
    3b2b:	48 89 e9             	mov    %rbp,%rcx
    3b2e:	4c 89 ea             	mov    %r13,%rdx
    3b31:	48 89 ee             	mov    %rbp,%rsi
    3b34:	4c 89 e7             	mov    %r12,%rdi
    3b37:	e8 d4 b5 00 00       	call   f110 <memcpy_verw_s>
    3b3c:	85 c0                	test   %eax,%eax
    3b3e:	0f 95 c3             	setne  %bl
    3b41:	4c 89 ef             	mov    %r13,%rdi
    3b44:	e8 27 96 00 00       	call   d170 <dlfree>
    3b49:	89 d8                	mov    %ebx,%eax
    3b4b:	e9 25 ff ff ff       	jmp    3a75 <sgx_process_input+0x35>
    3b50:	0f ae e8             	lfence 
    3b53:	48 89 ee             	mov    %rbp,%rsi
    3b56:	31 ff                	xor    %edi,%edi
    3b58:	e8 23 28 00 00       	call   6380 <process_input>
    3b5d:	31 c0                	xor    %eax,%eax
    3b5f:	e9 11 ff ff ff       	jmp    3a75 <sgx_process_input+0x35>
    3b64:	e8 e7 af 00 00       	call   eb50 <__stack_chk_fail>
    3b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003b70 <ocall_print_string>:
    3b70:	41 54                	push   %r12
    3b72:	55                   	push   %rbp
    3b73:	53                   	push   %rbx
    3b74:	48 83 ec 10          	sub    $0x10,%rsp
    3b78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3b7f:	00 00 
    3b81:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3b86:	31 c0                	xor    %eax,%eax
    3b88:	48 85 ff             	test   %rdi,%rdi
    3b8b:	0f 84 a7 00 00 00    	je     3c38 <ocall_print_string+0xc8>
    3b91:	48 89 fb             	mov    %rdi,%rbx
    3b94:	e8 77 ae 00 00       	call   ea10 <strlen>
    3b99:	4c 8d 60 01          	lea    0x1(%rax),%r12
    3b9d:	48 89 df             	mov    %rbx,%rdi
    3ba0:	48 89 c5             	mov    %rax,%rbp
    3ba3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3baa:	00 
    3bab:	4c 89 e6             	mov    %r12,%rsi
    3bae:	e8 1d 43 00 00       	call   7ed0 <sgx_is_within_enclave>
    3bb3:	85 c0                	test   %eax,%eax
    3bb5:	ba 02 00 00 00       	mov    $0x2,%edx
    3bba:	75 24                	jne    3be0 <ocall_print_string+0x70>
    3bbc:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3bc1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3bc8:	00 00 
    3bca:	89 d0                	mov    %edx,%eax
    3bcc:	0f 85 c6 00 00 00    	jne    3c98 <ocall_print_string+0x128>
    3bd2:	48 83 c4 10          	add    $0x10,%rsp
    3bd6:	5b                   	pop    %rbx
    3bd7:	5d                   	pop    %rbp
    3bd8:	41 5c                	pop    %r12
    3bda:	c3                   	ret    
    3bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3be0:	48 8d 7d 09          	lea    0x9(%rbp),%rdi
    3be4:	49 39 fc             	cmp    %rdi,%r12
    3be7:	77 d3                	ja     3bbc <ocall_print_string+0x4c>
    3be9:	e8 92 43 00 00       	call   7f80 <sgx_ocalloc>
    3bee:	48 85 c0             	test   %rax,%rax
    3bf1:	48 89 c5             	mov    %rax,%rbp
    3bf4:	74 5c                	je     3c52 <ocall_print_string+0xe2>
    3bf6:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3bfa:	48 89 e2             	mov    %rsp,%rdx
    3bfd:	b9 08 00 00 00       	mov    $0x8,%ecx
    3c02:	be 08 00 00 00       	mov    $0x8,%esi
    3c07:	48 89 ef             	mov    %rbp,%rdi
    3c0a:	48 89 04 24          	mov    %rax,(%rsp)
    3c0e:	e8 fd b4 00 00       	call   f110 <memcpy_verw_s>
    3c13:	85 c0                	test   %eax,%eax
    3c15:	75 43                	jne    3c5a <ocall_print_string+0xea>
    3c17:	48 8b 3c 24          	mov    (%rsp),%rdi
    3c1b:	4c 89 e1             	mov    %r12,%rcx
    3c1e:	48 89 da             	mov    %rbx,%rdx
    3c21:	4c 89 e6             	mov    %r12,%rsi
    3c24:	e8 e7 b4 00 00       	call   f110 <memcpy_verw_s>
    3c29:	85 c0                	test   %eax,%eax
    3c2b:	75 2d                	jne    3c5a <ocall_print_string+0xea>
    3c2d:	4c 01 24 24          	add    %r12,(%rsp)
    3c31:	eb 4d                	jmp    3c80 <ocall_print_string+0x110>
    3c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3c38:	bf 08 00 00 00       	mov    $0x8,%edi
    3c3d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3c44:	00 
    3c45:	e8 36 43 00 00       	call   7f80 <sgx_ocalloc>
    3c4a:	48 85 c0             	test   %rax,%rax
    3c4d:	48 89 c5             	mov    %rax,%rbp
    3c50:	75 1e                	jne    3c70 <ocall_print_string+0x100>
    3c52:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3c59:	00 
    3c5a:	e8 11 44 00 00       	call   8070 <sgx_ocfree>
    3c5f:	ba 01 00 00 00       	mov    $0x1,%edx
    3c64:	e9 53 ff ff ff       	jmp    3bbc <ocall_print_string+0x4c>
    3c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c70:	48 8d 40 08          	lea    0x8(%rax),%rax
    3c74:	48 89 04 24          	mov    %rax,(%rsp)
    3c78:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    3c7f:	00 
    3c80:	48 89 ee             	mov    %rbp,%rsi
    3c83:	31 ff                	xor    %edi,%edi
    3c85:	e8 66 5b 00 00       	call   97f0 <sgx_ocall>
    3c8a:	89 c3                	mov    %eax,%ebx
    3c8c:	e8 df 43 00 00       	call   8070 <sgx_ocfree>
    3c91:	89 da                	mov    %ebx,%edx
    3c93:	e9 24 ff ff ff       	jmp    3bbc <ocall_print_string+0x4c>
    3c98:	e8 b3 ae 00 00       	call   eb50 <__stack_chk_fail>
    3c9d:	0f 1f 00             	nopl   (%rax)

0000000000003ca0 <init_time>:
    3ca0:	31 f6                	xor    %esi,%esi
    3ca2:	bf 01 00 00 00       	mov    $0x1,%edi
    3ca7:	e9 44 5b 00 00       	jmp    97f0 <sgx_ocall>
    3cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003cb0 <get_time>:
    3cb0:	53                   	push   %rbx
    3cb1:	48 83 ec 10          	sub    $0x10,%rsp
    3cb5:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    3cb9:	bf 04 00 00 00       	mov    $0x4,%edi
    3cbe:	e8 bd 42 00 00       	call   7f80 <sgx_ocalloc>
    3cc3:	48 85 c0             	test   %rax,%rax
    3cc6:	74 40                	je     3d08 <get_time+0x58>
    3cc8:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    3ccd:	b9 04 00 00 00       	mov    $0x4,%ecx
    3cd2:	be 04 00 00 00       	mov    $0x4,%esi
    3cd7:	48 89 c7             	mov    %rax,%rdi
    3cda:	48 89 c3             	mov    %rax,%rbx
    3cdd:	e8 2e b4 00 00       	call   f110 <memcpy_verw_s>
    3ce2:	85 c0                	test   %eax,%eax
    3ce4:	75 22                	jne    3d08 <get_time+0x58>
    3ce6:	48 89 de             	mov    %rbx,%rsi
    3ce9:	bf 02 00 00 00       	mov    $0x2,%edi
    3cee:	e8 fd 5a 00 00       	call   97f0 <sgx_ocall>
    3cf3:	89 c3                	mov    %eax,%ebx
    3cf5:	e8 76 43 00 00       	call   8070 <sgx_ocfree>
    3cfa:	48 83 c4 10          	add    $0x10,%rsp
    3cfe:	89 d8                	mov    %ebx,%eax
    3d00:	5b                   	pop    %rbx
    3d01:	c3                   	ret    
    3d02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3d08:	e8 63 43 00 00       	call   8070 <sgx_ocfree>
    3d0d:	48 83 c4 10          	add    $0x10,%rsp
    3d11:	b8 01 00 00 00       	mov    $0x1,%eax
    3d16:	5b                   	pop    %rbx
    3d17:	c3                   	ret    
    3d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3d1f:	00 

0000000000003d20 <ocall_pointer_user_check>:
    3d20:	53                   	push   %rbx
    3d21:	48 83 ec 10          	sub    $0x10,%rsp
    3d25:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    3d2a:	bf 08 00 00 00       	mov    $0x8,%edi
    3d2f:	e8 4c 42 00 00       	call   7f80 <sgx_ocalloc>
    3d34:	48 85 c0             	test   %rax,%rax
    3d37:	74 3f                	je     3d78 <ocall_pointer_user_check+0x58>
    3d39:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3d3e:	b9 08 00 00 00       	mov    $0x8,%ecx
    3d43:	be 08 00 00 00       	mov    $0x8,%esi
    3d48:	48 89 c7             	mov    %rax,%rdi
    3d4b:	48 89 c3             	mov    %rax,%rbx
    3d4e:	e8 bd b3 00 00       	call   f110 <memcpy_verw_s>
    3d53:	85 c0                	test   %eax,%eax
    3d55:	75 21                	jne    3d78 <ocall_pointer_user_check+0x58>
    3d57:	48 89 de             	mov    %rbx,%rsi
    3d5a:	bf 03 00 00 00       	mov    $0x3,%edi
    3d5f:	e8 8c 5a 00 00       	call   97f0 <sgx_ocall>
    3d64:	89 c3                	mov    %eax,%ebx
    3d66:	e8 05 43 00 00       	call   8070 <sgx_ocfree>
    3d6b:	48 83 c4 10          	add    $0x10,%rsp
    3d6f:	89 d8                	mov    %ebx,%eax
    3d71:	5b                   	pop    %rbx
    3d72:	c3                   	ret    
    3d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3d78:	e8 f3 42 00 00       	call   8070 <sgx_ocfree>
    3d7d:	48 83 c4 10          	add    $0x10,%rsp
    3d81:	b8 01 00 00 00       	mov    $0x1,%eax
    3d86:	5b                   	pop    %rbx
    3d87:	c3                   	ret    
    3d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3d8f:	00 

0000000000003d90 <ocall_pointer_in>:
    3d90:	55                   	push   %rbp
    3d91:	53                   	push   %rbx
    3d92:	48 83 ec 18          	sub    $0x18,%rsp
    3d96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3d9d:	00 00 
    3d9f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3da4:	31 c0                	xor    %eax,%eax
    3da6:	48 85 ff             	test   %rdi,%rdi
    3da9:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3db0:	00 
    3db1:	0f 84 a9 00 00 00    	je     3e60 <ocall_pointer_in+0xd0>
    3db7:	be 04 00 00 00       	mov    $0x4,%esi
    3dbc:	48 89 fb             	mov    %rdi,%rbx
    3dbf:	e8 0c 41 00 00       	call   7ed0 <sgx_is_within_enclave>
    3dc4:	85 c0                	test   %eax,%eax
    3dc6:	ba 02 00 00 00       	mov    $0x2,%edx
    3dcb:	75 23                	jne    3df0 <ocall_pointer_in+0x60>
    3dcd:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3dd2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3dd9:	00 00 
    3ddb:	89 d0                	mov    %edx,%eax
    3ddd:	0f 85 bf 00 00 00    	jne    3ea2 <ocall_pointer_in+0x112>
    3de3:	48 83 c4 18          	add    $0x18,%rsp
    3de7:	5b                   	pop    %rbx
    3de8:	5d                   	pop    %rbp
    3de9:	c3                   	ret    
    3dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3df0:	bf 0c 00 00 00       	mov    $0xc,%edi
    3df5:	e8 86 41 00 00       	call   7f80 <sgx_ocalloc>
    3dfa:	48 85 c0             	test   %rax,%rax
    3dfd:	48 89 c5             	mov    %rax,%rbp
    3e00:	74 70                	je     3e72 <ocall_pointer_in+0xe2>
    3e02:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3e06:	48 89 e2             	mov    %rsp,%rdx
    3e09:	b9 08 00 00 00       	mov    $0x8,%ecx
    3e0e:	be 08 00 00 00       	mov    $0x8,%esi
    3e13:	48 89 ef             	mov    %rbp,%rdi
    3e16:	48 89 04 24          	mov    %rax,(%rsp)
    3e1a:	e8 f1 b2 00 00       	call   f110 <memcpy_verw_s>
    3e1f:	85 c0                	test   %eax,%eax
    3e21:	75 57                	jne    3e7a <ocall_pointer_in+0xea>
    3e23:	48 8b 3c 24          	mov    (%rsp),%rdi
    3e27:	b9 04 00 00 00       	mov    $0x4,%ecx
    3e2c:	48 89 da             	mov    %rbx,%rdx
    3e2f:	be 04 00 00 00       	mov    $0x4,%esi
    3e34:	e8 d7 b2 00 00       	call   f110 <memcpy_verw_s>
    3e39:	85 c0                	test   %eax,%eax
    3e3b:	75 3d                	jne    3e7a <ocall_pointer_in+0xea>
    3e3d:	48 83 04 24 04       	addq   $0x4,(%rsp)
    3e42:	48 89 ee             	mov    %rbp,%rsi
    3e45:	bf 04 00 00 00       	mov    $0x4,%edi
    3e4a:	e8 a1 59 00 00       	call   97f0 <sgx_ocall>
    3e4f:	89 c3                	mov    %eax,%ebx
    3e51:	e8 1a 42 00 00       	call   8070 <sgx_ocfree>
    3e56:	89 da                	mov    %ebx,%edx
    3e58:	e9 70 ff ff ff       	jmp    3dcd <ocall_pointer_in+0x3d>
    3e5d:	0f 1f 00             	nopl   (%rax)
    3e60:	bf 08 00 00 00       	mov    $0x8,%edi
    3e65:	e8 16 41 00 00       	call   7f80 <sgx_ocalloc>
    3e6a:	48 85 c0             	test   %rax,%rax
    3e6d:	48 89 c5             	mov    %rax,%rbp
    3e70:	75 1e                	jne    3e90 <ocall_pointer_in+0x100>
    3e72:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3e79:	00 
    3e7a:	e8 f1 41 00 00       	call   8070 <sgx_ocfree>
    3e7f:	ba 01 00 00 00       	mov    $0x1,%edx
    3e84:	e9 44 ff ff ff       	jmp    3dcd <ocall_pointer_in+0x3d>
    3e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3e90:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3e94:	48 89 04 24          	mov    %rax,(%rsp)
    3e98:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    3e9f:	00 
    3ea0:	eb a0                	jmp    3e42 <ocall_pointer_in+0xb2>
    3ea2:	e8 a9 ac 00 00       	call   eb50 <__stack_chk_fail>
    3ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3eae:	00 00 

0000000000003eb0 <ocall_pointer_out>:
    3eb0:	41 54                	push   %r12
    3eb2:	55                   	push   %rbp
    3eb3:	53                   	push   %rbx
    3eb4:	48 83 ec 10          	sub    $0x10,%rsp
    3eb8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3ebf:	00 00 
    3ec1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3ec6:	31 c0                	xor    %eax,%eax
    3ec8:	48 85 ff             	test   %rdi,%rdi
    3ecb:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3ed2:	00 
    3ed3:	0f 84 c7 00 00 00    	je     3fa0 <ocall_pointer_out+0xf0>
    3ed9:	be 04 00 00 00       	mov    $0x4,%esi
    3ede:	48 89 fd             	mov    %rdi,%rbp
    3ee1:	e8 ea 3f 00 00       	call   7ed0 <sgx_is_within_enclave>
    3ee6:	85 c0                	test   %eax,%eax
    3ee8:	ba 02 00 00 00       	mov    $0x2,%edx
    3eed:	75 21                	jne    3f10 <ocall_pointer_out+0x60>
    3eef:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3ef4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3efb:	00 00 
    3efd:	89 d0                	mov    %edx,%eax
    3eff:	0f 85 f5 00 00 00    	jne    3ffa <ocall_pointer_out+0x14a>
    3f05:	48 83 c4 10          	add    $0x10,%rsp
    3f09:	5b                   	pop    %rbx
    3f0a:	5d                   	pop    %rbp
    3f0b:	41 5c                	pop    %r12
    3f0d:	c3                   	ret    
    3f0e:	66 90                	xchg   %ax,%ax
    3f10:	bf 0c 00 00 00       	mov    $0xc,%edi
    3f15:	e8 66 40 00 00       	call   7f80 <sgx_ocalloc>
    3f1a:	48 85 c0             	test   %rax,%rax
    3f1d:	48 89 c3             	mov    %rax,%rbx
    3f20:	0f 84 89 00 00 00    	je     3faf <ocall_pointer_out+0xff>
    3f26:	48 8d 43 08          	lea    0x8(%rbx),%rax
    3f2a:	48 89 e2             	mov    %rsp,%rdx
    3f2d:	b9 08 00 00 00       	mov    $0x8,%ecx
    3f32:	be 08 00 00 00       	mov    $0x8,%esi
    3f37:	48 89 df             	mov    %rbx,%rdi
    3f3a:	48 89 04 24          	mov    %rax,(%rsp)
    3f3e:	e8 cd b1 00 00       	call   f110 <memcpy_verw_s>
    3f43:	85 c0                	test   %eax,%eax
    3f45:	75 70                	jne    3fb7 <ocall_pointer_out+0x107>
    3f47:	4c 8b 24 24          	mov    (%rsp),%r12
    3f4b:	31 f6                	xor    %esi,%esi
    3f4d:	ba 04 00 00 00       	mov    $0x4,%edx
    3f52:	4c 89 e7             	mov    %r12,%rdi
    3f55:	e8 36 a9 00 00       	call   e890 <memset_verw>
    3f5a:	48 89 de             	mov    %rbx,%rsi
    3f5d:	bf 05 00 00 00       	mov    $0x5,%edi
    3f62:	48 83 04 24 04       	addq   $0x4,(%rsp)
    3f67:	e8 84 58 00 00       	call   97f0 <sgx_ocall>
    3f6c:	85 c0                	test   %eax,%eax
    3f6e:	89 c3                	mov    %eax,%ebx
    3f70:	75 19                	jne    3f8b <ocall_pointer_out+0xdb>
    3f72:	b9 04 00 00 00       	mov    $0x4,%ecx
    3f77:	4c 89 e2             	mov    %r12,%rdx
    3f7a:	be 04 00 00 00       	mov    $0x4,%esi
    3f7f:	48 89 ef             	mov    %rbp,%rdi
    3f82:	e8 09 b1 00 00       	call   f090 <memcpy_s>
    3f87:	85 c0                	test   %eax,%eax
    3f89:	75 2c                	jne    3fb7 <ocall_pointer_out+0x107>
    3f8b:	e8 e0 40 00 00       	call   8070 <sgx_ocfree>
    3f90:	89 da                	mov    %ebx,%edx
    3f92:	e9 58 ff ff ff       	jmp    3eef <ocall_pointer_out+0x3f>
    3f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3f9e:	00 00 
    3fa0:	bf 08 00 00 00       	mov    $0x8,%edi
    3fa5:	e8 d6 3f 00 00       	call   7f80 <sgx_ocalloc>
    3faa:	48 85 c0             	test   %rax,%rax
    3fad:	75 21                	jne    3fd0 <ocall_pointer_out+0x120>
    3faf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3fb6:	00 
    3fb7:	e8 b4 40 00 00       	call   8070 <sgx_ocfree>
    3fbc:	ba 01 00 00 00       	mov    $0x1,%edx
    3fc1:	e9 29 ff ff ff       	jmp    3eef <ocall_pointer_out+0x3f>
    3fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3fcd:	00 00 00 
    3fd0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3fd4:	48 89 c6             	mov    %rax,%rsi
    3fd7:	bf 05 00 00 00       	mov    $0x5,%edi
    3fdc:	48 89 14 24          	mov    %rdx,(%rsp)
    3fe0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3fe7:	e8 04 58 00 00       	call   97f0 <sgx_ocall>
    3fec:	89 c3                	mov    %eax,%ebx
    3fee:	e8 7d 40 00 00       	call   8070 <sgx_ocfree>
    3ff3:	89 da                	mov    %ebx,%edx
    3ff5:	e9 f5 fe ff ff       	jmp    3eef <ocall_pointer_out+0x3f>
    3ffa:	e8 51 ab 00 00       	call   eb50 <__stack_chk_fail>
    3fff:	90                   	nop

0000000000004000 <ocall_pointer_in_out>:
    4000:	41 54                	push   %r12
    4002:	55                   	push   %rbp
    4003:	53                   	push   %rbx
    4004:	48 83 ec 10          	sub    $0x10,%rsp
    4008:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    400f:	00 00 
    4011:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4016:	31 c0                	xor    %eax,%eax
    4018:	48 85 ff             	test   %rdi,%rdi
    401b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    4022:	00 
    4023:	0f 84 cf 00 00 00    	je     40f8 <ocall_pointer_in_out+0xf8>
    4029:	be 04 00 00 00       	mov    $0x4,%esi
    402e:	48 89 fb             	mov    %rdi,%rbx
    4031:	e8 9a 3e 00 00       	call   7ed0 <sgx_is_within_enclave>
    4036:	85 c0                	test   %eax,%eax
    4038:	ba 02 00 00 00       	mov    $0x2,%edx
    403d:	75 21                	jne    4060 <ocall_pointer_in_out+0x60>
    403f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4044:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    404b:	00 00 
    404d:	89 d0                	mov    %edx,%eax
    404f:	0f 85 eb 00 00 00    	jne    4140 <ocall_pointer_in_out+0x140>
    4055:	48 83 c4 10          	add    $0x10,%rsp
    4059:	5b                   	pop    %rbx
    405a:	5d                   	pop    %rbp
    405b:	41 5c                	pop    %r12
    405d:	c3                   	ret    
    405e:	66 90                	xchg   %ax,%ax
    4060:	bf 0c 00 00 00       	mov    $0xc,%edi
    4065:	e8 16 3f 00 00       	call   7f80 <sgx_ocalloc>
    406a:	48 85 c0             	test   %rax,%rax
    406d:	48 89 c5             	mov    %rax,%rbp
    4070:	0f 84 91 00 00 00    	je     4107 <ocall_pointer_in_out+0x107>
    4076:	48 8d 45 08          	lea    0x8(%rbp),%rax
    407a:	48 89 e2             	mov    %rsp,%rdx
    407d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4082:	be 08 00 00 00       	mov    $0x8,%esi
    4087:	48 89 ef             	mov    %rbp,%rdi
    408a:	48 89 04 24          	mov    %rax,(%rsp)
    408e:	e8 7d b0 00 00       	call   f110 <memcpy_verw_s>
    4093:	85 c0                	test   %eax,%eax
    4095:	75 78                	jne    410f <ocall_pointer_in_out+0x10f>
    4097:	4c 8b 24 24          	mov    (%rsp),%r12
    409b:	b9 04 00 00 00       	mov    $0x4,%ecx
    40a0:	48 89 da             	mov    %rbx,%rdx
    40a3:	be 04 00 00 00       	mov    $0x4,%esi
    40a8:	4c 89 e7             	mov    %r12,%rdi
    40ab:	e8 60 b0 00 00       	call   f110 <memcpy_verw_s>
    40b0:	85 c0                	test   %eax,%eax
    40b2:	75 5b                	jne    410f <ocall_pointer_in_out+0x10f>
    40b4:	48 89 ee             	mov    %rbp,%rsi
    40b7:	bf 06 00 00 00       	mov    $0x6,%edi
    40bc:	48 83 04 24 04       	addq   $0x4,(%rsp)
    40c1:	e8 2a 57 00 00       	call   97f0 <sgx_ocall>
    40c6:	85 c0                	test   %eax,%eax
    40c8:	89 c5                	mov    %eax,%ebp
    40ca:	75 19                	jne    40e5 <ocall_pointer_in_out+0xe5>
    40cc:	b9 04 00 00 00       	mov    $0x4,%ecx
    40d1:	4c 89 e2             	mov    %r12,%rdx
    40d4:	be 04 00 00 00       	mov    $0x4,%esi
    40d9:	48 89 df             	mov    %rbx,%rdi
    40dc:	e8 af af 00 00       	call   f090 <memcpy_s>
    40e1:	85 c0                	test   %eax,%eax
    40e3:	75 2a                	jne    410f <ocall_pointer_in_out+0x10f>
    40e5:	e8 86 3f 00 00       	call   8070 <sgx_ocfree>
    40ea:	89 ea                	mov    %ebp,%edx
    40ec:	e9 4e ff ff ff       	jmp    403f <ocall_pointer_in_out+0x3f>
    40f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    40f8:	bf 08 00 00 00       	mov    $0x8,%edi
    40fd:	e8 7e 3e 00 00       	call   7f80 <sgx_ocalloc>
    4102:	48 85 c0             	test   %rax,%rax
    4105:	75 19                	jne    4120 <ocall_pointer_in_out+0x120>
    4107:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    410e:	00 
    410f:	e8 5c 3f 00 00       	call   8070 <sgx_ocfree>
    4114:	ba 01 00 00 00       	mov    $0x1,%edx
    4119:	e9 21 ff ff ff       	jmp    403f <ocall_pointer_in_out+0x3f>
    411e:	66 90                	xchg   %ax,%ax
    4120:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4124:	48 89 c6             	mov    %rax,%rsi
    4127:	bf 06 00 00 00       	mov    $0x6,%edi
    412c:	48 89 14 24          	mov    %rdx,(%rsp)
    4130:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4137:	e8 b4 56 00 00       	call   97f0 <sgx_ocall>
    413c:	89 c5                	mov    %eax,%ebp
    413e:	eb a5                	jmp    40e5 <ocall_pointer_in_out+0xe5>
    4140:	e8 0b aa 00 00       	call   eb50 <__stack_chk_fail>
    4145:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    414c:	00 00 00 
    414f:	90                   	nop

0000000000004150 <memccpy>:
    4150:	41 57                	push   %r15
    4152:	41 56                	push   %r14
    4154:	41 55                	push   %r13
    4156:	41 54                	push   %r12
    4158:	49 89 fd             	mov    %rdi,%r13
    415b:	55                   	push   %rbp
    415c:	53                   	push   %rbx
    415d:	48 89 f5             	mov    %rsi,%rbp
    4160:	49 89 d4             	mov    %rdx,%r12
    4163:	4c 89 c3             	mov    %r8,%rbx
    4166:	48 83 ec 38          	sub    $0x38,%rsp
    416a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4171:	00 00 
    4173:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4178:	31 c0                	xor    %eax,%eax
    417a:	48 85 f6             	test   %rsi,%rsi
    417d:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    4181:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    4186:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    418d:	00 00 
    418f:	0f 84 b3 01 00 00    	je     4348 <memccpy+0x1f8>
    4195:	4c 89 c6             	mov    %r8,%rsi
    4198:	48 89 ef             	mov    %rbp,%rdi
    419b:	e8 30 3d 00 00       	call   7ed0 <sgx_is_within_enclave>
    41a0:	85 c0                	test   %eax,%eax
    41a2:	75 2c                	jne    41d0 <memccpy+0x80>
    41a4:	b8 02 00 00 00       	mov    $0x2,%eax
    41a9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    41ae:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    41b5:	00 00 
    41b7:	0f 85 2d 02 00 00    	jne    43ea <memccpy+0x29a>
    41bd:	48 83 c4 38          	add    $0x38,%rsp
    41c1:	5b                   	pop    %rbx
    41c2:	5d                   	pop    %rbp
    41c3:	41 5c                	pop    %r12
    41c5:	41 5d                	pop    %r13
    41c7:	41 5e                	pop    %r14
    41c9:	41 5f                	pop    %r15
    41cb:	c3                   	ret    
    41cc:	0f 1f 40 00          	nopl   0x0(%rax)
    41d0:	4d 85 e4             	test   %r12,%r12
    41d3:	0f 85 af 01 00 00    	jne    4388 <memccpy+0x238>
    41d9:	4c 8d 73 28          	lea    0x28(%rbx),%r14
    41dd:	4c 39 f3             	cmp    %r14,%rbx
    41e0:	77 c2                	ja     41a4 <memccpy+0x54>
    41e2:	4c 89 f7             	mov    %r14,%rdi
    41e5:	e8 96 3d 00 00       	call   7f80 <sgx_ocalloc>
    41ea:	48 85 c0             	test   %rax,%rax
    41ed:	49 89 c7             	mov    %rax,%r15
    41f0:	0f 84 b4 01 00 00    	je     43aa <memccpy+0x25a>
    41f6:	48 8d 40 28          	lea    0x28(%rax),%rax
    41fa:	49 83 ee 28          	sub    $0x28,%r14
    41fe:	48 85 ed             	test   %rbp,%rbp
    4201:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4206:	0f 84 bb 01 00 00    	je     43c7 <memccpy+0x277>
    420c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    4211:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    4215:	b9 08 00 00 00       	mov    $0x8,%ecx
    421a:	be 08 00 00 00       	mov    $0x8,%esi
    421f:	e8 ec ae 00 00       	call   f110 <memcpy_verw_s>
    4224:	85 c0                	test   %eax,%eax
    4226:	0f 85 8c 01 00 00    	jne    43b8 <memccpy+0x268>
    422c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    4231:	48 89 d9             	mov    %rbx,%rcx
    4234:	48 89 ea             	mov    %rbp,%rdx
    4237:	4c 89 f6             	mov    %r14,%rsi
    423a:	48 89 c7             	mov    %rax,%rdi
    423d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4242:	e8 c9 ae 00 00       	call   f110 <memcpy_verw_s>
    4247:	85 c0                	test   %eax,%eax
    4249:	0f 85 69 01 00 00    	jne    43b8 <memccpy+0x268>
    424f:	48 01 5c 24 20       	add    %rbx,0x20(%rsp)
    4254:	49 29 de             	sub    %rbx,%r14
    4257:	4d 85 e4             	test   %r12,%r12
    425a:	0f 84 7d 01 00 00    	je     43dd <memccpy+0x28d>
    4260:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    4265:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    4269:	b9 08 00 00 00       	mov    $0x8,%ecx
    426e:	be 08 00 00 00       	mov    $0x8,%esi
    4273:	e8 98 ae 00 00       	call   f110 <memcpy_verw_s>
    4278:	85 c0                	test   %eax,%eax
    427a:	0f 85 38 01 00 00    	jne    43b8 <memccpy+0x268>
    4280:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    4285:	48 89 d9             	mov    %rbx,%rcx
    4288:	4c 89 e2             	mov    %r12,%rdx
    428b:	4c 89 f6             	mov    %r14,%rsi
    428e:	e8 7d ae 00 00       	call   f110 <memcpy_verw_s>
    4293:	85 c0                	test   %eax,%eax
    4295:	0f 85 1d 01 00 00    	jne    43b8 <memccpy+0x268>
    429b:	48 01 5c 24 20       	add    %rbx,0x20(%rsp)
    42a0:	48 8d 54 24 1c       	lea    0x1c(%rsp),%rdx
    42a5:	49 8d 7f 18          	lea    0x18(%r15),%rdi
    42a9:	b9 04 00 00 00       	mov    $0x4,%ecx
    42ae:	be 04 00 00 00       	mov    $0x4,%esi
    42b3:	e8 58 ae 00 00       	call   f110 <memcpy_verw_s>
    42b8:	85 c0                	test   %eax,%eax
    42ba:	0f 85 f8 00 00 00    	jne    43b8 <memccpy+0x268>
    42c0:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    42c5:	49 8d 7f 20          	lea    0x20(%r15),%rdi
    42c9:	b9 08 00 00 00       	mov    $0x8,%ecx
    42ce:	be 08 00 00 00       	mov    $0x8,%esi
    42d3:	e8 38 ae 00 00       	call   f110 <memcpy_verw_s>
    42d8:	85 c0                	test   %eax,%eax
    42da:	0f 85 d8 00 00 00    	jne    43b8 <memccpy+0x268>
    42e0:	4c 89 fe             	mov    %r15,%rsi
    42e3:	bf 07 00 00 00       	mov    $0x7,%edi
    42e8:	e8 03 55 00 00       	call   97f0 <sgx_ocall>
    42ed:	85 c0                	test   %eax,%eax
    42ef:	41 89 c4             	mov    %eax,%r12d
    42f2:	75 42                	jne    4336 <memccpy+0x1e6>
    42f4:	4d 85 ed             	test   %r13,%r13
    42f7:	74 1d                	je     4316 <memccpy+0x1c6>
    42f9:	b9 08 00 00 00       	mov    $0x8,%ecx
    42fe:	4c 89 fa             	mov    %r15,%rdx
    4301:	be 08 00 00 00       	mov    $0x8,%esi
    4306:	4c 89 ef             	mov    %r13,%rdi
    4309:	e8 82 ad 00 00       	call   f090 <memcpy_s>
    430e:	85 c0                	test   %eax,%eax
    4310:	0f 85 a2 00 00 00    	jne    43b8 <memccpy+0x268>
    4316:	48 85 ed             	test   %rbp,%rbp
    4319:	74 1b                	je     4336 <memccpy+0x1e6>
    431b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    4320:	48 89 d9             	mov    %rbx,%rcx
    4323:	48 89 de             	mov    %rbx,%rsi
    4326:	48 89 ef             	mov    %rbp,%rdi
    4329:	e8 62 ad 00 00       	call   f090 <memcpy_s>
    432e:	85 c0                	test   %eax,%eax
    4330:	0f 85 82 00 00 00    	jne    43b8 <memccpy+0x268>
    4336:	e8 35 3d 00 00       	call   8070 <sgx_ocfree>
    433b:	44 89 e0             	mov    %r12d,%eax
    433e:	e9 66 fe ff ff       	jmp    41a9 <memccpy+0x59>
    4343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4348:	48 85 d2             	test   %rdx,%rdx
    434b:	41 be 28 00 00 00    	mov    $0x28,%r14d
    4351:	0f 84 8b fe ff ff    	je     41e2 <memccpy+0x92>
    4357:	4c 89 c6             	mov    %r8,%rsi
    435a:	48 89 d7             	mov    %rdx,%rdi
    435d:	e8 6e 3b 00 00       	call   7ed0 <sgx_is_within_enclave>
    4362:	85 c0                	test   %eax,%eax
    4364:	0f 84 3a fe ff ff    	je     41a4 <memccpy+0x54>
    436a:	bf 28 00 00 00       	mov    $0x28,%edi
    436f:	90                   	nop
    4370:	48 01 df             	add    %rbx,%rdi
    4373:	49 89 fe             	mov    %rdi,%r14
    4376:	0f 82 28 fe ff ff    	jb     41a4 <memccpy+0x54>
    437c:	e9 61 fe ff ff       	jmp    41e2 <memccpy+0x92>
    4381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4388:	48 89 de             	mov    %rbx,%rsi
    438b:	4c 89 e7             	mov    %r12,%rdi
    438e:	e8 3d 3b 00 00       	call   7ed0 <sgx_is_within_enclave>
    4393:	85 c0                	test   %eax,%eax
    4395:	0f 84 09 fe ff ff    	je     41a4 <memccpy+0x54>
    439b:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    439f:	48 39 fb             	cmp    %rdi,%rbx
    43a2:	0f 87 fc fd ff ff    	ja     41a4 <memccpy+0x54>
    43a8:	eb c6                	jmp    4370 <memccpy+0x220>
    43aa:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    43b1:	00 00 
    43b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    43b8:	e8 b3 3c 00 00       	call   8070 <sgx_ocfree>
    43bd:	b8 01 00 00 00       	mov    $0x1,%eax
    43c2:	e9 e2 fd ff ff       	jmp    41a9 <memccpy+0x59>
    43c7:	49 c7 47 08 00 00 00 	movq   $0x0,0x8(%r15)
    43ce:	00 
    43cf:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    43d6:	00 00 
    43d8:	e9 7a fe ff ff       	jmp    4257 <memccpy+0x107>
    43dd:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
    43e4:	00 
    43e5:	e9 b6 fe ff ff       	jmp    42a0 <memccpy+0x150>
    43ea:	e8 61 a7 00 00       	call   eb50 <__stack_chk_fail>
    43ef:	90                   	nop

00000000000043f0 <ocall_function_allow>:
    43f0:	31 f6                	xor    %esi,%esi
    43f2:	bf 08 00 00 00       	mov    $0x8,%edi
    43f7:	e9 f4 53 00 00       	jmp    97f0 <sgx_ocall>
    43fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004400 <sgx_oc_cpuidex>:
    4400:	41 54                	push   %r12
    4402:	55                   	push   %rbp
    4403:	53                   	push   %rbx
    4404:	48 89 fb             	mov    %rdi,%rbx
    4407:	48 83 ec 20          	sub    $0x20,%rsp
    440b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4412:	00 00 
    4414:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4419:	31 c0                	xor    %eax,%eax
    441b:	48 85 ff             	test   %rdi,%rdi
    441e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    4422:	89 54 24 08          	mov    %edx,0x8(%rsp)
    4426:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    442d:	00 00 
    442f:	74 5f                	je     4490 <sgx_oc_cpuidex+0x90>
    4431:	be 10 00 00 00       	mov    $0x10,%esi
    4436:	e8 95 3a 00 00       	call   7ed0 <sgx_is_within_enclave>
    443b:	85 c0                	test   %eax,%eax
    443d:	ba 02 00 00 00       	mov    $0x2,%edx
    4442:	75 24                	jne    4468 <sgx_oc_cpuidex+0x68>
    4444:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    4449:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4450:	00 00 
    4452:	89 d0                	mov    %edx,%eax
    4454:	0f 85 3f 01 00 00    	jne    4599 <sgx_oc_cpuidex+0x199>
    445a:	48 83 c4 20          	add    $0x20,%rsp
    445e:	5b                   	pop    %rbx
    445f:	5d                   	pop    %rbp
    4460:	41 5c                	pop    %r12
    4462:	c3                   	ret    
    4463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4468:	bf 20 00 00 00       	mov    $0x20,%edi
    446d:	e8 0e 3b 00 00       	call   7f80 <sgx_ocalloc>
    4472:	48 85 c0             	test   %rax,%rax
    4475:	48 89 c5             	mov    %rax,%rbp
    4478:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    447d:	75 39                	jne    44b8 <sgx_oc_cpuidex+0xb8>
    447f:	e8 ec 3b 00 00       	call   8070 <sgx_ocfree>
    4484:	ba 01 00 00 00       	mov    $0x1,%edx
    4489:	eb b9                	jmp    4444 <sgx_oc_cpuidex+0x44>
    448b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4490:	bf 10 00 00 00       	mov    $0x10,%edi
    4495:	e8 e6 3a 00 00       	call   7f80 <sgx_ocalloc>
    449a:	48 85 c0             	test   %rax,%rax
    449d:	48 89 c5             	mov    %rax,%rbp
    44a0:	0f 85 da 00 00 00    	jne    4580 <sgx_oc_cpuidex+0x180>
    44a6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    44ad:	00 00 
    44af:	eb ce                	jmp    447f <sgx_oc_cpuidex+0x7f>
    44b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    44b8:	48 8d 40 10          	lea    0x10(%rax),%rax
    44bc:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    44c1:	b9 08 00 00 00       	mov    $0x8,%ecx
    44c6:	be 08 00 00 00       	mov    $0x8,%esi
    44cb:	48 89 ef             	mov    %rbp,%rdi
    44ce:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    44d3:	e8 38 ac 00 00       	call   f110 <memcpy_verw_s>
    44d8:	85 c0                	test   %eax,%eax
    44da:	75 a3                	jne    447f <sgx_oc_cpuidex+0x7f>
    44dc:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    44e1:	ba 10 00 00 00       	mov    $0x10,%edx
    44e6:	31 f6                	xor    %esi,%esi
    44e8:	4c 89 e7             	mov    %r12,%rdi
    44eb:	e8 a0 a3 00 00       	call   e890 <memset_verw>
    44f0:	48 83 44 24 10 10    	addq   $0x10,0x10(%rsp)
    44f6:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    44fb:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    44ff:	b9 04 00 00 00       	mov    $0x4,%ecx
    4504:	be 04 00 00 00       	mov    $0x4,%esi
    4509:	e8 02 ac 00 00       	call   f110 <memcpy_verw_s>
    450e:	85 c0                	test   %eax,%eax
    4510:	0f 85 69 ff ff ff    	jne    447f <sgx_oc_cpuidex+0x7f>
    4516:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    451b:	48 8d 7d 0c          	lea    0xc(%rbp),%rdi
    451f:	b9 04 00 00 00       	mov    $0x4,%ecx
    4524:	be 04 00 00 00       	mov    $0x4,%esi
    4529:	e8 e2 ab 00 00       	call   f110 <memcpy_verw_s>
    452e:	85 c0                	test   %eax,%eax
    4530:	0f 85 49 ff ff ff    	jne    447f <sgx_oc_cpuidex+0x7f>
    4536:	48 89 ee             	mov    %rbp,%rsi
    4539:	bf 09 00 00 00       	mov    $0x9,%edi
    453e:	e8 ad 52 00 00       	call   97f0 <sgx_ocall>
    4543:	85 c0                	test   %eax,%eax
    4545:	89 c5                	mov    %eax,%ebp
    4547:	75 22                	jne    456b <sgx_oc_cpuidex+0x16b>
    4549:	48 85 db             	test   %rbx,%rbx
    454c:	74 1d                	je     456b <sgx_oc_cpuidex+0x16b>
    454e:	b9 10 00 00 00       	mov    $0x10,%ecx
    4553:	4c 89 e2             	mov    %r12,%rdx
    4556:	be 10 00 00 00       	mov    $0x10,%esi
    455b:	48 89 df             	mov    %rbx,%rdi
    455e:	e8 2d ab 00 00       	call   f090 <memcpy_s>
    4563:	85 c0                	test   %eax,%eax
    4565:	0f 85 14 ff ff ff    	jne    447f <sgx_oc_cpuidex+0x7f>
    456b:	e8 00 3b 00 00       	call   8070 <sgx_ocfree>
    4570:	89 ea                	mov    %ebp,%edx
    4572:	e9 cd fe ff ff       	jmp    4444 <sgx_oc_cpuidex+0x44>
    4577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    457e:	00 00 
    4580:	48 8d 40 10          	lea    0x10(%rax),%rax
    4584:	45 31 e4             	xor    %r12d,%r12d
    4587:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    458c:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    4593:	00 
    4594:	e9 5d ff ff ff       	jmp    44f6 <sgx_oc_cpuidex+0xf6>
    4599:	e8 b2 a5 00 00       	call   eb50 <__stack_chk_fail>
    459e:	66 90                	xchg   %ax,%ax

00000000000045a0 <sgx_thread_wait_untrusted_event_ocall>:
    45a0:	41 54                	push   %r12
    45a2:	55                   	push   %rbp
    45a3:	49 89 fc             	mov    %rdi,%r12
    45a6:	53                   	push   %rbx
    45a7:	bf 10 00 00 00       	mov    $0x10,%edi
    45ac:	48 83 ec 10          	sub    $0x10,%rsp
    45b0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    45b5:	e8 c6 39 00 00       	call   7f80 <sgx_ocalloc>
    45ba:	48 85 c0             	test   %rax,%rax
    45bd:	74 61                	je     4620 <sgx_thread_wait_untrusted_event_ocall+0x80>
    45bf:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    45c4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    45c8:	b9 08 00 00 00       	mov    $0x8,%ecx
    45cd:	be 08 00 00 00       	mov    $0x8,%esi
    45d2:	48 89 c3             	mov    %rax,%rbx
    45d5:	e8 36 ab 00 00       	call   f110 <memcpy_verw_s>
    45da:	85 c0                	test   %eax,%eax
    45dc:	75 42                	jne    4620 <sgx_thread_wait_untrusted_event_ocall+0x80>
    45de:	48 89 de             	mov    %rbx,%rsi
    45e1:	bf 0a 00 00 00       	mov    $0xa,%edi
    45e6:	e8 05 52 00 00       	call   97f0 <sgx_ocall>
    45eb:	4d 85 e4             	test   %r12,%r12
    45ee:	89 c5                	mov    %eax,%ebp
    45f0:	74 1d                	je     460f <sgx_thread_wait_untrusted_event_ocall+0x6f>
    45f2:	85 c0                	test   %eax,%eax
    45f4:	75 19                	jne    460f <sgx_thread_wait_untrusted_event_ocall+0x6f>
    45f6:	b9 04 00 00 00       	mov    $0x4,%ecx
    45fb:	48 89 da             	mov    %rbx,%rdx
    45fe:	be 04 00 00 00       	mov    $0x4,%esi
    4603:	4c 89 e7             	mov    %r12,%rdi
    4606:	e8 85 aa 00 00       	call   f090 <memcpy_s>
    460b:	85 c0                	test   %eax,%eax
    460d:	75 11                	jne    4620 <sgx_thread_wait_untrusted_event_ocall+0x80>
    460f:	e8 5c 3a 00 00       	call   8070 <sgx_ocfree>
    4614:	48 83 c4 10          	add    $0x10,%rsp
    4618:	89 e8                	mov    %ebp,%eax
    461a:	5b                   	pop    %rbx
    461b:	5d                   	pop    %rbp
    461c:	41 5c                	pop    %r12
    461e:	c3                   	ret    
    461f:	90                   	nop
    4620:	e8 4b 3a 00 00       	call   8070 <sgx_ocfree>
    4625:	48 83 c4 10          	add    $0x10,%rsp
    4629:	b8 01 00 00 00       	mov    $0x1,%eax
    462e:	5b                   	pop    %rbx
    462f:	5d                   	pop    %rbp
    4630:	41 5c                	pop    %r12
    4632:	c3                   	ret    
    4633:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    463a:	00 00 00 
    463d:	0f 1f 00             	nopl   (%rax)

0000000000004640 <sgx_thread_set_untrusted_event_ocall>:
    4640:	41 54                	push   %r12
    4642:	55                   	push   %rbp
    4643:	49 89 fc             	mov    %rdi,%r12
    4646:	53                   	push   %rbx
    4647:	bf 10 00 00 00       	mov    $0x10,%edi
    464c:	48 83 ec 10          	sub    $0x10,%rsp
    4650:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    4655:	e8 26 39 00 00       	call   7f80 <sgx_ocalloc>
    465a:	48 85 c0             	test   %rax,%rax
    465d:	74 61                	je     46c0 <sgx_thread_set_untrusted_event_ocall+0x80>
    465f:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4664:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4668:	b9 08 00 00 00       	mov    $0x8,%ecx
    466d:	be 08 00 00 00       	mov    $0x8,%esi
    4672:	48 89 c3             	mov    %rax,%rbx
    4675:	e8 96 aa 00 00       	call   f110 <memcpy_verw_s>
    467a:	85 c0                	test   %eax,%eax
    467c:	75 42                	jne    46c0 <sgx_thread_set_untrusted_event_ocall+0x80>
    467e:	48 89 de             	mov    %rbx,%rsi
    4681:	bf 0b 00 00 00       	mov    $0xb,%edi
    4686:	e8 65 51 00 00       	call   97f0 <sgx_ocall>
    468b:	4d 85 e4             	test   %r12,%r12
    468e:	89 c5                	mov    %eax,%ebp
    4690:	74 1d                	je     46af <sgx_thread_set_untrusted_event_ocall+0x6f>
    4692:	85 c0                	test   %eax,%eax
    4694:	75 19                	jne    46af <sgx_thread_set_untrusted_event_ocall+0x6f>
    4696:	b9 04 00 00 00       	mov    $0x4,%ecx
    469b:	48 89 da             	mov    %rbx,%rdx
    469e:	be 04 00 00 00       	mov    $0x4,%esi
    46a3:	4c 89 e7             	mov    %r12,%rdi
    46a6:	e8 e5 a9 00 00       	call   f090 <memcpy_s>
    46ab:	85 c0                	test   %eax,%eax
    46ad:	75 11                	jne    46c0 <sgx_thread_set_untrusted_event_ocall+0x80>
    46af:	e8 bc 39 00 00       	call   8070 <sgx_ocfree>
    46b4:	48 83 c4 10          	add    $0x10,%rsp
    46b8:	89 e8                	mov    %ebp,%eax
    46ba:	5b                   	pop    %rbx
    46bb:	5d                   	pop    %rbp
    46bc:	41 5c                	pop    %r12
    46be:	c3                   	ret    
    46bf:	90                   	nop
    46c0:	e8 ab 39 00 00       	call   8070 <sgx_ocfree>
    46c5:	48 83 c4 10          	add    $0x10,%rsp
    46c9:	b8 01 00 00 00       	mov    $0x1,%eax
    46ce:	5b                   	pop    %rbx
    46cf:	5d                   	pop    %rbp
    46d0:	41 5c                	pop    %r12
    46d2:	c3                   	ret    
    46d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    46da:	00 00 00 
    46dd:	0f 1f 00             	nopl   (%rax)

00000000000046e0 <sgx_thread_setwait_untrusted_events_ocall>:
    46e0:	41 54                	push   %r12
    46e2:	55                   	push   %rbp
    46e3:	49 89 fc             	mov    %rdi,%r12
    46e6:	53                   	push   %rbx
    46e7:	bf 18 00 00 00       	mov    $0x18,%edi
    46ec:	48 83 ec 10          	sub    $0x10,%rsp
    46f0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    46f5:	48 89 14 24          	mov    %rdx,(%rsp)
    46f9:	e8 82 38 00 00       	call   7f80 <sgx_ocalloc>
    46fe:	48 85 c0             	test   %rax,%rax
    4701:	74 7d                	je     4780 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    4703:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4708:	48 8d 78 08          	lea    0x8(%rax),%rdi
    470c:	b9 08 00 00 00       	mov    $0x8,%ecx
    4711:	be 08 00 00 00       	mov    $0x8,%esi
    4716:	48 89 c3             	mov    %rax,%rbx
    4719:	e8 f2 a9 00 00       	call   f110 <memcpy_verw_s>
    471e:	85 c0                	test   %eax,%eax
    4720:	75 5e                	jne    4780 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    4722:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    4726:	48 89 e2             	mov    %rsp,%rdx
    4729:	b9 08 00 00 00       	mov    $0x8,%ecx
    472e:	be 08 00 00 00       	mov    $0x8,%esi
    4733:	e8 d8 a9 00 00       	call   f110 <memcpy_verw_s>
    4738:	85 c0                	test   %eax,%eax
    473a:	75 44                	jne    4780 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    473c:	48 89 de             	mov    %rbx,%rsi
    473f:	bf 0c 00 00 00       	mov    $0xc,%edi
    4744:	e8 a7 50 00 00       	call   97f0 <sgx_ocall>
    4749:	4d 85 e4             	test   %r12,%r12
    474c:	89 c5                	mov    %eax,%ebp
    474e:	74 1d                	je     476d <sgx_thread_setwait_untrusted_events_ocall+0x8d>
    4750:	85 c0                	test   %eax,%eax
    4752:	75 19                	jne    476d <sgx_thread_setwait_untrusted_events_ocall+0x8d>
    4754:	b9 04 00 00 00       	mov    $0x4,%ecx
    4759:	48 89 da             	mov    %rbx,%rdx
    475c:	be 04 00 00 00       	mov    $0x4,%esi
    4761:	4c 89 e7             	mov    %r12,%rdi
    4764:	e8 27 a9 00 00       	call   f090 <memcpy_s>
    4769:	85 c0                	test   %eax,%eax
    476b:	75 13                	jne    4780 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    476d:	e8 fe 38 00 00       	call   8070 <sgx_ocfree>
    4772:	48 83 c4 10          	add    $0x10,%rsp
    4776:	89 e8                	mov    %ebp,%eax
    4778:	5b                   	pop    %rbx
    4779:	5d                   	pop    %rbp
    477a:	41 5c                	pop    %r12
    477c:	c3                   	ret    
    477d:	0f 1f 00             	nopl   (%rax)
    4780:	e8 eb 38 00 00       	call   8070 <sgx_ocfree>
    4785:	48 83 c4 10          	add    $0x10,%rsp
    4789:	b8 01 00 00 00       	mov    $0x1,%eax
    478e:	5b                   	pop    %rbx
    478f:	5d                   	pop    %rbp
    4790:	41 5c                	pop    %r12
    4792:	c3                   	ret    
    4793:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    479a:	00 00 00 
    479d:	0f 1f 00             	nopl   (%rax)

00000000000047a0 <_Z17write_block_sizesiR5Table>:
    47a0:	41 57                	push   %r15
    47a2:	41 56                	push   %r14
    47a4:	41 55                	push   %r13
    47a6:	41 54                	push   %r12
    47a8:	55                   	push   %rbp
    47a9:	53                   	push   %rbx
    47aa:	48 83 ec 48          	sub    $0x48,%rsp
    47ae:	85 ff                	test   %edi,%edi
    47b0:	0f 8e 6a 05 00 00    	jle    4d20 <_Z17write_block_sizesiR5Table+0x580>
    47b6:	89 f8                	mov    %edi,%eax
    47b8:	49 89 f6             	mov    %rsi,%r14
    47bb:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    47bf:	83 e8 01             	sub    $0x1,%eax
    47c2:	45 31 e4             	xor    %r12d,%r12d
    47c5:	45 31 ff             	xor    %r15d,%r15d
    47c8:	89 44 24 30          	mov    %eax,0x30(%rsp)
    47cc:	48 83 c0 01          	add    $0x1,%rax
    47d0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    47d5:	b8 00 00 00 80       	mov    $0x80000000,%eax
    47da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    47e0:	45 85 e4             	test   %r12d,%r12d
    47e3:	44 89 24 24          	mov    %r12d,(%rsp)
    47e7:	78 06                	js     47ef <_Z17write_block_sizesiR5Table+0x4f>
    47e9:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)
    47ed:	7f 25                	jg     4814 <_Z17write_block_sizesiR5Table+0x74>
    47ef:	48 8d 0d f2 c9 01 00 	lea    0x1c9f2(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    47f6:	48 8d 15 df ca 01 00 	lea    0x1cadf(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    47fd:	48 8d 3d f7 c9 01 00 	lea    0x1c9f7(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4804:	be 3b 00 00 00       	mov    $0x3b,%esi
    4809:	89 04 24             	mov    %eax,(%rsp)
    480c:	e8 5f 63 00 00       	call   ab70 <__assert>
    4811:	8b 04 24             	mov    (%rsp),%eax
    4814:	4d 8b 2e             	mov    (%r14),%r13
    4817:	4c 89 e3             	mov    %r12,%rbx
    481a:	45 8d 4f 01          	lea    0x1(%r15),%r9d
    481e:	48 c1 e3 05          	shl    $0x5,%rbx
    4822:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    4827:	49 8d 54 1d 00       	lea    0x0(%r13,%rbx,1),%rdx
    482c:	8b 3a                	mov    (%rdx),%edi
    482e:	8b 5a 08             	mov    0x8(%rdx),%ebx
    4831:	8b 4a 0c             	mov    0xc(%rdx),%ecx
    4834:	8b 6a 04             	mov    0x4(%rdx),%ebp
    4837:	8b 72 18             	mov    0x18(%rdx),%esi
    483a:	89 3c 24             	mov    %edi,(%rsp)
    483d:	8b 7a 14             	mov    0x14(%rdx),%edi
    4840:	39 c3                	cmp    %eax,%ebx
    4842:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    4846:	8b 4a 1c             	mov    0x1c(%rdx),%ecx
    4849:	41 0f 94 c3          	sete   %r11b
    484d:	85 ed                	test   %ebp,%ebp
    484f:	89 74 24 18          	mov    %esi,0x18(%rsp)
    4853:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    4857:	40 0f 94 c7          	sete   %dil
    485b:	39 c3                	cmp    %eax,%ebx
    485d:	0f 95 c0             	setne  %al
    4860:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    4864:	89 f9                	mov    %edi,%ecx
    4866:	21 c1                	and    %eax,%ecx
    4868:	44 21 df             	and    %r11d,%edi
    486b:	44 0f b6 c1          	movzbl %cl,%r8d
    486f:	44 0f b6 d7          	movzbl %dil,%r10d
    4873:	83 f1 01             	xor    $0x1,%ecx
    4876:	83 f7 01             	xor    $0x1,%edi
    4879:	83 fd 01             	cmp    $0x1,%ebp
    487c:	0f b6 c9             	movzbl %cl,%ecx
    487f:	40 0f 94 c6          	sete   %sil
    4883:	40 0f b6 ff          	movzbl %dil,%edi
    4887:	21 f0                	and    %esi,%eax
    4889:	44 21 de             	and    %r11d,%esi
    488c:	83 f0 01             	xor    $0x1,%eax
    488f:	0f b6 c0             	movzbl %al,%eax
    4892:	44 0f af f8          	imul   %eax,%r15d
    4896:	45 0f af ca          	imul   %r10d,%r9d
    489a:	44 0f af 52 10       	imul   0x10(%rdx),%r10d
    489f:	44 0f af ff          	imul   %edi,%r15d
    48a3:	45 01 cf             	add    %r9d,%r15d
    48a6:	41 89 f1             	mov    %esi,%r9d
    48a9:	40 0f b6 f6          	movzbl %sil,%esi
    48ad:	44 0f af f9          	imul   %ecx,%r15d
    48b1:	41 83 f1 01          	xor    $0x1,%r9d
    48b5:	45 0f b6 c9          	movzbl %r9b,%r9d
    48b9:	44 0f af 4a 10       	imul   0x10(%rdx),%r9d
    48be:	45 01 c7             	add    %r8d,%r15d
    48c1:	41 0f af f7          	imul   %r15d,%esi
    48c5:	44 0f af 42 10       	imul   0x10(%rdx),%r8d
    48ca:	44 01 ce             	add    %r9d,%esi
    48cd:	0f af f0             	imul   %eax,%esi
    48d0:	0f af f7             	imul   %edi,%esi
    48d3:	44 01 d6             	add    %r10d,%esi
    48d6:	0f af f1             	imul   %ecx,%esi
    48d9:	41 01 f0             	add    %esi,%r8d
    48dc:	45 85 e4             	test   %r12d,%r12d
    48df:	78 06                	js     48e7 <_Z17write_block_sizesiR5Table+0x147>
    48e1:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)
    48e5:	7f 34                	jg     491b <_Z17write_block_sizesiR5Table+0x17b>
    48e7:	48 8d 15 e8 c9 01 00 	lea    0x1c9e8(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    48ee:	48 8d 0d f3 c8 01 00 	lea    0x1c8f3(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    48f5:	48 8d 3d ff c8 01 00 	lea    0x1c8ff(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    48fc:	be 48 00 00 00       	mov    $0x48,%esi
    4901:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
    4906:	e8 65 62 00 00       	call   ab70 <__assert>
    490b:	4d 8b 2e             	mov    (%r14),%r13
    490e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    4913:	44 8b 44 24 38       	mov    0x38(%rsp),%r8d
    4918:	4c 01 ea             	add    %r13,%rdx
    491b:	8b 04 24             	mov    (%rsp),%eax
    491e:	49 83 c4 01          	add    $0x1,%r12
    4922:	4c 39 64 24 28       	cmp    %r12,0x28(%rsp)
    4927:	89 6a 04             	mov    %ebp,0x4(%rdx)
    492a:	89 5a 08             	mov    %ebx,0x8(%rdx)
    492d:	44 89 42 10          	mov    %r8d,0x10(%rdx)
    4931:	89 02                	mov    %eax,(%rdx)
    4933:	8b 44 24 10          	mov    0x10(%rsp),%eax
    4937:	89 42 0c             	mov    %eax,0xc(%rdx)
    493a:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    493e:	89 42 14             	mov    %eax,0x14(%rdx)
    4941:	8b 44 24 18          	mov    0x18(%rsp),%eax
    4945:	89 42 18             	mov    %eax,0x18(%rdx)
    4948:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    494c:	89 42 1c             	mov    %eax,0x1c(%rdx)
    494f:	89 d8                	mov    %ebx,%eax
    4951:	0f 85 89 fe ff ff    	jne    47e0 <_Z17write_block_sizesiR5Table+0x40>
    4957:	8b 44 24 30          	mov    0x30(%rsp),%eax
    495b:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
    4960:	41 bf 00 00 00 80    	mov    $0x80000000,%r15d
    4966:	45 31 e4             	xor    %r12d,%r12d
    4969:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    496e:	89 c5                	mov    %eax,%ebp
    4970:	48 98                	cltq   
    4972:	48 c1 e0 05          	shl    $0x5,%rax
    4976:	48 89 04 24          	mov    %rax,(%rsp)
    497a:	31 c0                	xor    %eax,%eax
    497c:	41 89 c5             	mov    %eax,%r13d
    497f:	90                   	nop
    4980:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    4985:	8b 43 2c             	mov    0x2c(%rbx),%eax
    4988:	39 e8                	cmp    %ebp,%eax
    498a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    498e:	7f 2e                	jg     49be <_Z17write_block_sizesiR5Table+0x21e>
    4990:	48 8d 0d 51 c8 01 00 	lea    0x1c851(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4997:	48 8d 15 3e c9 01 00 	lea    0x1c93e(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    499e:	48 8d 3d 56 c8 01 00 	lea    0x1c856(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    49a5:	be 3b 00 00 00       	mov    $0x3b,%esi
    49aa:	e8 c1 61 00 00       	call   ab70 <__assert>
    49af:	8b 73 2c             	mov    0x2c(%rbx),%esi
    49b2:	48 8b 03             	mov    (%rbx),%rax
    49b5:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    49b9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    49be:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    49c3:	48 03 04 24          	add    (%rsp),%rax
    49c7:	8b 48 0c             	mov    0xc(%rax),%ecx
    49ca:	8b 58 08             	mov    0x8(%rax),%ebx
    49cd:	44 8b 70 04          	mov    0x4(%rax),%r14d
    49d1:	8b 38                	mov    (%rax),%edi
    49d3:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
    49d7:	8b 48 1c             	mov    0x1c(%rax),%ecx
    49da:	44 39 fb             	cmp    %r15d,%ebx
    49dd:	0f 94 c2             	sete   %dl
    49e0:	45 85 f6             	test   %r14d,%r14d
    49e3:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    49e7:	8b 78 18             	mov    0x18(%rax),%edi
    49ea:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    49ee:	0f 94 c1             	sete   %cl
    49f1:	44 39 fb             	cmp    %r15d,%ebx
    49f4:	40 0f 95 c6          	setne  %sil
    49f8:	41 89 c8             	mov    %ecx,%r8d
    49fb:	21 d1                	and    %edx,%ecx
    49fd:	41 21 f0             	and    %esi,%r8d
    4a00:	44 0f b6 d1          	movzbl %cl,%r10d
    4a04:	83 f1 01             	xor    $0x1,%ecx
    4a07:	41 83 f0 01          	xor    $0x1,%r8d
    4a0b:	41 83 fe 01          	cmp    $0x1,%r14d
    4a0f:	89 7c 24 38          	mov    %edi,0x38(%rsp)
    4a13:	40 0f 94 c7          	sete   %dil
    4a17:	45 8d 7c 24 01       	lea    0x1(%r12),%r15d
    4a1c:	0f b6 c9             	movzbl %cl,%ecx
    4a1f:	21 fa                	and    %edi,%edx
    4a21:	21 fe                	and    %edi,%esi
    4a23:	45 0f b6 c0          	movzbl %r8b,%r8d
    4a27:	44 0f b6 da          	movzbl %dl,%r11d
    4a2b:	83 f2 01             	xor    $0x1,%edx
    4a2e:	44 0f b6 ce          	movzbl %sil,%r9d
    4a32:	0f b6 d2             	movzbl %dl,%edx
    4a35:	83 f6 01             	xor    $0x1,%esi
    4a38:	89 d7                	mov    %edx,%edi
    4a3a:	40 0f b6 f6          	movzbl %sil,%esi
    4a3e:	45 0f af fb          	imul   %r11d,%r15d
    4a42:	41 0f af fc          	imul   %r12d,%edi
    4a46:	44 0f af 58 10       	imul   0x10(%rax),%r11d
    4a4b:	44 01 ff             	add    %r15d,%edi
    4a4e:	44 8b 78 14          	mov    0x14(%rax),%r15d
    4a52:	0f af fe             	imul   %esi,%edi
    4a55:	41 0f af d5          	imul   %r13d,%edx
    4a59:	44 01 cf             	add    %r9d,%edi
    4a5c:	44 0f af 48 10       	imul   0x10(%rax),%r9d
    4a61:	41 01 d3             	add    %edx,%r11d
    4a64:	44 89 d2             	mov    %r10d,%edx
    4a67:	44 0f af de          	imul   %esi,%r11d
    4a6b:	0f af f9             	imul   %ecx,%edi
    4a6e:	45 01 cb             	add    %r9d,%r11d
    4a71:	45 89 e9             	mov    %r13d,%r9d
    4a74:	45 0f af e2          	imul   %r10d,%r12d
    4a78:	44 0f af d9          	imul   %ecx,%r11d
    4a7c:	41 01 fc             	add    %edi,%r12d
    4a7f:	45 0f af ca          	imul   %r10d,%r9d
    4a83:	45 0f af e0          	imul   %r8d,%r12d
    4a87:	45 01 cb             	add    %r9d,%r11d
    4a8a:	45 0f af d8          	imul   %r8d,%r11d
    4a8e:	44 0f af f9          	imul   %ecx,%r15d
    4a92:	0f af 48 10          	imul   0x10(%rax),%ecx
    4a96:	45 89 dd             	mov    %r11d,%r13d
    4a99:	41 0f af d4          	imul   %r12d,%edx
    4a9d:	45 0f af d3          	imul   %r11d,%r10d
    4aa1:	41 01 d7             	add    %edx,%r15d
    4aa4:	45 0f af f8          	imul   %r8d,%r15d
    4aa8:	41 01 ca             	add    %ecx,%r10d
    4aab:	45 0f af c2          	imul   %r10d,%r8d
    4aaf:	3b 6c 24 0c          	cmp    0xc(%rsp),%ebp
    4ab3:	7c 3a                	jl     4aef <_Z17write_block_sizesiR5Table+0x34f>
    4ab5:	48 8d 0d 2c c7 01 00 	lea    0x1c72c(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4abc:	48 8d 15 13 c8 01 00 	lea    0x1c813(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    4ac3:	48 8d 3d 31 c7 01 00 	lea    0x1c731(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4aca:	be 48 00 00 00       	mov    $0x48,%esi
    4acf:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    4ad4:	e8 97 60 00 00       	call   ab70 <__assert>
    4ad9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4ade:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    4ae3:	48 8b 00             	mov    (%rax),%rax
    4ae6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4aeb:	48 03 04 24          	add    (%rsp),%rax
    4aef:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    4af3:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    4af7:	83 ed 01             	sub    $0x1,%ebp
    4afa:	48 83 2c 24 20       	subq   $0x20,(%rsp)
    4aff:	83 fd ff             	cmp    $0xffffffff,%ebp
    4b02:	44 89 78 14          	mov    %r15d,0x14(%rax)
    4b06:	44 89 70 04          	mov    %r14d,0x4(%rax)
    4b0a:	89 58 08             	mov    %ebx,0x8(%rax)
    4b0d:	41 89 df             	mov    %ebx,%r15d
    4b10:	89 30                	mov    %esi,(%rax)
    4b12:	8b 74 24 18          	mov    0x18(%rsp),%esi
    4b16:	44 89 40 10          	mov    %r8d,0x10(%rax)
    4b1a:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4b1d:	89 70 0c             	mov    %esi,0xc(%rax)
    4b20:	8b 74 24 38          	mov    0x38(%rsp),%esi
    4b24:	89 70 18             	mov    %esi,0x18(%rax)
    4b27:	0f 85 53 fe ff ff    	jne    4980 <_Z17write_block_sizesiR5Table+0x1e0>
    4b2d:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    4b31:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    4b36:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    4b3b:	85 c0                	test   %eax,%eax
    4b3d:	0f 8e dd 01 00 00    	jle    4d20 <_Z17write_block_sizesiR5Table+0x580>
    4b43:	8b 44 24 30          	mov    0x30(%rsp),%eax
    4b47:	45 31 ff             	xor    %r15d,%r15d
    4b4a:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
    4b51:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    4b58:	00 
    4b59:	48 83 c0 01          	add    $0x1,%rax
    4b5d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    4b62:	b8 00 00 00 80       	mov    $0x80000000,%eax
    4b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4b6e:	00 00 
    4b70:	45 85 ff             	test   %r15d,%r15d
    4b73:	44 89 7c 24 10       	mov    %r15d,0x10(%rsp)
    4b78:	78 06                	js     4b80 <_Z17write_block_sizesiR5Table+0x3e0>
    4b7a:	45 39 7e 2c          	cmp    %r15d,0x2c(%r14)
    4b7e:	7f 2a                	jg     4baa <_Z17write_block_sizesiR5Table+0x40a>
    4b80:	48 8d 0d 61 c6 01 00 	lea    0x1c661(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4b87:	48 8d 15 4e c7 01 00 	lea    0x1c74e(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4b8e:	48 8d 3d 66 c6 01 00 	lea    0x1c666(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4b95:	be 3b 00 00 00       	mov    $0x3b,%esi
    4b9a:	89 44 24 10          	mov    %eax,0x10(%rsp)
    4b9e:	e8 cd 5f 00 00       	call   ab70 <__assert>
    4ba3:	4d 8b 2e             	mov    (%r14),%r13
    4ba6:	8b 44 24 10          	mov    0x10(%rsp),%eax
    4baa:	4c 89 ff             	mov    %r15,%rdi
    4bad:	48 c1 e7 05          	shl    $0x5,%rdi
    4bb1:	49 8d 54 3d 00       	lea    0x0(%r13,%rdi,1),%rdx
    4bb6:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    4bbb:	8b 1a                	mov    (%rdx),%ebx
    4bbd:	8b 6a 08             	mov    0x8(%rdx),%ebp
    4bc0:	44 8b 62 04          	mov    0x4(%rdx),%r12d
    4bc4:	8b 7a 14             	mov    0x14(%rdx),%edi
    4bc7:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
    4bcb:	8b 5a 0c             	mov    0xc(%rdx),%ebx
    4bce:	39 e8                	cmp    %ebp,%eax
    4bd0:	89 5c 24 18          	mov    %ebx,0x18(%rsp)
    4bd4:	8b 5a 10             	mov    0x10(%rdx),%ebx
    4bd7:	41 89 db             	mov    %ebx,%r11d
    4bda:	89 5c 24 1c          	mov    %ebx,0x1c(%rsp)
    4bde:	8b 5a 18             	mov    0x18(%rdx),%ebx
    4be1:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
    4be5:	8b 5a 1c             	mov    0x1c(%rdx),%ebx
    4be8:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
    4bec:	0f 94 c3             	sete   %bl
    4bef:	45 85 e4             	test   %r12d,%r12d
    4bf2:	40 0f 94 c6          	sete   %sil
    4bf6:	39 e8                	cmp    %ebp,%eax
    4bf8:	44 89 d8             	mov    %r11d,%eax
    4bfb:	0f 95 c1             	setne  %cl
    4bfe:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
    4c03:	41 89 f1             	mov    %esi,%r9d
    4c06:	0f af c7             	imul   %edi,%eax
    4c09:	41 21 c9             	and    %ecx,%r9d
    4c0c:	21 de                	and    %ebx,%esi
    4c0e:	45 0f b6 d1          	movzbl %r9b,%r10d
    4c12:	41 83 f1 01          	xor    $0x1,%r9d
    4c16:	45 0f b6 c9          	movzbl %r9b,%r9d
    4c1a:	45 89 d8             	mov    %r11d,%r8d
    4c1d:	44 01 d8             	add    %r11d,%eax
    4c20:	45 89 d3             	mov    %r10d,%r11d
    4c23:	41 0f af c2          	imul   %r10d,%eax
    4c27:	45 0f af c1          	imul   %r9d,%r8d
    4c2b:	44 0f af df          	imul   %edi,%r11d
    4c2f:	44 01 c0             	add    %r8d,%eax
    4c32:	44 0f b6 c6          	movzbl %sil,%r8d
    4c36:	83 f6 01             	xor    $0x1,%esi
    4c39:	41 83 fc 01          	cmp    $0x1,%r12d
    4c3d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4c41:	0f 94 c0             	sete   %al
    4c44:	40 0f b6 f6          	movzbl %sil,%esi
    4c48:	21 c1                	and    %eax,%ecx
    4c4a:	21 d8                	and    %ebx,%eax
    4c4c:	89 c3                	mov    %eax,%ebx
    4c4e:	0f b6 c0             	movzbl %al,%eax
    4c51:	83 f1 01             	xor    $0x1,%ecx
    4c54:	0f af 04 24          	imul   (%rsp),%eax
    4c58:	83 f3 01             	xor    $0x1,%ebx
    4c5b:	0f b6 c9             	movzbl %cl,%ecx
    4c5e:	0f b6 db             	movzbl %bl,%ebx
    4c61:	0f af df             	imul   %edi,%ebx
    4c64:	41 0f af f8          	imul   %r8d,%edi
    4c68:	01 c3                	add    %eax,%ebx
    4c6a:	0f af d9             	imul   %ecx,%ebx
    4c6d:	0f af 0c 24          	imul   (%rsp),%ecx
    4c71:	0f af de             	imul   %esi,%ebx
    4c74:	01 fb                	add    %edi,%ebx
    4c76:	41 0f af d9          	imul   %r9d,%ebx
    4c7a:	0f af ce             	imul   %esi,%ecx
    4c7d:	44 01 db             	add    %r11d,%ebx
    4c80:	44 0f af c3          	imul   %ebx,%r8d
    4c84:	44 0f af d3          	imul   %ebx,%r10d
    4c88:	44 01 c1             	add    %r8d,%ecx
    4c8b:	41 0f af c9          	imul   %r9d,%ecx
    4c8f:	45 85 ff             	test   %r15d,%r15d
    4c92:	41 8d 04 0a          	lea    (%r10,%rcx,1),%eax
    4c96:	89 04 24             	mov    %eax,(%rsp)
    4c99:	78 06                	js     4ca1 <_Z17write_block_sizesiR5Table+0x501>
    4c9b:	45 39 7e 2c          	cmp    %r15d,0x2c(%r14)
    4c9f:	7f 2a                	jg     4ccb <_Z17write_block_sizesiR5Table+0x52b>
    4ca1:	48 8d 15 2e c6 01 00 	lea    0x1c62e(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    4ca8:	48 8d 0d 39 c5 01 00 	lea    0x1c539(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4caf:	48 8d 3d 45 c5 01 00 	lea    0x1c545(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4cb6:	be 48 00 00 00       	mov    $0x48,%esi
    4cbb:	e8 b0 5e 00 00       	call   ab70 <__assert>
    4cc0:	4d 8b 2e             	mov    (%r14),%r13
    4cc3:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    4cc8:	4c 01 ea             	add    %r13,%rdx
    4ccb:	8b 44 24 10          	mov    0x10(%rsp),%eax
    4ccf:	49 83 c7 01          	add    $0x1,%r15
    4cd3:	4c 3b 7c 24 30       	cmp    0x30(%rsp),%r15
    4cd8:	44 89 62 04          	mov    %r12d,0x4(%rdx)
    4cdc:	89 6a 08             	mov    %ebp,0x8(%rdx)
    4cdf:	89 5a 14             	mov    %ebx,0x14(%rdx)
    4ce2:	89 02                	mov    %eax,(%rdx)
    4ce4:	8b 44 24 18          	mov    0x18(%rsp),%eax
    4ce8:	89 42 0c             	mov    %eax,0xc(%rdx)
    4ceb:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    4cef:	89 42 10             	mov    %eax,0x10(%rdx)
    4cf2:	8b 44 24 20          	mov    0x20(%rsp),%eax
    4cf6:	89 42 18             	mov    %eax,0x18(%rdx)
    4cf9:	8b 44 24 38          	mov    0x38(%rsp),%eax
    4cfd:	89 42 1c             	mov    %eax,0x1c(%rdx)
    4d00:	89 e8                	mov    %ebp,%eax
    4d02:	0f 85 68 fe ff ff    	jne    4b70 <_Z17write_block_sizesiR5Table+0x3d0>
    4d08:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    4d0c:	48 83 c4 48          	add    $0x48,%rsp
    4d10:	5b                   	pop    %rbx
    4d11:	5d                   	pop    %rbp
    4d12:	41 5c                	pop    %r12
    4d14:	41 5d                	pop    %r13
    4d16:	41 5e                	pop    %r14
    4d18:	41 5f                	pop    %r15
    4d1a:	c3                   	ret    
    4d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4d20:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    4d27:	00 
    4d28:	eb de                	jmp    4d08 <_Z17write_block_sizesiR5Table+0x568>
    4d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004d30 <_Z7reversePc>:
    4d30:	53                   	push   %rbx
    4d31:	48 89 fb             	mov    %rdi,%rbx
    4d34:	e8 d7 9c 00 00       	call   ea10 <strlen>
    4d39:	41 89 c0             	mov    %eax,%r8d
    4d3c:	83 e8 01             	sub    $0x1,%eax
    4d3f:	85 c0                	test   %eax,%eax
    4d41:	7e 30                	jle    4d73 <_Z7reversePc+0x43>
    4d43:	48 98                	cltq   
    4d45:	48 89 df             	mov    %rbx,%rdi
    4d48:	31 d2                	xor    %edx,%edx
    4d4a:	48 01 d8             	add    %rbx,%rax
    4d4d:	0f 1f 00             	nopl   (%rax)
    4d50:	0f b6 0f             	movzbl (%rdi),%ecx
    4d53:	0f b6 30             	movzbl (%rax),%esi
    4d56:	83 c2 01             	add    $0x1,%edx
    4d59:	48 83 c7 01          	add    $0x1,%rdi
    4d5d:	48 83 e8 01          	sub    $0x1,%rax
    4d61:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
    4d65:	88 48 01             	mov    %cl,0x1(%rax)
    4d68:	89 d1                	mov    %edx,%ecx
    4d6a:	f7 d1                	not    %ecx
    4d6c:	44 01 c1             	add    %r8d,%ecx
    4d6f:	39 ca                	cmp    %ecx,%edx
    4d71:	7c dd                	jl     4d50 <_Z7reversePc+0x20>
    4d73:	5b                   	pop    %rbx
    4d74:	c3                   	ret    
    4d75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4d7c:	00 00 00 
    4d7f:	90                   	nop

0000000000004d80 <_Z4itoaiPcPi>:
    4d80:	89 f8                	mov    %edi,%eax
    4d82:	53                   	push   %rbx
    4d83:	49 89 f0             	mov    %rsi,%r8
    4d86:	c1 f8 1f             	sar    $0x1f,%eax
    4d89:	48 89 d3             	mov    %rdx,%rbx
    4d8c:	45 31 d2             	xor    %r10d,%r10d
    4d8f:	89 c1                	mov    %eax,%ecx
    4d91:	41 bb 67 66 66 66    	mov    $0x66666667,%r11d
    4d97:	31 f9                	xor    %edi,%ecx
    4d99:	29 c1                	sub    %eax,%ecx
    4d9b:	eb 06                	jmp    4da3 <_Z4itoaiPcPi+0x23>
    4d9d:	0f 1f 00             	nopl   (%rax)
    4da0:	45 89 ca             	mov    %r9d,%r10d
    4da3:	89 c8                	mov    %ecx,%eax
    4da5:	49 83 c0 01          	add    $0x1,%r8
    4da9:	45 8d 4a 01          	lea    0x1(%r10),%r9d
    4dad:	41 f7 eb             	imul   %r11d
    4db0:	89 c8                	mov    %ecx,%eax
    4db2:	c1 f8 1f             	sar    $0x1f,%eax
    4db5:	c1 fa 02             	sar    $0x2,%edx
    4db8:	29 c2                	sub    %eax,%edx
    4dba:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
    4dbd:	01 c0                	add    %eax,%eax
    4dbf:	29 c1                	sub    %eax,%ecx
    4dc1:	83 c1 30             	add    $0x30,%ecx
    4dc4:	41 88 48 ff          	mov    %cl,-0x1(%r8)
    4dc8:	85 d2                	test   %edx,%edx
    4dca:	89 d1                	mov    %edx,%ecx
    4dcc:	75 d2                	jne    4da0 <_Z4itoaiPcPi+0x20>
    4dce:	85 ff                	test   %edi,%edi
    4dd0:	79 0c                	jns    4dde <_Z4itoaiPcPi+0x5e>
    4dd2:	4d 63 c9             	movslq %r9d,%r9
    4dd5:	42 c6 04 0e 2d       	movb   $0x2d,(%rsi,%r9,1)
    4dda:	45 8d 4a 02          	lea    0x2(%r10),%r9d
    4dde:	49 63 c1             	movslq %r9d,%rax
    4de1:	48 89 f7             	mov    %rsi,%rdi
    4de4:	c6 04 06 00          	movb   $0x0,(%rsi,%rax,1)
    4de8:	44 89 0b             	mov    %r9d,(%rbx)
    4deb:	5b                   	pop    %rbx
    4dec:	e9 3f ff ff ff       	jmp    4d30 <_Z7reversePc>
    4df1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4df8:	00 00 00 
    4dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004e00 <_Z8toStringPc5TableS0_>:
    4e00:	41 57                	push   %r15
    4e02:	41 56                	push   %r14
    4e04:	41 55                	push   %r13
    4e06:	41 54                	push   %r12
    4e08:	55                   	push   %rbp
    4e09:	53                   	push   %rbx
    4e0a:	48 89 fb             	mov    %rdi,%rbx
    4e0d:	48 83 ec 68          	sub    $0x68,%rsp
    4e11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4e18:	00 00 
    4e1a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4e1f:	31 c0                	xor    %eax,%eax
    4e21:	8b 46 2c             	mov    0x2c(%rsi),%eax
    4e24:	85 c0                	test   %eax,%eax
    4e26:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4e2a:	0f 8e 30 01 00 00    	jle    4f60 <_Z8toStringPc5TableS0_+0x160>
    4e30:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    4e35:	49 89 f5             	mov    %rsi,%r13
    4e38:	49 89 d7             	mov    %rdx,%r15
    4e3b:	31 ed                	xor    %ebp,%ebp
    4e3d:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    4e42:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4e47:	48 8d 44 24 2c       	lea    0x2c(%rsp),%rax
    4e4c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4e51:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    4e56:	48 89 04 24          	mov    %rax,(%rsp)
    4e5a:	e9 d7 00 00 00       	jmp    4f36 <_Z8toStringPc5TableS0_+0x136>
    4e5f:	90                   	nop
    4e60:	48 8d 15 75 c4 01 00 	lea    0x1c475(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4e67:	48 8d 0d 7a c3 01 00 	lea    0x1c37a(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4e6e:	48 8d 3d 86 c3 01 00 	lea    0x1c386(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4e75:	be 3b 00 00 00       	mov    $0x3b,%esi
    4e7a:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
    4e7e:	49 89 ee             	mov    %rbp,%r14
    4e81:	e8 ea 5c 00 00       	call   ab70 <__assert>
    4e86:	49 8b 55 00          	mov    0x0(%r13),%rdx
    4e8a:	49 c1 e6 05          	shl    $0x5,%r14
    4e8e:	8b 44 24 08          	mov    0x8(%rsp),%eax
    4e92:	46 8b 4c 32 0c       	mov    0xc(%rdx,%r14,1),%r9d
    4e97:	41 39 47 2c          	cmp    %eax,0x2c(%r15)
    4e9b:	7f 29                	jg     4ec6 <_Z8toStringPc5TableS0_+0xc6>
    4e9d:	48 8d 0d 44 c3 01 00 	lea    0x1c344(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    4ea4:	48 8d 15 31 c4 01 00 	lea    0x1c431(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4eab:	48 8d 3d 49 c3 01 00 	lea    0x1c349(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    4eb2:	be 3b 00 00 00       	mov    $0x3b,%esi
    4eb7:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    4ebc:	e8 af 5c 00 00       	call   ab70 <__assert>
    4ec1:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    4ec6:	49 8b 07             	mov    (%r15),%rax
    4ec9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4ece:	44 89 cf             	mov    %r9d,%edi
    4ed1:	4c 89 e6             	mov    %r12,%rsi
    4ed4:	48 83 c5 01          	add    $0x1,%rbp
    4ed8:	46 8b 74 30 0c       	mov    0xc(%rax,%r14,1),%r14d
    4edd:	e8 9e fe ff ff       	call   4d80 <_Z4itoaiPcPi>
    4ee2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    4ee7:	48 8b 34 24          	mov    (%rsp),%rsi
    4eeb:	44 89 f7             	mov    %r14d,%edi
    4eee:	e8 8d fe ff ff       	call   4d80 <_Z4itoaiPcPi>
    4ef3:	4c 63 74 24 28       	movslq 0x28(%rsp),%r14
    4ef8:	48 89 df             	mov    %rbx,%rdi
    4efb:	4c 89 e6             	mov    %r12,%rsi
    4efe:	4c 89 f2             	mov    %r14,%rdx
    4f01:	4c 01 f3             	add    %r14,%rbx
    4f04:	e8 17 9b 00 00       	call   ea20 <strncpy>
    4f09:	4c 63 74 24 2c       	movslq 0x2c(%rsp),%r14
    4f0e:	48 8b 34 24          	mov    (%rsp),%rsi
    4f12:	48 83 c3 01          	add    $0x1,%rbx
    4f16:	c6 43 ff 20          	movb   $0x20,-0x1(%rbx)
    4f1a:	48 89 df             	mov    %rbx,%rdi
    4f1d:	4c 89 f2             	mov    %r14,%rdx
    4f20:	4c 01 f3             	add    %r14,%rbx
    4f23:	e8 f8 9a 00 00       	call   ea20 <strncpy>
    4f28:	48 83 c3 01          	add    $0x1,%rbx
    4f2c:	c6 43 ff 0a          	movb   $0xa,-0x1(%rbx)
    4f30:	39 6c 24 0c          	cmp    %ebp,0xc(%rsp)
    4f34:	7e 2a                	jle    4f60 <_Z8toStringPc5TableS0_+0x160>
    4f36:	41 39 6d 2c          	cmp    %ebp,0x2c(%r13)
    4f3a:	89 e8                	mov    %ebp,%eax
    4f3c:	0f 8e 1e ff ff ff    	jle    4e60 <_Z8toStringPc5TableS0_+0x60>
    4f42:	49 8b 55 00          	mov    0x0(%r13),%rdx
    4f46:	49 89 ee             	mov    %rbp,%r14
    4f49:	49 c1 e6 05          	shl    $0x5,%r14
    4f4d:	46 8b 4c 32 0c       	mov    0xc(%rdx,%r14,1),%r9d
    4f52:	e9 40 ff ff ff       	jmp    4e97 <_Z8toStringPc5TableS0_+0x97>
    4f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4f5e:	00 00 
    4f60:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    4f65:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4f6c:	00 00 
    4f6e:	c6 03 00             	movb   $0x0,(%rbx)
    4f71:	75 0f                	jne    4f82 <_Z8toStringPc5TableS0_+0x182>
    4f73:	48 83 c4 68          	add    $0x68,%rsp
    4f77:	5b                   	pop    %rbx
    4f78:	5d                   	pop    %rbp
    4f79:	41 5c                	pop    %r12
    4f7b:	41 5d                	pop    %r13
    4f7d:	41 5e                	pop    %r14
    4f7f:	41 5f                	pop    %r15
    4f81:	c3                   	ret    
    4f82:	e8 c9 9b 00 00       	call   eb50 <__stack_chk_fail>
    4f87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4f8e:	00 00 

0000000000004f90 <printf>:
    4f90:	53                   	push   %rbx
    4f91:	49 89 fa             	mov    %rdi,%r10
    4f94:	48 81 ec e0 20 00 00 	sub    $0x20e0,%rsp
    4f9b:	84 c0                	test   %al,%al
    4f9d:	48 89 b4 24 38 20 00 	mov    %rsi,0x2038(%rsp)
    4fa4:	00 
    4fa5:	48 89 94 24 40 20 00 	mov    %rdx,0x2040(%rsp)
    4fac:	00 
    4fad:	48 89 8c 24 48 20 00 	mov    %rcx,0x2048(%rsp)
    4fb4:	00 
    4fb5:	4c 89 84 24 50 20 00 	mov    %r8,0x2050(%rsp)
    4fbc:	00 
    4fbd:	4c 89 8c 24 58 20 00 	mov    %r9,0x2058(%rsp)
    4fc4:	00 
    4fc5:	74 40                	je     5007 <printf+0x77>
    4fc7:	0f 29 84 24 60 20 00 	movaps %xmm0,0x2060(%rsp)
    4fce:	00 
    4fcf:	0f 29 8c 24 70 20 00 	movaps %xmm1,0x2070(%rsp)
    4fd6:	00 
    4fd7:	0f 29 94 24 80 20 00 	movaps %xmm2,0x2080(%rsp)
    4fde:	00 
    4fdf:	0f 29 9c 24 90 20 00 	movaps %xmm3,0x2090(%rsp)
    4fe6:	00 
    4fe7:	0f 29 a4 24 a0 20 00 	movaps %xmm4,0x20a0(%rsp)
    4fee:	00 
    4fef:	0f 29 ac 24 b0 20 00 	movaps %xmm5,0x20b0(%rsp)
    4ff6:	00 
    4ff7:	0f 29 b4 24 c0 20 00 	movaps %xmm6,0x20c0(%rsp)
    4ffe:	00 
    4fff:	0f 29 bc 24 d0 20 00 	movaps %xmm7,0x20d0(%rsp)
    5006:	00 
    5007:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    500e:	00 00 
    5010:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    5017:	00 
    5018:	31 c0                	xor    %eax,%eax
    501a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    501f:	b9 00 04 00 00       	mov    $0x400,%ecx
    5024:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    5029:	4c 89 d2             	mov    %r10,%rdx
    502c:	be 00 20 00 00       	mov    $0x2000,%esi
    5031:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5034:	48 8d 84 24 f0 20 00 	lea    0x20f0(%rsp),%rax
    503b:	00 
    503c:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    5041:	48 89 df             	mov    %rbx,%rdi
    5044:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
    504b:	00 
    504c:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
    5053:	00 
    5054:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5059:	48 8d 84 24 30 20 00 	lea    0x2030(%rsp),%rax
    5060:	00 
    5061:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5066:	e8 65 5d 00 00       	call   add0 <vsnprintf>
    506b:	48 89 df             	mov    %rbx,%rdi
    506e:	e8 fd ea ff ff       	call   3b70 <ocall_print_string>
    5073:	48 8b 84 24 28 20 00 	mov    0x2028(%rsp),%rax
    507a:	00 
    507b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5082:	00 00 
    5084:	75 09                	jne    508f <printf+0xff>
    5086:	48 81 c4 e0 20 00 00 	add    $0x20e0,%rsp
    508d:	5b                   	pop    %rbx
    508e:	c3                   	ret    
    508f:	e8 bc 9a 00 00       	call   eb50 <__stack_chk_fail>
    5094:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    509b:	00 00 00 
    509e:	66 90                	xchg   %ax,%ax

00000000000050a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13>:
    50a0:	41 57                	push   %r15
    50a2:	41 56                	push   %r14
    50a4:	49 89 fe             	mov    %rdi,%r14
    50a7:	41 55                	push   %r13
    50a9:	41 54                	push   %r12
    50ab:	41 89 cc             	mov    %ecx,%r12d
    50ae:	55                   	push   %rbp
    50af:	89 d5                	mov    %edx,%ebp
    50b1:	53                   	push   %rbx
    50b2:	89 ca                	mov    %ecx,%edx
    50b4:	29 ea                	sub    %ebp,%edx
    50b6:	48 83 ec 18          	sub    $0x18,%rsp
    50ba:	83 fa 01             	cmp    $0x1,%edx
    50bd:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    50c1:	0f 8e a8 00 00 00    	jle    516f <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0xcf>
    50c7:	b8 01 00 00 00       	mov    $0x1,%eax
    50cc:	0f 1f 40 00          	nopl   0x0(%rax)
    50d0:	01 c0                	add    %eax,%eax
    50d2:	39 c2                	cmp    %eax,%edx
    50d4:	7f fa                	jg     50d0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0x30>
    50d6:	d1 f8                	sar    %eax
    50d8:	89 c3                	mov    %eax,%ebx
    50da:	45 89 e7             	mov    %r12d,%r15d
    50dd:	41 89 ed             	mov    %ebp,%r13d
    50e0:	41 29 df             	sub    %ebx,%r15d
    50e3:	44 39 fd             	cmp    %r15d,%ebp
    50e6:	7d 2e                	jge    5116 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0x76>
    50e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    50ef:	00 
    50f0:	8b 35 2a 4f 02 00    	mov    0x24f2a(%rip),%esi        # 2a020 <_ZL6record>
    50f6:	48 8d 3d 14 c1 01 00 	lea    0x1c114(%rip),%rdi        # 21211 <g_dyn_entry_table+0x211>
    50fd:	41 83 c5 01          	add    $0x1,%r13d
    5101:	8d 46 01             	lea    0x1(%rsi),%eax
    5104:	89 05 16 4f 02 00    	mov    %eax,0x24f16(%rip)        # 2a020 <_ZL6record>
    510a:	31 c0                	xor    %eax,%eax
    510c:	e8 7f fe ff ff       	call   4f90 <printf>
    5111:	45 39 fd             	cmp    %r15d,%r13d
    5114:	75 da                	jne    50f0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0x50>
    5116:	8d 45 01             	lea    0x1(%rbp),%eax
    5119:	01 eb                	add    %ebp,%ebx
    511b:	39 c3                	cmp    %eax,%ebx
    511d:	7e 11                	jle    5130 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0x90>
    511f:	0f b6 74 24 0c       	movzbl 0xc(%rsp),%esi
    5124:	89 d9                	mov    %ebx,%ecx
    5126:	89 ea                	mov    %ebp,%edx
    5128:	4c 89 f7             	mov    %r14,%rdi
    512b:	e8 70 ff ff ff       	call   50a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13>
    5130:	8d 43 01             	lea    0x1(%rbx),%eax
    5133:	41 39 c4             	cmp    %eax,%r12d
    5136:	7e 28                	jle    5160 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0xc0>
    5138:	0f b6 74 24 0c       	movzbl 0xc(%rsp),%esi
    513d:	48 83 c4 18          	add    $0x18,%rsp
    5141:	44 89 e1             	mov    %r12d,%ecx
    5144:	89 da                	mov    %ebx,%edx
    5146:	4c 89 f7             	mov    %r14,%rdi
    5149:	5b                   	pop    %rbx
    514a:	5d                   	pop    %rbp
    514b:	41 5c                	pop    %r12
    514d:	41 5d                	pop    %r13
    514f:	41 5e                	pop    %r14
    5151:	41 5f                	pop    %r15
    5153:	e9 48 ff ff ff       	jmp    50a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13>
    5158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    515f:	00 
    5160:	48 83 c4 18          	add    $0x18,%rsp
    5164:	5b                   	pop    %rbx
    5165:	5d                   	pop    %rbp
    5166:	41 5c                	pop    %r12
    5168:	41 5d                	pop    %r13
    516a:	41 5e                	pop    %r14
    516c:	41 5f                	pop    %r15
    516e:	c3                   	ret    
    516f:	31 db                	xor    %ebx,%ebx
    5171:	e9 64 ff ff ff       	jmp    50da <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13+0x3a>
    5176:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    517d:	00 00 00 

0000000000005180 <_Z11parseTablesPcRiS0_>:
    5180:	41 57                	push   %r15
    5182:	41 56                	push   %r14
    5184:	49 89 cf             	mov    %rcx,%r15
    5187:	41 55                	push   %r13
    5189:	41 54                	push   %r12
    518b:	49 89 fc             	mov    %rdi,%r12
    518e:	55                   	push   %rbp
    518f:	53                   	push   %rbx
    5190:	48 89 f7             	mov    %rsi,%rdi
    5193:	48 8d 35 89 c0 01 00 	lea    0x1c089(%rip),%rsi        # 21223 <g_dyn_entry_table+0x223>
    519a:	49 89 d5             	mov    %rdx,%r13
    519d:	48 83 ec 28          	sub    $0x28,%rsp
    51a1:	e8 9a 99 00 00       	call   eb40 <strtok>
    51a6:	48 89 c7             	mov    %rax,%rdi
    51a9:	e8 02 5d 00 00       	call   aeb0 <atoi>
    51ae:	48 8d 35 83 c0 01 00 	lea    0x1c083(%rip),%rsi        # 21238 <g_dyn_entry_table+0x238>
    51b5:	31 ff                	xor    %edi,%edi
    51b7:	41 89 45 00          	mov    %eax,0x0(%r13)
    51bb:	e8 80 99 00 00       	call   eb40 <strtok>
    51c0:	48 89 c7             	mov    %rax,%rdi
    51c3:	e8 e8 5c 00 00       	call   aeb0 <atoi>
    51c8:	41 89 07             	mov    %eax,(%r15)
    51cb:	41 03 45 00          	add    0x0(%r13),%eax
    51cf:	be 20 00 00 00       	mov    $0x20,%esi
    51d4:	8b 15 26 51 02 00    	mov    0x25126(%rip),%edx        # 2a300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    51da:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    51e1:	00 00 
    51e3:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    51ea:	00 00 
    51ec:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
    51f3:	00 00 
    51f5:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    51fc:	00 00 
    51fe:	8d 4a 01             	lea    0x1(%rdx),%ecx
    5201:	48 63 f8             	movslq %eax,%rdi
    5204:	41 89 54 24 28       	mov    %edx,0x28(%r12)
    5209:	41 89 44 24 2c       	mov    %eax,0x2c(%r12)
    520e:	89 0d ec 50 02 00    	mov    %ecx,0x250ec(%rip)        # 2a300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    5214:	e8 67 89 00 00       	call   db80 <calloc>
    5219:	41 8b 75 00          	mov    0x0(%r13),%esi
    521d:	48 8d 3d 01 c0 01 00 	lea    0x1c001(%rip),%rdi        # 21225 <g_dyn_entry_table+0x225>
    5224:	49 89 04 24          	mov    %rax,(%r12)
    5228:	31 c0                	xor    %eax,%eax
    522a:	e8 61 fd ff ff       	call   4f90 <printf>
    522f:	41 8b 07             	mov    (%r15),%eax
    5232:	41 03 45 00          	add    0x0(%r13),%eax
    5236:	31 ed                	xor    %ebp,%ebp
    5238:	31 db                	xor    %ebx,%ebx
    523a:	85 c0                	test   %eax,%eax
    523c:	0f 8f d9 00 00 00    	jg     531b <_Z11parseTablesPcRiS0_+0x19b>
    5242:	e9 59 01 00 00       	jmp    53a0 <_Z11parseTablesPcRiS0_+0x220>
    5247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    524e:	00 00 
    5250:	48 8d 0d 91 bf 01 00 	lea    0x1bf91(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5257:	48 8d 15 7e c0 01 00 	lea    0x1c07e(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    525e:	48 8d 3d 96 bf 01 00 	lea    0x1bf96(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5265:	be 3b 00 00 00       	mov    $0x3b,%esi
    526a:	e8 01 59 00 00       	call   ab70 <__assert>
    526f:	48 89 e8             	mov    %rbp,%rax
    5272:	49 03 04 24          	add    (%r12),%rax
    5276:	8b 70 14             	mov    0x14(%rax),%esi
    5279:	8b 50 10             	mov    0x10(%rax),%edx
    527c:	8b 78 18             	mov    0x18(%rax),%edi
    527f:	89 74 24 10          	mov    %esi,0x10(%rsp)
    5283:	31 f6                	xor    %esi,%esi
    5285:	41 39 5d 00          	cmp    %ebx,0x0(%r13)
    5289:	89 54 24 14          	mov    %edx,0x14(%rsp)
    528d:	8b 50 1c             	mov    0x1c(%rax),%edx
    5290:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    5294:	40 0f 9e c6          	setle  %sil
    5298:	85 db                	test   %ebx,%ebx
    529a:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    529e:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    52a2:	78 07                	js     52ab <_Z11parseTablesPcRiS0_+0x12b>
    52a4:	41 39 5c 24 2c       	cmp    %ebx,0x2c(%r12)
    52a9:	7f 26                	jg     52d1 <_Z11parseTablesPcRiS0_+0x151>
    52ab:	48 8d 0d 36 bf 01 00 	lea    0x1bf36(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    52b2:	48 8d 15 1d c0 01 00 	lea    0x1c01d(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    52b9:	48 8d 3d 3b bf 01 00 	lea    0x1bf3b(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    52c0:	be 48 00 00 00       	mov    $0x48,%esi
    52c5:	e8 a6 58 00 00       	call   ab70 <__assert>
    52ca:	48 89 e8             	mov    %rbp,%rax
    52cd:	49 03 04 24          	add    (%r12),%rax
    52d1:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    52d5:	8b 54 24 08          	mov    0x8(%rsp),%edx
    52d9:	83 c3 01             	add    $0x1,%ebx
    52dc:	8b 74 24 18          	mov    0x18(%rsp),%esi
    52e0:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    52e6:	48 83 c5 20          	add    $0x20,%rbp
    52ea:	44 89 70 0c          	mov    %r14d,0xc(%rax)
    52ee:	89 48 04             	mov    %ecx,0x4(%rax)
    52f1:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    52f5:	89 50 08             	mov    %edx,0x8(%rax)
    52f8:	8b 54 24 10          	mov    0x10(%rsp),%edx
    52fc:	89 70 18             	mov    %esi,0x18(%rax)
    52ff:	89 48 10             	mov    %ecx,0x10(%rax)
    5302:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    5306:	89 50 14             	mov    %edx,0x14(%rax)
    5309:	89 48 1c             	mov    %ecx,0x1c(%rax)
    530c:	41 8b 07             	mov    (%r15),%eax
    530f:	41 03 45 00          	add    0x0(%r13),%eax
    5313:	39 d8                	cmp    %ebx,%eax
    5315:	0f 8e 85 00 00 00    	jle    53a0 <_Z11parseTablesPcRiS0_+0x220>
    531b:	48 8d 35 01 bf 01 00 	lea    0x1bf01(%rip),%rsi        # 21223 <g_dyn_entry_table+0x223>
    5322:	31 ff                	xor    %edi,%edi
    5324:	e8 17 98 00 00       	call   eb40 <strtok>
    5329:	48 89 c7             	mov    %rax,%rdi
    532c:	e8 7f 5b 00 00       	call   aeb0 <atoi>
    5331:	48 8d 35 00 bf 01 00 	lea    0x1bf00(%rip),%rsi        # 21238 <g_dyn_entry_table+0x238>
    5338:	31 ff                	xor    %edi,%edi
    533a:	89 44 24 08          	mov    %eax,0x8(%rsp)
    533e:	e8 fd 97 00 00       	call   eb40 <strtok>
    5343:	48 89 c7             	mov    %rax,%rdi
    5346:	e8 65 5b 00 00       	call   aeb0 <atoi>
    534b:	85 db                	test   %ebx,%ebx
    534d:	41 89 c6             	mov    %eax,%r14d
    5350:	0f 88 fa fe ff ff    	js     5250 <_Z11parseTablesPcRiS0_+0xd0>
    5356:	41 39 5c 24 2c       	cmp    %ebx,0x2c(%r12)
    535b:	0f 8e ef fe ff ff    	jle    5250 <_Z11parseTablesPcRiS0_+0xd0>
    5361:	48 89 e8             	mov    %rbp,%rax
    5364:	49 03 04 24          	add    (%r12),%rax
    5368:	31 d2                	xor    %edx,%edx
    536a:	41 39 5d 00          	cmp    %ebx,0x0(%r13)
    536e:	8b 78 10             	mov    0x10(%rax),%edi
    5371:	8b 48 14             	mov    0x14(%rax),%ecx
    5374:	0f 9e c2             	setle  %dl
    5377:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    537b:	89 7c 24 14          	mov    %edi,0x14(%rsp)
    537f:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    5383:	8b 78 18             	mov    0x18(%rax),%edi
    5386:	8b 48 1c             	mov    0x1c(%rax),%ecx
    5389:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    538d:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    5391:	e9 3b ff ff ff       	jmp    52d1 <_Z11parseTablesPcRiS0_+0x151>
    5396:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    539d:	00 00 00 
    53a0:	48 83 c4 28          	add    $0x28,%rsp
    53a4:	4c 89 e0             	mov    %r12,%rax
    53a7:	5b                   	pop    %rbx
    53a8:	5d                   	pop    %rbp
    53a9:	41 5c                	pop    %r12
    53ab:	41 5d                	pop    %r13
    53ad:	41 5e                	pop    %r14
    53af:	41 5f                	pop    %r15
    53b1:	c3                   	ret    
    53b2:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    53b7:	48 89 c3             	mov    %rax,%rbx
    53ba:	48 85 ff             	test   %rdi,%rdi
    53bd:	74 25                	je     53e4 <_Z11parseTablesPcRiS0_+0x264>
    53bf:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    53c4:	48 39 c7             	cmp    %rax,%rdi
    53c7:	74 16                	je     53df <_Z11parseTablesPcRiS0_+0x25f>
    53c9:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    53cd:	48 29 fa             	sub    %rdi,%rdx
    53d0:	48 f7 d2             	not    %rdx
    53d3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    53d7:	48 01 c2             	add    %rax,%rdx
    53da:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
    53df:	e8 cc 6d 01 00       	call   1c1b0 <_ZdlPv>
    53e4:	48 89 df             	mov    %rbx,%rdi
    53e7:	e8 a4 31 01 00       	call   18590 <_Unwind_Resume>
    53ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000053f0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>:
    53f0:	41 54                	push   %r12
    53f2:	55                   	push   %rbp
    53f3:	53                   	push   %rbx
    53f4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    53fb:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    5402:	00 
    5403:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
    5407:	48 2b 1e             	sub    (%rsi),%rbx
    540a:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    5411:	00 
    5412:	48 89 d8             	mov    %rbx,%rax
    5415:	48 c1 f8 03          	sar    $0x3,%rax
    5419:	48 85 c0             	test   %rax,%rax
    541c:	75 0a                	jne    5428 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x38>
    541e:	5b                   	pop    %rbx
    541f:	5d                   	pop    %rbp
    5420:	41 5c                	pop    %r12
    5422:	c3                   	ret    
    5423:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5428:	48 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rdx
    542f:	ff ff 1f 
    5432:	49 89 f4             	mov    %rsi,%r12
    5435:	48 89 fd             	mov    %rdi,%rbp
    5438:	48 39 d0             	cmp    %rdx,%rax
    543b:	77 43                	ja     5480 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x90>
    543d:	48 89 df             	mov    %rbx,%rdi
    5440:	e8 9b 6d 01 00       	call   1c1e0 <_Znwm>
    5445:	48 01 c3             	add    %rax,%rbx
    5448:	48 89 45 08          	mov    %rax,0x8(%rbp)
    544c:	48 89 45 00          	mov    %rax,0x0(%rbp)
    5450:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    5454:	49 8b 34 24          	mov    (%r12),%rsi
    5458:	48 89 c1             	mov    %rax,%rcx
    545b:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
    5460:	48 29 f3             	sub    %rsi,%rbx
    5463:	48 83 fb 07          	cmp    $0x7,%rbx
    5467:	7e b5                	jle    541e <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x2e>
    5469:	48 89 da             	mov    %rbx,%rdx
    546c:	48 89 cf             	mov    %rcx,%rdi
    546f:	e8 4c 93 00 00       	call   e7c0 <memcpy>
    5474:	48 01 c3             	add    %rax,%rbx
    5477:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    547b:	5b                   	pop    %rbx
    547c:	5d                   	pop    %rbp
    547d:	41 5c                	pop    %r12
    547f:	c3                   	ret    
    5480:	e8 89 cc ff ff       	call   210e <_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv>
    5485:	bf 08 00 00 00       	mov    $0x8,%edi
    548a:	e8 f1 64 01 00       	call   1b980 <__cxa_allocate_exception>
    548f:	48 89 c7             	mov    %rax,%rdi
    5492:	48 89 c3             	mov    %rax,%rbx
    5495:	e8 86 6c 01 00       	call   1c120 <_ZNSt9bad_allocC1Ev>
    549a:	48 8d 15 2f 6c 01 00 	lea    0x16c2f(%rip),%rdx        # 1c0d0 <_ZNSt9bad_allocD1Ev>
    54a1:	48 8d 35 c8 48 02 00 	lea    0x248c8(%rip),%rsi        # 29d70 <_ZTISt9bad_alloc>
    54a8:	48 89 df             	mov    %rbx,%rdi
    54ab:	e8 d0 65 01 00       	call   1ba80 <__cxa_throw>
    54b0:	48 89 c3             	mov    %rax,%rbx
    54b3:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    54b7:	48 85 ff             	test   %rdi,%rdi
    54ba:	74 18                	je     54d4 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xe4>
    54bc:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    54c0:	48 39 d7             	cmp    %rdx,%rdi
    54c3:	74 0a                	je     54cf <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xdf>
    54c5:	48 83 ea 08          	sub    $0x8,%rdx
    54c9:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    54cd:	eb ed                	jmp    54bc <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xcc>
    54cf:	e8 dc 6c 01 00       	call   1c1b0 <_ZdlPv>
    54d4:	48 89 df             	mov    %rbx,%rdi
    54d7:	e8 b4 30 01 00       	call   18590 <_Unwind_Resume>
    54dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000054e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>:
    54e0:	83 f9 ff             	cmp    $0xffffffff,%ecx
    54e3:	41 56                	push   %r14
    54e5:	41 89 f6             	mov    %esi,%r14d
    54e8:	41 55                	push   %r13
    54ea:	41 89 cd             	mov    %ecx,%r13d
    54ed:	41 54                	push   %r12
    54ef:	49 89 fc             	mov    %rdi,%r12
    54f2:	55                   	push   %rbp
    54f3:	89 d5                	mov    %edx,%ebp
    54f5:	53                   	push   %rbx
    54f6:	74 78                	je     5570 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x90>
    54f8:	44 89 e8             	mov    %r13d,%eax
    54fb:	29 e8                	sub    %ebp,%eax
    54fd:	89 c3                	mov    %eax,%ebx
    54ff:	c1 eb 1f             	shr    $0x1f,%ebx
    5502:	01 d8                	add    %ebx,%eax
    5504:	d1 f8                	sar    %eax
    5506:	8d 1c 28             	lea    (%rax,%rbp,1),%ebx
    5509:	39 dd                	cmp    %ebx,%ebp
    550b:	74 32                	je     553f <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x5f>
    550d:	44 89 f6             	mov    %r14d,%esi
    5510:	89 d9                	mov    %ebx,%ecx
    5512:	89 ea                	mov    %ebp,%edx
    5514:	83 f6 01             	xor    $0x1,%esi
    5517:	4c 89 e7             	mov    %r12,%rdi
    551a:	45 0f b6 f6          	movzbl %r14b,%r14d
    551e:	40 0f b6 f6          	movzbl %sil,%esi
    5522:	e8 b9 ff ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    5527:	44 89 e9             	mov    %r13d,%ecx
    552a:	89 da                	mov    %ebx,%edx
    552c:	44 89 f6             	mov    %r14d,%esi
    552f:	4c 89 e7             	mov    %r12,%rdi
    5532:	e8 a9 ff ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    5537:	8d 45 01             	lea    0x1(%rbp),%eax
    553a:	41 39 c5             	cmp    %eax,%r13d
    553d:	7f 11                	jg     5550 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x70>
    553f:	5b                   	pop    %rbx
    5540:	5d                   	pop    %rbp
    5541:	41 5c                	pop    %r12
    5543:	41 5d                	pop    %r13
    5545:	41 5e                	pop    %r14
    5547:	c3                   	ret    
    5548:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    554f:	00 
    5550:	5b                   	pop    %rbx
    5551:	44 89 e9             	mov    %r13d,%ecx
    5554:	89 ea                	mov    %ebp,%edx
    5556:	44 89 f6             	mov    %r14d,%esi
    5559:	5d                   	pop    %rbp
    555a:	4c 89 e7             	mov    %r12,%rdi
    555d:	41 5c                	pop    %r12
    555f:	41 5d                	pop    %r13
    5561:	41 5e                	pop    %r14
    5563:	e9 38 fb ff ff       	jmp    50a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.13>
    5568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    556f:	00 
    5570:	44 8b 6f 2c          	mov    0x2c(%rdi),%r13d
    5574:	eb 82                	jmp    54f8 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x18>
    5576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    557d:	00 00 00 

0000000000005580 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>:
    5580:	41 57                	push   %r15
    5582:	41 56                	push   %r14
    5584:	49 89 ff             	mov    %rdi,%r15
    5587:	41 55                	push   %r13
    5589:	41 54                	push   %r12
    558b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    5590:	55                   	push   %rbp
    5591:	53                   	push   %rbx
    5592:	31 d2                	xor    %edx,%edx
    5594:	89 f3                	mov    %esi,%ebx
    5596:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    559d:	89 74 24 34          	mov    %esi,0x34(%rsp)
    55a1:	be 01 00 00 00       	mov    $0x1,%esi
    55a6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    55ad:	00 00 
    55af:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    55b6:	00 
    55b7:	31 c0                	xor    %eax,%eax
    55b9:	e8 22 ff ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    55be:	49 8b 3f             	mov    (%r15),%rdi
    55c1:	48 63 f3             	movslq %ebx,%rsi
    55c4:	48 c1 e6 05          	shl    $0x5,%rsi
    55c8:	e8 33 86 00 00       	call   dc00 <dlrealloc>
    55cd:	49 63 4f 2c          	movslq 0x2c(%r15),%rcx
    55d1:	49 89 07             	mov    %rax,(%r15)
    55d4:	39 cb                	cmp    %ecx,%ebx
    55d6:	7e 1c                	jle    55f4 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x74>
    55d8:	8b 54 24 34          	mov    0x34(%rsp),%edx
    55dc:	31 f6                	xor    %esi,%esi
    55de:	29 ca                	sub    %ecx,%edx
    55e0:	48 c1 e1 05          	shl    $0x5,%rcx
    55e4:	48 63 d2             	movslq %edx,%rdx
    55e7:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
    55eb:	48 c1 e2 05          	shl    $0x5,%rdx
    55ef:	e8 9c 93 00 00       	call   e990 <memset>
    55f4:	8b 74 24 34          	mov    0x34(%rsp),%esi
    55f8:	b8 01 00 00 00       	mov    $0x1,%eax
    55fd:	83 fe 01             	cmp    $0x1,%esi
    5600:	41 89 77 2c          	mov    %esi,0x2c(%r15)
    5604:	0f 8e f8 02 00 00    	jle    5902 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x382>
    560a:	89 f2                	mov    %esi,%edx
    560c:	0f 1f 40 00          	nopl   0x0(%rax)
    5610:	01 c0                	add    %eax,%eax
    5612:	39 c2                	cmp    %eax,%edx
    5614:	7f fa                	jg     5610 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x90>
    5616:	d1 f8                	sar    %eax
    5618:	4d 89 fd             	mov    %r15,%r13
    561b:	89 44 24 30          	mov    %eax,0x30(%rsp)
    561f:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5624:	48 89 04 24          	mov    %rax,(%rsp)
    5628:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    562d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5632:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5638:	8b 44 24 34          	mov    0x34(%rsp),%eax
    563c:	2b 44 24 30          	sub    0x30(%rsp),%eax
    5640:	83 e8 01             	sub    $0x1,%eax
    5643:	41 89 c7             	mov    %eax,%r15d
    5646:	0f 88 ac 02 00 00    	js     58f8 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x378>
    564c:	48 98                	cltq   
    564e:	48 c1 e0 05          	shl    $0x5,%rax
    5652:	49 89 c6             	mov    %rax,%r14
    5655:	48 63 44 24 30       	movslq 0x30(%rsp),%rax
    565a:	48 c1 e0 05          	shl    $0x5,%rax
    565e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    5663:	e9 e9 01 00 00       	jmp    5851 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x2d1>
    5668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    566f:	00 
    5670:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5674:	41 8b 55 2c          	mov    0x2c(%r13),%edx
    5678:	41 8d 2c 07          	lea    (%r15,%rax,1),%ebp
    567c:	39 ea                	cmp    %ebp,%edx
    567e:	7f 23                	jg     56a3 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x123>
    5680:	48 8d 15 55 bc 01 00 	lea    0x1bc55(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5687:	48 8d 0d 5a bb 01 00 	lea    0x1bb5a(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    568e:	48 8d 3d 66 bb 01 00 	lea    0x1bb66(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5695:	be 3b 00 00 00       	mov    $0x3b,%esi
    569a:	e8 d1 54 00 00       	call   ab70 <__assert>
    569f:	41 8b 55 2c          	mov    0x2c(%r13),%edx
    56a3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    56a8:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    56ac:	41 39 ec             	cmp    %ebp,%r12d
    56af:	49 8d 1c 06          	lea    (%r14,%rax,1),%rbx
    56b3:	48 8b 04 19          	mov    (%rcx,%rbx,1),%rax
    56b7:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    56bc:	48 8b 44 19 08       	mov    0x8(%rcx,%rbx,1),%rax
    56c1:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    56c6:	48 8b 44 19 10       	mov    0x10(%rcx,%rbx,1),%rax
    56cb:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    56d0:	48 8b 44 19 18       	mov    0x18(%rcx,%rbx,1),%rax
    56d5:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    56da:	48 8b 04 24          	mov    (%rsp),%rax
    56de:	48 0f 4c 44 24 08    	cmovl  0x8(%rsp),%rax
    56e4:	41 39 d7             	cmp    %edx,%r15d
    56e7:	8b 70 0c             	mov    0xc(%rax),%esi
    56ea:	8b 78 10             	mov    0x10(%rax),%edi
    56ed:	44 8b 18             	mov    (%rax),%r11d
    56f0:	44 8b 50 04          	mov    0x4(%rax),%r10d
    56f4:	44 8b 48 08          	mov    0x8(%rax),%r9d
    56f8:	44 8b 40 18          	mov    0x18(%rax),%r8d
    56fc:	89 74 24 10          	mov    %esi,0x10(%rsp)
    5700:	8b 70 14             	mov    0x14(%rax),%esi
    5703:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    5707:	8b 40 1c             	mov    0x1c(%rax),%eax
    570a:	89 74 24 14          	mov    %esi,0x14(%rsp)
    570e:	7c 53                	jl     5763 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x1e3>
    5710:	48 8d 0d d1 ba 01 00 	lea    0x1bad1(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5717:	48 8d 15 b8 bb 01 00 	lea    0x1bbb8(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    571e:	48 8d 3d d6 ba 01 00 	lea    0x1bad6(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5725:	be 48 00 00 00       	mov    $0x48,%esi
    572a:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    572f:	89 44 24 28          	mov    %eax,0x28(%rsp)
    5733:	44 89 5c 24 24       	mov    %r11d,0x24(%rsp)
    5738:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
    573d:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
    5742:	e8 29 54 00 00       	call   ab70 <__assert>
    5747:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    574b:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
    5750:	8b 44 24 28          	mov    0x28(%rsp),%eax
    5754:	44 8b 5c 24 24       	mov    0x24(%rsp),%r11d
    5759:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
    575e:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
    5763:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    5767:	4a 8d 14 31          	lea    (%rcx,%r14,1),%rdx
    576b:	8b 74 24 18          	mov    0x18(%rsp),%esi
    576f:	41 39 ec             	cmp    %ebp,%r12d
    5772:	44 89 4a 08          	mov    %r9d,0x8(%rdx)
    5776:	44 89 42 18          	mov    %r8d,0x18(%rdx)
    577a:	89 7a 0c             	mov    %edi,0xc(%rdx)
    577d:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    5781:	89 42 1c             	mov    %eax,0x1c(%rdx)
    5784:	44 89 1a             	mov    %r11d,(%rdx)
    5787:	44 89 52 04          	mov    %r10d,0x4(%rdx)
    578b:	89 72 10             	mov    %esi,0x10(%rdx)
    578e:	89 7a 14             	mov    %edi,0x14(%rdx)
    5791:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5796:	48 0f 4c 14 24       	cmovl  (%rsp),%rdx
    579b:	41 39 6d 2c          	cmp    %ebp,0x2c(%r13)
    579f:	8b 42 08             	mov    0x8(%rdx),%eax
    57a2:	44 8b 1a             	mov    (%rdx),%r11d
    57a5:	44 8b 52 04          	mov    0x4(%rdx),%r10d
    57a9:	44 8b 4a 10          	mov    0x10(%rdx),%r9d
    57ad:	44 8b 42 14          	mov    0x14(%rdx),%r8d
    57b1:	44 8b 62 1c          	mov    0x1c(%rdx),%r12d
    57b5:	89 44 24 14          	mov    %eax,0x14(%rsp)
    57b9:	8b 42 0c             	mov    0xc(%rdx),%eax
    57bc:	89 44 24 10          	mov    %eax,0x10(%rsp)
    57c0:	8b 42 18             	mov    0x18(%rdx),%eax
    57c3:	7f 53                	jg     5818 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x298>
    57c5:	48 8d 0d 1c ba 01 00 	lea    0x1ba1c(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    57cc:	48 8d 15 03 bb 01 00 	lea    0x1bb03(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    57d3:	48 8d 3d 21 ba 01 00 	lea    0x1ba21(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    57da:	be 48 00 00 00       	mov    $0x48,%esi
    57df:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
    57e4:	44 89 5c 24 24       	mov    %r11d,0x24(%rsp)
    57e9:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
    57ee:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    57f2:	44 89 4c 24 18       	mov    %r9d,0x18(%rsp)
    57f7:	e8 74 53 00 00       	call   ab70 <__assert>
    57fc:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    5800:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
    5805:	44 8b 5c 24 24       	mov    0x24(%rsp),%r11d
    580a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    580f:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5813:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
    5818:	8b 74 24 14          	mov    0x14(%rsp),%esi
    581c:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    5820:	41 83 ef 01          	sub    $0x1,%r15d
    5824:	48 01 cb             	add    %rcx,%rbx
    5827:	49 83 ee 20          	sub    $0x20,%r14
    582b:	41 83 ff ff          	cmp    $0xffffffff,%r15d
    582f:	44 89 1b             	mov    %r11d,(%rbx)
    5832:	44 89 53 04          	mov    %r10d,0x4(%rbx)
    5836:	89 73 08             	mov    %esi,0x8(%rbx)
    5839:	89 7b 0c             	mov    %edi,0xc(%rbx)
    583c:	44 89 4b 10          	mov    %r9d,0x10(%rbx)
    5840:	44 89 43 14          	mov    %r8d,0x14(%rbx)
    5844:	89 43 18             	mov    %eax,0x18(%rbx)
    5847:	44 89 63 1c          	mov    %r12d,0x1c(%rbx)
    584b:	0f 84 a7 00 00 00    	je     58f8 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x378>
    5851:	45 39 7d 2c          	cmp    %r15d,0x2c(%r13)
    5855:	7f 1f                	jg     5876 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x2f6>
    5857:	48 8d 0d 8a b9 01 00 	lea    0x1b98a(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    585e:	48 8d 15 77 ba 01 00 	lea    0x1ba77(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5865:	48 8d 3d 8f b9 01 00 	lea    0x1b98f(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    586c:	be 3b 00 00 00       	mov    $0x3b,%esi
    5871:	e8 fa 52 00 00       	call   ab70 <__assert>
    5876:	49 8b 45 00          	mov    0x0(%r13),%rax
    587a:	45 31 e4             	xor    %r12d,%r12d
    587d:	4a 8b 14 30          	mov    (%rax,%r14,1),%rdx
    5881:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    5886:	4a 8b 54 30 08       	mov    0x8(%rax,%r14,1),%rdx
    588b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
    5890:	4a 8b 54 30 10       	mov    0x10(%rax,%r14,1),%rdx
    5895:	4a 8b 44 30 18       	mov    0x18(%rax,%r14,1),%rax
    589a:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
    589f:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    58a4:	0f ae f0             	mfence 
    58a7:	8b 44 24 40          	mov    0x40(%rsp),%eax
    58ab:	85 c0                	test   %eax,%eax
    58ad:	41 0f 95 c4          	setne  %r12b
    58b1:	44 0f af 64 24 58    	imul   0x58(%rsp),%r12d
    58b7:	0f ae f0             	mfence 
    58ba:	85 c0                	test   %eax,%eax
    58bc:	0f 94 c0             	sete   %al
    58bf:	0f b6 c0             	movzbl %al,%eax
    58c2:	41 29 c4             	sub    %eax,%r12d
    58c5:	44 39 64 24 34       	cmp    %r12d,0x34(%rsp)
    58ca:	0f 8f a0 fd ff ff    	jg     5670 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xf0>
    58d0:	48 8d 0d 63 b9 01 00 	lea    0x1b963(%rip),%rcx        # 2123a <g_dyn_entry_table+0x23a>
    58d7:	48 8d 15 e2 b9 01 00 	lea    0x1b9e2(%rip),%rdx        # 212c0 <_ZZ16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_EiE8__func__>
    58de:	48 8d 3d 60 b9 01 00 	lea    0x1b960(%rip),%rdi        # 21245 <g_dyn_entry_table+0x245>
    58e5:	be 6e 00 00 00       	mov    $0x6e,%esi
    58ea:	e8 81 52 00 00       	call   ab70 <__assert>
    58ef:	e9 7c fd ff ff       	jmp    5670 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xf0>
    58f4:	0f 1f 40 00          	nopl   0x0(%rax)
    58f8:	d1 7c 24 30          	sarl   0x30(%rsp)
    58fc:	0f 85 36 fd ff ff    	jne    5638 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xb8>
    5902:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    5909:	00 
    590a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5911:	00 00 
    5913:	75 12                	jne    5927 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x3a7>
    5915:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    591c:	5b                   	pop    %rbx
    591d:	5d                   	pop    %rbp
    591e:	41 5c                	pop    %r12
    5920:	41 5d                	pop    %r13
    5922:	41 5e                	pop    %r14
    5924:	41 5f                	pop    %r15
    5926:	c3                   	ret    
    5927:	e8 24 92 00 00       	call   eb50 <__stack_chk_fail>
    592c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005930 <_Z4joinR5TableS0_S0_>:
    5930:	41 57                	push   %r15
    5932:	41 56                	push   %r14
    5934:	48 89 f0             	mov    %rsi,%rax
    5937:	41 55                	push   %r13
    5939:	41 54                	push   %r12
    593b:	49 89 ff             	mov    %rdi,%r15
    593e:	55                   	push   %rbp
    593f:	53                   	push   %rbx
    5940:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    5945:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    594c:	8b 40 2c             	mov    0x2c(%rax),%eax
    594f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5954:	8b 7a 2c             	mov    0x2c(%rdx),%edi
    5957:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    595c:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    5961:	31 d2                	xor    %edx,%edx
    5963:	89 c3                	mov    %eax,%ebx
    5965:	41 89 c6             	mov    %eax,%r14d
    5968:	89 44 24 4c          	mov    %eax,0x4c(%rsp)
    596c:	64 48 8b 34 25 28 00 	mov    %fs:0x28,%rsi
    5973:	00 00 
    5975:	48 89 b4 24 a8 00 00 	mov    %rsi,0xa8(%rsp)
    597c:	00 
    597d:	31 f6                	xor    %esi,%esi
    597f:	01 fb                	add    %edi,%ebx
    5981:	be 01 00 00 00       	mov    $0x1,%esi
    5986:	89 7c 24 48          	mov    %edi,0x48(%rsp)
    598a:	4c 89 ff             	mov    %r15,%rdi
    598d:	e8 4e fb ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    5992:	bf 01 00 00 00       	mov    $0x1,%edi
    5997:	e8 14 e3 ff ff       	call   3cb0 <get_time>
    599c:	4c 89 fe             	mov    %r15,%rsi
    599f:	89 df                	mov    %ebx,%edi
    59a1:	e8 fa ed ff ff       	call   47a0 <_Z17write_block_sizesiR5Table>
    59a6:	bf 01 00 00 00       	mov    $0x1,%edi
    59ab:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
    59af:	e8 fc e2 ff ff       	call   3cb0 <get_time>
    59b4:	31 d2                	xor    %edx,%edx
    59b6:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    59bb:	be 01 00 00 00       	mov    $0x1,%esi
    59c0:	4c 89 ff             	mov    %r15,%rdi
    59c3:	e8 18 fb ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    59c8:	bf 01 00 00 00       	mov    $0x1,%edi
    59cd:	e8 de e2 ff ff       	call   3cb0 <get_time>
    59d2:	45 85 f6             	test   %r14d,%r14d
    59d5:	0f 8e 45 01 00 00    	jle    5b20 <_Z4joinR5TableS0_S0_+0x1f0>
    59db:	31 ed                	xor    %ebp,%ebp
    59dd:	31 db                	xor    %ebx,%ebx
    59df:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    59e4:	e9 df 00 00 00       	jmp    5ac8 <_Z4joinR5TableS0_S0_+0x198>
    59e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    59f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    59f5:	39 58 2c             	cmp    %ebx,0x2c(%rax)
    59f8:	7f 1f                	jg     5a19 <_Z4joinR5TableS0_S0_+0xe9>
    59fa:	48 8d 0d e7 b7 01 00 	lea    0x1b7e7(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5a01:	48 8d 15 d4 b8 01 00 	lea    0x1b8d4(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5a08:	48 8d 3d ec b7 01 00 	lea    0x1b7ec(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5a0f:	be 3b 00 00 00       	mov    $0x3b,%esi
    5a14:	e8 57 51 00 00       	call   ab70 <__assert>
    5a19:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5a1e:	48 89 ea             	mov    %rbp,%rdx
    5a21:	48 03 10             	add    (%rax),%rdx
    5a24:	41 39 5f 2c          	cmp    %ebx,0x2c(%r15)
    5a28:	44 8b 1a             	mov    (%rdx),%r11d
    5a2b:	44 8b 52 04          	mov    0x4(%rdx),%r10d
    5a2f:	44 8b 4a 08          	mov    0x8(%rdx),%r9d
    5a33:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    5a37:	8b 42 10             	mov    0x10(%rdx),%eax
    5a3a:	44 8b 72 14          	mov    0x14(%rdx),%r14d
    5a3e:	44 8b 6a 18          	mov    0x18(%rdx),%r13d
    5a42:	44 8b 62 1c          	mov    0x1c(%rdx),%r12d
    5a46:	7f 4f                	jg     5a97 <_Z4joinR5TableS0_S0_+0x167>
    5a48:	48 8d 0d 99 b7 01 00 	lea    0x1b799(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5a4f:	48 8d 15 80 b8 01 00 	lea    0x1b880(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5a56:	48 8d 3d 9e b7 01 00 	lea    0x1b79e(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5a5d:	be 48 00 00 00       	mov    $0x48,%esi
    5a62:	44 89 5c 24 34       	mov    %r11d,0x34(%rsp)
    5a67:	44 89 54 24 30       	mov    %r10d,0x30(%rsp)
    5a6c:	44 89 44 24 28       	mov    %r8d,0x28(%rsp)
    5a71:	89 44 24 20          	mov    %eax,0x20(%rsp)
    5a75:	44 89 4c 24 1c       	mov    %r9d,0x1c(%rsp)
    5a7a:	e8 f1 50 00 00       	call   ab70 <__assert>
    5a7f:	44 8b 5c 24 34       	mov    0x34(%rsp),%r11d
    5a84:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
    5a89:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
    5a8e:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5a92:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
    5a97:	48 89 ea             	mov    %rbp,%rdx
    5a9a:	83 c3 01             	add    $0x1,%ebx
    5a9d:	49 03 17             	add    (%r15),%rdx
    5aa0:	48 83 c5 20          	add    $0x20,%rbp
    5aa4:	39 5c 24 4c          	cmp    %ebx,0x4c(%rsp)
    5aa8:	44 89 1a             	mov    %r11d,(%rdx)
    5aab:	44 89 52 04          	mov    %r10d,0x4(%rdx)
    5aaf:	44 89 4a 08          	mov    %r9d,0x8(%rdx)
    5ab3:	44 89 42 0c          	mov    %r8d,0xc(%rdx)
    5ab7:	89 42 10             	mov    %eax,0x10(%rdx)
    5aba:	44 89 72 14          	mov    %r14d,0x14(%rdx)
    5abe:	44 89 6a 18          	mov    %r13d,0x18(%rdx)
    5ac2:	44 89 62 1c          	mov    %r12d,0x1c(%rdx)
    5ac6:	74 58                	je     5b20 <_Z4joinR5TableS0_S0_+0x1f0>
    5ac8:	85 db                	test   %ebx,%ebx
    5aca:	0f 89 20 ff ff ff    	jns    59f0 <_Z4joinR5TableS0_S0_+0xc0>
    5ad0:	48 8d 15 05 b8 01 00 	lea    0x1b805(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5ad7:	48 8d 0d 0a b7 01 00 	lea    0x1b70a(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5ade:	48 8d 3d 16 b7 01 00 	lea    0x1b716(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5ae5:	be 3b 00 00 00       	mov    $0x3b,%esi
    5aea:	e8 81 50 00 00       	call   ab70 <__assert>
    5aef:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5af4:	48 89 ea             	mov    %rbp,%rdx
    5af7:	48 03 10             	add    (%rax),%rdx
    5afa:	44 8b 1a             	mov    (%rdx),%r11d
    5afd:	44 8b 52 04          	mov    0x4(%rdx),%r10d
    5b01:	44 8b 4a 08          	mov    0x8(%rdx),%r9d
    5b05:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    5b09:	8b 42 10             	mov    0x10(%rdx),%eax
    5b0c:	44 8b 72 14          	mov    0x14(%rdx),%r14d
    5b10:	44 8b 6a 18          	mov    0x18(%rdx),%r13d
    5b14:	44 8b 62 1c          	mov    0x1c(%rdx),%r12d
    5b18:	e9 2b ff ff ff       	jmp    5a48 <_Z4joinR5TableS0_S0_+0x118>
    5b1d:	0f 1f 00             	nopl   (%rax)
    5b20:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    5b25:	8b 70 2c             	mov    0x2c(%rax),%esi
    5b28:	85 f6                	test   %esi,%esi
    5b2a:	0f 8e 14 03 00 00    	jle    5e44 <_Z4joinR5TableS0_S0_+0x514>
    5b30:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    5b35:	45 31 ed             	xor    %r13d,%r13d
    5b38:	45 31 c0             	xor    %r8d,%r8d
    5b3b:	48 8b 38             	mov    (%rax),%rdi
    5b3e:	49 89 c1             	mov    %rax,%r9
    5b41:	eb 0d                	jmp    5b50 <_Z4joinR5TableS0_S0_+0x220>
    5b43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b48:	41 8b 71 2c          	mov    0x2c(%r9),%esi
    5b4c:	49 83 c5 01          	add    $0x1,%r13
    5b50:	4d 89 ef             	mov    %r13,%r15
    5b53:	31 db                	xor    %ebx,%ebx
    5b55:	49 c1 e7 05          	shl    $0x5,%r15
    5b59:	4a 8d 14 3f          	lea    (%rdi,%r15,1),%rdx
    5b5d:	44 8b 22             	mov    (%rdx),%r12d
    5b60:	44 8b 72 14          	mov    0x14(%rdx),%r14d
    5b64:	8b 42 0c             	mov    0xc(%rdx),%eax
    5b67:	44 8b 5a 04          	mov    0x4(%rdx),%r11d
    5b6b:	44 8b 52 08          	mov    0x8(%rdx),%r10d
    5b6f:	45 85 e4             	test   %r12d,%r12d
    5b72:	0f 95 c3             	setne  %bl
    5b75:	31 c9                	xor    %ecx,%ecx
    5b77:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    5b7b:	41 0f af de          	imul   %r14d,%ebx
    5b7f:	45 85 e4             	test   %r12d,%r12d
    5b82:	8b 42 10             	mov    0x10(%rdx),%eax
    5b85:	0f 94 c1             	sete   %cl
    5b88:	29 cb                	sub    %ecx,%ebx
    5b8a:	89 44 24 20          	mov    %eax,0x20(%rsp)
    5b8e:	8b 42 1c             	mov    0x1c(%rdx),%eax
    5b91:	0f 95 c1             	setne  %cl
    5b94:	31 ed                	xor    %ebp,%ebp
    5b96:	0f b6 c9             	movzbl %cl,%ecx
    5b99:	44 0f af e1          	imul   %ecx,%r12d
    5b9d:	85 db                	test   %ebx,%ebx
    5b9f:	40 0f 94 c5          	sete   %bpl
    5ba3:	0f af 6a 18          	imul   0x18(%rdx),%ebp
    5ba7:	41 0f af c8          	imul   %r8d,%ecx
    5bab:	01 cd                	add    %ecx,%ebp
    5bad:	44 39 ee             	cmp    %r13d,%esi
    5bb0:	7f 5a                	jg     5c0c <_Z4joinR5TableS0_S0_+0x2dc>
    5bb2:	48 8d 15 1d b7 01 00 	lea    0x1b71d(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5bb9:	48 8d 3d 3b b6 01 00 	lea    0x1b63b(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5bc0:	48 8d 0d 21 b6 01 00 	lea    0x1b621(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5bc7:	be 48 00 00 00       	mov    $0x48,%esi
    5bcc:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
    5bd1:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
    5bd6:	89 44 24 34          	mov    %eax,0x34(%rsp)
    5bda:	44 89 54 24 30       	mov    %r10d,0x30(%rsp)
    5bdf:	44 89 5c 24 28       	mov    %r11d,0x28(%rsp)
    5be4:	e8 87 4f 00 00       	call   ab70 <__assert>
    5be9:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
    5bee:	44 8b 44 24 38       	mov    0x38(%rsp),%r8d
    5bf3:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5bf7:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
    5bfc:	44 8b 5c 24 28       	mov    0x28(%rsp),%r11d
    5c01:	49 8b 39             	mov    (%r9),%rdi
    5c04:	41 8b 71 2c          	mov    0x2c(%r9),%esi
    5c08:	4a 8d 14 3f          	lea    (%rdi,%r15,1),%rdx
    5c0c:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    5c10:	89 42 1c             	mov    %eax,0x1c(%rdx)
    5c13:	41 8d 45 01          	lea    0x1(%r13),%eax
    5c17:	41 01 d8             	add    %ebx,%r8d
    5c1a:	44 89 22             	mov    %r12d,(%rdx)
    5c1d:	44 89 5a 04          	mov    %r11d,0x4(%rdx)
    5c21:	39 f0                	cmp    %esi,%eax
    5c23:	44 89 52 08          	mov    %r10d,0x8(%rdx)
    5c27:	44 89 72 14          	mov    %r14d,0x14(%rdx)
    5c2b:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    5c2e:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    5c32:	89 6a 18             	mov    %ebp,0x18(%rdx)
    5c35:	89 4a 10             	mov    %ecx,0x10(%rdx)
    5c38:	0f 8c 0a ff ff ff    	jl     5b48 <_Z4joinR5TableS0_S0_+0x218>
    5c3e:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    5c43:	44 89 c6             	mov    %r8d,%esi
    5c46:	44 89 c3             	mov    %r8d,%ebx
    5c49:	44 89 44 24 58       	mov    %r8d,0x58(%rsp)
    5c4e:	4c 89 ff             	mov    %r15,%rdi
    5c51:	e8 2a f9 ff ff       	call   5580 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    5c56:	bf 01 00 00 00       	mov    $0x1,%edi
    5c5b:	e8 50 e0 ff ff       	call   3cb0 <get_time>
    5c60:	85 db                	test   %ebx,%ebx
    5c62:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
    5c69:	00 
    5c6a:	0f 8e f0 01 00 00    	jle    5e60 <_Z4joinR5TableS0_S0_+0x530>
    5c70:	45 31 e4             	xor    %r12d,%r12d
    5c73:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    5c7a:	00 
    5c7b:	e9 1a 01 00 00       	jmp    5d9a <_Z4joinR5TableS0_S0_+0x46a>
    5c80:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    5c87:	00 
    5c88:	48 8b 10             	mov    (%rax),%rdx
    5c8b:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
    5c92:	00 
    5c93:	31 f6                	xor    %esi,%esi
    5c95:	85 db                	test   %ebx,%ebx
    5c97:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
    5c9e:	00 
    5c9f:	44 8b 84 24 98 00 00 	mov    0x98(%rsp),%r8d
    5ca6:	00 
    5ca7:	40 0f 94 c6          	sete   %sil
    5cab:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    5cb0:	44 8b 9c 24 84 00 00 	mov    0x84(%rsp),%r11d
    5cb7:	00 
    5cb8:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
    5cbd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5cc1:	0f af 74 24 1c       	imul   0x1c(%rsp),%esi
    5cc6:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    5ccb:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5ccf:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    5cd4:	48 8b 40 18          	mov    0x18(%rax),%rax
    5cd8:	41 01 f0             	add    %esi,%r8d
    5cdb:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
    5ce2:	00 
    5ce3:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    5ce8:	44 89 e8             	mov    %r13d,%eax
    5ceb:	99                   	cltd   
    5cec:	41 f7 fe             	idiv   %r14d
    5cef:	41 0f af d2          	imul   %r10d,%edx
    5cf3:	45 3b 6f 2c          	cmp    0x2c(%r15),%r13d
    5cf7:	8d 2c 02             	lea    (%rdx,%rax,1),%ebp
    5cfa:	8d 46 01             	lea    0x1(%rsi),%eax
    5cfd:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    5d01:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    5d08:	89 ac 24 9c 00 00 00 	mov    %ebp,0x9c(%rsp)
    5d0f:	89 44 24 20          	mov    %eax,0x20(%rsp)
    5d13:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
    5d1a:	7c 50                	jl     5d6c <_Z4joinR5TableS0_S0_+0x43c>
    5d1c:	48 8d 0d c5 b4 01 00 	lea    0x1b4c5(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5d23:	48 8d 15 ac b5 01 00 	lea    0x1b5ac(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5d2a:	48 8d 3d ca b4 01 00 	lea    0x1b4ca(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5d31:	be 48 00 00 00       	mov    $0x48,%esi
    5d36:	89 44 24 40          	mov    %eax,0x40(%rsp)
    5d3a:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
    5d3f:	44 89 54 24 34       	mov    %r10d,0x34(%rsp)
    5d44:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
    5d49:	e8 22 4e 00 00       	call   ab70 <__assert>
    5d4e:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    5d53:	8b 44 24 40          	mov    0x40(%rsp),%eax
    5d57:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
    5d5c:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    5d61:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    5d66:	4c 89 c9             	mov    %r9,%rcx
    5d69:	49 03 0f             	add    (%r15),%rcx
    5d6c:	49 83 c4 01          	add    $0x1,%r12
    5d70:	44 39 64 24 58       	cmp    %r12d,0x58(%rsp)
    5d75:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    5d79:	89 19                	mov    %ebx,(%rcx)
    5d7b:	44 89 59 04          	mov    %r11d,0x4(%rcx)
    5d7f:	89 41 0c             	mov    %eax,0xc(%rcx)
    5d82:	44 89 71 10          	mov    %r14d,0x10(%rcx)
    5d86:	89 79 08             	mov    %edi,0x8(%rcx)
    5d89:	44 89 51 14          	mov    %r10d,0x14(%rcx)
    5d8d:	44 89 41 18          	mov    %r8d,0x18(%rcx)
    5d91:	89 69 1c             	mov    %ebp,0x1c(%rcx)
    5d94:	0f 8e c6 00 00 00    	jle    5e60 <_Z4joinR5TableS0_S0_+0x530>
    5d9a:	45 3b 67 2c          	cmp    0x2c(%r15),%r12d
    5d9e:	45 89 e5             	mov    %r12d,%r13d
    5da1:	7c 1f                	jl     5dc2 <_Z4joinR5TableS0_S0_+0x492>
    5da3:	48 8d 0d 3e b4 01 00 	lea    0x1b43e(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5daa:	48 8d 15 2b b5 01 00 	lea    0x1b52b(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5db1:	48 8d 3d 43 b4 01 00 	lea    0x1b443(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5db8:	be 3b 00 00 00       	mov    $0x3b,%esi
    5dbd:	e8 ae 4d 00 00       	call   ab70 <__assert>
    5dc2:	4d 89 e1             	mov    %r12,%r9
    5dc5:	49 c1 e1 05          	shl    $0x5,%r9
    5dc9:	4c 89 c9             	mov    %r9,%rcx
    5dcc:	49 03 0f             	add    (%r15),%rcx
    5dcf:	48 8b 41 08          	mov    0x8(%rcx),%rax
    5dd3:	48 8b 19             	mov    (%rcx),%rbx
    5dd6:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    5ddd:	00 
    5dde:	48 8b 41 10          	mov    0x10(%rcx),%rax
    5de2:	85 db                	test   %ebx,%ebx
    5de4:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    5deb:	00 
    5dec:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    5df3:	00 
    5df4:	48 8b 41 18          	mov    0x18(%rcx),%rax
    5df8:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    5dff:	00 
    5e00:	0f 85 7a fe ff ff    	jne    5c80 <_Z4joinR5TableS0_S0_+0x350>
    5e06:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    5e0b:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
    5e10:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    5e17:	00 
    5e18:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    5e1d:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    5e24:	00 
    5e25:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    5e2c:	00 
    5e2d:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    5e32:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    5e39:	00 
    5e3a:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    5e3f:	e9 44 fe ff ff       	jmp    5c88 <_Z4joinR5TableS0_S0_+0x358>
    5e44:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    5e49:	31 f6                	xor    %esi,%esi
    5e4b:	e8 30 f7 ff ff       	call   5580 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    5e50:	bf 01 00 00 00       	mov    $0x1,%edi
    5e55:	e8 56 de ff ff       	call   3cb0 <get_time>
    5e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e60:	bf 01 00 00 00       	mov    $0x1,%edi
    5e65:	e8 46 de ff ff       	call   3cb0 <get_time>
    5e6a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    5e6e:	85 c0                	test   %eax,%eax
    5e70:	0f 8e 15 01 00 00    	jle    5f8b <_Z4joinR5TableS0_S0_+0x65b>
    5e76:	48 63 44 24 4c       	movslq 0x4c(%rsp),%rax
    5e7b:	31 db                	xor    %ebx,%ebx
    5e7d:	48 89 c5             	mov    %rax,%rbp
    5e80:	48 c1 e0 05          	shl    $0x5,%rax
    5e84:	49 89 c4             	mov    %rax,%r12
    5e87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e8e:	00 00 
    5e90:	85 ed                	test   %ebp,%ebp
    5e92:	41 89 db             	mov    %ebx,%r11d
    5e95:	78 0a                	js     5ea1 <_Z4joinR5TableS0_S0_+0x571>
    5e97:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5e9c:	3b 68 2c             	cmp    0x2c(%rax),%ebp
    5e9f:	7c 29                	jl     5eca <_Z4joinR5TableS0_S0_+0x59a>
    5ea1:	48 8d 0d 40 b3 01 00 	lea    0x1b340(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5ea8:	48 8d 15 2d b4 01 00 	lea    0x1b42d(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5eaf:	48 8d 3d 45 b3 01 00 	lea    0x1b345(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5eb6:	be 3b 00 00 00       	mov    $0x3b,%esi
    5ebb:	44 89 5c 24 1c       	mov    %r11d,0x1c(%rsp)
    5ec0:	e8 ab 4c 00 00       	call   ab70 <__assert>
    5ec5:	44 8b 5c 24 1c       	mov    0x1c(%rsp),%r11d
    5eca:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ecf:	4c 89 e2             	mov    %r12,%rdx
    5ed2:	48 03 10             	add    (%rax),%rdx
    5ed5:	8b 7a 14             	mov    0x14(%rdx),%edi
    5ed8:	44 8b 12             	mov    (%rdx),%r10d
    5edb:	44 8b 4a 04          	mov    0x4(%rdx),%r9d
    5edf:	44 8b 42 08          	mov    0x8(%rdx),%r8d
    5ee3:	8b 42 0c             	mov    0xc(%rdx),%eax
    5ee6:	44 8b 7a 10          	mov    0x10(%rdx),%r15d
    5eea:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    5eee:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5ef3:	44 8b 72 18          	mov    0x18(%rdx),%r14d
    5ef7:	44 8b 6a 1c          	mov    0x1c(%rdx),%r13d
    5efb:	44 39 5f 2c          	cmp    %r11d,0x2c(%rdi)
    5eff:	7f 45                	jg     5f46 <_Z4joinR5TableS0_S0_+0x616>
    5f01:	48 8d 0d e0 b2 01 00 	lea    0x1b2e0(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    5f08:	48 8d 15 c7 b3 01 00 	lea    0x1b3c7(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5f0f:	48 8d 3d e5 b2 01 00 	lea    0x1b2e5(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    5f16:	be 48 00 00 00       	mov    $0x48,%esi
    5f1b:	89 44 24 34          	mov    %eax,0x34(%rsp)
    5f1f:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
    5f24:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
    5f29:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
    5f2e:	e8 3d 4c 00 00       	call   ab70 <__assert>
    5f33:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5f37:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    5f3c:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    5f41:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
    5f46:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5f4b:	48 89 da             	mov    %rbx,%rdx
    5f4e:	83 c5 01             	add    $0x1,%ebp
    5f51:	48 c1 e2 05          	shl    $0x5,%rdx
    5f55:	48 83 c3 01          	add    $0x1,%rbx
    5f59:	49 83 c4 20          	add    $0x20,%r12
    5f5d:	48 03 17             	add    (%rdi),%rdx
    5f60:	39 5c 24 48          	cmp    %ebx,0x48(%rsp)
    5f64:	89 42 0c             	mov    %eax,0xc(%rdx)
    5f67:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5f6b:	44 89 12             	mov    %r10d,(%rdx)
    5f6e:	44 89 4a 04          	mov    %r9d,0x4(%rdx)
    5f72:	44 89 42 08          	mov    %r8d,0x8(%rdx)
    5f76:	44 89 7a 10          	mov    %r15d,0x10(%rdx)
    5f7a:	89 42 14             	mov    %eax,0x14(%rdx)
    5f7d:	44 89 72 18          	mov    %r14d,0x18(%rdx)
    5f81:	44 89 6a 1c          	mov    %r13d,0x1c(%rdx)
    5f85:	0f 8f 05 ff ff ff    	jg     5e90 <_Z4joinR5TableS0_S0_+0x560>
    5f8b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5f90:	8b 70 2c             	mov    0x2c(%rax),%esi
    5f93:	85 f6                	test   %esi,%esi
    5f95:	0f 8e 19 03 00 00    	jle    62b4 <_Z4joinR5TableS0_S0_+0x984>
    5f9b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5fa0:	45 31 ed             	xor    %r13d,%r13d
    5fa3:	45 31 c0             	xor    %r8d,%r8d
    5fa6:	48 8b 38             	mov    (%rax),%rdi
    5fa9:	49 89 c1             	mov    %rax,%r9
    5fac:	eb 0a                	jmp    5fb8 <_Z4joinR5TableS0_S0_+0x688>
    5fae:	66 90                	xchg   %ax,%ax
    5fb0:	41 8b 71 2c          	mov    0x2c(%r9),%esi
    5fb4:	49 83 c5 01          	add    $0x1,%r13
    5fb8:	4d 89 ef             	mov    %r13,%r15
    5fbb:	31 db                	xor    %ebx,%ebx
    5fbd:	49 c1 e7 05          	shl    $0x5,%r15
    5fc1:	4a 8d 14 3f          	lea    (%rdi,%r15,1),%rdx
    5fc5:	44 8b 22             	mov    (%rdx),%r12d
    5fc8:	44 8b 72 10          	mov    0x10(%rdx),%r14d
    5fcc:	8b 42 0c             	mov    0xc(%rdx),%eax
    5fcf:	44 8b 5a 04          	mov    0x4(%rdx),%r11d
    5fd3:	44 8b 52 08          	mov    0x8(%rdx),%r10d
    5fd7:	45 85 e4             	test   %r12d,%r12d
    5fda:	0f 95 c3             	setne  %bl
    5fdd:	31 c9                	xor    %ecx,%ecx
    5fdf:	89 44 24 08          	mov    %eax,0x8(%rsp)
    5fe3:	41 0f af de          	imul   %r14d,%ebx
    5fe7:	45 85 e4             	test   %r12d,%r12d
    5fea:	8b 42 14             	mov    0x14(%rdx),%eax
    5fed:	0f 94 c1             	sete   %cl
    5ff0:	29 cb                	sub    %ecx,%ebx
    5ff2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    5ff6:	8b 42 1c             	mov    0x1c(%rdx),%eax
    5ff9:	0f 95 c1             	setne  %cl
    5ffc:	31 ed                	xor    %ebp,%ebp
    5ffe:	0f b6 c9             	movzbl %cl,%ecx
    6001:	44 0f af e1          	imul   %ecx,%r12d
    6005:	85 db                	test   %ebx,%ebx
    6007:	40 0f 94 c5          	sete   %bpl
    600b:	0f af 6a 18          	imul   0x18(%rdx),%ebp
    600f:	41 0f af c8          	imul   %r8d,%ecx
    6013:	01 cd                	add    %ecx,%ebp
    6015:	44 39 ee             	cmp    %r13d,%esi
    6018:	7f 5a                	jg     6074 <_Z4joinR5TableS0_S0_+0x744>
    601a:	48 8d 15 b5 b2 01 00 	lea    0x1b2b5(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6021:	48 8d 3d d3 b1 01 00 	lea    0x1b1d3(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    6028:	48 8d 0d b9 b1 01 00 	lea    0x1b1b9(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    602f:	be 48 00 00 00       	mov    $0x48,%esi
    6034:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    6039:	44 89 44 24 34       	mov    %r8d,0x34(%rsp)
    603e:	89 44 24 30          	mov    %eax,0x30(%rsp)
    6042:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
    6047:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
    604c:	e8 1f 4b 00 00       	call   ab70 <__assert>
    6051:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
    6056:	44 8b 44 24 34       	mov    0x34(%rsp),%r8d
    605b:	8b 44 24 30          	mov    0x30(%rsp),%eax
    605f:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
    6064:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
    6069:	49 8b 39             	mov    (%r9),%rdi
    606c:	41 8b 71 2c          	mov    0x2c(%r9),%esi
    6070:	4a 8d 14 3f          	lea    (%rdi,%r15,1),%rdx
    6074:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    6078:	89 42 1c             	mov    %eax,0x1c(%rdx)
    607b:	41 8d 45 01          	lea    0x1(%r13),%eax
    607f:	41 01 d8             	add    %ebx,%r8d
    6082:	44 89 22             	mov    %r12d,(%rdx)
    6085:	44 89 5a 04          	mov    %r11d,0x4(%rdx)
    6089:	39 f0                	cmp    %esi,%eax
    608b:	44 89 52 08          	mov    %r10d,0x8(%rdx)
    608f:	44 89 72 10          	mov    %r14d,0x10(%rdx)
    6093:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    6096:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    609a:	89 6a 18             	mov    %ebp,0x18(%rdx)
    609d:	89 4a 14             	mov    %ecx,0x14(%rdx)
    60a0:	0f 8c 0a ff ff ff    	jl     5fb0 <_Z4joinR5TableS0_S0_+0x680>
    60a6:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    60ab:	44 89 c6             	mov    %r8d,%esi
    60ae:	44 89 c3             	mov    %r8d,%ebx
    60b1:	44 89 44 24 40       	mov    %r8d,0x40(%rsp)
    60b6:	4c 89 ff             	mov    %r15,%rdi
    60b9:	e8 c2 f4 ff ff       	call   5580 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    60be:	bf 01 00 00 00       	mov    $0x1,%edi
    60c3:	e8 e8 db ff ff       	call   3cb0 <get_time>
    60c8:	85 db                	test   %ebx,%ebx
    60ca:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
    60d1:	00 
    60d2:	0f 8e f8 01 00 00    	jle    62d0 <_Z4joinR5TableS0_S0_+0x9a0>
    60d8:	45 31 e4             	xor    %r12d,%r12d
    60db:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
    60e2:	00 
    60e3:	e9 22 01 00 00       	jmp    620a <_Z4joinR5TableS0_S0_+0x8da>
    60e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    60ef:	00 
    60f0:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
    60f7:	00 
    60f8:	48 8b 10             	mov    (%rax),%rdx
    60fb:	44 8b b4 24 90 00 00 	mov    0x90(%rsp),%r14d
    6102:	00 
    6103:	31 f6                	xor    %esi,%esi
    6105:	85 db                	test   %ebx,%ebx
    6107:	44 8b 8c 24 94 00 00 	mov    0x94(%rsp),%r9d
    610e:	00 
    610f:	44 8b 84 24 98 00 00 	mov    0x98(%rsp),%r8d
    6116:	00 
    6117:	40 0f 94 c6          	sete   %sil
    611b:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    6120:	44 8b 9c 24 84 00 00 	mov    0x84(%rsp),%r11d
    6127:	00 
    6128:	48 89 54 24 60       	mov    %rdx,0x60(%rsp)
    612d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6131:	0f af 74 24 08       	imul   0x8(%rsp),%esi
    6136:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
    613b:	48 8b 50 10          	mov    0x10(%rax),%rdx
    613f:	48 89 54 24 70       	mov    %rdx,0x70(%rsp)
    6144:	48 8b 40 18          	mov    0x18(%rax),%rax
    6148:	41 01 f0             	add    %esi,%r8d
    614b:	44 89 84 24 98 00 00 	mov    %r8d,0x98(%rsp)
    6152:	00 
    6153:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6158:	44 89 e8             	mov    %r13d,%eax
    615b:	99                   	cltd   
    615c:	41 f7 fe             	idiv   %r14d
    615f:	41 0f af d1          	imul   %r9d,%edx
    6163:	45 39 6f 2c          	cmp    %r13d,0x2c(%r15)
    6167:	8d 2c 02             	lea    (%rdx,%rax,1),%ebp
    616a:	8d 46 01             	lea    0x1(%rsi),%eax
    616d:	89 44 24 08          	mov    %eax,0x8(%rsp)
    6171:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
    6178:	89 ac 24 9c 00 00 00 	mov    %ebp,0x9c(%rsp)
    617f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    6183:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
    618a:	7f 50                	jg     61dc <_Z4joinR5TableS0_S0_+0x8ac>
    618c:	48 8d 0d 55 b0 01 00 	lea    0x1b055(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    6193:	48 8d 15 3c b1 01 00 	lea    0x1b13c(%rip),%rdx        # 212d6 <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    619a:	48 8d 3d 5a b0 01 00 	lea    0x1b05a(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    61a1:	be 48 00 00 00       	mov    $0x48,%esi
    61a6:	89 44 24 38          	mov    %eax,0x38(%rsp)
    61aa:	44 89 5c 24 34       	mov    %r11d,0x34(%rsp)
    61af:	44 89 4c 24 30       	mov    %r9d,0x30(%rsp)
    61b4:	44 89 44 24 28       	mov    %r8d,0x28(%rsp)
    61b9:	e8 b2 49 00 00       	call   ab70 <__assert>
    61be:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    61c3:	8b 44 24 38          	mov    0x38(%rsp),%eax
    61c7:	44 8b 5c 24 34       	mov    0x34(%rsp),%r11d
    61cc:	44 8b 4c 24 30       	mov    0x30(%rsp),%r9d
    61d1:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
    61d6:	4c 89 d1             	mov    %r10,%rcx
    61d9:	49 03 0f             	add    (%r15),%rcx
    61dc:	49 83 c4 01          	add    $0x1,%r12
    61e0:	44 39 64 24 40       	cmp    %r12d,0x40(%rsp)
    61e5:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    61e9:	89 19                	mov    %ebx,(%rcx)
    61eb:	44 89 59 04          	mov    %r11d,0x4(%rcx)
    61ef:	89 41 0c             	mov    %eax,0xc(%rcx)
    61f2:	44 89 71 10          	mov    %r14d,0x10(%rcx)
    61f6:	89 79 08             	mov    %edi,0x8(%rcx)
    61f9:	44 89 49 14          	mov    %r9d,0x14(%rcx)
    61fd:	44 89 41 18          	mov    %r8d,0x18(%rcx)
    6201:	89 69 1c             	mov    %ebp,0x1c(%rcx)
    6204:	0f 8e c6 00 00 00    	jle    62d0 <_Z4joinR5TableS0_S0_+0x9a0>
    620a:	45 39 67 2c          	cmp    %r12d,0x2c(%r15)
    620e:	45 89 e5             	mov    %r12d,%r13d
    6211:	7f 1f                	jg     6232 <_Z4joinR5TableS0_S0_+0x902>
    6213:	48 8d 0d ce af 01 00 	lea    0x1afce(%rip),%rcx        # 211e8 <g_dyn_entry_table+0x1e8>
    621a:	48 8d 15 bb b0 01 00 	lea    0x1b0bb(%rip),%rdx        # 212dc <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6221:	48 8d 3d d3 af 01 00 	lea    0x1afd3(%rip),%rdi        # 211fb <g_dyn_entry_table+0x1fb>
    6228:	be 3b 00 00 00       	mov    $0x3b,%esi
    622d:	e8 3e 49 00 00       	call   ab70 <__assert>
    6232:	4d 89 e2             	mov    %r12,%r10
    6235:	49 c1 e2 05          	shl    $0x5,%r10
    6239:	4c 89 d1             	mov    %r10,%rcx
    623c:	49 03 0f             	add    (%r15),%rcx
    623f:	48 8b 41 08          	mov    0x8(%rcx),%rax
    6243:	48 8b 19             	mov    (%rcx),%rbx
    6246:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    624d:	00 
    624e:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6252:	85 db                	test   %ebx,%ebx
    6254:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    625b:	00 
    625c:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    6263:	00 
    6264:	48 8b 41 18          	mov    0x18(%rcx),%rax
    6268:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    626f:	00 
    6270:	0f 85 7a fe ff ff    	jne    60f0 <_Z4joinR5TableS0_S0_+0x7c0>
    6276:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    627b:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
    6280:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6287:	00 
    6288:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    628d:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    6294:	00 
    6295:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    629c:	00 
    629d:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    62a2:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    62a9:	00 
    62aa:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    62af:	e9 44 fe ff ff       	jmp    60f8 <_Z4joinR5TableS0_S0_+0x7c8>
    62b4:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    62b9:	31 f6                	xor    %esi,%esi
    62bb:	e8 c0 f2 ff ff       	call   5580 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    62c0:	bf 01 00 00 00       	mov    $0x1,%edi
    62c5:	e8 e6 d9 ff ff       	call   3cb0 <get_time>
    62ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    62d0:	bf 01 00 00 00       	mov    $0x1,%edi
    62d5:	e8 d6 d9 ff ff       	call   3cb0 <get_time>
    62da:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    62df:	8b 7c 24 5c          	mov    0x5c(%rsp),%edi
    62e3:	3b 78 2c             	cmp    0x2c(%rax),%edi
    62e6:	74 1f                	je     6307 <_Z4joinR5TableS0_S0_+0x9d7>
    62e8:	48 8d 0d 67 af 01 00 	lea    0x1af67(%rip),%rcx        # 21256 <g_dyn_entry_table+0x256>
    62ef:	48 8d 15 db af 01 00 	lea    0x1afdb(%rip),%rdx        # 212d1 <_ZZ4joinR5TableS0_S0_E8__func__>
    62f6:	48 8d 3d 75 af 01 00 	lea    0x1af75(%rip),%rdi        # 21272 <g_dyn_entry_table+0x272>
    62fd:	be 35 00 00 00       	mov    $0x35,%esi
    6302:	e8 69 48 00 00       	call   ab70 <__assert>
    6307:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    630c:	8b 7c 24 5c          	mov    0x5c(%rsp),%edi
    6310:	3b 78 2c             	cmp    0x2c(%rax),%edi
    6313:	74 1f                	je     6334 <_Z4joinR5TableS0_S0_+0xa04>
    6315:	48 8d 0d 67 af 01 00 	lea    0x1af67(%rip),%rcx        # 21283 <g_dyn_entry_table+0x283>
    631c:	48 8d 15 ae af 01 00 	lea    0x1afae(%rip),%rdx        # 212d1 <_ZZ4joinR5TableS0_S0_E8__func__>
    6323:	48 8d 3d 48 af 01 00 	lea    0x1af48(%rip),%rdi        # 21272 <g_dyn_entry_table+0x272>
    632a:	be 36 00 00 00       	mov    $0x36,%esi
    632f:	e8 3c 48 00 00       	call   ab70 <__assert>
    6334:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6339:	31 d2                	xor    %edx,%edx
    633b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    6340:	be 01 00 00 00       	mov    $0x1,%esi
    6345:	e8 96 f1 ff ff       	call   54e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    634a:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    6351:	00 
    6352:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6359:	00 00 
    635b:	75 1b                	jne    6378 <_Z4joinR5TableS0_S0_+0xa48>
    635d:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
    6364:	bf 01 00 00 00       	mov    $0x1,%edi
    6369:	5b                   	pop    %rbx
    636a:	5d                   	pop    %rbp
    636b:	41 5c                	pop    %r12
    636d:	41 5d                	pop    %r13
    636f:	41 5e                	pop    %r14
    6371:	41 5f                	pop    %r15
    6373:	e9 38 d9 ff ff       	jmp    3cb0 <get_time>
    6378:	e8 d3 87 00 00       	call   eb50 <__stack_chk_fail>
    637d:	0f 1f 00             	nopl   (%rax)

0000000000006380 <process_input>:
    6380:	41 55                	push   %r13
    6382:	41 54                	push   %r12
    6384:	49 89 fc             	mov    %rdi,%r12
    6387:	55                   	push   %rbp
    6388:	53                   	push   %rbx
    6389:	48 8d 3d 0f af 01 00 	lea    0x1af0f(%rip),%rdi        # 2129f <g_dyn_entry_table+0x29f>
    6390:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    6397:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    639e:	00 00 
    63a0:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    63a7:	00 
    63a8:	31 c0                	xor    %eax,%eax
    63aa:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
    63af:	e8 dc eb ff ff       	call   4f90 <printf>
    63b4:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    63b9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    63be:	4c 89 e6             	mov    %r12,%rsi
    63c1:	4c 89 ef             	mov    %r13,%rdi
    63c4:	e8 b7 ed ff ff       	call   5180 <_Z11parseTablesPcRiS0_>
    63c9:	e8 d2 d8 ff ff       	call   3ca0 <init_time>
    63ce:	48 63 7c 24 08       	movslq 0x8(%rsp),%rdi
    63d3:	8b 1d 27 3f 02 00    	mov    0x23f27(%rip),%ebx        # 2a300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    63d9:	be 20 00 00 00       	mov    $0x20,%esi
    63de:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    63e5:	00 00 
    63e7:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    63ee:	00 00 
    63f0:	48 8d 6c 24 70       	lea    0x70(%rsp),%rbp
    63f5:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    63fc:	00 00 
    63fe:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    6405:	00 00 
    6407:	89 5c 24 68          	mov    %ebx,0x68(%rsp)
    640b:	89 7c 24 6c          	mov    %edi,0x6c(%rsp)
    640f:	e8 6c 77 00 00       	call   db80 <calloc>
    6414:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
    6419:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    641e:	8d 43 02             	lea    0x2(%rbx),%eax
    6421:	83 c3 01             	add    $0x1,%ebx
    6424:	be 20 00 00 00       	mov    $0x20,%esi
    6429:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    6430:	00 00 
    6432:	89 9c 24 98 00 00 00 	mov    %ebx,0x98(%rsp)
    6439:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    643e:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
    6445:	00 00 00 00 00 
    644a:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    6451:	00 00 00 00 00 
    6456:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    645d:	00 00 00 00 00 
    6462:	89 bc 24 9c 00 00 00 	mov    %edi,0x9c(%rsp)
    6469:	89 05 91 3e 02 00    	mov    %eax,0x23e91(%rip)        # 2a300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    646f:	e8 0c 77 00 00       	call   db80 <calloc>
    6474:	48 89 ea             	mov    %rbp,%rdx
    6477:	48 89 de             	mov    %rbx,%rsi
    647a:	4c 89 ef             	mov    %r13,%rdi
    647d:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    6482:	e8 a9 f4 ff ff       	call   5930 <_Z4joinR5TableS0_S0_>
    6487:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    648c:	48 8d 75 10          	lea    0x10(%rbp),%rsi
    6490:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
    6497:	00 
    6498:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
    649f:	00 
    64a0:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    64a7:	00 
    64a8:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    64ad:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    64b4:	00 
    64b5:	e8 36 ef ff ff       	call   53f0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>
    64ba:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
    64c1:	48 8d 73 10          	lea    0x10(%rbx),%rsi
    64c5:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    64cc:	00 
    64cd:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    64d1:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
    64d8:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
    64df:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
    64e6:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    64eb:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
    64f2:	00 
    64f3:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    64f8:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    64ff:	00 
    6500:	e8 eb ee ff ff       	call   53f0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>
    6505:	8b 44 24 68          	mov    0x68(%rsp),%eax
    6509:	48 89 ea             	mov    %rbp,%rdx
    650c:	48 89 de             	mov    %rbx,%rsi
    650f:	4c 89 e7             	mov    %r12,%rdi
    6512:	89 84 24 c8 00 00 00 	mov    %eax,0xc8(%rsp)
    6519:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    651d:	89 84 24 cc 00 00 00 	mov    %eax,0xcc(%rsp)
    6524:	e8 d7 e8 ff ff       	call   4e00 <_Z8toStringPc5TableS0_>
    6529:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    6530:	00 
    6531:	48 85 ff             	test   %rdi,%rdi
    6534:	74 2b                	je     6561 <process_input+0x1e1>
    6536:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    653d:	00 
    653e:	48 39 d7             	cmp    %rdx,%rdi
    6541:	74 19                	je     655c <process_input+0x1dc>
    6543:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    6547:	48 29 f8             	sub    %rdi,%rax
    654a:	48 f7 d0             	not    %rax
    654d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6551:	48 01 d0             	add    %rdx,%rax
    6554:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    655b:	00 
    655c:	e8 4f 5c 01 00       	call   1c1b0 <_ZdlPv>
    6561:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
    6568:	00 
    6569:	48 85 ff             	test   %rdi,%rdi
    656c:	74 2b                	je     6599 <process_input+0x219>
    656e:	48 8b 94 24 e8 00 00 	mov    0xe8(%rsp),%rdx
    6575:	00 
    6576:	48 39 d7             	cmp    %rdx,%rdi
    6579:	74 19                	je     6594 <process_input+0x214>
    657b:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    657f:	48 29 f8             	sub    %rdi,%rax
    6582:	48 f7 d0             	not    %rax
    6585:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6589:	48 01 d0             	add    %rdx,%rax
    658c:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    6593:	00 
    6594:	e8 17 5c 01 00       	call   1c1b0 <_ZdlPv>
    6599:	48 8d 3d 0e ad 01 00 	lea    0x1ad0e(%rip),%rdi        # 212ae <g_dyn_entry_table+0x2ae>
    65a0:	31 c0                	xor    %eax,%eax
    65a2:	e8 e9 e9 ff ff       	call   4f90 <printf>
    65a7:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    65ae:	00 
    65af:	48 85 ff             	test   %rdi,%rdi
    65b2:	74 2b                	je     65df <process_input+0x25f>
    65b4:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    65bb:	00 
    65bc:	48 39 d7             	cmp    %rdx,%rdi
    65bf:	74 19                	je     65da <process_input+0x25a>
    65c1:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    65c5:	48 29 f8             	sub    %rdi,%rax
    65c8:	48 f7 d0             	not    %rax
    65cb:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    65cf:	48 01 d0             	add    %rdx,%rax
    65d2:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    65d9:	00 
    65da:	e8 d1 5b 01 00       	call   1c1b0 <_ZdlPv>
    65df:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    65e4:	48 85 ff             	test   %rdi,%rdi
    65e7:	74 25                	je     660e <process_input+0x28e>
    65e9:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    65ee:	48 39 d7             	cmp    %rdx,%rdi
    65f1:	74 16                	je     6609 <process_input+0x289>
    65f3:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    65f7:	48 29 f8             	sub    %rdi,%rax
    65fa:	48 f7 d0             	not    %rax
    65fd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6601:	48 01 d0             	add    %rdx,%rax
    6604:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    6609:	e8 a2 5b 01 00       	call   1c1b0 <_ZdlPv>
    660e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    6613:	48 85 ff             	test   %rdi,%rdi
    6616:	74 25                	je     663d <process_input+0x2bd>
    6618:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    661d:	48 39 d7             	cmp    %rdx,%rdi
    6620:	74 16                	je     6638 <process_input+0x2b8>
    6622:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    6626:	48 29 f8             	sub    %rdi,%rax
    6629:	48 f7 d0             	not    %rax
    662c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6630:	48 01 d0             	add    %rdx,%rax
    6633:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6638:	e8 73 5b 01 00       	call   1c1b0 <_ZdlPv>
    663d:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    6644:	00 
    6645:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    664c:	00 00 
    664e:	75 3d                	jne    668d <process_input+0x30d>
    6650:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    6657:	5b                   	pop    %rbx
    6658:	5d                   	pop    %rbp
    6659:	41 5c                	pop    %r12
    665b:	41 5d                	pop    %r13
    665d:	c3                   	ret    
    665e:	48 89 c3             	mov    %rax,%rbx
    6661:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    6666:	48 85 ff             	test   %rdi,%rdi
    6669:	0f 84 2f 01 00 00    	je     679e <process_input+0x41e>
    666f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6674:	31 c9                	xor    %ecx,%ecx
    6676:	48 89 c2             	mov    %rax,%rdx
    6679:	48 39 d7             	cmp    %rdx,%rdi
    667c:	0f 84 01 01 00 00    	je     6783 <process_input+0x403>
    6682:	48 83 ea 08          	sub    $0x8,%rdx
    6686:	b9 01 00 00 00       	mov    $0x1,%ecx
    668b:	eb ec                	jmp    6679 <process_input+0x2f9>
    668d:	e8 be 84 00 00       	call   eb50 <__stack_chk_fail>
    6692:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    6699:	00 
    669a:	48 89 c3             	mov    %rax,%rbx
    669d:	48 85 ff             	test   %rdi,%rdi
    66a0:	74 24                	je     66c6 <process_input+0x346>
    66a2:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    66a9:	00 
    66aa:	31 c9                	xor    %ecx,%ecx
    66ac:	48 89 d0             	mov    %rdx,%rax
    66af:	48 39 c7             	cmp    %rax,%rdi
    66b2:	0f 84 ee 00 00 00    	je     67a6 <process_input+0x426>
    66b8:	48 83 e8 08          	sub    $0x8,%rax
    66bc:	b9 01 00 00 00       	mov    $0x1,%ecx
    66c1:	eb ec                	jmp    66af <process_input+0x32f>
    66c3:	48 89 c3             	mov    %rax,%rbx
    66c6:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
    66cd:	00 
    66ce:	48 85 ff             	test   %rdi,%rdi
    66d1:	74 20                	je     66f3 <process_input+0x373>
    66d3:	48 8b 94 24 e8 00 00 	mov    0xe8(%rsp),%rdx
    66da:	00 
    66db:	31 c9                	xor    %ecx,%ecx
    66dd:	48 89 d0             	mov    %rdx,%rax
    66e0:	48 39 c7             	cmp    %rax,%rdi
    66e3:	74 38                	je     671d <process_input+0x39d>
    66e5:	48 83 e8 08          	sub    $0x8,%rax
    66e9:	b9 01 00 00 00       	mov    $0x1,%ecx
    66ee:	eb f0                	jmp    66e0 <process_input+0x360>
    66f0:	48 89 c3             	mov    %rax,%rbx
    66f3:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    66fa:	00 
    66fb:	48 85 ff             	test   %rdi,%rdi
    66fe:	74 5b                	je     675b <process_input+0x3db>
    6700:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    6707:	00 
    6708:	31 c9                	xor    %ecx,%ecx
    670a:	48 89 c2             	mov    %rax,%rdx
    670d:	48 39 d7             	cmp    %rdx,%rdi
    6710:	74 2b                	je     673d <process_input+0x3bd>
    6712:	48 83 ea 08          	sub    $0x8,%rdx
    6716:	b9 01 00 00 00       	mov    $0x1,%ecx
    671b:	eb f0                	jmp    670d <process_input+0x38d>
    671d:	48 89 d0             	mov    %rdx,%rax
    6720:	48 29 f8             	sub    %rdi,%rax
    6723:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    6727:	48 29 c2             	sub    %rax,%rdx
    672a:	84 c9                	test   %cl,%cl
    672c:	74 08                	je     6736 <process_input+0x3b6>
    672e:	48 89 94 24 e8 00 00 	mov    %rdx,0xe8(%rsp)
    6735:	00 
    6736:	e8 75 5a 01 00       	call   1c1b0 <_ZdlPv>
    673b:	eb b6                	jmp    66f3 <process_input+0x373>
    673d:	48 89 c2             	mov    %rax,%rdx
    6740:	48 29 fa             	sub    %rdi,%rdx
    6743:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    6747:	48 29 d0             	sub    %rdx,%rax
    674a:	84 c9                	test   %cl,%cl
    674c:	74 08                	je     6756 <process_input+0x3d6>
    674e:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6755:	00 
    6756:	e8 55 5a 01 00       	call   1c1b0 <_ZdlPv>
    675b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    6760:	48 85 ff             	test   %rdi,%rdi
    6763:	0f 84 f8 fe ff ff    	je     6661 <process_input+0x2e1>
    6769:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    676e:	31 c9                	xor    %ecx,%ecx
    6770:	48 89 c2             	mov    %rax,%rdx
    6773:	48 39 d7             	cmp    %rdx,%rdi
    6776:	74 51                	je     67c9 <process_input+0x449>
    6778:	48 83 ea 08          	sub    $0x8,%rdx
    677c:	b9 01 00 00 00       	mov    $0x1,%ecx
    6781:	eb f0                	jmp    6773 <process_input+0x3f3>
    6783:	48 89 c2             	mov    %rax,%rdx
    6786:	48 29 fa             	sub    %rdi,%rdx
    6789:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    678d:	48 29 d0             	sub    %rdx,%rax
    6790:	84 c9                	test   %cl,%cl
    6792:	74 05                	je     6799 <process_input+0x419>
    6794:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6799:	e8 12 5a 01 00       	call   1c1b0 <_ZdlPv>
    679e:	48 89 df             	mov    %rbx,%rdi
    67a1:	e8 ea 1d 01 00       	call   18590 <_Unwind_Resume>
    67a6:	48 89 d0             	mov    %rdx,%rax
    67a9:	48 29 f8             	sub    %rdi,%rax
    67ac:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    67b0:	48 29 c2             	sub    %rax,%rdx
    67b3:	84 c9                	test   %cl,%cl
    67b5:	74 08                	je     67bf <process_input+0x43f>
    67b7:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
    67be:	00 
    67bf:	e8 ec 59 01 00       	call   1c1b0 <_ZdlPv>
    67c4:	e9 fd fe ff ff       	jmp    66c6 <process_input+0x346>
    67c9:	48 89 c2             	mov    %rax,%rdx
    67cc:	48 29 fa             	sub    %rdi,%rdx
    67cf:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    67d3:	48 29 d0             	sub    %rdx,%rax
    67d6:	84 c9                	test   %cl,%cl
    67d8:	74 05                	je     67df <process_input+0x45f>
    67da:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    67df:	e8 cc 59 01 00       	call   1c1b0 <_ZdlPv>
    67e4:	e9 78 fe ff ff       	jmp    6661 <process_input+0x2e1>
    67e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000067f0 <ecall_type_char>:
    67f0:	40 80 ff 12          	cmp    $0x12,%dil
    67f4:	74 22                	je     6818 <ecall_type_char+0x28>
    67f6:	48 8d 0d e4 aa 01 00 	lea    0x1aae4(%rip),%rcx        # 212e1 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x5>
    67fd:	48 8d 15 ac ac 01 00 	lea    0x1acac(%rip),%rdx        # 214b0 <_ZZ15ecall_type_charE8__func__>
    6804:	48 8d 3d 65 ab 01 00 	lea    0x1ab65(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    680b:	be 43 00 00 00       	mov    $0x43,%esi
    6810:	e9 5b 43 00 00       	jmp    ab70 <__assert>
    6815:	0f 1f 00             	nopl   (%rax)
    6818:	f3 c3                	repz ret 
    681a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006820 <ecall_type_int>:
    6820:	81 ff d2 04 00 00    	cmp    $0x4d2,%edi
    6826:	74 28                	je     6850 <ecall_type_int+0x30>
    6828:	48 8d 0d be aa 01 00 	lea    0x1aabe(%rip),%rcx        # 212ed <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    682f:	48 8d 15 62 ac 01 00 	lea    0x1ac62(%rip),%rdx        # 21498 <_ZZ14ecall_type_intE8__func__>
    6836:	48 8d 3d 33 ab 01 00 	lea    0x1ab33(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    683d:	be 4e 00 00 00       	mov    $0x4e,%esi
    6842:	e9 29 43 00 00       	jmp    ab70 <__assert>
    6847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    684e:	00 00 
    6850:	f3 c3                	repz ret 
    6852:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6859:	00 00 00 
    685c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006860 <ecall_type_float>:
    6860:	0f 28 d0             	movaps %xmm0,%xmm2
    6863:	f3 0f 10 1d 65 ac 01 	movss  0x1ac65(%rip),%xmm3        # 214d0 <_ZZ15ecall_type_charE8__func__+0x20>
    686a:	00 
    686b:	f3 0f 10 0d 81 ac 01 	movss  0x1ac81(%rip),%xmm1        # 214f4 <_ZZ15ecall_type_charE8__func__+0x44>
    6872:	00 
    6873:	f3 0f 5c d1          	subss  %xmm1,%xmm2
    6877:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    687b:	f3 0f 10 05 6d ac 01 	movss  0x1ac6d(%rip),%xmm0        # 214f0 <_ZZ15ecall_type_charE8__func__+0x40>
    6882:	00 
    6883:	0f 54 d3             	andps  %xmm3,%xmm2
    6886:	0f 54 cb             	andps  %xmm3,%xmm1
    6889:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    688d:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    6891:	0f 2e c2             	ucomiss %xmm2,%xmm0
    6894:	72 0a                	jb     68a0 <ecall_type_float+0x40>
    6896:	f3 c3                	repz ret 
    6898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    689f:	00 
    68a0:	48 8d 0d e9 aa 01 00 	lea    0x1aae9(%rip),%rcx        # 21390 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0xb4>
    68a7:	48 8d 15 d2 ab 01 00 	lea    0x1abd2(%rip),%rdx        # 21480 <_ZZ16ecall_type_floatE8__func__>
    68ae:	48 8d 3d bb aa 01 00 	lea    0x1aabb(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    68b5:	be 59 00 00 00       	mov    $0x59,%esi
    68ba:	e9 b1 42 00 00       	jmp    ab70 <__assert>
    68bf:	90                   	nop

00000000000068c0 <ecall_type_double>:
    68c0:	f2 0f 10 0d 20 ac 01 	movsd  0x1ac20(%rip),%xmm1        # 214e8 <_ZZ15ecall_type_charE8__func__+0x38>
    68c7:	00 
    68c8:	66 0f 28 d0          	movapd %xmm0,%xmm2
    68cc:	f2 0f 10 1d ec ab 01 	movsd  0x1abec(%rip),%xmm3        # 214c0 <_ZZ15ecall_type_charE8__func__+0x10>
    68d3:	00 
    68d4:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
    68d8:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    68dc:	f2 0f 10 05 fc ab 01 	movsd  0x1abfc(%rip),%xmm0        # 214e0 <_ZZ15ecall_type_charE8__func__+0x30>
    68e3:	00 
    68e4:	66 0f 54 d3          	andpd  %xmm3,%xmm2
    68e8:	66 0f 54 cb          	andpd  %xmm3,%xmm1
    68ec:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    68f0:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    68f4:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
    68f8:	72 06                	jb     6900 <ecall_type_double+0x40>
    68fa:	f3 c3                	repz ret 
    68fc:	0f 1f 40 00          	nopl   0x0(%rax)
    6900:	48 8d 0d b1 aa 01 00 	lea    0x1aab1(%rip),%rcx        # 213b8 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0xdc>
    6907:	48 8d 15 52 ab 01 00 	lea    0x1ab52(%rip),%rdx        # 21460 <_ZZ17ecall_type_doubleE8__func__>
    690e:	48 8d 3d 5b aa 01 00 	lea    0x1aa5b(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    6915:	be 64 00 00 00       	mov    $0x64,%esi
    691a:	e9 51 42 00 00       	jmp    ab70 <__assert>
    691f:	90                   	nop

0000000000006920 <ecall_type_size_t>:
    6920:	48 81 ff 4e 61 bc 00 	cmp    $0xbc614e,%rdi
    6927:	74 27                	je     6950 <ecall_type_size_t+0x30>
    6929:	48 8d 0d c9 a9 01 00 	lea    0x1a9c9(%rip),%rcx        # 212f9 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x1d>
    6930:	48 8d 15 09 ab 01 00 	lea    0x1ab09(%rip),%rdx        # 21440 <_ZZ17ecall_type_size_tE8__func__>
    6937:	48 8d 3d 32 aa 01 00 	lea    0x1aa32(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    693e:	be 6f 00 00 00       	mov    $0x6f,%esi
    6943:	e9 28 42 00 00       	jmp    ab70 <__assert>
    6948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    694f:	00 
    6950:	f3 c3                	repz ret 
    6952:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6959:	00 00 00 
    695c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006960 <ecall_type_wchar_t>:
    6960:	81 ff 34 12 00 00    	cmp    $0x1234,%edi
    6966:	74 28                	je     6990 <ecall_type_wchar_t+0x30>
    6968:	48 8d 0d a2 a9 01 00 	lea    0x1a9a2(%rip),%rcx        # 21311 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x35>
    696f:	48 8d 15 aa aa 01 00 	lea    0x1aaaa(%rip),%rdx        # 21420 <_ZZ18ecall_type_wchar_tE8__func__>
    6976:	48 8d 3d f3 a9 01 00 	lea    0x1a9f3(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    697d:	be 7a 00 00 00       	mov    $0x7a,%esi
    6982:	e9 e9 41 00 00       	jmp    ab70 <__assert>
    6987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    698e:	00 00 
    6990:	f3 c3                	repz ret 
    6992:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6999:	00 00 00 
    699c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000069a0 <ecall_type_struct>:
    69a0:	81 ff d2 04 00 00    	cmp    $0x4d2,%edi
    69a6:	53                   	push   %rbx
    69a7:	48 89 f3             	mov    %rsi,%rbx
    69aa:	74 1f                	je     69cb <ecall_type_struct+0x2b>
    69ac:	48 8d 0d 75 a9 01 00 	lea    0x1a975(%rip),%rcx        # 21328 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x4c>
    69b3:	48 8d 15 46 aa 01 00 	lea    0x1aa46(%rip),%rdx        # 21400 <_ZZ17ecall_type_structE8__func__>
    69ba:	48 8d 3d af a9 01 00 	lea    0x1a9af(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    69c1:	be 85 00 00 00       	mov    $0x85,%esi
    69c6:	e8 a5 41 00 00       	call   ab70 <__assert>
    69cb:	48 81 fb 2e 16 00 00 	cmp    $0x162e,%rbx
    69d2:	74 24                	je     69f8 <ecall_type_struct+0x58>
    69d4:	5b                   	pop    %rbx
    69d5:	48 8d 0d 65 a9 01 00 	lea    0x1a965(%rip),%rcx        # 21341 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x65>
    69dc:	48 8d 15 1d aa 01 00 	lea    0x1aa1d(%rip),%rdx        # 21400 <_ZZ17ecall_type_structE8__func__>
    69e3:	48 8d 3d 86 a9 01 00 	lea    0x1a986(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    69ea:	be 86 00 00 00       	mov    $0x86,%esi
    69ef:	e9 7c 41 00 00       	jmp    ab70 <__assert>
    69f4:	0f 1f 40 00          	nopl   0x0(%rax)
    69f8:	5b                   	pop    %rbx
    69f9:	c3                   	ret    
    69fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006a00 <ecall_type_enum_union>:
    6a00:	55                   	push   %rbp
    6a01:	53                   	push   %rbx
    6a02:	48 89 f3             	mov    %rsi,%rbx
    6a05:	89 fd                	mov    %edi,%ebp
    6a07:	be 08 00 00 00       	mov    $0x8,%esi
    6a0c:	48 89 df             	mov    %rbx,%rdi
    6a0f:	48 83 ec 08          	sub    $0x8,%rsp
    6a13:	e8 18 15 00 00       	call   7f30 <sgx_is_outside_enclave>
    6a18:	83 f8 01             	cmp    $0x1,%eax
    6a1b:	75 38                	jne    6a55 <ecall_type_enum_union+0x55>
    6a1d:	85 ed                	test   %ebp,%ebp
    6a1f:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    6a25:	75 09                	jne    6a30 <ecall_type_enum_union+0x30>
    6a27:	48 83 c4 08          	add    $0x8,%rsp
    6a2b:	5b                   	pop    %rbx
    6a2c:	5d                   	pop    %rbp
    6a2d:	c3                   	ret    
    6a2e:	66 90                	xchg   %ax,%ax
    6a30:	48 83 c4 08          	add    $0x8,%rsp
    6a34:	48 8d 0d 1f a9 01 00 	lea    0x1a91f(%rip),%rcx        # 2135a <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x7e>
    6a3b:	48 8d 15 9e a9 01 00 	lea    0x1a99e(%rip),%rdx        # 213e0 <_ZZ21ecall_type_enum_unionE8__func__>
    6a42:	5b                   	pop    %rbx
    6a43:	5d                   	pop    %rbp
    6a44:	48 8d 3d 25 a9 01 00 	lea    0x1a925(%rip),%rdi        # 21370 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x94>
    6a4b:	be 97 00 00 00       	mov    $0x97,%esi
    6a50:	e9 1b 41 00 00       	jmp    ab70 <__assert>
    6a55:	e8 3a 9d 01 00       	call   20794 <abort>
    6a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006a60 <ecall_pointer_user_check>:
    6a60:	55                   	push   %rbp
    6a61:	53                   	push   %rbx
    6a62:	48 89 fd             	mov    %rdi,%rbp
    6a65:	48 89 f3             	mov    %rsi,%rbx
    6a68:	48 83 ec 78          	sub    $0x78,%rsp
    6a6c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6a73:	00 00 
    6a75:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    6a7a:	31 c0                	xor    %eax,%eax
    6a7c:	e8 af 14 00 00       	call   7f30 <sgx_is_outside_enclave>
    6a81:	83 f8 01             	cmp    $0x1,%eax
    6a84:	0f 85 90 01 00 00    	jne    6c1a <ecall_pointer_user_check+0x1ba>
    6a8a:	31 c0                	xor    %eax,%eax
    6a8c:	48 89 e7             	mov    %rsp,%rdi
    6a8f:	b9 0c 00 00 00       	mov    $0xc,%ecx
    6a94:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6a97:	48 83 fb 64          	cmp    $0x64,%rbx
    6a9b:	b8 64 00 00 00       	mov    $0x64,%eax
    6aa0:	49 89 e0             	mov    %rsp,%r8
    6aa3:	48 0f 47 d8          	cmova  %rax,%rbx
    6aa7:	48 89 ee             	mov    %rbp,%rsi
    6aaa:	83 fb 08             	cmp    $0x8,%ebx
    6aad:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    6ab3:	48 89 e7             	mov    %rsp,%rdi
    6ab6:	72 08                	jb     6ac0 <ecall_pointer_user_check+0x60>
    6ab8:	89 d9                	mov    %ebx,%ecx
    6aba:	c1 e9 03             	shr    $0x3,%ecx
    6abd:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    6ac0:	31 c0                	xor    %eax,%eax
    6ac2:	f6 c3 04             	test   $0x4,%bl
    6ac5:	74 09                	je     6ad0 <ecall_pointer_user_check+0x70>
    6ac7:	8b 06                	mov    (%rsi),%eax
    6ac9:	89 07                	mov    %eax,(%rdi)
    6acb:	b8 04 00 00 00       	mov    $0x4,%eax
    6ad0:	f6 c3 02             	test   $0x2,%bl
    6ad3:	74 0c                	je     6ae1 <ecall_pointer_user_check+0x81>
    6ad5:	0f b7 14 06          	movzwl (%rsi,%rax,1),%edx
    6ad9:	66 89 14 07          	mov    %dx,(%rdi,%rax,1)
    6add:	48 83 c0 02          	add    $0x2,%rax
    6ae1:	f6 c3 01             	test   $0x1,%bl
    6ae4:	74 07                	je     6aed <ecall_pointer_user_check+0x8d>
    6ae6:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    6aea:	88 14 07             	mov    %dl,(%rdi,%rax,1)
    6aed:	48 83 fb 01          	cmp    $0x1,%rbx
    6af1:	0f 86 08 01 00 00    	jbe    6bff <ecall_pointer_user_check+0x19f>
    6af7:	48 89 da             	mov    %rbx,%rdx
    6afa:	31 c9                	xor    %ecx,%ecx
    6afc:	4c 89 c0             	mov    %r8,%rax
    6aff:	90                   	nop
    6b00:	48 83 c0 02          	add    $0x2,%rax
    6b04:	0f bf 78 fe          	movswl -0x2(%rax),%edi
    6b08:	48 83 ea 02          	sub    $0x2,%rdx
    6b0c:	01 f9                	add    %edi,%ecx
    6b0e:	48 83 fa 01          	cmp    $0x1,%rdx
    6b12:	77 ec                	ja     6b00 <ecall_pointer_user_check+0xa0>
    6b14:	48 8d 43 fe          	lea    -0x2(%rbx),%rax
    6b18:	48 d1 e8             	shr    %rax
    6b1b:	4d 8d 44 40 02       	lea    0x2(%r8,%rax,2),%r8
    6b20:	48 89 d8             	mov    %rbx,%rax
    6b23:	83 e0 01             	and    $0x1,%eax
    6b26:	48 85 c0             	test   %rax,%rax
    6b29:	74 06                	je     6b31 <ecall_pointer_user_check+0xd1>
    6b2b:	41 0f be 00          	movsbl (%r8),%eax
    6b2f:	01 c1                	add    %eax,%ecx
    6b31:	48 8d 3d c0 a9 01 00 	lea    0x1a9c0(%rip),%rdi        # 214f8 <_ZZ15ecall_type_charE8__func__+0x48>
    6b38:	31 c0                	xor    %eax,%eax
    6b3a:	48 89 da             	mov    %rbx,%rdx
    6b3d:	f7 d1                	not    %ecx
    6b3f:	48 89 ee             	mov    %rbp,%rsi
    6b42:	e8 49 e4 ff ff       	call   4f90 <printf>
    6b47:	48 83 fb 0c          	cmp    $0xc,%rbx
    6b4b:	b8 0c 00 00 00       	mov    $0xc,%eax
    6b50:	48 8d 15 bd a9 01 00 	lea    0x1a9bd(%rip),%rdx        # 21514 <_ZZ15ecall_type_charE8__func__+0x64>
    6b57:	48 0f 46 c3          	cmovbe %rbx,%rax
    6b5b:	83 f8 08             	cmp    $0x8,%eax
    6b5e:	73 40                	jae    6ba0 <ecall_pointer_user_check+0x140>
    6b60:	a8 04                	test   $0x4,%al
    6b62:	0f 85 7f 00 00 00    	jne    6be7 <ecall_pointer_user_check+0x187>
    6b68:	85 c0                	test   %eax,%eax
    6b6a:	74 12                	je     6b7e <ecall_pointer_user_check+0x11e>
    6b6c:	0f b6 0d a1 a9 01 00 	movzbl 0x1a9a1(%rip),%ecx        # 21514 <_ZZ15ecall_type_charE8__func__+0x64>
    6b73:	a8 02                	test   $0x2,%al
    6b75:	88 4d 00             	mov    %cl,0x0(%rbp)
    6b78:	0f 85 8b 00 00 00    	jne    6c09 <ecall_pointer_user_check+0x1a9>
    6b7e:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    6b83:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    6b8a:	00 00 
    6b8c:	48 89 d8             	mov    %rbx,%rax
    6b8f:	0f 85 8a 00 00 00    	jne    6c1f <ecall_pointer_user_check+0x1bf>
    6b95:	48 83 c4 78          	add    $0x78,%rsp
    6b99:	5b                   	pop    %rbx
    6b9a:	5d                   	pop    %rbp
    6b9b:	c3                   	ret    
    6b9c:	0f 1f 40 00          	nopl   0x0(%rax)
    6ba0:	48 8b 0d 6d a9 01 00 	mov    0x1a96d(%rip),%rcx        # 21514 <_ZZ15ecall_type_charE8__func__+0x64>
    6ba7:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    6bab:	89 c1                	mov    %eax,%ecx
    6bad:	48 8b 74 0a f8       	mov    -0x8(%rdx,%rcx,1),%rsi
    6bb2:	48 89 74 0d f8       	mov    %rsi,-0x8(%rbp,%rcx,1)
    6bb7:	48 8d 4d 08          	lea    0x8(%rbp),%rcx
    6bbb:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    6bbf:	48 29 cd             	sub    %rcx,%rbp
    6bc2:	48 29 ea             	sub    %rbp,%rdx
    6bc5:	01 c5                	add    %eax,%ebp
    6bc7:	83 e5 f8             	and    $0xfffffff8,%ebp
    6bca:	83 fd 08             	cmp    $0x8,%ebp
    6bcd:	72 af                	jb     6b7e <ecall_pointer_user_check+0x11e>
    6bcf:	83 e5 f8             	and    $0xfffffff8,%ebp
    6bd2:	31 c0                	xor    %eax,%eax
    6bd4:	89 c6                	mov    %eax,%esi
    6bd6:	83 c0 08             	add    $0x8,%eax
    6bd9:	48 8b 3c 32          	mov    (%rdx,%rsi,1),%rdi
    6bdd:	39 e8                	cmp    %ebp,%eax
    6bdf:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    6be3:	72 ef                	jb     6bd4 <ecall_pointer_user_check+0x174>
    6be5:	eb 97                	jmp    6b7e <ecall_pointer_user_check+0x11e>
    6be7:	89 c0                	mov    %eax,%eax
    6be9:	8b 0d 25 a9 01 00    	mov    0x1a925(%rip),%ecx        # 21514 <_ZZ15ecall_type_charE8__func__+0x64>
    6bef:	8b 54 02 fc          	mov    -0x4(%rdx,%rax,1),%edx
    6bf3:	89 4d 00             	mov    %ecx,0x0(%rbp)
    6bf6:	89 54 05 fc          	mov    %edx,-0x4(%rbp,%rax,1)
    6bfa:	e9 7f ff ff ff       	jmp    6b7e <ecall_pointer_user_check+0x11e>
    6bff:	48 89 d8             	mov    %rbx,%rax
    6c02:	31 c9                	xor    %ecx,%ecx
    6c04:	e9 1d ff ff ff       	jmp    6b26 <ecall_pointer_user_check+0xc6>
    6c09:	89 c0                	mov    %eax,%eax
    6c0b:	0f b7 54 02 fe       	movzwl -0x2(%rdx,%rax,1),%edx
    6c10:	66 89 54 05 fe       	mov    %dx,-0x2(%rbp,%rax,1)
    6c15:	e9 64 ff ff ff       	jmp    6b7e <ecall_pointer_user_check+0x11e>
    6c1a:	e8 75 9b 01 00       	call   20794 <abort>
    6c1f:	e8 2c 7f 00 00       	call   eb50 <__stack_chk_fail>
    6c24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c2b:	00 00 00 
    6c2e:	66 90                	xchg   %ax,%ax

0000000000006c30 <ecall_pointer_out>:
    6c30:	53                   	push   %rbx
    6c31:	be 04 00 00 00       	mov    $0x4,%esi
    6c36:	48 89 fb             	mov    %rdi,%rbx
    6c39:	e8 92 12 00 00       	call   7ed0 <sgx_is_within_enclave>
    6c3e:	83 f8 01             	cmp    $0x1,%eax
    6c41:	75 2d                	jne    6c70 <ecall_pointer_out+0x40>
    6c43:	8b 03                	mov    (%rbx),%eax
    6c45:	85 c0                	test   %eax,%eax
    6c47:	74 1f                	je     6c68 <ecall_pointer_out+0x38>
    6c49:	48 8d 0d d0 a8 01 00 	lea    0x1a8d0(%rip),%rcx        # 21520 <_ZZ15ecall_type_charE8__func__+0x70>
    6c50:	48 8d 15 29 a9 01 00 	lea    0x1a929(%rip),%rdx        # 21580 <_ZZ17ecall_pointer_outE8__func__>
    6c57:	48 8d 3d da a8 01 00 	lea    0x1a8da(%rip),%rdi        # 21538 <_ZZ15ecall_type_charE8__func__+0x88>
    6c5e:	be 6b 00 00 00       	mov    $0x6b,%esi
    6c63:	e8 08 3f 00 00       	call   ab70 <__assert>
    6c68:	c7 03 d2 04 00 00    	movl   $0x4d2,(%rbx)
    6c6e:	5b                   	pop    %rbx
    6c6f:	c3                   	ret    
    6c70:	e8 1f 9b 01 00       	call   20794 <abort>
    6c75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c7c:	00 00 00 
    6c7f:	90                   	nop

0000000000006c80 <ecall_pointer_in_out>:
    6c80:	53                   	push   %rbx
    6c81:	be 04 00 00 00       	mov    $0x4,%esi
    6c86:	48 89 fb             	mov    %rdi,%rbx
    6c89:	e8 42 12 00 00       	call   7ed0 <sgx_is_within_enclave>
    6c8e:	83 f8 01             	cmp    $0x1,%eax
    6c91:	75 08                	jne    6c9b <ecall_pointer_in_out+0x1b>
    6c93:	c7 03 d2 04 00 00    	movl   $0x4d2,(%rbx)
    6c99:	5b                   	pop    %rbx
    6c9a:	c3                   	ret    
    6c9b:	e8 f4 9a 01 00       	call   20794 <abort>

0000000000006ca0 <ecall_pointer_in>:
    6ca0:	e9 db ff ff ff       	jmp    6c80 <ecall_pointer_in_out>
    6ca5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6cac:	00 00 00 
    6caf:	90                   	nop

0000000000006cb0 <ocall_pointer_attr>:
    6cb0:	53                   	push   %rbx
    6cb1:	48 83 ec 10          	sub    $0x10,%rsp
    6cb5:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    6cba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6cc1:	00 
    6cc2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6cc9:	00 00 
    6ccb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6cd0:	31 c0                	xor    %eax,%eax
    6cd2:	48 89 df             	mov    %rbx,%rdi
    6cd5:	e8 46 d0 ff ff       	call   3d20 <ocall_pointer_user_check>
    6cda:	85 c0                	test   %eax,%eax
    6cdc:	0f 85 e2 00 00 00    	jne    6dc4 <ocall_pointer_attr+0x114>
    6ce2:	48 89 df             	mov    %rbx,%rdi
    6ce5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6cec:	00 
    6ced:	e8 9e d0 ff ff       	call   3d90 <ocall_pointer_in>
    6cf2:	85 c0                	test   %eax,%eax
    6cf4:	0f 85 ca 00 00 00    	jne    6dc4 <ocall_pointer_attr+0x114>
    6cfa:	8b 44 24 04          	mov    0x4(%rsp),%eax
    6cfe:	85 c0                	test   %eax,%eax
    6d00:	0f 85 9a 00 00 00    	jne    6da0 <ocall_pointer_attr+0xf0>
    6d06:	48 89 df             	mov    %rbx,%rdi
    6d09:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6d10:	00 
    6d11:	e8 9a d1 ff ff       	call   3eb0 <ocall_pointer_out>
    6d16:	85 c0                	test   %eax,%eax
    6d18:	0f 85 a6 00 00 00    	jne    6dc4 <ocall_pointer_attr+0x114>
    6d1e:	81 7c 24 04 d2 04 00 	cmpl   $0x4d2,0x4(%rsp)
    6d25:	00 
    6d26:	74 1f                	je     6d47 <ocall_pointer_attr+0x97>
    6d28:	48 8d 0d be a5 01 00 	lea    0x1a5be(%rip),%rcx        # 212ed <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    6d2f:	48 8d 15 2a a8 01 00 	lea    0x1a82a(%rip),%rdx        # 21560 <_ZZ18ocall_pointer_attrE8__func__>
    6d36:	48 8d 3d fb a7 01 00 	lea    0x1a7fb(%rip),%rdi        # 21538 <_ZZ15ecall_type_charE8__func__+0x88>
    6d3d:	be 8f 00 00 00       	mov    $0x8f,%esi
    6d42:	e8 29 3e 00 00       	call   ab70 <__assert>
    6d47:	48 89 df             	mov    %rbx,%rdi
    6d4a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6d51:	00 
    6d52:	e8 a9 d2 ff ff       	call   4000 <ocall_pointer_in_out>
    6d57:	85 c0                	test   %eax,%eax
    6d59:	75 69                	jne    6dc4 <ocall_pointer_attr+0x114>
    6d5b:	81 7c 24 04 d2 04 00 	cmpl   $0x4d2,0x4(%rsp)
    6d62:	00 
    6d63:	74 1f                	je     6d84 <ocall_pointer_attr+0xd4>
    6d65:	48 8d 0d 81 a5 01 00 	lea    0x1a581(%rip),%rcx        # 212ed <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    6d6c:	48 8d 15 ed a7 01 00 	lea    0x1a7ed(%rip),%rdx        # 21560 <_ZZ18ocall_pointer_attrE8__func__>
    6d73:	48 8d 3d be a7 01 00 	lea    0x1a7be(%rip),%rdi        # 21538 <_ZZ15ecall_type_charE8__func__+0x88>
    6d7a:	be 95 00 00 00       	mov    $0x95,%esi
    6d7f:	e8 ec 3d 00 00       	call   ab70 <__assert>
    6d84:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6d89:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6d90:	00 00 
    6d92:	75 35                	jne    6dc9 <ocall_pointer_attr+0x119>
    6d94:	48 83 c4 10          	add    $0x10,%rsp
    6d98:	5b                   	pop    %rbx
    6d99:	c3                   	ret    
    6d9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6da0:	48 8d 0d 7a a7 01 00 	lea    0x1a77a(%rip),%rcx        # 21521 <_ZZ15ecall_type_charE8__func__+0x71>
    6da7:	48 8d 15 b2 a7 01 00 	lea    0x1a7b2(%rip),%rdx        # 21560 <_ZZ18ocall_pointer_attrE8__func__>
    6dae:	48 8d 3d 83 a7 01 00 	lea    0x1a783(%rip),%rdi        # 21538 <_ZZ15ecall_type_charE8__func__+0x88>
    6db5:	be 89 00 00 00       	mov    $0x89,%esi
    6dba:	e8 b1 3d 00 00       	call   ab70 <__assert>
    6dbf:	e9 42 ff ff ff       	jmp    6d06 <ocall_pointer_attr+0x56>
    6dc4:	e8 cb 99 01 00       	call   20794 <abort>
    6dc9:	e8 82 7d 00 00       	call   eb50 <__stack_chk_fail>
    6dce:	66 90                	xchg   %ax,%ax

0000000000006dd0 <ecall_pointer_string>:
    6dd0:	53                   	push   %rbx
    6dd1:	48 89 fb             	mov    %rdi,%rbx
    6dd4:	e8 37 7c 00 00       	call   ea10 <strlen>
    6dd9:	48 89 df             	mov    %rbx,%rdi
    6ddc:	48 8d 35 47 a7 01 00 	lea    0x1a747(%rip),%rsi        # 2152a <_ZZ15ecall_type_charE8__func__+0x7a>
    6de3:	48 89 c2             	mov    %rax,%rdx
    6de6:	5b                   	pop    %rbx
    6de7:	e9 34 7c 00 00       	jmp    ea20 <strncpy>
    6dec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006df0 <ecall_pointer_string_const>:
    6df0:	55                   	push   %rbp
    6df1:	53                   	push   %rbx
    6df2:	48 89 fb             	mov    %rdi,%rbx
    6df5:	48 83 ec 08          	sub    $0x8,%rsp
    6df9:	e8 12 7c 00 00       	call   ea10 <strlen>
    6dfe:	48 89 c7             	mov    %rax,%rdi
    6e01:	e8 2a 54 01 00       	call   1c230 <_Znam>
    6e06:	48 89 df             	mov    %rbx,%rdi
    6e09:	48 89 c5             	mov    %rax,%rbp
    6e0c:	e8 ff 7b 00 00       	call   ea10 <strlen>
    6e11:	48 89 ef             	mov    %rbp,%rdi
    6e14:	48 89 de             	mov    %rbx,%rsi
    6e17:	48 89 c2             	mov    %rax,%rdx
    6e1a:	e8 01 7c 00 00       	call   ea20 <strncpy>
    6e1f:	48 83 c4 08          	add    $0x8,%rsp
    6e23:	48 89 ef             	mov    %rbp,%rdi
    6e26:	5b                   	pop    %rbx
    6e27:	5d                   	pop    %rbp
    6e28:	e9 93 53 01 00       	jmp    1c1c0 <_ZdaPv>
    6e2d:	0f 1f 00             	nopl   (%rax)

0000000000006e30 <ecall_pointer_count>:
    6e30:	89 f0                	mov    %esi,%eax
    6e32:	83 e8 01             	sub    $0x1,%eax
    6e35:	78 16                	js     6e4d <ecall_pointer_count+0x1d>
    6e37:	48 98                	cltq   
    6e39:	48 8d 14 87          	lea    (%rdi,%rax,4),%rdx
    6e3d:	31 c0                	xor    %eax,%eax
    6e3f:	90                   	nop
    6e40:	89 02                	mov    %eax,(%rdx)
    6e42:	83 c0 01             	add    $0x1,%eax
    6e45:	48 83 ea 04          	sub    $0x4,%rdx
    6e49:	39 f0                	cmp    %esi,%eax
    6e4b:	75 f3                	jne    6e40 <ecall_pointer_count+0x10>
    6e4d:	f3 c3                	repz ret 
    6e4f:	90                   	nop

0000000000006e50 <ecall_pointer_isptr_readonly>:
    6e50:	48 89 f2             	mov    %rsi,%rdx
    6e53:	48 8d 35 d0 a6 01 00 	lea    0x1a6d0(%rip),%rsi        # 2152a <_ZZ15ecall_type_charE8__func__+0x7a>
    6e5a:	e9 c1 7b 00 00       	jmp    ea20 <strncpy>
    6e5f:	90                   	nop

0000000000006e60 <ecall_pointer_size>:
    6e60:	e9 eb ff ff ff       	jmp    6e50 <ecall_pointer_isptr_readonly>
    6e65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6e6c:	00 00 00 
    6e6f:	90                   	nop

0000000000006e70 <ecall_array_user_check>:
    6e70:	41 54                	push   %r12
    6e72:	55                   	push   %rbp
    6e73:	be 10 00 00 00       	mov    $0x10,%esi
    6e78:	53                   	push   %rbx
    6e79:	48 89 fd             	mov    %rdi,%rbp
    6e7c:	e8 af 10 00 00       	call   7f30 <sgx_is_outside_enclave>
    6e81:	83 f8 01             	cmp    $0x1,%eax
    6e84:	75 45                	jne    6ecb <ecall_array_user_check+0x5b>
    6e86:	31 db                	xor    %ebx,%ebx
    6e88:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    6e8e:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    6e91:	74 1f                	je     6eb2 <ecall_array_user_check+0x42>
    6e93:	48 8d 0d f8 a6 01 00 	lea    0x1a6f8(%rip),%rcx        # 21592 <_ZZ17ecall_pointer_outE8__func__+0x12>
    6e9a:	48 8d 15 9f a7 01 00 	lea    0x1a79f(%rip),%rdx        # 21640 <_ZZ22ecall_array_user_checkE8__func__>
    6ea1:	48 8d 3d 08 a7 01 00 	lea    0x1a708(%rip),%rdi        # 215b0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    6ea8:	be 2f 00 00 00       	mov    $0x2f,%esi
    6ead:	e8 be 3c 00 00       	call   ab70 <__assert>
    6eb2:	44 89 e0             	mov    %r12d,%eax
    6eb5:	48 83 c5 04          	add    $0x4,%rbp
    6eb9:	29 d8                	sub    %ebx,%eax
    6ebb:	83 c3 01             	add    $0x1,%ebx
    6ebe:	89 45 fc             	mov    %eax,-0x4(%rbp)
    6ec1:	83 fb 04             	cmp    $0x4,%ebx
    6ec4:	75 c8                	jne    6e8e <ecall_array_user_check+0x1e>
    6ec6:	5b                   	pop    %rbx
    6ec7:	5d                   	pop    %rbp
    6ec8:	41 5c                	pop    %r12
    6eca:	c3                   	ret    
    6ecb:	e8 c4 98 01 00       	call   20794 <abort>

0000000000006ed0 <ecall_array_in>:
    6ed0:	41 54                	push   %r12
    6ed2:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    6ed8:	55                   	push   %rbp
    6ed9:	48 89 fd             	mov    %rdi,%rbp
    6edc:	53                   	push   %rbx
    6edd:	31 db                	xor    %ebx,%ebx
    6edf:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    6ee2:	74 1f                	je     6f03 <ecall_array_in+0x33>
    6ee4:	48 8d 0d a7 a6 01 00 	lea    0x1a6a7(%rip),%rcx        # 21592 <_ZZ17ecall_pointer_outE8__func__+0x12>
    6eeb:	48 8d 15 3e a7 01 00 	lea    0x1a73e(%rip),%rdx        # 21630 <_ZZ14ecall_array_inE8__func__>
    6ef2:	48 8d 3d b7 a6 01 00 	lea    0x1a6b7(%rip),%rdi        # 215b0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    6ef9:	be 3b 00 00 00       	mov    $0x3b,%esi
    6efe:	e8 6d 3c 00 00       	call   ab70 <__assert>
    6f03:	44 89 e0             	mov    %r12d,%eax
    6f06:	48 83 c5 04          	add    $0x4,%rbp
    6f0a:	29 d8                	sub    %ebx,%eax
    6f0c:	83 c3 01             	add    $0x1,%ebx
    6f0f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    6f12:	83 fb 04             	cmp    $0x4,%ebx
    6f15:	75 c8                	jne    6edf <ecall_array_in+0xf>
    6f17:	5b                   	pop    %rbx
    6f18:	5d                   	pop    %rbp
    6f19:	41 5c                	pop    %r12
    6f1b:	c3                   	ret    
    6f1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006f20 <ecall_array_out>:
    6f20:	55                   	push   %rbp
    6f21:	53                   	push   %rbx
    6f22:	48 89 fd             	mov    %rdi,%rbp
    6f25:	bb 03 00 00 00       	mov    $0x3,%ebx
    6f2a:	48 83 ec 08          	sub    $0x8,%rsp
    6f2e:	8b 45 00             	mov    0x0(%rbp),%eax
    6f31:	85 c0                	test   %eax,%eax
    6f33:	75 1b                	jne    6f50 <ecall_array_out+0x30>
    6f35:	89 5d 00             	mov    %ebx,0x0(%rbp)
    6f38:	83 eb 01             	sub    $0x1,%ebx
    6f3b:	48 83 c5 04          	add    $0x4,%rbp
    6f3f:	83 fb ff             	cmp    $0xffffffff,%ebx
    6f42:	75 ea                	jne    6f2e <ecall_array_out+0xe>
    6f44:	48 83 c4 08          	add    $0x8,%rsp
    6f48:	5b                   	pop    %rbx
    6f49:	5d                   	pop    %rbp
    6f4a:	c3                   	ret    
    6f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f50:	48 8d 0d 47 a6 01 00 	lea    0x1a647(%rip),%rcx        # 2159e <_ZZ17ecall_pointer_outE8__func__+0x1e>
    6f57:	48 8d 15 c2 a6 01 00 	lea    0x1a6c2(%rip),%rdx        # 21620 <_ZZ15ecall_array_outE8__func__>
    6f5e:	48 8d 3d 4b a6 01 00 	lea    0x1a64b(%rip),%rdi        # 215b0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    6f65:	be 48 00 00 00       	mov    $0x48,%esi
    6f6a:	e8 01 3c 00 00       	call   ab70 <__assert>
    6f6f:	eb c4                	jmp    6f35 <ecall_array_out+0x15>
    6f71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6f78:	00 00 00 
    6f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006f80 <ecall_array_in_out>:
    6f80:	41 54                	push   %r12
    6f82:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    6f88:	55                   	push   %rbp
    6f89:	48 89 fd             	mov    %rdi,%rbp
    6f8c:	53                   	push   %rbx
    6f8d:	31 db                	xor    %ebx,%ebx
    6f8f:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    6f92:	74 1f                	je     6fb3 <ecall_array_in_out+0x33>
    6f94:	48 8d 0d f7 a5 01 00 	lea    0x1a5f7(%rip),%rcx        # 21592 <_ZZ17ecall_pointer_outE8__func__+0x12>
    6f9b:	48 8d 15 5e a6 01 00 	lea    0x1a65e(%rip),%rdx        # 21600 <_ZZ18ecall_array_in_outE8__func__>
    6fa2:	48 8d 3d 07 a6 01 00 	lea    0x1a607(%rip),%rdi        # 215b0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    6fa9:	be 54 00 00 00       	mov    $0x54,%esi
    6fae:	e8 bd 3b 00 00       	call   ab70 <__assert>
    6fb3:	44 89 e0             	mov    %r12d,%eax
    6fb6:	48 83 c5 04          	add    $0x4,%rbp
    6fba:	29 d8                	sub    %ebx,%eax
    6fbc:	83 c3 01             	add    $0x1,%ebx
    6fbf:	89 45 fc             	mov    %eax,-0x4(%rbp)
    6fc2:	83 fb 04             	cmp    $0x4,%ebx
    6fc5:	75 c8                	jne    6f8f <ecall_array_in_out+0xf>
    6fc7:	5b                   	pop    %rbx
    6fc8:	5d                   	pop    %rbp
    6fc9:	41 5c                	pop    %r12
    6fcb:	c3                   	ret    
    6fcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006fd0 <ecall_array_isary>:
    6fd0:	41 54                	push   %r12
    6fd2:	55                   	push   %rbp
    6fd3:	be 28 00 00 00       	mov    $0x28,%esi
    6fd8:	53                   	push   %rbx
    6fd9:	48 89 fd             	mov    %rdi,%rbp
    6fdc:	e8 4f 0f 00 00       	call   7f30 <sgx_is_outside_enclave>
    6fe1:	83 f8 01             	cmp    $0x1,%eax
    6fe4:	75 47                	jne    702d <ecall_array_isary+0x5d>
    6fe6:	31 db                	xor    %ebx,%ebx
    6fe8:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    6fee:	66 90                	xchg   %ax,%ax
    6ff0:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    6ff3:	74 1f                	je     7014 <ecall_array_isary+0x44>
    6ff5:	48 8d 0d 96 a5 01 00 	lea    0x1a596(%rip),%rcx        # 21592 <_ZZ17ecall_pointer_outE8__func__+0x12>
    6ffc:	48 8d 15 dd a5 01 00 	lea    0x1a5dd(%rip),%rdx        # 215e0 <_ZZ17ecall_array_isaryE8__func__>
    7003:	48 8d 3d a6 a5 01 00 	lea    0x1a5a6(%rip),%rdi        # 215b0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    700a:	be 63 00 00 00       	mov    $0x63,%esi
    700f:	e8 5c 3b 00 00       	call   ab70 <__assert>
    7014:	44 89 e0             	mov    %r12d,%eax
    7017:	48 83 c5 04          	add    $0x4,%rbp
    701b:	29 d8                	sub    %ebx,%eax
    701d:	83 c3 01             	add    $0x1,%ebx
    7020:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7023:	83 fb 0a             	cmp    $0xa,%ebx
    7026:	75 c8                	jne    6ff0 <ecall_array_isary+0x20>
    7028:	5b                   	pop    %rbx
    7029:	5d                   	pop    %rbp
    702a:	41 5c                	pop    %r12
    702c:	c3                   	ret    
    702d:	e8 62 97 01 00       	call   20794 <abort>
    7032:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7039:	00 00 00 
    703c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007040 <ecall_function_calling_convs>:
    7040:	55                   	push   %rbp
    7041:	53                   	push   %rbx
    7042:	b9 00 04 00 00       	mov    $0x400,%ecx
    7047:	ba 32 31 00 00       	mov    $0x3132,%edx
    704c:	be 39 30 00 00       	mov    $0x3039,%esi
    7051:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
    7057:	48 81 ec 38 20 00 00 	sub    $0x2038,%rsp
    705e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7065:	00 00 
    7067:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    706e:	00 
    706f:	31 c0                	xor    %eax,%eax
    7071:	48 b8 31 32 33 34 35 	movabs $0x3837363534333231,%rax
    7078:	36 37 38 
    707b:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    7080:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    7085:	48 89 04 24          	mov    %rax,(%rsp)
    7089:	b8 39 30 00 00       	mov    $0x3039,%eax
    708e:	66 89 54 24 18       	mov    %dx,0x18(%rsp)
    7093:	66 89 44 24 08       	mov    %ax,0x8(%rsp)
    7098:	48 b8 30 39 38 37 36 	movabs $0x3334353637383930,%rax
    709f:	35 34 33 
    70a2:	48 89 ea             	mov    %rbp,%rdx
    70a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    70aa:	31 c0                	xor    %eax,%eax
    70ac:	c6 44 24 0a 00       	movb   $0x0,0xa(%rsp)
    70b1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    70b4:	48 b8 31 32 33 34 35 	movabs $0x3837363534333231,%rax
    70bb:	36 37 38 
    70be:	66 89 74 24 28       	mov    %si,0x28(%rsp)
    70c3:	31 ff                	xor    %edi,%edi
    70c5:	48 89 e6             	mov    %rsp,%rsi
    70c8:	c6 44 24 1a 00       	movb   $0x0,0x1a(%rsp)
    70cd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    70d2:	e8 79 d0 ff ff       	call   4150 <memccpy>
    70d7:	85 c0                	test   %eax,%eax
    70d9:	0f 85 8e 00 00 00    	jne    716d <ecall_function_calling_convs+0x12d>
    70df:	48 89 e3             	mov    %rsp,%rbx
    70e2:	48 89 e2             	mov    %rsp,%rdx
    70e5:	8b 0a                	mov    (%rdx),%ecx
    70e7:	48 83 c2 04          	add    $0x4,%rdx
    70eb:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    70f1:	f7 d1                	not    %ecx
    70f3:	21 c8                	and    %ecx,%eax
    70f5:	25 80 80 80 80       	and    $0x80808080,%eax
    70fa:	74 e9                	je     70e5 <ecall_function_calling_convs+0xa5>
    70fc:	89 c1                	mov    %eax,%ecx
    70fe:	48 89 df             	mov    %rbx,%rdi
    7101:	c1 e9 10             	shr    $0x10,%ecx
    7104:	a9 80 80 00 00       	test   $0x8080,%eax
    7109:	0f 44 c1             	cmove  %ecx,%eax
    710c:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    7110:	89 c6                	mov    %eax,%esi
    7112:	48 0f 44 d1          	cmove  %rcx,%rdx
    7116:	40 00 c6             	add    %al,%sil
    7119:	48 89 ee             	mov    %rbp,%rsi
    711c:	48 83 da 03          	sbb    $0x3,%rdx
    7120:	48 29 da             	sub    %rbx,%rdx
    7123:	e8 b8 73 00 00       	call   e4e0 <memcmp>
    7128:	85 c0                	test   %eax,%eax
    712a:	74 1f                	je     714b <ecall_function_calling_convs+0x10b>
    712c:	48 8d 0d 25 a5 01 00 	lea    0x1a525(%rip),%rcx        # 21658 <_ZZ22ecall_array_user_checkE8__func__+0x18>
    7133:	48 8d 15 66 a5 01 00 	lea    0x1a566(%rip),%rdx        # 216a0 <_ZZ28ecall_function_calling_convsE8__func__>
    713a:	48 8d 3d 37 a5 01 00 	lea    0x1a537(%rip),%rdi        # 21678 <_ZZ22ecall_array_user_checkE8__func__+0x38>
    7141:	be 3a 00 00 00       	mov    $0x3a,%esi
    7146:	e8 25 3a 00 00       	call   ab70 <__assert>
    714b:	48 8b 84 24 28 20 00 	mov    0x2028(%rsp),%rax
    7152:	00 
    7153:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    715a:	00 00 
    715c:	75 0a                	jne    7168 <ecall_function_calling_convs+0x128>
    715e:	48 81 c4 38 20 00 00 	add    $0x2038,%rsp
    7165:	5b                   	pop    %rbx
    7166:	5d                   	pop    %rbp
    7167:	c3                   	ret    
    7168:	e8 e3 79 00 00       	call   eb50 <__stack_chk_fail>
    716d:	e8 22 96 01 00       	call   20794 <abort>
    7172:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7179:	00 00 00 
    717c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007180 <ecall_function_public>:
    7180:	48 83 ec 08          	sub    $0x8,%rsp
    7184:	e8 67 d2 ff ff       	call   43f0 <ocall_function_allow>
    7189:	85 c0                	test   %eax,%eax
    718b:	75 05                	jne    7192 <ecall_function_public+0x12>
    718d:	48 83 c4 08          	add    $0x8,%rsp
    7191:	c3                   	ret    
    7192:	e8 fd 95 01 00       	call   20794 <abort>
    7197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    719e:	00 00 

00000000000071a0 <ecall_function_private>:
    71a0:	b8 01 00 00 00       	mov    $0x1,%eax
    71a5:	c3                   	ret    
    71a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    71ad:	00 00 00 

00000000000071b0 <ecall_increase_counter>:
    71b0:	55                   	push   %rbp
    71b1:	53                   	push   %rbx
    71b2:	31 ed                	xor    %ebp,%ebp
    71b4:	bb f4 01 00 00       	mov    $0x1f4,%ebx
    71b9:	48 83 ec 08          	sub    $0x8,%rsp
    71bd:	0f 1f 00             	nopl   (%rax)
    71c0:	48 8d 3d b9 2f 02 00 	lea    0x22fb9(%rip),%rdi        # 2a180 <_ZL12global_mutex>
    71c7:	e8 e4 7b 00 00       	call   edb0 <sgx_thread_mutex_lock>
    71cc:	48 8b 05 35 31 02 00 	mov    0x23135(%rip),%rax        # 2a308 <_ZL14global_counter>
    71d3:	48 8d 3d a6 2f 02 00 	lea    0x22fa6(%rip),%rdi        # 2a180 <_ZL12global_mutex>
    71da:	48 83 c0 01          	add    $0x1,%rax
    71de:	48 3d d0 07 00 00    	cmp    $0x7d0,%rax
    71e4:	48 89 05 1d 31 02 00 	mov    %rax,0x2311d(%rip)        # 2a308 <_ZL14global_counter>
    71eb:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    71f0:	48 0f 44 e8          	cmove  %rax,%rbp
    71f4:	e8 17 7e 00 00       	call   f010 <sgx_thread_mutex_unlock>
    71f9:	83 eb 01             	sub    $0x1,%ebx
    71fc:	75 c2                	jne    71c0 <ecall_increase_counter+0x10>
    71fe:	48 83 c4 08          	add    $0x8,%rsp
    7202:	48 89 e8             	mov    %rbp,%rax
    7205:	5b                   	pop    %rbx
    7206:	5d                   	pop    %rbp
    7207:	c3                   	ret    
    7208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    720f:	00 

0000000000007210 <ecall_producer>:
    7210:	55                   	push   %rbp
    7211:	53                   	push   %rbx
    7212:	48 8d 2d 27 2e 02 00 	lea    0x22e27(%rip),%rbp        # 2a040 <_ZL6buffer>
    7219:	bb d0 07 00 00       	mov    $0x7d0,%ebx
    721e:	48 83 ec 08          	sub    $0x8,%rsp
    7222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7228:	48 8d 3d e9 2e 02 00 	lea    0x22ee9(%rip),%rdi        # 2a118 <_ZL6buffer+0xd8>
    722f:	e8 7c 7b 00 00       	call   edb0 <sgx_thread_mutex_lock>
    7234:	8b 0d ce 2e 02 00    	mov    0x22ece(%rip),%ecx        # 2a108 <_ZL6buffer+0xc8>
    723a:	83 f9 31             	cmp    $0x31,%ecx
    723d:	7e 1f                	jle    725e <ecall_producer+0x4e>
    723f:	90                   	nop
    7240:	48 8d 35 d1 2e 02 00 	lea    0x22ed1(%rip),%rsi        # 2a118 <_ZL6buffer+0xd8>
    7247:	48 8d 3d 0a 2f 02 00 	lea    0x22f0a(%rip),%rdi        # 2a158 <_ZL6buffer+0x118>
    724e:	e8 0d 79 00 00       	call   eb60 <sgx_thread_cond_wait>
    7253:	8b 0d af 2e 02 00    	mov    0x22eaf(%rip),%ecx        # 2a108 <_ZL6buffer+0xc8>
    7259:	83 f9 31             	cmp    $0x31,%ecx
    725c:	7f e2                	jg     7240 <ecall_producer+0x30>
    725e:	48 63 05 a7 2e 02 00 	movslq 0x22ea7(%rip),%rax        # 2a10c <_ZL6buffer+0xcc>
    7265:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    726a:	48 8d 3d cf 2e 02 00 	lea    0x22ecf(%rip),%rdi        # 2a140 <_ZL6buffer+0x100>
    7271:	83 c1 01             	add    $0x1,%ecx
    7274:	89 0d 8e 2e 02 00    	mov    %ecx,0x22e8e(%rip)        # 2a108 <_ZL6buffer+0xc8>
    727a:	48 89 c6             	mov    %rax,%rsi
    727d:	89 44 85 00          	mov    %eax,0x0(%rbp,%rax,4)
    7281:	83 c6 01             	add    $0x1,%esi
    7284:	89 f0                	mov    %esi,%eax
    7286:	f7 ea                	imul   %edx
    7288:	89 f0                	mov    %esi,%eax
    728a:	c1 f8 1f             	sar    $0x1f,%eax
    728d:	c1 fa 04             	sar    $0x4,%edx
    7290:	29 c2                	sub    %eax,%edx
    7292:	6b d2 32             	imul   $0x32,%edx,%edx
    7295:	29 d6                	sub    %edx,%esi
    7297:	89 35 6f 2e 02 00    	mov    %esi,0x22e6f(%rip)        # 2a10c <_ZL6buffer+0xcc>
    729d:	e8 4e 7a 00 00       	call   ecf0 <sgx_thread_cond_signal>
    72a2:	48 8d 3d 6f 2e 02 00 	lea    0x22e6f(%rip),%rdi        # 2a118 <_ZL6buffer+0xd8>
    72a9:	e8 62 7d 00 00       	call   f010 <sgx_thread_mutex_unlock>
    72ae:	83 eb 01             	sub    $0x1,%ebx
    72b1:	0f 85 71 ff ff ff    	jne    7228 <ecall_producer+0x18>
    72b7:	48 83 c4 08          	add    $0x8,%rsp
    72bb:	5b                   	pop    %rbx
    72bc:	5d                   	pop    %rbp
    72bd:	c3                   	ret    
    72be:	66 90                	xchg   %ax,%ax

00000000000072c0 <ecall_consumer>:
    72c0:	55                   	push   %rbp
    72c1:	53                   	push   %rbx
    72c2:	48 8d 2d 77 2d 02 00 	lea    0x22d77(%rip),%rbp        # 2a040 <_ZL6buffer>
    72c9:	bb f4 01 00 00       	mov    $0x1f4,%ebx
    72ce:	48 83 ec 08          	sub    $0x8,%rsp
    72d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    72d8:	48 8d 3d 39 2e 02 00 	lea    0x22e39(%rip),%rdi        # 2a118 <_ZL6buffer+0xd8>
    72df:	e8 cc 7a 00 00       	call   edb0 <sgx_thread_mutex_lock>
    72e4:	8b 0d 1e 2e 02 00    	mov    0x22e1e(%rip),%ecx        # 2a108 <_ZL6buffer+0xc8>
    72ea:	85 c9                	test   %ecx,%ecx
    72ec:	7f 1f                	jg     730d <ecall_consumer+0x4d>
    72ee:	66 90                	xchg   %ax,%ax
    72f0:	48 8d 35 21 2e 02 00 	lea    0x22e21(%rip),%rsi        # 2a118 <_ZL6buffer+0xd8>
    72f7:	48 8d 3d 42 2e 02 00 	lea    0x22e42(%rip),%rdi        # 2a140 <_ZL6buffer+0x100>
    72fe:	e8 5d 78 00 00       	call   eb60 <sgx_thread_cond_wait>
    7303:	8b 0d ff 2d 02 00    	mov    0x22dff(%rip),%ecx        # 2a108 <_ZL6buffer+0xc8>
    7309:	85 c9                	test   %ecx,%ecx
    730b:	7e e3                	jle    72f0 <ecall_consumer+0x30>
    730d:	48 63 05 fc 2d 02 00 	movslq 0x22dfc(%rip),%rax        # 2a110 <_ZL6buffer+0xd0>
    7314:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    7319:	48 8d 3d 38 2e 02 00 	lea    0x22e38(%rip),%rdi        # 2a158 <_ZL6buffer+0x118>
    7320:	83 e9 01             	sub    $0x1,%ecx
    7323:	89 0d df 2d 02 00    	mov    %ecx,0x22ddf(%rip)        # 2a108 <_ZL6buffer+0xc8>
    7329:	48 89 c6             	mov    %rax,%rsi
    732c:	c7 44 85 00 00 00 00 	movl   $0x0,0x0(%rbp,%rax,4)
    7333:	00 
    7334:	83 c6 01             	add    $0x1,%esi
    7337:	89 f0                	mov    %esi,%eax
    7339:	f7 ea                	imul   %edx
    733b:	89 f0                	mov    %esi,%eax
    733d:	c1 f8 1f             	sar    $0x1f,%eax
    7340:	c1 fa 04             	sar    $0x4,%edx
    7343:	29 c2                	sub    %eax,%edx
    7345:	6b d2 32             	imul   $0x32,%edx,%edx
    7348:	29 d6                	sub    %edx,%esi
    734a:	89 35 c0 2d 02 00    	mov    %esi,0x22dc0(%rip)        # 2a110 <_ZL6buffer+0xd0>
    7350:	e8 9b 79 00 00       	call   ecf0 <sgx_thread_cond_signal>
    7355:	48 8d 3d bc 2d 02 00 	lea    0x22dbc(%rip),%rdi        # 2a118 <_ZL6buffer+0xd8>
    735c:	e8 af 7c 00 00       	call   f010 <sgx_thread_mutex_unlock>
    7361:	83 eb 01             	sub    $0x1,%ebx
    7364:	0f 85 6e ff ff ff    	jne    72d8 <ecall_consumer+0x18>
    736a:	48 83 c4 08          	add    $0x8,%rsp
    736e:	5b                   	pop    %rbx
    736f:	5d                   	pop    %rbp
    7370:	c3                   	ret    
    7371:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7378:	00 00 00 
    737b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007380 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>:
    7380:	48 85 f6             	test   %rsi,%rsi
    7383:	74 33                	je     73b8 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x38>
    7385:	55                   	push   %rbp
    7386:	53                   	push   %rbx
    7387:	48 89 f3             	mov    %rsi,%rbx
    738a:	48 89 fd             	mov    %rdi,%rbp
    738d:	48 83 ec 08          	sub    $0x8,%rsp
    7391:	48 8b 36             	mov    (%rsi),%rsi
    7394:	e8 e7 ff ff ff       	call   7380 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    7399:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    739d:	48 89 ef             	mov    %rbp,%rdi
    73a0:	e8 db ff ff ff       	call   7380 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    73a5:	48 83 c4 08          	add    $0x8,%rsp
    73a9:	48 89 df             	mov    %rbx,%rdi
    73ac:	5b                   	pop    %rbx
    73ad:	5d                   	pop    %rbp
    73ae:	e9 fd 4d 01 00       	jmp    1c1b0 <_ZdlPv>
    73b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    73b8:	f3 c3                	repz ret 
    73ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000073c0 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>:
    73c0:	48 39 fe             	cmp    %rdi,%rsi
    73c3:	0f 94 46 18          	sete   0x18(%rsi)
    73c7:	74 47                	je     7410 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    73c9:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    73cd:	80 7a 18 00          	cmpb   $0x0,0x18(%rdx)
    73d1:	75 3d                	jne    7410 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    73d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    73d8:	48 8b 42 10          	mov    0x10(%rdx),%rax
    73dc:	48 8b 08             	mov    (%rax),%rcx
    73df:	48 39 d1             	cmp    %rdx,%rcx
    73e2:	74 34                	je     7418 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x58>
    73e4:	48 85 c9             	test   %rcx,%rcx
    73e7:	74 5f                	je     7448 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x88>
    73e9:	80 79 18 00          	cmpb   $0x0,0x18(%rcx)
    73ed:	75 59                	jne    7448 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x88>
    73ef:	48 39 c7             	cmp    %rax,%rdi
    73f2:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    73f6:	0f 94 40 18          	sete   0x18(%rax)
    73fa:	c6 41 18 01          	movb   $0x1,0x18(%rcx)
    73fe:	48 39 c7             	cmp    %rax,%rdi
    7401:	74 0d                	je     7410 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    7403:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7407:	48 89 c6             	mov    %rax,%rsi
    740a:	80 7a 18 00          	cmpb   $0x0,0x18(%rdx)
    740e:	74 c8                	je     73d8 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x18>
    7410:	f3 c3                	repz ret 
    7412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7418:	4c 8b 40 08          	mov    0x8(%rax),%r8
    741c:	4d 85 c0             	test   %r8,%r8
    741f:	0f 84 a6 00 00 00    	je     74cb <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x10b>
    7425:	41 80 78 18 00       	cmpb   $0x0,0x18(%r8)
    742a:	0f 85 9b 00 00 00    	jne    74cb <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x10b>
    7430:	48 39 c7             	cmp    %rax,%rdi
    7433:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    7437:	0f 94 40 18          	sete   0x18(%rax)
    743b:	41 c6 40 18 01       	movb   $0x1,0x18(%r8)
    7440:	eb bc                	jmp    73fe <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x3e>
    7442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7448:	48 8b 3a             	mov    (%rdx),%rdi
    744b:	48 89 c1             	mov    %rax,%rcx
    744e:	48 39 fe             	cmp    %rdi,%rsi
    7451:	74 3e                	je     7491 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xd1>
    7453:	48 8b 41 08          	mov    0x8(%rcx),%rax
    7457:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    745b:	c6 41 18 00          	movb   $0x0,0x18(%rcx)
    745f:	48 8b 10             	mov    (%rax),%rdx
    7462:	48 85 d2             	test   %rdx,%rdx
    7465:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    7469:	74 04                	je     746f <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xaf>
    746b:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    746f:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    7473:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7477:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    747b:	48 39 0a             	cmp    %rcx,(%rdx)
    747e:	74 0c                	je     748c <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xcc>
    7480:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7484:	48 89 08             	mov    %rcx,(%rax)
    7487:	48 89 41 10          	mov    %rax,0x10(%rcx)
    748b:	c3                   	ret    
    748c:	48 89 02             	mov    %rax,(%rdx)
    748f:	eb f3                	jmp    7484 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xc4>
    7491:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    7495:	48 85 c9             	test   %rcx,%rcx
    7498:	48 89 0a             	mov    %rcx,(%rdx)
    749b:	74 08                	je     74a5 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xe5>
    749d:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    74a1:	48 8b 42 10          	mov    0x10(%rdx),%rax
    74a5:	48 89 47 10          	mov    %rax,0x10(%rdi)
    74a9:	48 8b 42 10          	mov    0x10(%rdx),%rax
    74ad:	48 39 10             	cmp    %rdx,(%rax)
    74b0:	0f 84 92 00 00 00    	je     7548 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x188>
    74b6:	48 89 78 08          	mov    %rdi,0x8(%rax)
    74ba:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    74be:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    74c2:	48 89 fa             	mov    %rdi,%rdx
    74c5:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    74c9:	eb 88                	jmp    7453 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x93>
    74cb:	48 3b 31             	cmp    (%rcx),%rsi
    74ce:	74 6d                	je     753d <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x17d>
    74d0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    74d4:	48 8b 32             	mov    (%rdx),%rsi
    74d7:	48 85 f6             	test   %rsi,%rsi
    74da:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    74de:	74 08                	je     74e8 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x128>
    74e0:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    74e4:	48 8b 41 10          	mov    0x10(%rcx),%rax
    74e8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    74ec:	48 8b 41 10          	mov    0x10(%rcx),%rax
    74f0:	48 3b 08             	cmp    (%rax),%rcx
    74f3:	74 5b                	je     7550 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x190>
    74f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    74f9:	48 89 0a             	mov    %rcx,(%rdx)
    74fc:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    7500:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7504:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    7508:	48 8b 10             	mov    (%rax),%rdx
    750b:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    750f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    7513:	48 85 c9             	test   %rcx,%rcx
    7516:	48 89 08             	mov    %rcx,(%rax)
    7519:	74 04                	je     751f <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x15f>
    751b:	48 89 41 10          	mov    %rax,0x10(%rcx)
    751f:	48 8b 48 10          	mov    0x10(%rax),%rcx
    7523:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    7527:	48 8b 48 10          	mov    0x10(%rax),%rcx
    752b:	48 3b 01             	cmp    (%rcx),%rax
    752e:	74 13                	je     7543 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x183>
    7530:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    7534:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7538:	48 89 50 10          	mov    %rdx,0x10(%rax)
    753c:	c3                   	ret    
    753d:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    7541:	eb bd                	jmp    7500 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x140>
    7543:	48 89 11             	mov    %rdx,(%rcx)
    7546:	eb ec                	jmp    7534 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x174>
    7548:	48 89 38             	mov    %rdi,(%rax)
    754b:	e9 6a ff ff ff       	jmp    74ba <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xfa>
    7550:	48 89 10             	mov    %rdx,(%rax)
    7553:	eb a4                	jmp    74f9 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x139>
    7555:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    755c:	00 00 00 
    755f:	90                   	nop

0000000000007560 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    7560:	41 55                	push   %r13
    7562:	41 54                	push   %r12
    7564:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
    7568:	55                   	push   %rbp
    7569:	53                   	push   %rbx
    756a:	48 83 ec 18          	sub    $0x18,%rsp
    756e:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    7572:	48 85 db             	test   %rbx,%rbx
    7575:	74 49                	je     75c0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x60>
    7577:	0f b6 36             	movzbl (%rsi),%esi
    757a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7580:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    7584:	7e 14                	jle    759a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x3a>
    7586:	48 8b 03             	mov    (%rbx),%rax
    7589:	48 85 c0             	test   %rax,%rax
    758c:	74 35                	je     75c3 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x63>
    758e:	48 89 d9             	mov    %rbx,%rcx
    7591:	48 89 c3             	mov    %rax,%rbx
    7594:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    7598:	7f ec                	jg     7586 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x26>
    759a:	0f 8d a0 00 00 00    	jge    7640 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xe0>
    75a0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    75a4:	48 85 c0             	test   %rax,%rax
    75a7:	0f 84 b3 00 00 00    	je     7660 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x100>
    75ad:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
    75b1:	48 89 c3             	mov    %rax,%rbx
    75b4:	eb ca                	jmp    7580 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x20>
    75b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75bd:	00 00 00 
    75c0:	48 89 cb             	mov    %rcx,%rbx
    75c3:	48 89 dd             	mov    %rbx,%rbp
    75c6:	49 89 d5             	mov    %rdx,%r13
    75c9:	49 89 fc             	mov    %rdi,%r12
    75cc:	bf 28 00 00 00       	mov    $0x28,%edi
    75d1:	e8 0a 4c 01 00       	call   1c1e0 <_Znwm>
    75d6:	49 8b 55 00          	mov    0x0(%r13),%rdx
    75da:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    75e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    75e8:	00 
    75e9:	48 89 58 10          	mov    %rbx,0x10(%rax)
    75ed:	48 89 50 1c          	mov    %rdx,0x1c(%rax)
    75f1:	48 89 45 00          	mov    %rax,0x0(%rbp)
    75f5:	49 8b 14 24          	mov    (%r12),%rdx
    75f9:	48 8b 12             	mov    (%rdx),%rdx
    75fc:	48 85 d2             	test   %rdx,%rdx
    75ff:	74 68                	je     7669 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x109>
    7601:	49 89 14 24          	mov    %rdx,(%r12)
    7605:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    7609:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    760e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7613:	e8 a8 fd ff ff       	call   73c0 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    7618:	49 83 44 24 10 01    	addq   $0x1,0x10(%r12)
    761e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7623:	b9 01 00 00 00       	mov    $0x1,%ecx
    7628:	48 83 c4 18          	add    $0x18,%rsp
    762c:	31 d2                	xor    %edx,%edx
    762e:	5b                   	pop    %rbx
    762f:	88 ca                	mov    %cl,%dl
    7631:	5d                   	pop    %rbp
    7632:	41 5c                	pop    %r12
    7634:	41 5d                	pop    %r13
    7636:	c3                   	ret    
    7637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    763e:	00 00 
    7640:	48 8b 01             	mov    (%rcx),%rax
    7643:	48 85 c0             	test   %rax,%rax
    7646:	74 26                	je     766e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x10e>
    7648:	48 83 c4 18          	add    $0x18,%rsp
    764c:	31 c9                	xor    %ecx,%ecx
    764e:	31 d2                	xor    %edx,%edx
    7650:	5b                   	pop    %rbx
    7651:	88 ca                	mov    %cl,%dl
    7653:	5d                   	pop    %rbp
    7654:	41 5c                	pop    %r12
    7656:	41 5d                	pop    %r13
    7658:	c3                   	ret    
    7659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7660:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
    7664:	e9 5d ff ff ff       	jmp    75c6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    7669:	48 89 c6             	mov    %rax,%rsi
    766c:	eb 9b                	jmp    7609 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xa9>
    766e:	48 89 cd             	mov    %rcx,%rbp
    7671:	e9 50 ff ff ff       	jmp    75c6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    7676:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    767d:	00 00 00 

0000000000007680 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    7680:	41 55                	push   %r13
    7682:	41 54                	push   %r12
    7684:	48 8d 57 08          	lea    0x8(%rdi),%rdx
    7688:	55                   	push   %rbp
    7689:	53                   	push   %rbx
    768a:	48 83 ec 18          	sub    $0x18,%rsp
    768e:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    7692:	48 85 db             	test   %rbx,%rbx
    7695:	74 49                	je     76e0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x60>
    7697:	0f b6 36             	movzbl (%rsi),%esi
    769a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    76a0:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    76a4:	7e 14                	jle    76ba <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x3a>
    76a6:	48 8b 03             	mov    (%rbx),%rax
    76a9:	48 85 c0             	test   %rax,%rax
    76ac:	74 35                	je     76e3 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x63>
    76ae:	48 89 da             	mov    %rbx,%rdx
    76b1:	48 89 c3             	mov    %rax,%rbx
    76b4:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    76b8:	7f ec                	jg     76a6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x26>
    76ba:	0f 8d a0 00 00 00    	jge    7760 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xe0>
    76c0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    76c4:	48 85 c0             	test   %rax,%rax
    76c7:	0f 84 b3 00 00 00    	je     7780 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x100>
    76cd:	48 8d 53 08          	lea    0x8(%rbx),%rdx
    76d1:	48 89 c3             	mov    %rax,%rbx
    76d4:	eb ca                	jmp    76a0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x20>
    76d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76dd:	00 00 00 
    76e0:	48 89 d3             	mov    %rdx,%rbx
    76e3:	48 89 dd             	mov    %rbx,%rbp
    76e6:	49 89 cd             	mov    %rcx,%r13
    76e9:	49 89 fc             	mov    %rdi,%r12
    76ec:	bf 28 00 00 00       	mov    $0x28,%edi
    76f1:	e8 ea 4a 01 00       	call   1c1e0 <_Znwm>
    76f6:	49 8b 55 00          	mov    0x0(%r13),%rdx
    76fa:	0f b6 12             	movzbl (%rdx),%edx
    76fd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7704:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    770b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7712:	00 
    7713:	48 89 58 10          	mov    %rbx,0x10(%rax)
    7717:	88 50 1c             	mov    %dl,0x1c(%rax)
    771a:	48 89 45 00          	mov    %rax,0x0(%rbp)
    771e:	49 8b 14 24          	mov    (%r12),%rdx
    7722:	48 8b 12             	mov    (%rdx),%rdx
    7725:	48 85 d2             	test   %rdx,%rdx
    7728:	74 5f                	je     7789 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x109>
    772a:	49 89 14 24          	mov    %rdx,(%r12)
    772e:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    7732:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    7737:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    773c:	e8 7f fc ff ff       	call   73c0 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    7741:	49 83 44 24 10 01    	addq   $0x1,0x10(%r12)
    7747:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    774c:	b9 01 00 00 00       	mov    $0x1,%ecx
    7751:	48 83 c4 18          	add    $0x18,%rsp
    7755:	31 d2                	xor    %edx,%edx
    7757:	5b                   	pop    %rbx
    7758:	88 ca                	mov    %cl,%dl
    775a:	5d                   	pop    %rbp
    775b:	41 5c                	pop    %r12
    775d:	41 5d                	pop    %r13
    775f:	c3                   	ret    
    7760:	48 8b 02             	mov    (%rdx),%rax
    7763:	48 85 c0             	test   %rax,%rax
    7766:	74 26                	je     778e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x10e>
    7768:	48 83 c4 18          	add    $0x18,%rsp
    776c:	31 c9                	xor    %ecx,%ecx
    776e:	31 d2                	xor    %edx,%edx
    7770:	5b                   	pop    %rbx
    7771:	88 ca                	mov    %cl,%dl
    7773:	5d                   	pop    %rbp
    7774:	41 5c                	pop    %r12
    7776:	41 5d                	pop    %r13
    7778:	c3                   	ret    
    7779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7780:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
    7784:	e9 5d ff ff ff       	jmp    76e6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    7789:	48 89 c6             	mov    %rax,%rsi
    778c:	eb a4                	jmp    7732 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xb2>
    778e:	48 89 d5             	mov    %rdx,%rbp
    7791:	e9 50 ff ff ff       	jmp    76e6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    7796:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    779d:	00 00 00 

00000000000077a0 <ecall_map>:
    77a0:	41 54                	push   %r12
    77a2:	55                   	push   %rbp
    77a3:	53                   	push   %rbx
    77a4:	48 83 ec 70          	sub    $0x70,%rsp
    77a8:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
    77ad:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    77b2:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    77b9:	00 00 
    77bb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    77c2:	00 00 
    77c4:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    77c9:	31 c0                	xor    %eax,%eax
    77cb:	48 8d 45 08          	lea    0x8(%rbp),%rax
    77cf:	48 89 da             	mov    %rbx,%rdx
    77d2:	48 89 de             	mov    %rbx,%rsi
    77d5:	48 89 ef             	mov    %rbp,%rdi
    77d8:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    77df:	00 00 
    77e1:	c6 44 24 40 61       	movb   $0x61,0x40(%rsp)
    77e6:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    77eb:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
    77f2:	00 
    77f3:	e8 68 fd ff ff       	call   7560 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    77f8:	48 89 da             	mov    %rbx,%rdx
    77fb:	48 89 de             	mov    %rbx,%rsi
    77fe:	48 89 ef             	mov    %rbp,%rdi
    7801:	c6 44 24 40 62       	movb   $0x62,0x40(%rsp)
    7806:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%rsp)
    780d:	00 
    780e:	e8 4d fd ff ff       	call   7560 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    7813:	48 89 da             	mov    %rbx,%rdx
    7816:	48 89 de             	mov    %rbx,%rsi
    7819:	48 89 ef             	mov    %rbp,%rdi
    781c:	c6 44 24 40 63       	movb   $0x63,0x40(%rsp)
    7821:	c7 44 24 44 03 00 00 	movl   $0x3,0x44(%rsp)
    7828:	00 
    7829:	e8 32 fd ff ff       	call   7560 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    782e:	48 89 da             	mov    %rbx,%rdx
    7831:	48 89 de             	mov    %rbx,%rsi
    7834:	48 89 ef             	mov    %rbp,%rdi
    7837:	c6 44 24 40 64       	movb   $0x64,0x40(%rsp)
    783c:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%rsp)
    7843:	00 
    7844:	e8 17 fd ff ff       	call   7560 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    7849:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    784e:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    7853:	48 8d 15 76 9f 01 00 	lea    0x19f76(%rip),%rdx        # 217d0 <_ZNSt3__1L19piecewise_constructE>
    785a:	48 89 de             	mov    %rbx,%rsi
    785d:	48 89 ef             	mov    %rbp,%rdi
    7860:	c6 44 24 40 61       	movb   $0x61,0x40(%rsp)
    7865:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    786a:	e8 11 fe ff ff       	call   7680 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    786f:	83 78 20 01          	cmpl   $0x1,0x20(%rax)
    7873:	74 1f                	je     7894 <ecall_map+0xf4>
    7875:	48 8d 0d 41 9e 01 00 	lea    0x19e41(%rip),%rcx        # 216bd <_ZZ28ecall_function_calling_convsE8__func__+0x1d>
    787c:	48 8d 15 1d 9f 01 00 	lea    0x19f1d(%rip),%rdx        # 217a0 <_ZZ9ecall_mapE8__func__>
    7883:	48 8d 3d be 9e 01 00 	lea    0x19ebe(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    788a:	be 51 00 00 00       	mov    $0x51,%esi
    788f:	e8 dc 32 00 00       	call   ab70 <__assert>
    7894:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    7899:	4c 8d 44 24 0d       	lea    0xd(%rsp),%r8
    789e:	48 8d 15 2b 9f 01 00 	lea    0x19f2b(%rip),%rdx        # 217d0 <_ZNSt3__1L19piecewise_constructE>
    78a5:	48 89 de             	mov    %rbx,%rsi
    78a8:	48 89 ef             	mov    %rbp,%rdi
    78ab:	c6 44 24 40 62       	movb   $0x62,0x40(%rsp)
    78b0:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    78b5:	e8 c6 fd ff ff       	call   7680 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    78ba:	83 78 20 02          	cmpl   $0x2,0x20(%rax)
    78be:	74 1f                	je     78df <ecall_map+0x13f>
    78c0:	48 8d 0d 02 9e 01 00 	lea    0x19e02(%rip),%rcx        # 216c9 <_ZZ28ecall_function_calling_convsE8__func__+0x29>
    78c7:	48 8d 15 d2 9e 01 00 	lea    0x19ed2(%rip),%rdx        # 217a0 <_ZZ9ecall_mapE8__func__>
    78ce:	48 8d 3d 73 9e 01 00 	lea    0x19e73(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    78d5:	be 52 00 00 00       	mov    $0x52,%esi
    78da:	e8 91 32 00 00       	call   ab70 <__assert>
    78df:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    78e4:	4c 8d 44 24 0e       	lea    0xe(%rsp),%r8
    78e9:	48 8d 15 e0 9e 01 00 	lea    0x19ee0(%rip),%rdx        # 217d0 <_ZNSt3__1L19piecewise_constructE>
    78f0:	48 89 de             	mov    %rbx,%rsi
    78f3:	48 89 ef             	mov    %rbp,%rdi
    78f6:	c6 44 24 40 63       	movb   $0x63,0x40(%rsp)
    78fb:	4c 89 e1             	mov    %r12,%rcx
    78fe:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    7903:	e8 78 fd ff ff       	call   7680 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    7908:	83 78 20 03          	cmpl   $0x3,0x20(%rax)
    790c:	74 1f                	je     792d <ecall_map+0x18d>
    790e:	48 8d 0d c0 9d 01 00 	lea    0x19dc0(%rip),%rcx        # 216d5 <_ZZ28ecall_function_calling_convsE8__func__+0x35>
    7915:	48 8d 15 84 9e 01 00 	lea    0x19e84(%rip),%rdx        # 217a0 <_ZZ9ecall_mapE8__func__>
    791c:	48 8d 3d 25 9e 01 00 	lea    0x19e25(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    7923:	be 53 00 00 00       	mov    $0x53,%esi
    7928:	e8 43 32 00 00       	call   ab70 <__assert>
    792d:	4c 8d 44 24 0f       	lea    0xf(%rsp),%r8
    7932:	48 8d 15 97 9e 01 00 	lea    0x19e97(%rip),%rdx        # 217d0 <_ZNSt3__1L19piecewise_constructE>
    7939:	48 89 d9             	mov    %rbx,%rcx
    793c:	4c 89 e6             	mov    %r12,%rsi
    793f:	48 89 ef             	mov    %rbp,%rdi
    7942:	c6 44 24 30 64       	movb   $0x64,0x30(%rsp)
    7947:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    794c:	e8 2f fd ff ff       	call   7680 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    7951:	83 78 20 04          	cmpl   $0x4,0x20(%rax)
    7955:	74 1f                	je     7976 <ecall_map+0x1d6>
    7957:	48 8d 0d 83 9d 01 00 	lea    0x19d83(%rip),%rcx        # 216e1 <_ZZ28ecall_function_calling_convsE8__func__+0x41>
    795e:	48 8d 15 3b 9e 01 00 	lea    0x19e3b(%rip),%rdx        # 217a0 <_ZZ9ecall_mapE8__func__>
    7965:	48 8d 3d dc 9d 01 00 	lea    0x19ddc(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    796c:	be 54 00 00 00       	mov    $0x54,%esi
    7971:	e8 fa 31 00 00       	call   ab70 <__assert>
    7976:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    797b:	48 85 f6             	test   %rsi,%rsi
    797e:	74 7e                	je     79fe <ecall_map+0x25e>
    7980:	48 89 f0             	mov    %rsi,%rax
    7983:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    7987:	eb 12                	jmp    799b <ecall_map+0x1fb>
    7989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7990:	48 89 c2             	mov    %rax,%rdx
    7993:	48 8b 00             	mov    (%rax),%rax
    7996:	48 85 c0             	test   %rax,%rax
    7999:	74 0f                	je     79aa <ecall_map+0x20a>
    799b:	80 78 1c 64          	cmpb   $0x64,0x1c(%rax)
    799f:	7f ef                	jg     7990 <ecall_map+0x1f0>
    79a1:	48 8b 40 08          	mov    0x8(%rax),%rax
    79a5:	48 85 c0             	test   %rax,%rax
    79a8:	75 f1                	jne    799b <ecall_map+0x1fb>
    79aa:	48 8d 45 08          	lea    0x8(%rbp),%rax
    79ae:	48 39 c2             	cmp    %rax,%rdx
    79b1:	74 2a                	je     79dd <ecall_map+0x23d>
    79b3:	80 7a 1c 65          	cmpb   $0x65,0x1c(%rdx)
    79b7:	7f 24                	jg     79dd <ecall_map+0x23d>
    79b9:	48 8d 0d 2d 9d 01 00 	lea    0x19d2d(%rip),%rcx        # 216ed <_ZZ28ecall_function_calling_convsE8__func__+0x4d>
    79c0:	48 8d 15 d9 9d 01 00 	lea    0x19dd9(%rip),%rdx        # 217a0 <_ZZ9ecall_mapE8__func__>
    79c7:	48 8d 3d 7a 9d 01 00 	lea    0x19d7a(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    79ce:	be 56 00 00 00       	mov    $0x56,%esi
    79d3:	e8 98 31 00 00       	call   ab70 <__assert>
    79d8:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    79dd:	48 89 ef             	mov    %rbp,%rdi
    79e0:	e8 9b f9 ff ff       	call   7380 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    79e5:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    79ea:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    79f1:	00 00 
    79f3:	75 0d                	jne    7a02 <ecall_map+0x262>
    79f5:	48 83 c4 70          	add    $0x70,%rsp
    79f9:	5b                   	pop    %rbx
    79fa:	5d                   	pop    %rbp
    79fb:	41 5c                	pop    %r12
    79fd:	c3                   	ret    
    79fe:	31 f6                	xor    %esi,%esi
    7a00:	eb db                	jmp    79dd <ecall_map+0x23d>
    7a02:	e8 49 71 00 00       	call   eb50 <__stack_chk_fail>
    7a07:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    7a0c:	48 89 c3             	mov    %rax,%rbx
    7a0f:	48 89 ef             	mov    %rbp,%rdi
    7a12:	e8 69 f9 ff ff       	call   7380 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    7a17:	48 89 df             	mov    %rbx,%rdi
    7a1a:	e8 71 0b 01 00       	call   18590 <_Unwind_Resume>
    7a1f:	90                   	nop

0000000000007a20 <ecall_exception>:
    7a20:	41 55                	push   %r13
    7a22:	41 54                	push   %r12
    7a24:	48 8d 35 d9 9c 01 00 	lea    0x19cd9(%rip),%rsi        # 21704 <_ZZ28ecall_function_calling_convsE8__func__+0x64>
    7a2b:	55                   	push   %rbp
    7a2c:	53                   	push   %rbx
    7a2d:	ba 03 00 00 00       	mov    $0x3,%edx
    7a32:	48 83 ec 38          	sub    $0x38,%rsp
    7a36:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    7a3b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    7a42:	00 00 
    7a44:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    7a4b:	00 00 
    7a4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7a54:	00 00 
    7a56:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7a5b:	31 c0                	xor    %eax,%eax
    7a5d:	48 89 df             	mov    %rbx,%rdi
    7a60:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7a67:	00 00 
    7a69:	e8 92 4d 01 00       	call   1c800 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>
    7a6e:	bf 10 00 00 00       	mov    $0x10,%edi
    7a73:	e8 08 3f 01 00       	call   1b980 <__cxa_allocate_exception>
    7a78:	48 89 de             	mov    %rbx,%rsi
    7a7b:	48 89 c7             	mov    %rax,%rdi
    7a7e:	48 89 c5             	mov    %rax,%rbp
    7a81:	e8 1a 4b 01 00       	call   1c5a0 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>
    7a86:	48 8d 15 63 48 01 00 	lea    0x14863(%rip),%rdx        # 1c2f0 <_ZNSt13runtime_errorD1Ev>
    7a8d:	48 8d 35 9c 23 02 00 	lea    0x2239c(%rip),%rsi        # 29e30 <_ZTISt13runtime_error>
    7a94:	48 89 ef             	mov    %rbp,%rdi
    7a97:	e8 e4 3f 01 00       	call   1ba80 <__cxa_throw>
    7a9c:	48 89 c7             	mov    %rax,%rdi
    7a9f:	48 83 ea 01          	sub    $0x1,%rdx
    7aa3:	0f 85 cd 01 00 00    	jne    7c76 <ecall_exception+0x256>
    7aa9:	e8 72 3b 01 00       	call   1b620 <__cxa_begin_catch>
    7aae:	48 89 c5             	mov    %rax,%rbp
    7ab1:	48 8b 00             	mov    (%rax),%rax
    7ab4:	48 89 ef             	mov    %rbp,%rdi
    7ab7:	ff 50 10             	call   *0x10(%rax)
    7aba:	48 85 c0             	test   %rax,%rax
    7abd:	49 89 c4             	mov    %rax,%r12
    7ac0:	75 1f                	jne    7ae1 <ecall_exception+0xc1>
    7ac2:	48 8d 0d 3f 9c 01 00 	lea    0x19c3f(%rip),%rcx        # 21708 <_ZZ28ecall_function_calling_convsE8__func__+0x68>
    7ac9:	48 8d 15 e0 9c 01 00 	lea    0x19ce0(%rip),%rdx        # 217b0 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    7ad0:	48 8d 3d 99 9c 01 00 	lea    0x19c99(%rip),%rdi        # 21770 <_ZZ28ecall_function_calling_convsE8__func__+0xd0>
    7ad7:	be 0b 0f 00 00       	mov    $0xf0b,%esi
    7adc:	e8 8f 30 00 00       	call   ab70 <__assert>
    7ae1:	31 c0                	xor    %eax,%eax
    7ae3:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
    7ae7:	4c 89 e7             	mov    %r12,%rdi
    7aea:	f2 ae                	repnz scas %es:(%rdi),%al
    7aec:	48 89 c8             	mov    %rcx,%rax
    7aef:	48 f7 d0             	not    %rax
    7af2:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7af6:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
    7afb:	a8 01                	test   $0x1,%al
    7afd:	0f 84 65 01 00 00    	je     7c68 <ecall_exception+0x248>
    7b03:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    7b08:	49 39 d0             	cmp    %rdx,%r8
    7b0b:	0f 84 39 01 00 00    	je     7c4a <ecall_exception+0x22a>
    7b11:	48 8d 0d 01 9c 01 00 	lea    0x19c01(%rip),%rcx        # 21719 <_ZZ28ecall_function_calling_convsE8__func__+0x79>
    7b18:	48 8d 15 a1 9c 01 00 	lea    0x19ca1(%rip),%rdx        # 217c0 <_ZZ15ecall_exceptionE8__func__>
    7b1f:	48 8d 3d 22 9c 01 00 	lea    0x19c22(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    7b26:	be 33 00 00 00       	mov    $0x33,%esi
    7b2b:	e8 40 30 00 00       	call   ab70 <__assert>
    7b30:	48 8d 35 02 97 01 00 	lea    0x19702(%rip),%rsi        # 21239 <g_dyn_entry_table+0x239>
    7b37:	48 89 e7             	mov    %rsp,%rdi
    7b3a:	49 89 e4             	mov    %rsp,%r12
    7b3d:	e8 ee 4a 01 00       	call   1c630 <_ZNSt13runtime_errorC1EPKc>
    7b42:	48 89 ee             	mov    %rbp,%rsi
    7b45:	48 89 e7             	mov    %rsp,%rdi
    7b48:	e8 63 4b 01 00       	call   1c6b0 <_ZNSt13runtime_erroraSERKS_>
    7b4d:	48 89 e7             	mov    %rsp,%rdi
    7b50:	e8 3b 47 01 00       	call   1c290 <_ZNKSt13runtime_error4whatEv>
    7b55:	48 85 c0             	test   %rax,%rax
    7b58:	48 89 c5             	mov    %rax,%rbp
    7b5b:	75 1f                	jne    7b7c <ecall_exception+0x15c>
    7b5d:	48 8d 0d a4 9b 01 00 	lea    0x19ba4(%rip),%rcx        # 21708 <_ZZ28ecall_function_calling_convsE8__func__+0x68>
    7b64:	48 8d 15 45 9c 01 00 	lea    0x19c45(%rip),%rdx        # 217b0 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    7b6b:	48 8d 3d fe 9b 01 00 	lea    0x19bfe(%rip),%rdi        # 21770 <_ZZ28ecall_function_calling_convsE8__func__+0xd0>
    7b72:	be 0b 0f 00 00       	mov    $0xf0b,%esi
    7b77:	e8 f4 2f 00 00       	call   ab70 <__assert>
    7b7c:	31 c0                	xor    %eax,%eax
    7b7e:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
    7b82:	48 89 ef             	mov    %rbp,%rdi
    7b85:	f2 ae                	repnz scas %es:(%rdi),%al
    7b87:	48 89 c8             	mov    %rcx,%rax
    7b8a:	48 f7 d0             	not    %rax
    7b8d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    7b91:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
    7b96:	a8 01                	test   $0x1,%al
    7b98:	0f 84 9e 00 00 00    	je     7c3c <ecall_exception+0x21c>
    7b9e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    7ba3:	49 39 d0             	cmp    %rdx,%r8
    7ba6:	74 79                	je     7c21 <ecall_exception+0x201>
    7ba8:	48 8d 0d 7a 9b 01 00 	lea    0x19b7a(%rip),%rcx        # 21729 <_ZZ28ecall_function_calling_convsE8__func__+0x89>
    7baf:	48 8d 15 0a 9c 01 00 	lea    0x19c0a(%rip),%rdx        # 217c0 <_ZZ15ecall_exceptionE8__func__>
    7bb6:	48 8d 3d 8b 9b 01 00 	lea    0x19b8b(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    7bbd:	be 36 00 00 00       	mov    $0x36,%esi
    7bc2:	e8 a9 2f 00 00       	call   ab70 <__assert>
    7bc7:	4c 89 e7             	mov    %r12,%rdi
    7bca:	e8 21 47 01 00       	call   1c2f0 <_ZNSt13runtime_errorD1Ev>
    7bcf:	e8 1c 3c 01 00       	call   1b7f0 <__cxa_end_catch>
    7bd4:	48 89 df             	mov    %rbx,%rdi
    7bd7:	e8 14 4b 01 00       	call   1c6f0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    7bdc:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    7be1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7be8:	00 00 
    7bea:	75 23                	jne    7c0f <ecall_exception+0x1ef>
    7bec:	48 83 c4 38          	add    $0x38,%rsp
    7bf0:	5b                   	pop    %rbx
    7bf1:	5d                   	pop    %rbp
    7bf2:	41 5c                	pop    %r12
    7bf4:	41 5d                	pop    %r13
    7bf6:	c3                   	ret    
    7bf7:	48 89 c5             	mov    %rax,%rbp
    7bfa:	e8 f1 3b 01 00       	call   1b7f0 <__cxa_end_catch>
    7bff:	48 89 df             	mov    %rbx,%rdi
    7c02:	e8 e9 4a 01 00       	call   1c6f0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    7c07:	48 89 ef             	mov    %rbp,%rdi
    7c0a:	e8 81 09 01 00       	call   18590 <_Unwind_Resume>
    7c0f:	e8 3c 6f 00 00       	call   eb50 <__stack_chk_fail>
    7c14:	4c 89 e7             	mov    %r12,%rdi
    7c17:	48 89 c5             	mov    %rax,%rbp
    7c1a:	e8 d1 46 01 00       	call   1c2f0 <_ZNSt13runtime_errorD1Ev>
    7c1f:	eb d9                	jmp    7bfa <ecall_exception+0x1da>
    7c21:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
    7c25:	31 f6                	xor    %esi,%esi
    7c27:	48 89 e9             	mov    %rbp,%rcx
    7c2a:	48 89 df             	mov    %rbx,%rdi
    7c2d:	e8 ee 4a 01 00       	call   1c720 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    7c32:	85 c0                	test   %eax,%eax
    7c34:	0f 85 6e ff ff ff    	jne    7ba8 <ecall_exception+0x188>
    7c3a:	eb 8b                	jmp    7bc7 <ecall_exception+0x1a7>
    7c3c:	48 d1 e8             	shr    %rax
    7c3f:	83 e0 7f             	and    $0x7f,%eax
    7c42:	49 89 c0             	mov    %rax,%r8
    7c45:	e9 59 ff ff ff       	jmp    7ba3 <ecall_exception+0x183>
    7c4a:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
    7c4e:	31 f6                	xor    %esi,%esi
    7c50:	4c 89 e1             	mov    %r12,%rcx
    7c53:	48 89 df             	mov    %rbx,%rdi
    7c56:	e8 c5 4a 01 00       	call   1c720 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    7c5b:	85 c0                	test   %eax,%eax
    7c5d:	0f 85 ae fe ff ff    	jne    7b11 <ecall_exception+0xf1>
    7c63:	e9 c8 fe ff ff       	jmp    7b30 <ecall_exception+0x110>
    7c68:	48 d1 e8             	shr    %rax
    7c6b:	83 e0 7f             	and    $0x7f,%eax
    7c6e:	49 89 c0             	mov    %rax,%r8
    7c71:	e9 92 fe ff ff       	jmp    7b08 <ecall_exception+0xe8>
    7c76:	e8 a5 39 01 00       	call   1b620 <__cxa_begin_catch>
    7c7b:	48 8d 0d bb 9a 01 00 	lea    0x19abb(%rip),%rcx        # 2173d <_ZZ28ecall_function_calling_convsE8__func__+0x9d>
    7c82:	48 8d 15 37 9b 01 00 	lea    0x19b37(%rip),%rdx        # 217c0 <_ZZ15ecall_exceptionE8__func__>
    7c89:	48 8d 3d b8 9a 01 00 	lea    0x19ab8(%rip),%rdi        # 21748 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    7c90:	be 39 00 00 00       	mov    $0x39,%esi
    7c95:	e8 d6 2e 00 00       	call   ab70 <__assert>
    7c9a:	e8 51 3b 01 00       	call   1b7f0 <__cxa_end_catch>
    7c9f:	e9 30 ff ff ff       	jmp    7bd4 <ecall_exception+0x1b4>
    7ca4:	49 89 c4             	mov    %rax,%r12
    7ca7:	49 89 d5             	mov    %rdx,%r13
    7caa:	48 89 ef             	mov    %rbp,%rdi
    7cad:	e8 7e 3a 01 00       	call   1b730 <__cxa_free_exception>
    7cb2:	4c 89 e7             	mov    %r12,%rdi
    7cb5:	4c 89 ea             	mov    %r13,%rdx
    7cb8:	e9 e2 fd ff ff       	jmp    7a9f <ecall_exception+0x7f>
    7cbd:	48 89 c5             	mov    %rax,%rbp
    7cc0:	e9 3a ff ff ff       	jmp    7bff <ecall_exception+0x1df>
    7cc5:	48 89 c5             	mov    %rax,%rbp
    7cc8:	e8 23 3b 01 00       	call   1b7f0 <__cxa_end_catch>
    7ccd:	e9 2d ff ff ff       	jmp    7bff <ecall_exception+0x1df>
    7cd2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7cd9:	00 00 00 
    7cdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007ce0 <ecall_malloc_free>:
    7ce0:	48 83 ec 18          	sub    $0x18,%rsp
    7ce4:	bf 64 00 00 00       	mov    $0x64,%edi
    7ce9:	e8 12 3a 00 00       	call   b700 <dlmalloc>
    7cee:	48 85 c0             	test   %rax,%rax
    7cf1:	74 0d                	je     7d00 <ecall_malloc_free+0x20>
    7cf3:	48 89 c7             	mov    %rax,%rdi
    7cf6:	48 83 c4 18          	add    $0x18,%rsp
    7cfa:	e9 71 54 00 00       	jmp    d170 <dlfree>
    7cff:	90                   	nop
    7d00:	48 8d 3d d9 9a 01 00 	lea    0x19ad9(%rip),%rdi        # 217e0 <_ZNSt3__1L19piecewise_constructE+0x10>
    7d07:	48 8d 0d c3 9a 01 00 	lea    0x19ac3(%rip),%rcx        # 217d1 <_ZNSt3__1L19piecewise_constructE+0x1>
    7d0e:	48 8d 15 eb 9a 01 00 	lea    0x19aeb(%rip),%rdx        # 21800 <_ZZ17ecall_malloc_freeE8__func__>
    7d15:	be 2e 00 00 00       	mov    $0x2e,%esi
    7d1a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7d1f:	e8 4c 2e 00 00       	call   ab70 <__assert>
    7d24:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7d29:	48 83 c4 18          	add    $0x18,%rsp
    7d2d:	48 89 c7             	mov    %rax,%rdi
    7d30:	e9 3b 54 00 00       	jmp    d170 <dlfree>
    7d35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7d3c:	00 00 00 
    7d3f:	90                   	nop

0000000000007d40 <ecall_sgx_cpuid>:
    7d40:	48 83 ec 08          	sub    $0x8,%rsp
    7d44:	e8 e7 2f 00 00       	call   ad30 <sgx_cpuid>
    7d49:	85 c0                	test   %eax,%eax
    7d4b:	75 05                	jne    7d52 <ecall_sgx_cpuid+0x12>
    7d4d:	48 83 c4 08          	add    $0x8,%rsp
    7d51:	c3                   	ret    
    7d52:	e8 3d 8a 01 00       	call   20794 <abort>
    7d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7d5e:	00 00 

0000000000007d60 <init_optimized_libs>:
    7d60:	f3 0f 1e fa          	endbr64 
    7d64:	48 8d 05 75 25 02 00 	lea    0x22575(%rip),%rax        # 2a2e0 <g_enclave_state>
    7d6b:	83 38 01             	cmpl   $0x1,(%rax)
    7d6e:	0f 85 4c 01 00 00    	jne    7ec0 <init_optimized_libs+0x160>
    7d74:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    7d7b:	00 00 ff 
    7d7e:	55                   	push   %rbp
    7d7f:	48 89 f5             	mov    %rsi,%rbp
    7d82:	53                   	push   %rbx
    7d83:	48 83 ec 08          	sub    $0x8,%rsp
    7d87:	48 85 c7             	test   %rax,%rdi
    7d8a:	0f 85 d0 00 00 00    	jne    7e60 <init_optimized_libs+0x100>
    7d90:	48 f7 c7 00 fe ff ff 	test   $0xfffffffffffffe00,%rdi
    7d97:	0f 84 eb 00 00 00    	je     7e88 <init_optimized_libs+0x128>
    7d9d:	40 f6 c7 20          	test   $0x20,%dil
    7da1:	74 10                	je     7db3 <init_optimized_libs+0x53>
    7da3:	48 89 f8             	mov    %rdi,%rax
    7da6:	83 e0 1f             	and    $0x1f,%eax
    7da9:	48 83 f8 1f          	cmp    $0x1f,%rax
    7dad:	0f 85 d5 00 00 00    	jne    7e88 <init_optimized_libs+0x128>
    7db3:	40 f6 c7 40          	test   $0x40,%dil
    7db7:	74 10                	je     7dc9 <init_optimized_libs+0x69>
    7db9:	48 89 f8             	mov    %rdi,%rax
    7dbc:	83 e0 3f             	and    $0x3f,%eax
    7dbf:	48 83 f8 3f          	cmp    $0x3f,%rax
    7dc3:	0f 85 bf 00 00 00    	jne    7e88 <init_optimized_libs+0x128>
    7dc9:	40 f6 c7 80          	test   $0x80,%dil
    7dcd:	74 10                	je     7ddf <init_optimized_libs+0x7f>
    7dcf:	48 89 f8             	mov    %rdi,%rax
    7dd2:	83 e0 7f             	and    $0x7f,%eax
    7dd5:	48 83 f8 7f          	cmp    $0x7f,%rax
    7dd9:	0f 85 a9 00 00 00    	jne    7e88 <init_optimized_libs+0x128>
    7ddf:	f7 c7 00 01 00 00    	test   $0x100,%edi
    7de5:	74 10                	je     7df7 <init_optimized_libs+0x97>
    7de7:	40 0f b6 c7          	movzbl %dil,%eax
    7deb:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    7df1:	0f 85 91 00 00 00    	jne    7e88 <init_optimized_libs+0x128>
    7df7:	f7 c7 00 02 00 00    	test   $0x200,%edi
    7dfd:	74 10                	je     7e0f <init_optimized_libs+0xaf>
    7dff:	48 89 f8             	mov    %rdi,%rax
    7e02:	25 ff 01 00 00       	and    $0x1ff,%eax
    7e07:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    7e0d:	75 79                	jne    7e88 <init_optimized_libs+0x128>
    7e0f:	f7 c7 00 04 00 00    	test   $0x400,%edi
    7e15:	75 61                	jne    7e78 <init_optimized_libs+0x118>
    7e17:	48 89 d0             	mov    %rdx,%rax
    7e1a:	83 e0 06             	and    $0x6,%eax
    7e1d:	48 83 f8 06          	cmp    $0x6,%rax
    7e21:	74 75                	je     7e98 <init_optimized_libs+0x138>
    7e23:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    7e2a:	20 fe ff 
    7e2d:	48 21 c7             	and    %rax,%rdi
    7e30:	48 8d 1d e9 1e 02 00 	lea    0x21ee9(%rip),%rbx        # 29d20 <g_cpu_feature_indicator>
    7e37:	48 89 3b             	mov    %rdi,(%rbx)
    7e3a:	e8 c1 6b 00 00       	call   ea00 <sgx_init_string_lib>
    7e3f:	85 c0                	test   %eax,%eax
    7e41:	75 45                	jne    7e88 <init_optimized_libs+0x128>
    7e43:	48 8b 3b             	mov    (%rbx),%rdi
    7e46:	48 89 ee             	mov    %rbp,%rsi
    7e49:	e8 e2 7a 01 00       	call   1f930 <sgx_init_crypto_lib>
    7e4e:	85 c0                	test   %eax,%eax
    7e50:	0f 95 c0             	setne  %al
    7e53:	48 83 c4 08          	add    $0x8,%rsp
    7e57:	0f b6 c0             	movzbl %al,%eax
    7e5a:	5b                   	pop    %rbx
    7e5b:	5d                   	pop    %rbp
    7e5c:	f7 d8                	neg    %eax
    7e5e:	c3                   	ret    
    7e5f:	90                   	nop
    7e60:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    7e67:	ff ff 00 
    7e6a:	48 21 c7             	and    %rax,%rdi
    7e6d:	e9 1e ff ff ff       	jmp    7d90 <init_optimized_libs+0x30>
    7e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7e78:	48 89 f8             	mov    %rdi,%rax
    7e7b:	25 ff 03 00 00       	and    $0x3ff,%eax
    7e80:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    7e86:	74 8f                	je     7e17 <init_optimized_libs+0xb7>
    7e88:	48 83 c4 08          	add    $0x8,%rsp
    7e8c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    7e91:	5b                   	pop    %rbx
    7e92:	5d                   	pop    %rbp
    7e93:	c3                   	ret    
    7e94:	0f 1f 40 00          	nopl   0x0(%rax)
    7e98:	81 e2 e0 00 00 00    	and    $0xe0,%edx
    7e9e:	48 81 fa e0 00 00 00 	cmp    $0xe0,%rdx
    7ea5:	74 89                	je     7e30 <init_optimized_libs+0xd0>
    7ea7:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    7eae:	e0 fe ff 
    7eb1:	48 21 c7             	and    %rax,%rdi
    7eb4:	e9 77 ff ff ff       	jmp    7e30 <init_optimized_libs+0xd0>
    7eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7ec0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    7ec5:	c3                   	ret    
    7ec6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7ecd:	00 00 00 

0000000000007ed0 <sgx_is_within_enclave>:
    7ed0:	f3 0f 1e fa          	endbr64 
    7ed4:	48 8d 05 35 1e 02 00 	lea    0x21e35(%rip),%rax        # 29d10 <g_enclave_base>
    7edb:	4c 8b 00             	mov    (%rax),%r8
    7ede:	48 8d 05 23 1e 02 00 	lea    0x21e23(%rip),%rax        # 29d08 <g_enclave_size>
    7ee5:	48 8b 08             	mov    (%rax),%rcx
    7ee8:	4c 01 c1             	add    %r8,%rcx
    7eeb:	48 83 e9 01          	sub    $0x1,%rcx
    7eef:	48 85 f6             	test   %rsi,%rsi
    7ef2:	74 24                	je     7f18 <sgx_is_within_enclave+0x48>
    7ef4:	48 83 ee 01          	sub    $0x1,%rsi
    7ef8:	48 01 fe             	add    %rdi,%rsi
    7efb:	0f 93 c2             	setae  %dl
    7efe:	4c 39 c7             	cmp    %r8,%rdi
    7f01:	0f 93 c0             	setae  %al
    7f04:	21 c2                	and    %eax,%edx
    7f06:	31 c0                	xor    %eax,%eax
    7f08:	48 39 ce             	cmp    %rcx,%rsi
    7f0b:	0f 96 c0             	setbe  %al
    7f0e:	21 d0                	and    %edx,%eax
    7f10:	c3                   	ret    
    7f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7f18:	48 89 fe             	mov    %rdi,%rsi
    7f1b:	ba 01 00 00 00       	mov    $0x1,%edx
    7f20:	eb dc                	jmp    7efe <sgx_is_within_enclave+0x2e>
    7f22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7f29:	00 00 00 
    7f2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007f30 <sgx_is_outside_enclave>:
    7f30:	f3 0f 1e fa          	endbr64 
    7f34:	48 8d 05 d5 1d 02 00 	lea    0x21dd5(%rip),%rax        # 29d10 <g_enclave_base>
    7f3b:	48 8b 10             	mov    (%rax),%rdx
    7f3e:	48 8d 05 c3 1d 02 00 	lea    0x21dc3(%rip),%rax        # 29d08 <g_enclave_size>
    7f45:	48 8b 00             	mov    (%rax),%rax
    7f48:	48 85 f6             	test   %rsi,%rsi
    7f4b:	74 13                	je     7f60 <sgx_is_outside_enclave+0x30>
    7f4d:	48 83 ee 01          	sub    $0x1,%rsi
    7f51:	48 01 fe             	add    %rdi,%rsi
    7f54:	73 0d                	jae    7f63 <sgx_is_outside_enclave+0x33>
    7f56:	31 c0                	xor    %eax,%eax
    7f58:	c3                   	ret    
    7f59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7f60:	48 89 fe             	mov    %rdi,%rsi
    7f63:	48 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%rax
    7f68:	48 39 c7             	cmp    %rax,%rdi
    7f6b:	0f 97 c0             	seta   %al
    7f6e:	48 39 f2             	cmp    %rsi,%rdx
    7f71:	0f 97 c2             	seta   %dl
    7f74:	09 d0                	or     %edx,%eax
    7f76:	0f b6 c0             	movzbl %al,%eax
    7f79:	c3                   	ret    
    7f7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007f80 <sgx_ocalloc>:
    7f80:	f3 0f 1e fa          	endbr64 
    7f84:	53                   	push   %rbx
    7f85:	48 89 fb             	mov    %rdi,%rbx
    7f88:	48 83 ec 10          	sub    $0x10,%rsp
    7f8c:	e8 7c 84 01 00       	call   2040d <get_thread_data>
    7f91:	48 8b 70 20          	mov    0x20(%rax),%rsi
    7f95:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    7f9c:	48 89 c7             	mov    %rax,%rdi
    7f9f:	48 83 c7 07          	add    $0x7,%rdi
    7fa3:	72 28                	jb     7fcd <sgx_ocalloc+0x4d>
    7fa5:	48 8d 15 64 1d 02 00 	lea    0x21d64(%rip),%rdx        # 29d10 <g_enclave_base>
    7fac:	48 8b 0a             	mov    (%rdx),%rcx
    7faf:	48 8d 15 52 1d 02 00 	lea    0x21d52(%rip),%rdx        # 29d08 <g_enclave_size>
    7fb6:	4c 8b 0a             	mov    (%rdx),%r9
    7fb9:	49 01 c9             	add    %rcx,%r9
    7fbc:	4c 89 ca             	mov    %r9,%rdx
    7fbf:	48 83 ea 01          	sub    $0x1,%rdx
    7fc3:	48 39 f9             	cmp    %rdi,%rcx
    7fc6:	77 10                	ja     7fd8 <sgx_ocalloc+0x58>
    7fc8:	48 39 d0             	cmp    %rdx,%rax
    7fcb:	77 0b                	ja     7fd8 <sgx_ocalloc+0x58>
    7fcd:	e8 c2 87 01 00       	call   20794 <abort>
    7fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7fd8:	48 39 d8             	cmp    %rbx,%rax
    7fdb:	72 f0                	jb     7fcd <sgx_ocalloc+0x4d>
    7fdd:	48 89 c7             	mov    %rax,%rdi
    7fe0:	48 29 df             	sub    %rbx,%rdi
    7fe3:	49 89 f8             	mov    %rdi,%r8
    7fe6:	49 83 e0 f0          	and    $0xfffffffffffffff0,%r8
    7fea:	48 85 db             	test   %rbx,%rbx
    7fed:	74 11                	je     8000 <sgx_ocalloc+0x80>
    7fef:	48 83 eb 01          	sub    $0x1,%rbx
    7ff3:	4c 01 c3             	add    %r8,%rbx
    7ff6:	72 d5                	jb     7fcd <sgx_ocalloc+0x4d>
    7ff8:	eb 09                	jmp    8003 <sgx_ocalloc+0x83>
    7ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8000:	4c 89 c3             	mov    %r8,%rbx
    8003:	48 39 d9             	cmp    %rbx,%rcx
    8006:	77 05                	ja     800d <sgx_ocalloc+0x8d>
    8008:	49 39 d0             	cmp    %rdx,%r8
    800b:	76 c0                	jbe    7fcd <sgx_ocalloc+0x4d>
    800d:	48 83 e8 01          	sub    $0x1,%rax
    8011:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    8017:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    801e:	74 ad                	je     7fcd <sgx_ocalloc+0x4d>
    8020:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8025:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    802a:	48 39 c7             	cmp    %rax,%rdi
    802d:	77 28                	ja     8057 <sgx_ocalloc+0xd7>
    802f:	90                   	nop
    8030:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8035:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    803a:	c6 00 00             	movb   $0x0,(%rax)
    803d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8042:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    8048:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    804d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8052:	48 39 f8             	cmp    %rdi,%rax
    8055:	73 d9                	jae    8030 <sgx_ocalloc+0xb0>
    8057:	4c 89 86 90 00 00 00 	mov    %r8,0x90(%rsi)
    805e:	48 83 c4 10          	add    $0x10,%rsp
    8062:	4c 89 c0             	mov    %r8,%rax
    8065:	5b                   	pop    %rbx
    8066:	c3                   	ret    
    8067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    806e:	00 00 

0000000000008070 <sgx_ocfree>:
    8070:	f3 0f 1e fa          	endbr64 
    8074:	48 83 ec 08          	sub    $0x8,%rsp
    8078:	e8 90 83 01 00       	call   2040d <get_thread_data>
    807d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8081:	48 8b 52 e8          	mov    -0x18(%rdx),%rdx
    8085:	48 89 d7             	mov    %rdx,%rdi
    8088:	48 83 c7 07          	add    $0x7,%rdi
    808c:	72 28                	jb     80b6 <sgx_ocfree+0x46>
    808e:	48 8d 0d 7b 1c 02 00 	lea    0x21c7b(%rip),%rcx        # 29d10 <g_enclave_base>
    8095:	48 8b 31             	mov    (%rcx),%rsi
    8098:	48 8d 0d 69 1c 02 00 	lea    0x21c69(%rip),%rcx        # 29d08 <g_enclave_size>
    809f:	4c 8b 01             	mov    (%rcx),%r8
    80a2:	49 01 f0             	add    %rsi,%r8
    80a5:	4c 89 c1             	mov    %r8,%rcx
    80a8:	48 83 e9 01          	sub    $0x1,%rcx
    80ac:	48 39 ca             	cmp    %rcx,%rdx
    80af:	77 0f                	ja     80c0 <sgx_ocfree+0x50>
    80b1:	48 39 fe             	cmp    %rdi,%rsi
    80b4:	77 0a                	ja     80c0 <sgx_ocfree+0x50>
    80b6:	e8 d9 86 01 00       	call   20794 <abort>
    80bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    80c0:	48 8b 40 20          	mov    0x20(%rax),%rax
    80c4:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    80cb:	48 83 c4 08          	add    $0x8,%rsp
    80cf:	c3                   	ret    

00000000000080d0 <sgx_read_rand>:
    80d0:	f3 0f 1e fa          	endbr64 
    80d4:	41 56                	push   %r14
    80d6:	41 55                	push   %r13
    80d8:	41 54                	push   %r12
    80da:	55                   	push   %rbp
    80db:	53                   	push   %rbx
    80dc:	48 83 ec 10          	sub    $0x10,%rsp
    80e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    80e7:	00 00 
    80e9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    80ee:	31 c0                	xor    %eax,%eax
    80f0:	48 85 ff             	test   %rdi,%rdi
    80f3:	0f 84 e7 00 00 00    	je     81e0 <sgx_read_rand+0x110>
    80f9:	48 89 f5             	mov    %rsi,%rbp
    80fc:	48 85 f6             	test   %rsi,%rsi
    80ff:	0f 84 db 00 00 00    	je     81e0 <sgx_read_rand+0x110>
    8105:	48 8d 05 04 1c 02 00 	lea    0x21c04(%rip),%rax        # 29d10 <g_enclave_base>
    810c:	48 89 fb             	mov    %rdi,%rbx
    810f:	48 8b 08             	mov    (%rax),%rcx
    8112:	48 8d 05 ef 1b 02 00 	lea    0x21bef(%rip),%rax        # 29d08 <g_enclave_size>
    8119:	48 8b 10             	mov    (%rax),%rdx
    811c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    8120:	31 f6                	xor    %esi,%esi
    8122:	48 01 ca             	add    %rcx,%rdx
    8125:	48 01 f8             	add    %rdi,%rax
    8128:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
    812c:	40 0f 92 c6          	setb   %sil
    8130:	72 3e                	jb     8170 <sgx_read_rand+0xa0>
    8132:	48 39 cf             	cmp    %rcx,%rdi
    8135:	72 39                	jb     8170 <sgx_read_rand+0xa0>
    8137:	48 39 c2             	cmp    %rax,%rdx
    813a:	73 44                	jae    8180 <sgx_read_rand+0xb0>
    813c:	48 39 c1             	cmp    %rax,%rcx
    813f:	77 3f                	ja     8180 <sgx_read_rand+0xb0>
    8141:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8147:	48 39 d3             	cmp    %rdx,%rbx
    814a:	77 34                	ja     8180 <sgx_read_rand+0xb0>
    814c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8151:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8158:	00 00 
    815a:	0f 85 9b 00 00 00    	jne    81fb <sgx_read_rand+0x12b>
    8160:	48 83 c4 10          	add    $0x10,%rsp
    8164:	44 89 c0             	mov    %r8d,%eax
    8167:	5b                   	pop    %rbx
    8168:	5d                   	pop    %rbp
    8169:	41 5c                	pop    %r12
    816b:	41 5d                	pop    %r13
    816d:	41 5e                	pop    %r14
    816f:	c3                   	ret    
    8170:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8176:	48 85 f6             	test   %rsi,%rsi
    8179:	75 d1                	jne    814c <sgx_read_rand+0x7c>
    817b:	eb bf                	jmp    813c <sgx_read_rand+0x6c>
    817d:	0f 1f 00             	nopl   (%rax)
    8180:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    8187:	00 
    8188:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    818d:	41 be 04 00 00 00    	mov    $0x4,%r14d
    8193:	4c 89 ef             	mov    %r13,%rdi
    8196:	e8 d6 85 01 00       	call   20771 <do_rdrand>
    819b:	85 c0                	test   %eax,%eax
    819d:	74 51                	je     81f0 <sgx_read_rand+0x120>
    819f:	48 83 fd 04          	cmp    $0x4,%rbp
    81a3:	4d 89 f4             	mov    %r14,%r12
    81a6:	48 89 df             	mov    %rbx,%rdi
    81a9:	4c 89 ee             	mov    %r13,%rsi
    81ac:	4c 0f 46 e5          	cmovbe %rbp,%r12
    81b0:	4c 89 e2             	mov    %r12,%rdx
    81b3:	4c 01 e3             	add    %r12,%rbx
    81b6:	e8 05 66 00 00       	call   e7c0 <memcpy>
    81bb:	4c 29 e5             	sub    %r12,%rbp
    81be:	75 d3                	jne    8193 <sgx_read_rand+0xc3>
    81c0:	b9 04 00 00 00       	mov    $0x4,%ecx
    81c5:	31 d2                	xor    %edx,%edx
    81c7:	be 04 00 00 00       	mov    $0x4,%esi
    81cc:	4c 89 ef             	mov    %r13,%rdi
    81cf:	e8 cc 67 00 00       	call   e9a0 <memset_s>
    81d4:	45 31 c0             	xor    %r8d,%r8d
    81d7:	e9 70 ff ff ff       	jmp    814c <sgx_read_rand+0x7c>
    81dc:	0f 1f 40 00          	nopl   0x0(%rax)
    81e0:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    81e6:	e9 61 ff ff ff       	jmp    814c <sgx_read_rand+0x7c>
    81eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    81f0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    81f6:	e9 51 ff ff ff       	jmp    814c <sgx_read_rand+0x7c>
    81fb:	e8 50 69 00 00       	call   eb50 <__stack_chk_fail>

0000000000008200 <check_static_stack_canary>:
    8200:	f3 0f 1e fa          	endbr64 
    8204:	48 8d 05 ed 1a 02 00 	lea    0x21aed(%rip),%rax        # 29cf8 <__intel_security_cookie>
    820b:	48 8b 00             	mov    (%rax),%rax
    820e:	48 39 87 58 fd fe ff 	cmp    %rax,-0x102a8(%rdi)
    8215:	0f 95 c0             	setne  %al
    8218:	0f b6 c0             	movzbl %al,%eax
    821b:	f7 d8                	neg    %eax
    821d:	c3                   	ret    
    821e:	66 90                	xchg   %ax,%ax

0000000000008220 <sgx_wrpkru>:
    8220:	f3 0f 1e fa          	endbr64 
    8224:	53                   	push   %rbx
    8225:	89 fb                	mov    %edi,%ebx
    8227:	e8 84 1a 00 00       	call   9cb0 <is_pkru_enabled>
    822c:	45 31 c0             	xor    %r8d,%r8d
    822f:	84 c0                	test   %al,%al
    8231:	74 11                	je     8244 <sgx_wrpkru+0x24>
    8233:	89 d8                	mov    %ebx,%eax
    8235:	44 89 c1             	mov    %r8d,%ecx
    8238:	44 89 c2             	mov    %r8d,%edx
    823b:	0f 01 ef             	wrpkru 
    823e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8244:	44 89 c0             	mov    %r8d,%eax
    8247:	5b                   	pop    %rbx
    8248:	c3                   	ret    
    8249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000008250 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>:
    8250:	41 57                	push   %r15
    8252:	31 c0                	xor    %eax,%eax
    8254:	49 89 ff             	mov    %rdi,%r15
    8257:	41 56                	push   %r14
    8259:	41 55                	push   %r13
    825b:	41 54                	push   %r12
    825d:	49 89 cc             	mov    %rcx,%r12
    8260:	55                   	push   %rbp
    8261:	48 89 f5             	mov    %rsi,%rbp
    8264:	53                   	push   %rbx
    8265:	48 83 ec 18          	sub    $0x18,%rsp
    8269:	4c 8d 2d 10 a7 01 00 	lea    0x1a710(%rip),%r13        # 22980 <g_global_data>
    8270:	41 8b 8d 38 01 00 00 	mov    0x138(%r13),%ecx
    8277:	85 c9                	test   %ecx,%ecx
    8279:	75 17                	jne    8292 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x42>
    827b:	e9 98 00 00 00       	jmp    8318 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    8280:	41 8b 8d 38 01 00 00 	mov    0x138(%r13),%ecx
    8287:	83 c0 01             	add    $0x1,%eax
    828a:	39 c1                	cmp    %eax,%ecx
    828c:	0f 86 86 00 00 00    	jbe    8318 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    8292:	41 89 c6             	mov    %eax,%r14d
    8295:	49 8d 5e 0a          	lea    0xa(%r14),%rbx
    8299:	48 c1 e3 05          	shl    $0x5,%rbx
    829d:	4c 01 eb             	add    %r13,%rbx
    82a0:	0f b7 0b             	movzwl (%rbx),%ecx
    82a3:	66 39 ca             	cmp    %cx,%dx
    82a6:	75 d8                	jne    8280 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x30>
    82a8:	48 85 db             	test   %rbx,%rbx
    82ab:	74 6b                	je     8318 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    82ad:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    82b2:	e8 0b 81 01 00       	call   203c2 <get_enclave_base>
    82b7:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    82bb:	8b 53 04             	mov    0x4(%rbx),%edx
    82be:	49 01 cc             	add    %rcx,%r12
    82c1:	4c 01 e0             	add    %r12,%rax
    82c4:	49 39 c7             	cmp    %rax,%r15
    82c7:	72 4f                	jb     8318 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    82c9:	48 c1 e5 0c          	shl    $0xc,%rbp
    82cd:	48 c1 e2 0c          	shl    $0xc,%rdx
    82d1:	49 01 ef             	add    %rbp,%r15
    82d4:	48 01 d0             	add    %rdx,%rax
    82d7:	49 39 c7             	cmp    %rax,%r15
    82da:	77 3c                	ja     8318 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    82dc:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    82e1:	31 c0                	xor    %eax,%eax
    82e3:	4d 85 c0             	test   %r8,%r8
    82e6:	74 1a                	je     8302 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xb2>
    82e8:	49 c1 e6 05          	shl    $0x5,%r14
    82ec:	4d 01 f5             	add    %r14,%r13
    82ef:	49 8b 95 58 01 00 00 	mov    0x158(%r13),%rdx
    82f6:	49 89 10             	mov    %rdx,(%r8)
    82f9:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    82fd:	66 41 89 50 08       	mov    %dx,0x8(%r8)
    8302:	48 83 c4 18          	add    $0x18,%rsp
    8306:	5b                   	pop    %rbx
    8307:	5d                   	pop    %rbp
    8308:	41 5c                	pop    %r12
    830a:	41 5d                	pop    %r13
    830c:	41 5e                	pop    %r14
    830e:	41 5f                	pop    %r15
    8310:	c3                   	ret    
    8311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8318:	48 83 c4 18          	add    $0x18,%rsp
    831c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8321:	5b                   	pop    %rbx
    8322:	5d                   	pop    %rbp
    8323:	41 5c                	pop    %r12
    8325:	41 5d                	pop    %r13
    8327:	41 5e                	pop    %r14
    8329:	41 5f                	pop    %r15
    832b:	c3                   	ret    
    832c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    8330:	41 57                	push   %r15
    8332:	41 56                	push   %r14
    8334:	41 55                	push   %r13
    8336:	41 54                	push   %r12
    8338:	49 89 f4             	mov    %rsi,%r12
    833b:	55                   	push   %rbp
    833c:	49 c1 e4 0c          	shl    $0xc,%r12
    8340:	53                   	push   %rbx
    8341:	4c 89 e0             	mov    %r12,%rax
    8344:	48 f7 d0             	not    %rax
    8347:	48 83 ec 28          	sub    $0x28,%rsp
    834b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    8350:	48 39 f8             	cmp    %rdi,%rax
    8353:	0f 82 8f 01 00 00    	jb     84e8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b8>
    8359:	49 89 fe             	mov    %rdi,%r14
    835c:	48 89 f5             	mov    %rsi,%rbp
    835f:	49 89 cd             	mov    %rcx,%r13
    8362:	e8 59 16 00 00       	call   99c0 <get_heap_base>
    8367:	48 89 c3             	mov    %rax,%rbx
    836a:	e8 e1 16 00 00       	call   9a50 <get_heap_min_size>
    836f:	48 01 c3             	add    %rax,%rbx
    8372:	e8 69 16 00 00       	call   99e0 <get_heap_size>
    8377:	49 89 c7             	mov    %rax,%r15
    837a:	e8 d1 16 00 00       	call   9a50 <get_heap_min_size>
    837f:	49 29 c7             	sub    %rax,%r15
    8382:	49 39 de             	cmp    %rbx,%r14
    8385:	72 39                	jb     83c0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    8387:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
    838b:	4c 01 fb             	add    %r15,%rbx
    838e:	48 39 d8             	cmp    %rbx,%rax
    8391:	77 2d                	ja     83c0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    8393:	4d 85 ed             	test   %r13,%r13
    8396:	74 12                	je     83aa <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    8398:	b8 08 00 00 00       	mov    $0x8,%eax
    839d:	49 c7 45 00 03 02 00 	movq   $0x203,0x0(%r13)
    83a4:	00 
    83a5:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    83aa:	31 c0                	xor    %eax,%eax
    83ac:	48 83 c4 28          	add    $0x28,%rsp
    83b0:	5b                   	pop    %rbx
    83b1:	5d                   	pop    %rbp
    83b2:	41 5c                	pop    %r12
    83b4:	41 5d                	pop    %r13
    83b6:	41 5e                	pop    %r14
    83b8:	41 5f                	pop    %r15
    83ba:	c3                   	ret    
    83bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    83c0:	31 c9                	xor    %ecx,%ecx
    83c2:	4d 89 e8             	mov    %r13,%r8
    83c5:	ba 07 00 00 00       	mov    $0x7,%edx
    83ca:	48 89 ee             	mov    %rbp,%rsi
    83cd:	4c 89 f7             	mov    %r14,%rdi
    83d0:	e8 7b fe ff ff       	call   8250 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    83d5:	85 c0                	test   %eax,%eax
    83d7:	74 d1                	je     83aa <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    83d9:	48 8d 15 70 19 02 00 	lea    0x21970(%rip),%rdx        # 29d50 <rsrv_mem_size>
    83e0:	48 8d 05 71 19 02 00 	lea    0x21971(%rip),%rax        # 29d58 <rsrv_mem_base>
    83e7:	48 8b 0a             	mov    (%rdx),%rcx
    83ea:	48 8d 15 57 19 02 00 	lea    0x21957(%rip),%rdx        # 29d48 <rsrv_mem_min_size>
    83f1:	48 8b 00             	mov    (%rax),%rax
    83f4:	48 8b 32             	mov    (%rdx),%rsi
    83f7:	48 01 c6             	add    %rax,%rsi
    83fa:	49 39 f6             	cmp    %rsi,%r14
    83fd:	72 0b                	jb     840a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xda>
    83ff:	4d 01 f4             	add    %r14,%r12
    8402:	48 01 c8             	add    %rcx,%rax
    8405:	49 39 c4             	cmp    %rax,%r12
    8408:	76 89                	jbe    8393 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x63>
    840a:	48 8d 15 6f a5 01 00 	lea    0x1a56f(%rip),%rdx        # 22980 <g_global_data>
    8411:	8b 82 38 01 00 00    	mov    0x138(%rdx),%eax
    8417:	85 c0                	test   %eax,%eax
    8419:	0f 84 d3 00 00 00    	je     84f2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    841f:	31 c0                	xor    %eax,%eax
    8421:	eb 16                	jmp    8439 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x109>
    8423:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8428:	8b 8a 38 01 00 00    	mov    0x138(%rdx),%ecx
    842e:	83 c0 01             	add    $0x1,%eax
    8431:	39 c1                	cmp    %eax,%ecx
    8433:	0f 86 b9 00 00 00    	jbe    84f2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    8439:	41 89 c1             	mov    %eax,%r9d
    843c:	49 83 c1 0a          	add    $0xa,%r9
    8440:	49 c1 e1 05          	shl    $0x5,%r9
    8444:	49 01 d1             	add    %rdx,%r9
    8447:	41 0f b7 09          	movzwl (%r9),%ecx
    844b:	66 81 f9 13 10       	cmp    $0x1013,%cx
    8450:	75 d6                	jne    8428 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xf8>
    8452:	4d 85 c9             	test   %r9,%r9
    8455:	0f 84 97 00 00 00    	je     84f2 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    845b:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    8461:	4d 89 cf             	mov    %r9,%r15
    8464:	41 8b 47 04          	mov    0x4(%r15),%eax
    8468:	31 db                	xor    %ebx,%ebx
    846a:	83 f8 ff             	cmp    $0xffffffff,%eax
    846d:	75 17                	jne    8486 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x156>
    846f:	eb 69                	jmp    84da <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1aa>
    8471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8478:	41 8b 47 04          	mov    0x4(%r15),%eax
    847c:	83 c3 01             	add    $0x1,%ebx
    847f:	83 c0 01             	add    $0x1,%eax
    8482:	39 d8                	cmp    %ebx,%eax
    8484:	76 54                	jbe    84da <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1aa>
    8486:	49 8b 4f 08          	mov    0x8(%r15),%rcx
    848a:	89 d8                	mov    %ebx,%eax
    848c:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    8490:	4d 89 e8             	mov    %r13,%r8
    8493:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    8498:	44 89 e2             	mov    %r12d,%edx
    849b:	48 89 ee             	mov    %rbp,%rsi
    849e:	4c 89 f7             	mov    %r14,%rdi
    84a1:	48 0f af c8          	imul   %rax,%rcx
    84a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    84aa:	e8 a1 fd ff ff       	call   8250 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    84af:	85 c0                	test   %eax,%eax
    84b1:	75 c5                	jne    8478 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x148>
    84b3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    84b8:	48 85 ff             	test   %rdi,%rdi
    84bb:	0f 84 e9 fe ff ff    	je     83aa <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    84c1:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    84c6:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    84cb:	48 8b 16             	mov    (%rsi),%rdx
    84ce:	48 0f af da          	imul   %rdx,%rbx
    84d2:	48 89 1f             	mov    %rbx,(%rdi)
    84d5:	e9 d2 fe ff ff       	jmp    83ac <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    84da:	41 83 c4 01          	add    $0x1,%r12d
    84de:	41 83 fc 13          	cmp    $0x13,%r12d
    84e2:	75 80                	jne    8464 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x134>
    84e4:	0f 1f 40 00          	nopl   0x0(%rax)
    84e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    84ed:	e9 ba fe ff ff       	jmp    83ac <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    84f2:	bb 0e 00 00 00       	mov    $0xe,%ebx
    84f7:	31 c9                	xor    %ecx,%ecx
    84f9:	4d 89 e8             	mov    %r13,%r8
    84fc:	89 da                	mov    %ebx,%edx
    84fe:	48 89 ee             	mov    %rbp,%rsi
    8501:	4c 89 f7             	mov    %r14,%rdi
    8504:	e8 47 fd ff ff       	call   8250 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    8509:	85 c0                	test   %eax,%eax
    850b:	74 0a                	je     8517 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1e7>
    850d:	83 c3 01             	add    $0x1,%ebx
    8510:	83 fb 13             	cmp    $0x13,%ebx
    8513:	75 e2                	jne    84f7 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c7>
    8515:	eb d1                	jmp    84e8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b8>
    8517:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    851c:	48 85 ff             	test   %rdi,%rdi
    851f:	0f 84 85 fe ff ff    	je     83aa <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    8525:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    852c:	e9 7b fe ff ff       	jmp    83ac <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    8531:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8538:	00 00 00 
    853b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008540 <_ZL19sgx_accept_backwardmmm>:
    8540:	55                   	push   %rbp
    8541:	48 89 e5             	mov    %rsp,%rbp
    8544:	41 55                	push   %r13
    8546:	41 54                	push   %r12
    8548:	49 89 f4             	mov    %rsi,%r12
    854b:	53                   	push   %rbx
    854c:	48 89 d3             	mov    %rdx,%rbx
    854f:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    8553:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    8557:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    855e:	00 00 
    8560:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8565:	31 c0                	xor    %eax,%eax
    8567:	49 89 e5             	mov    %rsp,%r13
    856a:	48 89 3c 24          	mov    %rdi,(%rsp)
    856e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8575:	00 00 
    8577:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    857e:	00 00 
    8580:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    8587:	00 00 
    8589:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    8590:	00 00 
    8592:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8599:	00 00 
    859b:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    85a2:	00 00 
    85a4:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    85ab:	00 00 
    85ad:	eb 17                	jmp    85c6 <_ZL19sgx_accept_backwardmmm+0x86>
    85af:	90                   	nop
    85b0:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    85b7:	4c 89 ef             	mov    %r13,%rdi
    85ba:	48 89 de             	mov    %rbx,%rsi
    85bd:	e8 78 81 01 00       	call   2073a <do_eaccept>
    85c2:	85 c0                	test   %eax,%eax
    85c4:	75 22                	jne    85e8 <_ZL19sgx_accept_backwardmmm+0xa8>
    85c6:	4c 39 e3             	cmp    %r12,%rbx
    85c9:	77 e5                	ja     85b0 <_ZL19sgx_accept_backwardmmm+0x70>
    85cb:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    85d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    85d7:	00 00 
    85d9:	75 12                	jne    85ed <_ZL19sgx_accept_backwardmmm+0xad>
    85db:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    85df:	31 c0                	xor    %eax,%eax
    85e1:	5b                   	pop    %rbx
    85e2:	41 5c                	pop    %r12
    85e4:	41 5d                	pop    %r13
    85e6:	5d                   	pop    %rbp
    85e7:	c3                   	ret    
    85e8:	e8 a7 81 01 00       	call   20794 <abort>
    85ed:	e8 5e 65 00 00       	call   eb50 <__stack_chk_fail>
    85f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    85f9:	00 00 00 
    85fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008600 <is_dynamic_thread>:
    8600:	f3 0f 1e fa          	endbr64 
    8604:	48 83 ec 28          	sub    $0x28,%rsp
    8608:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    860f:	00 00 
    8611:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8616:	31 c0                	xor    %eax,%eax
    8618:	48 85 ff             	test   %rdi,%rdi
    861b:	74 13                	je     8630 <is_dynamic_thread+0x30>
    861d:	31 d2                	xor    %edx,%edx
    861f:	48 89 e1             	mov    %rsp,%rcx
    8622:	be 01 00 00 00       	mov    $0x1,%esi
    8627:	e8 04 fd ff ff       	call   8330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    862c:	85 c0                	test   %eax,%eax
    862e:	74 20                	je     8650 <is_dynamic_thread+0x50>
    8630:	31 c0                	xor    %eax,%eax
    8632:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8637:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    863e:	00 00 
    8640:	75 1d                	jne    865f <is_dynamic_thread+0x5f>
    8642:	48 83 c4 28          	add    $0x28,%rsp
    8646:	c3                   	ret    
    8647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    864e:	00 00 
    8650:	31 c0                	xor    %eax,%eax
    8652:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    8659:	00 
    865a:	0f 94 c0             	sete   %al
    865d:	eb d3                	jmp    8632 <is_dynamic_thread+0x32>
    865f:	e8 ec 64 00 00       	call   eb50 <__stack_chk_fail>
    8664:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    866b:	00 00 00 
    866e:	66 90                	xchg   %ax,%ax

0000000000008670 <is_dynamic_thread_exist>:
    8670:	f3 0f 1e fa          	endbr64 
    8674:	48 8d 05 a1 16 02 00 	lea    0x216a1(%rip),%rax        # 29d1c <EDMM_supported>
    867b:	8b 00                	mov    (%rax),%eax
    867d:	85 c0                	test   %eax,%eax
    867f:	74 51                	je     86d2 <is_dynamic_thread_exist+0x62>
    8681:	48 8d 0d f8 a2 01 00 	lea    0x1a2f8(%rip),%rcx        # 22980 <g_global_data>
    8688:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    868e:	85 c0                	test   %eax,%eax
    8690:	74 3e                	je     86d0 <is_dynamic_thread_exist+0x60>
    8692:	31 d2                	xor    %edx,%edx
    8694:	eb 17                	jmp    86ad <is_dynamic_thread_exist+0x3d>
    8696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    869d:	00 00 00 
    86a0:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    86a6:	83 c2 01             	add    $0x1,%edx
    86a9:	39 d0                	cmp    %edx,%eax
    86ab:	76 23                	jbe    86d0 <is_dynamic_thread_exist+0x60>
    86ad:	89 d0                	mov    %edx,%eax
    86af:	48 83 c0 0a          	add    $0xa,%rax
    86b3:	48 c1 e0 05          	shl    $0x5,%rax
    86b7:	48 01 c8             	add    %rcx,%rax
    86ba:	0f b7 30             	movzwl (%rax),%esi
    86bd:	66 83 fe 12          	cmp    $0x12,%si
    86c1:	75 dd                	jne    86a0 <is_dynamic_thread_exist+0x30>
    86c3:	48 85 c0             	test   %rax,%rax
    86c6:	0f 95 c0             	setne  %al
    86c9:	0f b6 c0             	movzbl %al,%eax
    86cc:	c3                   	ret    
    86cd:	0f 1f 00             	nopl   (%rax)
    86d0:	31 c0                	xor    %eax,%eax
    86d2:	c3                   	ret    
    86d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    86da:	00 00 00 
    86dd:	0f 1f 00             	nopl   (%rax)

00000000000086e0 <get_dynamic_stack_max_page>:
    86e0:	f3 0f 1e fa          	endbr64 
    86e4:	48 8d 0d 95 a2 01 00 	lea    0x1a295(%rip),%rcx        # 22980 <g_global_data>
    86eb:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    86f1:	85 c0                	test   %eax,%eax
    86f3:	74 3d                	je     8732 <get_dynamic_stack_max_page+0x52>
    86f5:	31 d2                	xor    %edx,%edx
    86f7:	eb 14                	jmp    870d <get_dynamic_stack_max_page+0x2d>
    86f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8700:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    8706:	83 c2 01             	add    $0x1,%edx
    8709:	39 d0                	cmp    %edx,%eax
    870b:	76 23                	jbe    8730 <get_dynamic_stack_max_page+0x50>
    870d:	89 d0                	mov    %edx,%eax
    870f:	48 83 c0 0a          	add    $0xa,%rax
    8713:	48 c1 e0 05          	shl    $0x5,%rax
    8717:	48 01 c8             	add    %rcx,%rax
    871a:	0f b7 30             	movzwl (%rax),%esi
    871d:	66 83 fe 07          	cmp    $0x7,%si
    8721:	75 dd                	jne    8700 <get_dynamic_stack_max_page+0x20>
    8723:	48 85 c0             	test   %rax,%rax
    8726:	74 08                	je     8730 <get_dynamic_stack_max_page+0x50>
    8728:	8b 40 04             	mov    0x4(%rax),%eax
    872b:	c3                   	ret    
    872c:	0f 1f 40 00          	nopl   0x0(%rax)
    8730:	31 c0                	xor    %eax,%eax
    8732:	c3                   	ret    
    8733:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    873a:	00 00 00 
    873d:	0f 1f 00             	nopl   (%rax)

0000000000008740 <sgx_accept_forward>:
    8740:	f3 0f 1e fa          	endbr64 
    8744:	55                   	push   %rbp
    8745:	48 89 e5             	mov    %rsp,%rbp
    8748:	41 55                	push   %r13
    874a:	41 54                	push   %r12
    874c:	53                   	push   %rbx
    874d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    8751:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    8755:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    875c:	00 00 
    875e:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8763:	31 c0                	xor    %eax,%eax
    8765:	48 89 3c 24          	mov    %rdi,(%rsp)
    8769:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8770:	00 00 
    8772:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8779:	00 00 
    877b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    8782:	00 00 
    8784:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    878b:	00 00 
    878d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8794:	00 00 
    8796:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    879d:	00 00 
    879f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    87a6:	00 00 
    87a8:	48 39 d6             	cmp    %rdx,%rsi
    87ab:	73 2e                	jae    87db <sgx_accept_forward+0x9b>
    87ad:	48 89 f3             	mov    %rsi,%rbx
    87b0:	49 89 d4             	mov    %rdx,%r12
    87b3:	49 89 e5             	mov    %rsp,%r13
    87b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    87bd:	00 00 00 
    87c0:	48 89 de             	mov    %rbx,%rsi
    87c3:	4c 89 ef             	mov    %r13,%rdi
    87c6:	e8 6f 7f 01 00       	call   2073a <do_eaccept>
    87cb:	85 c0                	test   %eax,%eax
    87cd:	75 29                	jne    87f8 <sgx_accept_forward+0xb8>
    87cf:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    87d6:	49 39 dc             	cmp    %rbx,%r12
    87d9:	77 e5                	ja     87c0 <sgx_accept_forward+0x80>
    87db:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    87e0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    87e7:	00 00 
    87e9:	75 12                	jne    87fd <sgx_accept_forward+0xbd>
    87eb:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    87ef:	31 c0                	xor    %eax,%eax
    87f1:	5b                   	pop    %rbx
    87f2:	41 5c                	pop    %r12
    87f4:	41 5d                	pop    %r13
    87f6:	5d                   	pop    %rbp
    87f7:	c3                   	ret    
    87f8:	e8 97 7f 01 00       	call   20794 <abort>
    87fd:	e8 4e 63 00 00       	call   eb50 <__stack_chk_fail>
    8802:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8809:	00 00 00 
    880c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008810 <_Z18accept_post_removePVK9_layout_tS1_m>:
    8810:	f3 0f 1e fa          	endbr64 
    8814:	48 39 f7             	cmp    %rsi,%rdi
    8817:	0f 83 d3 00 00 00    	jae    88f0 <_Z18accept_post_removePVK9_layout_tS1_m+0xe0>
    881d:	41 56                	push   %r14
    881f:	41 55                	push   %r13
    8821:	41 54                	push   %r12
    8823:	49 89 d4             	mov    %rdx,%r12
    8826:	55                   	push   %rbp
    8827:	48 89 f5             	mov    %rsi,%rbp
    882a:	53                   	push   %rbx
    882b:	48 89 fb             	mov    %rdi,%rbx
    882e:	eb 15                	jmp    8845 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    8830:	0f b7 03             	movzwl (%rbx),%eax
    8833:	f6 c4 10             	test   $0x10,%ah
    8836:	75 58                	jne    8890 <_Z18accept_post_removePVK9_layout_tS1_m+0x80>
    8838:	48 83 c3 20          	add    $0x20,%rbx
    883c:	48 39 dd             	cmp    %rbx,%rbp
    883f:	0f 86 97 00 00 00    	jbe    88dc <_Z18accept_post_removePVK9_layout_tS1_m+0xcc>
    8845:	0f b7 03             	movzwl (%rbx),%eax
    8848:	f6 c4 10             	test   $0x10,%ah
    884b:	75 e3                	jne    8830 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    884d:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    8851:	a8 10                	test   $0x10,%al
    8853:	74 db                	je     8830 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    8855:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    8859:	4e 8d 2c 26          	lea    (%rsi,%r12,1),%r13
    885d:	e8 60 7b 01 00       	call   203c2 <get_enclave_base>
    8862:	8b 53 04             	mov    0x4(%rbx),%edx
    8865:	bf 10 04 00 00       	mov    $0x410,%edi
    886a:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    886e:	48 c1 e2 0c          	shl    $0xc,%rdx
    8872:	48 01 f2             	add    %rsi,%rdx
    8875:	e8 c6 fe ff ff       	call   8740 <sgx_accept_forward>
    887a:	85 c0                	test   %eax,%eax
    887c:	74 ba                	je     8838 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    887e:	5b                   	pop    %rbx
    887f:	5d                   	pop    %rbp
    8880:	41 5c                	pop    %r12
    8882:	41 5d                	pop    %r13
    8884:	41 5e                	pop    %r14
    8886:	c3                   	ret    
    8887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    888e:	00 00 
    8890:	8b 43 04             	mov    0x4(%rbx),%eax
    8893:	85 c0                	test   %eax,%eax
    8895:	74 a1                	je     8838 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    8897:	45 31 ed             	xor    %r13d,%r13d
    889a:	45 31 f6             	xor    %r14d,%r14d
    889d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    88a1:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    88a5:	48 89 de             	mov    %rbx,%rsi
    88a8:	f7 df                	neg    %edi
    88aa:	49 01 c6             	add    %rax,%r14
    88ad:	48 63 ff             	movslq %edi,%rdi
    88b0:	4c 89 f2             	mov    %r14,%rdx
    88b3:	48 c1 e7 05          	shl    $0x5,%rdi
    88b7:	48 01 df             	add    %rbx,%rdi
    88ba:	e8 51 ff ff ff       	call   8810 <_Z18accept_post_removePVK9_layout_tS1_m>
    88bf:	85 c0                	test   %eax,%eax
    88c1:	75 bb                	jne    887e <_Z18accept_post_removePVK9_layout_tS1_m+0x6e>
    88c3:	8b 43 04             	mov    0x4(%rbx),%eax
    88c6:	41 83 c5 01          	add    $0x1,%r13d
    88ca:	44 39 e8             	cmp    %r13d,%eax
    88cd:	77 ce                	ja     889d <_Z18accept_post_removePVK9_layout_tS1_m+0x8d>
    88cf:	48 83 c3 20          	add    $0x20,%rbx
    88d3:	48 39 dd             	cmp    %rbx,%rbp
    88d6:	0f 87 69 ff ff ff    	ja     8845 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    88dc:	5b                   	pop    %rbx
    88dd:	31 c0                	xor    %eax,%eax
    88df:	5d                   	pop    %rbp
    88e0:	41 5c                	pop    %r12
    88e2:	41 5d                	pop    %r13
    88e4:	41 5e                	pop    %r14
    88e6:	c3                   	ret    
    88e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    88ee:	00 00 
    88f0:	31 c0                	xor    %eax,%eax
    88f2:	c3                   	ret    
    88f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    88fa:	00 00 00 
    88fd:	0f 1f 00             	nopl   (%rax)

0000000000008900 <apply_pages_within_exception>:
    8900:	f3 0f 1e fa          	endbr64 
    8904:	55                   	push   %rbp
    8905:	48 89 e5             	mov    %rsp,%rbp
    8908:	41 56                	push   %r14
    890a:	41 55                	push   %r13
    890c:	41 54                	push   %r12
    890e:	53                   	push   %rbx
    890f:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    8913:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    8917:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    891e:	00 00 
    8920:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    8925:	31 c0                	xor    %eax,%eax
    8927:	48 85 ff             	test   %rdi,%rdi
    892a:	0f 84 b0 00 00 00    	je     89e0 <apply_pages_within_exception+0xe0>
    8930:	31 c9                	xor    %ecx,%ecx
    8932:	31 d2                	xor    %edx,%edx
    8934:	48 89 fb             	mov    %rdi,%rbx
    8937:	49 89 f4             	mov    %rsi,%r12
    893a:	e8 f1 f9 ff ff       	call   8330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    893f:	41 89 c5             	mov    %eax,%r13d
    8942:	85 c0                	test   %eax,%eax
    8944:	0f 85 96 00 00 00    	jne    89e0 <apply_pages_within_exception+0xe0>
    894a:	49 c1 e4 0c          	shl    $0xc,%r12
    894e:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    8955:	00 
    8956:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    895d:	00 00 
    895f:	49 01 dc             	add    %rbx,%r12
    8962:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8969:	00 00 
    896b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    8972:	00 00 
    8974:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    897b:	00 00 
    897d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8984:	00 00 
    8986:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    898d:	00 00 
    898f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    8996:	00 00 
    8998:	4c 39 e3             	cmp    %r12,%rbx
    899b:	73 1e                	jae    89bb <apply_pages_within_exception+0xbb>
    899d:	49 89 e6             	mov    %rsp,%r14
    89a0:	48 89 de             	mov    %rbx,%rsi
    89a3:	4c 89 f7             	mov    %r14,%rdi
    89a6:	e8 8f 7d 01 00       	call   2073a <do_eaccept>
    89ab:	85 c0                	test   %eax,%eax
    89ad:	75 39                	jne    89e8 <apply_pages_within_exception+0xe8>
    89af:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    89b6:	49 39 dc             	cmp    %rbx,%r12
    89b9:	77 e5                	ja     89a0 <apply_pages_within_exception+0xa0>
    89bb:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    89c0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    89c7:	00 00 
    89c9:	75 22                	jne    89ed <apply_pages_within_exception+0xed>
    89cb:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    89cf:	44 89 e8             	mov    %r13d,%eax
    89d2:	5b                   	pop    %rbx
    89d3:	41 5c                	pop    %r12
    89d5:	41 5d                	pop    %r13
    89d7:	41 5e                	pop    %r14
    89d9:	5d                   	pop    %rbp
    89da:	c3                   	ret    
    89db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    89e0:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    89e6:	eb d3                	jmp    89bb <apply_pages_within_exception+0xbb>
    89e8:	e8 a7 7d 01 00       	call   20794 <abort>
    89ed:	e8 5e 61 00 00       	call   eb50 <__stack_chk_fail>
    89f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    89f9:	00 00 00 
    89fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008a00 <apply_EPC_pages>:
    8a00:	f3 0f 1e fa          	endbr64 
    8a04:	55                   	push   %rbp
    8a05:	53                   	push   %rbx
    8a06:	48 83 ec 28          	sub    $0x28,%rsp
    8a0a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8a11:	00 00 
    8a13:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8a18:	31 c0                	xor    %eax,%eax
    8a1a:	48 85 ff             	test   %rdi,%rdi
    8a1d:	74 61                	je     8a80 <apply_EPC_pages+0x80>
    8a1f:	31 d2                	xor    %edx,%edx
    8a21:	48 89 e1             	mov    %rsp,%rcx
    8a24:	48 89 fd             	mov    %rdi,%rbp
    8a27:	48 89 f3             	mov    %rsi,%rbx
    8a2a:	e8 01 f9 ff ff       	call   8330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    8a2f:	85 c0                	test   %eax,%eax
    8a31:	75 4d                	jne    8a80 <apply_EPC_pages+0x80>
    8a33:	48 c1 e3 0c          	shl    $0xc,%rbx
    8a37:	48 89 ee             	mov    %rbp,%rsi
    8a3a:	bf 0b 02 00 00       	mov    $0x20b,%edi
    8a3f:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
    8a43:	f6 44 24 08 40       	testb  $0x40,0x8(%rsp)
    8a48:	75 26                	jne    8a70 <apply_EPC_pages+0x70>
    8a4a:	e8 f1 fa ff ff       	call   8540 <_ZL19sgx_accept_backwardmmm>
    8a4f:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    8a54:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8a5b:	00 00 
    8a5d:	75 28                	jne    8a87 <apply_EPC_pages+0x87>
    8a5f:	48 83 c4 28          	add    $0x28,%rsp
    8a63:	5b                   	pop    %rbx
    8a64:	5d                   	pop    %rbp
    8a65:	c3                   	ret    
    8a66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8a6d:	00 00 00 
    8a70:	e8 cb fc ff ff       	call   8740 <sgx_accept_forward>
    8a75:	eb d8                	jmp    8a4f <apply_EPC_pages+0x4f>
    8a77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8a7e:	00 00 
    8a80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8a85:	eb c8                	jmp    8a4f <apply_EPC_pages+0x4f>
    8a87:	e8 c4 60 00 00       	call   eb50 <__stack_chk_fail>
    8a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008a90 <trim_EPC_pages>:
    8a90:	f3 0f 1e fa          	endbr64 
    8a94:	48 85 ff             	test   %rdi,%rdi
    8a97:	74 69                	je     8b02 <trim_EPC_pages+0x72>
    8a99:	55                   	push   %rbp
    8a9a:	31 c9                	xor    %ecx,%ecx
    8a9c:	31 d2                	xor    %edx,%edx
    8a9e:	48 89 f5             	mov    %rsi,%rbp
    8aa1:	53                   	push   %rbx
    8aa2:	48 89 fb             	mov    %rdi,%rbx
    8aa5:	48 83 ec 08          	sub    $0x8,%rsp
    8aa9:	e8 82 f8 ff ff       	call   8330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    8aae:	85 c0                	test   %eax,%eax
    8ab0:	75 49                	jne    8afb <trim_EPC_pages+0x6b>
    8ab2:	48 c1 e5 0c          	shl    $0xc,%rbp
    8ab6:	48 89 df             	mov    %rbx,%rdi
    8ab9:	48 01 dd             	add    %rbx,%rbp
    8abc:	48 89 ee             	mov    %rbp,%rsi
    8abf:	e8 3c 0e 00 00       	call   9900 <trim_range_ocall>
    8ac4:	48 89 ea             	mov    %rbp,%rdx
    8ac7:	48 89 de             	mov    %rbx,%rsi
    8aca:	bf 10 04 00 00       	mov    $0x410,%edi
    8acf:	e8 6c fc ff ff       	call   8740 <sgx_accept_forward>
    8ad4:	48 39 eb             	cmp    %rbp,%rbx
    8ad7:	73 1b                	jae    8af4 <trim_EPC_pages+0x64>
    8ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8ae0:	48 89 df             	mov    %rbx,%rdi
    8ae3:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    8aea:	e8 71 0e 00 00       	call   9960 <trim_range_commit_ocall>
    8aef:	48 39 dd             	cmp    %rbx,%rbp
    8af2:	77 ec                	ja     8ae0 <trim_EPC_pages+0x50>
    8af4:	48 83 c4 08          	add    $0x8,%rsp
    8af8:	5b                   	pop    %rbx
    8af9:	5d                   	pop    %rbp
    8afa:	c3                   	ret    
    8afb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b00:	eb f2                	jmp    8af4 <trim_EPC_pages+0x64>
    8b02:	83 c8 ff             	or     $0xffffffff,%eax
    8b05:	c3                   	ret    
    8b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b0d:	00 00 00 

0000000000008b10 <do_add_thread>:
    8b10:	f3 0f 1e fa          	endbr64 
    8b14:	41 55                	push   %r13
    8b16:	41 54                	push   %r12
    8b18:	55                   	push   %rbp
    8b19:	48 89 fd             	mov    %rdi,%rbp
    8b1c:	53                   	push   %rbx
    8b1d:	48 83 ec 18          	sub    $0x18,%rsp
    8b21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b28:	00 00 
    8b2a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8b2f:	31 c0                	xor    %eax,%eax
    8b31:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8b38:	00 
    8b39:	e8 84 78 01 00       	call   203c2 <get_enclave_base>
    8b3e:	31 c9                	xor    %ecx,%ecx
    8b40:	48 89 e2             	mov    %rsp,%rdx
    8b43:	be 01 00 00 00       	mov    $0x1,%esi
    8b48:	48 89 ef             	mov    %rbp,%rdi
    8b4b:	48 89 c3             	mov    %rax,%rbx
    8b4e:	e8 dd f7 ff ff       	call   8330 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    8b53:	85 c0                	test   %eax,%eax
    8b55:	75 58                	jne    8baf <do_add_thread+0x9f>
    8b57:	4c 8d 25 22 9e 01 00 	lea    0x19e22(%rip),%r12        # 22980 <g_global_data>
    8b5e:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    8b65:	00 
    8b66:	85 c0                	test   %eax,%eax
    8b68:	74 45                	je     8baf <do_add_thread+0x9f>
    8b6a:	31 d2                	xor    %edx,%edx
    8b6c:	eb 11                	jmp    8b7f <do_add_thread+0x6f>
    8b6e:	66 90                	xchg   %ax,%ax
    8b70:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    8b77:	00 
    8b78:	83 c2 01             	add    $0x1,%edx
    8b7b:	39 d0                	cmp    %edx,%eax
    8b7d:	76 30                	jbe    8baf <do_add_thread+0x9f>
    8b7f:	89 d0                	mov    %edx,%eax
    8b81:	48 83 c0 0a          	add    $0xa,%rax
    8b85:	48 c1 e0 05          	shl    $0x5,%rax
    8b89:	4c 01 e0             	add    %r12,%rax
    8b8c:	44 0f b7 28          	movzwl (%rax),%r13d
    8b90:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    8b95:	75 d9                	jne    8b70 <do_add_thread+0x60>
    8b97:	48 85 c0             	test   %rax,%rax
    8b9a:	74 13                	je     8baf <do_add_thread+0x9f>
    8b9c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8ba0:	48 8b 04 24          	mov    (%rsp),%rax
    8ba4:	48 01 d8             	add    %rbx,%rax
    8ba7:	48 01 d0             	add    %rdx,%rax
    8baa:	48 39 e8             	cmp    %rbp,%rax
    8bad:	74 46                	je     8bf5 <do_add_thread+0xe5>
    8baf:	b8 01 00 00 00       	mov    $0x1,%eax
    8bb4:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    8bb9:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    8bc0:	00 00 
    8bc2:	0f 85 fb 00 00 00    	jne    8cc3 <do_add_thread+0x1b3>
    8bc8:	48 83 c4 18          	add    $0x18,%rsp
    8bcc:	5b                   	pop    %rbx
    8bcd:	5d                   	pop    %rbp
    8bce:	41 5c                	pop    %r12
    8bd0:	41 5d                	pop    %r13
    8bd2:	c3                   	ret    
    8bd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8bd8:	48 85 c0             	test   %rax,%rax
    8bdb:	74 0d                	je     8bea <do_add_thread+0xda>
    8bdd:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    8be1:	83 e2 20             	and    $0x20,%edx
    8be4:	0f 85 b6 00 00 00    	jne    8ca0 <do_add_thread+0x190>
    8bea:	41 83 c5 01          	add    $0x1,%r13d
    8bee:	66 41 83 fd 13       	cmp    $0x13,%r13w
    8bf3:	74 3b                	je     8c30 <do_add_thread+0x120>
    8bf5:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    8bfc:	00 
    8bfd:	31 d2                	xor    %edx,%edx
    8bff:	85 c0                	test   %eax,%eax
    8c01:	75 14                	jne    8c17 <do_add_thread+0x107>
    8c03:	eb e5                	jmp    8bea <do_add_thread+0xda>
    8c05:	0f 1f 00             	nopl   (%rax)
    8c08:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    8c0f:	00 
    8c10:	83 c2 01             	add    $0x1,%edx
    8c13:	39 d0                	cmp    %edx,%eax
    8c15:	76 d3                	jbe    8bea <do_add_thread+0xda>
    8c17:	89 d0                	mov    %edx,%eax
    8c19:	48 83 c0 0a          	add    $0xa,%rax
    8c1d:	48 c1 e0 05          	shl    $0x5,%rax
    8c21:	4c 01 e0             	add    %r12,%rax
    8c24:	0f b7 08             	movzwl (%rax),%ecx
    8c27:	66 44 39 e9          	cmp    %r13w,%cx
    8c2b:	75 db                	jne    8c08 <do_add_thread+0xf8>
    8c2d:	eb a9                	jmp    8bd8 <do_add_thread+0xc8>
    8c2f:	90                   	nop
    8c30:	49 8d b4 24 f0 00 00 	lea    0xf0(%r12),%rsi
    8c37:	00 
    8c38:	48 89 ef             	mov    %rbp,%rdi
    8c3b:	ba 48 00 00 00       	mov    $0x48,%edx
    8c40:	e8 7b 5b 00 00       	call   e7c0 <memcpy>
    8c45:	48 89 e8             	mov    %rbp,%rax
    8c48:	31 ff                	xor    %edi,%edi
    8c4a:	48 89 ee             	mov    %rbp,%rsi
    8c4d:	48 29 d8             	sub    %rbx,%rax
    8c50:	48 01 45 10          	add    %rax,0x10(%rbp)
    8c54:	48 89 e8             	mov    %rbp,%rax
    8c57:	48 29 d8             	sub    %rbx,%rax
    8c5a:	48 01 45 30          	add    %rax,0x30(%rbp)
    8c5e:	48 89 e8             	mov    %rbp,%rax
    8c61:	48 29 d8             	sub    %rbx,%rax
    8c64:	48 01 45 38          	add    %rax,0x38(%rbp)
    8c68:	e8 83 0b 00 00       	call   97f0 <sgx_ocall>
    8c6d:	85 c0                	test   %eax,%eax
    8c6f:	0f 85 3a ff ff ff    	jne    8baf <do_add_thread+0x9f>
    8c75:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    8c7c:	48 89 ee             	mov    %rbp,%rsi
    8c7f:	bf 10 01 00 00       	mov    $0x110,%edi
    8c84:	e8 b7 f8 ff ff       	call   8540 <_ZL19sgx_accept_backwardmmm>
    8c89:	85 c0                	test   %eax,%eax
    8c8b:	0f 95 c0             	setne  %al
    8c8e:	0f b6 c0             	movzbl %al,%eax
    8c91:	e9 1e ff ff ff       	jmp    8bb4 <do_add_thread+0xa4>
    8c96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8c9d:	00 00 00 
    8ca0:	48 8b 3c 24          	mov    (%rsp),%rdi
    8ca4:	8b 70 04             	mov    0x4(%rax),%esi
    8ca7:	48 8b 40 08          	mov    0x8(%rax),%rax
    8cab:	48 01 df             	add    %rbx,%rdi
    8cae:	48 01 c7             	add    %rax,%rdi
    8cb1:	e8 4a fd ff ff       	call   8a00 <apply_EPC_pages>
    8cb6:	85 c0                	test   %eax,%eax
    8cb8:	0f 84 2c ff ff ff    	je     8bea <do_add_thread+0xda>
    8cbe:	e9 ec fe ff ff       	jmp    8baf <do_add_thread+0x9f>
    8cc3:	e8 88 5e 00 00       	call   eb50 <__stack_chk_fail>
    8cc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8ccf:	00 

0000000000008cd0 <_pthread_thread_run>:
    8cd0:	f3 0f 1e fa          	endbr64 
    8cd4:	31 c0                	xor    %eax,%eax
    8cd6:	c3                   	ret    
    8cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cde:	00 00 

0000000000008ce0 <_ZL11do_save_tcsPv>:
    8ce0:	55                   	push   %rbp
    8ce1:	53                   	push   %rbx
    8ce2:	48 89 fb             	mov    %rdi,%rbx
    8ce5:	48 83 ec 18          	sub    $0x18,%rsp
    8ce9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8cf0:	00 00 
    8cf2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8cf7:	31 c0                	xor    %eax,%eax
    8cf9:	48 83 3d 17 16 02 00 	cmpq   $0x0,0x21617(%rip)        # 2a318 <_ZL12g_tcs_cookie>
    8d00:	00 
    8d01:	74 4d                	je     8d50 <_ZL11do_save_tcsPv+0x70>
    8d03:	bf 10 00 00 00       	mov    $0x10,%edi
    8d08:	e8 f3 29 00 00       	call   b700 <dlmalloc>
    8d0d:	48 85 c0             	test   %rax,%rax
    8d10:	74 68                	je     8d7a <_ZL11do_save_tcsPv+0x9a>
    8d12:	48 8b 15 07 16 02 00 	mov    0x21607(%rip),%rdx        # 2a320 <_ZL10g_tcs_node>
    8d19:	48 33 1d f8 15 02 00 	xor    0x215f8(%rip),%rbx        # 2a318 <_ZL12g_tcs_cookie>
    8d20:	48 89 05 f9 15 02 00 	mov    %rax,0x215f9(%rip)        # 2a320 <_ZL10g_tcs_node>
    8d27:	48 89 18             	mov    %rbx,(%rax)
    8d2a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8d2e:	31 c0                	xor    %eax,%eax
    8d30:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    8d35:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8d3c:	00 00 
    8d3e:	75 62                	jne    8da2 <_ZL11do_save_tcsPv+0xc2>
    8d40:	48 83 c4 18          	add    $0x18,%rsp
    8d44:	5b                   	pop    %rbx
    8d45:	5d                   	pop    %rbp
    8d46:	c3                   	ret    
    8d47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8d4e:	00 00 
    8d50:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8d57:	00 
    8d58:	48 89 e5             	mov    %rsp,%rbp
    8d5b:	eb 0c                	jmp    8d69 <_ZL11do_save_tcsPv+0x89>
    8d5d:	0f 1f 00             	nopl   (%rax)
    8d60:	48 8b 04 24          	mov    (%rsp),%rax
    8d64:	48 85 c0             	test   %rax,%rax
    8d67:	75 1f                	jne    8d88 <_ZL11do_save_tcsPv+0xa8>
    8d69:	be 08 00 00 00       	mov    $0x8,%esi
    8d6e:	48 89 ef             	mov    %rbp,%rdi
    8d71:	e8 5a f3 ff ff       	call   80d0 <sgx_read_rand>
    8d76:	85 c0                	test   %eax,%eax
    8d78:	74 e6                	je     8d60 <_ZL11do_save_tcsPv+0x80>
    8d7a:	b8 01 00 00 00       	mov    $0x1,%eax
    8d7f:	eb af                	jmp    8d30 <_ZL11do_save_tcsPv+0x50>
    8d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d88:	48 83 3d 88 15 02 00 	cmpq   $0x0,0x21588(%rip)        # 2a318 <_ZL12g_tcs_cookie>
    8d8f:	00 
    8d90:	0f 85 6d ff ff ff    	jne    8d03 <_ZL11do_save_tcsPv+0x23>
    8d96:	48 89 05 7b 15 02 00 	mov    %rax,0x2157b(%rip)        # 2a318 <_ZL12g_tcs_cookie>
    8d9d:	e9 61 ff ff ff       	jmp    8d03 <_ZL11do_save_tcsPv+0x23>
    8da2:	e8 a9 5d 00 00       	call   eb50 <__stack_chk_fail>
    8da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dae:	00 00 

0000000000008db0 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    8db0:	48 39 f7             	cmp    %rsi,%rdi
    8db3:	0f 83 cf 00 00 00    	jae    8e88 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    8db9:	41 56                	push   %r14
    8dbb:	41 55                	push   %r13
    8dbd:	41 54                	push   %r12
    8dbf:	49 89 d4             	mov    %rdx,%r12
    8dc2:	55                   	push   %rbp
    8dc3:	48 89 f5             	mov    %rsi,%rbp
    8dc6:	53                   	push   %rbx
    8dc7:	48 89 fb             	mov    %rdi,%rbx
    8dca:	eb 11                	jmp    8ddd <_ZL18add_static_threadsPVK9_layout_tS1_m+0x2d>
    8dcc:	0f 1f 40 00          	nopl   0x0(%rax)
    8dd0:	48 83 c3 20          	add    $0x20,%rbx
    8dd4:	48 39 dd             	cmp    %rbx,%rbp
    8dd7:	0f 86 9b 00 00 00    	jbe    8e78 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xc8>
    8ddd:	0f b7 03             	movzwl (%rbx),%eax
    8de0:	f6 c4 10             	test   $0x10,%ah
    8de3:	75 13                	jne    8df8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    8de5:	48 8b 43 18          	mov    0x18(%rbx),%rax
    8de9:	f6 c4 01             	test   $0x1,%ah
    8dec:	74 0a                	je     8df8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    8dee:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    8df2:	66 83 f8 03          	cmp    $0x3,%ax
    8df6:	74 50                	je     8e48 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x98>
    8df8:	0f b7 03             	movzwl (%rbx),%eax
    8dfb:	f6 c4 10             	test   $0x10,%ah
    8dfe:	74 d0                	je     8dd0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    8e00:	8b 43 04             	mov    0x4(%rbx),%eax
    8e03:	85 c0                	test   %eax,%eax
    8e05:	74 c9                	je     8dd0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    8e07:	45 31 ed             	xor    %r13d,%r13d
    8e0a:	45 31 f6             	xor    %r14d,%r14d
    8e0d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    8e11:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    8e15:	48 89 de             	mov    %rbx,%rsi
    8e18:	f7 df                	neg    %edi
    8e1a:	49 01 c6             	add    %rax,%r14
    8e1d:	48 63 ff             	movslq %edi,%rdi
    8e20:	4c 89 f2             	mov    %r14,%rdx
    8e23:	48 c1 e7 05          	shl    $0x5,%rdi
    8e27:	48 01 df             	add    %rbx,%rdi
    8e2a:	e8 81 ff ff ff       	call   8db0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    8e2f:	85 c0                	test   %eax,%eax
    8e31:	75 38                	jne    8e6b <_ZL18add_static_threadsPVK9_layout_tS1_m+0xbb>
    8e33:	8b 43 04             	mov    0x4(%rbx),%eax
    8e36:	41 83 c5 01          	add    $0x1,%r13d
    8e3a:	44 39 e8             	cmp    %r13d,%eax
    8e3d:	77 ce                	ja     8e0d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x5d>
    8e3f:	eb 8f                	jmp    8dd0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    8e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e48:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8e4c:	4e 8d 2c 27          	lea    (%rdi,%r12,1),%r13
    8e50:	e8 6d 75 01 00       	call   203c2 <get_enclave_base>
    8e55:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    8e59:	e8 82 fe ff ff       	call   8ce0 <_ZL11do_save_tcsPv>
    8e5e:	85 c0                	test   %eax,%eax
    8e60:	0f 84 6a ff ff ff    	je     8dd0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    8e66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8e6b:	5b                   	pop    %rbx
    8e6c:	5d                   	pop    %rbp
    8e6d:	41 5c                	pop    %r12
    8e6f:	41 5d                	pop    %r13
    8e71:	41 5e                	pop    %r14
    8e73:	c3                   	ret    
    8e74:	0f 1f 40 00          	nopl   0x0(%rax)
    8e78:	5b                   	pop    %rbx
    8e79:	31 c0                	xor    %eax,%eax
    8e7b:	5d                   	pop    %rbp
    8e7c:	41 5c                	pop    %r12
    8e7e:	41 5d                	pop    %r13
    8e80:	41 5e                	pop    %r14
    8e82:	c3                   	ret    
    8e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e88:	31 c0                	xor    %eax,%eax
    8e8a:	c3                   	ret    
    8e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008e90 <_ZL10trts_ecalljPv>:
    8e90:	f3 0f 1e fa          	endbr64 
    8e94:	0f b6 05 15 13 02 00 	movzbl 0x21315(%rip),%eax        # 2a1b0 <_ZL16g_is_first_ecall>
    8e9b:	41 54                	push   %r12
    8e9d:	55                   	push   %rbp
    8e9e:	48 89 f5             	mov    %rsi,%rbp
    8ea1:	53                   	push   %rbx
    8ea2:	89 fb                	mov    %edi,%ebx
    8ea4:	84 c0                	test   %al,%al
    8ea6:	0f 85 c4 00 00 00    	jne    8f70 <_ZL10trts_ecalljPv+0xe0>
    8eac:	83 fb fa             	cmp    $0xfffffffa,%ebx
    8eaf:	0f 84 8b 00 00 00    	je     8f40 <_ZL10trts_ecalljPv+0xb0>
    8eb5:	4c 8d 25 e4 0a 02 00 	lea    0x20ae4(%rip),%r12        # 299a0 <g_ecall_table>
    8ebc:	49 3b 1c 24          	cmp    (%r12),%rbx
    8ec0:	73 6e                	jae    8f30 <_ZL10trts_ecalljPv+0xa0>
    8ec2:	e8 46 75 01 00       	call   2040d <get_thread_data>
    8ec7:	0f ae e8             	lfence 
    8eca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8ece:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    8ed2:	0f 84 b8 00 00 00    	je     8f90 <_ZL10trts_ecalljPv+0x100>
    8ed8:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    8edf:	4f 
    8ee0:	0f 85 52 01 00 00    	jne    9038 <_ZL10trts_ecalljPv+0x1a8>
    8ee6:	48 8d 05 13 81 01 00 	lea    0x18113(%rip),%rax        # 21000 <g_dyn_entry_table>
    8eed:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    8ef1:	48 3b 10             	cmp    (%rax),%rdx
    8ef4:	73 3a                	jae    8f30 <_ZL10trts_ecalljPv+0xa0>
    8ef6:	49 0f af 14 24       	imul   (%r12),%rdx
    8efb:	48 01 d8             	add    %rbx,%rax
    8efe:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    8f03:	74 7a                	je     8f7f <_ZL10trts_ecalljPv+0xef>
    8f05:	48 c1 e3 04          	shl    $0x4,%rbx
    8f09:	31 f6                	xor    %esi,%esi
    8f0b:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    8f10:	48 89 df             	mov    %rbx,%rdi
    8f13:	e8 b8 ef ff ff       	call   7ed0 <sgx_is_within_enclave>
    8f18:	85 c0                	test   %eax,%eax
    8f1a:	74 3c                	je     8f58 <_ZL10trts_ecalljPv+0xc8>
    8f1c:	0f ae e8             	lfence 
    8f1f:	48 89 d8             	mov    %rbx,%rax
    8f22:	48 89 ef             	mov    %rbp,%rdi
    8f25:	5b                   	pop    %rbx
    8f26:	5d                   	pop    %rbp
    8f27:	41 5c                	pop    %r12
    8f29:	ff e0                	jmp    *%rax
    8f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f30:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    8f36:	44 89 e0             	mov    %r12d,%eax
    8f39:	5b                   	pop    %rbx
    8f3a:	5d                   	pop    %rbp
    8f3b:	41 5c                	pop    %r12
    8f3d:	c3                   	ret    
    8f3e:	66 90                	xchg   %ax,%ax
    8f40:	0f ae e8             	lfence 
    8f43:	48 89 ef             	mov    %rbp,%rdi
    8f46:	5b                   	pop    %rbx
    8f47:	48 8d 05 82 fd ff ff 	lea    -0x27e(%rip),%rax        # 8cd0 <_pthread_thread_run>
    8f4e:	5d                   	pop    %rbp
    8f4f:	41 5c                	pop    %r12
    8f51:	ff e0                	jmp    *%rax
    8f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f58:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    8f5e:	5b                   	pop    %rbx
    8f5f:	5d                   	pop    %rbp
    8f60:	44 89 e0             	mov    %r12d,%eax
    8f63:	41 5c                	pop    %r12
    8f65:	c3                   	ret    
    8f66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8f6d:	00 00 00 
    8f70:	e8 98 74 01 00       	call   2040d <get_thread_data>
    8f75:	48 8b 48 10          	mov    0x10(%rax),%rcx
    8f79:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    8f7d:	74 29                	je     8fa8 <_ZL10trts_ecalljPv+0x118>
    8f7f:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    8f85:	5b                   	pop    %rbx
    8f86:	5d                   	pop    %rbp
    8f87:	44 89 e0             	mov    %r12d,%eax
    8f8a:	41 5c                	pop    %r12
    8f8c:	c3                   	ret    
    8f8d:	0f 1f 00             	nopl   (%rax)
    8f90:	48 89 d8             	mov    %rbx,%rax
    8f93:	48 c1 e0 04          	shl    $0x4,%rax
    8f97:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    8f9d:	0f 84 62 ff ff ff    	je     8f05 <_ZL10trts_ecalljPv+0x75>
    8fa3:	eb da                	jmp    8f7f <_ZL10trts_ecalljPv+0xef>
    8fa5:	0f 1f 00             	nopl   (%rax)
    8fa8:	48 8d 3d 65 13 02 00 	lea    0x21365(%rip),%rdi        # 2a314 <_ZL10g_ife_lock>
    8faf:	e8 9c 1d 00 00       	call   ad50 <sgx_spin_lock>
    8fb4:	0f b6 05 f5 11 02 00 	movzbl 0x211f5(%rip),%eax        # 2a1b0 <_ZL16g_is_first_ecall>
    8fbb:	84 c0                	test   %al,%al
    8fbd:	74 57                	je     9016 <_ZL10trts_ecalljPv+0x186>
    8fbf:	48 8d 05 56 0d 02 00 	lea    0x20d56(%rip),%rax        # 29d1c <EDMM_supported>
    8fc6:	8b 00                	mov    (%rax),%eax
    8fc8:	85 c0                	test   %eax,%eax
    8fca:	74 3e                	je     900a <_ZL10trts_ecalljPv+0x17a>
    8fcc:	48 8d 05 ad 99 01 00 	lea    0x199ad(%rip),%rax        # 22980 <g_global_data>
    8fd3:	31 d2                	xor    %edx,%edx
    8fd5:	8b b0 38 01 00 00    	mov    0x138(%rax),%esi
    8fdb:	48 8d b8 40 01 00 00 	lea    0x140(%rax),%rdi
    8fe2:	48 c1 e6 05          	shl    $0x5,%rsi
    8fe6:	48 01 fe             	add    %rdi,%rsi
    8fe9:	e8 c2 fd ff ff       	call   8db0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    8fee:	85 c0                	test   %eax,%eax
    8ff0:	0f 85 62 ff ff ff    	jne    8f58 <_ZL10trts_ecalljPv+0xc8>
    8ff6:	e8 c7 73 01 00       	call   203c2 <get_enclave_base>
    8ffb:	48 89 c7             	mov    %rax,%rdi
    8ffe:	e8 9d 17 00 00       	call   a7a0 <change_protection>
    9003:	41 89 c4             	mov    %eax,%r12d
    9006:	85 c0                	test   %eax,%eax
    9008:	75 1d                	jne    9027 <_ZL10trts_ecalljPv+0x197>
    900a:	e8 d1 19 00 00       	call   a9e0 <init_global_object>
    900f:	c6 05 9a 11 02 00 00 	movb   $0x0,0x2119a(%rip)        # 2a1b0 <_ZL16g_is_first_ecall>
    9016:	48 8d 3d f7 12 02 00 	lea    0x212f7(%rip),%rdi        # 2a314 <_ZL10g_ife_lock>
    901d:	e8 9e 1d 00 00       	call   adc0 <sgx_spin_unlock>
    9022:	e9 85 fe ff ff       	jmp    8eac <_ZL10trts_ecalljPv+0x1c>
    9027:	48 8d 3d e6 12 02 00 	lea    0x212e6(%rip),%rdi        # 2a314 <_ZL10g_ife_lock>
    902e:	e8 8d 1d 00 00       	call   adc0 <sgx_spin_unlock>
    9033:	e9 fe fe ff ff       	jmp    8f36 <_ZL10trts_ecalljPv+0xa6>
    9038:	e8 57 77 01 00       	call   20794 <abort>
    903d:	0f 1f 00             	nopl   (%rax)

0000000000009040 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>:
    9040:	e9 4b fe ff ff       	jmp    8e90 <_ZL10trts_ecalljPv>
    9045:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    904c:	00 00 00 
    904f:	90                   	nop

0000000000009050 <_Z16_pthread_enabledv>:
    9050:	f3 0f 1e fa          	endbr64 
    9054:	31 c0                	xor    %eax,%eax
    9056:	c3                   	ret    
    9057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    905e:	00 00 

0000000000009060 <_Z24_pthread_tls_store_state9_status_t>:
    9060:	f3 0f 1e fa          	endbr64 
    9064:	c3                   	ret    
    9065:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    906c:	00 00 00 
    906f:	90                   	nop

0000000000009070 <_Z22_pthread_tls_get_statev>:
    9070:	f3 0f 1e fa          	endbr64 
    9074:	31 c0                	xor    %eax,%eax
    9076:	c3                   	ret    
    9077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    907e:	00 00 

0000000000009080 <_Z26_pthread_tls_store_contextPv>:
    9080:	f3 0f 1e fa          	endbr64 
    9084:	c3                   	ret    
    9085:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    908c:	00 00 00 
    908f:	90                   	nop

0000000000009090 <_Z20_pthread_wakeup_joinPv>:
    9090:	f3 0f 1e fa          	endbr64 
    9094:	c3                   	ret    
    9095:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    909c:	00 00 00 
    909f:	90                   	nop

00000000000090a0 <_Z24_pthread_tls_destructorsv>:
    90a0:	f3 0f 1e fa          	endbr64 
    90a4:	c3                   	ret    
    90a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90ac:	00 00 00 
    90af:	90                   	nop

00000000000090b0 <tc_set_idle>:
    90b0:	f3 0f 1e fa          	endbr64 
    90b4:	c3                   	ret    
    90b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90bc:	00 00 00 
    90bf:	90                   	nop

00000000000090c0 <do_init_thread>:
    90c0:	f3 0f 1e fa          	endbr64 
    90c4:	41 57                	push   %r15
    90c6:	ba a0 00 00 00       	mov    $0xa0,%edx
    90cb:	41 56                	push   %r14
    90cd:	41 55                	push   %r13
    90cf:	41 54                	push   %r12
    90d1:	41 89 f4             	mov    %esi,%r12d
    90d4:	55                   	push   %rbp
    90d5:	48 89 fd             	mov    %rdi,%rbp
    90d8:	53                   	push   %rbx
    90d9:	48 83 ec 28          	sub    $0x28,%rsp
    90dd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    90e4:	00 00 
    90e6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    90eb:	31 c0                	xor    %eax,%eax
    90ed:	48 8d 05 8c 98 01 00 	lea    0x1988c(%rip),%rax        # 22980 <g_global_data>
    90f4:	48 8d 70 50          	lea    0x50(%rax),%rsi
    90f8:	48 8b 58 50          	mov    0x50(%rax),%rbx
    90fc:	48 01 fb             	add    %rdi,%rbx
    90ff:	48 89 df             	mov    %rbx,%rdi
    9102:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    9106:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    910a:	4c 8b ab 98 00 00 00 	mov    0x98(%rbx),%r13
    9111:	e8 aa 56 00 00       	call   e7c0 <memcpy>
    9116:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    911d:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    9121:	48 01 2b             	add    %rbp,(%rbx)
    9124:	48 01 43 08          	add    %rax,0x8(%rbx)
    9128:	48 01 43 10          	add    %rax,0x10(%rbx)
    912c:	48 8d 05 c5 0b 02 00 	lea    0x20bc5(%rip),%rax        # 29cf8 <__intel_security_cookie>
    9133:	48 01 ea             	add    %rbp,%rdx
    9136:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    913a:	48 8b 00             	mov    (%rax),%rax
    913d:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    9141:	48 01 6b 50          	add    %rbp,0x50(%rbx)
    9145:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    9149:	48 89 93 98 00 00 00 	mov    %rdx,0x98(%rbx)
    9150:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    9154:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    9158:	48 89 85 58 fd fe ff 	mov    %rax,-0x102a8(%rbp)
    915f:	48 8d 05 b6 0b 02 00 	lea    0x20bb6(%rip),%rax        # 29d1c <EDMM_supported>
    9166:	8b 00                	mov    (%rax),%eax
    9168:	85 c0                	test   %eax,%eax
    916a:	0f 84 98 00 00 00    	je     9208 <do_init_thread+0x148>
    9170:	45 84 e4             	test   %r12b,%r12b
    9173:	0f 84 a7 00 00 00    	je     9220 <do_init_thread+0x160>
    9179:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    9180:	00 
    9181:	4d 85 ed             	test   %r13,%r13
    9184:	0f 85 83 00 00 00    	jne    920d <do_init_thread+0x14d>
    918a:	e8 51 f5 ff ff       	call   86e0 <get_dynamic_stack_max_page>
    918f:	89 c0                	mov    %eax,%eax
    9191:	48 c1 e0 0c          	shl    $0xc,%rax
    9195:	48 01 83 98 00 00 00 	add    %rax,0x98(%rbx)
    919c:	0f 1f 40 00          	nopl   0x0(%rax)
    91a0:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    91a7:	00 00 
    91a9:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    91b0:	00 00 
    91b2:	e8 0b 72 01 00       	call   203c2 <get_enclave_base>
    91b7:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    91bc:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    91c1:	48 89 c7             	mov    %rax,%rdi
    91c4:	e8 57 13 00 00       	call   a520 <elf_tls_info>
    91c9:	41 89 c0             	mov    %eax,%r8d
    91cc:	b8 01 00 00 00       	mov    $0x1,%eax
    91d1:	45 85 c0             	test   %r8d,%r8d
    91d4:	75 0a                	jne    91e0 <do_init_thread+0x120>
    91d6:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    91dc:	75 62                	jne    9240 <do_init_thread+0x180>
    91de:	31 c0                	xor    %eax,%eax
    91e0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    91e5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    91ec:	00 00 
    91ee:	0f 85 99 00 00 00    	jne    928d <do_init_thread+0x1cd>
    91f4:	48 83 c4 28          	add    $0x28,%rsp
    91f8:	5b                   	pop    %rbx
    91f9:	5d                   	pop    %rbp
    91fa:	41 5c                	pop    %r12
    91fc:	41 5d                	pop    %r13
    91fe:	41 5e                	pop    %r14
    9200:	41 5f                	pop    %r15
    9202:	c3                   	ret    
    9203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9208:	4d 85 ed             	test   %r13,%r13
    920b:	74 93                	je     91a0 <do_init_thread+0xe0>
    920d:	4c 89 ab 98 00 00 00 	mov    %r13,0x98(%rbx)
    9214:	eb 8a                	jmp    91a0 <do_init_thread+0xe0>
    9216:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    921d:	00 00 00 
    9220:	4d 85 ed             	test   %r13,%r13
    9223:	75 e8                	jne    920d <do_init_thread+0x14d>
    9225:	48 89 ef             	mov    %rbp,%rdi
    9228:	e8 d3 f3 ff ff       	call   8600 <is_dynamic_thread>
    922d:	85 c0                	test   %eax,%eax
    922f:	0f 85 55 ff ff ff    	jne    918a <do_init_thread+0xca>
    9235:	e9 66 ff ff ff       	jmp    91a0 <do_init_thread+0xe0>
    923a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9240:	48 8b 03             	mov    (%rbx),%rax
    9243:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    9247:	31 f6                	xor    %esi,%esi
    9249:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    9250:	48 29 fa             	sub    %rdi,%rdx
    9253:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    925a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    9261:	e8 2a 57 00 00       	call   e990 <memset>
    9266:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    926a:	48 8b 03             	mov    (%rbx),%rax
    926d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    9272:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    9277:	48 29 f8             	sub    %rdi,%rax
    927a:	48 39 c2             	cmp    %rax,%rdx
    927d:	0f 87 5b ff ff ff    	ja     91de <do_init_thread+0x11e>
    9283:	e8 38 55 00 00       	call   e7c0 <memcpy>
    9288:	e9 51 ff ff ff       	jmp    91de <do_init_thread+0x11e>
    928d:	e8 be 58 00 00       	call   eb50 <__stack_chk_fail>
    9292:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9299:	00 00 00 
    929c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000092a0 <do_ecall>:
    92a0:	f3 0f 1e fa          	endbr64 
    92a4:	55                   	push   %rbp
    92a5:	48 89 d5             	mov    %rdx,%rbp
    92a8:	48 83 ec 70          	sub    $0x70,%rsp
    92ac:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    92b0:	48 89 34 24          	mov    %rsi,(%rsp)
    92b4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    92bb:	00 00 
    92bd:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    92c2:	31 c0                	xor    %eax,%eax
    92c4:	e8 05 71 01 00       	call   203ce <get_enclave_state>
    92c9:	41 89 c0             	mov    %eax,%r8d
    92cc:	b8 01 00 00 00       	mov    $0x1,%eax
    92d1:	41 83 f8 02          	cmp    $0x2,%r8d
    92d5:	74 21                	je     92f8 <do_ecall+0x58>
    92d7:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    92dc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    92e3:	00 00 
    92e5:	0f 85 9c 01 00 00    	jne    9487 <do_ecall+0x1e7>
    92eb:	48 83 c4 70          	add    $0x70,%rsp
    92ef:	5d                   	pop    %rbp
    92f0:	c3                   	ret    
    92f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92f8:	e8 10 71 01 00       	call   2040d <get_thread_data>
    92fd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9302:	48 85 c0             	test   %rax,%rax
    9305:	0f 84 fd 00 00 00    	je     9408 <do_ecall+0x168>
    930b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9310:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9314:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    9318:	0f 84 da 00 00 00    	je     93f8 <do_ecall+0x158>
    931e:	e8 ea 70 01 00       	call   2040d <get_thread_data>
    9323:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9328:	48 8b 48 08          	mov    0x8(%rax),%rcx
    932c:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    9330:	74 46                	je     9378 <do_ecall+0xd8>
    9332:	48 8b 34 24          	mov    (%rsp),%rsi
    9336:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    933a:	e8 51 fb ff ff       	call   8e90 <_ZL10trts_ecalljPv>
    933f:	48 8d 15 3a 96 01 00 	lea    0x1963a(%rip),%rdx        # 22980 <g_global_data>
    9346:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    934a:	48 85 d2             	test   %rdx,%rdx
    934d:	74 88                	je     92d7 <do_ecall+0x37>
    934f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9354:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    9358:	48 39 71 10          	cmp    %rsi,0x10(%rcx)
    935c:	0f 85 75 ff ff ff    	jne    92d7 <do_ecall+0x37>
    9362:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    9366:	e8 45 fd ff ff       	call   90b0 <tc_set_idle>
    936b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    936f:	e9 63 ff ff ff       	jmp    92d7 <do_ecall+0x37>
    9374:	0f 1f 40 00          	nopl   0x0(%rax)
    9378:	31 ff                	xor    %edi,%edi
    937a:	e8 a1 ee ff ff       	call   8220 <sgx_wrpkru>
    937f:	e8 cc fc ff ff       	call   9050 <_Z16_pthread_enabledv>
    9384:	84 c0                	test   %al,%al
    9386:	0f 84 c4 00 00 00    	je     9450 <do_ecall+0x1b0>
    938c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9390:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    9395:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    939a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    939f:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    93a4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    93a9:	e8 dd 5d 00 00       	call   f18b <_setjmp>
    93ae:	f3 0f 1e fa          	endbr64 
    93b2:	85 c0                	test   %eax,%eax
    93b4:	74 6a                	je     9420 <do_ecall+0x180>
    93b6:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    93bb:	48 8b 41 10          	mov    0x10(%rcx),%rax
    93bf:	48 89 41 08          	mov    %rax,0x8(%rcx)
    93c3:	b8 09 00 00 00       	mov    $0x9,%eax
    93c8:	bf 09 00 00 00       	mov    $0x9,%edi
    93cd:	89 44 24 18          	mov    %eax,0x18(%rsp)
    93d1:	e8 8a fc ff ff       	call   9060 <_Z24_pthread_tls_store_state9_status_t>
    93d6:	8b 44 24 18          	mov    0x18(%rsp),%eax
    93da:	89 44 24 14          	mov    %eax,0x14(%rsp)
    93de:	e8 bd fc ff ff       	call   90a0 <_Z24_pthread_tls_destructorsv>
    93e3:	48 8b 3c 24          	mov    (%rsp),%rdi
    93e7:	e8 a4 fc ff ff       	call   9090 <_Z20_pthread_wakeup_joinPv>
    93ec:	8b 44 24 14          	mov    0x14(%rsp),%eax
    93f0:	e9 4a ff ff ff       	jmp    933f <do_ecall+0x9f>
    93f5:	0f 1f 00             	nopl   (%rax)
    93f8:	48 8d 05 81 95 01 00 	lea    0x19581(%rip),%rax        # 22980 <g_global_data>
    93ff:	48 8b 40 38          	mov    0x38(%rax),%rax
    9403:	48 85 c0             	test   %rax,%rax
    9406:	74 68                	je     9470 <do_ecall+0x1d0>
    9408:	31 f6                	xor    %esi,%esi
    940a:	48 89 ef             	mov    %rbp,%rdi
    940d:	e8 ae fc ff ff       	call   90c0 <do_init_thread>
    9412:	85 c0                	test   %eax,%eax
    9414:	0f 84 04 ff ff ff    	je     931e <do_ecall+0x7e>
    941a:	e9 b8 fe ff ff       	jmp    92d7 <do_ecall+0x37>
    941f:	90                   	nop
    9420:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    9425:	e8 56 fc ff ff       	call   9080 <_Z26_pthread_tls_store_contextPv>
    942a:	0f c7 f0             	rdrand %eax
    942d:	73 fb                	jae    942a <do_ecall+0x18a>
    942f:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    9433:	48 8b 34 24          	mov    (%rsp),%rsi
    9437:	89 ef                	mov    %ebp,%edi
    9439:	e8 02 fc ff ff       	call   9040 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    943e:	83 fd fa             	cmp    $0xfffffffa,%ebp
    9441:	74 85                	je     93c8 <do_ecall+0x128>
    9443:	83 f8 09             	cmp    $0x9,%eax
    9446:	75 92                	jne    93da <do_ecall+0x13a>
    9448:	e9 7b ff ff ff       	jmp    93c8 <do_ecall+0x128>
    944d:	0f 1f 00             	nopl   (%rax)
    9450:	0f c7 f0             	rdrand %eax
    9453:	73 fb                	jae    9450 <do_ecall+0x1b0>
    9455:	48 8b 34 24          	mov    (%rsp),%rsi
    9459:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    945d:	e8 de fb ff ff       	call   9040 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    9462:	e9 d8 fe ff ff       	jmp    933f <do_ecall+0x9f>
    9467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    946e:	00 00 
    9470:	e8 fb fb ff ff       	call   9070 <_Z22_pthread_tls_get_statev>
    9475:	83 f8 09             	cmp    $0x9,%eax
    9478:	74 8e                	je     9408 <do_ecall+0x168>
    947a:	83 7c 24 10 fa       	cmpl   $0xfffffffa,0x10(%rsp)
    947f:	0f 85 99 fe ff ff    	jne    931e <do_ecall+0x7e>
    9485:	eb 81                	jmp    9408 <do_ecall+0x168>
    9487:	e8 c4 56 00 00       	call   eb50 <__stack_chk_fail>
    948c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009490 <do_ecall_add_thread>:
    9490:	f3 0f 1e fa          	endbr64 
    9494:	41 54                	push   %r12
    9496:	53                   	push   %rbx
    9497:	48 89 fb             	mov    %rdi,%rbx
    949a:	48 83 ec 08          	sub    $0x8,%rsp
    949e:	e8 dd 07 00 00       	call   9c80 <is_utility_thread>
    94a3:	3c 01                	cmp    $0x1,%al
    94a5:	0f 85 ad 00 00 00    	jne    9558 <do_ecall_add_thread+0xc8>
    94ab:	48 85 db             	test   %rbx,%rbx
    94ae:	0f 84 a4 00 00 00    	je     9558 <do_ecall_add_thread+0xc8>
    94b4:	be 08 00 00 00       	mov    $0x8,%esi
    94b9:	48 89 df             	mov    %rbx,%rdi
    94bc:	e8 6f ea ff ff       	call   7f30 <sgx_is_outside_enclave>
    94c1:	85 c0                	test   %eax,%eax
    94c3:	0f 84 8f 00 00 00    	je     9558 <do_ecall_add_thread+0xc8>
    94c9:	0f ae e8             	lfence 
    94cc:	48 8b 1b             	mov    (%rbx),%rbx
    94cf:	48 85 db             	test   %rbx,%rbx
    94d2:	0f 84 80 00 00 00    	je     9558 <do_ecall_add_thread+0xc8>
    94d8:	0f ae e8             	lfence 
    94db:	48 89 df             	mov    %rbx,%rdi
    94de:	e8 fd f7 ff ff       	call   8ce0 <_ZL11do_save_tcsPv>
    94e3:	41 89 c4             	mov    %eax,%r12d
    94e6:	85 c0                	test   %eax,%eax
    94e8:	75 74                	jne    955e <do_ecall_add_thread+0xce>
    94ea:	48 89 df             	mov    %rbx,%rdi
    94ed:	e8 1e f6 ff ff       	call   8b10 <do_add_thread>
    94f2:	41 89 c4             	mov    %eax,%r12d
    94f5:	85 c0                	test   %eax,%eax
    94f7:	74 65                	je     955e <do_ecall_add_thread+0xce>
    94f9:	e8 82 07 00 00       	call   9c80 <is_utility_thread>
    94fe:	84 c0                	test   %al,%al
    9500:	74 5c                	je     955e <do_ecall_add_thread+0xce>
    9502:	4c 8b 05 17 0e 02 00 	mov    0x20e17(%rip),%r8        # 2a320 <_ZL10g_tcs_node>
    9509:	4d 85 c0             	test   %r8,%r8
    950c:	74 50                	je     955e <do_ecall_add_thread+0xce>
    950e:	48 8b 0d 03 0e 02 00 	mov    0x20e03(%rip),%rcx        # 2a318 <_ZL12g_tcs_cookie>
    9515:	49 8b 00             	mov    (%r8),%rax
    9518:	49 8b 78 08          	mov    0x8(%r8),%rdi
    951c:	48 31 c8             	xor    %rcx,%rax
    951f:	48 39 c3             	cmp    %rax,%rbx
    9522:	74 45                	je     9569 <do_ecall_add_thread+0xd9>
    9524:	48 85 ff             	test   %rdi,%rdi
    9527:	75 12                	jne    953b <do_ecall_add_thread+0xab>
    9529:	eb 33                	jmp    955e <do_ecall_add_thread+0xce>
    952b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9530:	49 89 f8             	mov    %rdi,%r8
    9533:	48 85 c0             	test   %rax,%rax
    9536:	74 26                	je     955e <do_ecall_add_thread+0xce>
    9538:	48 89 c7             	mov    %rax,%rdi
    953b:	48 8b 17             	mov    (%rdi),%rdx
    953e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    9542:	48 31 ca             	xor    %rcx,%rdx
    9545:	48 39 d3             	cmp    %rdx,%rbx
    9548:	75 e6                	jne    9530 <do_ecall_add_thread+0xa0>
    954a:	49 89 40 08          	mov    %rax,0x8(%r8)
    954e:	e8 1d 3c 00 00       	call   d170 <dlfree>
    9553:	eb 09                	jmp    955e <do_ecall_add_thread+0xce>
    9555:	0f 1f 00             	nopl   (%rax)
    9558:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    955e:	48 83 c4 08          	add    $0x8,%rsp
    9562:	44 89 e0             	mov    %r12d,%eax
    9565:	5b                   	pop    %rbx
    9566:	41 5c                	pop    %r12
    9568:	c3                   	ret    
    9569:	48 89 3d b0 0d 02 00 	mov    %rdi,0x20db0(%rip)        # 2a320 <_ZL10g_tcs_node>
    9570:	4c 89 c7             	mov    %r8,%rdi
    9573:	e8 f8 3b 00 00       	call   d170 <dlfree>
    9578:	eb e4                	jmp    955e <do_ecall_add_thread+0xce>
    957a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009580 <do_uninit_enclave>:
    9580:	f3 0f 1e fa          	endbr64 
    9584:	48 8d 05 91 07 02 00 	lea    0x20791(%rip),%rax        # 29d1c <EDMM_supported>
    958b:	41 54                	push   %r12
    958d:	55                   	push   %rbp
    958e:	53                   	push   %rbx
    958f:	8b 00                	mov    (%rax),%eax
    9591:	85 c0                	test   %eax,%eax
    9593:	0f 84 b4 00 00 00    	je     964d <do_uninit_enclave+0xcd>
    9599:	48 89 fb             	mov    %rdi,%rbx
    959c:	e8 df 06 00 00       	call   9c80 <is_utility_thread>
    95a1:	84 c0                	test   %al,%al
    95a3:	0f 84 97 00 00 00    	je     9640 <do_uninit_enclave+0xc0>
    95a9:	f0 83 0d 5f 0d 02 00 	lock orl $0x1,0x20d5f(%rip)        # 2a310 <g_uninit_flag>
    95b0:	01 
    95b1:	48 8b 2d 68 0d 02 00 	mov    0x20d68(%rip),%rbp        # 2a320 <_ZL10g_tcs_node>
    95b8:	48 c7 05 5d 0d 02 00 	movq   $0x0,0x20d5d(%rip)        # 2a320 <_ZL10g_tcs_node>
    95bf:	00 00 00 00 
    95c3:	48 85 ed             	test   %rbp,%rbp
    95c6:	74 41                	je     9609 <do_uninit_enclave+0x89>
    95c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    95cf:	00 
    95d0:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    95d4:	48 33 35 3d 0d 02 00 	xor    0x20d3d(%rip),%rsi        # 2a318 <_ZL12g_tcs_cookie>
    95db:	48 39 f3             	cmp    %rsi,%rbx
    95de:	74 15                	je     95f5 <do_uninit_enclave+0x75>
    95e0:	48 8d 96 00 10 00 00 	lea    0x1000(%rsi),%rdx
    95e7:	bf 10 04 00 00       	mov    $0x410,%edi
    95ec:	e8 4f f1 ff ff       	call   8740 <sgx_accept_forward>
    95f1:	85 c0                	test   %eax,%eax
    95f3:	75 58                	jne    964d <do_uninit_enclave+0xcd>
    95f5:	4c 8b 65 08          	mov    0x8(%rbp),%r12
    95f9:	48 89 ef             	mov    %rbp,%rdi
    95fc:	e8 6f 3b 00 00       	call   d170 <dlfree>
    9601:	4c 89 e5             	mov    %r12,%rbp
    9604:	48 85 ed             	test   %rbp,%rbp
    9607:	75 c7                	jne    95d0 <do_uninit_enclave+0x50>
    9609:	48 8d 3d 04 0d 02 00 	lea    0x20d04(%rip),%rdi        # 2a314 <_ZL10g_ife_lock>
    9610:	e8 3b 17 00 00       	call   ad50 <sgx_spin_lock>
    9615:	0f b6 05 94 0b 02 00 	movzbl 0x20b94(%rip),%eax        # 2a1b0 <_ZL16g_is_first_ecall>
    961c:	84 c0                	test   %al,%al
    961e:	74 48                	je     9668 <do_uninit_enclave+0xe8>
    9620:	48 8d 3d ed 0c 02 00 	lea    0x20ced(%rip),%rdi        # 2a314 <_ZL10g_ife_lock>
    9627:	e8 94 17 00 00       	call   adc0 <sgx_spin_unlock>
    962c:	bf 03 00 00 00       	mov    $0x3,%edi
    9631:	e8 a9 6d 01 00       	call   203df <set_enclave_state>
    9636:	5b                   	pop    %rbx
    9637:	31 c0                	xor    %eax,%eax
    9639:	5d                   	pop    %rbp
    963a:	41 5c                	pop    %r12
    963c:	c3                   	ret    
    963d:	0f 1f 00             	nopl   (%rax)
    9640:	e8 2b f0 ff ff       	call   8670 <is_dynamic_thread_exist>
    9645:	85 c0                	test   %eax,%eax
    9647:	0f 84 5c ff ff ff    	je     95a9 <do_uninit_enclave+0x29>
    964d:	bf 03 00 00 00       	mov    $0x3,%edi
    9652:	e8 88 6d 01 00       	call   203df <set_enclave_state>
    9657:	5b                   	pop    %rbx
    9658:	b8 01 00 00 00       	mov    $0x1,%eax
    965d:	5d                   	pop    %rbp
    965e:	41 5c                	pop    %r12
    9660:	c3                   	ret    
    9661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9668:	e8 13 14 00 00       	call   aa80 <uninit_global_object>
    966d:	eb b1                	jmp    9620 <do_uninit_enclave+0xa0>
    966f:	90                   	nop

0000000000009670 <trts_mprotect>:
    9670:	f3 0f 1e fa          	endbr64 
    9674:	55                   	push   %rbp
    9675:	48 89 e5             	mov    %rsp,%rbp
    9678:	41 56                	push   %r14
    967a:	41 55                	push   %r13
    967c:	41 54                	push   %r12
    967e:	53                   	push   %rbx
    967f:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9683:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    9687:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    968e:	00 00 
    9690:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    9695:	31 c0                	xor    %eax,%eax
    9697:	b8 02 00 00 00       	mov    $0x2,%eax
    969c:	48 85 f6             	test   %rsi,%rsi
    969f:	0f 84 89 00 00 00    	je     972e <trts_mprotect+0xbe>
    96a5:	49 89 d5             	mov    %rdx,%r13
    96a8:	48 89 fa             	mov    %rdi,%rdx
    96ab:	48 89 fb             	mov    %rdi,%rbx
    96ae:	49 89 f4             	mov    %rsi,%r12
    96b1:	48 09 f2             	or     %rsi,%rdx
    96b4:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx
    96ba:	75 72                	jne    972e <trts_mprotect+0xbe>
    96bc:	48 8d 05 55 06 02 00 	lea    0x20655(%rip),%rax        # 29d18 <g_sdk_version>
    96c3:	83 38 01             	cmpl   $0x1,(%rax)
    96c6:	0f 84 84 00 00 00    	je     9750 <trts_mprotect+0xe0>
    96cc:	4c 89 e8             	mov    %r13,%rax
    96cf:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    96d4:	ba 38 00 00 00       	mov    $0x38,%edx
    96d9:	31 f6                	xor    %esi,%esi
    96db:	48 0d 20 02 00 00    	or     $0x220,%rax
    96e1:	49 01 dc             	add    %rbx,%r12
    96e4:	41 83 e5 06          	and    $0x6,%r13d
    96e8:	49 89 e6             	mov    %rsp,%r14
    96eb:	48 89 04 24          	mov    %rax,(%rsp)
    96ef:	e8 9c 52 00 00       	call   e990 <memset>
    96f4:	4c 39 e3             	cmp    %r12,%rbx
    96f7:	73 33                	jae    972c <trts_mprotect+0xbc>
    96f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9700:	48 89 de             	mov    %rbx,%rsi
    9703:	4c 89 f7             	mov    %r14,%rdi
    9706:	e8 4d 70 01 00       	call   20758 <do_emodpe>
    970b:	49 83 fd 06          	cmp    $0x6,%r13
    970f:	74 0f                	je     9720 <trts_mprotect+0xb0>
    9711:	48 89 de             	mov    %rbx,%rsi
    9714:	4c 89 f7             	mov    %r14,%rdi
    9717:	e8 1e 70 01 00       	call   2073a <do_eaccept>
    971c:	85 c0                	test   %eax,%eax
    971e:	75 0e                	jne    972e <trts_mprotect+0xbe>
    9720:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    9727:	4c 39 e3             	cmp    %r12,%rbx
    972a:	72 d4                	jb     9700 <trts_mprotect+0x90>
    972c:	31 c0                	xor    %eax,%eax
    972e:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    9733:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    973a:	00 00 
    973c:	75 29                	jne    9767 <trts_mprotect+0xf7>
    973e:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    9742:	5b                   	pop    %rbx
    9743:	41 5c                	pop    %r12
    9745:	41 5d                	pop    %r13
    9747:	41 5e                	pop    %r14
    9749:	5d                   	pop    %rbp
    974a:	c3                   	ret    
    974b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9750:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
    9755:	4c 89 ea             	mov    %r13,%rdx
    9758:	e8 13 00 00 00       	call   9770 <change_permissions_ocall>
    975d:	85 c0                	test   %eax,%eax
    975f:	0f 84 67 ff ff ff    	je     96cc <trts_mprotect+0x5c>
    9765:	eb c7                	jmp    972e <trts_mprotect+0xbe>
    9767:	e8 e4 53 00 00       	call   eb50 <__stack_chk_fail>
    976c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009770 <change_permissions_ocall>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	41 55                	push   %r13
    9776:	41 89 cd             	mov    %ecx,%r13d
    9779:	41 54                	push   %r12
    977b:	49 89 fc             	mov    %rdi,%r12
    977e:	bf 18 00 00 00       	mov    $0x18,%edi
    9783:	55                   	push   %rbp
    9784:	48 89 f5             	mov    %rsi,%rbp
    9787:	53                   	push   %rbx
    9788:	48 89 d3             	mov    %rdx,%rbx
    978b:	48 83 ec 08          	sub    $0x8,%rsp
    978f:	e8 ec e7 ff ff       	call   7f80 <sgx_ocalloc>
    9794:	48 85 c0             	test   %rax,%rax
    9797:	74 2f                	je     97c8 <change_permissions_ocall+0x58>
    9799:	4c 89 20             	mov    %r12,(%rax)
    979c:	44 89 ef             	mov    %r13d,%edi
    979f:	48 89 c6             	mov    %rax,%rsi
    97a2:	48 89 68 08          	mov    %rbp,0x8(%rax)
    97a6:	48 89 58 10          	mov    %rbx,0x10(%rax)
    97aa:	e8 41 00 00 00       	call   97f0 <sgx_ocall>
    97af:	41 89 c4             	mov    %eax,%r12d
    97b2:	e8 b9 e8 ff ff       	call   8070 <sgx_ocfree>
    97b7:	48 83 c4 08          	add    $0x8,%rsp
    97bb:	44 89 e0             	mov    %r12d,%eax
    97be:	5b                   	pop    %rbx
    97bf:	5d                   	pop    %rbp
    97c0:	41 5c                	pop    %r12
    97c2:	41 5d                	pop    %r13
    97c4:	c3                   	ret    
    97c5:	0f 1f 00             	nopl   (%rax)
    97c8:	e8 a3 e8 ff ff       	call   8070 <sgx_ocfree>
    97cd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    97d3:	48 83 c4 08          	add    $0x8,%rsp
    97d7:	5b                   	pop    %rbx
    97d8:	44 89 e0             	mov    %r12d,%eax
    97db:	5d                   	pop    %rbp
    97dc:	41 5c                	pop    %r12
    97de:	41 5d                	pop    %r13
    97e0:	c3                   	ret    
    97e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97e8:	00 00 00 
    97eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000097f0 <sgx_ocall>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	8d 47 05             	lea    0x5(%rdi),%eax
    97f7:	83 f8 03             	cmp    $0x3,%eax
    97fa:	76 12                	jbe    980e <sgx_ocall+0x1e>
    97fc:	85 ff                	test   %edi,%edi
    97fe:	74 0e                	je     980e <sgx_ocall+0x1e>
    9800:	48 8d 15 f9 77 01 00 	lea    0x177f9(%rip),%rdx        # 21000 <g_dyn_entry_table>
    9807:	89 f8                	mov    %edi,%eax
    9809:	48 3b 02             	cmp    (%rdx),%rax
    980c:	73 0a                	jae    9818 <sgx_ocall+0x28>
    980e:	e9 47 6e 01 00       	jmp    2065a <__morestack>
    9813:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9818:	b8 01 10 00 00       	mov    $0x1001,%eax
    981d:	c3                   	ret    
    981e:	66 90                	xchg   %ax,%ax

0000000000009820 <update_ocall_lastsp>:
    9820:	f3 0f 1e fa          	endbr64 
    9824:	53                   	push   %rbx
    9825:	48 89 fb             	mov    %rdi,%rbx
    9828:	e8 e0 6b 01 00       	call   2040d <get_thread_data>
    982d:	ba 01 00 00 00       	mov    $0x1,%edx
    9832:	4c 8b 40 08          	mov    0x8(%rax),%r8
    9836:	4c 89 43 30          	mov    %r8,0x30(%rbx)
    983a:	4c 39 40 10          	cmp    %r8,0x10(%rax)
    983e:	74 0b                	je     984b <update_ocall_lastsp+0x2b>
    9840:	49 8b 88 90 00 00 00 	mov    0x90(%r8),%rcx
    9847:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    984b:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
    9852:	48 89 58 08          	mov    %rbx,0x8(%rax)
    9856:	4c 89 c0             	mov    %r8,%rax
    9859:	5b                   	pop    %rbx
    985a:	c3                   	ret    
    985b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009860 <do_oret>:
    9860:	f3 0f 1e fa          	endbr64 
    9864:	55                   	push   %rbp
    9865:	48 89 fd             	mov    %rdi,%rbp
    9868:	48 83 ec 10          	sub    $0x10,%rsp
    986c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9873:	00 00 
    9875:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    987a:	31 c0                	xor    %eax,%eax
    987c:	e8 8c 6b 01 00       	call   2040d <get_thread_data>
    9881:	48 8b 78 08          	mov    0x8(%rax),%rdi
    9885:	48 89 3c 24          	mov    %rdi,(%rsp)
    9889:	48 85 ff             	test   %rdi,%rdi
    988c:	74 22                	je     98b0 <do_oret+0x50>
    988e:	48 89 e2             	mov    %rsp,%rdx
    9891:	48 39 fa             	cmp    %rdi,%rdx
    9894:	73 1a                	jae    98b0 <do_oret+0x50>
    9896:	48 8b 50 10          	mov    0x10(%rax),%rdx
    989a:	48 8d 8a 10 ff ff ff 	lea    -0xf0(%rdx),%rcx
    98a1:	48 39 f9             	cmp    %rdi,%rcx
    98a4:	72 0a                	jb     98b0 <do_oret+0x50>
    98a6:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    98ad:	4f 
    98ae:	74 20                	je     98d0 <do_oret+0x70>
    98b0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    98b5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    98bc:	00 00 
    98be:	75 2c                	jne    98ec <do_oret+0x8c>
    98c0:	48 83 c4 10          	add    $0x10,%rsp
    98c4:	b8 01 00 00 00       	mov    $0x1,%eax
    98c9:	5d                   	pop    %rbp
    98ca:	c3                   	ret    
    98cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    98d0:	48 8b 4f 30          	mov    0x30(%rdi),%rcx
    98d4:	48 39 ca             	cmp    %rcx,%rdx
    98d7:	72 d7                	jb     98b0 <do_oret+0x50>
    98d9:	48 39 f9             	cmp    %rdi,%rcx
    98dc:	76 d2                	jbe    98b0 <do_oret+0x50>
    98de:	48 89 48 08          	mov    %rcx,0x8(%rax)
    98e2:	48 89 ee             	mov    %rbp,%rsi
    98e5:	e8 83 6d 01 00       	call   2066d <asm_oret>
    98ea:	eb c4                	jmp    98b0 <do_oret+0x50>
    98ec:	e8 5f 52 00 00       	call   eb50 <__stack_chk_fail>
    98f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98f8:	00 00 00 
    98fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009900 <trim_range_ocall>:
    9900:	f3 0f 1e fa          	endbr64 
    9904:	41 54                	push   %r12
    9906:	55                   	push   %rbp
    9907:	48 89 fd             	mov    %rdi,%rbp
    990a:	bf 10 00 00 00       	mov    $0x10,%edi
    990f:	53                   	push   %rbx
    9910:	48 89 f3             	mov    %rsi,%rbx
    9913:	e8 68 e6 ff ff       	call   7f80 <sgx_ocalloc>
    9918:	48 85 c0             	test   %rax,%rax
    991b:	74 2b                	je     9948 <trim_range_ocall+0x48>
    991d:	48 89 28             	mov    %rbp,(%rax)
    9920:	48 89 c6             	mov    %rax,%rsi
    9923:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    9928:	48 89 58 08          	mov    %rbx,0x8(%rax)
    992c:	e8 bf fe ff ff       	call   97f0 <sgx_ocall>
    9931:	41 89 c4             	mov    %eax,%r12d
    9934:	e8 37 e7 ff ff       	call   8070 <sgx_ocfree>
    9939:	44 89 e0             	mov    %r12d,%eax
    993c:	5b                   	pop    %rbx
    993d:	5d                   	pop    %rbp
    993e:	41 5c                	pop    %r12
    9940:	c3                   	ret    
    9941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9948:	e8 23 e7 ff ff       	call   8070 <sgx_ocfree>
    994d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    9953:	5b                   	pop    %rbx
    9954:	5d                   	pop    %rbp
    9955:	44 89 e0             	mov    %r12d,%eax
    9958:	41 5c                	pop    %r12
    995a:	c3                   	ret    
    995b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009960 <trim_range_commit_ocall>:
    9960:	f3 0f 1e fa          	endbr64 
    9964:	41 54                	push   %r12
    9966:	53                   	push   %rbx
    9967:	48 89 fb             	mov    %rdi,%rbx
    996a:	bf 08 00 00 00       	mov    $0x8,%edi
    996f:	48 83 ec 08          	sub    $0x8,%rsp
    9973:	e8 08 e6 ff ff       	call   7f80 <sgx_ocalloc>
    9978:	48 85 c0             	test   %rax,%rax
    997b:	74 23                	je     99a0 <trim_range_commit_ocall+0x40>
    997d:	48 89 18             	mov    %rbx,(%rax)
    9980:	48 89 c6             	mov    %rax,%rsi
    9983:	bf fd ff ff ff       	mov    $0xfffffffd,%edi
    9988:	e8 63 fe ff ff       	call   97f0 <sgx_ocall>
    998d:	41 89 c4             	mov    %eax,%r12d
    9990:	e8 db e6 ff ff       	call   8070 <sgx_ocfree>
    9995:	48 83 c4 08          	add    $0x8,%rsp
    9999:	44 89 e0             	mov    %r12d,%eax
    999c:	5b                   	pop    %rbx
    999d:	41 5c                	pop    %r12
    999f:	c3                   	ret    
    99a0:	e8 cb e6 ff ff       	call   8070 <sgx_ocfree>
    99a5:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    99ab:	48 83 c4 08          	add    $0x8,%rsp
    99af:	44 89 e0             	mov    %r12d,%eax
    99b2:	5b                   	pop    %rbx
    99b3:	41 5c                	pop    %r12
    99b5:	c3                   	ret    
    99b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    99bd:	00 00 00 

00000000000099c0 <get_heap_base>:
    99c0:	f3 0f 1e fa          	endbr64 
    99c4:	48 83 ec 08          	sub    $0x8,%rsp
    99c8:	e8 f5 69 01 00       	call   203c2 <get_enclave_base>
    99cd:	48 8d 15 ac 8f 01 00 	lea    0x18fac(%rip),%rdx        # 22980 <g_global_data>
    99d4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    99d8:	48 83 c4 08          	add    $0x8,%rsp
    99dc:	48 01 d0             	add    %rdx,%rax
    99df:	c3                   	ret    

00000000000099e0 <get_heap_size>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	48 8d 05 31 03 02 00 	lea    0x20331(%rip),%rax        # 29d1c <EDMM_supported>
    99eb:	48 8d 0d 8e 8f 01 00 	lea    0x18f8e(%rip),%rcx        # 22980 <g_global_data>
    99f2:	8b 00                	mov    (%rax),%eax
    99f4:	4c 8b 41 18          	mov    0x18(%rcx),%r8
    99f8:	85 c0                	test   %eax,%eax
    99fa:	74 41                	je     9a3d <get_heap_size+0x5d>
    99fc:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9a02:	85 c0                	test   %eax,%eax
    9a04:	74 37                	je     9a3d <get_heap_size+0x5d>
    9a06:	31 d2                	xor    %edx,%edx
    9a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9a0f:	00 
    9a10:	89 d0                	mov    %edx,%eax
    9a12:	48 83 c0 0a          	add    $0xa,%rax
    9a16:	48 c1 e0 05          	shl    $0x5,%rax
    9a1a:	48 01 c8             	add    %rcx,%rax
    9a1d:	0f b7 30             	movzwl (%rax),%esi
    9a20:	66 83 fe 03          	cmp    $0x3,%si
    9a24:	75 0a                	jne    9a30 <get_heap_size+0x50>
    9a26:	8b 40 04             	mov    0x4(%rax),%eax
    9a29:	48 c1 e0 0c          	shl    $0xc,%rax
    9a2d:	49 01 c0             	add    %rax,%r8
    9a30:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9a36:	83 c2 01             	add    $0x1,%edx
    9a39:	39 d0                	cmp    %edx,%eax
    9a3b:	77 d3                	ja     9a10 <get_heap_size+0x30>
    9a3d:	4c 89 c0             	mov    %r8,%rax
    9a40:	c3                   	ret    
    9a41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9a48:	00 00 00 
    9a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009a50 <get_heap_min_size>:
    9a50:	f3 0f 1e fa          	endbr64 
    9a54:	48 8d 0d 25 8f 01 00 	lea    0x18f25(%rip),%rcx        # 22980 <g_global_data>
    9a5b:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9a61:	85 c0                	test   %eax,%eax
    9a63:	74 3b                	je     9aa0 <get_heap_min_size+0x50>
    9a65:	31 d2                	xor    %edx,%edx
    9a67:	eb 14                	jmp    9a7d <get_heap_min_size+0x2d>
    9a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a70:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9a76:	83 c2 01             	add    $0x1,%edx
    9a79:	39 d0                	cmp    %edx,%eax
    9a7b:	76 23                	jbe    9aa0 <get_heap_min_size+0x50>
    9a7d:	89 d0                	mov    %edx,%eax
    9a7f:	48 83 c0 0a          	add    $0xa,%rax
    9a83:	48 c1 e0 05          	shl    $0x5,%rax
    9a87:	48 01 c8             	add    %rcx,%rax
    9a8a:	0f b7 30             	movzwl (%rax),%esi
    9a8d:	66 83 fe 01          	cmp    $0x1,%si
    9a91:	75 dd                	jne    9a70 <get_heap_min_size+0x20>
    9a93:	8b 40 04             	mov    0x4(%rax),%eax
    9a96:	48 c1 e0 0c          	shl    $0xc,%rax
    9a9a:	c3                   	ret    
    9a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9aa0:	31 c0                	xor    %eax,%eax
    9aa2:	c3                   	ret    
    9aa3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9aaa:	00 00 00 
    9aad:	0f 1f 00             	nopl   (%rax)

0000000000009ab0 <get_rsrv_base>:
    9ab0:	f3 0f 1e fa          	endbr64 
    9ab4:	48 83 ec 08          	sub    $0x8,%rsp
    9ab8:	e8 05 69 01 00       	call   203c2 <get_enclave_base>
    9abd:	48 8d 15 bc 8e 01 00 	lea    0x18ebc(%rip),%rdx        # 22980 <g_global_data>
    9ac4:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    9ac8:	48 83 c4 08          	add    $0x8,%rsp
    9acc:	48 01 d0             	add    %rdx,%rax
    9acf:	c3                   	ret    

0000000000009ad0 <get_rsrv_size>:
    9ad0:	f3 0f 1e fa          	endbr64 
    9ad4:	48 8d 05 41 02 02 00 	lea    0x20241(%rip),%rax        # 29d1c <EDMM_supported>
    9adb:	48 8d 0d 9e 8e 01 00 	lea    0x18e9e(%rip),%rcx        # 22980 <g_global_data>
    9ae2:	8b 00                	mov    (%rax),%eax
    9ae4:	4c 8b 41 28          	mov    0x28(%rcx),%r8
    9ae8:	85 c0                	test   %eax,%eax
    9aea:	74 41                	je     9b2d <get_rsrv_size+0x5d>
    9aec:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9af2:	85 c0                	test   %eax,%eax
    9af4:	74 37                	je     9b2d <get_rsrv_size+0x5d>
    9af6:	31 d2                	xor    %edx,%edx
    9af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9aff:	00 
    9b00:	89 d0                	mov    %edx,%eax
    9b02:	48 83 c0 0a          	add    $0xa,%rax
    9b06:	48 c1 e0 05          	shl    $0x5,%rax
    9b0a:	48 01 c8             	add    %rcx,%rax
    9b0d:	0f b7 30             	movzwl (%rax),%esi
    9b10:	66 83 fe 16          	cmp    $0x16,%si
    9b14:	75 0a                	jne    9b20 <get_rsrv_size+0x50>
    9b16:	8b 40 04             	mov    0x4(%rax),%eax
    9b19:	48 c1 e0 0c          	shl    $0xc,%rax
    9b1d:	49 01 c0             	add    %rax,%r8
    9b20:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9b26:	83 c2 01             	add    $0x1,%edx
    9b29:	39 d0                	cmp    %edx,%eax
    9b2b:	77 d3                	ja     9b00 <get_rsrv_size+0x30>
    9b2d:	4c 89 c0             	mov    %r8,%rax
    9b30:	c3                   	ret    
    9b31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b38:	00 00 00 
    9b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009b40 <get_rsrv_min_size>:
    9b40:	f3 0f 1e fa          	endbr64 
    9b44:	48 8d 0d 35 8e 01 00 	lea    0x18e35(%rip),%rcx        # 22980 <g_global_data>
    9b4b:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9b51:	85 c0                	test   %eax,%eax
    9b53:	74 3b                	je     9b90 <get_rsrv_min_size+0x50>
    9b55:	31 d2                	xor    %edx,%edx
    9b57:	eb 14                	jmp    9b6d <get_rsrv_min_size+0x2d>
    9b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9b60:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9b66:	83 c2 01             	add    $0x1,%edx
    9b69:	39 d0                	cmp    %edx,%eax
    9b6b:	76 23                	jbe    9b90 <get_rsrv_min_size+0x50>
    9b6d:	89 d0                	mov    %edx,%eax
    9b6f:	48 83 c0 0a          	add    $0xa,%rax
    9b73:	48 c1 e0 05          	shl    $0x5,%rax
    9b77:	48 01 c8             	add    %rcx,%rax
    9b7a:	0f b7 30             	movzwl (%rax),%esi
    9b7d:	66 83 fe 14          	cmp    $0x14,%si
    9b81:	75 dd                	jne    9b60 <get_rsrv_min_size+0x20>
    9b83:	8b 40 04             	mov    0x4(%rax),%eax
    9b86:	48 c1 e0 0c          	shl    $0xc,%rax
    9b8a:	c3                   	ret    
    9b8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9b90:	31 c0                	xor    %eax,%eax
    9b92:	c3                   	ret    
    9b93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b9a:	00 00 00 
    9b9d:	0f 1f 00             	nopl   (%rax)

0000000000009ba0 <get_errno_addr>:
    9ba0:	f3 0f 1e fa          	endbr64 
    9ba4:	48 83 ec 08          	sub    $0x8,%rsp
    9ba8:	e8 60 68 01 00       	call   2040d <get_thread_data>
    9bad:	48 83 c4 08          	add    $0x8,%rsp
    9bb1:	48 83 c0 40          	add    $0x40,%rax
    9bb5:	c3                   	ret    
    9bb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9bbd:	00 00 00 

0000000000009bc0 <feature_supported>:
    9bc0:	f3 0f 1e fa          	endbr64 
    9bc4:	48 85 ff             	test   %rdi,%rdi
    9bc7:	74 37                	je     9c00 <feature_supported+0x40>
    9bc9:	31 d2                	xor    %edx,%edx
    9bcb:	eb 08                	jmp    9bd5 <feature_supported+0x15>
    9bcd:	0f 1f 00             	nopl   (%rax)
    9bd0:	48 85 c0             	test   %rax,%rax
    9bd3:	78 2b                	js     9c00 <feature_supported+0x40>
    9bd5:	89 d0                	mov    %edx,%eax
    9bd7:	83 c2 01             	add    $0x1,%edx
    9bda:	41 89 d1             	mov    %edx,%r9d
    9bdd:	49 89 c0             	mov    %rax,%r8
    9be0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    9be4:	41 c1 e1 06          	shl    $0x6,%r9d
    9be8:	44 39 ce             	cmp    %r9d,%esi
    9beb:	73 e3                	jae    9bd0 <feature_supported+0x10>
    9bed:	41 c1 e0 06          	shl    $0x6,%r8d
    9bf1:	44 29 c6             	sub    %r8d,%esi
    9bf4:	89 f1                	mov    %esi,%ecx
    9bf6:	48 d3 e8             	shr    %cl,%rax
    9bf9:	83 e0 01             	and    $0x1,%eax
    9bfc:	c3                   	ret    
    9bfd:	0f 1f 00             	nopl   (%rax)
    9c00:	31 c0                	xor    %eax,%eax
    9c02:	c3                   	ret    
    9c03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9c0a:	00 00 00 
    9c0d:	0f 1f 00             	nopl   (%rax)

0000000000009c10 <is_stack_addr>:
    9c10:	f3 0f 1e fa          	endbr64 
    9c14:	55                   	push   %rbp
    9c15:	48 89 f5             	mov    %rsi,%rbp
    9c18:	53                   	push   %rbx
    9c19:	48 89 fb             	mov    %rdi,%rbx
    9c1c:	48 83 ec 08          	sub    $0x8,%rsp
    9c20:	e8 e8 67 01 00       	call   2040d <get_thread_data>
    9c25:	31 c9                	xor    %ecx,%ecx
    9c27:	48 01 dd             	add    %rbx,%rbp
    9c2a:	48 89 c2             	mov    %rax,%rdx
    9c2d:	0f 92 c1             	setb   %cl
    9c30:	48 3b 68 10          	cmp    0x10(%rax),%rbp
    9c34:	0f 96 c0             	setbe  %al
    9c37:	48 39 5a 18          	cmp    %rbx,0x18(%rdx)
    9c3b:	0f 96 c2             	setbe  %dl
    9c3e:	21 d0                	and    %edx,%eax
    9c40:	48 85 c9             	test   %rcx,%rcx
    9c43:	0f 94 c2             	sete   %dl
    9c46:	48 83 c4 08          	add    $0x8,%rsp
    9c4a:	21 d0                	and    %edx,%eax
    9c4c:	5b                   	pop    %rbx
    9c4d:	5d                   	pop    %rbp
    9c4e:	c3                   	ret    
    9c4f:	90                   	nop

0000000000009c50 <is_valid_sp>:
    9c50:	f3 0f 1e fa          	endbr64 
    9c54:	40 f6 c7 07          	test   $0x7,%dil
    9c58:	74 06                	je     9c60 <is_valid_sp+0x10>
    9c5a:	31 c0                	xor    %eax,%eax
    9c5c:	c3                   	ret    
    9c5d:	0f 1f 00             	nopl   (%rax)
    9c60:	53                   	push   %rbx
    9c61:	48 89 fb             	mov    %rdi,%rbx
    9c64:	e8 a4 67 01 00       	call   2040d <get_thread_data>
    9c69:	48 89 c2             	mov    %rax,%rdx
    9c6c:	48 3b 58 10          	cmp    0x10(%rax),%rbx
    9c70:	0f 96 c0             	setbe  %al
    9c73:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    9c77:	5b                   	pop    %rbx
    9c78:	0f 93 c2             	setae  %dl
    9c7b:	21 d0                	and    %edx,%eax
    9c7d:	c3                   	ret    
    9c7e:	66 90                	xchg   %ax,%ax

0000000000009c80 <is_utility_thread>:
    9c80:	f3 0f 1e fa          	endbr64 
    9c84:	48 83 ec 08          	sub    $0x8,%rsp
    9c88:	e8 80 67 01 00       	call   2040d <get_thread_data>
    9c8d:	45 31 c0             	xor    %r8d,%r8d
    9c90:	48 85 c0             	test   %rax,%rax
    9c93:	74 08                	je     9c9d <is_utility_thread+0x1d>
    9c95:	4c 8b 40 30          	mov    0x30(%rax),%r8
    9c99:	41 83 e0 01          	and    $0x1,%r8d
    9c9d:	44 89 c0             	mov    %r8d,%eax
    9ca0:	48 83 c4 08          	add    $0x8,%rsp
    9ca4:	c3                   	ret    
    9ca5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9cac:	00 00 00 
    9caf:	90                   	nop

0000000000009cb0 <is_pkru_enabled>:
    9cb0:	f3 0f 1e fa          	endbr64 
    9cb4:	48 83 ec 08          	sub    $0x8,%rsp
    9cb8:	e8 73 04 00 00       	call   a130 <get_xfeature_state>
    9cbd:	48 83 c4 08          	add    $0x8,%rsp
    9cc1:	48 c1 e8 09          	shr    $0x9,%rax
    9cc5:	83 e0 01             	and    $0x1,%eax
    9cc8:	c3                   	ret    
    9cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009cd0 <internal_handle_exception>:
    9cd0:	f3 0f 1e fa          	endbr64 
    9cd4:	55                   	push   %rbp
    9cd5:	48 89 e5             	mov    %rsp,%rbp
    9cd8:	41 56                	push   %r14
    9cda:	41 55                	push   %r13
    9cdc:	41 54                	push   %r12
    9cde:	49 89 fc             	mov    %rdi,%r12
    9ce1:	53                   	push   %rbx
    9ce2:	48 83 ec 10          	sub    $0x10,%rsp
    9ce6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9ced:	00 00 
    9cef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    9cf3:	31 c0                	xor    %eax,%eax
    9cf5:	e8 13 67 01 00       	call   2040d <get_thread_data>
    9cfa:	49 89 c5             	mov    %rax,%r13
    9cfd:	48 8b 40 60          	mov    0x60(%rax),%rax
    9d01:	48 85 c0             	test   %rax,%rax
    9d04:	0f 88 d6 00 00 00    	js     9de0 <internal_handle_exception+0x110>
    9d0a:	48 83 c0 01          	add    $0x1,%rax
    9d0e:	48 8d 3d 1b 06 02 00 	lea    0x2061b(%rip),%rdi        # 2a330 <_ZL14g_handler_lock>
    9d15:	49 89 45 60          	mov    %rax,0x60(%r13)
    9d19:	e8 32 10 00 00       	call   ad50 <sgx_spin_lock>
    9d1e:	48 8b 05 13 06 02 00 	mov    0x20613(%rip),%rax        # 2a338 <_ZL12g_first_node>
    9d25:	48 85 c0             	test   %rax,%rax
    9d28:	0f 84 df 00 00 00    	je     9e0d <internal_handle_exception+0x13d>
    9d2e:	45 31 f6             	xor    %r14d,%r14d
    9d31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9d38:	48 8b 40 08          	mov    0x8(%rax),%rax
    9d3c:	49 83 c6 08          	add    $0x8,%r14
    9d40:	48 85 c0             	test   %rax,%rax
    9d43:	75 f3                	jne    9d38 <internal_handle_exception+0x68>
    9d45:	4d 85 f6             	test   %r14,%r14
    9d48:	0f 84 bf 00 00 00    	je     9e0d <internal_handle_exception+0x13d>
    9d4e:	4c 89 f7             	mov    %r14,%rdi
    9d51:	e8 fa 0d 00 00       	call   ab50 <alloca>
    9d56:	48 89 c3             	mov    %rax,%rbx
    9d59:	48 85 c0             	test   %rax,%rax
    9d5c:	0f 84 cf 00 00 00    	je     9e31 <internal_handle_exception+0x161>
    9d62:	48 8b 05 cf 05 02 00 	mov    0x205cf(%rip),%rax        # 2a338 <_ZL12g_first_node>
    9d69:	48 85 c0             	test   %rax,%rax
    9d6c:	74 1e                	je     9d8c <internal_handle_exception+0xbc>
    9d6e:	48 89 da             	mov    %rbx,%rdx
    9d71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9d78:	48 8b 08             	mov    (%rax),%rcx
    9d7b:	48 8b 40 08          	mov    0x8(%rax),%rax
    9d7f:	48 83 c2 08          	add    $0x8,%rdx
    9d83:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
    9d87:	48 85 c0             	test   %rax,%rax
    9d8a:	75 ec                	jne    9d78 <internal_handle_exception+0xa8>
    9d8c:	48 8d 3d 9d 05 02 00 	lea    0x2059d(%rip),%rdi        # 2a330 <_ZL14g_handler_lock>
    9d93:	e8 28 10 00 00       	call   adc0 <sgx_spin_unlock>
    9d98:	49 83 6d 60 01       	subq   $0x1,0x60(%r13)
    9d9d:	4d 85 f6             	test   %r14,%r14
    9da0:	74 4b                	je     9ded <internal_handle_exception+0x11d>
    9da2:	49 01 de             	add    %rbx,%r14
    9da5:	eb 12                	jmp    9db9 <internal_handle_exception+0xe9>
    9da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9dae:	00 00 
    9db0:	48 83 c3 08          	add    $0x8,%rbx
    9db4:	4c 39 f3             	cmp    %r14,%rbx
    9db7:	74 34                	je     9ded <internal_handle_exception+0x11d>
    9db9:	48 8b 03             	mov    (%rbx),%rax
    9dbc:	4c 89 e7             	mov    %r12,%rdi
    9dbf:	48 33 05 62 05 02 00 	xor    0x20562(%rip),%rax        # 2a328 <_ZL12g_veh_cookie>
    9dc6:	ff d0                	call   *%rax
    9dc8:	83 f8 ff             	cmp    $0xffffffff,%eax
    9dcb:	75 e3                	jne    9db0 <internal_handle_exception+0xe0>
    9dcd:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    9dd2:	e8 79 fe ff ff       	call   9c50 <is_valid_sp>
    9dd7:	84 c0                	test   %al,%al
    9dd9:	75 28                	jne    9e03 <internal_handle_exception+0x133>
    9ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9de0:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    9de7:	ff 
    9de8:	e8 a7 69 01 00       	call   20794 <abort>
    9ded:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    9df2:	e8 59 fe ff ff       	call   9c50 <is_valid_sp>
    9df7:	84 c0                	test   %al,%al
    9df9:	74 e5                	je     9de0 <internal_handle_exception+0x110>
    9dfb:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    9e02:	ff 
    9e03:	4c 89 e7             	mov    %r12,%rdi
    9e06:	e8 9c 69 01 00       	call   207a7 <continue_execution>
    9e0b:	eb d3                	jmp    9de0 <internal_handle_exception+0x110>
    9e0d:	48 8d 3d 1c 05 02 00 	lea    0x2051c(%rip),%rdi        # 2a330 <_ZL14g_handler_lock>
    9e14:	45 31 f6             	xor    %r14d,%r14d
    9e17:	e8 a4 0f 00 00       	call   adc0 <sgx_spin_unlock>
    9e1c:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    9e23:	ff 
    9e24:	4c 89 e7             	mov    %r12,%rdi
    9e27:	e8 7b 69 01 00       	call   207a7 <continue_execution>
    9e2c:	e9 1d ff ff ff       	jmp    9d4e <internal_handle_exception+0x7e>
    9e31:	48 8d 3d f8 04 02 00 	lea    0x204f8(%rip),%rdi        # 2a330 <_ZL14g_handler_lock>
    9e38:	e8 83 0f 00 00       	call   adc0 <sgx_spin_unlock>
    9e3d:	eb a1                	jmp    9de0 <internal_handle_exception+0x110>
    9e3f:	90                   	nop

0000000000009e40 <trts_handle_exception>:
    9e40:	f3 0f 1e fa          	endbr64 
    9e44:	41 55                	push   %r13
    9e46:	41 54                	push   %r12
    9e48:	55                   	push   %rbp
    9e49:	53                   	push   %rbx
    9e4a:	48 89 fb             	mov    %rdi,%rbx
    9e4d:	48 83 ec 08          	sub    $0x8,%rsp
    9e51:	e8 b7 65 01 00       	call   2040d <get_thread_data>
    9e56:	48 85 c0             	test   %rax,%rax
    9e59:	0f 84 21 01 00 00    	je     9f80 <trts_handle_exception+0x140>
    9e5f:	48 85 db             	test   %rbx,%rbx
    9e62:	0f 84 18 01 00 00    	je     9f80 <trts_handle_exception+0x140>
    9e68:	48 89 df             	mov    %rbx,%rdi
    9e6b:	48 89 c5             	mov    %rax,%rbp
    9e6e:	e8 8d e3 ff ff       	call   8200 <check_static_stack_canary>
    9e73:	85 c0                	test   %eax,%eax
    9e75:	0f 85 05 01 00 00    	jne    9f80 <trts_handle_exception+0x140>
    9e7b:	e8 4e 65 01 00       	call   203ce <get_enclave_state>
    9e80:	83 f8 02             	cmp    $0x2,%eax
    9e83:	0f 85 f7 00 00 00    	jne    9f80 <trts_handle_exception+0x140>
    9e89:	48 83 7d 60 ff       	cmpq   $0xffffffffffffffff,0x60(%rbp)
    9e8e:	0f 84 ec 00 00 00    	je     9f80 <trts_handle_exception+0x140>
    9e94:	48 8b 45 10          	mov    0x10(%rbp),%rax
    9e98:	48 05 b0 02 01 00    	add    $0x102b0,%rax
    9e9e:	48 39 c3             	cmp    %rax,%rbx
    9ea1:	0f 85 d9 00 00 00    	jne    9f80 <trts_handle_exception+0x140>
    9ea7:	4c 8b 65 20          	mov    0x20(%rbp),%r12
    9eab:	4c 89 e0             	mov    %r12,%rax
    9eae:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    9eb4:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    9eba:	48 39 c3             	cmp    %rax,%rbx
    9ebd:	0f 85 bd 00 00 00    	jne    9f80 <trts_handle_exception+0x140>
    9ec3:	4d 8b ac 24 90 00 00 	mov    0x90(%r12),%r13
    9eca:	00 
    9ecb:	be 08 00 00 00       	mov    $0x8,%esi
    9ed0:	4c 89 ef             	mov    %r13,%rdi
    9ed3:	e8 58 e0 ff ff       	call   7f30 <sgx_is_outside_enclave>
    9ed8:	85 c0                	test   %eax,%eax
    9eda:	0f 84 c0 00 00 00    	je     9fa0 <trts_handle_exception+0x160>
    9ee0:	49 8b 5c 24 20       	mov    0x20(%r12),%rbx
    9ee5:	49 39 dd             	cmp    %rbx,%r13
    9ee8:	0f 84 b2 00 00 00    	je     9fa0 <trts_handle_exception+0x160>
    9eee:	31 f6                	xor    %esi,%esi
    9ef0:	48 89 df             	mov    %rbx,%rdi
    9ef3:	e8 18 fd ff ff       	call   9c10 <is_stack_addr>
    9ef8:	84 c0                	test   %al,%al
    9efa:	0f 84 a0 00 00 00    	je     9fa0 <trts_handle_exception+0x160>
    9f00:	48 81 eb 18 01 00 00 	sub    $0x118,%rbx
    9f07:	be 18 01 00 00       	mov    $0x118,%esi
    9f0c:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    9f10:	48 89 df             	mov    %rbx,%rdi
    9f13:	e8 f8 fc ff ff       	call   9c10 <is_stack_addr>
    9f18:	84 c0                	test   %al,%al
    9f1a:	0f 84 80 00 00 00    	je     9fa0 <trts_handle_exception+0x160>
    9f20:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
    9f24:	be 08 00 00 00       	mov    $0x8,%esi
    9f29:	4c 89 ef             	mov    %r13,%rdi
    9f2c:	e8 df fc ff ff       	call   9c10 <is_stack_addr>
    9f31:	84 c0                	test   %al,%al
    9f33:	74 6b                	je     9fa0 <trts_handle_exception+0x160>
    9f35:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
    9f3c:	4c 39 ef             	cmp    %r13,%rdi
    9f3f:	76 73                	jbe    9fb4 <trts_handle_exception+0x174>
    9f41:	48 8d 9f ff 0f 00 00 	lea    0xfff(%rdi),%rbx
    9f48:	4c 29 eb             	sub    %r13,%rbx
    9f4b:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    9f52:	48 39 df             	cmp    %rbx,%rdi
    9f55:	76 49                	jbe    9fa0 <trts_handle_exception+0x160>
    9f57:	48 29 df             	sub    %rbx,%rdi
    9f5a:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    9f5e:	72 40                	jb     9fa0 <trts_handle_exception+0x160>
    9f60:	48 89 de             	mov    %rbx,%rsi
    9f63:	48 c1 ee 0c          	shr    $0xc,%rsi
    9f67:	74 37                	je     9fa0 <trts_handle_exception+0x160>
    9f69:	e8 92 e9 ff ff       	call   8900 <apply_pages_within_exception>
    9f6e:	85 c0                	test   %eax,%eax
    9f70:	75 2e                	jne    9fa0 <trts_handle_exception+0x160>
    9f72:	48 29 9d 98 00 00 00 	sub    %rbx,0x98(%rbp)
    9f79:	eb 17                	jmp    9f92 <trts_handle_exception+0x152>
    9f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9f80:	48 8d 05 59 03 02 00 	lea    0x20359(%rip),%rax        # 2a2e0 <g_enclave_state>
    9f87:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    9f8d:	b8 06 10 00 00       	mov    $0x1006,%eax
    9f92:	48 83 c4 08          	add    $0x8,%rsp
    9f96:	5b                   	pop    %rbx
    9f97:	5d                   	pop    %rbp
    9f98:	41 5c                	pop    %r12
    9f9a:	41 5d                	pop    %r13
    9f9c:	c3                   	ret    
    9f9d:	0f 1f 00             	nopl   (%rax)
    9fa0:	48 8d 05 39 03 02 00 	lea    0x20339(%rip),%rax        # 2a2e0 <g_enclave_state>
    9fa7:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    9fad:	b8 09 10 00 00       	mov    $0x1009,%eax
    9fb2:	eb de                	jmp    9f92 <trts_handle_exception+0x152>
    9fb4:	49 8b 84 24 88 00 00 	mov    0x88(%r12),%rax
    9fbb:	00 
    9fbc:	48 3b 05 25 00 02 00 	cmp    0x20025(%rip),%rax        # 29fe8 <_DYNAMIC+0x170>
    9fc3:	0f 84 0e 01 00 00    	je     a0d7 <trts_handle_exception+0x297>
    9fc9:	48 3b 05 10 00 02 00 	cmp    0x20010(%rip),%rax        # 29fe0 <_DYNAMIC+0x168>
    9fd0:	0f 84 28 01 00 00    	je     a0fe <trts_handle_exception+0x2be>
    9fd6:	41 80 bc 24 a3 00 00 	cmpb   $0x0,0xa3(%r12)
    9fdd:	00 00 
    9fdf:	79 9f                	jns    9f80 <trts_handle_exception+0x140>
    9fe1:	41 0f b6 94 24 a0 00 	movzbl 0xa0(%r12),%edx
    9fe8:	00 00 
    9fea:	48 8d 0d df fc ff ff 	lea    -0x321(%rip),%rcx        # 9cd0 <internal_handle_exception>
    9ff1:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
    9ff7:	41 0f b6 94 24 a1 00 	movzbl 0xa1(%r12),%edx
    9ffe:	00 00 
    a000:	83 e2 07             	and    $0x7,%edx
    a003:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    a009:	49 8b 14 24          	mov    (%r12),%rdx
    a00d:	48 89 13             	mov    %rdx,(%rbx)
    a010:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    a015:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    a019:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    a01e:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    a022:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
    a027:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    a02b:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
    a030:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    a034:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    a039:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    a03d:	49 8b 54 24 30       	mov    0x30(%r12),%rdx
    a042:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    a046:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
    a04b:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    a04f:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
    a056:	00 
    a057:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    a05e:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    a065:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
    a06a:	48 89 53 40          	mov    %rdx,0x40(%rbx)
    a06e:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
    a073:	48 89 53 48          	mov    %rdx,0x48(%rbx)
    a077:	49 8b 54 24 50       	mov    0x50(%r12),%rdx
    a07c:	48 89 53 50          	mov    %rdx,0x50(%rbx)
    a080:	49 8b 54 24 58       	mov    0x58(%r12),%rdx
    a085:	48 89 53 58          	mov    %rdx,0x58(%rbx)
    a089:	49 8b 54 24 60       	mov    0x60(%r12),%rdx
    a08e:	48 89 53 60          	mov    %rdx,0x60(%rbx)
    a092:	49 8b 54 24 68       	mov    0x68(%r12),%rdx
    a097:	48 89 53 68          	mov    %rdx,0x68(%rbx)
    a09b:	49 8b 54 24 70       	mov    0x70(%r12),%rdx
    a0a0:	48 89 53 70          	mov    %rdx,0x70(%rbx)
    a0a4:	49 8b 54 24 78       	mov    0x78(%r12),%rdx
    a0a9:	48 89 53 78          	mov    %rdx,0x78(%rbx)
    a0ad:	49 89 8c 24 88 00 00 	mov    %rcx,0x88(%r12)
    a0b4:	00 
    a0b5:	4d 89 6c 24 20       	mov    %r13,0x20(%r12)
    a0ba:	49 89 1c 24          	mov    %rbx,(%r12)
    a0be:	49 89 5c 24 38       	mov    %rbx,0x38(%r12)
    a0c3:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    a0c7:	31 c0                	xor    %eax,%eax
    a0c9:	41 80 a4 24 a3 00 00 	andb   $0x7f,0xa3(%r12)
    a0d0:	00 7f 
    a0d2:	e9 bb fe ff ff       	jmp    9f92 <trts_handle_exception+0x152>
    a0d7:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
    a0dc:	0f 85 e7 fe ff ff    	jne    9fc9 <trts_handle_exception+0x189>
    a0e2:	49 83 8c 24 80 00 00 	orq    $0x1,0x80(%r12)
    a0e9:	00 01 
    a0eb:	48 83 c0 03          	add    $0x3,%rax
    a0ef:	49 89 84 24 88 00 00 	mov    %rax,0x88(%r12)
    a0f6:	00 
    a0f7:	31 c0                	xor    %eax,%eax
    a0f9:	e9 94 fe ff ff       	jmp    9f92 <trts_handle_exception+0x152>
    a0fe:	49 83 3c 24 08       	cmpq   $0x8,(%r12)
    a103:	0f 85 cd fe ff ff    	jne    9fd6 <trts_handle_exception+0x196>
    a109:	48 83 c0 03          	add    $0x3,%rax
    a10d:	49 c7 04 24 01 00 00 	movq   $0x1,(%r12)
    a114:	00 
    a115:	49 89 84 24 88 00 00 	mov    %rax,0x88(%r12)
    a11c:	00 
    a11d:	31 c0                	xor    %eax,%eax
    a11f:	49 83 8c 24 80 00 00 	orq    $0x40,0x80(%r12)
    a126:	00 40 
    a128:	e9 65 fe ff ff       	jmp    9f92 <trts_handle_exception+0x152>
    a12d:	0f 1f 00             	nopl   (%rax)

000000000000a130 <get_xfeature_state>:
    a130:	f3 0f 1e fa          	endbr64 
    a134:	48 83 ec 08          	sub    $0x8,%rsp
    a138:	e8 c3 5b 01 00       	call   1fd00 <sgx_self_report>
    a13d:	31 d2                	xor    %edx,%edx
    a13f:	48 8b 40 38          	mov    0x38(%rax),%rax
    a143:	48 83 f8 03          	cmp    $0x3,%rax
    a147:	0f 95 c2             	setne  %dl
    a14a:	89 15 94 01 02 00    	mov    %edx,0x20194(%rip)        # 2a2e4 <g_xsave_enabled>
    a150:	48 83 c4 08          	add    $0x8,%rsp
    a154:	c3                   	ret    
    a155:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a15c:	00 00 00 
    a15f:	90                   	nop

000000000000a160 <do_relocs>:
    a160:	48 01 fe             	add    %rdi,%rsi
    a163:	48 01 fa             	add    %rdi,%rdx
    a166:	48 85 c9             	test   %rcx,%rcx
    a169:	0f 84 b8 01 00 00    	je     a327 <do_relocs+0x1c7>
    a16f:	55                   	push   %rbp
    a170:	45 31 c9             	xor    %r9d,%r9d
    a173:	4c 8d 15 9a 76 01 00 	lea    0x1769a(%rip),%r10        # 21814 <_ZZ17ecall_malloc_freeE8__func__+0x14>
    a17a:	53                   	push   %rbx
    a17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a180:	4c 8b 1e             	mov    (%rsi),%r11
    a183:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a187:	49 01 fb             	add    %rdi,%r11
    a18a:	41 89 c0             	mov    %eax,%r8d
    a18d:	83 f8 12             	cmp    $0x12,%eax
    a190:	77 42                	ja     a1d4 <do_relocs+0x74>
    a192:	4f 63 04 82          	movslq (%r10,%r8,4),%r8
    a196:	4d 01 d0             	add    %r10,%r8
    a199:	3e 41 ff e0          	notrack jmp *%r8
    a19d:	0f 1f 00             	nopl   (%rax)
    a1a0:	48 c1 e8 20          	shr    $0x20,%rax
    a1a4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    a1a8:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    a1ac:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    a1b1:	c0 e8 04             	shr    $0x4,%al
    a1b4:	3c 02                	cmp    $0x2,%al
    a1b6:	0f 84 c4 00 00 00    	je     a280 <do_relocs+0x120>
    a1bc:	4d 85 c0             	test   %r8,%r8
    a1bf:	74 4f                	je     a210 <do_relocs+0xb0>
    a1c1:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a1c7:	75 0b                	jne    a1d4 <do_relocs+0x74>
    a1c9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a1ce:	0f 84 dc 00 00 00    	je     a2b0 <do_relocs+0x150>
    a1d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a1d9:	5b                   	pop    %rbx
    a1da:	5d                   	pop    %rbp
    a1db:	c3                   	ret    
    a1dc:	0f 1f 40 00          	nopl   0x0(%rax)
    a1e0:	48 c1 e8 20          	shr    $0x20,%rax
    a1e4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    a1e8:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    a1ec:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    a1f1:	c0 e8 04             	shr    $0x4,%al
    a1f4:	3c 02                	cmp    $0x2,%al
    a1f6:	0f 84 94 00 00 00    	je     a290 <do_relocs+0x130>
    a1fc:	4d 85 c0             	test   %r8,%r8
    a1ff:	74 0f                	je     a210 <do_relocs+0xb0>
    a201:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a205:	48 01 f8             	add    %rdi,%rax
    a208:	49 03 40 08          	add    0x8(%r8),%rax
    a20c:	49 89 03             	mov    %rax,(%r11)
    a20f:	90                   	nop
    a210:	49 83 c1 01          	add    $0x1,%r9
    a214:	48 83 c6 18          	add    $0x18,%rsi
    a218:	4c 39 c9             	cmp    %r9,%rcx
    a21b:	0f 85 5f ff ff ff    	jne    a180 <do_relocs+0x20>
    a221:	31 c0                	xor    %eax,%eax
    a223:	5b                   	pop    %rbx
    a224:	5d                   	pop    %rbp
    a225:	c3                   	ret    
    a226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a22d:	00 00 00 
    a230:	48 c1 e8 20          	shr    $0x20,%rax
    a234:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    a238:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    a23c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    a241:	c0 e8 04             	shr    $0x4,%al
    a244:	3c 02                	cmp    $0x2,%al
    a246:	74 58                	je     a2a0 <do_relocs+0x140>
    a248:	4d 85 c0             	test   %r8,%r8
    a24b:	74 c3                	je     a210 <do_relocs+0xb0>
    a24d:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a251:	49 03 40 08          	add    0x8(%r8),%rax
    a255:	49 89 03             	mov    %rax,(%r11)
    a258:	eb b6                	jmp    a210 <do_relocs+0xb0>
    a25a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a260:	49 c7 03 01 00 00 00 	movq   $0x1,(%r11)
    a267:	eb a7                	jmp    a210 <do_relocs+0xb0>
    a269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a270:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a274:	48 01 f8             	add    %rdi,%rax
    a277:	49 89 03             	mov    %rax,(%r11)
    a27a:	eb 94                	jmp    a210 <do_relocs+0xb0>
    a27c:	0f 1f 40 00          	nopl   0x0(%rax)
    a280:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    a285:	0f 85 31 ff ff ff    	jne    a1bc <do_relocs+0x5c>
    a28b:	eb 83                	jmp    a210 <do_relocs+0xb0>
    a28d:	0f 1f 00             	nopl   (%rax)
    a290:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    a295:	0f 85 61 ff ff ff    	jne    a1fc <do_relocs+0x9c>
    a29b:	e9 70 ff ff ff       	jmp    a210 <do_relocs+0xb0>
    a2a0:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    a2a5:	75 a1                	jne    a248 <do_relocs+0xe8>
    a2a7:	e9 64 ff ff ff       	jmp    a210 <do_relocs+0xb0>
    a2ac:	0f 1f 40 00          	nopl   0x0(%rax)
    a2b0:	48 89 f8             	mov    %rdi,%rax
    a2b3:	48 03 47 20          	add    0x20(%rdi),%rax
    a2b7:	0f 84 17 ff ff ff    	je     a1d4 <do_relocs+0x74>
    a2bd:	0f b7 5f 38          	movzwl 0x38(%rdi),%ebx
    a2c1:	85 db                	test   %ebx,%ebx
    a2c3:	0f 84 0b ff ff ff    	je     a1d4 <do_relocs+0x74>
    a2c9:	8d 6b ff             	lea    -0x1(%rbx),%ebp
    a2cc:	48 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%rbx
    a2d3:	00 
    a2d4:	48 29 eb             	sub    %rbp,%rbx
    a2d7:	48 8d 5c d8 38       	lea    0x38(%rax,%rbx,8),%rbx
    a2dc:	eb 0f                	jmp    a2ed <do_relocs+0x18d>
    a2de:	66 90                	xchg   %ax,%ax
    a2e0:	48 83 c0 38          	add    $0x38,%rax
    a2e4:	48 39 c3             	cmp    %rax,%rbx
    a2e7:	0f 84 e7 fe ff ff    	je     a1d4 <do_relocs+0x74>
    a2ed:	83 38 07             	cmpl   $0x7,(%rax)
    a2f0:	75 ee                	jne    a2e0 <do_relocs+0x180>
    a2f2:	48 8b 58 28          	mov    0x28(%rax),%rbx
    a2f6:	48 8b 40 30          	mov    0x30(%rax),%rax
    a2fa:	48 83 f8 01          	cmp    $0x1,%rax
    a2fe:	76 0b                	jbe    a30b <do_relocs+0x1ab>
    a300:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
    a305:	48 f7 d8             	neg    %rax
    a308:	48 21 c3             	and    %rax,%rbx
    a30b:	48 85 db             	test   %rbx,%rbx
    a30e:	0f 84 c0 fe ff ff    	je     a1d4 <do_relocs+0x74>
    a314:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a318:	49 03 40 08          	add    0x8(%r8),%rax
    a31c:	48 29 d8             	sub    %rbx,%rax
    a31f:	49 89 03             	mov    %rax,(%r11)
    a322:	e9 e9 fe ff ff       	jmp    a210 <do_relocs+0xb0>
    a327:	31 c0                	xor    %eax,%eax
    a329:	c3                   	ret    
    a32a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a330 <relocate_enclave>:
    a330:	f3 0f 1e fa          	endbr64 
    a334:	48 85 ff             	test   %rdi,%rdi
    a337:	0f 84 9b 01 00 00    	je     a4d8 <relocate_enclave+0x1a8>
    a33d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a343:	0f 85 8f 01 00 00    	jne    a4d8 <relocate_enclave+0x1a8>
    a349:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a34e:	0f 85 84 01 00 00    	jne    a4d8 <relocate_enclave+0x1a8>
    a354:	41 57                	push   %r15
    a356:	41 56                	push   %r14
    a358:	41 55                	push   %r13
    a35a:	41 54                	push   %r12
    a35c:	55                   	push   %rbp
    a35d:	53                   	push   %rbx
    a35e:	48 89 fb             	mov    %rdi,%rbx
    a361:	48 83 ec 08          	sub    $0x8,%rsp
    a365:	48 03 5f 20          	add    0x20(%rdi),%rbx
    a369:	0f 84 e5 00 00 00    	je     a454 <relocate_enclave+0x124>
    a36f:	31 ed                	xor    %ebp,%ebp
    a371:	66 83 7f 38 00       	cmpw   $0x0,0x38(%rdi)
    a376:	4c 8d 25 e3 74 01 00 	lea    0x174e3(%rip),%r12        # 21860 <_ZZ17ecall_malloc_freeE8__func__+0x60>
    a37d:	75 1c                	jne    a39b <relocate_enclave+0x6b>
    a37f:	e9 7c 01 00 00       	jmp    a500 <relocate_enclave+0x1d0>
    a384:	0f 1f 40 00          	nopl   0x0(%rax)
    a388:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    a38c:	83 c5 01             	add    $0x1,%ebp
    a38f:	48 83 c3 38          	add    $0x38,%rbx
    a393:	39 e8                	cmp    %ebp,%eax
    a395:	0f 86 65 01 00 00    	jbe    a500 <relocate_enclave+0x1d0>
    a39b:	83 3b 02             	cmpl   $0x2,(%rbx)
    a39e:	75 e8                	jne    a388 <relocate_enclave+0x58>
    a3a0:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    a3a4:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    a3a8:	48 01 fe             	add    %rdi,%rsi
    a3ab:	49 c1 eb 04          	shr    $0x4,%r11
    a3af:	74 d7                	je     a388 <relocate_enclave+0x58>
    a3b1:	49 c1 e3 04          	shl    $0x4,%r11
    a3b5:	45 31 f6             	xor    %r14d,%r14d
    a3b8:	45 31 ed             	xor    %r13d,%r13d
    a3bb:	31 c0                	xor    %eax,%eax
    a3bd:	49 01 f3             	add    %rsi,%r11
    a3c0:	45 31 ff             	xor    %r15d,%r15d
    a3c3:	45 31 d2             	xor    %r10d,%r10d
    a3c6:	45 31 c9             	xor    %r9d,%r9d
    a3c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a3d0:	4c 8b 06             	mov    (%rsi),%r8
    a3d3:	4d 85 c0             	test   %r8,%r8
    a3d6:	74 28                	je     a400 <relocate_enclave+0xd0>
    a3d8:	49 83 f8 17          	cmp    $0x17,%r8
    a3dc:	77 0f                	ja     a3ed <relocate_enclave+0xbd>
    a3de:	4f 63 04 84          	movslq (%r12,%r8,4),%r8
    a3e2:	4d 01 e0             	add    %r12,%r8
    a3e5:	3e 41 ff e0          	notrack jmp *%r8
    a3e9:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    a3ed:	48 83 c6 10          	add    $0x10,%rsi
    a3f1:	49 39 f3             	cmp    %rsi,%r11
    a3f4:	75 da                	jne    a3d0 <relocate_enclave+0xa0>
    a3f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a3fd:	00 00 00 
    a400:	4d 85 d2             	test   %r10,%r10
    a403:	0f 84 d7 00 00 00    	je     a4e0 <relocate_enclave+0x1b0>
    a409:	4d 85 ed             	test   %r13,%r13
    a40c:	74 46                	je     a454 <relocate_enclave+0x124>
    a40e:	31 d2                	xor    %edx,%edx
    a410:	4c 89 d6             	mov    %r10,%rsi
    a413:	4c 89 0c 24          	mov    %r9,(%rsp)
    a417:	49 f7 f5             	div    %r13
    a41a:	4c 89 ca             	mov    %r9,%rdx
    a41d:	48 89 c1             	mov    %rax,%rcx
    a420:	e8 3b fd ff ff       	call   a160 <do_relocs>
    a425:	4c 8b 0c 24          	mov    (%rsp),%r9
    a429:	85 c0                	test   %eax,%eax
    a42b:	75 27                	jne    a454 <relocate_enclave+0x124>
    a42d:	4d 85 ff             	test   %r15,%r15
    a430:	0f 84 52 ff ff ff    	je     a388 <relocate_enclave+0x58>
    a436:	31 d2                	xor    %edx,%edx
    a438:	4c 89 f0             	mov    %r14,%rax
    a43b:	4c 89 fe             	mov    %r15,%rsi
    a43e:	49 f7 f5             	div    %r13
    a441:	4c 89 ca             	mov    %r9,%rdx
    a444:	48 89 c1             	mov    %rax,%rcx
    a447:	e8 14 fd ff ff       	call   a160 <do_relocs>
    a44c:	85 c0                	test   %eax,%eax
    a44e:	0f 84 34 ff ff ff    	je     a388 <relocate_enclave+0x58>
    a454:	48 83 c4 08          	add    $0x8,%rsp
    a458:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a45d:	5b                   	pop    %rbx
    a45e:	5d                   	pop    %rbp
    a45f:	41 5c                	pop    %r12
    a461:	41 5d                	pop    %r13
    a463:	41 5e                	pop    %r14
    a465:	41 5f                	pop    %r15
    a467:	c3                   	ret    
    a468:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
    a46c:	48 83 c6 10          	add    $0x10,%rsi
    a470:	49 39 f3             	cmp    %rsi,%r11
    a473:	0f 85 57 ff ff ff    	jne    a3d0 <relocate_enclave+0xa0>
    a479:	eb 85                	jmp    a400 <relocate_enclave+0xd0>
    a47b:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    a47f:	48 83 c6 10          	add    $0x10,%rsi
    a483:	49 39 f3             	cmp    %rsi,%r11
    a486:	0f 85 44 ff ff ff    	jne    a3d0 <relocate_enclave+0xa0>
    a48c:	e9 6f ff ff ff       	jmp    a400 <relocate_enclave+0xd0>
    a491:	48 8b 46 08          	mov    0x8(%rsi),%rax
    a495:	48 83 c6 10          	add    $0x10,%rsi
    a499:	49 39 f3             	cmp    %rsi,%r11
    a49c:	0f 85 2e ff ff ff    	jne    a3d0 <relocate_enclave+0xa0>
    a4a2:	e9 59 ff ff ff       	jmp    a400 <relocate_enclave+0xd0>
    a4a7:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    a4ab:	48 83 c6 10          	add    $0x10,%rsi
    a4af:	49 39 f3             	cmp    %rsi,%r11
    a4b2:	0f 85 18 ff ff ff    	jne    a3d0 <relocate_enclave+0xa0>
    a4b8:	e9 43 ff ff ff       	jmp    a400 <relocate_enclave+0xd0>
    a4bd:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    a4c1:	48 83 c6 10          	add    $0x10,%rsi
    a4c5:	49 39 f3             	cmp    %rsi,%r11
    a4c8:	0f 85 02 ff ff ff    	jne    a3d0 <relocate_enclave+0xa0>
    a4ce:	e9 2d ff ff ff       	jmp    a400 <relocate_enclave+0xd0>
    a4d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a4d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a4dd:	c3                   	ret    
    a4de:	66 90                	xchg   %ax,%ax
    a4e0:	4d 85 ff             	test   %r15,%r15
    a4e3:	0f 84 9f fe ff ff    	je     a388 <relocate_enclave+0x58>
    a4e9:	4d 85 ed             	test   %r13,%r13
    a4ec:	0f 85 44 ff ff ff    	jne    a436 <relocate_enclave+0x106>
    a4f2:	e9 5d ff ff ff       	jmp    a454 <relocate_enclave+0x124>
    a4f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a4fe:	00 00 
    a500:	48 83 c4 08          	add    $0x8,%rsp
    a504:	31 c0                	xor    %eax,%eax
    a506:	5b                   	pop    %rbx
    a507:	5d                   	pop    %rbp
    a508:	41 5c                	pop    %r12
    a50a:	41 5d                	pop    %r13
    a50c:	41 5e                	pop    %r14
    a50e:	41 5f                	pop    %r15
    a510:	c3                   	ret    
    a511:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a518:	00 00 00 
    a51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a520 <elf_tls_info>:
    a520:	f3 0f 1e fa          	endbr64 
    a524:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a529:	48 85 ff             	test   %rdi,%rdi
    a52c:	0f 84 81 00 00 00    	je     a5b3 <elf_tls_info+0x93>
    a532:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a538:	75 78                	jne    a5b2 <elf_tls_info+0x92>
    a53a:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a53f:	75 71                	jne    a5b2 <elf_tls_info+0x92>
    a541:	48 8b 47 20          	mov    0x20(%rdi),%rax
    a545:	48 01 f8             	add    %rdi,%rax
    a548:	48 85 f6             	test   %rsi,%rsi
    a54b:	41 0f 94 c0          	sete   %r8b
    a54f:	48 85 d2             	test   %rdx,%rdx
    a552:	0f 94 c1             	sete   %cl
    a555:	41 08 c8             	or     %cl,%r8b
    a558:	75 5a                	jne    a5b4 <elf_tls_info+0x94>
    a55a:	48 85 c0             	test   %rax,%rax
    a55d:	74 55                	je     a5b4 <elf_tls_info+0x94>
    a55f:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    a563:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    a56a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    a571:	85 c9                	test   %ecx,%ecx
    a573:	74 3b                	je     a5b0 <elf_tls_info+0x90>
    a575:	44 8d 41 ff          	lea    -0x1(%rcx),%r8d
    a579:	4a 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%rcx
    a580:	00 
    a581:	4c 29 c1             	sub    %r8,%rcx
    a584:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    a589:	eb 0e                	jmp    a599 <elf_tls_info+0x79>
    a58b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a590:	48 83 c0 38          	add    $0x38,%rax
    a594:	48 39 c8             	cmp    %rcx,%rax
    a597:	74 17                	je     a5b0 <elf_tls_info+0x90>
    a599:	83 38 07             	cmpl   $0x7,(%rax)
    a59c:	75 f2                	jne    a590 <elf_tls_info+0x70>
    a59e:	48 03 78 10          	add    0x10(%rax),%rdi
    a5a2:	48 89 3e             	mov    %rdi,(%rsi)
    a5a5:	48 8b 40 20          	mov    0x20(%rax),%rax
    a5a9:	48 89 02             	mov    %rax,(%rdx)
    a5ac:	31 c0                	xor    %eax,%eax
    a5ae:	c3                   	ret    
    a5af:	90                   	nop
    a5b0:	31 c0                	xor    %eax,%eax
    a5b2:	c3                   	ret    
    a5b3:	c3                   	ret    
    a5b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a5b9:	c3                   	ret    
    a5ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a5c0 <elf_get_init_array>:
    a5c0:	f3 0f 1e fa          	endbr64 
    a5c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a5c9:	48 85 ff             	test   %rdi,%rdi
    a5cc:	0f 84 d1 00 00 00    	je     a6a3 <elf_get_init_array+0xe3>
    a5d2:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a5d8:	0f 85 bf 00 00 00    	jne    a69d <elf_get_init_array+0xdd>
    a5de:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a5e3:	0f 85 b4 00 00 00    	jne    a69d <elf_get_init_array+0xdd>
    a5e9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    a5ed:	48 01 f9             	add    %rdi,%rcx
    a5f0:	48 85 f6             	test   %rsi,%rsi
    a5f3:	41 0f 94 c0          	sete   %r8b
    a5f7:	48 85 d2             	test   %rdx,%rdx
    a5fa:	0f 94 c0             	sete   %al
    a5fd:	41 08 c0             	or     %al,%r8b
    a600:	0f 85 92 00 00 00    	jne    a698 <elf_get_init_array+0xd8>
    a606:	48 85 c9             	test   %rcx,%rcx
    a609:	0f 84 89 00 00 00    	je     a698 <elf_get_init_array+0xd8>
    a60f:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    a613:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    a61a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    a621:	85 c0                	test   %eax,%eax
    a623:	74 7b                	je     a6a0 <elf_get_init_array+0xe0>
    a625:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    a629:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    a630:	00 
    a631:	4c 29 c0             	sub    %r8,%rax
    a634:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    a639:	eb 0e                	jmp    a649 <elf_get_init_array+0x89>
    a63b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a640:	48 83 c1 38          	add    $0x38,%rcx
    a644:	4c 39 d1             	cmp    %r10,%rcx
    a647:	74 57                	je     a6a0 <elf_get_init_array+0xe0>
    a649:	83 39 02             	cmpl   $0x2,(%rcx)
    a64c:	75 f2                	jne    a640 <elf_get_init_array+0x80>
    a64e:	48 8b 41 18          	mov    0x18(%rcx),%rax
    a652:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    a656:	48 01 f8             	add    %rdi,%rax
    a659:	49 c1 e9 04          	shr    $0x4,%r9
    a65d:	74 e1                	je     a640 <elf_get_init_array+0x80>
    a65f:	49 c1 e1 04          	shl    $0x4,%r9
    a663:	49 01 c1             	add    %rax,%r9
    a666:	eb 1e                	jmp    a686 <elf_get_init_array+0xc6>
    a668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a66f:	00 
    a670:	49 83 f8 1b          	cmp    $0x1b,%r8
    a674:	75 07                	jne    a67d <elf_get_init_array+0xbd>
    a676:	4c 8b 40 08          	mov    0x8(%rax),%r8
    a67a:	4c 89 02             	mov    %r8,(%rdx)
    a67d:	48 83 c0 10          	add    $0x10,%rax
    a681:	49 39 c1             	cmp    %rax,%r9
    a684:	74 ba                	je     a640 <elf_get_init_array+0x80>
    a686:	4c 8b 00             	mov    (%rax),%r8
    a689:	49 83 f8 19          	cmp    $0x19,%r8
    a68d:	75 e1                	jne    a670 <elf_get_init_array+0xb0>
    a68f:	4c 8b 40 08          	mov    0x8(%rax),%r8
    a693:	4c 89 06             	mov    %r8,(%rsi)
    a696:	eb e5                	jmp    a67d <elf_get_init_array+0xbd>
    a698:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a69d:	c3                   	ret    
    a69e:	66 90                	xchg   %ax,%ax
    a6a0:	31 c0                	xor    %eax,%eax
    a6a2:	c3                   	ret    
    a6a3:	c3                   	ret    
    a6a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a6ab:	00 00 00 
    a6ae:	66 90                	xchg   %ax,%ax

000000000000a6b0 <elf_get_uninit_array>:
    a6b0:	f3 0f 1e fa          	endbr64 
    a6b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a6b9:	48 85 ff             	test   %rdi,%rdi
    a6bc:	0f 84 d1 00 00 00    	je     a793 <elf_get_uninit_array+0xe3>
    a6c2:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a6c8:	0f 85 bf 00 00 00    	jne    a78d <elf_get_uninit_array+0xdd>
    a6ce:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a6d3:	0f 85 b4 00 00 00    	jne    a78d <elf_get_uninit_array+0xdd>
    a6d9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    a6dd:	48 01 f9             	add    %rdi,%rcx
    a6e0:	48 85 f6             	test   %rsi,%rsi
    a6e3:	41 0f 94 c0          	sete   %r8b
    a6e7:	48 85 d2             	test   %rdx,%rdx
    a6ea:	0f 94 c0             	sete   %al
    a6ed:	41 08 c0             	or     %al,%r8b
    a6f0:	0f 85 92 00 00 00    	jne    a788 <elf_get_uninit_array+0xd8>
    a6f6:	48 85 c9             	test   %rcx,%rcx
    a6f9:	0f 84 89 00 00 00    	je     a788 <elf_get_uninit_array+0xd8>
    a6ff:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    a703:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    a70a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    a711:	85 c0                	test   %eax,%eax
    a713:	74 7b                	je     a790 <elf_get_uninit_array+0xe0>
    a715:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    a719:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    a720:	00 
    a721:	4c 29 c0             	sub    %r8,%rax
    a724:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    a729:	eb 0e                	jmp    a739 <elf_get_uninit_array+0x89>
    a72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a730:	48 83 c1 38          	add    $0x38,%rcx
    a734:	4c 39 d1             	cmp    %r10,%rcx
    a737:	74 57                	je     a790 <elf_get_uninit_array+0xe0>
    a739:	83 39 02             	cmpl   $0x2,(%rcx)
    a73c:	75 f2                	jne    a730 <elf_get_uninit_array+0x80>
    a73e:	48 8b 41 18          	mov    0x18(%rcx),%rax
    a742:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    a746:	48 01 f8             	add    %rdi,%rax
    a749:	49 c1 e9 04          	shr    $0x4,%r9
    a74d:	74 e1                	je     a730 <elf_get_uninit_array+0x80>
    a74f:	49 c1 e1 04          	shl    $0x4,%r9
    a753:	49 01 c1             	add    %rax,%r9
    a756:	eb 1e                	jmp    a776 <elf_get_uninit_array+0xc6>
    a758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a75f:	00 
    a760:	49 83 f8 1c          	cmp    $0x1c,%r8
    a764:	75 07                	jne    a76d <elf_get_uninit_array+0xbd>
    a766:	4c 8b 40 08          	mov    0x8(%rax),%r8
    a76a:	4c 89 02             	mov    %r8,(%rdx)
    a76d:	48 83 c0 10          	add    $0x10,%rax
    a771:	49 39 c1             	cmp    %rax,%r9
    a774:	74 ba                	je     a730 <elf_get_uninit_array+0x80>
    a776:	4c 8b 00             	mov    (%rax),%r8
    a779:	49 83 f8 1a          	cmp    $0x1a,%r8
    a77d:	75 e1                	jne    a760 <elf_get_uninit_array+0xb0>
    a77f:	4c 8b 40 08          	mov    0x8(%rax),%r8
    a783:	4c 89 06             	mov    %r8,(%rsi)
    a786:	eb e5                	jmp    a76d <elf_get_uninit_array+0xbd>
    a788:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a78d:	c3                   	ret    
    a78e:	66 90                	xchg   %ax,%ax
    a790:	31 c0                	xor    %eax,%eax
    a792:	c3                   	ret    
    a793:	c3                   	ret    
    a794:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a79b:	00 00 00 
    a79e:	66 90                	xchg   %ax,%ax

000000000000a7a0 <change_protection>:
    a7a0:	f3 0f 1e fa          	endbr64 
    a7a4:	48 85 ff             	test   %rdi,%rdi
    a7a7:	0f 84 21 02 00 00    	je     a9ce <change_protection+0x22e>
    a7ad:	41 56                	push   %r14
    a7af:	41 55                	push   %r13
    a7b1:	41 54                	push   %r12
    a7b3:	49 89 fc             	mov    %rdi,%r12
    a7b6:	55                   	push   %rbp
    a7b7:	53                   	push   %rbx
    a7b8:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    a7be:	0f 85 0c 01 00 00    	jne    a8d0 <change_protection+0x130>
    a7c4:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    a7c9:	0f 85 01 01 00 00    	jne    a8d0 <change_protection+0x130>
    a7cf:	48 89 fb             	mov    %rdi,%rbx
    a7d2:	48 03 5f 20          	add    0x20(%rdi),%rbx
    a7d6:	0f 84 f4 00 00 00    	je     a8d0 <change_protection+0x130>
    a7dc:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    a7e0:	85 c0                	test   %eax,%eax
    a7e2:	0f 84 50 01 00 00    	je     a938 <change_protection+0x198>
    a7e8:	8d 50 ff             	lea    -0x1(%rax),%edx
    a7eb:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    a7f2:	00 
    a7f3:	48 29 d0             	sub    %rdx,%rax
    a7f6:	48 8d 54 c3 38       	lea    0x38(%rbx,%rax,8),%rdx
    a7fb:	48 89 d8             	mov    %rbx,%rax
    a7fe:	eb 09                	jmp    a809 <change_protection+0x69>
    a800:	48 83 c0 38          	add    $0x38,%rax
    a804:	48 39 d0             	cmp    %rdx,%rax
    a807:	74 42                	je     a84b <change_protection+0xab>
    a809:	83 38 02             	cmpl   $0x2,(%rax)
    a80c:	75 f2                	jne    a800 <change_protection+0x60>
    a80e:	48 8b 48 20          	mov    0x20(%rax),%rcx
    a812:	48 8b 78 18          	mov    0x18(%rax),%rdi
    a816:	4c 01 e7             	add    %r12,%rdi
    a819:	48 c1 e9 04          	shr    $0x4,%rcx
    a81d:	48 89 f8             	mov    %rdi,%rax
    a820:	74 29                	je     a84b <change_protection+0xab>
    a822:	48 c1 e1 04          	shl    $0x4,%rcx
    a826:	48 01 f9             	add    %rdi,%rcx
    a829:	eb 18                	jmp    a843 <change_protection+0xa3>
    a82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a830:	48 83 fa 16          	cmp    $0x16,%rdx
    a834:	0f 84 89 01 00 00    	je     a9c3 <change_protection+0x223>
    a83a:	48 83 c0 10          	add    $0x10,%rax
    a83e:	48 39 c8             	cmp    %rcx,%rax
    a841:	74 08                	je     a84b <change_protection+0xab>
    a843:	48 8b 10             	mov    (%rax),%rdx
    a846:	48 85 d2             	test   %rdx,%rdx
    a849:	75 e5                	jne    a830 <change_protection+0x90>
    a84b:	45 31 f6             	xor    %r14d,%r14d
    a84e:	48 bd ff ff ff ff 02 	movabs $0x2ffffffff,%rbp
    a855:	00 00 00 
    a858:	45 31 ed             	xor    %r13d,%r13d
    a85b:	eb 1a                	jmp    a877 <change_protection+0xd7>
    a85d:	0f 1f 00             	nopl   (%rax)
    a860:	41 0f b7 44 24 38    	movzwl 0x38(%r12),%eax
    a866:	41 83 c5 01          	add    $0x1,%r13d
    a86a:	48 83 c3 38          	add    $0x38,%rbx
    a86e:	44 39 e8             	cmp    %r13d,%eax
    a871:	0f 86 c1 00 00 00    	jbe    a938 <change_protection+0x198>
    a877:	45 85 f6             	test   %r14d,%r14d
    a87a:	74 0c                	je     a888 <change_protection+0xe8>
    a87c:	48 8b 03             	mov    (%rbx),%rax
    a87f:	48 21 e8             	and    %rbp,%rax
    a882:	48 83 f8 01          	cmp    $0x1,%rax
    a886:	74 58                	je     a8e0 <change_protection+0x140>
    a888:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    a88e:	75 d0                	jne    a860 <change_protection+0xc0>
    a890:	48 8b 43 10          	mov    0x10(%rbx),%rax
    a894:	48 89 c7             	mov    %rax,%rdi
    a897:	48 03 43 28          	add    0x28(%rbx),%rax
    a89b:	48 89 c6             	mov    %rax,%rsi
    a89e:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    a8a5:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    a8ac:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    a8b3:	48 39 f7             	cmp    %rsi,%rdi
    a8b6:	74 a8                	je     a860 <change_protection+0xc0>
    a8b8:	48 29 fe             	sub    %rdi,%rsi
    a8bb:	ba 01 00 00 00       	mov    $0x1,%edx
    a8c0:	4c 01 e7             	add    %r12,%rdi
    a8c3:	e8 a8 ed ff ff       	call   9670 <trts_mprotect>
    a8c8:	85 c0                	test   %eax,%eax
    a8ca:	74 94                	je     a860 <change_protection+0xc0>
    a8cc:	eb 07                	jmp    a8d5 <change_protection+0x135>
    a8ce:	66 90                	xchg   %ax,%ax
    a8d0:	b8 01 00 00 00       	mov    $0x1,%eax
    a8d5:	5b                   	pop    %rbx
    a8d6:	5d                   	pop    %rbp
    a8d7:	41 5c                	pop    %r12
    a8d9:	41 5d                	pop    %r13
    a8db:	41 5e                	pop    %r14
    a8dd:	c3                   	ret    
    a8de:	66 90                	xchg   %ax,%ax
    a8e0:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    a8e4:	48 8b 43 10          	mov    0x10(%rbx),%rax
    a8e8:	44 89 c2             	mov    %r8d,%edx
    a8eb:	48 89 c1             	mov    %rax,%rcx
    a8ee:	48 03 43 28          	add    0x28(%rbx),%rax
    a8f2:	c1 ea 02             	shr    $0x2,%edx
    a8f5:	48 89 c6             	mov    %rax,%rsi
    a8f8:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    a8ff:	83 e2 01             	and    $0x1,%edx
    a902:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    a909:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
    a90d:	48 89 d0             	mov    %rdx,%rax
    a910:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    a917:	48 83 c8 04          	or     $0x4,%rax
    a91b:	41 83 e0 01          	and    $0x1,%r8d
    a91f:	48 0f 45 d0          	cmovne %rax,%rdx
    a923:	48 29 ce             	sub    %rcx,%rsi
    a926:	e8 45 ed ff ff       	call   9670 <trts_mprotect>
    a92b:	85 c0                	test   %eax,%eax
    a92d:	0f 84 55 ff ff ff    	je     a888 <change_protection+0xe8>
    a933:	eb a0                	jmp    a8d5 <change_protection+0x135>
    a935:	0f 1f 00             	nopl   (%rax)
    a938:	8b 05 7a 81 01 00    	mov    0x1817a(%rip),%eax        # 22ab8 <g_global_data+0x138>
    a93e:	31 d2                	xor    %edx,%edx
    a940:	48 8d 3d 39 80 01 00 	lea    0x18039(%rip),%rdi        # 22980 <g_global_data>
    a947:	85 c0                	test   %eax,%eax
    a949:	75 12                	jne    a95d <change_protection+0x1bd>
    a94b:	eb 88                	jmp    a8d5 <change_protection+0x135>
    a94d:	0f 1f 00             	nopl   (%rax)
    a950:	8b 05 62 81 01 00    	mov    0x18162(%rip),%eax        # 22ab8 <g_global_data+0x138>
    a956:	83 c2 01             	add    $0x1,%edx
    a959:	39 d0                	cmp    %edx,%eax
    a95b:	76 5b                	jbe    a9b8 <change_protection+0x218>
    a95d:	89 d1                	mov    %edx,%ecx
    a95f:	48 8d 41 0a          	lea    0xa(%rcx),%rax
    a963:	48 c1 e0 05          	shl    $0x5,%rax
    a967:	48 01 f8             	add    %rdi,%rax
    a96a:	0f b7 30             	movzwl (%rax),%esi
    a96d:	66 83 fe 14          	cmp    $0x14,%si
    a971:	75 dd                	jne    a950 <change_protection+0x1b0>
    a973:	48 c1 e1 05          	shl    $0x5,%rcx
    a977:	48 01 f9             	add    %rdi,%rcx
    a97a:	48 8b 89 58 01 00 00 	mov    0x158(%rcx),%rcx
    a981:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    a988:	75 c6                	jne    a950 <change_protection+0x1b0>
    a98a:	8b 48 04             	mov    0x4(%rax),%ecx
    a98d:	85 c9                	test   %ecx,%ecx
    a98f:	74 bf                	je     a950 <change_protection+0x1b0>
    a991:	8b 70 04             	mov    0x4(%rax),%esi
    a994:	48 8b 78 08          	mov    0x8(%rax),%rdi
    a998:	ba 03 00 00 00       	mov    $0x3,%edx
    a99d:	5b                   	pop    %rbx
    a99e:	5d                   	pop    %rbp
    a99f:	4c 01 e7             	add    %r12,%rdi
    a9a2:	48 c1 e6 0c          	shl    $0xc,%rsi
    a9a6:	41 5c                	pop    %r12
    a9a8:	41 5d                	pop    %r13
    a9aa:	41 5e                	pop    %r14
    a9ac:	e9 bf ec ff ff       	jmp    9670 <trts_mprotect>
    a9b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a9b8:	5b                   	pop    %rbx
    a9b9:	31 c0                	xor    %eax,%eax
    a9bb:	5d                   	pop    %rbp
    a9bc:	41 5c                	pop    %r12
    a9be:	41 5d                	pop    %r13
    a9c0:	41 5e                	pop    %r14
    a9c2:	c3                   	ret    
    a9c3:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a9c9:	e9 80 fe ff ff       	jmp    a84e <change_protection+0xae>
    a9ce:	b8 01 00 00 00       	mov    $0x1,%eax
    a9d3:	c3                   	ret    
    a9d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a9db:	00 00 00 
    a9de:	66 90                	xchg   %ax,%ax

000000000000a9e0 <init_global_object>:
    a9e0:	f3 0f 1e fa          	endbr64 
    a9e4:	55                   	push   %rbp
    a9e5:	53                   	push   %rbx
    a9e6:	48 83 ec 28          	sub    $0x28,%rsp
    a9ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a9f1:	00 00 
    a9f3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    a9f8:	31 c0                	xor    %eax,%eax
    a9fa:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    aa01:	00 00 
    aa03:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    aa0a:	00 00 
    aa0c:	e8 b1 59 01 00       	call   203c2 <get_enclave_base>
    aa11:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    aa16:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    aa1b:	48 89 c7             	mov    %rax,%rdi
    aa1e:	48 89 c3             	mov    %rax,%rbx
    aa21:	e8 9a fb ff ff       	call   a5c0 <elf_get_init_array>
    aa26:	85 c0                	test   %eax,%eax
    aa28:	75 31                	jne    aa5b <init_global_object+0x7b>
    aa2a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    aa2f:	48 85 c0             	test   %rax,%rax
    aa32:	74 27                	je     aa5b <init_global_object+0x7b>
    aa34:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    aa39:	48 85 ed             	test   %rbp,%rbp
    aa3c:	74 1d                	je     aa5b <init_global_object+0x7b>
    aa3e:	48 01 c3             	add    %rax,%rbx
    aa41:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    aa45:	48 01 dd             	add    %rbx,%rbp
    aa48:	48 39 eb             	cmp    %rbp,%rbx
    aa4b:	73 0e                	jae    aa5b <init_global_object+0x7b>
    aa4d:	0f 1f 00             	nopl   (%rax)
    aa50:	ff 13                	call   *(%rbx)
    aa52:	48 83 c3 08          	add    $0x8,%rbx
    aa56:	48 39 dd             	cmp    %rbx,%rbp
    aa59:	77 f5                	ja     aa50 <init_global_object+0x70>
    aa5b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    aa60:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    aa67:	00 00 
    aa69:	75 07                	jne    aa72 <init_global_object+0x92>
    aa6b:	48 83 c4 28          	add    $0x28,%rsp
    aa6f:	5b                   	pop    %rbx
    aa70:	5d                   	pop    %rbp
    aa71:	c3                   	ret    
    aa72:	e8 d9 40 00 00       	call   eb50 <__stack_chk_fail>
    aa77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    aa7e:	00 00 

000000000000aa80 <uninit_global_object>:
    aa80:	f3 0f 1e fa          	endbr64 
    aa84:	55                   	push   %rbp
    aa85:	53                   	push   %rbx
    aa86:	48 83 ec 28          	sub    $0x28,%rsp
    aa8a:	48 8b 1d b7 f8 01 00 	mov    0x1f8b7(%rip),%rbx        # 2a348 <g_exit_function>
    aa91:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    aa98:	00 00 
    aa9a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    aa9f:	31 c0                	xor    %eax,%eax
    aaa1:	48 c7 05 9c f8 01 00 	movq   $0x0,0x1f89c(%rip)        # 2a348 <g_exit_function>
    aaa8:	00 00 00 00 
    aaac:	48 85 db             	test   %rbx,%rbx
    aaaf:	74 2b                	je     aadc <uninit_global_object+0x5c>
    aab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aab8:	48 8b 05 81 f8 01 00 	mov    0x1f881(%rip),%rax        # 2a340 <g_exit_function_cookie>
    aabf:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    aac3:	48 31 c7             	xor    %rax,%rdi
    aac6:	48 33 03             	xor    (%rbx),%rax
    aac9:	ff d0                	call   *%rax
    aacb:	48 89 df             	mov    %rbx,%rdi
    aace:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    aad2:	e8 99 26 00 00       	call   d170 <dlfree>
    aad7:	48 85 db             	test   %rbx,%rbx
    aada:	75 dc                	jne    aab8 <uninit_global_object+0x38>
    aadc:	e8 e1 58 01 00       	call   203c2 <get_enclave_base>
    aae1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    aae6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    aaeb:	48 89 c7             	mov    %rax,%rdi
    aaee:	48 89 c3             	mov    %rax,%rbx
    aaf1:	e8 ba fb ff ff       	call   a6b0 <elf_get_uninit_array>
    aaf6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    aafb:	48 85 c0             	test   %rax,%rax
    aafe:	74 2c                	je     ab2c <uninit_global_object+0xac>
    ab00:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    ab05:	48 85 d2             	test   %rdx,%rdx
    ab08:	74 22                	je     ab2c <uninit_global_object+0xac>
    ab0a:	48 01 c3             	add    %rax,%rbx
    ab0d:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ab11:	48 8d 6c 13 f8       	lea    -0x8(%rbx,%rdx,1),%rbp
    ab16:	48 39 eb             	cmp    %rbp,%rbx
    ab19:	77 11                	ja     ab2c <uninit_global_object+0xac>
    ab1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ab20:	ff 55 00             	call   *0x0(%rbp)
    ab23:	48 83 ed 08          	sub    $0x8,%rbp
    ab27:	48 39 eb             	cmp    %rbp,%rbx
    ab2a:	76 f4                	jbe    ab20 <uninit_global_object+0xa0>
    ab2c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ab31:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ab38:	00 00 
    ab3a:	75 07                	jne    ab43 <uninit_global_object+0xc3>
    ab3c:	48 83 c4 28          	add    $0x28,%rsp
    ab40:	5b                   	pop    %rbx
    ab41:	5d                   	pop    %rbp
    ab42:	c3                   	ret    
    ab43:	e8 08 40 00 00       	call   eb50 <__stack_chk_fail>
    ab48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ab4f:	00 

000000000000ab50 <alloca>:
    ab50:	f3 0f 1e fa          	endbr64 
    ab54:	5a                   	pop    %rdx
    ab55:	48 89 e1             	mov    %rsp,%rcx
    ab58:	48 83 c7 0f          	add    $0xf,%rdi
    ab5c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    ab60:	48 29 fc             	sub    %rdi,%rsp
    ab63:	48 89 e0             	mov    %rsp,%rax
    ab66:	3e ff e2             	notrack jmp *%rdx
    ab69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ab70 <__assert>:
    ab70:	f3 0f 1e fa          	endbr64 
    ab74:	50                   	push   %rax
    ab75:	58                   	pop    %rax
    ab76:	48 83 ec 08          	sub    $0x8,%rsp
    ab7a:	e8 15 5c 01 00       	call   20794 <abort>
    ab7f:	90                   	nop

000000000000ab80 <heap_init>:
    ab80:	f3 0f 1e fa          	endbr64 
    ab84:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ab8a:	48 85 ff             	test   %rdi,%rdi
    ab8d:	75 09                	jne    ab98 <heap_init+0x18>
    ab8f:	44 89 c0             	mov    %r8d,%eax
    ab92:	c3                   	ret    
    ab93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ab98:	48 89 f0             	mov    %rsi,%rax
    ab9b:	49 89 f9             	mov    %rdi,%r9
    ab9e:	48 09 d0             	or     %rdx,%rax
    aba1:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    aba8:	25 ff 0f 00 00       	and    $0xfff,%eax
    abad:	48 0b 05 8c f1 01 00 	or     0x1f18c(%rip),%rax        # 29d40 <heap_base>
    abb4:	4c 09 c8             	or     %r9,%rax
    abb7:	75 d6                	jne    ab8f <heap_init+0xf>
    abb9:	45 31 c0             	xor    %r8d,%r8d
    abbc:	48 89 3d 7d f1 01 00 	mov    %rdi,0x1f17d(%rip)        # 29d40 <heap_base>
    abc3:	48 89 35 6e f1 01 00 	mov    %rsi,0x1f16e(%rip)        # 29d38 <heap_size>
    abca:	44 89 c0             	mov    %r8d,%eax
    abcd:	48 89 15 54 f1 01 00 	mov    %rdx,0x1f154(%rip)        # 29d28 <heap_min_size>
    abd4:	89 0d 56 f1 01 00    	mov    %ecx,0x1f156(%rip)        # 29d30 <is_edmm_supported>
    abda:	c3                   	ret    
    abdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000abe0 <sbrk>:
    abe0:	f3 0f 1e fa          	endbr64 
    abe4:	41 54                	push   %r12
    abe6:	53                   	push   %rbx
    abe7:	48 83 ec 08          	sub    $0x8,%rsp
    abeb:	48 8b 05 4e f1 01 00 	mov    0x1f14e(%rip),%rax        # 29d40 <heap_base>
    abf2:	48 85 c0             	test   %rax,%rax
    abf5:	0f 84 f5 00 00 00    	je     acf0 <sbrk+0x110>
    abfb:	48 8b 1d 4e f7 01 00 	mov    0x1f74e(%rip),%rbx        # 2a350 <heap_used.2546>
    ac02:	48 85 ff             	test   %rdi,%rdi
    ac05:	0f 88 85 00 00 00    	js     ac90 <sbrk+0xb0>
    ac0b:	48 89 fa             	mov    %rdi,%rdx
    ac0e:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ac15:	48 f7 d2             	not    %rdx
    ac18:	48 39 da             	cmp    %rbx,%rdx
    ac1b:	72 66                	jb     ac83 <sbrk+0xa3>
    ac1d:	48 8d 14 1f          	lea    (%rdi,%rbx,1),%rdx
    ac21:	48 3b 15 10 f1 01 00 	cmp    0x1f110(%rip),%rdx        # 29d38 <heap_size>
    ac28:	77 59                	ja     ac83 <sbrk+0xa3>
    ac2a:	48 39 15 27 f7 01 00 	cmp    %rdx,0x1f727(%rip)        # 2a358 <g_peak_heap_used>
    ac31:	48 89 d1             	mov    %rdx,%rcx
    ac34:	48 0f 43 0d 1c f7 01 	cmovae 0x1f71c(%rip),%rcx        # 2a358 <g_peak_heap_used>
    ac3b:	00 
    ac3c:	48 89 15 0d f7 01 00 	mov    %rdx,0x1f70d(%rip)        # 2a350 <heap_used.2546>
    ac43:	4c 8d 24 18          	lea    (%rax,%rbx,1),%r12
    ac47:	48 89 0d 0a f7 01 00 	mov    %rcx,0x1f70a(%rip)        # 2a358 <g_peak_heap_used>
    ac4e:	8b 0d dc f0 01 00    	mov    0x1f0dc(%rip),%ecx        # 29d30 <is_edmm_supported>
    ac54:	85 c9                	test   %ecx,%ecx
    ac56:	74 2b                	je     ac83 <sbrk+0xa3>
    ac58:	48 8b 0d c9 f0 01 00 	mov    0x1f0c9(%rip),%rcx        # 29d28 <heap_min_size>
    ac5f:	48 39 ca             	cmp    %rcx,%rdx
    ac62:	76 1f                	jbe    ac83 <sbrk+0xa3>
    ac64:	4d 89 e0             	mov    %r12,%r8
    ac67:	48 39 d9             	cmp    %rbx,%rcx
    ac6a:	0f 83 a8 00 00 00    	jae    ad18 <sbrk+0x138>
    ac70:	48 89 fe             	mov    %rdi,%rsi
    ac73:	4c 89 c7             	mov    %r8,%rdi
    ac76:	48 c1 ee 0c          	shr    $0xc,%rsi
    ac7a:	e8 81 dd ff ff       	call   8a00 <apply_EPC_pages>
    ac7f:	85 c0                	test   %eax,%eax
    ac81:	75 5d                	jne    ace0 <sbrk+0x100>
    ac83:	48 83 c4 08          	add    $0x8,%rsp
    ac87:	4c 89 e0             	mov    %r12,%rax
    ac8a:	5b                   	pop    %rbx
    ac8b:	41 5c                	pop    %r12
    ac8d:	c3                   	ret    
    ac8e:	66 90                	xchg   %ax,%ax
    ac90:	48 89 fe             	mov    %rdi,%rsi
    ac93:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ac9a:	48 f7 de             	neg    %rsi
    ac9d:	48 39 de             	cmp    %rbx,%rsi
    aca0:	77 e1                	ja     ac83 <sbrk+0xa3>
    aca2:	44 8b 05 87 f0 01 00 	mov    0x1f087(%rip),%r8d        # 29d30 <is_edmm_supported>
    aca9:	48 01 df             	add    %rbx,%rdi
    acac:	48 89 3d 9d f6 01 00 	mov    %rdi,0x1f69d(%rip)        # 2a350 <heap_used.2546>
    acb3:	4c 8d 24 38          	lea    (%rax,%rdi,1),%r12
    acb7:	45 85 c0             	test   %r8d,%r8d
    acba:	74 c7                	je     ac83 <sbrk+0xa3>
    acbc:	48 8b 15 65 f0 01 00 	mov    0x1f065(%rip),%rdx        # 29d28 <heap_min_size>
    acc3:	48 39 da             	cmp    %rbx,%rdx
    acc6:	73 bb                	jae    ac83 <sbrk+0xa3>
    acc8:	4d 89 e0             	mov    %r12,%r8
    accb:	48 39 fa             	cmp    %rdi,%rdx
    acce:	73 38                	jae    ad08 <sbrk+0x128>
    acd0:	48 c1 ee 0c          	shr    $0xc,%rsi
    acd4:	4c 89 c7             	mov    %r8,%rdi
    acd7:	e8 b4 dd ff ff       	call   8a90 <trim_EPC_pages>
    acdc:	85 c0                	test   %eax,%eax
    acde:	74 a3                	je     ac83 <sbrk+0xa3>
    ace0:	48 89 1d 69 f6 01 00 	mov    %rbx,0x1f669(%rip)        # 2a350 <heap_used.2546>
    ace7:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    acee:	eb 93                	jmp    ac83 <sbrk+0xa3>
    acf0:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    acf7:	48 83 c4 08          	add    $0x8,%rsp
    acfb:	4c 89 e0             	mov    %r12,%rax
    acfe:	5b                   	pop    %rbx
    acff:	41 5c                	pop    %r12
    ad01:	c3                   	ret    
    ad02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ad08:	48 89 de             	mov    %rbx,%rsi
    ad0b:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
    ad0f:	48 29 d6             	sub    %rdx,%rsi
    ad12:	eb bc                	jmp    acd0 <sbrk+0xf0>
    ad14:	0f 1f 40 00          	nopl   0x0(%rax)
    ad18:	48 29 ca             	sub    %rcx,%rdx
    ad1b:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    ad1f:	48 89 d7             	mov    %rdx,%rdi
    ad22:	e9 49 ff ff ff       	jmp    ac70 <sbrk+0x90>
    ad27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ad2e:	00 00 

000000000000ad30 <sgx_cpuid>:
    ad30:	f3 0f 1e fa          	endbr64 
    ad34:	48 85 ff             	test   %rdi,%rdi
    ad37:	74 07                	je     ad40 <sgx_cpuid+0x10>
    ad39:	31 d2                	xor    %edx,%edx
    ad3b:	e9 c0 96 ff ff       	jmp    4400 <sgx_oc_cpuidex>
    ad40:	b8 02 00 00 00       	mov    $0x2,%eax
    ad45:	c3                   	ret    
    ad46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ad4d:	00 00 00 

000000000000ad50 <sgx_spin_lock>:
    ad50:	f3 0f 1e fa          	endbr64 
    ad54:	48 83 ec 18          	sub    $0x18,%rsp
    ad58:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ad5f:	00 00 
    ad61:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ad66:	31 c0                	xor    %eax,%eax
    ad68:	b8 01 00 00 00       	mov    $0x1,%eax
    ad6d:	f0 87 07             	lock xchg %eax,(%rdi)
    ad70:	89 44 24 04          	mov    %eax,0x4(%rsp)
    ad74:	8b 54 24 04          	mov    0x4(%rsp),%edx
    ad78:	85 d2                	test   %edx,%edx
    ad7a:	74 23                	je     ad9f <sgx_spin_lock+0x4f>
    ad7c:	ba 01 00 00 00       	mov    $0x1,%edx
    ad81:	eb 07                	jmp    ad8a <sgx_spin_lock+0x3a>
    ad83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ad88:	f3 90                	pause  
    ad8a:	8b 07                	mov    (%rdi),%eax
    ad8c:	85 c0                	test   %eax,%eax
    ad8e:	75 f8                	jne    ad88 <sgx_spin_lock+0x38>
    ad90:	f0 87 17             	lock xchg %edx,(%rdi)
    ad93:	89 54 24 04          	mov    %edx,0x4(%rsp)
    ad97:	8b 44 24 04          	mov    0x4(%rsp),%eax
    ad9b:	85 c0                	test   %eax,%eax
    ad9d:	75 eb                	jne    ad8a <sgx_spin_lock+0x3a>
    ad9f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ada4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    adab:	00 00 
    adad:	75 07                	jne    adb6 <sgx_spin_lock+0x66>
    adaf:	31 c0                	xor    %eax,%eax
    adb1:	48 83 c4 18          	add    $0x18,%rsp
    adb5:	c3                   	ret    
    adb6:	e8 95 3d 00 00       	call   eb50 <__stack_chk_fail>
    adbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000adc0 <sgx_spin_unlock>:
    adc0:	f3 0f 1e fa          	endbr64 
    adc4:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    adca:	31 c0                	xor    %eax,%eax
    adcc:	c3                   	ret    
    adcd:	0f 1f 00             	nopl   (%rax)

000000000000add0 <vsnprintf>:
    add0:	f3 0f 1e fa          	endbr64 
    add4:	41 55                	push   %r13
    add6:	49 89 cd             	mov    %rcx,%r13
    add9:	41 54                	push   %r12
    addb:	49 89 d4             	mov    %rdx,%r12
    adde:	ba 28 00 00 00       	mov    $0x28,%edx
    ade3:	55                   	push   %rbp
    ade4:	48 89 f5             	mov    %rsi,%rbp
    ade7:	31 f6                	xor    %esi,%esi
    ade9:	53                   	push   %rbx
    adea:	48 89 fb             	mov    %rdi,%rbx
    aded:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    adf4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    adfb:	00 00 
    adfd:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    ae04:	00 
    ae05:	31 c0                	xor    %eax,%eax
    ae07:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    ae0c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    ae11:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    ae18:	00 00 
    ae1a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    ae1f:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    ae26:	00 
    ae27:	e8 64 3b 00 00       	call   e990 <memset>
    ae2c:	b8 fe ff ff 7f       	mov    $0x7ffffffe,%eax
    ae31:	48 81 fd ff ff ff 7f 	cmp    $0x7fffffff,%rbp
    ae38:	77 08                	ja     ae42 <vsnprintf+0x72>
    ae3a:	8d 45 ff             	lea    -0x1(%rbp),%eax
    ae3d:	48 85 ed             	test   %rbp,%rbp
    ae40:	74 56                	je     ae98 <vsnprintf+0xc8>
    ae42:	4c 89 ea             	mov    %r13,%rdx
    ae45:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    ae4a:	4c 89 e6             	mov    %r12,%rsi
    ae4d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    ae52:	c7 44 24 20 08 02 ff 	movl   $0xffff0208,0x20(%rsp)
    ae59:	ff 
    ae5a:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    ae5f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    ae63:	89 44 24 30          	mov    %eax,0x30(%rsp)
    ae67:	e8 e4 54 00 00       	call   10350 <__vfprintf>
    ae6c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    ae71:	c6 02 00             	movb   $0x0,(%rdx)
    ae74:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    ae7b:	00 
    ae7c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    ae83:	00 00 
    ae85:	75 1a                	jne    aea1 <vsnprintf+0xd1>
    ae87:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    ae8e:	5b                   	pop    %rbx
    ae8f:	5d                   	pop    %rbp
    ae90:	41 5c                	pop    %r12
    ae92:	41 5d                	pop    %r13
    ae94:	c3                   	ret    
    ae95:	0f 1f 00             	nopl   (%rax)
    ae98:	31 c0                	xor    %eax,%eax
    ae9a:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
    ae9f:	eb a1                	jmp    ae42 <vsnprintf+0x72>
    aea1:	e8 aa 3c 00 00       	call   eb50 <__stack_chk_fail>
    aea6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aead:	00 00 00 

000000000000aeb0 <atoi>:
    aeb0:	f3 0f 1e fa          	endbr64 
    aeb4:	48 83 ec 08          	sub    $0x8,%rsp
    aeb8:	ba 0a 00 00 00       	mov    $0xa,%edx
    aebd:	31 f6                	xor    %esi,%esi
    aebf:	e8 4c 33 00 00       	call   e210 <strtol>
    aec4:	48 83 c4 08          	add    $0x8,%rsp
    aec8:	c3                   	ret    
    aec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000aed0 <init_mparams>:
    aed0:	48 83 ec 18          	sub    $0x18,%rsp
    aed4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    aedb:	00 00 
    aedd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    aee2:	31 c0                	xor    %eax,%eax
    aee4:	b8 01 00 00 00       	mov    $0x1,%eax
    aee9:	87 05 61 f8 01 00    	xchg   %eax,0x1f861(%rip)        # 2a750 <malloc_global_mutex>
    aeef:	85 c0                	test   %eax,%eax
    aef1:	74 1f                	je     af12 <init_mparams+0x42>
    aef3:	48 8d 15 56 f8 01 00 	lea    0x1f856(%rip),%rdx        # 2a750 <malloc_global_mutex>
    aefa:	b9 01 00 00 00       	mov    $0x1,%ecx
    aeff:	90                   	nop
    af00:	8b 02                	mov    (%rdx),%eax
    af02:	85 c0                	test   %eax,%eax
    af04:	75 fa                	jne    af00 <init_mparams+0x30>
    af06:	89 c8                	mov    %ecx,%eax
    af08:	87 05 42 f8 01 00    	xchg   %eax,0x1f842(%rip)        # 2a750 <malloc_global_mutex>
    af0e:	85 c0                	test   %eax,%eax
    af10:	75 ee                	jne    af00 <init_mparams+0x30>
    af12:	48 83 3d 06 f8 01 00 	cmpq   $0x0,0x1f806(%rip)        # 2a720 <mparams>
    af19:	00 
    af1a:	75 6b                	jne    af87 <init_mparams+0xb7>
    af1c:	48 89 e7             	mov    %rsp,%rdi
    af1f:	be 08 00 00 00       	mov    $0x8,%esi
    af24:	48 c7 05 01 f8 01 00 	movq   $0x1000,0x1f801(%rip)        # 2a730 <mparams+0x10>
    af2b:	00 10 00 00 
    af2f:	48 c7 05 ee f7 01 00 	movq   $0x1000,0x1f7ee(%rip)        # 2a728 <mparams+0x8>
    af36:	00 10 00 00 
    af3a:	48 c7 05 f3 f7 01 00 	movq   $0xffffffffffffffff,0x1f7f3(%rip)        # 2a738 <mparams+0x18>
    af41:	ff ff ff ff 
    af45:	48 c7 05 f0 f7 01 00 	movq   $0x200000,0x1f7f0(%rip)        # 2a740 <mparams+0x20>
    af4c:	00 00 20 00 
    af50:	c7 05 ee f7 01 00 02 	movl   $0x2,0x1f7ee(%rip)        # 2a748 <mparams+0x28>
    af57:	00 00 00 
    af5a:	48 c7 05 6b f7 01 00 	movq   $0x2,0x1f76b(%rip)        # 2a6d0 <_gm_+0x370>
    af61:	02 00 00 00 
    af65:	e8 66 d1 ff ff       	call   80d0 <sgx_read_rand>
    af6a:	85 c0                	test   %eax,%eax
    af6c:	75 3d                	jne    afab <init_mparams+0xdb>
    af6e:	48 8b 04 24          	mov    (%rsp),%rax
    af72:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    af78:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    af7c:	48 83 c8 08          	or     $0x8,%rax
    af80:	48 89 05 99 f7 01 00 	mov    %rax,0x1f799(%rip)        # 2a720 <mparams>
    af87:	c7 05 bf f7 01 00 00 	movl   $0x0,0x1f7bf(%rip)        # 2a750 <malloc_global_mutex>
    af8e:	00 00 00 
    af91:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    af96:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    af9d:	00 00 
    af9f:	75 0f                	jne    afb0 <init_mparams+0xe0>
    afa1:	b8 01 00 00 00       	mov    $0x1,%eax
    afa6:	48 83 c4 18          	add    $0x18,%rsp
    afaa:	c3                   	ret    
    afab:	e8 e4 57 01 00       	call   20794 <abort>
    afb0:	e8 9b 3b 00 00       	call   eb50 <__stack_chk_fail>
    afb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    afbc:	00 00 00 
    afbf:	90                   	nop

000000000000afc0 <dispose_chunk>:
    afc0:	55                   	push   %rbp
    afc1:	4c 8d 04 16          	lea    (%rsi,%rdx,1),%r8
    afc5:	53                   	push   %rbx
    afc6:	48 83 ec 08          	sub    $0x8,%rsp
    afca:	48 8b 46 08          	mov    0x8(%rsi),%rax
    afce:	a8 01                	test   $0x1,%al
    afd0:	0f 85 9a 01 00 00    	jne    b170 <dispose_chunk+0x1b0>
    afd6:	a8 03                	test   $0x3,%al
    afd8:	0f 84 8b 01 00 00    	je     b169 <dispose_chunk+0x1a9>
    afde:	48 8b 06             	mov    (%rsi),%rax
    afe1:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    afe5:	48 29 c6             	sub    %rax,%rsi
    afe8:	48 01 c2             	add    %rax,%rdx
    afeb:	49 39 f1             	cmp    %rsi,%r9
    afee:	0f 87 14 03 00 00    	ja     b308 <dispose_chunk+0x348>
    aff4:	48 39 77 20          	cmp    %rsi,0x20(%rdi)
    aff8:	0f 84 22 04 00 00    	je     b420 <dispose_chunk+0x460>
    affe:	48 89 c1             	mov    %rax,%rcx
    b001:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    b005:	48 c1 e9 03          	shr    $0x3,%rcx
    b009:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    b00f:	0f 86 53 03 00 00    	jbe    b368 <dispose_chunk+0x3a8>
    b015:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
    b019:	49 39 f2             	cmp    %rsi,%r10
    b01c:	0f 84 6e 05 00 00    	je     b590 <dispose_chunk+0x5d0>
    b022:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b026:	49 39 c1             	cmp    %rax,%r9
    b029:	0f 87 d9 02 00 00    	ja     b308 <dispose_chunk+0x348>
    b02f:	48 39 70 18          	cmp    %rsi,0x18(%rax)
    b033:	0f 85 cf 02 00 00    	jne    b308 <dispose_chunk+0x348>
    b039:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    b03d:	0f 85 c5 02 00 00    	jne    b308 <dispose_chunk+0x348>
    b043:	4c 89 50 18          	mov    %r10,0x18(%rax)
    b047:	49 89 42 10          	mov    %rax,0x10(%r10)
    b04b:	48 85 db             	test   %rbx,%rbx
    b04e:	0f 84 20 01 00 00    	je     b174 <dispose_chunk+0x1b4>
    b054:	8b 46 38             	mov    0x38(%rsi),%eax
    b057:	48 89 c1             	mov    %rax,%rcx
    b05a:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b05e:	48 39 b0 58 02 00 00 	cmp    %rsi,0x258(%rax)
    b065:	0f 84 95 04 00 00    	je     b500 <dispose_chunk+0x540>
    b06b:	49 39 d9             	cmp    %rbx,%r9
    b06e:	0f 87 94 02 00 00    	ja     b308 <dispose_chunk+0x348>
    b074:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    b078:	0f 84 99 05 00 00    	je     b617 <dispose_chunk+0x657>
    b07e:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    b082:	4d 85 d2             	test   %r10,%r10
    b085:	0f 84 e9 00 00 00    	je     b174 <dispose_chunk+0x1b4>
    b08b:	4d 39 d1             	cmp    %r10,%r9
    b08e:	0f 87 74 02 00 00    	ja     b308 <dispose_chunk+0x348>
    b094:	48 8b 46 20          	mov    0x20(%rsi),%rax
    b098:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    b09c:	48 85 c0             	test   %rax,%rax
    b09f:	74 11                	je     b0b2 <dispose_chunk+0xf2>
    b0a1:	49 39 c1             	cmp    %rax,%r9
    b0a4:	0f 87 5e 02 00 00    	ja     b308 <dispose_chunk+0x348>
    b0aa:	49 89 42 20          	mov    %rax,0x20(%r10)
    b0ae:	4c 89 50 30          	mov    %r10,0x30(%rax)
    b0b2:	48 8b 46 28          	mov    0x28(%rsi),%rax
    b0b6:	48 85 c0             	test   %rax,%rax
    b0b9:	0f 84 b5 00 00 00    	je     b174 <dispose_chunk+0x1b4>
    b0bf:	49 39 c1             	cmp    %rax,%r9
    b0c2:	0f 87 40 02 00 00    	ja     b308 <dispose_chunk+0x348>
    b0c8:	49 89 42 28          	mov    %rax,0x28(%r10)
    b0cc:	4c 89 50 30          	mov    %r10,0x30(%rax)
    b0d0:	e9 9f 00 00 00       	jmp    b174 <dispose_chunk+0x1b4>
    b0d5:	0f 1f 00             	nopl   (%rax)
    b0d8:	48 89 d0             	mov    %rdx,%rax
    b0db:	48 c1 e8 08          	shr    $0x8,%rax
    b0df:	89 c1                	mov    %eax,%ecx
    b0e1:	85 c0                	test   %eax,%eax
    b0e3:	0f 84 27 02 00 00    	je     b310 <dispose_chunk+0x350>
    b0e9:	3d ff ff 00 00       	cmp    $0xffff,%eax
    b0ee:	0f 87 64 03 00 00    	ja     b458 <dispose_chunk+0x498>
    b0f4:	0f bd c0             	bsr    %eax,%eax
    b0f7:	b9 26 00 00 00       	mov    $0x26,%ecx
    b0fc:	48 89 d3             	mov    %rdx,%rbx
    b0ff:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
    b105:	83 f0 1f             	xor    $0x1f,%eax
    b108:	29 c1                	sub    %eax,%ecx
    b10a:	41 29 c0             	sub    %eax,%r8d
    b10d:	b8 01 00 00 00       	mov    $0x1,%eax
    b112:	48 d3 eb             	shr    %cl,%rbx
    b115:	48 89 d9             	mov    %rbx,%rcx
    b118:	83 e1 01             	and    $0x1,%ecx
    b11b:	46 8d 1c 41          	lea    (%rcx,%r8,2),%r11d
    b11f:	4c 89 d9             	mov    %r11,%rcx
    b122:	4e 8d 14 dd 58 02 00 	lea    0x258(,%r11,8),%r10
    b129:	00 
    b12a:	d3 e0                	shl    %cl,%eax
    b12c:	44 8b 47 04          	mov    0x4(%rdi),%r8d
    b130:	89 4e 38             	mov    %ecx,0x38(%rsi)
    b133:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    b13a:	00 
    b13b:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    b142:	00 
    b143:	44 85 c0             	test   %r8d,%eax
    b146:	0f 85 4c 02 00 00    	jne    b398 <dispose_chunk+0x3d8>
    b14c:	44 09 c0             	or     %r8d,%eax
    b14f:	89 47 04             	mov    %eax,0x4(%rdi)
    b152:	4a 89 b4 df 58 02 00 	mov    %rsi,0x258(%rdi,%r11,8)
    b159:	00 
    b15a:	4c 01 d7             	add    %r10,%rdi
    b15d:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    b161:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    b165:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    b169:	48 83 c4 08          	add    $0x8,%rsp
    b16d:	5b                   	pop    %rbx
    b16e:	5d                   	pop    %rbp
    b16f:	c3                   	ret    
    b170:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    b174:	4d 39 c1             	cmp    %r8,%r9
    b177:	0f 87 8b 01 00 00    	ja     b308 <dispose_chunk+0x348>
    b17d:	49 8b 40 08          	mov    0x8(%r8),%rax
    b181:	a8 02                	test   $0x2,%al
    b183:	0f 85 07 01 00 00    	jne    b290 <dispose_chunk+0x2d0>
    b189:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    b18d:	4c 39 47 28          	cmp    %r8,0x28(%rdi)
    b191:	0f 84 e1 02 00 00    	je     b478 <dispose_chunk+0x4b8>
    b197:	4c 39 c3             	cmp    %r8,%rbx
    b19a:	0f 84 80 03 00 00    	je     b520 <dispose_chunk+0x560>
    b1a0:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b1a4:	4d 8b 50 18          	mov    0x18(%r8),%r10
    b1a8:	48 89 c1             	mov    %rax,%rcx
    b1ab:	48 01 c2             	add    %rax,%rdx
    b1ae:	48 c1 e9 03          	shr    $0x3,%rcx
    b1b2:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    b1b8:	0f 86 7a 01 00 00    	jbe    b338 <dispose_chunk+0x378>
    b1be:	49 8b 68 30          	mov    0x30(%r8),%rbp
    b1c2:	4d 39 c2             	cmp    %r8,%r10
    b1c5:	0f 84 75 03 00 00    	je     b540 <dispose_chunk+0x580>
    b1cb:	49 8b 40 10          	mov    0x10(%r8),%rax
    b1cf:	49 39 c1             	cmp    %rax,%r9
    b1d2:	0f 87 30 01 00 00    	ja     b308 <dispose_chunk+0x348>
    b1d8:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    b1dc:	0f 85 26 01 00 00    	jne    b308 <dispose_chunk+0x348>
    b1e2:	4d 39 42 10          	cmp    %r8,0x10(%r10)
    b1e6:	0f 85 1c 01 00 00    	jne    b308 <dispose_chunk+0x348>
    b1ec:	4c 89 50 18          	mov    %r10,0x18(%rax)
    b1f0:	49 89 42 10          	mov    %rax,0x10(%r10)
    b1f4:	48 85 ed             	test   %rbp,%rbp
    b1f7:	74 77                	je     b270 <dispose_chunk+0x2b0>
    b1f9:	41 8b 40 38          	mov    0x38(%r8),%eax
    b1fd:	48 89 c1             	mov    %rax,%rcx
    b200:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b204:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
    b20b:	0f 84 c7 02 00 00    	je     b4d8 <dispose_chunk+0x518>
    b211:	49 39 e9             	cmp    %rbp,%r9
    b214:	0f 87 ee 00 00 00    	ja     b308 <dispose_chunk+0x348>
    b21a:	4c 39 45 20          	cmp    %r8,0x20(%rbp)
    b21e:	0f 84 bc 03 00 00    	je     b5e0 <dispose_chunk+0x620>
    b224:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    b228:	4d 85 d2             	test   %r10,%r10
    b22b:	74 43                	je     b270 <dispose_chunk+0x2b0>
    b22d:	4d 39 ca             	cmp    %r9,%r10
    b230:	0f 82 d2 00 00 00    	jb     b308 <dispose_chunk+0x348>
    b236:	49 8b 40 20          	mov    0x20(%r8),%rax
    b23a:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    b23e:	48 85 c0             	test   %rax,%rax
    b241:	74 11                	je     b254 <dispose_chunk+0x294>
    b243:	49 39 c1             	cmp    %rax,%r9
    b246:	0f 87 bc 00 00 00    	ja     b308 <dispose_chunk+0x348>
    b24c:	49 89 42 20          	mov    %rax,0x20(%r10)
    b250:	4c 89 50 30          	mov    %r10,0x30(%rax)
    b254:	49 8b 40 28          	mov    0x28(%r8),%rax
    b258:	48 85 c0             	test   %rax,%rax
    b25b:	74 13                	je     b270 <dispose_chunk+0x2b0>
    b25d:	49 39 c1             	cmp    %rax,%r9
    b260:	0f 87 a2 00 00 00    	ja     b308 <dispose_chunk+0x348>
    b266:	49 89 42 28          	mov    %rax,0x28(%r10)
    b26a:	4c 89 50 30          	mov    %r10,0x30(%rax)
    b26e:	66 90                	xchg   %ax,%ax
    b270:	48 89 d0             	mov    %rdx,%rax
    b273:	48 83 c8 01          	or     $0x1,%rax
    b277:	48 89 46 08          	mov    %rax,0x8(%rsi)
    b27b:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    b27f:	48 39 de             	cmp    %rbx,%rsi
    b282:	75 23                	jne    b2a7 <dispose_chunk+0x2e7>
    b284:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b288:	e9 dc fe ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b28d:	0f 1f 00             	nopl   (%rax)
    b290:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b294:	49 89 40 08          	mov    %rax,0x8(%r8)
    b298:	48 89 d0             	mov    %rdx,%rax
    b29b:	48 83 c8 01          	or     $0x1,%rax
    b29f:	48 89 46 08          	mov    %rax,0x8(%rsi)
    b2a3:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    b2a7:	48 89 d1             	mov    %rdx,%rcx
    b2aa:	48 c1 e9 03          	shr    $0x3,%rcx
    b2ae:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    b2b5:	0f 87 1d fe ff ff    	ja     b0d8 <dispose_chunk+0x118>
    b2bb:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    b2be:	44 8b 07             	mov    (%rdi),%r8d
    b2c1:	48 8d 54 c7 48       	lea    0x48(%rdi,%rax,8),%rdx
    b2c6:	b8 01 00 00 00       	mov    $0x1,%eax
    b2cb:	d3 e0                	shl    %cl,%eax
    b2cd:	41 85 c0             	test   %eax,%r8d
    b2d0:	74 56                	je     b328 <dispose_chunk+0x368>
    b2d2:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b2d6:	4c 39 c8             	cmp    %r9,%rax
    b2d9:	72 2d                	jb     b308 <dispose_chunk+0x348>
    b2db:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    b2df:	48 89 70 18          	mov    %rsi,0x18(%rax)
    b2e3:	48 89 46 10          	mov    %rax,0x10(%rsi)
    b2e7:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    b2eb:	48 83 c4 08          	add    $0x8,%rsp
    b2ef:	5b                   	pop    %rbx
    b2f0:	5d                   	pop    %rbp
    b2f1:	c3                   	ret    
    b2f2:	4d 39 d1             	cmp    %r10,%r9
    b2f5:	77 11                	ja     b308 <dispose_chunk+0x348>
    b2f7:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    b2fb:	0f 84 44 03 00 00    	je     b645 <dispose_chunk+0x685>
    b301:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b308:	e8 87 54 01 00       	call   20794 <abort>
    b30d:	0f 1f 00             	nopl   (%rax)
    b310:	b8 01 00 00 00       	mov    $0x1,%eax
    b315:	41 ba 58 02 00 00    	mov    $0x258,%r10d
    b31b:	41 89 cb             	mov    %ecx,%r11d
    b31e:	e9 09 fe ff ff       	jmp    b12c <dispose_chunk+0x16c>
    b323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b328:	44 09 c0             	or     %r8d,%eax
    b32b:	89 07                	mov    %eax,(%rdi)
    b32d:	48 89 d0             	mov    %rdx,%rax
    b330:	eb a9                	jmp    b2db <dispose_chunk+0x31b>
    b332:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b338:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    b33c:	49 8b 40 10          	mov    0x10(%r8),%rax
    b340:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
    b345:	49 39 c3             	cmp    %rax,%r11
    b348:	0f 85 9b 02 00 00    	jne    b5e9 <dispose_chunk+0x629>
    b34e:	49 39 c2             	cmp    %rax,%r10
    b351:	0f 85 1f 03 00 00    	jne    b676 <dispose_chunk+0x6b6>
    b357:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b35c:	d3 c0                	rol    %cl,%eax
    b35e:	21 07                	and    %eax,(%rdi)
    b360:	e9 0b ff ff ff       	jmp    b270 <dispose_chunk+0x2b0>
    b365:	0f 1f 00             	nopl   (%rax)
    b368:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    b36c:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b370:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
    b375:	49 39 c3             	cmp    %rax,%r11
    b378:	0f 85 a2 02 00 00    	jne    b620 <dispose_chunk+0x660>
    b37e:	49 39 c2             	cmp    %rax,%r10
    b381:	0f 85 6b ff ff ff    	jne    b2f2 <dispose_chunk+0x332>
    b387:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b38c:	d3 c0                	rol    %cl,%eax
    b38e:	21 07                	and    %eax,(%rdi)
    b390:	e9 df fd ff ff       	jmp    b174 <dispose_chunk+0x1b4>
    b395:	0f 1f 00             	nopl   (%rax)
    b398:	4a 8b bc df 58 02 00 	mov    0x258(%rdi,%r11,8),%rdi
    b39f:	00 
    b3a0:	49 89 d0             	mov    %rdx,%r8
    b3a3:	83 f9 1f             	cmp    $0x1f,%ecx
    b3a6:	74 36                	je     b3de <dispose_chunk+0x41e>
    b3a8:	d1 e9                	shr    %ecx
    b3aa:	b8 39 00 00 00       	mov    $0x39,%eax
    b3af:	29 c8                	sub    %ecx,%eax
    b3b1:	89 c1                	mov    %eax,%ecx
    b3b3:	49 d3 e0             	shl    %cl,%r8
    b3b6:	eb 26                	jmp    b3de <dispose_chunk+0x41e>
    b3b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b3bf:	00 
    b3c0:	4c 89 c0             	mov    %r8,%rax
    b3c3:	4d 01 c0             	add    %r8,%r8
    b3c6:	48 c1 e8 3f          	shr    $0x3f,%rax
    b3ca:	48 83 c0 04          	add    $0x4,%rax
    b3ce:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    b3d2:	48 85 c9             	test   %rcx,%rcx
    b3d5:	0f 84 d5 00 00 00    	je     b4b0 <dispose_chunk+0x4f0>
    b3db:	48 89 cf             	mov    %rcx,%rdi
    b3de:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b3e2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b3e6:	48 39 d0             	cmp    %rdx,%rax
    b3e9:	75 d5                	jne    b3c0 <dispose_chunk+0x400>
    b3eb:	48 8b 47 10          	mov    0x10(%rdi),%rax
    b3ef:	49 39 c1             	cmp    %rax,%r9
    b3f2:	0f 87 10 ff ff ff    	ja     b308 <dispose_chunk+0x348>
    b3f8:	49 39 f9             	cmp    %rdi,%r9
    b3fb:	0f 87 07 ff ff ff    	ja     b308 <dispose_chunk+0x348>
    b401:	48 89 70 18          	mov    %rsi,0x18(%rax)
    b405:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    b409:	48 89 46 10          	mov    %rax,0x10(%rsi)
    b40d:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
    b411:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    b418:	00 
    b419:	e9 4b fd ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b41e:	66 90                	xchg   %ax,%ax
    b420:	49 8b 40 08          	mov    0x8(%r8),%rax
    b424:	48 89 c1             	mov    %rax,%rcx
    b427:	83 e1 03             	and    $0x3,%ecx
    b42a:	48 83 f9 03          	cmp    $0x3,%rcx
    b42e:	0f 85 40 fd ff ff    	jne    b174 <dispose_chunk+0x1b4>
    b434:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b438:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b43c:	49 89 40 08          	mov    %rax,0x8(%r8)
    b440:	48 89 d0             	mov    %rdx,%rax
    b443:	48 83 c8 01          	or     $0x1,%rax
    b447:	48 89 46 08          	mov    %rax,0x8(%rsi)
    b44b:	49 89 10             	mov    %rdx,(%r8)
    b44e:	e9 16 fd ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b458:	b8 00 00 00 80       	mov    $0x80000000,%eax
    b45d:	41 ba 50 03 00 00    	mov    $0x350,%r10d
    b463:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    b468:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
    b46e:	e9 b9 fc ff ff       	jmp    b12c <dispose_chunk+0x16c>
    b473:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b478:	48 03 57 10          	add    0x10(%rdi),%rdx
    b47c:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    b480:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    b484:	48 83 ca 01          	or     $0x1,%rdx
    b488:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    b48c:	48 39 de             	cmp    %rbx,%rsi
    b48f:	0f 85 d4 fc ff ff    	jne    b169 <dispose_chunk+0x1a9>
    b495:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    b49c:	00 
    b49d:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    b4a4:	00 
    b4a5:	e9 bf fc ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b4aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b4b0:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    b4b4:	49 39 d1             	cmp    %rdx,%r9
    b4b7:	0f 87 4b fe ff ff    	ja     b308 <dispose_chunk+0x348>
    b4bd:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    b4c1:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    b4c5:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    b4c9:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    b4cd:	e9 97 fc ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b4d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b4d8:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
    b4df:	4d 85 d2             	test   %r10,%r10
    b4e2:	0f 85 45 fd ff ff    	jne    b22d <dispose_chunk+0x26d>
    b4e8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b4ed:	d3 c0                	rol    %cl,%eax
    b4ef:	21 47 04             	and    %eax,0x4(%rdi)
    b4f2:	e9 79 fd ff ff       	jmp    b270 <dispose_chunk+0x2b0>
    b4f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b4fe:	00 00 
    b500:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
    b507:	4d 85 d2             	test   %r10,%r10
    b50a:	0f 85 7b fb ff ff    	jne    b08b <dispose_chunk+0xcb>
    b510:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b515:	d3 c0                	rol    %cl,%eax
    b517:	21 47 04             	and    %eax,0x4(%rdi)
    b51a:	e9 55 fc ff ff       	jmp    b174 <dispose_chunk+0x1b4>
    b51f:	90                   	nop
    b520:	48 03 57 08          	add    0x8(%rdi),%rdx
    b524:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    b528:	48 89 d0             	mov    %rdx,%rax
    b52b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b52f:	48 83 c8 01          	or     $0x1,%rax
    b533:	48 89 46 08          	mov    %rax,0x8(%rsi)
    b537:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    b53b:	e9 29 fc ff ff       	jmp    b169 <dispose_chunk+0x1a9>
    b540:	49 8b 40 28          	mov    0x28(%r8),%rax
    b544:	49 8d 48 28          	lea    0x28(%r8),%rcx
    b548:	48 85 c0             	test   %rax,%rax
    b54b:	0f 84 01 01 00 00    	je     b652 <dispose_chunk+0x692>
    b551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b558:	49 89 cb             	mov    %rcx,%r11
    b55b:	49 89 c2             	mov    %rax,%r10
    b55e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    b562:	48 8b 40 28          	mov    0x28(%rax),%rax
    b566:	48 85 c0             	test   %rax,%rax
    b569:	75 ed                	jne    b558 <dispose_chunk+0x598>
    b56b:	49 8b 42 20          	mov    0x20(%r10),%rax
    b56f:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    b573:	48 85 c0             	test   %rax,%rax
    b576:	75 e0                	jne    b558 <dispose_chunk+0x598>
    b578:	4d 39 d9             	cmp    %r11,%r9
    b57b:	0f 87 87 fd ff ff    	ja     b308 <dispose_chunk+0x348>
    b581:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    b588:	e9 67 fc ff ff       	jmp    b1f4 <dispose_chunk+0x234>
    b58d:	0f 1f 00             	nopl   (%rax)
    b590:	48 8b 46 28          	mov    0x28(%rsi),%rax
    b594:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    b598:	48 85 c0             	test   %rax,%rax
    b59b:	0f 84 c3 00 00 00    	je     b664 <dispose_chunk+0x6a4>
    b5a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b5a8:	49 89 cb             	mov    %rcx,%r11
    b5ab:	49 89 c2             	mov    %rax,%r10
    b5ae:	48 8d 48 28          	lea    0x28(%rax),%rcx
    b5b2:	48 8b 40 28          	mov    0x28(%rax),%rax
    b5b6:	48 85 c0             	test   %rax,%rax
    b5b9:	75 ed                	jne    b5a8 <dispose_chunk+0x5e8>
    b5bb:	49 8b 42 20          	mov    0x20(%r10),%rax
    b5bf:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    b5c3:	48 85 c0             	test   %rax,%rax
    b5c6:	75 e0                	jne    b5a8 <dispose_chunk+0x5e8>
    b5c8:	4d 39 d9             	cmp    %r11,%r9
    b5cb:	0f 87 37 fd ff ff    	ja     b308 <dispose_chunk+0x348>
    b5d1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    b5d8:	e9 6e fa ff ff       	jmp    b04b <dispose_chunk+0x8b>
    b5dd:	0f 1f 00             	nopl   (%rax)
    b5e0:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    b5e4:	e9 3f fc ff ff       	jmp    b228 <dispose_chunk+0x268>
    b5e9:	49 39 c1             	cmp    %rax,%r9
    b5ec:	0f 87 16 fd ff ff    	ja     b308 <dispose_chunk+0x348>
    b5f2:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    b5f6:	0f 85 0c fd ff ff    	jne    b308 <dispose_chunk+0x348>
    b5fc:	49 39 c2             	cmp    %rax,%r10
    b5ff:	0f 84 52 fd ff ff    	je     b357 <dispose_chunk+0x397>
    b605:	4d 39 da             	cmp    %r11,%r10
    b608:	75 6c                	jne    b676 <dispose_chunk+0x6b6>
    b60a:	4c 89 50 18          	mov    %r10,0x18(%rax)
    b60e:	49 89 42 10          	mov    %rax,0x10(%r10)
    b612:	e9 59 fc ff ff       	jmp    b270 <dispose_chunk+0x2b0>
    b617:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    b61b:	e9 62 fa ff ff       	jmp    b082 <dispose_chunk+0xc2>
    b620:	49 39 c1             	cmp    %rax,%r9
    b623:	0f 87 df fc ff ff    	ja     b308 <dispose_chunk+0x348>
    b629:	48 39 70 18          	cmp    %rsi,0x18(%rax)
    b62d:	0f 85 d5 fc ff ff    	jne    b308 <dispose_chunk+0x348>
    b633:	49 39 c2             	cmp    %rax,%r10
    b636:	0f 84 4b fd ff ff    	je     b387 <dispose_chunk+0x3c7>
    b63c:	4d 39 d3             	cmp    %r10,%r11
    b63f:	0f 85 ad fc ff ff    	jne    b2f2 <dispose_chunk+0x332>
    b645:	4c 89 50 18          	mov    %r10,0x18(%rax)
    b649:	49 89 42 10          	mov    %rax,0x10(%r10)
    b64d:	e9 22 fb ff ff       	jmp    b174 <dispose_chunk+0x1b4>
    b652:	49 8b 40 20          	mov    0x20(%r8),%rax
    b656:	48 85 c0             	test   %rax,%rax
    b659:	74 2f                	je     b68a <dispose_chunk+0x6ca>
    b65b:	49 8d 48 20          	lea    0x20(%r8),%rcx
    b65f:	e9 f4 fe ff ff       	jmp    b558 <dispose_chunk+0x598>
    b664:	48 8b 46 20          	mov    0x20(%rsi),%rax
    b668:	48 85 c0             	test   %rax,%rax
    b66b:	74 51                	je     b6be <dispose_chunk+0x6fe>
    b66d:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    b671:	e9 32 ff ff ff       	jmp    b5a8 <dispose_chunk+0x5e8>
    b676:	4d 39 ca             	cmp    %r9,%r10
    b679:	0f 82 89 fc ff ff    	jb     b308 <dispose_chunk+0x348>
    b67f:	4d 39 42 10          	cmp    %r8,0x10(%r10)
    b683:	74 85                	je     b60a <dispose_chunk+0x64a>
    b685:	e9 7e fc ff ff       	jmp    b308 <dispose_chunk+0x348>
    b68a:	48 85 ed             	test   %rbp,%rbp
    b68d:	0f 84 dd fb ff ff    	je     b270 <dispose_chunk+0x2b0>
    b693:	41 8b 40 38          	mov    0x38(%r8),%eax
    b697:	45 31 d2             	xor    %r10d,%r10d
    b69a:	48 89 c1             	mov    %rax,%rcx
    b69d:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b6a1:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
    b6a8:	0f 85 63 fb ff ff    	jne    b211 <dispose_chunk+0x251>
    b6ae:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    b6b5:	00 00 00 00 
    b6b9:	e9 2a fe ff ff       	jmp    b4e8 <dispose_chunk+0x528>
    b6be:	48 85 db             	test   %rbx,%rbx
    b6c1:	0f 84 ad fa ff ff    	je     b174 <dispose_chunk+0x1b4>
    b6c7:	41 8b 42 38          	mov    0x38(%r10),%eax
    b6cb:	45 31 d2             	xor    %r10d,%r10d
    b6ce:	48 89 c1             	mov    %rax,%rcx
    b6d1:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    b6d5:	48 3b b0 58 02 00 00 	cmp    0x258(%rax),%rsi
    b6dc:	0f 85 89 f9 ff ff    	jne    b06b <dispose_chunk+0xab>
    b6e2:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    b6e9:	00 00 00 00 
    b6ed:	e9 1e fe ff ff       	jmp    b510 <dispose_chunk+0x550>
    b6f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b6f9:	00 00 00 
    b6fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b700 <dlmalloc>:
    b700:	f3 0f 1e fa          	endbr64 
    b704:	41 57                	push   %r15
    b706:	41 56                	push   %r14
    b708:	41 55                	push   %r13
    b70a:	41 54                	push   %r12
    b70c:	55                   	push   %rbp
    b70d:	53                   	push   %rbx
    b70e:	48 89 fb             	mov    %rdi,%rbx
    b711:	48 83 ec 18          	sub    $0x18,%rsp
    b715:	48 83 3d 03 f0 01 00 	cmpq   $0x0,0x1f003(%rip)        # 2a720 <mparams>
    b71c:	00 
    b71d:	0f 84 7d 03 00 00    	je     baa0 <dlmalloc+0x3a0>
    b723:	f6 05 a6 ef 01 00 02 	testb  $0x2,0x1efa6(%rip)        # 2a6d0 <_gm_+0x370>
    b72a:	0f 85 38 03 00 00    	jne    ba68 <dlmalloc+0x368>
    b730:	48 81 fb e0 00 00 00 	cmp    $0xe0,%rbx
    b737:	0f 87 c3 00 00 00    	ja     b800 <dlmalloc+0x100>
    b73d:	48 83 fb 0e          	cmp    $0xe,%rbx
    b741:	0f 87 09 03 00 00    	ja     ba50 <dlmalloc+0x350>
    b747:	b9 04 00 00 00       	mov    $0x4,%ecx
    b74c:	41 bd 20 00 00 00    	mov    $0x20,%r13d
    b752:	8b 15 08 ec 01 00    	mov    0x1ec08(%rip),%edx        # 2a360 <_gm_>
    b758:	48 8d 2d 01 ec 01 00 	lea    0x1ec01(%rip),%rbp        # 2a360 <_gm_>
    b75f:	89 d0                	mov    %edx,%eax
    b761:	d3 e8                	shr    %cl,%eax
    b763:	a8 03                	test   $0x3,%al
    b765:	0f 84 45 03 00 00    	je     bab0 <dlmalloc+0x3b0>
    b76b:	f7 d0                	not    %eax
    b76d:	83 e0 01             	and    $0x1,%eax
    b770:	01 c1                	add    %eax,%ecx
    b772:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    b775:	48 8d 74 c5 48       	lea    0x48(%rbp,%rax,8),%rsi
    b77a:	4c 8b 66 10          	mov    0x10(%rsi),%r12
    b77e:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    b783:	48 39 c6             	cmp    %rax,%rsi
    b786:	0f 84 e4 0d 00 00    	je     c570 <dlmalloc+0xe70>
    b78c:	48 39 05 e5 eb 01 00 	cmp    %rax,0x1ebe5(%rip)        # 2a378 <_gm_+0x18>
    b793:	0f 87 3f 07 00 00    	ja     bed8 <dlmalloc+0x7d8>
    b799:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    b79d:	0f 85 35 07 00 00    	jne    bed8 <dlmalloc+0x7d8>
    b7a3:	48 89 70 18          	mov    %rsi,0x18(%rax)
    b7a7:	48 89 46 10          	mov    %rax,0x10(%rsi)
    b7ab:	c1 e1 03             	shl    $0x3,%ecx
    b7ae:	48 33 2d 6b ef 01 00 	xor    0x1ef6b(%rip),%rbp        # 2a720 <mparams>
    b7b5:	89 c8                	mov    %ecx,%eax
    b7b7:	83 c8 03             	or     $0x3,%eax
    b7ba:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    b7bf:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    b7c3:	49 83 c4 10          	add    $0x10,%r12
    b7c7:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    b7cc:	48 89 28             	mov    %rbp,(%rax)
    b7cf:	4d 85 e4             	test   %r12,%r12
    b7d2:	0f 85 20 02 00 00    	jne    b9f8 <dlmalloc+0x2f8>
    b7d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b7df:	00 
    b7e0:	45 31 e4             	xor    %r12d,%r12d
    b7e3:	f6 05 e6 ee 01 00 02 	testb  $0x2,0x1eee6(%rip)        # 2a6d0 <_gm_+0x370>
    b7ea:	0f 84 45 02 00 00    	je     ba35 <dlmalloc+0x335>
    b7f0:	c7 05 da ee 01 00 00 	movl   $0x0,0x1eeda(%rip)        # 2a6d4 <_gm_+0x374>
    b7f7:	00 00 00 
    b7fa:	e9 36 02 00 00       	jmp    ba35 <dlmalloc+0x335>
    b7ff:	90                   	nop
    b800:	48 8b 3d 61 eb 01 00 	mov    0x1eb61(%rip),%rdi        # 2a368 <_gm_+0x8>
    b807:	48 8d 2d 52 eb 01 00 	lea    0x1eb52(%rip),%rbp        # 2a360 <_gm_>
    b80e:	49 89 f8             	mov    %rdi,%r8
    b811:	48 81 fb 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbx
    b818:	0f 86 62 01 00 00    	jbe    b980 <dlmalloc+0x280>
    b81e:	48 8b 05 fb ee 01 00 	mov    0x1eefb(%rip),%rax        # 2a720 <mparams>
    b825:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    b829:	0f 84 01 04 00 00    	je     bc30 <dlmalloc+0x530>
    b82f:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    b836:	48 85 c0             	test   %rax,%rax
    b839:	75 a5                	jne    b7e0 <dlmalloc+0xe0>
    b83b:	e8 90 f6 ff ff       	call   aed0 <init_mparams>
    b840:	48 8b 05 e9 ee 01 00 	mov    0x1eee9(%rip),%rax        # 2a730 <mparams+0x10>
    b847:	4d 8d 44 05 5f       	lea    0x5f(%r13,%rax,1),%r8
    b84c:	48 f7 d8             	neg    %rax
    b84f:	49 21 c0             	and    %rax,%r8
    b852:	4d 39 c5             	cmp    %r8,%r13
    b855:	73 89                	jae    b7e0 <dlmalloc+0xe0>
    b857:	48 8b 05 6a ee 01 00 	mov    0x1ee6a(%rip),%rax        # 2a6c8 <_gm_+0x368>
    b85e:	48 85 c0             	test   %rax,%rax
    b861:	74 1d                	je     b880 <dlmalloc+0x180>
    b863:	48 8b 0d 4e ee 01 00 	mov    0x1ee4e(%rip),%rcx        # 2a6b8 <_gm_+0x358>
    b86a:	49 8d 14 08          	lea    (%r8,%rcx,1),%rdx
    b86e:	48 39 d0             	cmp    %rdx,%rax
    b871:	0f 82 69 ff ff ff    	jb     b7e0 <dlmalloc+0xe0>
    b877:	48 39 d1             	cmp    %rdx,%rcx
    b87a:	0f 83 60 ff ff ff    	jae    b7e0 <dlmalloc+0xe0>
    b880:	f6 05 49 ee 01 00 04 	testb  $0x4,0x1ee49(%rip)        # 2a6d0 <_gm_+0x370>
    b887:	0f 85 cd 00 00 00    	jne    b95a <dlmalloc+0x25a>
    b88d:	48 8b 15 f4 ea 01 00 	mov    0x1eaf4(%rip),%rdx        # 2a388 <_gm_+0x28>
    b894:	48 85 d2             	test   %rdx,%rdx
    b897:	74 25                	je     b8be <dlmalloc+0x1be>
    b899:	4c 8d 35 38 ee 01 00 	lea    0x1ee38(%rip),%r14        # 2a6d8 <_gm_+0x378>
    b8a0:	49 8b 06             	mov    (%r14),%rax
    b8a3:	48 39 c2             	cmp    %rax,%rdx
    b8a6:	72 0d                	jb     b8b5 <dlmalloc+0x1b5>
    b8a8:	49 03 46 08          	add    0x8(%r14),%rax
    b8ac:	48 39 c2             	cmp    %rax,%rdx
    b8af:	0f 82 a8 0f 00 00    	jb     c85d <dlmalloc+0x115d>
    b8b5:	4d 8b 76 10          	mov    0x10(%r14),%r14
    b8b9:	4d 85 f6             	test   %r14,%r14
    b8bc:	75 e2                	jne    b8a0 <dlmalloc+0x1a0>
    b8be:	b8 01 00 00 00       	mov    $0x1,%eax
    b8c3:	87 05 87 ee 01 00    	xchg   %eax,0x1ee87(%rip)        # 2a750 <malloc_global_mutex>
    b8c9:	85 c0                	test   %eax,%eax
    b8cb:	0f 85 20 08 00 00    	jne    c0f1 <dlmalloc+0x9f1>
    b8d1:	31 ff                	xor    %edi,%edi
    b8d3:	4c 89 04 24          	mov    %r8,(%rsp)
    b8d7:	e8 04 f3 ff ff       	call   abe0 <sbrk>
    b8dc:	4c 8b 04 24          	mov    (%rsp),%r8
    b8e0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    b8e4:	49 89 c6             	mov    %rax,%r14
    b8e7:	74 67                	je     b950 <dlmalloc+0x250>
    b8e9:	48 8b 15 38 ee 01 00 	mov    0x1ee38(%rip),%rdx        # 2a728 <mparams+0x8>
    b8f0:	4d 89 c7             	mov    %r8,%r15
    b8f3:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    b8f7:	49 85 c6             	test   %rax,%r14
    b8fa:	74 0f                	je     b90b <dlmalloc+0x20b>
    b8fc:	4c 01 f0             	add    %r14,%rax
    b8ff:	48 f7 da             	neg    %rdx
    b902:	4d 29 f7             	sub    %r14,%r15
    b905:	48 21 d0             	and    %rdx,%rax
    b908:	49 01 c7             	add    %rax,%r15
    b90b:	4d 39 fd             	cmp    %r15,%r13
    b90e:	73 40                	jae    b950 <dlmalloc+0x250>
    b910:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    b917:	ff ff 7f 
    b91a:	49 39 c7             	cmp    %rax,%r15
    b91d:	77 31                	ja     b950 <dlmalloc+0x250>
    b91f:	48 8b 0d a2 ed 01 00 	mov    0x1eda2(%rip),%rcx        # 2a6c8 <_gm_+0x368>
    b926:	48 85 c9             	test   %rcx,%rcx
    b929:	0f 84 6c 14 00 00    	je     cd9b <dlmalloc+0x169b>
    b92f:	48 8b 15 82 ed 01 00 	mov    0x1ed82(%rip),%rdx        # 2a6b8 <_gm_+0x358>
    b936:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
    b93a:	48 39 c1             	cmp    %rax,%rcx
    b93d:	72 11                	jb     b950 <dlmalloc+0x250>
    b93f:	48 39 c2             	cmp    %rax,%rdx
    b942:	0f 82 53 14 00 00    	jb     cd9b <dlmalloc+0x169b>
    b948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b94f:	00 
    b950:	c7 05 f6 ed 01 00 00 	movl   $0x0,0x1edf6(%rip)        # 2a750 <malloc_global_mutex>
    b957:	00 00 00 
    b95a:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    b961:	ff ff 7f 
    b964:	49 39 c0             	cmp    %rax,%r8
    b967:	0f 86 03 0d 00 00    	jbe    c670 <dlmalloc+0xf70>
    b96d:	e8 ce 39 00 00       	call   f340 <__errno>
    b972:	45 31 e4             	xor    %r12d,%r12d
    b975:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    b97b:	e9 a8 00 00 00       	jmp    ba28 <dlmalloc+0x328>
    b980:	44 8b 0d dd e9 01 00 	mov    0x1e9dd(%rip),%r9d        # 2a364 <_gm_+0x4>
    b987:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
    b98b:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    b98f:	45 85 c9             	test   %r9d,%r9d
    b992:	0f 85 d8 02 00 00    	jne    bc70 <dlmalloc+0x570>
    b998:	48 8b 35 81 ed 01 00 	mov    0x1ed81(%rip),%rsi        # 2a720 <mparams>
    b99f:	49 39 fd             	cmp    %rdi,%r13
    b9a2:	0f 86 14 01 00 00    	jbe    babc <dlmalloc+0x3bc>
    b9a8:	48 8b 05 c1 e9 01 00 	mov    0x1e9c1(%rip),%rax        # 2a370 <_gm_+0x10>
    b9af:	49 39 c5             	cmp    %rax,%r13
    b9b2:	0f 83 a8 0c 00 00    	jae    c660 <dlmalloc+0xf60>
    b9b8:	4c 8b 25 c9 e9 01 00 	mov    0x1e9c9(%rip),%r12        # 2a388 <_gm_+0x28>
    b9bf:	4c 29 e8             	sub    %r13,%rax
    b9c2:	48 31 f5             	xor    %rsi,%rbp
    b9c5:	48 89 05 a4 e9 01 00 	mov    %rax,0x1e9a4(%rip)        # 2a370 <_gm_+0x10>
    b9cc:	48 83 c8 01          	or     $0x1,%rax
    b9d0:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
    b9d4:	49 83 cd 03          	or     $0x3,%r13
    b9d8:	49 83 c4 10          	add    $0x10,%r12
    b9dc:	48 89 15 a5 e9 01 00 	mov    %rdx,0x1e9a5(%rip)        # 2a388 <_gm_+0x28>
    b9e3:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b9e7:	4d 89 6c 24 f8       	mov    %r13,-0x8(%r12)
    b9ec:	48 89 2a             	mov    %rbp,(%rdx)
    b9ef:	4d 85 e4             	test   %r12,%r12
    b9f2:	0f 84 e8 fd ff ff    	je     b7e0 <dlmalloc+0xe0>
    b9f8:	e8 c3 df ff ff       	call   99c0 <get_heap_base>
    b9fd:	49 39 c4             	cmp    %rax,%r12
    ba00:	0f 82 d2 04 00 00    	jb     bed8 <dlmalloc+0x7d8>
    ba06:	4c 89 e0             	mov    %r12,%rax
    ba09:	48 f7 d0             	not    %rax
    ba0c:	48 39 d8             	cmp    %rbx,%rax
    ba0f:	0f 82 c3 04 00 00    	jb     bed8 <dlmalloc+0x7d8>
    ba15:	31 ff                	xor    %edi,%edi
    ba17:	4c 01 e3             	add    %r12,%rbx
    ba1a:	e8 c1 f1 ff ff       	call   abe0 <sbrk>
    ba1f:	48 39 d8             	cmp    %rbx,%rax
    ba22:	0f 82 b0 04 00 00    	jb     bed8 <dlmalloc+0x7d8>
    ba28:	f6 05 a1 ec 01 00 02 	testb  $0x2,0x1eca1(%rip)        # 2a6d0 <_gm_+0x370>
    ba2f:	0f 85 bb fd ff ff    	jne    b7f0 <dlmalloc+0xf0>
    ba35:	48 83 c4 18          	add    $0x18,%rsp
    ba39:	4c 89 e0             	mov    %r12,%rax
    ba3c:	5b                   	pop    %rbx
    ba3d:	5d                   	pop    %rbp
    ba3e:	41 5c                	pop    %r12
    ba40:	41 5d                	pop    %r13
    ba42:	41 5e                	pop    %r14
    ba44:	41 5f                	pop    %r15
    ba46:	c3                   	ret    
    ba47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ba4e:	00 00 
    ba50:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
    ba54:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    ba58:	4c 89 e9             	mov    %r13,%rcx
    ba5b:	48 c1 e9 03          	shr    $0x3,%rcx
    ba5f:	e9 ee fc ff ff       	jmp    b752 <dlmalloc+0x52>
    ba64:	0f 1f 40 00          	nopl   0x0(%rax)
    ba68:	b8 01 00 00 00       	mov    $0x1,%eax
    ba6d:	87 05 61 ec 01 00    	xchg   %eax,0x1ec61(%rip)        # 2a6d4 <_gm_+0x374>
    ba73:	85 c0                	test   %eax,%eax
    ba75:	0f 84 b5 fc ff ff    	je     b730 <dlmalloc+0x30>
    ba7b:	ba 01 00 00 00       	mov    $0x1,%edx
    ba80:	8b 05 4e ec 01 00    	mov    0x1ec4e(%rip),%eax        # 2a6d4 <_gm_+0x374>
    ba86:	85 c0                	test   %eax,%eax
    ba88:	75 f6                	jne    ba80 <dlmalloc+0x380>
    ba8a:	89 d0                	mov    %edx,%eax
    ba8c:	87 05 42 ec 01 00    	xchg   %eax,0x1ec42(%rip)        # 2a6d4 <_gm_+0x374>
    ba92:	85 c0                	test   %eax,%eax
    ba94:	75 ea                	jne    ba80 <dlmalloc+0x380>
    ba96:	e9 95 fc ff ff       	jmp    b730 <dlmalloc+0x30>
    ba9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    baa0:	e8 2b f4 ff ff       	call   aed0 <init_mparams>
    baa5:	e9 79 fc ff ff       	jmp    b723 <dlmalloc+0x23>
    baaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bab0:	48 8b 3d b1 e8 01 00 	mov    0x1e8b1(%rip),%rdi        # 2a368 <_gm_+0x8>
    bab7:	4c 39 ef             	cmp    %r13,%rdi
    baba:	72 5c                	jb     bb18 <dlmalloc+0x418>
    babc:	4c 8b 25 bd e8 01 00 	mov    0x1e8bd(%rip),%r12        # 2a380 <_gm_+0x20>
    bac3:	48 89 f8             	mov    %rdi,%rax
    bac6:	48 33 2d 53 ec 01 00 	xor    0x1ec53(%rip),%rbp        # 2a720 <mparams>
    bacd:	4c 29 e8             	sub    %r13,%rax
    bad0:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    bad4:	48 83 f8 1f          	cmp    $0x1f,%rax
    bad8:	0f 86 4c 0d 00 00    	jbe    c82a <dlmalloc+0x112a>
    bade:	48 89 c6             	mov    %rax,%rsi
    bae1:	4b 8d 0c 2c          	lea    (%r12,%r13,1),%rcx
    bae5:	49 83 cd 03          	or     $0x3,%r13
    bae9:	48 89 05 78 e8 01 00 	mov    %rax,0x1e878(%rip)        # 2a368 <_gm_+0x8>
    baf0:	48 83 ce 01          	or     $0x1,%rsi
    baf4:	48 89 0d 85 e8 01 00 	mov    %rcx,0x1e885(%rip)        # 2a380 <_gm_+0x20>
    bafb:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    baff:	48 89 02             	mov    %rax,(%rdx)
    bb02:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    bb07:	48 89 29             	mov    %rbp,(%rcx)
    bb0a:	49 83 c4 10          	add    $0x10,%r12
    bb0e:	e9 dc fe ff ff       	jmp    b9ef <dlmalloc+0x2ef>
    bb13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb18:	85 c0                	test   %eax,%eax
    bb1a:	0f 84 c0 03 00 00    	je     bee0 <dlmalloc+0x7e0>
    bb20:	be 01 00 00 00       	mov    $0x1,%esi
    bb25:	d3 e0                	shl    %cl,%eax
    bb27:	41 89 f0             	mov    %esi,%r8d
    bb2a:	41 d3 e0             	shl    %cl,%r8d
    bb2d:	47 8d 0c 00          	lea    (%r8,%r8,1),%r9d
    bb31:	45 89 c8             	mov    %r9d,%r8d
    bb34:	41 f7 d8             	neg    %r8d
    bb37:	45 09 c8             	or     %r9d,%r8d
    bb3a:	44 21 c0             	and    %r8d,%eax
    bb3d:	89 c1                	mov    %eax,%ecx
    bb3f:	f7 d9                	neg    %ecx
    bb41:	21 c8                	and    %ecx,%eax
    bb43:	31 c9                	xor    %ecx,%ecx
    bb45:	f3 0f bc c8          	tzcnt  %eax,%ecx
    bb49:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    bb4c:	4c 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%r8
    bb51:	4d 8b 60 10          	mov    0x10(%r8),%r12
    bb55:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    bb5a:	49 39 c0             	cmp    %rax,%r8
    bb5d:	0f 84 77 08 00 00    	je     c3da <dlmalloc+0xcda>
    bb63:	48 39 05 0e e8 01 00 	cmp    %rax,0x1e80e(%rip)        # 2a378 <_gm_+0x18>
    bb6a:	0f 87 68 03 00 00    	ja     bed8 <dlmalloc+0x7d8>
    bb70:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    bb74:	0f 85 5e 03 00 00    	jne    bed8 <dlmalloc+0x7d8>
    bb7a:	4c 89 40 18          	mov    %r8,0x18(%rax)
    bb7e:	49 89 40 10          	mov    %rax,0x10(%r8)
    bb82:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    bb89:	48 8b 35 90 eb 01 00 	mov    0x1eb90(%rip),%rsi        # 2a720 <mparams>
    bb90:	48 89 c2             	mov    %rax,%rdx
    bb93:	48 89 c1             	mov    %rax,%rcx
    bb96:	4c 01 e0             	add    %r12,%rax
    bb99:	4c 29 ea             	sub    %r13,%rdx
    bb9c:	48 31 ee             	xor    %rbp,%rsi
    bb9f:	48 83 fa 1f          	cmp    $0x1f,%rdx
    bba3:	0f 86 9d 0c 00 00    	jbe    c846 <dlmalloc+0x1146>
    bba9:	4c 89 e9             	mov    %r13,%rcx
    bbac:	4d 01 e5             	add    %r12,%r13
    bbaf:	48 83 c9 03          	or     $0x3,%rcx
    bbb3:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    bbb8:	48 89 d1             	mov    %rdx,%rcx
    bbbb:	48 83 c9 01          	or     $0x1,%rcx
    bbbf:	49 89 75 00          	mov    %rsi,0x0(%r13)
    bbc3:	49 89 4d 08          	mov    %rcx,0x8(%r13)
    bbc7:	48 89 10             	mov    %rdx,(%rax)
    bbca:	48 85 ff             	test   %rdi,%rdi
    bbcd:	74 4e                	je     bc1d <dlmalloc+0x51d>
    bbcf:	48 c1 ef 03          	shr    $0x3,%rdi
    bbd3:	48 8b 05 a6 e7 01 00 	mov    0x1e7a6(%rip),%rax        # 2a380 <_gm_+0x20>
    bbda:	8d 34 3f             	lea    (%rdi,%rdi,1),%esi
    bbdd:	48 89 f9             	mov    %rdi,%rcx
    bbe0:	8b 3d 7a e7 01 00    	mov    0x1e77a(%rip),%edi        # 2a360 <_gm_>
    bbe6:	4c 8d 44 f5 48       	lea    0x48(%rbp,%rsi,8),%r8
    bbeb:	be 01 00 00 00       	mov    $0x1,%esi
    bbf0:	d3 e6                	shl    %cl,%esi
    bbf2:	89 f1                	mov    %esi,%ecx
    bbf4:	85 f7                	test   %esi,%edi
    bbf6:	0f 84 a3 0e 00 00    	je     ca9f <dlmalloc+0x139f>
    bbfc:	49 8b 48 10          	mov    0x10(%r8),%rcx
    bc00:	48 3b 0d 71 e7 01 00 	cmp    0x1e771(%rip),%rcx        # 2a378 <_gm_+0x18>
    bc07:	0f 82 cb 02 00 00    	jb     bed8 <dlmalloc+0x7d8>
    bc0d:	49 89 40 10          	mov    %rax,0x10(%r8)
    bc11:	48 89 41 18          	mov    %rax,0x18(%rcx)
    bc15:	48 89 48 10          	mov    %rcx,0x10(%rax)
    bc19:	4c 89 40 18          	mov    %r8,0x18(%rax)
    bc1d:	48 89 15 44 e7 01 00 	mov    %rdx,0x1e744(%rip)        # 2a368 <_gm_+0x8>
    bc24:	4c 89 2d 55 e7 01 00 	mov    %r13,0x1e755(%rip)        # 2a380 <_gm_+0x20>
    bc2b:	e9 da fe ff ff       	jmp    bb0a <dlmalloc+0x40a>
    bc30:	4c 8b 25 49 e7 01 00 	mov    0x1e749(%rip),%r12        # 2a380 <_gm_+0x20>
    bc37:	48 31 c5             	xor    %rax,%rbp
    bc3a:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
    bc3f:	48 c7 05 1e e7 01 00 	movq   $0x0,0x1e71e(%rip)        # 2a368 <_gm_+0x8>
    bc46:	00 00 00 00 
    bc4a:	48 c7 05 2b e7 01 00 	movq   $0x0,0x1e72b(%rip)        # 2a380 <_gm_+0x20>
    bc51:	00 00 00 00 
    bc55:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    bc5a:	48 89 2a             	mov    %rbp,(%rdx)
    bc5d:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    bc62:	e9 a3 fe ff ff       	jmp    bb0a <dlmalloc+0x40a>
    bc67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bc6e:	00 00 
    bc70:	4c 89 e8             	mov    %r13,%rax
    bc73:	4c 89 ee             	mov    %r13,%rsi
    bc76:	48 c1 e8 08          	shr    $0x8,%rax
    bc7a:	48 f7 de             	neg    %rsi
    bc7d:	41 89 c2             	mov    %eax,%r10d
    bc80:	85 c0                	test   %eax,%eax
    bc82:	0f 85 40 04 00 00    	jne    c0c8 <dlmalloc+0x9c8>
    bc88:	48 8b 05 29 e9 01 00 	mov    0x1e929(%rip),%rax        # 2a5b8 <_gm_+0x258>
    bc8f:	b9 39 00 00 00       	mov    $0x39,%ecx
    bc94:	48 85 c0             	test   %rax,%rax
    bc97:	0f 84 d8 0b 00 00    	je     c875 <dlmalloc+0x1175>
    bc9d:	4c 89 ea             	mov    %r13,%rdx
    bca0:	48 d3 e2             	shl    %cl,%rdx
    bca3:	48 89 d1             	mov    %rdx,%rcx
    bca6:	45 31 db             	xor    %r11d,%r11d
    bca9:	45 31 e4             	xor    %r12d,%r12d
    bcac:	eb 05                	jmp    bcb3 <dlmalloc+0x5b3>
    bcae:	66 90                	xchg   %ax,%ax
    bcb0:	48 01 c9             	add    %rcx,%rcx
    bcb3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bcb7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    bcbb:	4c 29 ea             	sub    %r13,%rdx
    bcbe:	48 39 f2             	cmp    %rsi,%rdx
    bcc1:	73 0f                	jae    bcd2 <dlmalloc+0x5d2>
    bcc3:	48 85 d2             	test   %rdx,%rdx
    bcc6:	0f 84 67 0b 00 00    	je     c833 <dlmalloc+0x1133>
    bccc:	48 89 d6             	mov    %rdx,%rsi
    bccf:	49 89 c4             	mov    %rax,%r12
    bcd2:	48 89 ca             	mov    %rcx,%rdx
    bcd5:	4c 8b 70 28          	mov    0x28(%rax),%r14
    bcd9:	48 c1 ea 3f          	shr    $0x3f,%rdx
    bcdd:	48 83 c2 04          	add    $0x4,%rdx
    bce1:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    bce5:	4d 85 f6             	test   %r14,%r14
    bce8:	74 07                	je     bcf1 <dlmalloc+0x5f1>
    bcea:	49 39 c6             	cmp    %rax,%r14
    bced:	4d 0f 45 de          	cmovne %r14,%r11
    bcf1:	48 85 c0             	test   %rax,%rax
    bcf4:	75 ba                	jne    bcb0 <dlmalloc+0x5b0>
    bcf6:	4c 89 e0             	mov    %r12,%rax
    bcf9:	4c 09 d8             	or     %r11,%rax
    bcfc:	0f 84 8d 0a 00 00    	je     c78f <dlmalloc+0x108f>
    bd02:	48 89 f2             	mov    %rsi,%rdx
    bd05:	4d 85 db             	test   %r11,%r11
    bd08:	74 31                	je     bd3b <dlmalloc+0x63b>
    bd0a:	4c 89 d8             	mov    %r11,%rax
    bd0d:	eb 04                	jmp    bd13 <dlmalloc+0x613>
    bd0f:	90                   	nop
    bd10:	48 89 c8             	mov    %rcx,%rax
    bd13:	48 8b 70 08          	mov    0x8(%rax),%rsi
    bd17:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    bd1b:	4c 29 ee             	sub    %r13,%rsi
    bd1e:	48 39 d6             	cmp    %rdx,%rsi
    bd21:	73 06                	jae    bd29 <dlmalloc+0x629>
    bd23:	48 89 f2             	mov    %rsi,%rdx
    bd26:	49 89 c4             	mov    %rax,%r12
    bd29:	48 8b 48 20          	mov    0x20(%rax),%rcx
    bd2d:	48 85 c9             	test   %rcx,%rcx
    bd30:	75 de                	jne    bd10 <dlmalloc+0x610>
    bd32:	48 8b 48 28          	mov    0x28(%rax),%rcx
    bd36:	48 85 c9             	test   %rcx,%rcx
    bd39:	75 d5                	jne    bd10 <dlmalloc+0x610>
    bd3b:	4d 85 e4             	test   %r12,%r12
    bd3e:	0f 84 54 fc ff ff    	je     b998 <dlmalloc+0x298>
    bd44:	4c 89 c0             	mov    %r8,%rax
    bd47:	4c 29 e8             	sub    %r13,%rax
    bd4a:	48 39 d0             	cmp    %rdx,%rax
    bd4d:	0f 86 45 fc ff ff    	jbe    b998 <dlmalloc+0x298>
    bd53:	4c 8b 15 1e e6 01 00 	mov    0x1e61e(%rip),%r10        # 2a378 <_gm_+0x18>
    bd5a:	4d 39 e2             	cmp    %r12,%r10
    bd5d:	0f 87 75 01 00 00    	ja     bed8 <dlmalloc+0x7d8>
    bd63:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
    bd67:	4c 39 e7             	cmp    %r12,%rdi
    bd6a:	0f 86 68 01 00 00    	jbe    bed8 <dlmalloc+0x7d8>
    bd70:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    bd75:	4d 8b 74 24 30       	mov    0x30(%r12),%r14
    bd7a:	4c 39 e6             	cmp    %r12,%rsi
    bd7d:	0f 84 ff 0a 00 00    	je     c882 <dlmalloc+0x1182>
    bd83:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    bd88:	49 39 c2             	cmp    %rax,%r10
    bd8b:	0f 87 47 01 00 00    	ja     bed8 <dlmalloc+0x7d8>
    bd91:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    bd95:	0f 85 3d 01 00 00    	jne    bed8 <dlmalloc+0x7d8>
    bd9b:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
    bd9f:	0f 85 33 01 00 00    	jne    bed8 <dlmalloc+0x7d8>
    bda5:	48 89 70 18          	mov    %rsi,0x18(%rax)
    bda9:	48 89 46 10          	mov    %rax,0x10(%rsi)
    bdad:	4d 85 f6             	test   %r14,%r14
    bdb0:	74 79                	je     be2b <dlmalloc+0x72b>
    bdb2:	41 8b 44 24 38       	mov    0x38(%r12),%eax
    bdb7:	48 89 c1             	mov    %rax,%rcx
    bdba:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
    bdbe:	4c 39 a4 c5 58 02 00 	cmp    %r12,0x258(%rbp,%rax,8)
    bdc5:	00 
    bdc6:	0f 84 e3 0c 00 00    	je     caaf <dlmalloc+0x13af>
    bdcc:	4d 39 f2             	cmp    %r14,%r10
    bdcf:	0f 87 03 01 00 00    	ja     bed8 <dlmalloc+0x7d8>
    bdd5:	4d 39 66 20          	cmp    %r12,0x20(%r14)
    bdd9:	0f 84 bc 0d 00 00    	je     cb9b <dlmalloc+0x149b>
    bddf:	49 89 76 28          	mov    %rsi,0x28(%r14)
    bde3:	48 85 f6             	test   %rsi,%rsi
    bde6:	74 43                	je     be2b <dlmalloc+0x72b>
    bde8:	49 39 f2             	cmp    %rsi,%r10
    bdeb:	0f 87 e7 00 00 00    	ja     bed8 <dlmalloc+0x7d8>
    bdf1:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    bdf6:	4c 89 76 30          	mov    %r14,0x30(%rsi)
    bdfa:	48 85 c0             	test   %rax,%rax
    bdfd:	74 11                	je     be10 <dlmalloc+0x710>
    bdff:	49 39 c2             	cmp    %rax,%r10
    be02:	0f 87 d0 00 00 00    	ja     bed8 <dlmalloc+0x7d8>
    be08:	48 89 46 20          	mov    %rax,0x20(%rsi)
    be0c:	48 89 70 30          	mov    %rsi,0x30(%rax)
    be10:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    be15:	48 85 c0             	test   %rax,%rax
    be18:	74 11                	je     be2b <dlmalloc+0x72b>
    be1a:	49 39 c2             	cmp    %rax,%r10
    be1d:	0f 87 b5 00 00 00    	ja     bed8 <dlmalloc+0x7d8>
    be23:	48 89 46 28          	mov    %rax,0x28(%rsi)
    be27:	48 89 70 30          	mov    %rsi,0x30(%rax)
    be2b:	48 8b 35 ee e8 01 00 	mov    0x1e8ee(%rip),%rsi        # 2a720 <mparams>
    be32:	48 89 e9             	mov    %rbp,%rcx
    be35:	48 31 f1             	xor    %rsi,%rcx
    be38:	48 83 fa 1f          	cmp    $0x1f,%rdx
    be3c:	0f 86 3c 0c 00 00    	jbe    ca7e <dlmalloc+0x137e>
    be42:	4c 89 e8             	mov    %r13,%rax
    be45:	48 83 c8 03          	or     $0x3,%rax
    be49:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    be4e:	48 89 d0             	mov    %rdx,%rax
    be51:	48 89 0f             	mov    %rcx,(%rdi)
    be54:	48 83 c8 01          	or     $0x1,%rax
    be58:	48 89 d1             	mov    %rdx,%rcx
    be5b:	48 89 47 08          	mov    %rax,0x8(%rdi)
    be5f:	48 c1 e9 03          	shr    $0x3,%rcx
    be63:	48 89 14 17          	mov    %rdx,(%rdi,%rdx,1)
    be67:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    be6e:	0f 87 11 0b 00 00    	ja     c985 <dlmalloc+0x1285>
    be74:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    be77:	44 8b 0d e2 e4 01 00 	mov    0x1e4e2(%rip),%r9d        # 2a360 <_gm_>
    be7e:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
    be83:	b8 01 00 00 00       	mov    $0x1,%eax
    be88:	d3 e0                	shl    %cl,%eax
    be8a:	41 85 c1             	test   %eax,%r9d
    be8d:	0f 84 14 0e 00 00    	je     cca7 <dlmalloc+0x15a7>
    be93:	48 8b 42 10          	mov    0x10(%rdx),%rax
    be97:	49 39 c2             	cmp    %rax,%r10
    be9a:	77 3c                	ja     bed8 <dlmalloc+0x7d8>
    be9c:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    bea0:	48 89 78 18          	mov    %rdi,0x18(%rax)
    bea4:	48 89 47 10          	mov    %rax,0x10(%rdi)
    bea8:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    beac:	49 83 c4 10          	add    $0x10,%r12
    beb0:	4c 89 c7             	mov    %r8,%rdi
    beb3:	0f 85 3f fb ff ff    	jne    b9f8 <dlmalloc+0x2f8>
    beb9:	e9 e1 fa ff ff       	jmp    b99f <dlmalloc+0x29f>
    bebe:	4c 3b 05 b3 e4 01 00 	cmp    0x1e4b3(%rip),%r8        # 2a378 <_gm_+0x18>
    bec5:	72 11                	jb     bed8 <dlmalloc+0x7d8>
    bec7:	49 39 50 18          	cmp    %rdx,0x18(%r8)
    becb:	0f 84 85 0e 00 00    	je     cd56 <dlmalloc+0x1656>
    bed1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bed8:	e8 b7 48 01 00       	call   20794 <abort>
    bedd:	0f 1f 00             	nopl   (%rax)
    bee0:	44 8b 0d 7d e4 01 00 	mov    0x1e47d(%rip),%r9d        # 2a364 <_gm_+0x4>
    bee7:	48 8b 35 32 e8 01 00 	mov    0x1e832(%rip),%rsi        # 2a720 <mparams>
    beee:	45 85 c9             	test   %r9d,%r9d
    bef1:	0f 84 b1 fa ff ff    	je     b9a8 <dlmalloc+0x2a8>
    bef7:	44 89 c8             	mov    %r9d,%eax
    befa:	f7 d8                	neg    %eax
    befc:	44 21 c8             	and    %r9d,%eax
    beff:	f3 0f bc c0          	tzcnt  %eax,%eax
    bf03:	89 c0                	mov    %eax,%eax
    bf05:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    bf0c:	00 
    bf0d:	4c 8b 40 08          	mov    0x8(%rax),%r8
    bf11:	49 89 c4             	mov    %rax,%r12
    bf14:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    bf18:	4d 29 e8             	sub    %r13,%r8
    bf1b:	eb 1c                	jmp    bf39 <dlmalloc+0x839>
    bf1d:	0f 1f 00             	nopl   (%rax)
    bf20:	48 8b 41 08          	mov    0x8(%rcx),%rax
    bf24:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    bf28:	4c 29 e8             	sub    %r13,%rax
    bf2b:	4c 39 c0             	cmp    %r8,%rax
    bf2e:	73 06                	jae    bf36 <dlmalloc+0x836>
    bf30:	49 89 c0             	mov    %rax,%r8
    bf33:	49 89 cc             	mov    %rcx,%r12
    bf36:	48 89 c8             	mov    %rcx,%rax
    bf39:	48 8b 48 20          	mov    0x20(%rax),%rcx
    bf3d:	48 85 c9             	test   %rcx,%rcx
    bf40:	75 de                	jne    bf20 <dlmalloc+0x820>
    bf42:	48 8b 48 28          	mov    0x28(%rax),%rcx
    bf46:	48 85 c9             	test   %rcx,%rcx
    bf49:	75 d5                	jne    bf20 <dlmalloc+0x820>
    bf4b:	4c 8b 1d 26 e4 01 00 	mov    0x1e426(%rip),%r11        # 2a378 <_gm_+0x18>
    bf52:	4d 39 e3             	cmp    %r12,%r11
    bf55:	77 81                	ja     bed8 <dlmalloc+0x7d8>
    bf57:	4f 8d 14 2c          	lea    (%r12,%r13,1),%r10
    bf5b:	4d 39 e2             	cmp    %r12,%r10
    bf5e:	0f 86 74 ff ff ff    	jbe    bed8 <dlmalloc+0x7d8>
    bf64:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    bf69:	4d 8b 7c 24 30       	mov    0x30(%r12),%r15
    bf6e:	4c 39 e6             	cmp    %r12,%rsi
    bf71:	0f 84 9e 0b 00 00    	je     cb15 <dlmalloc+0x1415>
    bf77:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    bf7c:	49 39 c3             	cmp    %rax,%r11
    bf7f:	0f 87 53 ff ff ff    	ja     bed8 <dlmalloc+0x7d8>
    bf85:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    bf89:	0f 85 49 ff ff ff    	jne    bed8 <dlmalloc+0x7d8>
    bf8f:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
    bf93:	0f 85 3f ff ff ff    	jne    bed8 <dlmalloc+0x7d8>
    bf99:	48 89 70 18          	mov    %rsi,0x18(%rax)
    bf9d:	48 89 46 10          	mov    %rax,0x10(%rsi)
    bfa1:	4d 85 ff             	test   %r15,%r15
    bfa4:	74 79                	je     c01f <dlmalloc+0x91f>
    bfa6:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    bfab:	48 89 c8             	mov    %rcx,%rax
    bfae:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
    bfb2:	4c 39 a4 cd 58 02 00 	cmp    %r12,0x258(%rbp,%rcx,8)
    bfb9:	00 
    bfba:	0f 84 f8 0c 00 00    	je     ccb8 <dlmalloc+0x15b8>
    bfc0:	4d 39 fb             	cmp    %r15,%r11
    bfc3:	0f 87 0f ff ff ff    	ja     bed8 <dlmalloc+0x7d8>
    bfc9:	4d 39 67 20          	cmp    %r12,0x20(%r15)
    bfcd:	0f 84 55 0e 00 00    	je     ce28 <dlmalloc+0x1728>
    bfd3:	49 89 77 28          	mov    %rsi,0x28(%r15)
    bfd7:	48 85 f6             	test   %rsi,%rsi
    bfda:	74 43                	je     c01f <dlmalloc+0x91f>
    bfdc:	49 39 f3             	cmp    %rsi,%r11
    bfdf:	0f 87 f3 fe ff ff    	ja     bed8 <dlmalloc+0x7d8>
    bfe5:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    bfea:	4c 89 7e 30          	mov    %r15,0x30(%rsi)
    bfee:	48 85 c0             	test   %rax,%rax
    bff1:	74 11                	je     c004 <dlmalloc+0x904>
    bff3:	49 39 c3             	cmp    %rax,%r11
    bff6:	0f 87 dc fe ff ff    	ja     bed8 <dlmalloc+0x7d8>
    bffc:	48 89 46 20          	mov    %rax,0x20(%rsi)
    c000:	48 89 70 30          	mov    %rsi,0x30(%rax)
    c004:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    c009:	48 85 c0             	test   %rax,%rax
    c00c:	74 11                	je     c01f <dlmalloc+0x91f>
    c00e:	49 39 c3             	cmp    %rax,%r11
    c011:	0f 87 c1 fe ff ff    	ja     bed8 <dlmalloc+0x7d8>
    c017:	48 89 46 28          	mov    %rax,0x28(%rsi)
    c01b:	48 89 70 30          	mov    %rsi,0x30(%rax)
    c01f:	48 8b 35 fa e6 01 00 	mov    0x1e6fa(%rip),%rsi        # 2a720 <mparams>
    c026:	48 89 e9             	mov    %rbp,%rcx
    c029:	48 31 f1             	xor    %rsi,%rcx
    c02c:	49 83 f8 1f          	cmp    $0x1f,%r8
    c030:	0f 86 79 0b 00 00    	jbe    cbaf <dlmalloc+0x14af>
    c036:	4c 89 e8             	mov    %r13,%rax
    c039:	48 83 c8 03          	or     $0x3,%rax
    c03d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    c042:	4c 89 c0             	mov    %r8,%rax
    c045:	48 83 c8 01          	or     $0x1,%rax
    c049:	49 89 0a             	mov    %rcx,(%r10)
    c04c:	49 89 42 08          	mov    %rax,0x8(%r10)
    c050:	4f 89 04 02          	mov    %r8,(%r10,%r8,1)
    c054:	48 85 ff             	test   %rdi,%rdi
    c057:	74 46                	je     c09f <dlmalloc+0x99f>
    c059:	48 c1 ef 03          	shr    $0x3,%rdi
    c05d:	41 be 01 00 00 00    	mov    $0x1,%r14d
    c063:	48 8b 05 16 e3 01 00 	mov    0x1e316(%rip),%rax        # 2a380 <_gm_+0x20>
    c06a:	48 89 f9             	mov    %rdi,%rcx
    c06d:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
    c071:	41 d3 e6             	shl    %cl,%r14d
    c074:	4e 8d 4c cd 48       	lea    0x48(%rbp,%r9,8),%r9
    c079:	44 85 f2             	test   %r14d,%edx
    c07c:	0f 84 3a 0e 00 00    	je     cebc <dlmalloc+0x17bc>
    c082:	49 8b 51 10          	mov    0x10(%r9),%rdx
    c086:	49 39 d3             	cmp    %rdx,%r11
    c089:	0f 87 49 fe ff ff    	ja     bed8 <dlmalloc+0x7d8>
    c08f:	49 89 41 10          	mov    %rax,0x10(%r9)
    c093:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c097:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c09b:	4c 89 48 18          	mov    %r9,0x18(%rax)
    c09f:	4c 89 05 c2 e2 01 00 	mov    %r8,0x1e2c2(%rip)        # 2a368 <_gm_+0x8>
    c0a6:	4c 89 15 d3 e2 01 00 	mov    %r10,0x1e2d3(%rip)        # 2a380 <_gm_+0x20>
    c0ad:	49 83 c4 10          	add    $0x10,%r12
    c0b1:	0f 85 41 f9 ff ff    	jne    b9f8 <dlmalloc+0x2f8>
    c0b7:	48 8b 3d aa e2 01 00 	mov    0x1e2aa(%rip),%rdi        # 2a368 <_gm_+0x8>
    c0be:	e9 dc f8 ff ff       	jmp    b99f <dlmalloc+0x29f>
    c0c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c0c8:	3d ff ff 00 00       	cmp    $0xffff,%eax
    c0cd:	0f 86 fd 06 00 00    	jbe    c7d0 <dlmalloc+0x10d0>
    c0d3:	48 8b 05 d6 e5 01 00 	mov    0x1e5d6(%rip),%rax        # 2a6b0 <_gm_+0x350>
    c0da:	4c 89 e9             	mov    %r13,%rcx
    c0dd:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    c0e3:	48 85 c0             	test   %rax,%rax
    c0e6:	0f 85 ba fb ff ff    	jne    bca6 <dlmalloc+0x5a6>
    c0ec:	e9 a7 f8 ff ff       	jmp    b998 <dlmalloc+0x298>
    c0f1:	45 31 f6             	xor    %r14d,%r14d
    c0f4:	48 8d 15 55 e6 01 00 	lea    0x1e655(%rip),%rdx        # 2a750 <malloc_global_mutex>
    c0fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    c100:	8b 02                	mov    (%rdx),%eax
    c102:	85 c0                	test   %eax,%eax
    c104:	75 fa                	jne    c100 <dlmalloc+0xa00>
    c106:	89 c8                	mov    %ecx,%eax
    c108:	87 05 42 e6 01 00    	xchg   %eax,0x1e642(%rip)        # 2a750 <malloc_global_mutex>
    c10e:	85 c0                	test   %eax,%eax
    c110:	75 ee                	jne    c100 <dlmalloc+0xa00>
    c112:	4d 85 f6             	test   %r14,%r14
    c115:	0f 84 b6 f7 ff ff    	je     b8d1 <dlmalloc+0x1d1>
    c11b:	48 8b 05 0e e6 01 00 	mov    0x1e60e(%rip),%rax        # 2a730 <mparams+0x10>
    c122:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    c126:	4c 2b 3d 43 e2 01 00 	sub    0x1e243(%rip),%r15        # 2a370 <_gm_+0x10>
    c12d:	48 f7 d8             	neg    %rax
    c130:	4d 01 ef             	add    %r13,%r15
    c133:	49 21 c7             	and    %rax,%r15
    c136:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    c13d:	ff ff 7f 
    c140:	49 39 c7             	cmp    %rax,%r15
    c143:	0f 87 07 f8 ff ff    	ja     b950 <dlmalloc+0x250>
    c149:	4c 89 ff             	mov    %r15,%rdi
    c14c:	4c 89 04 24          	mov    %r8,(%rsp)
    c150:	e8 8b ea ff ff       	call   abe0 <sbrk>
    c155:	4c 8b 04 24          	mov    (%rsp),%r8
    c159:	49 89 c4             	mov    %rax,%r12
    c15c:	49 8b 46 08          	mov    0x8(%r14),%rax
    c160:	49 03 06             	add    (%r14),%rax
    c163:	49 39 c4             	cmp    %rax,%r12
    c166:	0f 85 4b 0c 00 00    	jne    cdb7 <dlmalloc+0x16b7>
    c16c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    c170:	0f 84 da f7 ff ff    	je     b950 <dlmalloc+0x250>
    c176:	c7 05 d0 e5 01 00 00 	movl   $0x0,0x1e5d0(%rip)        # 2a750 <malloc_global_mutex>
    c17d:	00 00 00 
    c180:	48 8b 05 31 e5 01 00 	mov    0x1e531(%rip),%rax        # 2a6b8 <_gm_+0x358>
    c187:	4c 01 f8             	add    %r15,%rax
    c18a:	48 3b 05 2f e5 01 00 	cmp    0x1e52f(%rip),%rax        # 2a6c0 <_gm_+0x360>
    c191:	48 89 05 20 e5 01 00 	mov    %rax,0x1e520(%rip)        # 2a6b8 <_gm_+0x358>
    c198:	76 07                	jbe    c1a1 <dlmalloc+0xaa1>
    c19a:	48 89 05 1f e5 01 00 	mov    %rax,0x1e51f(%rip)        # 2a6c0 <_gm_+0x360>
    c1a1:	48 8b 35 e0 e1 01 00 	mov    0x1e1e0(%rip),%rsi        # 2a388 <_gm_+0x28>
    c1a8:	48 8d 05 29 e5 01 00 	lea    0x1e529(%rip),%rax        # 2a6d8 <_gm_+0x378>
    c1af:	48 85 f6             	test   %rsi,%rsi
    c1b2:	0f 84 c8 03 00 00    	je     c580 <dlmalloc+0xe80>
    c1b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c1bf:	00 
    c1c0:	48 8b 10             	mov    (%rax),%rdx
    c1c3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c1c7:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    c1cb:	49 39 fc             	cmp    %rdi,%r12
    c1ce:	0f 84 14 03 00 00    	je     c4e8 <dlmalloc+0xde8>
    c1d4:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1d8:	48 85 c0             	test   %rax,%rax
    c1db:	75 e3                	jne    c1c0 <dlmalloc+0xac0>
    c1dd:	4c 39 25 94 e1 01 00 	cmp    %r12,0x1e194(%rip)        # 2a378 <_gm_+0x18>
    c1e4:	76 07                	jbe    c1ed <dlmalloc+0xaed>
    c1e6:	4c 89 25 8b e1 01 00 	mov    %r12,0x1e18b(%rip)        # 2a378 <_gm_+0x18>
    c1ed:	4b 8d 14 3c          	lea    (%r12,%r15,1),%rdx
    c1f1:	48 8d 05 e0 e4 01 00 	lea    0x1e4e0(%rip),%rax        # 2a6d8 <_gm_+0x378>
    c1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c1ff:	00 
    c200:	48 39 10             	cmp    %rdx,(%rax)
    c203:	0f 84 e7 01 00 00    	je     c3f0 <dlmalloc+0xcf0>
    c209:	48 8b 40 10          	mov    0x10(%rax),%rax
    c20d:	48 85 c0             	test   %rax,%rax
    c210:	75 ee                	jne    c200 <dlmalloc+0xb00>
    c212:	4d 89 e0             	mov    %r12,%r8
    c215:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    c21a:	41 83 e0 0f          	and    $0xf,%r8d
    c21e:	48 8d 05 b3 e4 01 00 	lea    0x1e4b3(%rip),%rax        # 2a6d8 <_gm_+0x378>
    c225:	0f 1f 00             	nopl   (%rax)
    c228:	48 8b 10             	mov    (%rax),%rdx
    c22b:	48 39 d6             	cmp    %rdx,%rsi
    c22e:	72 09                	jb     c239 <dlmalloc+0xb39>
    c230:	48 03 50 08          	add    0x8(%rax),%rdx
    c234:	48 39 d6             	cmp    %rdx,%rsi
    c237:	72 09                	jb     c242 <dlmalloc+0xb42>
    c239:	48 8b 40 10          	mov    0x10(%rax),%rax
    c23d:	48 85 c0             	test   %rax,%rax
    c240:	75 e6                	jne    c228 <dlmalloc+0xb28>
    c242:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c246:	48 03 08             	add    (%rax),%rcx
    c249:	48 c7 c2 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rdx
    c250:	48 8d 41 b1          	lea    -0x4f(%rcx),%rax
    c254:	a8 0f                	test   $0xf,%al
    c256:	74 0a                	je     c262 <dlmalloc+0xb62>
    c258:	48 f7 d8             	neg    %rax
    c25b:	83 e0 0f             	and    $0xf,%eax
    c25e:	48 8d 50 a1          	lea    -0x5f(%rax),%rdx
    c262:	48 01 ca             	add    %rcx,%rdx
    c265:	48 8d 46 20          	lea    0x20(%rsi),%rax
    c269:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    c26d:	48 39 c2             	cmp    %rax,%rdx
    c270:	48 0f 42 d6          	cmovb  %rsi,%rdx
    c274:	4c 8d 52 10          	lea    0x10(%rdx),%r10
    c278:	4d 85 c0             	test   %r8,%r8
    c27b:	0f 84 cf 03 00 00    	je     c650 <dlmalloc+0xf50>
    c281:	48 f7 df             	neg    %rdi
    c284:	4c 89 c8             	mov    %r9,%rax
    c287:	83 e7 0f             	and    $0xf,%edi
    c28a:	4d 8d 04 3c          	lea    (%r12,%rdi,1),%r8
    c28e:	48 29 f8             	sub    %rdi,%rax
    c291:	48 89 05 d8 e0 01 00 	mov    %rax,0x1e0d8(%rip)        # 2a370 <_gm_+0x10>
    c298:	48 83 c8 01          	or     $0x1,%rax
    c29c:	f3 0f 6f 05 34 e4 01 	movdqu 0x1e434(%rip),%xmm0        # 2a6d8 <_gm_+0x378>
    c2a3:	00 
    c2a4:	4c 89 05 dd e0 01 00 	mov    %r8,0x1e0dd(%rip)        # 2a388 <_gm_+0x28>
    c2ab:	49 89 40 08          	mov    %rax,0x8(%r8)
    c2af:	48 8b 05 8a e4 01 00 	mov    0x1e48a(%rip),%rax        # 2a740 <mparams+0x20>
    c2b6:	4b c7 44 0c 08 50 00 	movq   $0x50,0x8(%r12,%r9,1)
    c2bd:	00 00 
    c2bf:	48 89 05 ca e0 01 00 	mov    %rax,0x1e0ca(%rip)        # 2a390 <_gm_+0x30>
    c2c6:	48 8b 05 53 e4 01 00 	mov    0x1e453(%rip),%rax        # 2a720 <mparams>
    c2cd:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    c2d1:	f3 0f 6f 0d 0f e4 01 	movdqu 0x1e40f(%rip),%xmm1        # 2a6e8 <_gm_+0x388>
    c2d8:	00 
    c2d9:	48 31 e8             	xor    %rbp,%rax
    c2dc:	48 c7 42 08 33 00 00 	movq   $0x33,0x8(%rdx)
    c2e3:	00 
    c2e4:	48 89 42 30          	mov    %rax,0x30(%rdx)
    c2e8:	48 8d 42 38          	lea    0x38(%rdx),%rax
    c2ec:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    c2f0:	4c 89 25 e1 e3 01 00 	mov    %r12,0x1e3e1(%rip)        # 2a6d8 <_gm_+0x378>
    c2f7:	4c 89 3d e2 e3 01 00 	mov    %r15,0x1e3e2(%rip)        # 2a6e0 <_gm_+0x380>
    c2fe:	c7 05 e8 e3 01 00 00 	movl   $0x0,0x1e3e8(%rip)        # 2a6f0 <_gm_+0x390>
    c305:	00 00 00 
    c308:	4c 89 15 d9 e3 01 00 	mov    %r10,0x1e3d9(%rip)        # 2a6e8 <_gm_+0x388>
    c30f:	90                   	nop
    c310:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    c317:	48 83 c0 08          	add    $0x8,%rax
    c31b:	48 39 c1             	cmp    %rax,%rcx
    c31e:	77 f0                	ja     c310 <dlmalloc+0xc10>
    c320:	48 39 d6             	cmp    %rdx,%rsi
    c323:	0f 84 f5 04 00 00    	je     c81e <dlmalloc+0x111e>
    c329:	48 89 d7             	mov    %rdx,%rdi
    c32c:	48 83 62 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdx)
    c331:	48 29 f7             	sub    %rsi,%rdi
    c334:	48 89 f8             	mov    %rdi,%rax
    c337:	48 89 f9             	mov    %rdi,%rcx
    c33a:	48 83 c8 01          	or     $0x1,%rax
    c33e:	48 c1 e9 03          	shr    $0x3,%rcx
    c342:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c346:	48 89 3a             	mov    %rdi,(%rdx)
    c349:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    c350:	0f 87 9e 03 00 00    	ja     c6f4 <dlmalloc+0xff4>
    c356:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    c359:	8b 3d 01 e0 01 00    	mov    0x1e001(%rip),%edi        # 2a360 <_gm_>
    c35f:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
    c364:	b8 01 00 00 00       	mov    $0x1,%eax
    c369:	d3 e0                	shl    %cl,%eax
    c36b:	85 c7                	test   %eax,%edi
    c36d:	0f 85 fc 05 00 00    	jne    c96f <dlmalloc+0x126f>
    c373:	09 f8                	or     %edi,%eax
    c375:	89 05 e5 df 01 00    	mov    %eax,0x1dfe5(%rip)        # 2a360 <_gm_>
    c37b:	48 89 d0             	mov    %rdx,%rax
    c37e:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    c382:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c386:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    c38a:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c38e:	48 8b 05 db df 01 00 	mov    0x1dfdb(%rip),%rax        # 2a370 <_gm_+0x10>
    c395:	49 39 c5             	cmp    %rax,%r13
    c398:	0f 83 cf f5 ff ff    	jae    b96d <dlmalloc+0x26d>
    c39e:	4c 8b 25 e3 df 01 00 	mov    0x1dfe3(%rip),%r12        # 2a388 <_gm_+0x28>
    c3a5:	4c 29 e8             	sub    %r13,%rax
    c3a8:	48 33 2d 71 e3 01 00 	xor    0x1e371(%rip),%rbp        # 2a720 <mparams>
    c3af:	48 89 05 ba df 01 00 	mov    %rax,0x1dfba(%rip)        # 2a370 <_gm_+0x10>
    c3b6:	48 83 c8 01          	or     $0x1,%rax
    c3ba:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
    c3be:	49 83 cd 03          	or     $0x3,%r13
    c3c2:	48 89 15 bf df 01 00 	mov    %rdx,0x1dfbf(%rip)        # 2a388 <_gm_+0x28>
    c3c9:	48 89 42 08          	mov    %rax,0x8(%rdx)
    c3cd:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    c3d2:	48 89 2a             	mov    %rbp,(%rdx)
    c3d5:	e9 30 f7 ff ff       	jmp    bb0a <dlmalloc+0x40a>
    c3da:	d3 e6                	shl    %cl,%esi
    c3dc:	f7 d6                	not    %esi
    c3de:	21 f2                	and    %esi,%edx
    c3e0:	89 15 7a df 01 00    	mov    %edx,0x1df7a(%rip)        # 2a360 <_gm_>
    c3e6:	e9 97 f7 ff ff       	jmp    bb82 <dlmalloc+0x482>
    c3eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c3f0:	44 8b 48 18          	mov    0x18(%rax),%r9d
    c3f4:	4d 89 e0             	mov    %r12,%r8
    c3f7:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    c3fc:	41 83 e0 0f          	and    $0xf,%r8d
    c400:	41 83 e1 08          	and    $0x8,%r9d
    c404:	0f 85 14 fe ff ff    	jne    c21e <dlmalloc+0xb1e>
    c40a:	4c 01 78 08          	add    %r15,0x8(%rax)
    c40e:	4c 89 20             	mov    %r12,(%rax)
    c411:	4d 85 c0             	test   %r8,%r8
    c414:	74 09                	je     c41f <dlmalloc+0xd1f>
    c416:	48 f7 df             	neg    %rdi
    c419:	83 e7 0f             	and    $0xf,%edi
    c41c:	49 01 fc             	add    %rdi,%r12
    c41f:	48 8d 42 10          	lea    0x10(%rdx),%rax
    c423:	f6 c2 0f             	test   $0xf,%dl
    c426:	74 09                	je     c431 <dlmalloc+0xd31>
    c428:	48 f7 d8             	neg    %rax
    c42b:	83 e0 0f             	and    $0xf,%eax
    c42e:	48 01 c2             	add    %rax,%rdx
    c431:	48 8b 0d e8 e2 01 00 	mov    0x1e2e8(%rip),%rcx        # 2a720 <mparams>
    c438:	48 89 d0             	mov    %rdx,%rax
    c43b:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
    c43f:	4c 29 e0             	sub    %r12,%rax
    c442:	4c 29 e8             	sub    %r13,%rax
    c445:	48 31 e9             	xor    %rbp,%rcx
    c448:	49 83 cd 03          	or     $0x3,%r13
    c44c:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    c451:	48 89 0f             	mov    %rcx,(%rdi)
    c454:	48 39 d6             	cmp    %rdx,%rsi
    c457:	0f 84 1c 07 00 00    	je     cb79 <dlmalloc+0x1479>
    c45d:	48 39 15 1c df 01 00 	cmp    %rdx,0x1df1c(%rip)        # 2a380 <_gm_+0x20>
    c464:	0f 84 8e 08 00 00    	je     ccf8 <dlmalloc+0x15f8>
    c46a:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    c46e:	4c 89 c1             	mov    %r8,%rcx
    c471:	83 e1 03             	and    $0x3,%ecx
    c474:	48 83 f9 01          	cmp    $0x1,%rcx
    c478:	0f 84 a3 08 00 00    	je     cd21 <dlmalloc+0x1621>
    c47e:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    c482:	48 89 c1             	mov    %rax,%rcx
    c485:	4c 89 42 08          	mov    %r8,0x8(%rdx)
    c489:	48 89 c2             	mov    %rax,%rdx
    c48c:	48 c1 e9 03          	shr    $0x3,%rcx
    c490:	48 83 ca 01          	or     $0x1,%rdx
    c494:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c498:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
    c49c:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    c4a2:	0f 87 65 07 00 00    	ja     cc0d <dlmalloc+0x150d>
    c4a8:	be 01 00 00 00       	mov    $0x1,%esi
    c4ad:	8b 15 ad de 01 00    	mov    0x1dead(%rip),%edx        # 2a360 <_gm_>
    c4b3:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    c4b6:	d3 e6                	shl    %cl,%esi
    c4b8:	48 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%rax
    c4bd:	85 f2                	test   %esi,%edx
    c4bf:	0f 85 20 0a 00 00    	jne    cee5 <dlmalloc+0x17e5>
    c4c5:	09 f2                	or     %esi,%edx
    c4c7:	89 15 93 de 01 00    	mov    %edx,0x1de93(%rip)        # 2a360 <_gm_>
    c4cd:	48 89 c2             	mov    %rax,%rdx
    c4d0:	48 89 78 10          	mov    %rdi,0x10(%rax)
    c4d4:	48 89 7a 18          	mov    %rdi,0x18(%rdx)
    c4d8:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    c4dc:	48 89 47 18          	mov    %rax,0x18(%rdi)
    c4e0:	e9 25 f6 ff ff       	jmp    bb0a <dlmalloc+0x40a>
    c4e5:	0f 1f 00             	nopl   (%rax)
    c4e8:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    c4ec:	0f 85 eb fc ff ff    	jne    c1dd <dlmalloc+0xadd>
    c4f2:	48 39 d6             	cmp    %rdx,%rsi
    c4f5:	0f 82 e2 fc ff ff    	jb     c1dd <dlmalloc+0xadd>
    c4fb:	4c 39 e6             	cmp    %r12,%rsi
    c4fe:	0f 83 d9 fc ff ff    	jae    c1dd <dlmalloc+0xadd>
    c504:	4c 01 f9             	add    %r15,%rcx
    c507:	4c 03 3d 62 de 01 00 	add    0x1de62(%rip),%r15        # 2a370 <_gm_+0x10>
    c50e:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c512:	48 8d 46 10          	lea    0x10(%rsi),%rax
    c516:	40 f6 c6 0f          	test   $0xf,%sil
    c51a:	0f 84 84 06 00 00    	je     cba4 <dlmalloc+0x14a4>
    c520:	48 f7 d8             	neg    %rax
    c523:	4c 89 ff             	mov    %r15,%rdi
    c526:	83 e0 0f             	and    $0xf,%eax
    c529:	48 29 c7             	sub    %rax,%rdi
    c52c:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    c530:	48 89 f8             	mov    %rdi,%rax
    c533:	48 89 c1             	mov    %rax,%rcx
    c536:	48 89 15 4b de 01 00 	mov    %rdx,0x1de4b(%rip)        # 2a388 <_gm_+0x28>
    c53d:	48 83 c9 01          	or     $0x1,%rcx
    c541:	48 89 05 28 de 01 00 	mov    %rax,0x1de28(%rip)        # 2a370 <_gm_+0x10>
    c548:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    c54c:	48 8b 15 ed e1 01 00 	mov    0x1e1ed(%rip),%rdx        # 2a740 <mparams+0x20>
    c553:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    c55a:	00 00 
    c55c:	48 89 15 2d de 01 00 	mov    %rdx,0x1de2d(%rip)        # 2a390 <_gm_+0x30>
    c563:	e9 2d fe ff ff       	jmp    c395 <dlmalloc+0xc95>
    c568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c56f:	00 
    c570:	0f b3 ca             	btr    %ecx,%edx
    c573:	89 15 e7 dd 01 00    	mov    %edx,0x1dde7(%rip)        # 2a360 <_gm_>
    c579:	e9 2d f2 ff ff       	jmp    b7ab <dlmalloc+0xab>
    c57e:	66 90                	xchg   %ax,%ax
    c580:	48 8b 05 f1 dd 01 00 	mov    0x1ddf1(%rip),%rax        # 2a378 <_gm_+0x18>
    c587:	48 85 c0             	test   %rax,%rax
    c58a:	74 05                	je     c591 <dlmalloc+0xe91>
    c58c:	4c 39 e0             	cmp    %r12,%rax
    c58f:	76 07                	jbe    c598 <dlmalloc+0xe98>
    c591:	4c 89 25 e0 dd 01 00 	mov    %r12,0x1dde0(%rip)        # 2a378 <_gm_+0x18>
    c598:	48 8b 05 81 e1 01 00 	mov    0x1e181(%rip),%rax        # 2a720 <mparams>
    c59f:	4c 89 25 32 e1 01 00 	mov    %r12,0x1e132(%rip)        # 2a6d8 <_gm_+0x378>
    c5a6:	4c 89 3d 33 e1 01 00 	mov    %r15,0x1e133(%rip)        # 2a6e0 <_gm_+0x380>
    c5ad:	c7 05 39 e1 01 00 00 	movl   $0x0,0x1e139(%rip)        # 2a6f0 <_gm_+0x390>
    c5b4:	00 00 00 
    c5b7:	48 c7 05 d6 dd 01 00 	movq   $0xffffffffffffffff,0x1ddd6(%rip)        # 2a398 <_gm_+0x38>
    c5be:	ff ff ff ff 
    c5c2:	48 89 05 d7 dd 01 00 	mov    %rax,0x1ddd7(%rip)        # 2a3a0 <_gm_+0x40>
    c5c9:	48 8d 05 d8 dd 01 00 	lea    0x1ddd8(%rip),%rax        # 2a3a8 <_gm_+0x48>
    c5d0:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    c5d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c5de:	00 00 
    c5e0:	48 89 40 18          	mov    %rax,0x18(%rax)
    c5e4:	48 89 40 10          	mov    %rax,0x10(%rax)
    c5e8:	48 83 c0 10          	add    $0x10,%rax
    c5ec:	48 39 c2             	cmp    %rax,%rdx
    c5ef:	75 ef                	jne    c5e0 <dlmalloc+0xee0>
    c5f1:	49 83 ef 50          	sub    $0x50,%r15
    c5f5:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    c5fa:	41 f6 c4 0f          	test   $0xf,%r12b
    c5fe:	0f 84 37 02 00 00    	je     c83b <dlmalloc+0x113b>
    c604:	48 f7 d8             	neg    %rax
    c607:	4c 89 ff             	mov    %r15,%rdi
    c60a:	83 e0 0f             	and    $0xf,%eax
    c60d:	48 29 c7             	sub    %rax,%rdi
    c610:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    c614:	48 89 f8             	mov    %rdi,%rax
    c617:	48 89 c1             	mov    %rax,%rcx
    c61a:	48 89 15 67 dd 01 00 	mov    %rdx,0x1dd67(%rip)        # 2a388 <_gm_+0x28>
    c621:	48 83 c9 01          	or     $0x1,%rcx
    c625:	48 89 05 44 dd 01 00 	mov    %rax,0x1dd44(%rip)        # 2a370 <_gm_+0x10>
    c62c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    c630:	48 8b 15 09 e1 01 00 	mov    0x1e109(%rip),%rdx        # 2a740 <mparams+0x20>
    c637:	4b c7 44 3c 08 50 00 	movq   $0x50,0x8(%r12,%r15,1)
    c63e:	00 00 
    c640:	48 89 15 49 dd 01 00 	mov    %rdx,0x1dd49(%rip)        # 2a390 <_gm_+0x30>
    c647:	e9 49 fd ff ff       	jmp    c395 <dlmalloc+0xc95>
    c64c:	0f 1f 40 00          	nopl   0x0(%rax)
    c650:	4c 89 c8             	mov    %r9,%rax
    c653:	4d 89 e0             	mov    %r12,%r8
    c656:	e9 36 fc ff ff       	jmp    c291 <dlmalloc+0xb91>
    c65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c660:	48 85 f6             	test   %rsi,%rsi
    c663:	0f 85 d7 f1 ff ff    	jne    b840 <dlmalloc+0x140>
    c669:	e9 cd f1 ff ff       	jmp    b83b <dlmalloc+0x13b>
    c66e:	66 90                	xchg   %ax,%ax
    c670:	b8 01 00 00 00       	mov    $0x1,%eax
    c675:	87 05 d5 e0 01 00    	xchg   %eax,0x1e0d5(%rip)        # 2a750 <malloc_global_mutex>
    c67b:	48 8d 15 ce e0 01 00 	lea    0x1e0ce(%rip),%rdx        # 2a750 <malloc_global_mutex>
    c682:	b9 01 00 00 00       	mov    $0x1,%ecx
    c687:	85 c0                	test   %eax,%eax
    c689:	75 55                	jne    c6e0 <dlmalloc+0xfe0>
    c68b:	4c 89 c7             	mov    %r8,%rdi
    c68e:	e8 4d e5 ff ff       	call   abe0 <sbrk>
    c693:	31 ff                	xor    %edi,%edi
    c695:	49 89 c4             	mov    %rax,%r12
    c698:	e8 43 e5 ff ff       	call   abe0 <sbrk>
    c69d:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    c6a1:	0f 95 c1             	setne  %cl
    c6a4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    c6a8:	c7 05 9e e0 01 00 00 	movl   $0x0,0x1e09e(%rip)        # 2a750 <malloc_global_mutex>
    c6af:	00 00 00 
    c6b2:	0f 95 c2             	setne  %dl
    c6b5:	84 d1                	test   %dl,%cl
    c6b7:	0f 84 b0 f2 ff ff    	je     b96d <dlmalloc+0x26d>
    c6bd:	49 39 c4             	cmp    %rax,%r12
    c6c0:	0f 83 a7 f2 ff ff    	jae    b96d <dlmalloc+0x26d>
    c6c6:	4c 29 e0             	sub    %r12,%rax
    c6c9:	49 89 c7             	mov    %rax,%r15
    c6cc:	49 8d 45 50          	lea    0x50(%r13),%rax
    c6d0:	49 39 c7             	cmp    %rax,%r15
    c6d3:	0f 87 a7 fa ff ff    	ja     c180 <dlmalloc+0xa80>
    c6d9:	e9 8f f2 ff ff       	jmp    b96d <dlmalloc+0x26d>
    c6de:	66 90                	xchg   %ax,%ax
    c6e0:	8b 02                	mov    (%rdx),%eax
    c6e2:	85 c0                	test   %eax,%eax
    c6e4:	75 fa                	jne    c6e0 <dlmalloc+0xfe0>
    c6e6:	89 c8                	mov    %ecx,%eax
    c6e8:	87 05 62 e0 01 00    	xchg   %eax,0x1e062(%rip)        # 2a750 <malloc_global_mutex>
    c6ee:	85 c0                	test   %eax,%eax
    c6f0:	75 ee                	jne    c6e0 <dlmalloc+0xfe0>
    c6f2:	eb 97                	jmp    c68b <dlmalloc+0xf8b>
    c6f4:	48 89 f8             	mov    %rdi,%rax
    c6f7:	48 c1 e8 08          	shr    $0x8,%rax
    c6fb:	89 c1                	mov    %eax,%ecx
    c6fd:	85 c0                	test   %eax,%eax
    c6ff:	0f 84 57 02 00 00    	je     c95c <dlmalloc+0x125c>
    c705:	3d ff ff 00 00       	cmp    $0xffff,%eax
    c70a:	0f 87 bd 03 00 00    	ja     cacd <dlmalloc+0x13cd>
    c710:	0f bd c0             	bsr    %eax,%eax
    c713:	b9 26 00 00 00       	mov    $0x26,%ecx
    c718:	48 89 fa             	mov    %rdi,%rdx
    c71b:	83 f0 1f             	xor    $0x1f,%eax
    c71e:	29 c1                	sub    %eax,%ecx
    c720:	48 d3 ea             	shr    %cl,%rdx
    c723:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    c728:	29 c1                	sub    %eax,%ecx
    c72a:	83 e2 01             	and    $0x1,%edx
    c72d:	b8 01 00 00 00       	mov    $0x1,%eax
    c732:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
    c736:	4c 89 c9             	mov    %r9,%rcx
    c739:	4e 8d 04 cd 58 02 00 	lea    0x258(,%r9,8),%r8
    c740:	00 
    c741:	d3 e0                	shl    %cl,%eax
    c743:	8b 15 1b dc 01 00    	mov    0x1dc1b(%rip),%edx        # 2a364 <_gm_+0x4>
    c749:	89 4e 38             	mov    %ecx,0x38(%rsi)
    c74c:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    c753:	00 
    c754:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    c75b:	00 
    c75c:	85 d0                	test   %edx,%eax
    c75e:	0f 85 69 01 00 00    	jne    c8cd <dlmalloc+0x11cd>
    c764:	09 d0                	or     %edx,%eax
    c766:	49 01 e8             	add    %rbp,%r8
    c769:	4a 89 b4 cd 58 02 00 	mov    %rsi,0x258(%rbp,%r9,8)
    c770:	00 
    c771:	89 05 ed db 01 00    	mov    %eax,0x1dbed(%rip)        # 2a364 <_gm_+0x4>
    c777:	48 8b 05 f2 db 01 00 	mov    0x1dbf2(%rip),%rax        # 2a370 <_gm_+0x10>
    c77e:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    c782:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    c786:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    c78a:	e9 06 fc ff ff       	jmp    c395 <dlmalloc+0xc95>
    c78f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c794:	44 89 d1             	mov    %r10d,%ecx
    c797:	48 89 f2             	mov    %rsi,%rdx
    c79a:	d3 e0                	shl    %cl,%eax
    c79c:	44 21 c8             	and    %r9d,%eax
    c79f:	0f 84 f3 f1 ff ff    	je     b998 <dlmalloc+0x298>
    c7a5:	89 c1                	mov    %eax,%ecx
    c7a7:	45 31 e4             	xor    %r12d,%r12d
    c7aa:	f7 d9                	neg    %ecx
    c7ac:	21 c8                	and    %ecx,%eax
    c7ae:	f3 0f bc c0          	tzcnt  %eax,%eax
    c7b2:	89 c0                	mov    %eax,%eax
    c7b4:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    c7bb:	00 
    c7bc:	48 85 c0             	test   %rax,%rax
    c7bf:	0f 85 4e f5 ff ff    	jne    bd13 <dlmalloc+0x613>
    c7c5:	e9 ce f1 ff ff       	jmp    b998 <dlmalloc+0x298>
    c7ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c7d0:	0f bd c0             	bsr    %eax,%eax
    c7d3:	b9 26 00 00 00       	mov    $0x26,%ecx
    c7d8:	4c 89 ea             	mov    %r13,%rdx
    c7db:	83 f0 1f             	xor    $0x1f,%eax
    c7de:	29 c1                	sub    %eax,%ecx
    c7e0:	48 d3 ea             	shr    %cl,%rdx
    c7e3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    c7e8:	83 e2 01             	and    $0x1,%edx
    c7eb:	29 c1                	sub    %eax,%ecx
    c7ed:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    c7f0:	49 89 c2             	mov    %rax,%r10
    c7f3:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    c7fa:	00 
    c7fb:	48 85 c0             	test   %rax,%rax
    c7fe:	74 8f                	je     c78f <dlmalloc+0x108f>
    c800:	4c 89 e9             	mov    %r13,%rcx
    c803:	41 83 fa 1f          	cmp    $0x1f,%r10d
    c807:	0f 84 99 f4 ff ff    	je     bca6 <dlmalloc+0x5a6>
    c80d:	44 89 d2             	mov    %r10d,%edx
    c810:	b9 39 00 00 00       	mov    $0x39,%ecx
    c815:	d1 ea                	shr    %edx
    c817:	29 d1                	sub    %edx,%ecx
    c819:	e9 7f f4 ff ff       	jmp    bc9d <dlmalloc+0x59d>
    c81e:	48 8b 05 4b db 01 00 	mov    0x1db4b(%rip),%rax        # 2a370 <_gm_+0x10>
    c825:	e9 6b fb ff ff       	jmp    c395 <dlmalloc+0xc95>
    c82a:	48 83 cf 03          	or     $0x3,%rdi
    c82e:	e9 0c f4 ff ff       	jmp    bc3f <dlmalloc+0x53f>
    c833:	49 89 c4             	mov    %rax,%r12
    c836:	e9 d8 f4 ff ff       	jmp    bd13 <dlmalloc+0x613>
    c83b:	4c 89 f8             	mov    %r15,%rax
    c83e:	4c 89 e2             	mov    %r12,%rdx
    c841:	e9 d1 fd ff ff       	jmp    c617 <dlmalloc+0xf17>
    c846:	83 c9 03             	or     $0x3,%ecx
    c849:	89 cf                	mov    %ecx,%edi
    c84b:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    c850:	48 89 30             	mov    %rsi,(%rax)
    c853:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    c858:	e9 ad f2 ff ff       	jmp    bb0a <dlmalloc+0x40a>
    c85d:	b8 01 00 00 00       	mov    $0x1,%eax
    c862:	87 05 e8 de 01 00    	xchg   %eax,0x1dee8(%rip)        # 2a750 <malloc_global_mutex>
    c868:	85 c0                	test   %eax,%eax
    c86a:	0f 85 84 f8 ff ff    	jne    c0f4 <dlmalloc+0x9f4>
    c870:	e9 a6 f8 ff ff       	jmp    c11b <dlmalloc+0xa1b>
    c875:	48 89 f2             	mov    %rsi,%rdx
    c878:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c87d:	e9 1a ff ff ff       	jmp    c79c <dlmalloc+0x109c>
    c882:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    c887:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
    c88c:	48 85 c0             	test   %rax,%rax
    c88f:	0f 84 3b 03 00 00    	je     cbd0 <dlmalloc+0x14d0>
    c895:	0f 1f 00             	nopl   (%rax)
    c898:	49 89 cb             	mov    %rcx,%r11
    c89b:	48 89 c6             	mov    %rax,%rsi
    c89e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    c8a2:	48 8b 40 28          	mov    0x28(%rax),%rax
    c8a6:	48 85 c0             	test   %rax,%rax
    c8a9:	75 ed                	jne    c898 <dlmalloc+0x1198>
    c8ab:	48 8b 46 20          	mov    0x20(%rsi),%rax
    c8af:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    c8b3:	48 85 c0             	test   %rax,%rax
    c8b6:	75 e0                	jne    c898 <dlmalloc+0x1198>
    c8b8:	4d 39 da             	cmp    %r11,%r10
    c8bb:	0f 87 17 f6 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    c8c1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    c8c8:	e9 e0 f4 ff ff       	jmp    bdad <dlmalloc+0x6ad>
    c8cd:	4a 8b 94 cd 58 02 00 	mov    0x258(%rbp,%r9,8),%rdx
    c8d4:	00 
    c8d5:	49 89 f8             	mov    %rdi,%r8
    c8d8:	83 f9 1f             	cmp    $0x1f,%ecx
    c8db:	74 31                	je     c90e <dlmalloc+0x120e>
    c8dd:	d1 e9                	shr    %ecx
    c8df:	b8 39 00 00 00       	mov    $0x39,%eax
    c8e4:	29 c8                	sub    %ecx,%eax
    c8e6:	89 c1                	mov    %eax,%ecx
    c8e8:	49 d3 e0             	shl    %cl,%r8
    c8eb:	eb 21                	jmp    c90e <dlmalloc+0x120e>
    c8ed:	0f 1f 00             	nopl   (%rax)
    c8f0:	4c 89 c0             	mov    %r8,%rax
    c8f3:	4d 01 c0             	add    %r8,%r8
    c8f6:	48 c1 e8 3f          	shr    $0x3f,%rax
    c8fa:	48 83 c0 04          	add    $0x4,%rax
    c8fe:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    c902:	48 85 c9             	test   %rcx,%rcx
    c905:	0f 84 dd 01 00 00    	je     cae8 <dlmalloc+0x13e8>
    c90b:	48 89 ca             	mov    %rcx,%rdx
    c90e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    c912:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c916:	48 39 c7             	cmp    %rax,%rdi
    c919:	75 d5                	jne    c8f0 <dlmalloc+0x11f0>
    c91b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    c91f:	48 8b 0d 52 da 01 00 	mov    0x1da52(%rip),%rcx        # 2a378 <_gm_+0x18>
    c926:	48 39 c8             	cmp    %rcx,%rax
    c929:	0f 82 a9 f5 ff ff    	jb     bed8 <dlmalloc+0x7d8>
    c92f:	48 39 ca             	cmp    %rcx,%rdx
    c932:	0f 82 a0 f5 ff ff    	jb     bed8 <dlmalloc+0x7d8>
    c938:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c93c:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    c940:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c944:	48 8b 05 25 da 01 00 	mov    0x1da25(%rip),%rax        # 2a370 <_gm_+0x10>
    c94b:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    c94f:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    c956:	00 
    c957:	e9 39 fa ff ff       	jmp    c395 <dlmalloc+0xc95>
    c95c:	b8 01 00 00 00       	mov    $0x1,%eax
    c961:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    c967:	41 89 c9             	mov    %ecx,%r9d
    c96a:	e9 d4 fd ff ff       	jmp    c743 <dlmalloc+0x1043>
    c96f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    c973:	48 3b 05 fe d9 01 00 	cmp    0x1d9fe(%rip),%rax        # 2a378 <_gm_+0x18>
    c97a:	0f 83 fe f9 ff ff    	jae    c37e <dlmalloc+0xc7e>
    c980:	e9 53 f5 ff ff       	jmp    bed8 <dlmalloc+0x7d8>
    c985:	48 89 d1             	mov    %rdx,%rcx
    c988:	48 c1 e9 08          	shr    $0x8,%rcx
    c98c:	89 c8                	mov    %ecx,%eax
    c98e:	85 c9                	test   %ecx,%ecx
    c990:	0f 84 cf 01 00 00    	je     cb65 <dlmalloc+0x1465>
    c996:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    c99c:	0f 87 dd 03 00 00    	ja     cd7f <dlmalloc+0x167f>
    c9a2:	0f bd c1             	bsr    %ecx,%eax
    c9a5:	b9 26 00 00 00       	mov    $0x26,%ecx
    c9aa:	49 89 d7             	mov    %rdx,%r15
    c9ad:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    c9b3:	83 f0 1f             	xor    $0x1f,%eax
    c9b6:	29 c1                	sub    %eax,%ecx
    c9b8:	41 29 c1             	sub    %eax,%r9d
    c9bb:	49 d3 ef             	shr    %cl,%r15
    c9be:	4c 89 f9             	mov    %r15,%rcx
    c9c1:	83 e1 01             	and    $0x1,%ecx
    c9c4:	46 8d 1c 49          	lea    (%rcx,%r9,2),%r11d
    c9c8:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    c9ce:	44 89 d9             	mov    %r11d,%ecx
    c9d1:	4c 89 d8             	mov    %r11,%rax
    c9d4:	4e 8d 34 dd 58 02 00 	lea    0x258(,%r11,8),%r14
    c9db:	00 
    c9dc:	41 d3 e1             	shl    %cl,%r9d
    c9df:	8b 0d 7f d9 01 00    	mov    0x1d97f(%rip),%ecx        # 2a364 <_gm_+0x4>
    c9e5:	89 47 38             	mov    %eax,0x38(%rdi)
    c9e8:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    c9ef:	00 
    c9f0:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    c9f7:	00 
    c9f8:	44 85 c9             	test   %r9d,%ecx
    c9fb:	0f 84 e7 01 00 00    	je     cbe8 <dlmalloc+0x14e8>
    ca01:	4e 8b 8c dd 58 02 00 	mov    0x258(%rbp,%r11,8),%r9
    ca08:	00 
    ca09:	49 89 d3             	mov    %rdx,%r11
    ca0c:	83 f8 1f             	cmp    $0x1f,%eax
    ca0f:	74 2d                	je     ca3e <dlmalloc+0x133e>
    ca11:	d1 e8                	shr    %eax
    ca13:	b9 39 00 00 00       	mov    $0x39,%ecx
    ca18:	29 c1                	sub    %eax,%ecx
    ca1a:	49 d3 e3             	shl    %cl,%r11
    ca1d:	eb 1f                	jmp    ca3e <dlmalloc+0x133e>
    ca1f:	90                   	nop
    ca20:	4c 89 d8             	mov    %r11,%rax
    ca23:	4d 01 db             	add    %r11,%r11
    ca26:	48 c1 e8 3f          	shr    $0x3f,%rax
    ca2a:	48 83 c0 04          	add    $0x4,%rax
    ca2e:	49 8b 0c c1          	mov    (%r9,%rax,8),%rcx
    ca32:	48 85 c9             	test   %rcx,%rcx
    ca35:	0f 84 9b 02 00 00    	je     ccd6 <dlmalloc+0x15d6>
    ca3b:	49 89 c9             	mov    %rcx,%r9
    ca3e:	49 8b 41 08          	mov    0x8(%r9),%rax
    ca42:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ca46:	48 39 d0             	cmp    %rdx,%rax
    ca49:	75 d5                	jne    ca20 <dlmalloc+0x1320>
    ca4b:	49 8b 41 10          	mov    0x10(%r9),%rax
    ca4f:	4d 39 ca             	cmp    %r9,%r10
    ca52:	0f 87 80 f4 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    ca58:	49 39 c2             	cmp    %rax,%r10
    ca5b:	0f 87 77 f4 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    ca61:	48 89 78 18          	mov    %rdi,0x18(%rax)
    ca65:	49 89 79 10          	mov    %rdi,0x10(%r9)
    ca69:	48 89 47 10          	mov    %rax,0x10(%rdi)
    ca6d:	4c 89 4f 18          	mov    %r9,0x18(%rdi)
    ca71:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    ca78:	00 
    ca79:	e9 2e f4 ff ff       	jmp    beac <dlmalloc+0x7ac>
    ca7e:	49 8d 44 15 00       	lea    0x0(%r13,%rdx,1),%rax
    ca83:	48 89 c2             	mov    %rax,%rdx
    ca86:	4c 01 e0             	add    %r12,%rax
    ca89:	48 83 ca 03          	or     $0x3,%rdx
    ca8d:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    ca92:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    ca97:	48 89 08             	mov    %rcx,(%rax)
    ca9a:	e9 0d f4 ff ff       	jmp    beac <dlmalloc+0x7ac>
    ca9f:	09 f9                	or     %edi,%ecx
    caa1:	89 0d b9 d8 01 00    	mov    %ecx,0x1d8b9(%rip)        # 2a360 <_gm_>
    caa7:	4c 89 c1             	mov    %r8,%rcx
    caaa:	e9 5e f1 ff ff       	jmp    bc0d <dlmalloc+0x50d>
    caaf:	4a 89 74 dd 08       	mov    %rsi,0x8(%rbp,%r11,8)
    cab4:	48 85 f6             	test   %rsi,%rsi
    cab7:	0f 85 2b f3 ff ff    	jne    bde8 <dlmalloc+0x6e8>
    cabd:	41 0f b3 c9          	btr    %ecx,%r9d
    cac1:	44 89 0d 9c d8 01 00 	mov    %r9d,0x1d89c(%rip)        # 2a364 <_gm_+0x4>
    cac8:	e9 5e f3 ff ff       	jmp    be2b <dlmalloc+0x72b>
    cacd:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cad2:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    cad8:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cadd:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    cae3:	e9 5b fc ff ff       	jmp    c743 <dlmalloc+0x1043>
    cae8:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    caec:	48 39 0d 85 d8 01 00 	cmp    %rcx,0x1d885(%rip)        # 2a378 <_gm_+0x18>
    caf3:	0f 87 df f3 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    caf9:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    cafd:	48 8b 05 6c d8 01 00 	mov    0x1d86c(%rip),%rax        # 2a370 <_gm_+0x10>
    cb04:	48 89 56 30          	mov    %rdx,0x30(%rsi)
    cb08:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    cb0c:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    cb10:	e9 80 f8 ff ff       	jmp    c395 <dlmalloc+0xc95>
    cb15:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    cb1a:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
    cb1f:	48 85 c0             	test   %rax,%rax
    cb22:	0f 84 a5 03 00 00    	je     cecd <dlmalloc+0x17cd>
    cb28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb2f:	00 
    cb30:	49 89 ce             	mov    %rcx,%r14
    cb33:	48 89 c6             	mov    %rax,%rsi
    cb36:	48 8d 48 28          	lea    0x28(%rax),%rcx
    cb3a:	48 8b 40 28          	mov    0x28(%rax),%rax
    cb3e:	48 85 c0             	test   %rax,%rax
    cb41:	75 ed                	jne    cb30 <dlmalloc+0x1430>
    cb43:	48 8b 46 20          	mov    0x20(%rsi),%rax
    cb47:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    cb4b:	48 85 c0             	test   %rax,%rax
    cb4e:	75 e0                	jne    cb30 <dlmalloc+0x1430>
    cb50:	4d 39 f3             	cmp    %r14,%r11
    cb53:	0f 87 7f f3 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    cb59:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    cb60:	e9 3c f4 ff ff       	jmp    bfa1 <dlmalloc+0x8a1>
    cb65:	41 be 58 02 00 00    	mov    $0x258,%r14d
    cb6b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    cb71:	41 89 cb             	mov    %ecx,%r11d
    cb74:	e9 66 fe ff ff       	jmp    c9df <dlmalloc+0x12df>
    cb79:	48 03 05 f0 d7 01 00 	add    0x1d7f0(%rip),%rax        # 2a370 <_gm_+0x10>
    cb80:	48 89 3d 01 d8 01 00 	mov    %rdi,0x1d801(%rip)        # 2a388 <_gm_+0x28>
    cb87:	48 89 05 e2 d7 01 00 	mov    %rax,0x1d7e2(%rip)        # 2a370 <_gm_+0x10>
    cb8e:	48 83 c8 01          	or     $0x1,%rax
    cb92:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cb96:	e9 6f ef ff ff       	jmp    bb0a <dlmalloc+0x40a>
    cb9b:	49 89 76 20          	mov    %rsi,0x20(%r14)
    cb9f:	e9 3f f2 ff ff       	jmp    bde3 <dlmalloc+0x6e3>
    cba4:	4c 89 f8             	mov    %r15,%rax
    cba7:	48 89 f2             	mov    %rsi,%rdx
    cbaa:	e9 84 f9 ff ff       	jmp    c533 <dlmalloc+0xe33>
    cbaf:	4b 8d 44 05 00       	lea    0x0(%r13,%r8,1),%rax
    cbb4:	48 89 c2             	mov    %rax,%rdx
    cbb7:	4c 01 e0             	add    %r12,%rax
    cbba:	48 83 ca 03          	or     $0x3,%rdx
    cbbe:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    cbc3:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    cbc8:	48 89 08             	mov    %rcx,(%rax)
    cbcb:	e9 dd f4 ff ff       	jmp    c0ad <dlmalloc+0x9ad>
    cbd0:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    cbd5:	48 85 c0             	test   %rax,%rax
    cbd8:	0f 84 2f 03 00 00    	je     cf0d <dlmalloc+0x180d>
    cbde:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
    cbe3:	e9 b0 fc ff ff       	jmp    c898 <dlmalloc+0x1198>
    cbe8:	44 09 c9             	or     %r9d,%ecx
    cbeb:	49 01 ee             	add    %rbp,%r14
    cbee:	4a 89 bc dd 58 02 00 	mov    %rdi,0x258(%rbp,%r11,8)
    cbf5:	00 
    cbf6:	89 0d 68 d7 01 00    	mov    %ecx,0x1d768(%rip)        # 2a364 <_gm_+0x4>
    cbfc:	4c 89 77 30          	mov    %r14,0x30(%rdi)
    cc00:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    cc04:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    cc08:	e9 9f f2 ff ff       	jmp    beac <dlmalloc+0x7ac>
    cc0d:	48 89 c2             	mov    %rax,%rdx
    cc10:	48 c1 ea 08          	shr    $0x8,%rdx
    cc14:	89 d1                	mov    %edx,%ecx
    cc16:	85 d2                	test   %edx,%edx
    cc18:	0f 84 dd 02 00 00    	je     cefb <dlmalloc+0x17fb>
    cc1e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    cc24:	0f 87 0d 04 00 00    	ja     d037 <dlmalloc+0x1937>
    cc2a:	0f bd d2             	bsr    %edx,%edx
    cc2d:	b9 26 00 00 00       	mov    $0x26,%ecx
    cc32:	48 89 c6             	mov    %rax,%rsi
    cc35:	83 f2 1f             	xor    $0x1f,%edx
    cc38:	29 d1                	sub    %edx,%ecx
    cc3a:	48 d3 ee             	shr    %cl,%rsi
    cc3d:	48 89 f1             	mov    %rsi,%rcx
    cc40:	be 1f 00 00 00       	mov    $0x1f,%esi
    cc45:	83 e1 01             	and    $0x1,%ecx
    cc48:	29 d6                	sub    %edx,%esi
    cc4a:	ba 01 00 00 00       	mov    $0x1,%edx
    cc4f:	8d 34 71             	lea    (%rcx,%rsi,2),%esi
    cc52:	48 89 f1             	mov    %rsi,%rcx
    cc55:	4c 8d 04 f5 58 02 00 	lea    0x258(,%rsi,8),%r8
    cc5c:	00 
    cc5d:	d3 e2                	shl    %cl,%edx
    cc5f:	44 8b 15 fe d6 01 00 	mov    0x1d6fe(%rip),%r10d        # 2a364 <_gm_+0x4>
    cc66:	89 4f 38             	mov    %ecx,0x38(%rdi)
    cc69:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    cc70:	00 
    cc71:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cc78:	00 
    cc79:	44 85 d2             	test   %r10d,%edx
    cc7c:	0f 85 af 01 00 00    	jne    ce31 <dlmalloc+0x1731>
    cc82:	44 09 d2             	or     %r10d,%edx
    cc85:	49 01 e8             	add    %rbp,%r8
    cc88:	48 89 bc f5 58 02 00 	mov    %rdi,0x258(%rbp,%rsi,8)
    cc8f:	00 
    cc90:	89 15 ce d6 01 00    	mov    %edx,0x1d6ce(%rip)        # 2a364 <_gm_+0x4>
    cc96:	4c 89 47 30          	mov    %r8,0x30(%rdi)
    cc9a:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    cc9e:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    cca2:	e9 63 ee ff ff       	jmp    bb0a <dlmalloc+0x40a>
    cca7:	44 09 c8             	or     %r9d,%eax
    ccaa:	89 05 b0 d6 01 00    	mov    %eax,0x1d6b0(%rip)        # 2a360 <_gm_>
    ccb0:	48 89 d0             	mov    %rdx,%rax
    ccb3:	e9 e4 f1 ff ff       	jmp    be9c <dlmalloc+0x79c>
    ccb8:	4a 89 74 f5 08       	mov    %rsi,0x8(%rbp,%r14,8)
    ccbd:	48 85 f6             	test   %rsi,%rsi
    ccc0:	0f 85 16 f3 ff ff    	jne    bfdc <dlmalloc+0x8dc>
    ccc6:	41 0f b3 c1          	btr    %eax,%r9d
    ccca:	44 89 0d 93 d6 01 00 	mov    %r9d,0x1d693(%rip)        # 2a364 <_gm_+0x4>
    ccd1:	e9 49 f3 ff ff       	jmp    c01f <dlmalloc+0x91f>
    ccd6:	49 8d 14 c1          	lea    (%r9,%rax,8),%rdx
    ccda:	49 39 d2             	cmp    %rdx,%r10
    ccdd:	0f 87 f5 f1 ff ff    	ja     bed8 <dlmalloc+0x7d8>
    cce3:	49 89 3c c1          	mov    %rdi,(%r9,%rax,8)
    cce7:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
    cceb:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    ccef:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    ccf3:	e9 b4 f1 ff ff       	jmp    beac <dlmalloc+0x7ac>
    ccf8:	48 03 05 69 d6 01 00 	add    0x1d669(%rip),%rax        # 2a368 <_gm_+0x8>
    ccff:	48 89 3d 7a d6 01 00 	mov    %rdi,0x1d67a(%rip)        # 2a380 <_gm_+0x20>
    cd06:	48 89 c2             	mov    %rax,%rdx
    cd09:	48 89 05 58 d6 01 00 	mov    %rax,0x1d658(%rip)        # 2a368 <_gm_+0x8>
    cd10:	48 83 ca 01          	or     $0x1,%rdx
    cd14:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cd18:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
    cd1c:	e9 e9 ed ff ff       	jmp    bb0a <dlmalloc+0x40a>
    cd21:	4d 89 c3             	mov    %r8,%r11
    cd24:	4c 89 c1             	mov    %r8,%rcx
    cd27:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    cd2b:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
    cd2f:	48 c1 e9 03          	shr    $0x3,%rcx
    cd33:	49 81 f8 ff 00 00 00 	cmp    $0xff,%r8
    cd3a:	0f 87 00 02 00 00    	ja     cf40 <dlmalloc+0x1840>
    cd40:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    cd44:	4c 8b 42 10          	mov    0x10(%rdx),%r8
    cd48:	4e 8d 54 d5 48       	lea    0x48(%rbp,%r10,8),%r10
    cd4d:	4d 39 d0             	cmp    %r10,%r8
    cd50:	0f 85 68 f1 ff ff    	jne    bebe <dlmalloc+0x7be>
    cd56:	49 39 f0             	cmp    %rsi,%r8
    cd59:	0f 84 ba 03 00 00    	je     d119 <dlmalloc+0x1a19>
    cd5f:	49 39 f2             	cmp    %rsi,%r10
    cd62:	0f 85 c3 03 00 00    	jne    d12b <dlmalloc+0x1a2b>
    cd68:	49 89 70 18          	mov    %rsi,0x18(%r8)
    cd6c:	4c 89 46 10          	mov    %r8,0x10(%rsi)
    cd70:	4c 01 da             	add    %r11,%rdx
    cd73:	4c 01 d8             	add    %r11,%rax
    cd76:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    cd7a:	e9 ff f6 ff ff       	jmp    c47e <dlmalloc+0xd7e>
    cd7f:	41 be 50 03 00 00    	mov    $0x350,%r14d
    cd85:	41 b9 00 00 00 80    	mov    $0x80000000,%r9d
    cd8b:	b8 1f 00 00 00       	mov    $0x1f,%eax
    cd90:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
    cd96:	e9 44 fc ff ff       	jmp    c9df <dlmalloc+0x12df>
    cd9b:	4c 89 ff             	mov    %r15,%rdi
    cd9e:	4c 89 04 24          	mov    %r8,(%rsp)
    cda2:	e8 39 de ff ff       	call   abe0 <sbrk>
    cda7:	4c 8b 04 24          	mov    (%rsp),%r8
    cdab:	4c 39 f0             	cmp    %r14,%rax
    cdae:	49 89 c4             	mov    %rax,%r12
    cdb1:	0f 84 cd 02 00 00    	je     d084 <dlmalloc+0x1984>
    cdb7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    cdbb:	0f 84 8f eb ff ff    	je     b950 <dlmalloc+0x250>
    cdc1:	49 8d 45 60          	lea    0x60(%r13),%rax
    cdc5:	4c 39 f8             	cmp    %r15,%rax
    cdc8:	0f 86 a8 f3 ff ff    	jbe    c176 <dlmalloc+0xa76>
    cdce:	48 8b 05 5b d9 01 00 	mov    0x1d95b(%rip),%rax        # 2a730 <mparams+0x10>
    cdd5:	4d 89 f9             	mov    %r15,%r9
    cdd8:	49 f7 d9             	neg    %r9
    cddb:	4d 8d 74 05 5f       	lea    0x5f(%r13,%rax,1),%r14
    cde0:	48 f7 d8             	neg    %rax
    cde3:	4d 29 fe             	sub    %r15,%r14
    cde6:	49 21 c6             	and    %rax,%r14
    cde9:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    cdf0:	ff ff 7f 
    cdf3:	49 39 c6             	cmp    %rax,%r14
    cdf6:	0f 87 7a f3 ff ff    	ja     c176 <dlmalloc+0xa76>
    cdfc:	4c 89 f7             	mov    %r14,%rdi
    cdff:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ce04:	4c 89 04 24          	mov    %r8,(%rsp)
    ce08:	e8 d3 dd ff ff       	call   abe0 <sbrk>
    ce0d:	4c 8b 04 24          	mov    (%rsp),%r8
    ce11:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    ce16:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    ce1a:	0f 84 da 02 00 00    	je     d0fa <dlmalloc+0x19fa>
    ce20:	4d 01 f7             	add    %r14,%r15
    ce23:	e9 4e f3 ff ff       	jmp    c176 <dlmalloc+0xa76>
    ce28:	49 89 77 20          	mov    %rsi,0x20(%r15)
    ce2c:	e9 a6 f1 ff ff       	jmp    bfd7 <dlmalloc+0x8d7>
    ce31:	48 8b b4 f5 58 02 00 	mov    0x258(%rbp,%rsi,8),%rsi
    ce38:	00 
    ce39:	83 f9 1f             	cmp    $0x1f,%ecx
    ce3c:	74 0b                	je     ce49 <dlmalloc+0x1749>
    ce3e:	d1 e9                	shr    %ecx
    ce40:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    ce46:	41 29 c9             	sub    %ecx,%r9d
    ce49:	44 89 c9             	mov    %r9d,%ecx
    ce4c:	48 89 c2             	mov    %rax,%rdx
    ce4f:	48 d3 e2             	shl    %cl,%rdx
    ce52:	48 89 d1             	mov    %rdx,%rcx
    ce55:	eb 1e                	jmp    ce75 <dlmalloc+0x1775>
    ce57:	48 89 ca             	mov    %rcx,%rdx
    ce5a:	48 01 c9             	add    %rcx,%rcx
    ce5d:	48 c1 ea 3f          	shr    $0x3f,%rdx
    ce61:	48 83 c2 04          	add    $0x4,%rdx
    ce65:	4c 8b 04 d6          	mov    (%rsi,%rdx,8),%r8
    ce69:	4d 85 c0             	test   %r8,%r8
    ce6c:	0f 84 9f 01 00 00    	je     d011 <dlmalloc+0x1911>
    ce72:	4c 89 c6             	mov    %r8,%rsi
    ce75:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    ce79:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ce7d:	48 39 d0             	cmp    %rdx,%rax
    ce80:	75 d5                	jne    ce57 <dlmalloc+0x1757>
    ce82:	48 8b 46 10          	mov    0x10(%rsi),%rax
    ce86:	48 8b 15 eb d4 01 00 	mov    0x1d4eb(%rip),%rdx        # 2a378 <_gm_+0x18>
    ce8d:	48 39 d0             	cmp    %rdx,%rax
    ce90:	0f 82 42 f0 ff ff    	jb     bed8 <dlmalloc+0x7d8>
    ce96:	48 39 d6             	cmp    %rdx,%rsi
    ce99:	0f 82 39 f0 ff ff    	jb     bed8 <dlmalloc+0x7d8>
    ce9f:	48 89 78 18          	mov    %rdi,0x18(%rax)
    cea3:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    cea7:	48 89 47 10          	mov    %rax,0x10(%rdi)
    ceab:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    ceaf:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    ceb6:	00 
    ceb7:	e9 4e ec ff ff       	jmp    bb0a <dlmalloc+0x40a>
    cebc:	44 09 f2             	or     %r14d,%edx
    cebf:	89 15 9b d4 01 00    	mov    %edx,0x1d49b(%rip)        # 2a360 <_gm_>
    cec5:	4c 89 ca             	mov    %r9,%rdx
    cec8:	e9 c2 f1 ff ff       	jmp    c08f <dlmalloc+0x98f>
    cecd:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    ced2:	48 85 c0             	test   %rax,%rax
    ced5:	0f 84 76 01 00 00    	je     d051 <dlmalloc+0x1951>
    cedb:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
    cee0:	e9 4b fc ff ff       	jmp    cb30 <dlmalloc+0x1430>
    cee5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    cee9:	48 3b 15 88 d4 01 00 	cmp    0x1d488(%rip),%rdx        # 2a378 <_gm_+0x18>
    cef0:	0f 83 da f5 ff ff    	jae    c4d0 <dlmalloc+0xdd0>
    cef6:	e9 dd ef ff ff       	jmp    bed8 <dlmalloc+0x7d8>
    cefb:	ba 01 00 00 00       	mov    $0x1,%edx
    cf00:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    cf06:	89 ce                	mov    %ecx,%esi
    cf08:	e9 52 fd ff ff       	jmp    cc5f <dlmalloc+0x155f>
    cf0d:	4d 85 f6             	test   %r14,%r14
    cf10:	0f 84 15 ef ff ff    	je     be2b <dlmalloc+0x72b>
    cf16:	41 8b 44 24 38       	mov    0x38(%r12),%eax
    cf1b:	31 f6                	xor    %esi,%esi
    cf1d:	48 89 c1             	mov    %rax,%rcx
    cf20:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
    cf24:	4c 3b a4 c5 58 02 00 	cmp    0x258(%rbp,%rax,8),%r12
    cf2b:	00 
    cf2c:	0f 85 9a ee ff ff    	jne    bdcc <dlmalloc+0x6cc>
    cf32:	4a c7 44 dd 08 00 00 	movq   $0x0,0x8(%rbp,%r11,8)
    cf39:	00 00 
    cf3b:	e9 7d fb ff ff       	jmp    cabd <dlmalloc+0x13bd>
    cf40:	4c 8b 52 30          	mov    0x30(%rdx),%r10
    cf44:	48 39 f2             	cmp    %rsi,%rdx
    cf47:	0f 84 5f 01 00 00    	je     d0ac <dlmalloc+0x19ac>
    cf4d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    cf51:	48 3b 0d 20 d4 01 00 	cmp    0x1d420(%rip),%rcx        # 2a378 <_gm_+0x18>
    cf58:	0f 82 7a ef ff ff    	jb     bed8 <dlmalloc+0x7d8>
    cf5e:	48 39 51 18          	cmp    %rdx,0x18(%rcx)
    cf62:	0f 85 70 ef ff ff    	jne    bed8 <dlmalloc+0x7d8>
    cf68:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
    cf6c:	0f 85 66 ef ff ff    	jne    bed8 <dlmalloc+0x7d8>
    cf72:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    cf76:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    cf7a:	4d 85 d2             	test   %r10,%r10
    cf7d:	0f 84 ed fd ff ff    	je     cd70 <dlmalloc+0x1670>
    cf83:	44 8b 42 38          	mov    0x38(%rdx),%r8d
    cf87:	4c 89 c1             	mov    %r8,%rcx
    cf8a:	4d 8d 68 4a          	lea    0x4a(%r8),%r13
    cf8e:	4a 39 94 c5 58 02 00 	cmp    %rdx,0x258(%rbp,%r8,8)
    cf95:	00 
    cf96:	0f 84 f0 00 00 00    	je     d08c <dlmalloc+0x198c>
    cf9c:	4c 3b 15 d5 d3 01 00 	cmp    0x1d3d5(%rip),%r10        # 2a378 <_gm_+0x18>
    cfa3:	0f 82 2f ef ff ff    	jb     bed8 <dlmalloc+0x7d8>
    cfa9:	49 39 52 20          	cmp    %rdx,0x20(%r10)
    cfad:	0f 84 aa 01 00 00    	je     d15d <dlmalloc+0x1a5d>
    cfb3:	49 89 72 28          	mov    %rsi,0x28(%r10)
    cfb7:	48 85 f6             	test   %rsi,%rsi
    cfba:	0f 84 b0 fd ff ff    	je     cd70 <dlmalloc+0x1670>
    cfc0:	4c 8b 05 b1 d3 01 00 	mov    0x1d3b1(%rip),%r8        # 2a378 <_gm_+0x18>
    cfc7:	4c 39 c6             	cmp    %r8,%rsi
    cfca:	0f 82 08 ef ff ff    	jb     bed8 <dlmalloc+0x7d8>
    cfd0:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    cfd4:	4c 89 56 30          	mov    %r10,0x30(%rsi)
    cfd8:	48 85 c9             	test   %rcx,%rcx
    cfdb:	74 11                	je     cfee <dlmalloc+0x18ee>
    cfdd:	49 39 c8             	cmp    %rcx,%r8
    cfe0:	0f 87 f2 ee ff ff    	ja     bed8 <dlmalloc+0x7d8>
    cfe6:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    cfea:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    cfee:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
    cff2:	48 85 c9             	test   %rcx,%rcx
    cff5:	0f 84 75 fd ff ff    	je     cd70 <dlmalloc+0x1670>
    cffb:	49 39 c8             	cmp    %rcx,%r8
    cffe:	0f 87 d4 ee ff ff    	ja     bed8 <dlmalloc+0x7d8>
    d004:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    d008:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    d00c:	e9 5f fd ff ff       	jmp    cd70 <dlmalloc+0x1670>
    d011:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
    d015:	48 39 05 5c d3 01 00 	cmp    %rax,0x1d35c(%rip)        # 2a378 <_gm_+0x18>
    d01c:	0f 87 b6 ee ff ff    	ja     bed8 <dlmalloc+0x7d8>
    d022:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    d026:	48 89 77 30          	mov    %rsi,0x30(%rdi)
    d02a:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    d02e:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    d032:	e9 d3 ea ff ff       	jmp    bb0a <dlmalloc+0x40a>
    d037:	ba 00 00 00 80       	mov    $0x80000000,%edx
    d03c:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    d042:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d047:	be 1f 00 00 00       	mov    $0x1f,%esi
    d04c:	e9 0e fc ff ff       	jmp    cc5f <dlmalloc+0x155f>
    d051:	4d 85 ff             	test   %r15,%r15
    d054:	0f 84 c5 ef ff ff    	je     c01f <dlmalloc+0x91f>
    d05a:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    d05f:	31 f6                	xor    %esi,%esi
    d061:	48 89 c8             	mov    %rcx,%rax
    d064:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
    d068:	4c 3b a4 cd 58 02 00 	cmp    0x258(%rbp,%rcx,8),%r12
    d06f:	00 
    d070:	0f 85 4a ef ff ff    	jne    bfc0 <dlmalloc+0x8c0>
    d076:	4a c7 44 f5 08 00 00 	movq   $0x0,0x8(%rbp,%r14,8)
    d07d:	00 00 
    d07f:	e9 42 fc ff ff       	jmp    ccc6 <dlmalloc+0x15c6>
    d084:	4d 89 f4             	mov    %r14,%r12
    d087:	e9 ea f0 ff ff       	jmp    c176 <dlmalloc+0xa76>
    d08c:	4a 89 74 ed 08       	mov    %rsi,0x8(%rbp,%r13,8)
    d091:	48 85 f6             	test   %rsi,%rsi
    d094:	0f 85 26 ff ff ff    	jne    cfc0 <dlmalloc+0x18c0>
    d09a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    d09f:	d3 c6                	rol    %cl,%esi
    d0a1:	21 35 bd d2 01 00    	and    %esi,0x1d2bd(%rip)        # 2a364 <_gm_+0x4>
    d0a7:	e9 c4 fc ff ff       	jmp    cd70 <dlmalloc+0x1670>
    d0ac:	48 8b 72 28          	mov    0x28(%rdx),%rsi
    d0b0:	48 85 f6             	test   %rsi,%rsi
    d0b3:	0f 84 8e 00 00 00    	je     d147 <dlmalloc+0x1a47>
    d0b9:	4c 8d 42 28          	lea    0x28(%rdx),%r8
    d0bd:	48 89 f1             	mov    %rsi,%rcx
    d0c0:	4d 89 c5             	mov    %r8,%r13
    d0c3:	48 89 ce             	mov    %rcx,%rsi
    d0c6:	4c 8d 41 28          	lea    0x28(%rcx),%r8
    d0ca:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    d0ce:	48 85 c9             	test   %rcx,%rcx
    d0d1:	75 ed                	jne    d0c0 <dlmalloc+0x19c0>
    d0d3:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    d0d7:	4c 8d 46 20          	lea    0x20(%rsi),%r8
    d0db:	48 85 c9             	test   %rcx,%rcx
    d0de:	75 e0                	jne    d0c0 <dlmalloc+0x19c0>
    d0e0:	4c 39 2d 91 d2 01 00 	cmp    %r13,0x1d291(%rip)        # 2a378 <_gm_+0x18>
    d0e7:	0f 87 eb ed ff ff    	ja     bed8 <dlmalloc+0x7d8>
    d0ed:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    d0f4:	00 
    d0f5:	e9 80 fe ff ff       	jmp    cf7a <dlmalloc+0x187a>
    d0fa:	4c 89 cf             	mov    %r9,%rdi
    d0fd:	4c 89 04 24          	mov    %r8,(%rsp)
    d101:	e8 da da ff ff       	call   abe0 <sbrk>
    d106:	c7 05 40 d6 01 00 00 	movl   $0x0,0x1d640(%rip)        # 2a750 <malloc_global_mutex>
    d10d:	00 00 00 
    d110:	4c 8b 04 24          	mov    (%rsp),%r8
    d114:	e9 41 e8 ff ff       	jmp    b95a <dlmalloc+0x25a>
    d119:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    d11e:	d3 c6                	rol    %cl,%esi
    d120:	21 35 3a d2 01 00    	and    %esi,0x1d23a(%rip)        # 2a360 <_gm_>
    d126:	e9 45 fc ff ff       	jmp    cd70 <dlmalloc+0x1670>
    d12b:	48 39 35 46 d2 01 00 	cmp    %rsi,0x1d246(%rip)        # 2a378 <_gm_+0x18>
    d132:	0f 87 a0 ed ff ff    	ja     bed8 <dlmalloc+0x7d8>
    d138:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
    d13c:	0f 84 26 fc ff ff    	je     cd68 <dlmalloc+0x1668>
    d142:	e9 91 ed ff ff       	jmp    bed8 <dlmalloc+0x7d8>
    d147:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    d14b:	48 85 f6             	test   %rsi,%rsi
    d14e:	0f 84 26 fe ff ff    	je     cf7a <dlmalloc+0x187a>
    d154:	4c 8d 42 20          	lea    0x20(%rdx),%r8
    d158:	e9 60 ff ff ff       	jmp    d0bd <dlmalloc+0x19bd>
    d15d:	49 89 72 20          	mov    %rsi,0x20(%r10)
    d161:	e9 51 fe ff ff       	jmp    cfb7 <dlmalloc+0x18b7>
    d166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d16d:	00 00 00 

000000000000d170 <dlfree>:
    d170:	f3 0f 1e fa          	endbr64 
    d174:	48 85 ff             	test   %rdi,%rdi
    d177:	0f 84 eb 01 00 00    	je     d368 <dlfree+0x1f8>
    d17d:	41 55                	push   %r13
    d17f:	48 8d 47 f0          	lea    -0x10(%rdi),%rax
    d183:	41 54                	push   %r12
    d185:	55                   	push   %rbp
    d186:	53                   	push   %rbx
    d187:	48 83 ec 08          	sub    $0x8,%rsp
    d18b:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
    d18f:	48 8b 0d 8a d5 01 00 	mov    0x1d58a(%rip),%rcx        # 2a720 <mparams>
    d196:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    d19a:	48 8b 5c 17 f0       	mov    -0x10(%rdi,%rdx,1),%rbx
    d19f:	48 31 cb             	xor    %rcx,%rbx
    d1a2:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
    d1a6:	0f 85 7c 02 00 00    	jne    d428 <dlfree+0x2b8>
    d1ac:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    d1b3:	0f 85 67 01 00 00    	jne    d320 <dlfree+0x1b0>
    d1b9:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d1bd:	49 39 c0             	cmp    %rax,%r8
    d1c0:	0f 87 9a 01 00 00    	ja     d360 <dlfree+0x1f0>
    d1c6:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    d1ca:	49 89 c9             	mov    %rcx,%r9
    d1cd:	41 83 e1 03          	and    $0x3,%r9d
    d1d1:	49 83 f9 01          	cmp    $0x1,%r9
    d1d5:	0f 84 85 01 00 00    	je     d360 <dlfree+0x1f0>
    d1db:	48 89 ca             	mov    %rcx,%rdx
    d1de:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    d1e2:	83 e1 01             	and    $0x1,%ecx
    d1e5:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
    d1e9:	0f 84 c1 00 00 00    	je     d2b0 <dlfree+0x140>
    d1ef:	48 39 f0             	cmp    %rsi,%rax
    d1f2:	0f 83 68 01 00 00    	jae    d360 <dlfree+0x1f0>
    d1f8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    d1fc:	f6 c1 01             	test   $0x1,%cl
    d1ff:	0f 84 5b 01 00 00    	je     d360 <dlfree+0x1f0>
    d205:	f6 c1 02             	test   $0x2,%cl
    d208:	0f 85 62 01 00 00    	jne    d370 <dlfree+0x200>
    d20e:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    d212:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    d216:	0f 84 7c 06 00 00    	je     d898 <dlfree+0x728>
    d21c:	49 39 f3             	cmp    %rsi,%r11
    d21f:	0f 84 9b 07 00 00    	je     d9c0 <dlfree+0x850>
    d225:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    d229:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
    d22d:	48 89 cd             	mov    %rcx,%rbp
    d230:	48 01 ca             	add    %rcx,%rdx
    d233:	48 c1 ed 03          	shr    $0x3,%rbp
    d237:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    d23e:	0f 87 94 03 00 00    	ja     d5d8 <dlfree+0x468>
    d244:	44 8d 54 2d 00       	lea    0x0(%rbp,%rbp,1),%r10d
    d249:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    d24d:	4a 8d 4c d3 48       	lea    0x48(%rbx,%r10,8),%rcx
    d252:	4c 39 c9             	cmp    %r9,%rcx
    d255:	0f 85 4a 05 00 00    	jne    d7a5 <dlfree+0x635>
    d25b:	4c 39 cf             	cmp    %r9,%rdi
    d25e:	0f 85 62 05 00 00    	jne    d7c6 <dlfree+0x656>
    d264:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    d269:	89 e9                	mov    %ebp,%ecx
    d26b:	d3 c6                	rol    %cl,%esi
    d26d:	21 33                	and    %esi,(%rbx)
    d26f:	90                   	nop
    d270:	48 89 d1             	mov    %rdx,%rcx
    d273:	48 83 c9 01          	or     $0x1,%rcx
    d277:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d27b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    d27f:	4c 39 d8             	cmp    %r11,%rax
    d282:	0f 85 ff 00 00 00    	jne    d387 <dlfree+0x217>
    d288:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    d28c:	0f 1f 40 00          	nopl   0x0(%rax)
    d290:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    d297:	0f 85 39 01 00 00    	jne    d3d6 <dlfree+0x266>
    d29d:	48 83 c4 08          	add    $0x8,%rsp
    d2a1:	5b                   	pop    %rbx
    d2a2:	5d                   	pop    %rbp
    d2a3:	41 5c                	pop    %r12
    d2a5:	41 5d                	pop    %r13
    d2a7:	c3                   	ret    
    d2a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d2af:	00 
    d2b0:	4d 85 c9             	test   %r9,%r9
    d2b3:	74 db                	je     d290 <dlfree+0x120>
    d2b5:	4c 8b 4f f0          	mov    -0x10(%rdi),%r9
    d2b9:	4c 29 c8             	sub    %r9,%rax
    d2bc:	4c 01 ca             	add    %r9,%rdx
    d2bf:	49 39 c0             	cmp    %rax,%r8
    d2c2:	0f 87 98 00 00 00    	ja     d360 <dlfree+0x1f0>
    d2c8:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    d2cc:	0f 84 ce 03 00 00    	je     d6a0 <dlfree+0x530>
    d2d2:	4c 89 c9             	mov    %r9,%rcx
    d2d5:	48 8b 78 18          	mov    0x18(%rax),%rdi
    d2d9:	48 c1 e9 03          	shr    $0x3,%rcx
    d2dd:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    d2e4:	0f 87 26 02 00 00    	ja     d510 <dlfree+0x3a0>
    d2ea:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    d2ee:	4c 8b 48 10          	mov    0x10(%rax),%r9
    d2f2:	4e 8d 54 d3 48       	lea    0x48(%rbx,%r10,8),%r10
    d2f7:	4d 39 ca             	cmp    %r9,%r10
    d2fa:	0f 85 ed 04 00 00    	jne    d7ed <dlfree+0x67d>
    d300:	4c 39 cf             	cmp    %r9,%rdi
    d303:	0f 85 05 05 00 00    	jne    d80e <dlfree+0x69e>
    d309:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    d30e:	d3 c7                	rol    %cl,%edi
    d310:	21 3b                	and    %edi,(%rbx)
    d312:	e9 d8 fe ff ff       	jmp    d1ef <dlfree+0x7f>
    d317:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d31e:	00 00 
    d320:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
    d327:	ba 01 00 00 00       	mov    $0x1,%edx
    d32c:	87 11                	xchg   %edx,(%rcx)
    d32e:	85 d2                	test   %edx,%edx
    d330:	0f 84 83 fe ff ff    	je     d1b9 <dlfree+0x49>
    d336:	be 01 00 00 00       	mov    $0x1,%esi
    d33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d340:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
    d346:	85 d2                	test   %edx,%edx
    d348:	75 f6                	jne    d340 <dlfree+0x1d0>
    d34a:	89 f2                	mov    %esi,%edx
    d34c:	87 11                	xchg   %edx,(%rcx)
    d34e:	85 d2                	test   %edx,%edx
    d350:	75 ee                	jne    d340 <dlfree+0x1d0>
    d352:	e9 62 fe ff ff       	jmp    d1b9 <dlfree+0x49>
    d357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d35e:	00 00 
    d360:	e8 2f 34 01 00       	call   20794 <abort>
    d365:	0f 1f 00             	nopl   (%rax)
    d368:	c3                   	ret    
    d369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d370:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    d374:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    d378:	48 89 d1             	mov    %rdx,%rcx
    d37b:	48 83 c9 01          	or     $0x1,%rcx
    d37f:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d383:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    d387:	48 89 d1             	mov    %rdx,%rcx
    d38a:	48 c1 e9 03          	shr    $0x3,%rcx
    d38e:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    d395:	77 59                	ja     d3f0 <dlfree+0x280>
    d397:	8d 14 09             	lea    (%rcx,%rcx,1),%edx
    d39a:	8b 3b                	mov    (%rbx),%edi
    d39c:	48 8d 74 d3 48       	lea    0x48(%rbx,%rdx,8),%rsi
    d3a1:	ba 01 00 00 00       	mov    $0x1,%edx
    d3a6:	d3 e2                	shl    %cl,%edx
    d3a8:	85 d7                	test   %edx,%edi
    d3aa:	0f 84 88 04 00 00    	je     d838 <dlfree+0x6c8>
    d3b0:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    d3b4:	49 39 d0             	cmp    %rdx,%r8
    d3b7:	77 6f                	ja     d428 <dlfree+0x2b8>
    d3b9:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d3bd:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d3c1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d3c5:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d3c9:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    d3d0:	0f 84 c7 fe ff ff    	je     d29d <dlfree+0x12d>
    d3d6:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    d3dd:	00 00 00 
    d3e0:	48 83 c4 08          	add    $0x8,%rsp
    d3e4:	5b                   	pop    %rbx
    d3e5:	5d                   	pop    %rbp
    d3e6:	41 5c                	pop    %r12
    d3e8:	41 5d                	pop    %r13
    d3ea:	c3                   	ret    
    d3eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d3f0:	48 89 d6             	mov    %rdx,%rsi
    d3f3:	48 c1 ee 08          	shr    $0x8,%rsi
    d3f7:	89 f1                	mov    %esi,%ecx
    d3f9:	85 f6                	test   %esi,%esi
    d3fb:	74 33                	je     d430 <dlfree+0x2c0>
    d3fd:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    d403:	0f 86 cf 02 00 00    	jbe    d6d8 <dlfree+0x568>
    d409:	be 00 00 00 80       	mov    $0x80000000,%esi
    d40e:	41 ba 50 03 00 00    	mov    $0x350,%r10d
    d414:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d419:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    d41f:	eb 1d                	jmp    d43e <dlfree+0x2ce>
    d421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d428:	e8 67 33 01 00       	call   20794 <abort>
    d42d:	0f 1f 00             	nopl   (%rax)
    d430:	be 01 00 00 00       	mov    $0x1,%esi
    d435:	41 ba 58 02 00 00    	mov    $0x258,%r10d
    d43b:	41 89 c9             	mov    %ecx,%r9d
    d43e:	8b 7b 04             	mov    0x4(%rbx),%edi
    d441:	89 48 38             	mov    %ecx,0x38(%rax)
    d444:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    d44b:	00 
    d44c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    d453:	00 
    d454:	85 fe                	test   %edi,%esi
    d456:	0f 84 ec 03 00 00    	je     d848 <dlfree+0x6d8>
    d45c:	4a 8b b4 cb 58 02 00 	mov    0x258(%rbx,%r9,8),%rsi
    d463:	00 
    d464:	48 89 d7             	mov    %rdx,%rdi
    d467:	83 f9 1f             	cmp    $0x1f,%ecx
    d46a:	74 32                	je     d49e <dlfree+0x32e>
    d46c:	d1 e9                	shr    %ecx
    d46e:	bf 39 00 00 00       	mov    $0x39,%edi
    d473:	29 cf                	sub    %ecx,%edi
    d475:	89 f9                	mov    %edi,%ecx
    d477:	48 89 d7             	mov    %rdx,%rdi
    d47a:	48 d3 e7             	shl    %cl,%rdi
    d47d:	eb 1f                	jmp    d49e <dlfree+0x32e>
    d47f:	90                   	nop
    d480:	48 89 f9             	mov    %rdi,%rcx
    d483:	48 01 ff             	add    %rdi,%rdi
    d486:	48 c1 e9 3f          	shr    $0x3f,%rcx
    d48a:	48 83 c1 04          	add    $0x4,%rcx
    d48e:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    d492:	4d 85 c9             	test   %r9,%r9
    d495:	0f 84 d5 03 00 00    	je     d870 <dlfree+0x700>
    d49b:	4c 89 ce             	mov    %r9,%rsi
    d49e:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    d4a2:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    d4a6:	48 39 d1             	cmp    %rdx,%rcx
    d4a9:	75 d5                	jne    d480 <dlfree+0x310>
    d4ab:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    d4af:	49 39 f0             	cmp    %rsi,%r8
    d4b2:	0f 87 70 ff ff ff    	ja     d428 <dlfree+0x2b8>
    d4b8:	49 39 d0             	cmp    %rdx,%r8
    d4bb:	0f 87 67 ff ff ff    	ja     d428 <dlfree+0x2b8>
    d4c1:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d4c5:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d4c9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d4cd:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d4d1:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    d4d8:	00 
    d4d9:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    d4de:	0f 85 ac fd ff ff    	jne    d290 <dlfree+0x120>
    d4e4:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    d4eb:	48 85 c0             	test   %rax,%rax
    d4ee:	74 09                	je     d4f9 <dlfree+0x389>
    d4f0:	48 8b 40 10          	mov    0x10(%rax),%rax
    d4f4:	48 85 c0             	test   %rax,%rax
    d4f7:	75 f7                	jne    d4f0 <dlfree+0x380>
    d4f9:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    d500:	ff 
    d501:	e9 8a fd ff ff       	jmp    d290 <dlfree+0x120>
    d506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d50d:	00 00 00 
    d510:	4c 8b 58 30          	mov    0x30(%rax),%r11
    d514:	48 39 c7             	cmp    %rax,%rdi
    d517:	0f 84 f6 01 00 00    	je     d713 <dlfree+0x5a3>
    d51d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    d521:	49 39 c8             	cmp    %rcx,%r8
    d524:	0f 87 fe fe ff ff    	ja     d428 <dlfree+0x2b8>
    d52a:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    d52e:	0f 85 f4 fe ff ff    	jne    d428 <dlfree+0x2b8>
    d534:	48 39 47 10          	cmp    %rax,0x10(%rdi)
    d538:	0f 85 ea fe ff ff    	jne    d428 <dlfree+0x2b8>
    d53e:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    d542:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    d546:	4d 85 db             	test   %r11,%r11
    d549:	0f 84 a0 fc ff ff    	je     d1ef <dlfree+0x7f>
    d54f:	44 8b 48 38          	mov    0x38(%rax),%r9d
    d553:	4c 89 c9             	mov    %r9,%rcx
    d556:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    d55a:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
    d561:	0f 84 79 04 00 00    	je     d9e0 <dlfree+0x870>
    d567:	4d 39 d8             	cmp    %r11,%r8
    d56a:	0f 87 b8 fe ff ff    	ja     d428 <dlfree+0x2b8>
    d570:	49 39 43 20          	cmp    %rax,0x20(%r11)
    d574:	0f 84 b9 04 00 00    	je     da33 <dlfree+0x8c3>
    d57a:	49 89 7b 28          	mov    %rdi,0x28(%r11)
    d57e:	48 85 ff             	test   %rdi,%rdi
    d581:	0f 84 68 fc ff ff    	je     d1ef <dlfree+0x7f>
    d587:	49 39 f8             	cmp    %rdi,%r8
    d58a:	0f 87 98 fe ff ff    	ja     d428 <dlfree+0x2b8>
    d590:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d594:	4c 89 5f 30          	mov    %r11,0x30(%rdi)
    d598:	48 85 c9             	test   %rcx,%rcx
    d59b:	74 11                	je     d5ae <dlfree+0x43e>
    d59d:	49 39 c8             	cmp    %rcx,%r8
    d5a0:	0f 87 82 fe ff ff    	ja     d428 <dlfree+0x2b8>
    d5a6:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    d5aa:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    d5ae:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d5b2:	48 85 c9             	test   %rcx,%rcx
    d5b5:	0f 84 34 fc ff ff    	je     d1ef <dlfree+0x7f>
    d5bb:	49 39 c8             	cmp    %rcx,%r8
    d5be:	0f 87 64 fe ff ff    	ja     d428 <dlfree+0x2b8>
    d5c4:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    d5c8:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    d5cc:	e9 1e fc ff ff       	jmp    d1ef <dlfree+0x7f>
    d5d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d5d8:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    d5dc:	48 39 f7             	cmp    %rsi,%rdi
    d5df:	0f 84 78 01 00 00    	je     d75d <dlfree+0x5ed>
    d5e5:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    d5e9:	49 39 c8             	cmp    %rcx,%r8
    d5ec:	0f 87 36 fe ff ff    	ja     d428 <dlfree+0x2b8>
    d5f2:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    d5f6:	0f 85 2c fe ff ff    	jne    d428 <dlfree+0x2b8>
    d5fc:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    d600:	0f 85 22 fe ff ff    	jne    d428 <dlfree+0x2b8>
    d606:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    d60a:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    d60e:	48 85 ed             	test   %rbp,%rbp
    d611:	0f 84 59 fc ff ff    	je     d270 <dlfree+0x100>
    d617:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    d61b:	4c 89 c9             	mov    %r9,%rcx
    d61e:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    d622:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    d629:	0f 84 e5 03 00 00    	je     da14 <dlfree+0x8a4>
    d62f:	49 39 e8             	cmp    %rbp,%r8
    d632:	0f 87 f0 fd ff ff    	ja     d428 <dlfree+0x2b8>
    d638:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    d63c:	0f 84 fa 03 00 00    	je     da3c <dlfree+0x8cc>
    d642:	48 89 7d 28          	mov    %rdi,0x28(%rbp)
    d646:	48 85 ff             	test   %rdi,%rdi
    d649:	0f 84 21 fc ff ff    	je     d270 <dlfree+0x100>
    d64f:	49 39 f8             	cmp    %rdi,%r8
    d652:	0f 87 d0 fd ff ff    	ja     d428 <dlfree+0x2b8>
    d658:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    d65c:	48 89 6f 30          	mov    %rbp,0x30(%rdi)
    d660:	48 85 c9             	test   %rcx,%rcx
    d663:	74 11                	je     d676 <dlfree+0x506>
    d665:	49 39 c8             	cmp    %rcx,%r8
    d668:	0f 87 ba fd ff ff    	ja     d428 <dlfree+0x2b8>
    d66e:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    d672:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    d676:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    d67a:	48 85 c9             	test   %rcx,%rcx
    d67d:	0f 84 ed fb ff ff    	je     d270 <dlfree+0x100>
    d683:	49 39 c8             	cmp    %rcx,%r8
    d686:	0f 87 9c fd ff ff    	ja     d428 <dlfree+0x2b8>
    d68c:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    d690:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    d694:	e9 d7 fb ff ff       	jmp    d270 <dlfree+0x100>
    d699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d6a0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    d6a4:	48 89 cf             	mov    %rcx,%rdi
    d6a7:	83 e7 03             	and    $0x3,%edi
    d6aa:	48 83 ff 03          	cmp    $0x3,%rdi
    d6ae:	0f 85 3b fb ff ff    	jne    d1ef <dlfree+0x7f>
    d6b4:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    d6b8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    d6bc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    d6c0:	48 89 d1             	mov    %rdx,%rcx
    d6c3:	48 83 c9 01          	or     $0x1,%rcx
    d6c7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d6cb:	48 89 16             	mov    %rdx,(%rsi)
    d6ce:	e9 bd fb ff ff       	jmp    d290 <dlfree+0x120>
    d6d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d6d8:	0f bd f6             	bsr    %esi,%esi
    d6db:	b9 26 00 00 00       	mov    $0x26,%ecx
    d6e0:	48 89 d7             	mov    %rdx,%rdi
    d6e3:	83 f6 1f             	xor    $0x1f,%esi
    d6e6:	29 f1                	sub    %esi,%ecx
    d6e8:	48 d3 ef             	shr    %cl,%rdi
    d6eb:	48 89 f9             	mov    %rdi,%rcx
    d6ee:	bf 1f 00 00 00       	mov    $0x1f,%edi
    d6f3:	83 e1 01             	and    $0x1,%ecx
    d6f6:	29 f7                	sub    %esi,%edi
    d6f8:	be 01 00 00 00       	mov    $0x1,%esi
    d6fd:	44 8d 0c 79          	lea    (%rcx,%rdi,2),%r9d
    d701:	4c 89 c9             	mov    %r9,%rcx
    d704:	4e 8d 14 cd 58 02 00 	lea    0x258(,%r9,8),%r10
    d70b:	00 
    d70c:	d3 e6                	shl    %cl,%esi
    d70e:	e9 2b fd ff ff       	jmp    d43e <dlfree+0x2ce>
    d713:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d717:	4c 8d 48 28          	lea    0x28(%rax),%r9
    d71b:	48 85 c9             	test   %rcx,%rcx
    d71e:	0f 84 21 03 00 00    	je     da45 <dlfree+0x8d5>
    d724:	0f 1f 40 00          	nopl   0x0(%rax)
    d728:	4d 89 ca             	mov    %r9,%r10
    d72b:	48 89 cf             	mov    %rcx,%rdi
    d72e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    d732:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    d736:	48 85 c9             	test   %rcx,%rcx
    d739:	75 ed                	jne    d728 <dlfree+0x5b8>
    d73b:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    d73f:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    d743:	48 85 c9             	test   %rcx,%rcx
    d746:	75 e0                	jne    d728 <dlfree+0x5b8>
    d748:	4d 39 d0             	cmp    %r10,%r8
    d74b:	0f 87 d7 fc ff ff    	ja     d428 <dlfree+0x2b8>
    d751:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    d758:	e9 e9 fd ff ff       	jmp    d546 <dlfree+0x3d6>
    d75d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    d761:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    d765:	48 85 c9             	test   %rcx,%rcx
    d768:	0f 84 e9 02 00 00    	je     da57 <dlfree+0x8e7>
    d76e:	66 90                	xchg   %ax,%ax
    d770:	4d 89 ca             	mov    %r9,%r10
    d773:	48 89 cf             	mov    %rcx,%rdi
    d776:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    d77a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    d77e:	48 85 c9             	test   %rcx,%rcx
    d781:	75 ed                	jne    d770 <dlfree+0x600>
    d783:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    d787:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    d78b:	48 85 c9             	test   %rcx,%rcx
    d78e:	75 e0                	jne    d770 <dlfree+0x600>
    d790:	4d 39 d0             	cmp    %r10,%r8
    d793:	0f 87 8f fc ff ff    	ja     d428 <dlfree+0x2b8>
    d799:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    d7a0:	e9 69 fe ff ff       	jmp    d60e <dlfree+0x49e>
    d7a5:	4d 39 c8             	cmp    %r9,%r8
    d7a8:	0f 87 7a fc ff ff    	ja     d428 <dlfree+0x2b8>
    d7ae:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    d7b2:	0f 85 70 fc ff ff    	jne    d428 <dlfree+0x2b8>
    d7b8:	4c 39 cf             	cmp    %r9,%rdi
    d7bb:	0f 84 a3 fa ff ff    	je     d264 <dlfree+0xf4>
    d7c1:	48 39 f9             	cmp    %rdi,%rcx
    d7c4:	74 1a                	je     d7e0 <dlfree+0x670>
    d7c6:	49 39 f8             	cmp    %rdi,%r8
    d7c9:	0f 87 59 fc ff ff    	ja     d428 <dlfree+0x2b8>
    d7cf:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    d7d3:	0f 85 4f fc ff ff    	jne    d428 <dlfree+0x2b8>
    d7d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d7e0:	49 89 79 18          	mov    %rdi,0x18(%r9)
    d7e4:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    d7e8:	e9 83 fa ff ff       	jmp    d270 <dlfree+0x100>
    d7ed:	4d 39 c8             	cmp    %r9,%r8
    d7f0:	0f 87 32 fc ff ff    	ja     d428 <dlfree+0x2b8>
    d7f6:	49 39 41 18          	cmp    %rax,0x18(%r9)
    d7fa:	0f 85 28 fc ff ff    	jne    d428 <dlfree+0x2b8>
    d800:	4c 39 cf             	cmp    %r9,%rdi
    d803:	0f 84 00 fb ff ff    	je     d309 <dlfree+0x199>
    d809:	49 39 fa             	cmp    %rdi,%r10
    d80c:	74 1a                	je     d828 <dlfree+0x6b8>
    d80e:	49 39 f8             	cmp    %rdi,%r8
    d811:	0f 87 11 fc ff ff    	ja     d428 <dlfree+0x2b8>
    d817:	48 39 47 10          	cmp    %rax,0x10(%rdi)
    d81b:	0f 85 07 fc ff ff    	jne    d428 <dlfree+0x2b8>
    d821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d828:	49 89 79 18          	mov    %rdi,0x18(%r9)
    d82c:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    d830:	e9 ba f9 ff ff       	jmp    d1ef <dlfree+0x7f>
    d835:	0f 1f 00             	nopl   (%rax)
    d838:	09 fa                	or     %edi,%edx
    d83a:	89 13                	mov    %edx,(%rbx)
    d83c:	48 89 f2             	mov    %rsi,%rdx
    d83f:	e9 75 fb ff ff       	jmp    d3b9 <dlfree+0x249>
    d844:	0f 1f 40 00          	nopl   0x0(%rax)
    d848:	09 fe                	or     %edi,%esi
    d84a:	49 01 da             	add    %rbx,%r10
    d84d:	89 73 04             	mov    %esi,0x4(%rbx)
    d850:	4a 89 84 cb 58 02 00 	mov    %rax,0x258(%rbx,%r9,8)
    d857:	00 
    d858:	4c 89 50 30          	mov    %r10,0x30(%rax)
    d85c:	48 89 40 18          	mov    %rax,0x18(%rax)
    d860:	48 89 40 10          	mov    %rax,0x10(%rax)
    d864:	e9 70 fc ff ff       	jmp    d4d9 <dlfree+0x369>
    d869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d870:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    d874:	49 39 d0             	cmp    %rdx,%r8
    d877:	0f 87 ab fb ff ff    	ja     d428 <dlfree+0x2b8>
    d87d:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    d881:	48 89 70 30          	mov    %rsi,0x30(%rax)
    d885:	48 89 40 18          	mov    %rax,0x18(%rax)
    d889:	48 89 40 10          	mov    %rax,0x10(%rax)
    d88d:	e9 47 fc ff ff       	jmp    d4d9 <dlfree+0x369>
    d892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d898:	48 03 53 10          	add    0x10(%rbx),%rdx
    d89c:	48 89 43 28          	mov    %rax,0x28(%rbx)
    d8a0:	48 89 d1             	mov    %rdx,%rcx
    d8a3:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    d8a7:	48 83 c9 01          	or     $0x1,%rcx
    d8ab:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d8af:	4c 39 d8             	cmp    %r11,%rax
    d8b2:	0f 84 47 01 00 00    	je     d9ff <dlfree+0x88f>
    d8b8:	48 3b 53 30          	cmp    0x30(%rbx),%rdx
    d8bc:	0f 86 ce f9 ff ff    	jbe    d290 <dlfree+0x120>
    d8c2:	48 83 3d 56 ce 01 00 	cmpq   $0x0,0x1ce56(%rip)        # 2a720 <mparams>
    d8c9:	00 
    d8ca:	0f 84 99 01 00 00    	je     da69 <dlfree+0x8f9>
    d8d0:	48 85 c0             	test   %rax,%rax
    d8d3:	0f 84 b7 f9 ff ff    	je     d290 <dlfree+0x120>
    d8d9:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    d8dd:	48 83 f9 50          	cmp    $0x50,%rcx
    d8e1:	0f 86 a6 00 00 00    	jbe    d98d <dlfree+0x81d>
    d8e7:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    d8ee:	66 90                	xchg   %ax,%ax
    d8f0:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    d8f4:	48 39 d0             	cmp    %rdx,%rax
    d8f7:	72 09                	jb     d902 <dlfree+0x792>
    d8f9:	48 03 55 08          	add    0x8(%rbp),%rdx
    d8fd:	48 39 d0             	cmp    %rdx,%rax
    d900:	72 09                	jb     d90b <dlfree+0x79b>
    d902:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    d906:	48 85 ed             	test   %rbp,%rbp
    d909:	75 e5                	jne    d8f0 <dlfree+0x780>
    d90b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    d90f:	75 7c                	jne    d98d <dlfree+0x81d>
    d911:	48 8b 35 18 ce 01 00 	mov    0x1ce18(%rip),%rsi        # 2a730 <mparams+0x10>
    d918:	31 d2                	xor    %edx,%edx
    d91a:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    d91f:	48 f7 f6             	div    %rsi
    d922:	48 83 e8 01          	sub    $0x1,%rax
    d926:	48 0f af c6          	imul   %rsi,%rax
    d92a:	49 89 c4             	mov    %rax,%r12
    d92d:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d934:	ff ff 7f 
    d937:	49 39 c4             	cmp    %rax,%r12
    d93a:	76 0d                	jbe    d949 <dlfree+0x7d9>
    d93c:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    d943:	00 00 80 
    d946:	49 29 f4             	sub    %rsi,%r12
    d949:	b8 01 00 00 00       	mov    $0x1,%eax
    d94e:	87 05 fc cd 01 00    	xchg   %eax,0x1cdfc(%rip)        # 2a750 <malloc_global_mutex>
    d954:	48 8d 15 f5 cd 01 00 	lea    0x1cdf5(%rip),%rdx        # 2a750 <malloc_global_mutex>
    d95b:	b9 01 00 00 00       	mov    $0x1,%ecx
    d960:	85 c0                	test   %eax,%eax
    d962:	75 40                	jne    d9a4 <dlfree+0x834>
    d964:	31 ff                	xor    %edi,%edi
    d966:	e8 75 d2 ff ff       	call   abe0 <sbrk>
    d96b:	49 89 c5             	mov    %rax,%r13
    d96e:	48 8b 45 08          	mov    0x8(%rbp),%rax
    d972:	48 03 45 00          	add    0x0(%rbp),%rax
    d976:	49 39 c5             	cmp    %rax,%r13
    d979:	0f 84 5c 01 00 00    	je     dadb <dlfree+0x96b>
    d97f:	c7 05 c7 cd 01 00 00 	movl   $0x0,0x1cdc7(%rip)        # 2a750 <malloc_global_mutex>
    d986:	00 00 00 
    d989:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    d98d:	48 3b 4b 30          	cmp    0x30(%rbx),%rcx
    d991:	0f 86 f9 f8 ff ff    	jbe    d290 <dlfree+0x120>
    d997:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    d99e:	ff 
    d99f:	e9 ec f8 ff ff       	jmp    d290 <dlfree+0x120>
    d9a4:	8b 02                	mov    (%rdx),%eax
    d9a6:	85 c0                	test   %eax,%eax
    d9a8:	75 fa                	jne    d9a4 <dlfree+0x834>
    d9aa:	89 c8                	mov    %ecx,%eax
    d9ac:	87 05 9e cd 01 00    	xchg   %eax,0x1cd9e(%rip)        # 2a750 <malloc_global_mutex>
    d9b2:	85 c0                	test   %eax,%eax
    d9b4:	75 ee                	jne    d9a4 <dlfree+0x834>
    d9b6:	eb ac                	jmp    d964 <dlfree+0x7f4>
    d9b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d9bf:	00 
    d9c0:	48 03 53 08          	add    0x8(%rbx),%rdx
    d9c4:	48 89 43 20          	mov    %rax,0x20(%rbx)
    d9c8:	48 89 d1             	mov    %rdx,%rcx
    d9cb:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    d9cf:	48 83 c9 01          	or     $0x1,%rcx
    d9d3:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d9d7:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    d9db:	e9 b0 f8 ff ff       	jmp    d290 <dlfree+0x120>
    d9e0:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    d9e7:	48 85 ff             	test   %rdi,%rdi
    d9ea:	0f 85 97 fb ff ff    	jne    d587 <dlfree+0x417>
    d9f0:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    d9f5:	d3 c7                	rol    %cl,%edi
    d9f7:	21 7b 04             	and    %edi,0x4(%rbx)
    d9fa:	e9 f0 f7 ff ff       	jmp    d1ef <dlfree+0x7f>
    d9ff:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    da06:	00 
    da07:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    da0e:	00 
    da0f:	e9 a4 fe ff ff       	jmp    d8b8 <dlfree+0x748>
    da14:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    da1b:	48 85 ff             	test   %rdi,%rdi
    da1e:	0f 85 2b fc ff ff    	jne    d64f <dlfree+0x4df>
    da24:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    da29:	d3 c6                	rol    %cl,%esi
    da2b:	21 73 04             	and    %esi,0x4(%rbx)
    da2e:	e9 3d f8 ff ff       	jmp    d270 <dlfree+0x100>
    da33:	49 89 7b 20          	mov    %rdi,0x20(%r11)
    da37:	e9 42 fb ff ff       	jmp    d57e <dlfree+0x40e>
    da3c:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
    da40:	e9 01 fc ff ff       	jmp    d646 <dlfree+0x4d6>
    da45:	48 8b 48 20          	mov    0x20(%rax),%rcx
    da49:	48 85 c9             	test   %rcx,%rcx
    da4c:	74 29                	je     da77 <dlfree+0x907>
    da4e:	4c 8d 48 20          	lea    0x20(%rax),%r9
    da52:	e9 d1 fc ff ff       	jmp    d728 <dlfree+0x5b8>
    da57:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    da5b:	48 85 c9             	test   %rcx,%rcx
    da5e:	74 49                	je     daa9 <dlfree+0x939>
    da60:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    da64:	e9 07 fd ff ff       	jmp    d770 <dlfree+0x600>
    da69:	e8 62 d4 ff ff       	call   aed0 <init_mparams>
    da6e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    da72:	e9 59 fe ff ff       	jmp    d8d0 <dlfree+0x760>
    da77:	4d 85 db             	test   %r11,%r11
    da7a:	0f 84 6f f7 ff ff    	je     d1ef <dlfree+0x7f>
    da80:	8b 78 38             	mov    0x38(%rax),%edi
    da83:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    da87:	48 89 f9             	mov    %rdi,%rcx
    da8a:	31 ff                	xor    %edi,%edi
    da8c:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
    da93:	0f 85 ce fa ff ff    	jne    d567 <dlfree+0x3f7>
    da99:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    daa0:	00 00 00 00 
    daa4:	e9 47 ff ff ff       	jmp    d9f0 <dlfree+0x880>
    daa9:	48 85 ed             	test   %rbp,%rbp
    daac:	0f 84 be f7 ff ff    	je     d270 <dlfree+0x100>
    dab2:	8b 7e 38             	mov    0x38(%rsi),%edi
    dab5:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    dab9:	48 89 f9             	mov    %rdi,%rcx
    dabc:	31 ff                	xor    %edi,%edi
    dabe:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    dac5:	0f 85 64 fb ff ff    	jne    d62f <dlfree+0x4bf>
    dacb:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    dad2:	00 00 00 00 
    dad6:	e9 49 ff ff ff       	jmp    da24 <dlfree+0x8b4>
    dadb:	4c 89 e7             	mov    %r12,%rdi
    dade:	48 f7 df             	neg    %rdi
    dae1:	e8 fa d0 ff ff       	call   abe0 <sbrk>
    dae6:	31 ff                	xor    %edi,%edi
    dae8:	49 89 c4             	mov    %rax,%r12
    daeb:	e8 f0 d0 ff ff       	call   abe0 <sbrk>
    daf0:	49 83 c4 01          	add    $0x1,%r12
    daf4:	c7 05 52 cc 01 00 00 	movl   $0x0,0x1cc52(%rip)        # 2a750 <malloc_global_mutex>
    dafb:	00 00 00 
    dafe:	74 6b                	je     db6b <dlfree+0x9fb>
    db00:	49 39 c5             	cmp    %rax,%r13
    db03:	76 66                	jbe    db6b <dlfree+0x9fb>
    db05:	49 29 c5             	sub    %rax,%r13
    db08:	74 61                	je     db6b <dlfree+0x9fb>
    db0a:	48 8b 43 28          	mov    0x28(%rbx),%rax
    db0e:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    db12:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    db16:	48 89 c1             	mov    %rax,%rcx
    db19:	4c 29 ea             	sub    %r13,%rdx
    db1c:	48 8d 70 10          	lea    0x10(%rax),%rsi
    db20:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    db27:	83 e1 0f             	and    $0xf,%ecx
    db2a:	74 09                	je     db35 <dlfree+0x9c5>
    db2c:	48 f7 de             	neg    %rsi
    db2f:	48 89 f1             	mov    %rsi,%rcx
    db32:	83 e1 0f             	and    $0xf,%ecx
    db35:	48 89 d7             	mov    %rdx,%rdi
    db38:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    db3c:	48 29 cf             	sub    %rcx,%rdi
    db3f:	48 89 73 28          	mov    %rsi,0x28(%rbx)
    db43:	48 89 f9             	mov    %rdi,%rcx
    db46:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
    db4a:	48 83 c9 01          	or     $0x1,%rcx
    db4e:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    db52:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    db59:	00 00 
    db5b:	48 8b 05 de cb 01 00 	mov    0x1cbde(%rip),%rax        # 2a740 <mparams+0x20>
    db62:	48 89 43 30          	mov    %rax,0x30(%rbx)
    db66:	e9 25 f7 ff ff       	jmp    d290 <dlfree+0x120>
    db6b:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    db6f:	e9 19 fe ff ff       	jmp    d98d <dlfree+0x81d>
    db74:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    db7b:	00 00 00 
    db7e:	66 90                	xchg   %ax,%ax

000000000000db80 <calloc>:
    db80:	f3 0f 1e fa          	endbr64 
    db84:	41 55                	push   %r13
    db86:	41 54                	push   %r12
    db88:	49 89 fc             	mov    %rdi,%r12
    db8b:	48 83 ec 08          	sub    $0x8,%rsp
    db8f:	48 85 ff             	test   %rdi,%rdi
    db92:	74 2b                	je     dbbf <calloc+0x3f>
    db94:	48 89 f8             	mov    %rdi,%rax
    db97:	48 89 f9             	mov    %rdi,%rcx
    db9a:	48 09 f0             	or     %rsi,%rax
    db9d:	48 0f af ce          	imul   %rsi,%rcx
    dba1:	48 a9 00 00 ff ff    	test   $0xffffffffffff0000,%rax
    dba7:	74 47                	je     dbf0 <calloc+0x70>
    dba9:	31 d2                	xor    %edx,%edx
    dbab:	48 89 c8             	mov    %rcx,%rax
    dbae:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    dbb5:	48 f7 f7             	div    %rdi
    dbb8:	48 39 f0             	cmp    %rsi,%rax
    dbbb:	4c 0f 44 e1          	cmove  %rcx,%r12
    dbbf:	4c 89 e7             	mov    %r12,%rdi
    dbc2:	e8 39 db ff ff       	call   b700 <dlmalloc>
    dbc7:	49 89 c5             	mov    %rax,%r13
    dbca:	48 85 c0             	test   %rax,%rax
    dbcd:	74 0d                	je     dbdc <calloc+0x5c>
    dbcf:	4c 89 e2             	mov    %r12,%rdx
    dbd2:	31 f6                	xor    %esi,%esi
    dbd4:	48 89 c7             	mov    %rax,%rdi
    dbd7:	e8 b4 0d 00 00       	call   e990 <memset>
    dbdc:	48 83 c4 08          	add    $0x8,%rsp
    dbe0:	4c 89 e8             	mov    %r13,%rax
    dbe3:	41 5c                	pop    %r12
    dbe5:	41 5d                	pop    %r13
    dbe7:	c3                   	ret    
    dbe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dbef:	00 
    dbf0:	49 89 cc             	mov    %rcx,%r12
    dbf3:	eb ca                	jmp    dbbf <calloc+0x3f>
    dbf5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    dbfc:	00 00 00 
    dbff:	90                   	nop

000000000000dc00 <dlrealloc>:
    dc00:	f3 0f 1e fa          	endbr64 
    dc04:	41 57                	push   %r15
    dc06:	41 56                	push   %r14
    dc08:	41 55                	push   %r13
    dc0a:	41 54                	push   %r12
    dc0c:	55                   	push   %rbp
    dc0d:	48 89 f5             	mov    %rsi,%rbp
    dc10:	53                   	push   %rbx
    dc11:	48 83 ec 08          	sub    $0x8,%rsp
    dc15:	48 85 ff             	test   %rdi,%rdi
    dc18:	0f 84 d2 01 00 00    	je     ddf0 <dlrealloc+0x1f0>
    dc1e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    dc25:	0f 87 e5 01 00 00    	ja     de10 <dlrealloc+0x210>
    dc2b:	49 89 fc             	mov    %rdi,%r12
    dc2e:	48 85 f6             	test   %rsi,%rsi
    dc31:	0f 84 f1 01 00 00    	je     de28 <dlrealloc+0x228>
    dc37:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    dc3b:	4c 8d 77 f0          	lea    -0x10(%rdi),%r14
    dc3f:	48 8b 7f f8          	mov    -0x8(%rdi),%rdi
    dc43:	ba 20 00 00 00       	mov    $0x20,%edx
    dc48:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    dc4c:	48 83 fe 0e          	cmp    $0xe,%rsi
    dc50:	48 8b 0d c9 ca 01 00 	mov    0x1cac9(%rip),%rcx        # 2a720 <mparams>
    dc57:	48 0f 46 c2          	cmovbe %rdx,%rax
    dc5b:	48 89 fa             	mov    %rdi,%rdx
    dc5e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    dc62:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    dc66:	48 8b 1e             	mov    (%rsi),%rbx
    dc69:	48 31 cb             	xor    %rcx,%rbx
    dc6c:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
    dc70:	0f 85 92 00 00 00    	jne    dd08 <dlrealloc+0x108>
    dc76:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    dc7d:	0f 85 8d 00 00 00    	jne    dd10 <dlrealloc+0x110>
    dc83:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    dc87:	4d 39 c6             	cmp    %r8,%r14
    dc8a:	72 7c                	jb     dd08 <dlrealloc+0x108>
    dc8c:	48 89 f9             	mov    %rdi,%rcx
    dc8f:	83 e1 03             	and    $0x3,%ecx
    dc92:	48 83 f9 01          	cmp    $0x1,%rcx
    dc96:	74 70                	je     dd08 <dlrealloc+0x108>
    dc98:	49 39 f6             	cmp    %rsi,%r14
    dc9b:	73 6b                	jae    dd08 <dlrealloc+0x108>
    dc9d:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    dca1:	41 f6 c1 01          	test   $0x1,%r9b
    dca5:	74 61                	je     dd08 <dlrealloc+0x108>
    dca7:	48 85 c9             	test   %rcx,%rcx
    dcaa:	0f 84 b0 00 00 00    	je     dd60 <dlrealloc+0x160>
    dcb0:	48 39 d0             	cmp    %rdx,%rax
    dcb3:	0f 87 7f 01 00 00    	ja     de38 <dlrealloc+0x238>
    dcb9:	48 29 c2             	sub    %rax,%rdx
    dcbc:	49 89 d5             	mov    %rdx,%r13
    dcbf:	48 83 fa 1f          	cmp    $0x1f,%rdx
    dcc3:	0f 87 8f 02 00 00    	ja     df58 <dlrealloc+0x358>
    dcc9:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    dcd0:	0f 85 2a 03 00 00    	jne    e000 <dlrealloc+0x400>
    dcd6:	4d 85 f6             	test   %r14,%r14
    dcd9:	0f 84 bb 00 00 00    	je     dd9a <dlrealloc+0x19a>
    dcdf:	4d 89 e5             	mov    %r12,%r13
    dce2:	48 83 c4 08          	add    $0x8,%rsp
    dce6:	4c 89 e8             	mov    %r13,%rax
    dce9:	5b                   	pop    %rbx
    dcea:	5d                   	pop    %rbp
    dceb:	41 5c                	pop    %r12
    dced:	41 5d                	pop    %r13
    dcef:	41 5e                	pop    %r14
    dcf1:	41 5f                	pop    %r15
    dcf3:	c3                   	ret    
    dcf4:	4d 39 d8             	cmp    %r11,%r8
    dcf7:	77 0f                	ja     dd08 <dlrealloc+0x108>
    dcf9:	49 39 73 10          	cmp    %rsi,0x10(%r11)
    dcfd:	0f 84 a9 01 00 00    	je     deac <dlrealloc+0x2ac>
    dd03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dd08:	e8 87 2a 01 00       	call   20794 <abort>
    dd0d:	0f 1f 00             	nopl   (%rax)
    dd10:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
    dd17:	ba 01 00 00 00       	mov    $0x1,%edx
    dd1c:	87 11                	xchg   %edx,(%rcx)
    dd1e:	85 d2                	test   %edx,%edx
    dd20:	74 20                	je     dd42 <dlrealloc+0x142>
    dd22:	be 01 00 00 00       	mov    $0x1,%esi
    dd27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd2e:	00 00 
    dd30:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
    dd36:	85 d2                	test   %edx,%edx
    dd38:	75 f6                	jne    dd30 <dlrealloc+0x130>
    dd3a:	89 f2                	mov    %esi,%edx
    dd3c:	87 11                	xchg   %edx,(%rcx)
    dd3e:	85 d2                	test   %edx,%edx
    dd40:	75 ee                	jne    dd30 <dlrealloc+0x130>
    dd42:	49 8b 7c 24 f8       	mov    -0x8(%r12),%rdi
    dd47:	48 89 fa             	mov    %rdi,%rdx
    dd4a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    dd4e:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    dd52:	e9 2c ff ff ff       	jmp    dc83 <dlrealloc+0x83>
    dd57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd5e:	00 00 
    dd60:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    dd66:	76 1f                	jbe    dd87 <dlrealloc+0x187>
    dd68:	48 8d 48 08          	lea    0x8(%rax),%rcx
    dd6c:	48 39 d1             	cmp    %rdx,%rcx
    dd6f:	77 16                	ja     dd87 <dlrealloc+0x187>
    dd71:	48 29 c2             	sub    %rax,%rdx
    dd74:	48 8b 05 b5 c9 01 00 	mov    0x1c9b5(%rip),%rax        # 2a730 <mparams+0x10>
    dd7b:	48 01 c0             	add    %rax,%rax
    dd7e:	48 39 c2             	cmp    %rax,%rdx
    dd81:	0f 86 42 ff ff ff    	jbe    dcc9 <dlrealloc+0xc9>
    dd87:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    dd8e:	74 0a                	je     dd9a <dlrealloc+0x19a>
    dd90:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    dd97:	00 00 00 
    dd9a:	48 89 ef             	mov    %rbp,%rdi
    dd9d:	e8 5e d9 ff ff       	call   b700 <dlmalloc>
    dda2:	49 89 c5             	mov    %rax,%r13
    dda5:	48 85 c0             	test   %rax,%rax
    dda8:	0f 84 34 ff ff ff    	je     dce2 <dlrealloc+0xe2>
    ddae:	4d 8b 74 24 f8       	mov    -0x8(%r12),%r14
    ddb3:	48 89 ea             	mov    %rbp,%rdx
    ddb6:	4c 89 e6             	mov    %r12,%rsi
    ddb9:	48 89 c7             	mov    %rax,%rdi
    ddbc:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14
    ddc0:	49 83 ee 10          	sub    $0x10,%r14
    ddc4:	4c 39 f5             	cmp    %r14,%rbp
    ddc7:	49 0f 47 d6          	cmova  %r14,%rdx
    ddcb:	e8 f0 09 00 00       	call   e7c0 <memcpy>
    ddd0:	4c 89 e7             	mov    %r12,%rdi
    ddd3:	4c 89 f2             	mov    %r14,%rdx
    ddd6:	31 f6                	xor    %esi,%esi
    ddd8:	e8 b3 0b 00 00       	call   e990 <memset>
    dddd:	4c 89 e7             	mov    %r12,%rdi
    dde0:	e8 8b f3 ff ff       	call   d170 <dlfree>
    dde5:	e9 f8 fe ff ff       	jmp    dce2 <dlrealloc+0xe2>
    ddea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ddf0:	48 83 c4 08          	add    $0x8,%rsp
    ddf4:	48 89 f7             	mov    %rsi,%rdi
    ddf7:	5b                   	pop    %rbx
    ddf8:	5d                   	pop    %rbp
    ddf9:	41 5c                	pop    %r12
    ddfb:	41 5d                	pop    %r13
    ddfd:	41 5e                	pop    %r14
    ddff:	41 5f                	pop    %r15
    de01:	e9 fa d8 ff ff       	jmp    b700 <dlmalloc>
    de06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    de0d:	00 00 00 
    de10:	e8 2b 15 00 00       	call   f340 <__errno>
    de15:	45 31 ed             	xor    %r13d,%r13d
    de18:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    de1e:	e9 bf fe ff ff       	jmp    dce2 <dlrealloc+0xe2>
    de23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    de28:	e8 43 f3 ff ff       	call   d170 <dlfree>
    de2d:	45 31 ed             	xor    %r13d,%r13d
    de30:	e9 ad fe ff ff       	jmp    dce2 <dlrealloc+0xe2>
    de35:	0f 1f 00             	nopl   (%rax)
    de38:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    de3c:	0f 84 6e 01 00 00    	je     dfb0 <dlrealloc+0x3b0>
    de42:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    de46:	0f 84 a4 00 00 00    	je     def0 <dlrealloc+0x2f0>
    de4c:	41 f6 c1 02          	test   $0x2,%r9b
    de50:	0f 85 31 ff ff ff    	jne    dd87 <dlrealloc+0x187>
    de56:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    de5a:	4c 01 ca             	add    %r9,%rdx
    de5d:	48 39 d0             	cmp    %rdx,%rax
    de60:	0f 87 21 ff ff ff    	ja     dd87 <dlrealloc+0x187>
    de66:	49 89 d2             	mov    %rdx,%r10
    de69:	4c 89 c9             	mov    %r9,%rcx
    de6c:	4c 8b 5e 18          	mov    0x18(%rsi),%r11
    de70:	49 29 c2             	sub    %rax,%r10
    de73:	48 c1 e9 03          	shr    $0x3,%rcx
    de77:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    de7e:	0f 87 8b 01 00 00    	ja     e00f <dlrealloc+0x40f>
    de84:	44 8d 2c 09          	lea    (%rcx,%rcx,1),%r13d
    de88:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    de8c:	4e 8d 6c eb 48       	lea    0x48(%rbx,%r13,8),%r13
    de91:	4d 39 e9             	cmp    %r13,%r9
    de94:	0f 85 14 03 00 00    	jne    e1ae <dlrealloc+0x5ae>
    de9a:	4d 39 d9             	cmp    %r11,%r9
    de9d:	0f 84 8f 02 00 00    	je     e132 <dlrealloc+0x532>
    dea3:	4d 39 dd             	cmp    %r11,%r13
    dea6:	0f 85 48 fe ff ff    	jne    dcf4 <dlrealloc+0xf4>
    deac:	4d 89 59 18          	mov    %r11,0x18(%r9)
    deb0:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    deb4:	48 8b 35 65 c8 01 00 	mov    0x1c865(%rip),%rsi        # 2a720 <mparams>
    debb:	83 e7 01             	and    $0x1,%edi
    debe:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
    dec2:	48 31 de             	xor    %rbx,%rsi
    dec5:	49 83 fa 1f          	cmp    $0x1f,%r10
    dec9:	0f 87 2a 02 00 00    	ja     e0f9 <dlrealloc+0x4f9>
    decf:	48 09 fa             	or     %rdi,%rdx
    ded2:	48 83 ca 02          	or     $0x2,%rdx
    ded6:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
    dedb:	48 89 31             	mov    %rsi,(%rcx)
    dede:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    dee3:	e9 e1 fd ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    dee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    deef:	00 
    def0:	48 03 53 08          	add    0x8(%rbx),%rdx
    def4:	48 39 d0             	cmp    %rdx,%rax
    def7:	0f 87 8a fe ff ff    	ja     dd87 <dlrealloc+0x187>
    defd:	4c 8b 05 1c c8 01 00 	mov    0x1c81c(%rip),%r8        # 2a720 <mparams>
    df04:	48 89 d6             	mov    %rdx,%rsi
    df07:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
    df0b:	83 e7 01             	and    $0x1,%edi
    df0e:	48 29 c6             	sub    %rax,%rsi
    df11:	49 31 d8             	xor    %rbx,%r8
    df14:	48 83 fe 1f          	cmp    $0x1f,%rsi
    df18:	0f 86 b2 01 00 00    	jbe    e0d0 <dlrealloc+0x4d0>
    df1e:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    df22:	48 09 c7             	or     %rax,%rdi
    df25:	48 89 f0             	mov    %rsi,%rax
    df28:	48 83 cf 02          	or     $0x2,%rdi
    df2c:	48 83 c8 01          	or     $0x1,%rax
    df30:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
    df35:	4c 89 02             	mov    %r8,(%rdx)
    df38:	48 89 42 08          	mov    %rax,0x8(%rdx)
    df3c:	48 89 31             	mov    %rsi,(%rcx)
    df3f:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    df44:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    df48:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    df4c:	e9 78 fd ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    df51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df58:	83 e7 01             	and    $0x1,%edi
    df5b:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
    df5f:	48 83 ca 03          	or     $0x3,%rdx
    df63:	48 09 f8             	or     %rdi,%rax
    df66:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    df6a:	48 83 c8 02          	or     $0x2,%rax
    df6e:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    df73:	48 8b 05 a6 c7 01 00 	mov    0x1c7a6(%rip),%rax        # 2a720 <mparams>
    df7a:	49 89 57 08          	mov    %rdx,0x8(%r15)
    df7e:	49 8d 55 f0          	lea    -0x10(%r13),%rdx
    df82:	48 31 d8             	xor    %rbx,%rax
    df85:	49 89 07             	mov    %rax,(%r15)
    df88:	48 83 4e 08 01       	orq    $0x1,0x8(%rsi)
    df8d:	48 89 06             	mov    %rax,(%rsi)
    df90:	31 f6                	xor    %esi,%esi
    df92:	e8 f9 09 00 00       	call   e990 <memset>
    df97:	4c 89 ea             	mov    %r13,%rdx
    df9a:	4c 89 fe             	mov    %r15,%rsi
    df9d:	48 89 df             	mov    %rbx,%rdi
    dfa0:	e8 1b d0 ff ff       	call   afc0 <dispose_chunk>
    dfa5:	e9 1f fd ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    dfaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dfb0:	48 03 53 10          	add    0x10(%rbx),%rdx
    dfb4:	48 39 d0             	cmp    %rdx,%rax
    dfb7:	0f 83 ca fd ff ff    	jae    dd87 <dlrealloc+0x187>
    dfbd:	83 e7 01             	and    $0x1,%edi
    dfc0:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
    dfc4:	48 29 c2             	sub    %rax,%rdx
    dfc7:	48 09 f8             	or     %rdi,%rax
    dfca:	48 83 c8 02          	or     $0x2,%rax
    dfce:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    dfd3:	48 8b 05 46 c7 01 00 	mov    0x1c746(%rip),%rax        # 2a720 <mparams>
    dfda:	48 31 d8             	xor    %rbx,%rax
    dfdd:	48 89 01             	mov    %rax,(%rcx)
    dfe0:	48 89 d0             	mov    %rdx,%rax
    dfe3:	48 83 c8 01          	or     $0x1,%rax
    dfe7:	48 89 41 08          	mov    %rax,0x8(%rcx)
    dfeb:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
    dfef:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    dff3:	e9 d1 fc ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    dff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dfff:	00 
    e000:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    e007:	00 00 00 
    e00a:	e9 c7 fc ff ff       	jmp    dcd6 <dlrealloc+0xd6>
    e00f:	4c 8b 7e 30          	mov    0x30(%rsi),%r15
    e013:	4c 39 de             	cmp    %r11,%rsi
    e016:	0f 84 24 01 00 00    	je     e140 <dlrealloc+0x540>
    e01c:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    e020:	49 39 c8             	cmp    %rcx,%r8
    e023:	0f 87 df fc ff ff    	ja     dd08 <dlrealloc+0x108>
    e029:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    e02d:	0f 85 d5 fc ff ff    	jne    dd08 <dlrealloc+0x108>
    e033:	49 39 73 10          	cmp    %rsi,0x10(%r11)
    e037:	0f 85 cb fc ff ff    	jne    dd08 <dlrealloc+0x108>
    e03d:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    e041:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    e045:	4d 85 ff             	test   %r15,%r15
    e048:	0f 84 66 fe ff ff    	je     deb4 <dlrealloc+0x2b4>
    e04e:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    e052:	4c 89 c9             	mov    %r9,%rcx
    e055:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    e059:	49 3b b1 58 02 00 00 	cmp    0x258(%r9),%rsi
    e060:	0f 84 20 01 00 00    	je     e186 <dlrealloc+0x586>
    e066:	4d 39 f8             	cmp    %r15,%r8
    e069:	0f 87 99 fc ff ff    	ja     dd08 <dlrealloc+0x108>
    e06f:	49 3b 77 20          	cmp    0x20(%r15),%rsi
    e073:	0f 84 2c 01 00 00    	je     e1a5 <dlrealloc+0x5a5>
    e079:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    e07d:	4d 85 db             	test   %r11,%r11
    e080:	0f 84 2e fe ff ff    	je     deb4 <dlrealloc+0x2b4>
    e086:	4d 39 d8             	cmp    %r11,%r8
    e089:	0f 87 79 fc ff ff    	ja     dd08 <dlrealloc+0x108>
    e08f:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    e093:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    e097:	48 85 c9             	test   %rcx,%rcx
    e09a:	74 11                	je     e0ad <dlrealloc+0x4ad>
    e09c:	49 39 c8             	cmp    %rcx,%r8
    e09f:	0f 87 63 fc ff ff    	ja     dd08 <dlrealloc+0x108>
    e0a5:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    e0a9:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    e0ad:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    e0b1:	48 85 c9             	test   %rcx,%rcx
    e0b4:	0f 84 fa fd ff ff    	je     deb4 <dlrealloc+0x2b4>
    e0ba:	49 39 c8             	cmp    %rcx,%r8
    e0bd:	0f 87 45 fc ff ff    	ja     dd08 <dlrealloc+0x108>
    e0c3:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    e0c7:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    e0cb:	e9 e4 fd ff ff       	jmp    deb4 <dlrealloc+0x2b4>
    e0d0:	48 09 fa             	or     %rdi,%rdx
    e0d3:	48 83 ca 02          	or     $0x2,%rdx
    e0d7:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
    e0dc:	4c 89 01             	mov    %r8,(%rcx)
    e0df:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    e0e4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    e0eb:	00 
    e0ec:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    e0f3:	00 
    e0f4:	e9 d0 fb ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    e0f9:	4d 8d 04 06          	lea    (%r14,%rax,1),%r8
    e0fd:	48 09 c7             	or     %rax,%rdi
    e100:	4c 89 d0             	mov    %r10,%rax
    e103:	4c 89 d2             	mov    %r10,%rdx
    e106:	48 83 cf 02          	or     $0x2,%rdi
    e10a:	48 83 c8 03          	or     $0x3,%rax
    e10e:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
    e113:	48 89 df             	mov    %rbx,%rdi
    e116:	49 89 30             	mov    %rsi,(%r8)
    e119:	49 89 40 08          	mov    %rax,0x8(%r8)
    e11d:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    e122:	48 89 31             	mov    %rsi,(%rcx)
    e125:	4c 89 c6             	mov    %r8,%rsi
    e128:	e8 93 ce ff ff       	call   afc0 <dispose_chunk>
    e12d:	e9 97 fb ff ff       	jmp    dcc9 <dlrealloc+0xc9>
    e132:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    e137:	d3 c6                	rol    %cl,%esi
    e139:	21 33                	and    %esi,(%rbx)
    e13b:	e9 74 fd ff ff       	jmp    deb4 <dlrealloc+0x2b4>
    e140:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    e144:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    e148:	48 85 c9             	test   %rcx,%rcx
    e14b:	74 79                	je     e1c6 <dlrealloc+0x5c6>
    e14d:	0f 1f 00             	nopl   (%rax)
    e150:	4d 89 cd             	mov    %r9,%r13
    e153:	49 89 cb             	mov    %rcx,%r11
    e156:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    e15a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    e15e:	48 85 c9             	test   %rcx,%rcx
    e161:	75 ed                	jne    e150 <dlrealloc+0x550>
    e163:	49 8b 4b 20          	mov    0x20(%r11),%rcx
    e167:	4d 8d 4b 20          	lea    0x20(%r11),%r9
    e16b:	48 85 c9             	test   %rcx,%rcx
    e16e:	75 e0                	jne    e150 <dlrealloc+0x550>
    e170:	4d 39 e8             	cmp    %r13,%r8
    e173:	0f 87 8f fb ff ff    	ja     dd08 <dlrealloc+0x108>
    e179:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    e180:	00 
    e181:	e9 bf fe ff ff       	jmp    e045 <dlrealloc+0x445>
    e186:	4d 89 99 58 02 00 00 	mov    %r11,0x258(%r9)
    e18d:	4d 85 db             	test   %r11,%r11
    e190:	0f 85 f0 fe ff ff    	jne    e086 <dlrealloc+0x486>
    e196:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    e19b:	d3 c6                	rol    %cl,%esi
    e19d:	21 73 04             	and    %esi,0x4(%rbx)
    e1a0:	e9 0f fd ff ff       	jmp    deb4 <dlrealloc+0x2b4>
    e1a5:	4d 89 5f 20          	mov    %r11,0x20(%r15)
    e1a9:	e9 cf fe ff ff       	jmp    e07d <dlrealloc+0x47d>
    e1ae:	4d 39 c8             	cmp    %r9,%r8
    e1b1:	0f 87 51 fb ff ff    	ja     dd08 <dlrealloc+0x108>
    e1b7:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    e1bb:	0f 84 d9 fc ff ff    	je     de9a <dlrealloc+0x29a>
    e1c1:	e9 42 fb ff ff       	jmp    dd08 <dlrealloc+0x108>
    e1c6:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    e1ca:	48 85 c9             	test   %rcx,%rcx
    e1cd:	74 09                	je     e1d8 <dlrealloc+0x5d8>
    e1cf:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    e1d3:	e9 78 ff ff ff       	jmp    e150 <dlrealloc+0x550>
    e1d8:	4d 85 ff             	test   %r15,%r15
    e1db:	0f 84 d3 fc ff ff    	je     deb4 <dlrealloc+0x2b4>
    e1e1:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    e1e5:	45 31 db             	xor    %r11d,%r11d
    e1e8:	4c 89 c9             	mov    %r9,%rcx
    e1eb:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    e1ef:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    e1f6:	0f 85 6a fe ff ff    	jne    e066 <dlrealloc+0x466>
    e1fc:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    e203:	00 00 00 00 
    e207:	eb 8d                	jmp    e196 <dlrealloc+0x596>
    e209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e210 <strtol>:
    e210:	f3 0f 1e fa          	endbr64 
    e214:	41 57                	push   %r15
    e216:	8d 42 fe             	lea    -0x2(%rdx),%eax
    e219:	41 56                	push   %r14
    e21b:	41 55                	push   %r13
    e21d:	41 89 d5             	mov    %edx,%r13d
    e220:	41 54                	push   %r12
    e222:	55                   	push   %rbp
    e223:	53                   	push   %rbx
    e224:	48 83 ec 38          	sub    $0x38,%rsp
    e228:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    e22d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    e232:	83 f8 22             	cmp    $0x22,%eax
    e235:	76 31                	jbe    e268 <strtol+0x58>
    e237:	85 d2                	test   %edx,%edx
    e239:	74 2d                	je     e268 <strtol+0x58>
    e23b:	48 85 f6             	test   %rsi,%rsi
    e23e:	74 03                	je     e243 <strtol+0x33>
    e240:	48 89 3e             	mov    %rdi,(%rsi)
    e243:	e8 f8 10 00 00       	call   f340 <__errno>
    e248:	45 31 e4             	xor    %r12d,%r12d
    e24b:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    e251:	48 83 c4 38          	add    $0x38,%rsp
    e255:	4c 89 e0             	mov    %r12,%rax
    e258:	5b                   	pop    %rbx
    e259:	5d                   	pop    %rbp
    e25a:	41 5c                	pop    %r12
    e25c:	41 5d                	pop    %r13
    e25e:	41 5e                	pop    %r14
    e260:	41 5f                	pop    %r15
    e262:	c3                   	ret    
    e263:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e268:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    e26d:	0f 1f 00             	nopl   (%rax)
    e270:	49 89 de             	mov    %rbx,%r14
    e273:	44 0f b6 3b          	movzbl (%rbx),%r15d
    e277:	48 83 c3 01          	add    $0x1,%rbx
    e27b:	44 89 ff             	mov    %r15d,%edi
    e27e:	e8 1d 11 00 00       	call   f3a0 <isspace>
    e283:	89 c5                	mov    %eax,%ebp
    e285:	85 c0                	test   %eax,%eax
    e287:	75 e7                	jne    e270 <strtol+0x60>
    e289:	44 89 e8             	mov    %r13d,%eax
    e28c:	83 e0 ef             	and    $0xffffffef,%eax
    e28f:	41 83 ff 2d          	cmp    $0x2d,%r15d
    e293:	0f 84 df 00 00 00    	je     e378 <strtol+0x168>
    e299:	41 83 ff 2b          	cmp    $0x2b,%r15d
    e29d:	75 08                	jne    e2a7 <strtol+0x97>
    e29f:	44 0f be 3b          	movsbl (%rbx),%r15d
    e2a3:	49 8d 5e 02          	lea    0x2(%r14),%rbx
    e2a7:	85 c0                	test   %eax,%eax
    e2a9:	0f 84 e1 00 00 00    	je     e390 <strtol+0x180>
    e2af:	49 63 c5             	movslq %r13d,%rax
    e2b2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    e2b7:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    e2be:	ff ff 7f 
    e2c1:	45 31 f6             	xor    %r14d,%r14d
    e2c4:	48 99                	cqto   
    e2c6:	48 f7 7c 24 18       	idivq  0x18(%rsp)
    e2cb:	89 54 24 14          	mov    %edx,0x14(%rsp)
    e2cf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e2d4:	45 31 e4             	xor    %r12d,%r12d
    e2d7:	eb 40                	jmp    e319 <strtol+0x109>
    e2d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e2e0:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
    e2e5:	7c 10                	jl     e2f7 <strtol+0xe7>
    e2e7:	0f 85 73 01 00 00    	jne    e460 <strtol+0x250>
    e2ed:	3b 4c 24 14          	cmp    0x14(%rsp),%ecx
    e2f1:	0f 8e 69 01 00 00    	jle    e460 <strtol+0x250>
    e2f7:	e8 44 10 00 00       	call   f340 <__errno>
    e2fc:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    e301:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    e308:	00 00 80 
    e30b:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    e311:	44 0f b6 3b          	movzbl (%rbx),%r15d
    e315:	48 83 c3 01          	add    $0x1,%rbx
    e319:	44 89 ff             	mov    %r15d,%edi
    e31c:	e8 4f 10 00 00       	call   f370 <isdigit>
    e321:	41 8d 4f d0          	lea    -0x30(%r15),%ecx
    e325:	85 c0                	test   %eax,%eax
    e327:	0f 84 bb 00 00 00    	je     e3e8 <strtol+0x1d8>
    e32d:	44 39 e9             	cmp    %r13d,%ecx
    e330:	0f 8d df 00 00 00    	jge    e415 <strtol+0x205>
    e336:	83 fd ff             	cmp    $0xffffffff,%ebp
    e339:	74 d6                	je     e311 <strtol+0x101>
    e33b:	45 85 f6             	test   %r14d,%r14d
    e33e:	75 a0                	jne    e2e0 <strtol+0xd0>
    e340:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
    e345:	7f 10                	jg     e357 <strtol+0x147>
    e347:	0f 85 f3 00 00 00    	jne    e440 <strtol+0x230>
    e34d:	3b 4c 24 14          	cmp    0x14(%rsp),%ecx
    e351:	0f 8e e9 00 00 00    	jle    e440 <strtol+0x230>
    e357:	e8 e4 0f 00 00       	call   f340 <__errno>
    e35c:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    e361:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
    e368:	ff ff 7f 
    e36b:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    e371:	eb 9e                	jmp    e311 <strtol+0x101>
    e373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e378:	44 0f be 3b          	movsbl (%rbx),%r15d
    e37c:	49 83 c6 02          	add    $0x2,%r14
    e380:	85 c0                	test   %eax,%eax
    e382:	0f 85 31 01 00 00    	jne    e4b9 <strtol+0x2a9>
    e388:	4c 89 f3             	mov    %r14,%rbx
    e38b:	b8 01 00 00 00       	mov    $0x1,%eax
    e390:	41 83 ff 30          	cmp    $0x30,%r15d
    e394:	0f 84 de 00 00 00    	je     e478 <strtol+0x268>
    e39a:	45 85 ed             	test   %r13d,%r13d
    e39d:	0f 85 26 01 00 00    	jne    e4c9 <strtol+0x2b9>
    e3a3:	48 c7 44 24 18 0a 00 	movq   $0xa,0x18(%rsp)
    e3aa:	00 00 
    e3ac:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
    e3b2:	85 c0                	test   %eax,%eax
    e3b4:	0f 84 fd fe ff ff    	je     e2b7 <strtol+0xa7>
    e3ba:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    e3c1:	00 00 80 
    e3c4:	41 be 01 00 00 00    	mov    $0x1,%r14d
    e3ca:	48 99                	cqto   
    e3cc:	48 f7 7c 24 18       	idivq  0x18(%rsp)
    e3d1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e3d6:	89 d0                	mov    %edx,%eax
    e3d8:	f7 d8                	neg    %eax
    e3da:	89 44 24 14          	mov    %eax,0x14(%rsp)
    e3de:	e9 f1 fe ff ff       	jmp    e2d4 <strtol+0xc4>
    e3e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e3e8:	44 89 ff             	mov    %r15d,%edi
    e3eb:	e8 60 0f 00 00       	call   f350 <isalpha>
    e3f0:	85 c0                	test   %eax,%eax
    e3f2:	74 21                	je     e415 <strtol+0x205>
    e3f4:	44 89 ff             	mov    %r15d,%edi
    e3f7:	e8 d4 0f 00 00       	call   f3d0 <isupper>
    e3fc:	44 89 f9             	mov    %r15d,%ecx
    e3ff:	83 f8 01             	cmp    $0x1,%eax
    e402:	19 c0                	sbb    %eax,%eax
    e404:	83 e0 20             	and    $0x20,%eax
    e407:	83 c0 37             	add    $0x37,%eax
    e40a:	29 c1                	sub    %eax,%ecx
    e40c:	44 39 e9             	cmp    %r13d,%ecx
    e40f:	0f 8c 21 ff ff ff    	jl     e336 <strtol+0x126>
    e415:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    e41a:	48 85 c0             	test   %rax,%rax
    e41d:	0f 84 2e fe ff ff    	je     e251 <strtol+0x41>
    e423:	48 83 eb 01          	sub    $0x1,%rbx
    e427:	85 ed                	test   %ebp,%ebp
    e429:	48 0f 44 5c 24 20    	cmove  0x20(%rsp),%rbx
    e42f:	48 89 18             	mov    %rbx,(%rax)
    e432:	e9 1a fe ff ff       	jmp    e251 <strtol+0x41>
    e437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e43e:	00 00 
    e440:	4c 0f af 64 24 18    	imul   0x18(%rsp),%r12
    e446:	48 63 c9             	movslq %ecx,%rcx
    e449:	bd 01 00 00 00       	mov    $0x1,%ebp
    e44e:	49 01 cc             	add    %rcx,%r12
    e451:	e9 bb fe ff ff       	jmp    e311 <strtol+0x101>
    e456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e45d:	00 00 00 
    e460:	4c 0f af 64 24 18    	imul   0x18(%rsp),%r12
    e466:	48 63 c9             	movslq %ecx,%rcx
    e469:	44 89 f5             	mov    %r14d,%ebp
    e46c:	49 29 cc             	sub    %rcx,%r12
    e46f:	e9 9d fe ff ff       	jmp    e311 <strtol+0x101>
    e474:	0f 1f 40 00          	nopl   0x0(%rax)
    e478:	0f b6 13             	movzbl (%rbx),%edx
    e47b:	83 e2 df             	and    $0xffffffdf,%edx
    e47e:	80 fa 58             	cmp    $0x58,%dl
    e481:	75 1d                	jne    e4a0 <strtol+0x290>
    e483:	44 0f be 7b 01       	movsbl 0x1(%rbx),%r15d
    e488:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    e48e:	48 83 c3 02          	add    $0x2,%rbx
    e492:	48 c7 44 24 18 10 00 	movq   $0x10,0x18(%rsp)
    e499:	00 00 
    e49b:	e9 12 ff ff ff       	jmp    e3b2 <strtol+0x1a2>
    e4a0:	45 85 ed             	test   %r13d,%r13d
    e4a3:	75 24                	jne    e4c9 <strtol+0x2b9>
    e4a5:	48 c7 44 24 18 08 00 	movq   $0x8,0x18(%rsp)
    e4ac:	00 00 
    e4ae:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    e4b4:	e9 f9 fe ff ff       	jmp    e3b2 <strtol+0x1a2>
    e4b9:	49 63 c5             	movslq %r13d,%rax
    e4bc:	4c 89 f3             	mov    %r14,%rbx
    e4bf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    e4c4:	e9 f1 fe ff ff       	jmp    e3ba <strtol+0x1aa>
    e4c9:	49 63 d5             	movslq %r13d,%rdx
    e4cc:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    e4d1:	e9 dc fe ff ff       	jmp    e3b2 <strtol+0x1a2>
    e4d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e4dd:	00 00 00 

000000000000e4e0 <memcmp>:
    e4e0:	f3 0f 1e fa          	endbr64 
    e4e4:	31 c0                	xor    %eax,%eax
    e4e6:	48 85 d2             	test   %rdx,%rdx
    e4e9:	74 27                	je     e512 <memcmp+0x32>
    e4eb:	31 c9                	xor    %ecx,%ecx
    e4ed:	eb 0a                	jmp    e4f9 <memcmp+0x19>
    e4ef:	90                   	nop
    e4f0:	48 83 c1 01          	add    $0x1,%rcx
    e4f4:	48 39 ca             	cmp    %rcx,%rdx
    e4f7:	74 17                	je     e510 <memcmp+0x30>
    e4f9:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
    e4fd:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    e502:	44 38 c0             	cmp    %r8b,%al
    e505:	74 e9                	je     e4f0 <memcmp+0x10>
    e507:	44 29 c0             	sub    %r8d,%eax
    e50a:	c3                   	ret    
    e50b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e510:	31 c0                	xor    %eax,%eax
    e512:	c3                   	ret    
    e513:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e51a:	00 00 00 
    e51d:	0f 1f 00             	nopl   (%rax)

000000000000e520 <__memcpy.part.0>:
    e520:	48 89 f0             	mov    %rsi,%rax
    e523:	48 09 f8             	or     %rdi,%rax
    e526:	a8 07                	test   $0x7,%al
    e528:	74 46                	je     e570 <__memcpy.part.0+0x50>
    e52a:	48 89 f0             	mov    %rsi,%rax
    e52d:	48 31 f8             	xor    %rdi,%rax
    e530:	a8 07                	test   $0x7,%al
    e532:	75 0a                	jne    e53e <__memcpy.part.0+0x1e>
    e534:	48 83 fa 07          	cmp    $0x7,%rdx
    e538:	0f 87 92 00 00 00    	ja     e5d0 <__memcpy.part.0+0xb0>
    e53e:	45 31 c9             	xor    %r9d,%r9d
    e541:	45 31 c0             	xor    %r8d,%r8d
    e544:	45 31 d2             	xor    %r10d,%r10d
    e547:	31 c0                	xor    %eax,%eax
    e549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e550:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
    e554:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
    e557:	48 83 c0 01          	add    $0x1,%rax
    e55b:	48 39 c2             	cmp    %rax,%rdx
    e55e:	75 f0                	jne    e550 <__memcpy.part.0+0x30>
    e560:	48 01 d6             	add    %rdx,%rsi
    e563:	48 01 d7             	add    %rdx,%rdi
    e566:	4c 89 d2             	mov    %r10,%rdx
    e569:	eb 13                	jmp    e57e <__memcpy.part.0+0x5e>
    e56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e570:	49 89 d0             	mov    %rdx,%r8
    e573:	49 89 d1             	mov    %rdx,%r9
    e576:	49 c1 e8 03          	shr    $0x3,%r8
    e57a:	41 83 e1 07          	and    $0x7,%r9d
    e57e:	48 83 fa 07          	cmp    $0x7,%rdx
    e582:	76 27                	jbe    e5ab <__memcpy.part.0+0x8b>
    e584:	31 c0                	xor    %eax,%eax
    e586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e58d:	00 00 00 
    e590:	48 8b 14 c6          	mov    (%rsi,%rax,8),%rdx
    e594:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    e598:	48 83 c0 01          	add    $0x1,%rax
    e59c:	49 39 c0             	cmp    %rax,%r8
    e59f:	75 ef                	jne    e590 <__memcpy.part.0+0x70>
    e5a1:	49 c1 e0 03          	shl    $0x3,%r8
    e5a5:	4c 01 c6             	add    %r8,%rsi
    e5a8:	4c 01 c7             	add    %r8,%rdi
    e5ab:	4d 85 c9             	test   %r9,%r9
    e5ae:	74 18                	je     e5c8 <__memcpy.part.0+0xa8>
    e5b0:	31 c0                	xor    %eax,%eax
    e5b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e5b8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    e5bc:	88 14 07             	mov    %dl,(%rdi,%rax,1)
    e5bf:	48 83 c0 01          	add    $0x1,%rax
    e5c3:	49 39 c1             	cmp    %rax,%r9
    e5c6:	75 f0                	jne    e5b8 <__memcpy.part.0+0x98>
    e5c8:	c3                   	ret    
    e5c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e5d0:	48 89 f0             	mov    %rsi,%rax
    e5d3:	83 e0 07             	and    $0x7,%eax
    e5d6:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
    e5db:	ba 08 00 00 00       	mov    $0x8,%edx
    e5e0:	4d 89 d0             	mov    %r10,%r8
    e5e3:	4d 89 d1             	mov    %r10,%r9
    e5e6:	48 29 c2             	sub    %rax,%rdx
    e5e9:	49 c1 e8 03          	shr    $0x3,%r8
    e5ed:	41 83 e1 07          	and    $0x7,%r9d
    e5f1:	e9 51 ff ff ff       	jmp    e547 <__memcpy.part.0+0x27>
    e5f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e5fd:	00 00 00 

000000000000e600 <memcpy_verw.part.0>:
    e600:	41 55                	push   %r13
    e602:	41 54                	push   %r12
    e604:	49 89 d4             	mov    %rdx,%r12
    e607:	55                   	push   %rbp
    e608:	48 89 f5             	mov    %rsi,%rbp
    e60b:	53                   	push   %rbx
    e60c:	48 89 fb             	mov    %rdi,%rbx
    e60f:	48 83 ec 08          	sub    $0x8,%rsp
    e613:	48 83 fa 07          	cmp    $0x7,%rdx
    e617:	77 1e                	ja     e637 <memcpy_verw.part.0+0x37>
    e619:	eb 3e                	jmp    e659 <memcpy_verw.part.0+0x59>
    e61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e620:	49 83 ec 08          	sub    $0x8,%r12
    e624:	48 83 c5 08          	add    $0x8,%rbp
    e628:	48 83 c3 08          	add    $0x8,%rbx
    e62c:	e8 ff 52 00 00       	call   13930 <__memcpy_8a>
    e631:	49 83 fc 07          	cmp    $0x7,%r12
    e635:	76 22                	jbe    e659 <memcpy_verw.part.0+0x59>
    e637:	48 89 ee             	mov    %rbp,%rsi
    e63a:	48 89 df             	mov    %rbx,%rdi
    e63d:	f6 c3 07             	test   $0x7,%bl
    e640:	74 de                	je     e620 <memcpy_verw.part.0+0x20>
    e642:	49 83 ec 01          	sub    $0x1,%r12
    e646:	48 83 c5 01          	add    $0x1,%rbp
    e64a:	48 83 c3 01          	add    $0x1,%rbx
    e64e:	e8 bd 52 00 00       	call   13910 <__memcpy_verw>
    e653:	49 83 fc 07          	cmp    $0x7,%r12
    e657:	77 de                	ja     e637 <memcpy_verw.part.0+0x37>
    e659:	4d 85 e4             	test   %r12,%r12
    e65c:	74 29                	je     e687 <memcpy_verw.part.0+0x87>
    e65e:	45 31 ed             	xor    %r13d,%r13d
    e661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e668:	48 89 ee             	mov    %rbp,%rsi
    e66b:	48 89 df             	mov    %rbx,%rdi
    e66e:	48 83 c5 01          	add    $0x1,%rbp
    e672:	48 83 c3 01          	add    $0x1,%rbx
    e676:	e8 95 52 00 00       	call   13910 <__memcpy_verw>
    e67b:	41 8d 45 01          	lea    0x1(%r13),%eax
    e67f:	49 89 c5             	mov    %rax,%r13
    e682:	4c 39 e0             	cmp    %r12,%rax
    e685:	72 e1                	jb     e668 <memcpy_verw.part.0+0x68>
    e687:	48 83 c4 08          	add    $0x8,%rsp
    e68b:	5b                   	pop    %rbx
    e68c:	5d                   	pop    %rbp
    e68d:	41 5c                	pop    %r12
    e68f:	41 5d                	pop    %r13
    e691:	c3                   	ret    
    e692:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e699:	00 00 00 
    e69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e6a0 <copy_external_memory>:
    e6a0:	41 57                	push   %r15
    e6a2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6a6:	41 56                	push   %r14
    e6a8:	41 55                	push   %r13
    e6aa:	41 54                	push   %r12
    e6ac:	55                   	push   %rbp
    e6ad:	48 83 ec 30          	sub    $0x30,%rsp
    e6b1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e6b8:	00 00 
    e6ba:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    e6bf:	31 c0                	xor    %eax,%eax
    e6c1:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    e6c6:	48 85 d2             	test   %rdx,%rdx
    e6c9:	75 25                	jne    e6f0 <copy_external_memory+0x50>
    e6cb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    e6d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e6d7:	00 00 
    e6d9:	0f 85 b7 00 00 00    	jne    e796 <copy_external_memory+0xf6>
    e6df:	48 83 c4 30          	add    $0x30,%rsp
    e6e3:	5d                   	pop    %rbp
    e6e4:	41 5c                	pop    %r12
    e6e6:	41 5d                	pop    %r13
    e6e8:	41 5e                	pop    %r14
    e6ea:	41 5f                	pop    %r15
    e6ec:	c3                   	ret    
    e6ed:	0f 1f 00             	nopl   (%rax)
    e6f0:	41 89 cd             	mov    %ecx,%r13d
    e6f3:	89 f1                	mov    %esi,%ecx
    e6f5:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    e6fa:	49 89 d4             	mov    %rdx,%r12
    e6fd:	83 e1 07             	and    $0x7,%ecx
    e700:	49 89 ff             	mov    %rdi,%r15
    e703:	49 89 f6             	mov    %rsi,%r14
    e706:	48 89 ef             	mov    %rbp,%rdi
    e709:	89 ca                	mov    %ecx,%edx
    e70b:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    e70f:	48 29 d6             	sub    %rdx,%rsi
    e712:	48 89 14 24          	mov    %rdx,(%rsp)
    e716:	e8 15 52 00 00       	call   13930 <__memcpy_8a>
    e71b:	48 8b 14 24          	mov    (%rsp),%rdx
    e71f:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    e723:	48 01 d5             	add    %rdx,%rbp
    e726:	85 c9                	test   %ecx,%ecx
    e728:	74 2e                	je     e758 <copy_external_memory+0xb8>
    e72a:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
    e72e:	48 83 f8 08          	cmp    $0x8,%rax
    e732:	77 4c                	ja     e780 <copy_external_memory+0xe0>
    e734:	45 84 ed             	test   %r13b,%r13b
    e737:	74 24                	je     e75d <copy_external_memory+0xbd>
    e739:	49 39 ef             	cmp    %rbp,%r15
    e73c:	74 8d                	je     e6cb <copy_external_memory+0x2b>
    e73e:	4c 89 e2             	mov    %r12,%rdx
    e741:	48 89 ee             	mov    %rbp,%rsi
    e744:	4c 89 ff             	mov    %r15,%rdi
    e747:	e8 b4 fe ff ff       	call   e600 <memcpy_verw.part.0>
    e74c:	e9 7a ff ff ff       	jmp    e6cb <copy_external_memory+0x2b>
    e751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e758:	45 84 ed             	test   %r13b,%r13b
    e75b:	75 e1                	jne    e73e <copy_external_memory+0x9e>
    e75d:	49 39 ef             	cmp    %rbp,%r15
    e760:	0f 84 65 ff ff ff    	je     e6cb <copy_external_memory+0x2b>
    e766:	4c 89 e2             	mov    %r12,%rdx
    e769:	48 89 ee             	mov    %rbp,%rsi
    e76c:	4c 89 ff             	mov    %r15,%rdi
    e76f:	e8 ac fd ff ff       	call   e520 <__memcpy.part.0>
    e774:	e9 52 ff ff ff       	jmp    e6cb <copy_external_memory+0x2b>
    e779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e780:	4c 89 f6             	mov    %r14,%rsi
    e783:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    e788:	48 29 d6             	sub    %rdx,%rsi
    e78b:	48 83 c6 08          	add    $0x8,%rsi
    e78f:	e8 9c 51 00 00       	call   13930 <__memcpy_8a>
    e794:	eb 9e                	jmp    e734 <copy_external_memory+0x94>
    e796:	e8 b5 03 00 00       	call   eb50 <__stack_chk_fail>
    e79b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000e7a0 <memcpy_verw>:
    e7a0:	f3 0f 1e fa          	endbr64 
    e7a4:	41 54                	push   %r12
    e7a6:	49 89 fc             	mov    %rdi,%r12
    e7a9:	48 85 d2             	test   %rdx,%rdx
    e7ac:	74 0a                	je     e7b8 <memcpy_verw+0x18>
    e7ae:	48 39 f7             	cmp    %rsi,%rdi
    e7b1:	74 05                	je     e7b8 <memcpy_verw+0x18>
    e7b3:	e8 48 fe ff ff       	call   e600 <memcpy_verw.part.0>
    e7b8:	4c 89 e0             	mov    %r12,%rax
    e7bb:	41 5c                	pop    %r12
    e7bd:	c3                   	ret    
    e7be:	66 90                	xchg   %ax,%ax

000000000000e7c0 <memcpy>:
    e7c0:	f3 0f 1e fa          	endbr64 
    e7c4:	41 57                	push   %r15
    e7c6:	41 56                	push   %r14
    e7c8:	41 55                	push   %r13
    e7ca:	49 89 fd             	mov    %rdi,%r13
    e7cd:	41 54                	push   %r12
    e7cf:	55                   	push   %rbp
    e7d0:	53                   	push   %rbx
    e7d1:	48 83 ec 08          	sub    $0x8,%rsp
    e7d5:	48 85 d2             	test   %rdx,%rdx
    e7d8:	74 7b                	je     e855 <memcpy+0x95>
    e7da:	49 89 f6             	mov    %rsi,%r14
    e7dd:	48 39 f7             	cmp    %rsi,%rdi
    e7e0:	74 73                	je     e855 <memcpy+0x95>
    e7e2:	48 89 d6             	mov    %rdx,%rsi
    e7e5:	4c 89 f7             	mov    %r14,%rdi
    e7e8:	49 89 d4             	mov    %rdx,%r12
    e7eb:	e8 e0 96 ff ff       	call   7ed0 <sgx_is_within_enclave>
    e7f0:	4c 89 e6             	mov    %r12,%rsi
    e7f3:	4c 89 ef             	mov    %r13,%rdi
    e7f6:	89 c3                	mov    %eax,%ebx
    e7f8:	e8 d3 96 ff ff       	call   7ed0 <sgx_is_within_enclave>
    e7fd:	85 db                	test   %ebx,%ebx
    e7ff:	75 6f                	jne    e870 <memcpy+0xb0>
    e801:	45 31 ff             	xor    %r15d,%r15d
    e804:	85 c0                	test   %eax,%eax
    e806:	4c 89 ed             	mov    %r13,%rbp
    e809:	41 0f 94 c7          	sete   %r15b
    e80d:	49 83 fc 07          	cmp    $0x7,%r12
    e811:	76 31                	jbe    e844 <memcpy+0x84>
    e813:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e818:	89 e8                	mov    %ebp,%eax
    e81a:	bb 08 00 00 00       	mov    $0x8,%ebx
    e81f:	4c 89 f6             	mov    %r14,%rsi
    e822:	48 89 ef             	mov    %rbp,%rdi
    e825:	83 e0 07             	and    $0x7,%eax
    e828:	44 89 f9             	mov    %r15d,%ecx
    e82b:	29 c3                	sub    %eax,%ebx
    e82d:	48 89 da             	mov    %rbx,%rdx
    e830:	49 29 dc             	sub    %rbx,%r12
    e833:	49 01 de             	add    %rbx,%r14
    e836:	48 01 dd             	add    %rbx,%rbp
    e839:	e8 62 fe ff ff       	call   e6a0 <copy_external_memory>
    e83e:	49 83 fc 07          	cmp    $0x7,%r12
    e842:	77 d4                	ja     e818 <memcpy+0x58>
    e844:	44 89 f9             	mov    %r15d,%ecx
    e847:	4c 89 e2             	mov    %r12,%rdx
    e84a:	4c 89 f6             	mov    %r14,%rsi
    e84d:	48 89 ef             	mov    %rbp,%rdi
    e850:	e8 4b fe ff ff       	call   e6a0 <copy_external_memory>
    e855:	48 83 c4 08          	add    $0x8,%rsp
    e859:	4c 89 e8             	mov    %r13,%rax
    e85c:	5b                   	pop    %rbx
    e85d:	5d                   	pop    %rbp
    e85e:	41 5c                	pop    %r12
    e860:	41 5d                	pop    %r13
    e862:	41 5e                	pop    %r14
    e864:	41 5f                	pop    %r15
    e866:	c3                   	ret    
    e867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e86e:	00 00 
    e870:	4c 89 e2             	mov    %r12,%rdx
    e873:	4c 89 f6             	mov    %r14,%rsi
    e876:	4c 89 ef             	mov    %r13,%rdi
    e879:	85 c0                	test   %eax,%eax
    e87b:	75 0b                	jne    e888 <memcpy+0xc8>
    e87d:	e8 7e fd ff ff       	call   e600 <memcpy_verw.part.0>
    e882:	eb d1                	jmp    e855 <memcpy+0x95>
    e884:	0f 1f 40 00          	nopl   0x0(%rax)
    e888:	e8 93 fc ff ff       	call   e520 <__memcpy.part.0>
    e88d:	eb c6                	jmp    e855 <memcpy+0x95>
    e88f:	90                   	nop

000000000000e890 <memset_verw>:
    e890:	f3 0f 1e fa          	endbr64 
    e894:	41 56                	push   %r14
    e896:	41 55                	push   %r13
    e898:	49 89 fd             	mov    %rdi,%r13
    e89b:	41 54                	push   %r12
    e89d:	55                   	push   %rbp
    e89e:	53                   	push   %rbx
    e89f:	48 83 ec 20          	sub    $0x20,%rsp
    e8a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e8aa:	00 00 
    e8ac:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    e8b1:	31 c0                	xor    %eax,%eax
    e8b3:	48 85 d2             	test   %rdx,%rdx
    e8b6:	0f 84 a8 00 00 00    	je     e964 <memset_verw+0xd4>
    e8bc:	48 85 ff             	test   %rdi,%rdi
    e8bf:	0f 84 9f 00 00 00    	je     e964 <memset_verw+0xd4>
    e8c5:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    e8ca:	48 89 d5             	mov    %rdx,%rbp
    e8cd:	ba 08 00 00 00       	mov    $0x8,%edx
    e8d2:	4c 89 eb             	mov    %r13,%rbx
    e8d5:	4c 89 e7             	mov    %r12,%rdi
    e8d8:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
    e8dd:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    e8e4:	00 00 
    e8e6:	e8 55 50 00 00       	call   13940 <__memset>
    e8eb:	48 83 fd 07          	cmp    $0x7,%rbp
    e8ef:	76 4b                	jbe    e93c <memset_verw+0xac>
    e8f1:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    e8f6:	eb 21                	jmp    e919 <memset_verw+0x89>
    e8f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e8ff:	00 
    e900:	48 89 df             	mov    %rbx,%rdi
    e903:	4c 89 e6             	mov    %r12,%rsi
    e906:	48 83 ed 08          	sub    $0x8,%rbp
    e90a:	48 83 c3 08          	add    $0x8,%rbx
    e90e:	e8 1d 50 00 00       	call   13930 <__memcpy_8a>
    e913:	48 83 fd 07          	cmp    $0x7,%rbp
    e917:	76 1e                	jbe    e937 <memset_verw+0xa7>
    e919:	f6 c3 07             	test   $0x7,%bl
    e91c:	74 e2                	je     e900 <memset_verw+0x70>
    e91e:	48 89 df             	mov    %rbx,%rdi
    e921:	4c 89 f6             	mov    %r14,%rsi
    e924:	48 83 ed 01          	sub    $0x1,%rbp
    e928:	48 83 c3 01          	add    $0x1,%rbx
    e92c:	e8 df 4f 00 00       	call   13910 <__memcpy_verw>
    e931:	48 83 fd 07          	cmp    $0x7,%rbp
    e935:	77 e2                	ja     e919 <memset_verw+0x89>
    e937:	48 85 ed             	test   %rbp,%rbp
    e93a:	74 28                	je     e964 <memset_verw+0xd4>
    e93c:	45 31 e4             	xor    %r12d,%r12d
    e93f:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    e944:	0f 1f 40 00          	nopl   0x0(%rax)
    e948:	48 89 df             	mov    %rbx,%rdi
    e94b:	4c 89 f6             	mov    %r14,%rsi
    e94e:	48 83 c3 01          	add    $0x1,%rbx
    e952:	e8 b9 4f 00 00       	call   13910 <__memcpy_verw>
    e957:	41 8d 44 24 01       	lea    0x1(%r12),%eax
    e95c:	49 89 c4             	mov    %rax,%r12
    e95f:	48 39 e8             	cmp    %rbp,%rax
    e962:	72 e4                	jb     e948 <memset_verw+0xb8>
    e964:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    e969:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e970:	00 00 
    e972:	75 10                	jne    e984 <memset_verw+0xf4>
    e974:	48 83 c4 20          	add    $0x20,%rsp
    e978:	4c 89 e8             	mov    %r13,%rax
    e97b:	5b                   	pop    %rbx
    e97c:	5d                   	pop    %rbp
    e97d:	41 5c                	pop    %r12
    e97f:	41 5d                	pop    %r13
    e981:	41 5e                	pop    %r14
    e983:	c3                   	ret    
    e984:	e8 c7 01 00 00       	call   eb50 <__stack_chk_fail>
    e989:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e990 <memset>:
    e990:	f3 0f 1e fa          	endbr64 
    e994:	e9 a7 4f 00 00       	jmp    13940 <__memset>
    e999:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e9a0 <memset_s>:
    e9a0:	f3 0f 1e fa          	endbr64 
    e9a4:	41 54                	push   %r12
    e9a6:	48 85 ff             	test   %rdi,%rdi
    e9a9:	74 4d                	je     e9f8 <memset_s+0x58>
    e9ab:	49 89 f0             	mov    %rsi,%r8
    e9ae:	89 d6                	mov    %edx,%esi
    e9b0:	48 89 ca             	mov    %rcx,%rdx
    e9b3:	4c 39 c1             	cmp    %r8,%rcx
    e9b6:	76 28                	jbe    e9e0 <memset_s+0x40>
    e9b8:	48 8b 05 21 b8 01 00 	mov    0x1b821(%rip),%rax        # 2a1e0 <__memset_vp>
    e9bf:	4c 89 c2             	mov    %r8,%rdx
    e9c2:	41 bc 4b 00 00 00    	mov    $0x4b,%r12d
    e9c8:	ff d0                	call   *%rax
    e9ca:	e8 71 09 00 00       	call   f340 <__errno>
    e9cf:	44 89 20             	mov    %r12d,(%rax)
    e9d2:	44 89 e0             	mov    %r12d,%eax
    e9d5:	41 5c                	pop    %r12
    e9d7:	c3                   	ret    
    e9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e9df:	00 
    e9e0:	45 31 e4             	xor    %r12d,%r12d
    e9e3:	48 8b 05 f6 b7 01 00 	mov    0x1b7f6(%rip),%rax        # 2a1e0 <__memset_vp>
    e9ea:	ff d0                	call   *%rax
    e9ec:	44 89 e0             	mov    %r12d,%eax
    e9ef:	41 5c                	pop    %r12
    e9f1:	c3                   	ret    
    e9f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e9f8:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    e9fe:	eb ca                	jmp    e9ca <memset_s+0x2a>

000000000000ea00 <sgx_init_string_lib>:
    ea00:	f3 0f 1e fa          	endbr64 
    ea04:	31 c0                	xor    %eax,%eax
    ea06:	c3                   	ret    
    ea07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ea0e:	00 00 

000000000000ea10 <strlen>:
    ea10:	f3 0f 1e fa          	endbr64 
    ea14:	e9 87 4f 00 00       	jmp    139a0 <_libc__strlen>
    ea19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ea20 <strncpy>:
    ea20:	f3 0f 1e fa          	endbr64 
    ea24:	48 89 f8             	mov    %rdi,%rax
    ea27:	48 85 d2             	test   %rdx,%rdx
    ea2a:	74 54                	je     ea80 <strncpy+0x60>
    ea2c:	48 89 f9             	mov    %rdi,%rcx
    ea2f:	eb 0c                	jmp    ea3d <strncpy+0x1d>
    ea31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ea38:	48 85 d2             	test   %rdx,%rdx
    ea3b:	74 43                	je     ea80 <strncpy+0x60>
    ea3d:	44 0f b6 06          	movzbl (%rsi),%r8d
    ea41:	49 89 c9             	mov    %rcx,%r9
    ea44:	48 83 c6 01          	add    $0x1,%rsi
    ea48:	48 83 c1 01          	add    $0x1,%rcx
    ea4c:	49 89 d2             	mov    %rdx,%r10
    ea4f:	48 83 ea 01          	sub    $0x1,%rdx
    ea53:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)
    ea57:	45 84 c0             	test   %r8b,%r8b
    ea5a:	75 dc                	jne    ea38 <strncpy+0x18>
    ea5c:	48 85 d2             	test   %rdx,%rdx
    ea5f:	74 1f                	je     ea80 <strncpy+0x60>
    ea61:	4d 01 d1             	add    %r10,%r9
    ea64:	0f 1f 40 00          	nopl   0x0(%rax)
    ea68:	48 83 c1 01          	add    $0x1,%rcx
    ea6c:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
    ea70:	4c 39 c9             	cmp    %r9,%rcx
    ea73:	75 f3                	jne    ea68 <strncpy+0x48>
    ea75:	c3                   	ret    
    ea76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ea7d:	00 00 00 
    ea80:	c3                   	ret    
    ea81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ea88:	00 00 00 
    ea8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ea90 <strtok_r>:
    ea90:	f3 0f 1e fa          	endbr64 
    ea94:	48 85 ff             	test   %rdi,%rdi
    ea97:	74 7f                	je     eb18 <strtok_r+0x88>
    ea99:	44 0f be 0f          	movsbl (%rdi),%r9d
    ea9d:	48 8d 47 01          	lea    0x1(%rdi),%rax
    eaa1:	48 89 f1             	mov    %rsi,%rcx
    eaa4:	eb 0f                	jmp    eab5 <strtok_r+0x25>
    eaa6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eaad:	00 00 00 
    eab0:	45 39 c1             	cmp    %r8d,%r9d
    eab3:	74 4b                	je     eb00 <strtok_r+0x70>
    eab5:	44 0f be 01          	movsbl (%rcx),%r8d
    eab9:	48 83 c1 01          	add    $0x1,%rcx
    eabd:	45 85 c0             	test   %r8d,%r8d
    eac0:	75 ee                	jne    eab0 <strtok_r+0x20>
    eac2:	45 85 c9             	test   %r9d,%r9d
    eac5:	74 69                	je     eb30 <strtok_r+0xa0>
    eac7:	48 83 c0 01          	add    $0x1,%rax
    eacb:	48 89 f1             	mov    %rsi,%rcx
    eace:	44 0f b6 50 ff       	movzbl -0x1(%rax),%r10d
    ead3:	eb 08                	jmp    eadd <strtok_r+0x4d>
    ead5:	0f 1f 00             	nopl   (%rax)
    ead8:	45 85 c9             	test   %r9d,%r9d
    eadb:	74 ea                	je     eac7 <strtok_r+0x37>
    eadd:	44 0f be 09          	movsbl (%rcx),%r9d
    eae1:	48 83 c1 01          	add    $0x1,%rcx
    eae5:	45 38 ca             	cmp    %r9b,%r10b
    eae8:	75 ee                	jne    ead8 <strtok_r+0x48>
    eaea:	45 85 c9             	test   %r9d,%r9d
    eaed:	74 19                	je     eb08 <strtok_r+0x78>
    eaef:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
    eaf3:	48 89 02             	mov    %rax,(%rdx)
    eaf6:	48 89 f8             	mov    %rdi,%rax
    eaf9:	c3                   	ret    
    eafa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    eb00:	48 89 c7             	mov    %rax,%rdi
    eb03:	eb 94                	jmp    ea99 <strtok_r+0x9>
    eb05:	0f 1f 00             	nopl   (%rax)
    eb08:	31 c0                	xor    %eax,%eax
    eb0a:	48 89 02             	mov    %rax,(%rdx)
    eb0d:	48 89 f8             	mov    %rdi,%rax
    eb10:	c3                   	ret    
    eb11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb18:	48 8b 3a             	mov    (%rdx),%rdi
    eb1b:	48 85 ff             	test   %rdi,%rdi
    eb1e:	0f 85 75 ff ff ff    	jne    ea99 <strtok_r+0x9>
    eb24:	31 c0                	xor    %eax,%eax
    eb26:	c3                   	ret    
    eb27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    eb2e:	00 00 
    eb30:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    eb37:	31 c0                	xor    %eax,%eax
    eb39:	c3                   	ret    
    eb3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000eb40 <strtok>:
    eb40:	f3 0f 1e fa          	endbr64 
    eb44:	48 8d 15 0d bc 01 00 	lea    0x1bc0d(%rip),%rdx        # 2a758 <last.1608>
    eb4b:	e9 40 ff ff ff       	jmp    ea90 <strtok_r>

000000000000eb50 <__stack_chk_fail>:
    eb50:	f3 0f 1e fa          	endbr64 
    eb54:	50                   	push   %rax
    eb55:	58                   	pop    %rax
    eb56:	48 83 ec 08          	sub    $0x8,%rsp
    eb5a:	e8 35 1c 01 00       	call   20794 <abort>
    eb5f:	90                   	nop

000000000000eb60 <sgx_thread_cond_wait>:
    eb60:	f3 0f 1e fa          	endbr64 
    eb64:	41 56                	push   %r14
    eb66:	41 55                	push   %r13
    eb68:	41 54                	push   %r12
    eb6a:	55                   	push   %rbp
    eb6b:	53                   	push   %rbx
    eb6c:	48 83 ec 20          	sub    $0x20,%rsp
    eb70:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    eb77:	00 00 
    eb79:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    eb7e:	31 c0                	xor    %eax,%eax
    eb80:	48 85 ff             	test   %rdi,%rdi
    eb83:	0f 84 e7 00 00 00    	je     ec70 <sgx_thread_cond_wait+0x110>
    eb89:	49 89 f4             	mov    %rsi,%r12
    eb8c:	be 18 00 00 00       	mov    $0x18,%esi
    eb91:	48 89 fd             	mov    %rdi,%rbp
    eb94:	e8 37 93 ff ff       	call   7ed0 <sgx_is_within_enclave>
    eb99:	4d 85 e4             	test   %r12,%r12
    eb9c:	0f 84 ce 00 00 00    	je     ec70 <sgx_thread_cond_wait+0x110>
    eba2:	85 c0                	test   %eax,%eax
    eba4:	0f 84 c6 00 00 00    	je     ec70 <sgx_thread_cond_wait+0x110>
    ebaa:	be 28 00 00 00       	mov    $0x28,%esi
    ebaf:	4c 89 e7             	mov    %r12,%rdi
    ebb2:	e8 19 93 ff ff       	call   7ed0 <sgx_is_within_enclave>
    ebb7:	85 c0                	test   %eax,%eax
    ebb9:	0f 84 b1 00 00 00    	je     ec70 <sgx_thread_cond_wait+0x110>
    ebbf:	e8 49 18 01 00       	call   2040d <get_thread_data>
    ebc4:	48 89 ef             	mov    %rbp,%rdi
    ebc7:	48 89 c3             	mov    %rax,%rbx
    ebca:	e8 81 c1 ff ff       	call   ad50 <sgx_spin_lock>
    ebcf:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
    ebd4:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    ebdb:	00 
    ebdc:	0f 85 b4 00 00 00    	jne    ec96 <sgx_thread_cond_wait+0x136>
    ebe2:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    ebe6:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    ebea:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    ebef:	4c 89 e7             	mov    %r12,%rdi
    ebf2:	4c 8d 74 24 0c       	lea    0xc(%rsp),%r14
    ebf7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    ebfe:	00 00 
    ec00:	e8 1b 03 00 00       	call   ef20 <sgx_thread_mutex_unlock_lazy>
    ec05:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    ec09:	41 89 c5             	mov    %eax,%r13d
    ec0c:	85 c0                	test   %eax,%eax
    ec0e:	0f 85 c0 00 00 00    	jne    ecd4 <sgx_thread_cond_wait+0x174>
    ec14:	0f 1f 40 00          	nopl   0x0(%rax)
    ec18:	48 89 ef             	mov    %rbp,%rdi
    ec1b:	e8 a0 c1 ff ff       	call   adc0 <sgx_spin_unlock>
    ec20:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ec25:	48 85 c0             	test   %rax,%rax
    ec28:	75 7e                	jne    eca8 <sgx_thread_cond_wait+0x148>
    ec2a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    ec2e:	4c 89 f7             	mov    %r14,%rdi
    ec31:	48 8d b0 b0 02 01 00 	lea    0x102b0(%rax),%rsi
    ec38:	e8 63 59 ff ff       	call   45a0 <sgx_thread_wait_untrusted_event_ocall>
    ec3d:	48 89 ef             	mov    %rbp,%rdi
    ec40:	e8 0b c1 ff ff       	call   ad50 <sgx_spin_lock>
    ec45:	48 8b 45 08          	mov    0x8(%rbp),%rax
    ec49:	48 85 c0             	test   %rax,%rax
    ec4c:	74 10                	je     ec5e <sgx_thread_cond_wait+0xfe>
    ec4e:	66 90                	xchg   %ax,%ax
    ec50:	48 39 c3             	cmp    %rax,%rbx
    ec53:	74 c3                	je     ec18 <sgx_thread_cond_wait+0xb8>
    ec55:	48 8b 40 48          	mov    0x48(%rax),%rax
    ec59:	48 85 c0             	test   %rax,%rax
    ec5c:	75 f2                	jne    ec50 <sgx_thread_cond_wait+0xf0>
    ec5e:	48 89 ef             	mov    %rbp,%rdi
    ec61:	e8 5a c1 ff ff       	call   adc0 <sgx_spin_unlock>
    ec66:	4c 89 e7             	mov    %r12,%rdi
    ec69:	e8 42 01 00 00       	call   edb0 <sgx_thread_mutex_lock>
    ec6e:	eb 06                	jmp    ec76 <sgx_thread_cond_wait+0x116>
    ec70:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    ec76:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    ec7b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ec82:	00 00 
    ec84:	75 5d                	jne    ece3 <sgx_thread_cond_wait+0x183>
    ec86:	48 83 c4 20          	add    $0x20,%rsp
    ec8a:	44 89 e8             	mov    %r13d,%eax
    ec8d:	5b                   	pop    %rbx
    ec8e:	5d                   	pop    %rbp
    ec8f:	41 5c                	pop    %r12
    ec91:	41 5d                	pop    %r13
    ec93:	41 5e                	pop    %r14
    ec95:	c3                   	ret    
    ec96:	48 8b 45 10          	mov    0x10(%rbp),%rax
    ec9a:	48 89 58 48          	mov    %rbx,0x48(%rax)
    ec9e:	e9 43 ff ff ff       	jmp    ebe6 <sgx_thread_cond_wait+0x86>
    eca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eca8:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    ecac:	48 8b 70 10          	mov    0x10(%rax),%rsi
    ecb0:	4c 89 f7             	mov    %r14,%rdi
    ecb3:	48 8d 91 b0 02 01 00 	lea    0x102b0(%rcx),%rdx
    ecba:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    ecc1:	e8 1a 5a ff ff       	call   46e0 <sgx_thread_setwait_untrusted_events_ocall>
    ecc6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    eccd:	00 00 
    eccf:	e9 69 ff ff ff       	jmp    ec3d <sgx_thread_cond_wait+0xdd>
    ecd4:	48 89 ef             	mov    %rbp,%rdi
    ecd7:	e8 e4 c0 ff ff       	call   adc0 <sgx_spin_unlock>
    ecdc:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    ece1:	eb 93                	jmp    ec76 <sgx_thread_cond_wait+0x116>
    ece3:	e8 68 fe ff ff       	call   eb50 <__stack_chk_fail>
    ece8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ecef:	00 

000000000000ecf0 <sgx_thread_cond_signal>:
    ecf0:	f3 0f 1e fa          	endbr64 
    ecf4:	55                   	push   %rbp
    ecf5:	53                   	push   %rbx
    ecf6:	48 83 ec 18          	sub    $0x18,%rsp
    ecfa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ed01:	00 00 
    ed03:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ed08:	31 c0                	xor    %eax,%eax
    ed0a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    ed11:	00 
    ed12:	48 85 ff             	test   %rdi,%rdi
    ed15:	74 71                	je     ed88 <sgx_thread_cond_signal+0x98>
    ed17:	be 18 00 00 00       	mov    $0x18,%esi
    ed1c:	48 89 fd             	mov    %rdi,%rbp
    ed1f:	e8 ac 91 ff ff       	call   7ed0 <sgx_is_within_enclave>
    ed24:	85 c0                	test   %eax,%eax
    ed26:	74 60                	je     ed88 <sgx_thread_cond_signal+0x98>
    ed28:	48 89 ef             	mov    %rbp,%rdi
    ed2b:	e8 20 c0 ff ff       	call   ad50 <sgx_spin_lock>
    ed30:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
    ed34:	48 85 db             	test   %rbx,%rbx
    ed37:	74 57                	je     ed90 <sgx_thread_cond_signal+0xa0>
    ed39:	48 8b 43 48          	mov    0x48(%rbx),%rax
    ed3d:	48 89 45 08          	mov    %rax,0x8(%rbp)
    ed41:	48 85 c0             	test   %rax,%rax
    ed44:	75 08                	jne    ed4e <sgx_thread_cond_signal+0x5e>
    ed46:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
    ed4d:	00 
    ed4e:	48 89 ef             	mov    %rbp,%rdi
    ed51:	e8 6a c0 ff ff       	call   adc0 <sgx_spin_unlock>
    ed56:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    ed5a:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    ed5f:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    ed66:	e8 d5 58 ff ff       	call   4640 <sgx_thread_set_untrusted_event_ocall>
    ed6b:	31 c0                	xor    %eax,%eax
    ed6d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ed72:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    ed79:	00 00 
    ed7b:	75 1f                	jne    ed9c <sgx_thread_cond_signal+0xac>
    ed7d:	48 83 c4 18          	add    $0x18,%rsp
    ed81:	5b                   	pop    %rbx
    ed82:	5d                   	pop    %rbp
    ed83:	c3                   	ret    
    ed84:	0f 1f 40 00          	nopl   0x0(%rax)
    ed88:	b8 16 00 00 00       	mov    $0x16,%eax
    ed8d:	eb de                	jmp    ed6d <sgx_thread_cond_signal+0x7d>
    ed8f:	90                   	nop
    ed90:	48 89 ef             	mov    %rbp,%rdi
    ed93:	e8 28 c0 ff ff       	call   adc0 <sgx_spin_unlock>
    ed98:	31 c0                	xor    %eax,%eax
    ed9a:	eb d1                	jmp    ed6d <sgx_thread_cond_signal+0x7d>
    ed9c:	e8 af fd ff ff       	call   eb50 <__stack_chk_fail>
    eda1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eda8:	00 00 00 
    edab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000edb0 <sgx_thread_mutex_lock>:
    edb0:	f3 0f 1e fa          	endbr64 
    edb4:	41 55                	push   %r13
    edb6:	41 54                	push   %r12
    edb8:	55                   	push   %rbp
    edb9:	53                   	push   %rbx
    edba:	48 83 ec 18          	sub    $0x18,%rsp
    edbe:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    edc5:	00 00 
    edc7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    edcc:	31 c0                	xor    %eax,%eax
    edce:	48 85 ff             	test   %rdi,%rdi
    edd1:	0f 84 f3 00 00 00    	je     eeca <sgx_thread_mutex_lock+0x11a>
    edd7:	be 28 00 00 00       	mov    $0x28,%esi
    eddc:	48 89 fd             	mov    %rdi,%rbp
    eddf:	e8 ec 90 ff ff       	call   7ed0 <sgx_is_within_enclave>
    ede4:	85 c0                	test   %eax,%eax
    ede6:	0f 84 de 00 00 00    	je     eeca <sgx_thread_mutex_lock+0x11a>
    edec:	e8 1c 16 01 00       	call   2040d <get_thread_data>
    edf1:	4c 8d 6d 0c          	lea    0xc(%rbp),%r13
    edf5:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    edfa:	48 89 c3             	mov    %rax,%rbx
    edfd:	0f 1f 00             	nopl   (%rax)
    ee00:	4c 89 ef             	mov    %r13,%rdi
    ee03:	e8 48 bf ff ff       	call   ad50 <sgx_spin_lock>
    ee08:	8b 45 08             	mov    0x8(%rbp),%eax
    ee0b:	8d 50 ff             	lea    -0x1(%rax),%edx
    ee0e:	83 fa 01             	cmp    $0x1,%edx
    ee11:	0f 87 ab 00 00 00    	ja     eec2 <sgx_thread_mutex_lock+0x112>
    ee17:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    ee1b:	83 f8 02             	cmp    $0x2,%eax
    ee1e:	74 70                	je     ee90 <sgx_thread_mutex_lock+0xe0>
    ee20:	48 8b 45 18          	mov    0x18(%rbp),%rax
    ee24:	48 85 d2             	test   %rdx,%rdx
    ee27:	75 4f                	jne    ee78 <sgx_thread_mutex_lock+0xc8>
    ee29:	48 39 c3             	cmp    %rax,%rbx
    ee2c:	0f 84 d2 00 00 00    	je     ef04 <sgx_thread_mutex_lock+0x154>
    ee32:	48 85 c0             	test   %rax,%rax
    ee35:	0f 84 af 00 00 00    	je     eeea <sgx_thread_mutex_lock+0x13a>
    ee3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee40:	48 8b 40 48          	mov    0x48(%rax),%rax
    ee44:	48 85 c0             	test   %rax,%rax
    ee47:	74 67                	je     eeb0 <sgx_thread_mutex_lock+0x100>
    ee49:	48 39 c3             	cmp    %rax,%rbx
    ee4c:	75 f2                	jne    ee40 <sgx_thread_mutex_lock+0x90>
    ee4e:	4c 89 ef             	mov    %r13,%rdi
    ee51:	e8 6a bf ff ff       	call   adc0 <sgx_spin_unlock>
    ee56:	48 8b 43 10          	mov    0x10(%rbx),%rax
    ee5a:	4c 89 e7             	mov    %r12,%rdi
    ee5d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    ee64:	00 
    ee65:	48 8d b0 b0 02 01 00 	lea    0x102b0(%rax),%rsi
    ee6c:	e8 2f 57 ff ff       	call   45a0 <sgx_thread_wait_untrusted_event_ocall>
    ee71:	eb 8d                	jmp    ee00 <sgx_thread_mutex_lock+0x50>
    ee73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee78:	48 85 c0             	test   %rax,%rax
    ee7b:	75 cc                	jne    ee49 <sgx_thread_mutex_lock+0x99>
    ee7d:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    ee84:	00 
    ee85:	48 89 5d 18          	mov    %rbx,0x18(%rbp)
    ee89:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
    ee8d:	eb bf                	jmp    ee4e <sgx_thread_mutex_lock+0x9e>
    ee8f:	90                   	nop
    ee90:	48 39 d3             	cmp    %rdx,%rbx
    ee93:	75 8b                	jne    ee20 <sgx_thread_mutex_lock+0x70>
    ee95:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
    ee9a:	4c 89 ef             	mov    %r13,%rdi
    ee9d:	e8 1e bf ff ff       	call   adc0 <sgx_spin_unlock>
    eea2:	31 c0                	xor    %eax,%eax
    eea4:	eb 29                	jmp    eecf <sgx_thread_mutex_lock+0x11f>
    eea6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eead:	00 00 00 
    eeb0:	48 8b 45 20          	mov    0x20(%rbp),%rax
    eeb4:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    eebb:	00 
    eebc:	48 89 58 48          	mov    %rbx,0x48(%rax)
    eec0:	eb c7                	jmp    ee89 <sgx_thread_mutex_lock+0xd9>
    eec2:	4c 89 ef             	mov    %r13,%rdi
    eec5:	e8 f6 be ff ff       	call   adc0 <sgx_spin_unlock>
    eeca:	b8 16 00 00 00       	mov    $0x16,%eax
    eecf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    eed4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    eedb:	00 00 
    eedd:	75 3c                	jne    ef1b <sgx_thread_mutex_lock+0x16b>
    eedf:	48 83 c4 18          	add    $0x18,%rsp
    eee3:	5b                   	pop    %rbx
    eee4:	5d                   	pop    %rbp
    eee5:	41 5c                	pop    %r12
    eee7:	41 5d                	pop    %r13
    eee9:	c3                   	ret    
    eeea:	48 85 db             	test   %rbx,%rbx
    eeed:	74 15                	je     ef04 <sgx_thread_mutex_lock+0x154>
    eeef:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
    eef4:	4c 89 ef             	mov    %r13,%rdi
    eef7:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    eefb:	e8 c0 be ff ff       	call   adc0 <sgx_spin_unlock>
    ef00:	31 c0                	xor    %eax,%eax
    ef02:	eb cb                	jmp    eecf <sgx_thread_mutex_lock+0x11f>
    ef04:	48 8b 43 48          	mov    0x48(%rbx),%rax
    ef08:	48 89 45 18          	mov    %rax,0x18(%rbp)
    ef0c:	48 85 c0             	test   %rax,%rax
    ef0f:	75 de                	jne    eeef <sgx_thread_mutex_lock+0x13f>
    ef11:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
    ef18:	00 
    ef19:	eb d4                	jmp    eeef <sgx_thread_mutex_lock+0x13f>
    ef1b:	e8 30 fc ff ff       	call   eb50 <__stack_chk_fail>

000000000000ef20 <sgx_thread_mutex_unlock_lazy>:
    ef20:	f3 0f 1e fa          	endbr64 
    ef24:	48 85 ff             	test   %rdi,%rdi
    ef27:	0f 84 d3 00 00 00    	je     f000 <sgx_thread_mutex_unlock_lazy+0xe0>
    ef2d:	41 55                	push   %r13
    ef2f:	41 54                	push   %r12
    ef31:	55                   	push   %rbp
    ef32:	48 89 f5             	mov    %rsi,%rbp
    ef35:	be 28 00 00 00       	mov    $0x28,%esi
    ef3a:	53                   	push   %rbx
    ef3b:	48 89 fb             	mov    %rdi,%rbx
    ef3e:	48 83 ec 08          	sub    $0x8,%rsp
    ef42:	e8 89 8f ff ff       	call   7ed0 <sgx_is_within_enclave>
    ef47:	85 c0                	test   %eax,%eax
    ef49:	74 6d                	je     efb8 <sgx_thread_mutex_unlock_lazy+0x98>
    ef4b:	e8 bd 14 01 00       	call   2040d <get_thread_data>
    ef50:	4c 8d 6b 0c          	lea    0xc(%rbx),%r13
    ef54:	4c 89 ef             	mov    %r13,%rdi
    ef57:	49 89 c4             	mov    %rax,%r12
    ef5a:	e8 f1 bd ff ff       	call   ad50 <sgx_spin_lock>
    ef5f:	8b 43 08             	mov    0x8(%rbx),%eax
    ef62:	83 e8 01             	sub    $0x1,%eax
    ef65:	83 f8 01             	cmp    $0x1,%eax
    ef68:	77 46                	ja     efb0 <sgx_thread_mutex_unlock_lazy+0x90>
    ef6a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    ef6e:	48 85 c0             	test   %rax,%rax
    ef71:	74 5d                	je     efd0 <sgx_thread_mutex_unlock_lazy+0xb0>
    ef73:	49 39 c4             	cmp    %rax,%r12
    ef76:	75 58                	jne    efd0 <sgx_thread_mutex_unlock_lazy+0xb0>
    ef78:	48 83 2b 01          	subq   $0x1,(%rbx)
    ef7c:	75 72                	jne    eff0 <sgx_thread_mutex_unlock_lazy+0xd0>
    ef7e:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    ef85:	00 
    ef86:	4c 89 ef             	mov    %r13,%rdi
    ef89:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    ef8d:	e8 2e be ff ff       	call   adc0 <sgx_spin_unlock>
    ef92:	48 85 ed             	test   %rbp,%rbp
    ef95:	74 04                	je     ef9b <sgx_thread_mutex_unlock_lazy+0x7b>
    ef97:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
    ef9b:	48 83 c4 08          	add    $0x8,%rsp
    ef9f:	31 c0                	xor    %eax,%eax
    efa1:	5b                   	pop    %rbx
    efa2:	5d                   	pop    %rbp
    efa3:	41 5c                	pop    %r12
    efa5:	41 5d                	pop    %r13
    efa7:	c3                   	ret    
    efa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efaf:	00 
    efb0:	4c 89 ef             	mov    %r13,%rdi
    efb3:	e8 08 be ff ff       	call   adc0 <sgx_spin_unlock>
    efb8:	b8 16 00 00 00       	mov    $0x16,%eax
    efbd:	48 83 c4 08          	add    $0x8,%rsp
    efc1:	5b                   	pop    %rbx
    efc2:	5d                   	pop    %rbp
    efc3:	41 5c                	pop    %r12
    efc5:	41 5d                	pop    %r13
    efc7:	c3                   	ret    
    efc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efcf:	00 
    efd0:	4c 89 ef             	mov    %r13,%rdi
    efd3:	e8 e8 bd ff ff       	call   adc0 <sgx_spin_unlock>
    efd8:	48 83 c4 08          	add    $0x8,%rsp
    efdc:	b8 01 00 00 00       	mov    $0x1,%eax
    efe1:	5b                   	pop    %rbx
    efe2:	5d                   	pop    %rbp
    efe3:	41 5c                	pop    %r12
    efe5:	41 5d                	pop    %r13
    efe7:	c3                   	ret    
    efe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    efef:	00 
    eff0:	4c 89 ef             	mov    %r13,%rdi
    eff3:	e8 c8 bd ff ff       	call   adc0 <sgx_spin_unlock>
    eff8:	31 c0                	xor    %eax,%eax
    effa:	eb c1                	jmp    efbd <sgx_thread_mutex_unlock_lazy+0x9d>
    effc:	0f 1f 40 00          	nopl   0x0(%rax)
    f000:	b8 16 00 00 00       	mov    $0x16,%eax
    f005:	c3                   	ret    
    f006:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f00d:	00 00 00 

000000000000f010 <sgx_thread_mutex_unlock>:
    f010:	f3 0f 1e fa          	endbr64 
    f014:	41 54                	push   %r12
    f016:	48 83 ec 20          	sub    $0x20,%rsp
    f01a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f021:	00 00 
    f023:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f028:	31 c0                	xor    %eax,%eax
    f02a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    f02f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f036:	00 00 
    f038:	e8 e3 fe ff ff       	call   ef20 <sgx_thread_mutex_unlock_lazy>
    f03d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    f041:	41 89 c4             	mov    %eax,%r12d
    f044:	85 c0                	test   %eax,%eax
    f046:	75 0a                	jne    f052 <sgx_thread_mutex_unlock+0x42>
    f048:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    f04d:	48 85 c0             	test   %rax,%rax
    f050:	75 1e                	jne    f070 <sgx_thread_mutex_unlock+0x60>
    f052:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f057:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f05e:	00 00 
    f060:	75 25                	jne    f087 <sgx_thread_mutex_unlock+0x77>
    f062:	48 83 c4 20          	add    $0x20,%rsp
    f066:	44 89 e0             	mov    %r12d,%eax
    f069:	41 5c                	pop    %r12
    f06b:	c3                   	ret    
    f06c:	0f 1f 40 00          	nopl   0x0(%rax)
    f070:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f074:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    f079:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    f080:	e8 bb 55 ff ff       	call   4640 <sgx_thread_set_untrusted_event_ocall>
    f085:	eb cb                	jmp    f052 <sgx_thread_mutex_unlock+0x42>
    f087:	e8 c4 fa ff ff       	call   eb50 <__stack_chk_fail>
    f08c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f090 <memcpy_s>:
    f090:	f3 0f 1e fa          	endbr64 
    f094:	41 54                	push   %r12
    f096:	45 31 e4             	xor    %r12d,%r12d
    f099:	55                   	push   %rbp
    f09a:	48 83 ec 08          	sub    $0x8,%rsp
    f09e:	48 85 c9             	test   %rcx,%rcx
    f0a1:	74 1d                	je     f0c0 <memcpy_s+0x30>
    f0a3:	48 85 ff             	test   %rdi,%rdi
    f0a6:	74 50                	je     f0f8 <memcpy_s+0x68>
    f0a8:	48 89 d5             	mov    %rdx,%rbp
    f0ab:	48 85 d2             	test   %rdx,%rdx
    f0ae:	74 20                	je     f0d0 <memcpy_s+0x40>
    f0b0:	48 39 f1             	cmp    %rsi,%rcx
    f0b3:	77 1b                	ja     f0d0 <memcpy_s+0x40>
    f0b5:	48 89 ca             	mov    %rcx,%rdx
    f0b8:	48 89 ee             	mov    %rbp,%rsi
    f0bb:	e8 00 f7 ff ff       	call   e7c0 <memcpy>
    f0c0:	48 83 c4 08          	add    $0x8,%rsp
    f0c4:	44 89 e0             	mov    %r12d,%eax
    f0c7:	5d                   	pop    %rbp
    f0c8:	41 5c                	pop    %r12
    f0ca:	c3                   	ret    
    f0cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f0d0:	48 89 f2             	mov    %rsi,%rdx
    f0d3:	31 f6                	xor    %esi,%esi
    f0d5:	e8 b6 f8 ff ff       	call   e990 <memset>
    f0da:	48 85 ed             	test   %rbp,%rbp
    f0dd:	74 19                	je     f0f8 <memcpy_s+0x68>
    f0df:	e8 5c 02 00 00       	call   f340 <__errno>
    f0e4:	41 bc 22 00 00 00    	mov    $0x22,%r12d
    f0ea:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    f0f0:	eb ce                	jmp    f0c0 <memcpy_s+0x30>
    f0f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f0f8:	e8 43 02 00 00       	call   f340 <__errno>
    f0fd:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    f103:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    f109:	eb b5                	jmp    f0c0 <memcpy_s+0x30>
    f10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000f110 <memcpy_verw_s>:
    f110:	f3 0f 1e fa          	endbr64 
    f114:	41 54                	push   %r12
    f116:	45 31 e4             	xor    %r12d,%r12d
    f119:	55                   	push   %rbp
    f11a:	48 83 ec 08          	sub    $0x8,%rsp
    f11e:	48 85 c9             	test   %rcx,%rcx
    f121:	74 1d                	je     f140 <memcpy_verw_s+0x30>
    f123:	48 85 ff             	test   %rdi,%rdi
    f126:	74 50                	je     f178 <memcpy_verw_s+0x68>
    f128:	48 89 d5             	mov    %rdx,%rbp
    f12b:	48 85 d2             	test   %rdx,%rdx
    f12e:	74 20                	je     f150 <memcpy_verw_s+0x40>
    f130:	48 39 f1             	cmp    %rsi,%rcx
    f133:	77 1b                	ja     f150 <memcpy_verw_s+0x40>
    f135:	48 89 ca             	mov    %rcx,%rdx
    f138:	48 89 ee             	mov    %rbp,%rsi
    f13b:	e8 60 f6 ff ff       	call   e7a0 <memcpy_verw>
    f140:	48 83 c4 08          	add    $0x8,%rsp
    f144:	44 89 e0             	mov    %r12d,%eax
    f147:	5d                   	pop    %rbp
    f148:	41 5c                	pop    %r12
    f14a:	c3                   	ret    
    f14b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f150:	48 89 f2             	mov    %rsi,%rdx
    f153:	31 f6                	xor    %esi,%esi
    f155:	e8 36 f7 ff ff       	call   e890 <memset_verw>
    f15a:	48 85 ed             	test   %rbp,%rbp
    f15d:	74 19                	je     f178 <memcpy_verw_s+0x68>
    f15f:	e8 dc 01 00 00       	call   f340 <__errno>
    f164:	41 bc 22 00 00 00    	mov    $0x22,%r12d
    f16a:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    f170:	eb ce                	jmp    f140 <memcpy_verw_s+0x30>
    f172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f178:	e8 c3 01 00 00       	call   f340 <__errno>
    f17d:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    f183:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    f189:	eb b5                	jmp    f140 <memcpy_verw_s+0x30>

000000000000f18b <_setjmp>:
    f18b:	f3 0f 1e fa          	endbr64 
    f18f:	50                   	push   %rax
    f190:	53                   	push   %rbx
    f191:	51                   	push   %rcx
    f192:	52                   	push   %rdx
    f193:	56                   	push   %rsi
    f194:	57                   	push   %rdi
    f195:	41 50                	push   %r8
    f197:	41 51                	push   %r9
    f199:	41 52                	push   %r10
    f19b:	41 53                	push   %r11
    f19d:	41 54                	push   %r12
    f19f:	41 55                	push   %r13
    f1a1:	41 56                	push   %r14
    f1a3:	41 57                	push   %r15
    f1a5:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
    f1ac:	e8 1f 8d ff ff       	call   7ed0 <sgx_is_within_enclave>
    f1b1:	83 f8 00             	cmp    $0x0,%eax
    f1b4:	74 60                	je     f216 <.crash>
    f1b6:	41 5f                	pop    %r15
    f1b8:	41 5e                	pop    %r14
    f1ba:	41 5d                	pop    %r13
    f1bc:	41 5c                	pop    %r12
    f1be:	41 5b                	pop    %r11
    f1c0:	41 5a                	pop    %r10
    f1c2:	41 59                	pop    %r9
    f1c4:	41 58                	pop    %r8
    f1c6:	5f                   	pop    %rdi
    f1c7:	5e                   	pop    %rsi
    f1c8:	5a                   	pop    %rdx
    f1c9:	59                   	pop    %rcx
    f1ca:	5b                   	pop    %rbx
    f1cb:	58                   	pop    %rax
    f1cc:	4c 8b 1c 24          	mov    (%rsp),%r11
    f1d0:	48 89 1f             	mov    %rbx,(%rdi)
    f1d3:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
    f1d7:	4c 89 67 10          	mov    %r12,0x10(%rdi)
    f1db:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
    f1df:	4c 89 77 20          	mov    %r14,0x20(%rdi)
    f1e3:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
    f1e7:	48 89 67 30          	mov    %rsp,0x30(%rdi)
    f1eb:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
    f1ef:	e8 27 12 01 00       	call   2041b <get_stack_guard>
    f1f4:	48 31 07             	xor    %rax,(%rdi)
    f1f7:	48 31 47 08          	xor    %rax,0x8(%rdi)
    f1fb:	48 31 47 10          	xor    %rax,0x10(%rdi)
    f1ff:	48 31 47 18          	xor    %rax,0x18(%rdi)
    f203:	48 31 47 20          	xor    %rax,0x20(%rdi)
    f207:	48 31 47 28          	xor    %rax,0x28(%rdi)
    f20b:	48 31 47 30          	xor    %rax,0x30(%rdi)
    f20f:	48 31 47 38          	xor    %rax,0x38(%rdi)
    f213:	31 c0                	xor    %eax,%eax
    f215:	c3                   	ret    

000000000000f216 <.crash>:
    f216:	0f 0b                	ud2    

000000000000f218 <_longjmp>:
    f218:	f3 0f 1e fa          	endbr64 
    f21c:	50                   	push   %rax
    f21d:	53                   	push   %rbx
    f21e:	51                   	push   %rcx
    f21f:	52                   	push   %rdx
    f220:	56                   	push   %rsi
    f221:	57                   	push   %rdi
    f222:	41 50                	push   %r8
    f224:	41 51                	push   %r9
    f226:	41 52                	push   %r10
    f228:	41 53                	push   %r11
    f22a:	41 54                	push   %r12
    f22c:	41 55                	push   %r13
    f22e:	41 56                	push   %r14
    f230:	41 57                	push   %r15
    f232:	57                   	push   %rdi
    f233:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
    f23a:	e8 91 8c ff ff       	call   7ed0 <sgx_is_within_enclave>
    f23f:	83 f8 00             	cmp    $0x0,%eax
    f242:	74 d2                	je     f216 <.crash>
    f244:	5f                   	pop    %rdi
    f245:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    f249:	e8 cd 11 01 00       	call   2041b <get_stack_guard>
    f24e:	48 31 c2             	xor    %rax,%rdx
    f251:	52                   	push   %rdx
    f252:	5f                   	pop    %rdi
    f253:	e8 f8 a9 ff ff       	call   9c50 <is_valid_sp>
    f258:	83 f8 00             	cmp    $0x0,%eax
    f25b:	74 b9                	je     f216 <.crash>
    f25d:	41 5f                	pop    %r15
    f25f:	41 5e                	pop    %r14
    f261:	41 5d                	pop    %r13
    f263:	41 5c                	pop    %r12
    f265:	41 5b                	pop    %r11
    f267:	41 5a                	pop    %r10
    f269:	41 59                	pop    %r9
    f26b:	41 58                	pop    %r8
    f26d:	5f                   	pop    %rdi
    f26e:	5e                   	pop    %rsi
    f26f:	5a                   	pop    %rdx
    f270:	59                   	pop    %rcx
    f271:	5b                   	pop    %rbx
    f272:	58                   	pop    %rax
    f273:	89 f0                	mov    %esi,%eax
    f275:	48 8b 1f             	mov    (%rdi),%rbx
    f278:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    f27c:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    f280:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    f284:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    f288:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    f28c:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    f290:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    f294:	50                   	push   %rax
    f295:	e8 81 11 01 00       	call   2041b <get_stack_guard>
    f29a:	48 31 c3             	xor    %rax,%rbx
    f29d:	48 31 c6             	xor    %rax,%rsi
    f2a0:	49 31 c4             	xor    %rax,%r12
    f2a3:	49 31 c5             	xor    %rax,%r13
    f2a6:	49 31 c6             	xor    %rax,%r14
    f2a9:	49 31 c7             	xor    %rax,%r15
    f2ac:	48 31 c2             	xor    %rax,%rdx
    f2af:	48 31 c1             	xor    %rax,%rcx
    f2b2:	58                   	pop    %rax
    f2b3:	48 89 f5             	mov    %rsi,%rbp
    f2b6:	48 89 0a             	mov    %rcx,(%rdx)
    f2b9:	48 89 d4             	mov    %rdx,%rsp
    f2bc:	85 c0                	test   %eax,%eax
    f2be:	75 02                	jne    f2c2 <_longjmp+0xaa>
    f2c0:	ff c0                	inc    %eax
    f2c2:	c3                   	ret    
    f2c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f2ca:	00 00 00 
    f2cd:	0f 1f 00             	nopl   (%rax)

000000000000f2d0 <rsrv_mem_init>:
    f2d0:	f3 0f 1e fa          	endbr64 
    f2d4:	48 85 ff             	test   %rdi,%rdi
    f2d7:	74 4f                	je     f328 <rsrv_mem_init+0x58>
    f2d9:	48 89 f0             	mov    %rsi,%rax
    f2dc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f2e2:	48 09 d0             	or     %rdx,%rax
    f2e5:	48 09 f8             	or     %rdi,%rax
    f2e8:	a9 ff 0f 00 00       	test   $0xfff,%eax
    f2ed:	74 09                	je     f2f8 <rsrv_mem_init+0x28>
    f2ef:	44 89 c0             	mov    %r8d,%eax
    f2f2:	c3                   	ret    
    f2f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f2f8:	48 8b 05 59 aa 01 00 	mov    0x1aa59(%rip),%rax        # 29d58 <rsrv_mem_base>
    f2ff:	48 f7 d0             	not    %rax
    f302:	48 39 f0             	cmp    %rsi,%rax
    f305:	72 e8                	jb     f2ef <rsrv_mem_init+0x1f>
    f307:	45 31 c0             	xor    %r8d,%r8d
    f30a:	48 89 3d 47 aa 01 00 	mov    %rdi,0x1aa47(%rip)        # 29d58 <rsrv_mem_base>
    f311:	48 89 35 38 aa 01 00 	mov    %rsi,0x1aa38(%rip)        # 29d50 <rsrv_mem_size>
    f318:	44 89 c0             	mov    %r8d,%eax
    f31b:	48 89 15 26 aa 01 00 	mov    %rdx,0x1aa26(%rip)        # 29d48 <rsrv_mem_min_size>
    f322:	c3                   	ret    
    f323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f328:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    f32e:	44 89 c0             	mov    %r8d,%eax
    f331:	c3                   	ret    
    f332:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f339:	00 00 00 
    f33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f340 <__errno>:
    f340:	f3 0f 1e fa          	endbr64 
    f344:	e9 57 a8 ff ff       	jmp    9ba0 <get_errno_addr>
    f349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f350 <isalpha>:
    f350:	f3 0f 1e fa          	endbr64 
    f354:	31 c0                	xor    %eax,%eax
    f356:	83 ff ff             	cmp    $0xffffffff,%edi
    f359:	74 13                	je     f36e <isalpha+0x1e>
    f35b:	48 8b 05 d6 ae 01 00 	mov    0x1aed6(%rip),%rax        # 2a238 <_ctype_>
    f362:	40 0f b6 ff          	movzbl %dil,%edi
    f366:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
    f36b:	83 e0 03             	and    $0x3,%eax
    f36e:	c3                   	ret    
    f36f:	90                   	nop

000000000000f370 <isdigit>:
    f370:	f3 0f 1e fa          	endbr64 
    f374:	31 c0                	xor    %eax,%eax
    f376:	83 ff ff             	cmp    $0xffffffff,%edi
    f379:	74 16                	je     f391 <isdigit+0x21>
    f37b:	48 8b 05 b6 ae 01 00 	mov    0x1aeb6(%rip),%rax        # 2a238 <_ctype_>
    f382:	40 0f b6 ff          	movzbl %dil,%edi
    f386:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
    f38b:	83 e0 04             	and    $0x4,%eax
    f38e:	0f be c0             	movsbl %al,%eax
    f391:	c3                   	ret    
    f392:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f399:	00 00 00 
    f39c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f3a0 <isspace>:
    f3a0:	f3 0f 1e fa          	endbr64 
    f3a4:	31 c0                	xor    %eax,%eax
    f3a6:	83 ff ff             	cmp    $0xffffffff,%edi
    f3a9:	74 16                	je     f3c1 <isspace+0x21>
    f3ab:	48 8b 05 86 ae 01 00 	mov    0x1ae86(%rip),%rax        # 2a238 <_ctype_>
    f3b2:	40 0f b6 ff          	movzbl %dil,%edi
    f3b6:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
    f3bb:	83 e0 08             	and    $0x8,%eax
    f3be:	0f be c0             	movsbl %al,%eax
    f3c1:	c3                   	ret    
    f3c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f3c9:	00 00 00 
    f3cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f3d0 <isupper>:
    f3d0:	f3 0f 1e fa          	endbr64 
    f3d4:	31 c0                	xor    %eax,%eax
    f3d6:	83 ff ff             	cmp    $0xffffffff,%edi
    f3d9:	74 13                	je     f3ee <isupper+0x1e>
    f3db:	48 8b 05 56 ae 01 00 	mov    0x1ae56(%rip),%rax        # 2a238 <_ctype_>
    f3e2:	40 0f b6 ff          	movzbl %dil,%edi
    f3e6:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
    f3eb:	83 e0 01             	and    $0x1,%eax
    f3ee:	c3                   	ret    
    f3ef:	90                   	nop

000000000000f3f0 <__grow_type_table>:
    f3f0:	41 56                	push   %r14
    f3f2:	ba 00 10 00 00       	mov    $0x1000,%edx
    f3f7:	41 55                	push   %r13
    f3f9:	49 89 fd             	mov    %rdi,%r13
    f3fc:	41 54                	push   %r12
    f3fe:	49 89 f4             	mov    %rsi,%r12
    f401:	55                   	push   %rbp
    f402:	53                   	push   %rbx
    f403:	8b 06                	mov    (%rsi),%eax
    f405:	8d 2c 00             	lea    (%rax,%rax,1),%ebp
    f408:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
    f40e:	0f 4c ea             	cmovl  %edx,%ebp
    f411:	48 63 fd             	movslq %ebp,%rdi
    f414:	83 f8 08             	cmp    $0x8,%eax
    f417:	74 57                	je     f470 <__grow_type_table+0x80>
    f419:	e8 e2 c2 ff ff       	call   b700 <dlmalloc>
    f41e:	48 89 c3             	mov    %rax,%rbx
    f421:	48 85 c0             	test   %rax,%rax
    f424:	74 71                	je     f497 <__grow_type_table+0xa7>
    f426:	49 63 14 24          	movslq (%r12),%rdx
    f42a:	49 8b 75 00          	mov    0x0(%r13),%rsi
    f42e:	48 89 c7             	mov    %rax,%rdi
    f431:	e8 ea 45 00 00       	call   13a20 <memmove>
    f436:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    f43a:	e8 31 dd ff ff       	call   d170 <dlfree>
    f43f:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    f443:	49 63 3c 24          	movslq (%r12),%rdi
    f447:	89 ea                	mov    %ebp,%edx
    f449:	31 f6                	xor    %esi,%esi
    f44b:	29 fa                	sub    %edi,%edx
    f44d:	48 01 df             	add    %rbx,%rdi
    f450:	48 63 d2             	movslq %edx,%rdx
    f453:	e8 38 f5 ff ff       	call   e990 <memset>
    f458:	41 89 2c 24          	mov    %ebp,(%r12)
    f45c:	31 c0                	xor    %eax,%eax
    f45e:	5b                   	pop    %rbx
    f45f:	5d                   	pop    %rbp
    f460:	41 5c                	pop    %r12
    f462:	41 5d                	pop    %r13
    f464:	41 5e                	pop    %r14
    f466:	c3                   	ret    
    f467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f46e:	00 00 
    f470:	4d 8b 75 00          	mov    0x0(%r13),%r14
    f474:	e8 87 c2 ff ff       	call   b700 <dlmalloc>
    f479:	49 89 45 00          	mov    %rax,0x0(%r13)
    f47d:	48 89 c7             	mov    %rax,%rdi
    f480:	48 85 c0             	test   %rax,%rax
    f483:	74 12                	je     f497 <__grow_type_table+0xa7>
    f485:	49 63 14 24          	movslq (%r12),%rdx
    f489:	4c 89 f6             	mov    %r14,%rsi
    f48c:	e8 8f 45 00 00       	call   13a20 <memmove>
    f491:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    f495:	eb ac                	jmp    f443 <__grow_type_table+0x53>
    f497:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    f49c:	eb c0                	jmp    f45e <__grow_type_table+0x6e>
    f49e:	66 90                	xchg   %ax,%ax

000000000000f4a0 <__find_arguments>:
    f4a0:	41 57                	push   %r15
    f4a2:	49 89 ff             	mov    %rdi,%r15
    f4a5:	41 56                	push   %r14
    f4a7:	4c 8d 35 86 24 01 00 	lea    0x12486(%rip),%r14        # 21934 <_ZZ17ecall_malloc_freeE8__func__+0x134>
    f4ae:	41 55                	push   %r13
    f4b0:	45 31 ed             	xor    %r13d,%r13d
    f4b3:	41 54                	push   %r12
    f4b5:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    f4bb:	55                   	push   %rbp
    f4bc:	53                   	push   %rbx
    f4bd:	48 83 ec 68          	sub    $0x68,%rsp
    f4c1:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    f4c6:	48 8d 5c 24 48       	lea    0x48(%rsp),%rbx
    f4cb:	31 f6                	xor    %esi,%esi
    f4cd:	48 8d 6c 24 3c       	lea    0x3c(%rsp),%rbp
    f4d2:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    f4d7:	ba 08 00 00 00       	mov    $0x8,%edx
    f4dc:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    f4e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f4e8:	00 00 
    f4ea:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f4ef:	31 c0                	xor    %eax,%eax
    f4f1:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    f4f6:	c7 44 24 38 08 00 00 	movl   $0x8,0x38(%rsp)
    f4fd:	00 
    f4fe:	48 89 c7             	mov    %rax,%rdi
    f501:	48 89 04 24          	mov    %rax,(%rsp)
    f505:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    f50a:	e8 81 f4 ff ff       	call   e990 <memset>
    f50f:	ba 08 00 00 00       	mov    $0x8,%edx
    f514:	31 f6                	xor    %esi,%esi
    f516:	48 89 df             	mov    %rbx,%rdi
    f519:	e8 72 f4 ff ff       	call   e990 <memset>
    f51e:	eb 0c                	jmp    f52c <__find_arguments+0x8c>
    f520:	48 98                	cltq   
    f522:	49 01 c7             	add    %rax,%r15
    f525:	83 7c 24 3c 25       	cmpl   $0x25,0x3c(%rsp)
    f52a:	74 74                	je     f5a0 <__find_arguments+0x100>
    f52c:	48 89 d9             	mov    %rbx,%rcx
    f52f:	ba 01 00 00 00       	mov    $0x1,%edx
    f534:	4c 89 fe             	mov    %r15,%rsi
    f537:	48 89 ef             	mov    %rbp,%rdi
    f53a:	e8 01 71 00 00       	call   16640 <mbrtowc>
    f53f:	85 c0                	test   %eax,%eax
    f541:	7f dd                	jg     f520 <__find_arguments+0x80>
    f543:	41 83 fd 07          	cmp    $0x7,%r13d
    f547:	0f 8f 33 09 00 00    	jg     fe80 <__find_arguments+0x9e0>
    f54d:	45 85 ed             	test   %r13d,%r13d
    f550:	0f 84 8b 0b 00 00    	je     100e1 <__find_arguments+0xc41>
    f556:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    f55b:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    f560:	ba 01 00 00 00       	mov    $0x1,%edx
    f565:	48 8d 0d 54 23 01 00 	lea    0x12354(%rip),%rcx        # 218c0 <_ZZ17ecall_malloc_freeE8__func__+0xc0>
    f56c:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    f571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f578:	48 63 c2             	movslq %edx,%rax
    f57b:	80 3c 07 1c          	cmpb   $0x1c,(%rdi,%rax,1)
    f57f:	0f 87 bc 05 00 00    	ja     fb41 <__find_arguments+0x6a1>
    f585:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    f58a:	48 c1 e0 04          	shl    $0x4,%rax
    f58e:	49 03 00             	add    (%r8),%rax
    f591:	4e 63 0c 89          	movslq (%rcx,%r9,4),%r9
    f595:	49 01 c9             	add    %rcx,%r9
    f598:	3e 41 ff e1          	notrack jmp *%r9
    f59c:	0f 1f 40 00          	nopl   0x0(%rax)
    f5a0:	41 0f be 07          	movsbl (%r15),%eax
    f5a4:	31 c9                	xor    %ecx,%ecx
    f5a6:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
    f5ac:	49 83 c7 01          	add    $0x1,%r15
    f5b0:	8d 50 e0             	lea    -0x20(%rax),%edx
    f5b3:	83 fa 5a             	cmp    $0x5a,%edx
    f5b6:	0f 87 64 01 00 00    	ja     f720 <__find_arguments+0x280>
    f5bc:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
    f5c0:	4c 01 f2             	add    %r14,%rdx
    f5c3:	3e ff e2             	notrack jmp *%rdx
    f5c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f5cd:	00 00 00 
    f5d0:	31 f6                	xor    %esi,%esi
    f5d2:	eb 07                	jmp    f5db <__find_arguments+0x13b>
    f5d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f5d8:	49 89 d7             	mov    %rdx,%r15
    f5db:	8d 14 b6             	lea    (%rsi,%rsi,4),%edx
    f5de:	44 89 c6             	mov    %r8d,%esi
    f5e1:	01 d2                	add    %edx,%edx
    f5e3:	29 c6                	sub    %eax,%esi
    f5e5:	39 d6                	cmp    %edx,%esi
    f5e7:	7c 27                	jl     f610 <__find_arguments+0x170>
    f5e9:	8d 74 10 d0          	lea    -0x30(%rax,%rdx,1),%esi
    f5ed:	41 0f be 07          	movsbl (%r15),%eax
    f5f1:	49 8d 57 01          	lea    0x1(%r15),%rdx
    f5f5:	8d 78 d0             	lea    -0x30(%rax),%edi
    f5f8:	83 ff 09             	cmp    $0x9,%edi
    f5fb:	0f 87 3f 08 00 00    	ja     fe40 <__find_arguments+0x9a0>
    f601:	81 fe cc cc cc 0c    	cmp    $0xccccccc,%esi
    f607:	7e cf                	jle    f5d8 <__find_arguments+0x138>
    f609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f610:	e8 2b fd ff ff       	call   f340 <__errno>
    f615:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    f61a:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    f620:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    f626:	48 3b 3c 24          	cmp    (%rsp),%rdi
    f62a:	74 0a                	je     f636 <__find_arguments+0x196>
    f62c:	48 85 ff             	test   %rdi,%rdi
    f62f:	74 05                	je     f636 <__find_arguments+0x196>
    f631:	e8 3a db ff ff       	call   d170 <dlfree>
    f636:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    f63b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f642:	00 00 
    f644:	0f 85 23 0c 00 00    	jne    1026d <__find_arguments+0xdcd>
    f64a:	48 83 c4 68          	add    $0x68,%rsp
    f64e:	44 89 e0             	mov    %r12d,%eax
    f651:	5b                   	pop    %rbx
    f652:	5d                   	pop    %rbp
    f653:	41 5c                	pop    %r12
    f655:	41 5d                	pop    %r13
    f657:	41 5e                	pop    %r14
    f659:	41 5f                	pop    %r15
    f65b:	c3                   	ret    
    f65c:	0f 1f 40 00          	nopl   0x0(%rax)
    f660:	41 0f be 07          	movsbl (%r15),%eax
    f664:	e9 43 ff ff ff       	jmp    f5ac <__find_arguments+0x10c>
    f669:	83 c9 10             	or     $0x10,%ecx
    f66c:	45 39 e5             	cmp    %r12d,%r13d
    f66f:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f673:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f677:	f6 c5 10             	test   $0x10,%ch
    f67a:	74 54                	je     f6d0 <__find_arguments+0x230>
    f67c:	41 39 c4             	cmp    %eax,%r12d
    f67f:	0f 8d 4e 04 00 00    	jge    fad3 <__find_arguments+0x633>
    f685:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f68a:	49 63 c4             	movslq %r12d,%rax
    f68d:	41 83 c4 01          	add    $0x1,%r12d
    f691:	c6 04 02 17          	movb   $0x17,(%rdx,%rax,1)
    f695:	e9 92 fe ff ff       	jmp    f52c <__find_arguments+0x8c>
    f69a:	83 c9 10             	or     $0x10,%ecx
    f69d:	45 39 e5             	cmp    %r12d,%r13d
    f6a0:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f6a4:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f6a8:	f6 c5 10             	test   $0x10,%ch
    f6ab:	0f 84 d6 00 00 00    	je     f787 <__find_arguments+0x2e7>
    f6b1:	41 39 c4             	cmp    %eax,%r12d
    f6b4:	0f 8d a6 06 00 00    	jge    fd60 <__find_arguments+0x8c0>
    f6ba:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f6bf:	49 63 c4             	movslq %r12d,%rax
    f6c2:	41 83 c4 01          	add    $0x1,%r12d
    f6c6:	c6 04 02 16          	movb   $0x16,(%rdx,%rax,1)
    f6ca:	e9 5d fe ff ff       	jmp    f52c <__find_arguments+0x8c>
    f6cf:	90                   	nop
    f6d0:	f6 c5 02             	test   $0x2,%ch
    f6d3:	75 2b                	jne    f700 <__find_arguments+0x260>
    f6d5:	f6 c5 04             	test   $0x4,%ch
    f6d8:	0f 84 12 04 00 00    	je     faf0 <__find_arguments+0x650>
    f6de:	41 39 c4             	cmp    %eax,%r12d
    f6e1:	0f 8d 91 05 00 00    	jge    fc78 <__find_arguments+0x7d8>
    f6e7:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f6ec:	49 63 c4             	movslq %r12d,%rax
    f6ef:	41 83 c4 01          	add    $0x1,%r12d
    f6f3:	c6 04 02 13          	movb   $0x13,(%rdx,%rax,1)
    f6f7:	e9 30 fe ff ff       	jmp    f52c <__find_arguments+0x8c>
    f6fc:	0f 1f 40 00          	nopl   0x0(%rax)
    f700:	41 39 c4             	cmp    %eax,%r12d
    f703:	0f 8d ae 00 00 00    	jge    f7b7 <__find_arguments+0x317>
    f709:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f70e:	49 63 c4             	movslq %r12d,%rax
    f711:	41 83 c4 01          	add    $0x1,%r12d
    f715:	c6 04 02 11          	movb   $0x11,(%rdx,%rax,1)
    f719:	e9 0e fe ff ff       	jmp    f52c <__find_arguments+0x8c>
    f71e:	66 90                	xchg   %ax,%ax
    f720:	85 c0                	test   %eax,%eax
    f722:	0f 85 04 fe ff ff    	jne    f52c <__find_arguments+0x8c>
    f728:	e9 16 fe ff ff       	jmp    f543 <__find_arguments+0xa3>
    f72d:	0f 1f 00             	nopl   (%rax)
    f730:	45 39 e5             	cmp    %r12d,%r13d
    f733:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f737:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f73b:	83 e1 08             	and    $0x8,%ecx
    f73e:	74 29                	je     f769 <__find_arguments+0x2c9>
    f740:	41 39 c4             	cmp    %eax,%r12d
    f743:	0f 8d a7 04 00 00    	jge    fbf0 <__find_arguments+0x750>
    f749:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f74e:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f753:	4d 63 e4             	movslq %r12d,%r12
    f756:	41 39 d5             	cmp    %edx,%r13d
    f759:	42 c6 04 20 0e       	movb   $0xe,(%rax,%r12,1)
    f75e:	44 0f 4c ea          	cmovl  %edx,%r13d
    f762:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f766:	41 89 d4             	mov    %edx,%r12d
    f769:	44 39 e0             	cmp    %r12d,%eax
    f76c:	0f 8e 90 06 00 00    	jle    fe02 <__find_arguments+0x962>
    f772:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f777:	49 63 c4             	movslq %r12d,%rax
    f77a:	41 83 c4 01          	add    $0x1,%r12d
    f77e:	c6 04 02 0d          	movb   $0xd,(%rdx,%rax,1)
    f782:	e9 a5 fd ff ff       	jmp    f52c <__find_arguments+0x8c>
    f787:	f6 c5 02             	test   $0x2,%ch
    f78a:	0f 85 70 ff ff ff    	jne    f700 <__find_arguments+0x260>
    f790:	f6 c5 04             	test   $0x4,%ch
    f793:	0f 84 df 03 00 00    	je     fb78 <__find_arguments+0x6d8>
    f799:	41 39 c4             	cmp    %eax,%r12d
    f79c:	0f 8d de 08 00 00    	jge    10080 <__find_arguments+0xbe0>
    f7a2:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f7a7:	49 63 c4             	movslq %r12d,%rax
    f7aa:	41 83 c4 01          	add    $0x1,%r12d
    f7ae:	c6 04 02 14          	movb   $0x14,(%rdx,%rax,1)
    f7b2:	e9 75 fd ff ff       	jmp    f52c <__find_arguments+0x8c>
    f7b7:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    f7bc:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    f7c1:	e8 2a fc ff ff       	call   f3f0 <__grow_type_table>
    f7c6:	83 f8 ff             	cmp    $0xffffffff,%eax
    f7c9:	0f 84 41 fe ff ff    	je     f610 <__find_arguments+0x170>
    f7cf:	e9 35 ff ff ff       	jmp    f709 <__find_arguments+0x269>
    f7d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f7d8:	41 0f be 07          	movsbl (%r15),%eax
    f7dc:	49 8d 57 01          	lea    0x1(%r15),%rdx
    f7e0:	83 f8 2a             	cmp    $0x2a,%eax
    f7e3:	75 12                	jne    f7f7 <__find_arguments+0x357>
    f7e5:	e9 1f 09 00 00       	jmp    10109 <__find_arguments+0xc69>
    f7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f7f0:	0f be 02             	movsbl (%rdx),%eax
    f7f3:	48 83 c2 01          	add    $0x1,%rdx
    f7f7:	8d 70 d0             	lea    -0x30(%rax),%esi
    f7fa:	83 fe 09             	cmp    $0x9,%esi
    f7fd:	76 f1                	jbe    f7f0 <__find_arguments+0x350>
    f7ff:	49 89 d7             	mov    %rdx,%r15
    f802:	e9 a9 fd ff ff       	jmp    f5b0 <__find_arguments+0x110>
    f807:	45 39 e5             	cmp    %r12d,%r13d
    f80a:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f80e:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f812:	83 e1 10             	and    $0x10,%ecx
    f815:	74 29                	je     f840 <__find_arguments+0x3a0>
    f817:	41 39 c4             	cmp    %eax,%r12d
    f81a:	0f 8d 38 04 00 00    	jge    fc58 <__find_arguments+0x7b8>
    f820:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f825:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f82a:	4d 63 e4             	movslq %r12d,%r12
    f82d:	41 39 d5             	cmp    %edx,%r13d
    f830:	42 c6 04 20 1b       	movb   $0x1b,(%rax,%r12,1)
    f835:	44 0f 4c ea          	cmovl  %edx,%r13d
    f839:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f83d:	41 89 d4             	mov    %edx,%r12d
    f840:	44 39 e0             	cmp    %r12d,%eax
    f843:	0f 8e 75 05 00 00    	jle    fdbe <__find_arguments+0x91e>
    f849:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f84e:	49 63 c4             	movslq %r12d,%rax
    f851:	41 83 c4 01          	add    $0x1,%r12d
    f855:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
    f859:	e9 ce fc ff ff       	jmp    f52c <__find_arguments+0x8c>
    f85e:	41 0f be 07          	movsbl (%r15),%eax
    f862:	80 cd 02             	or     $0x2,%ch
    f865:	e9 42 fd ff ff       	jmp    f5ac <__find_arguments+0x10c>
    f86a:	41 0f be 07          	movsbl (%r15),%eax
    f86e:	83 c9 08             	or     $0x8,%ecx
    f871:	e9 36 fd ff ff       	jmp    f5ac <__find_arguments+0x10c>
    f876:	41 0f be 17          	movsbl (%r15),%edx
    f87a:	4d 89 f9             	mov    %r15,%r9
    f87d:	45 31 d2             	xor    %r10d,%r10d
    f880:	8d 72 d0             	lea    -0x30(%rdx),%esi
    f883:	89 d0                	mov    %edx,%eax
    f885:	83 fe 09             	cmp    $0x9,%esi
    f888:	76 2e                	jbe    f8b8 <__find_arguments+0x418>
    f88a:	e9 f1 04 00 00       	jmp    fd80 <__find_arguments+0x8e0>
    f88f:	90                   	nop
    f890:	49 83 c1 01          	add    $0x1,%r9
    f894:	44 8d 54 02 d0       	lea    -0x30(%rdx,%rax,1),%r10d
    f899:	41 0f be 11          	movsbl (%r9),%edx
    f89d:	8d 72 d0             	lea    -0x30(%rdx),%esi
    f8a0:	89 d0                	mov    %edx,%eax
    f8a2:	83 fe 09             	cmp    $0x9,%esi
    f8a5:	0f 87 d5 04 00 00    	ja     fd80 <__find_arguments+0x8e0>
    f8ab:	41 81 fa cc cc cc 0c 	cmp    $0xccccccc,%r10d
    f8b2:	0f 8f 58 fd ff ff    	jg     f610 <__find_arguments+0x170>
    f8b8:	43 8d 04 92          	lea    (%r10,%r10,4),%eax
    f8bc:	44 89 c6             	mov    %r8d,%esi
    f8bf:	01 c0                	add    %eax,%eax
    f8c1:	29 d6                	sub    %edx,%esi
    f8c3:	39 c6                	cmp    %eax,%esi
    f8c5:	7d c9                	jge    f890 <__find_arguments+0x3f0>
    f8c7:	e9 44 fd ff ff       	jmp    f610 <__find_arguments+0x170>
    f8cc:	45 39 e5             	cmp    %r12d,%r13d
    f8cf:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f8d3:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f8d7:	83 e1 10             	and    $0x10,%ecx
    f8da:	74 29                	je     f905 <__find_arguments+0x465>
    f8dc:	41 39 c4             	cmp    %eax,%r12d
    f8df:	0f 8d 53 03 00 00    	jge    fc38 <__find_arguments+0x798>
    f8e5:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f8ea:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f8ef:	4d 63 e4             	movslq %r12d,%r12
    f8f2:	41 39 d5             	cmp    %edx,%r13d
    f8f5:	42 c6 04 20 1c       	movb   $0x1c,(%rax,%r12,1)
    f8fa:	44 0f 4c ea          	cmovl  %edx,%r13d
    f8fe:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f902:	41 89 d4             	mov    %edx,%r12d
    f905:	44 39 e0             	cmp    %r12d,%eax
    f908:	0f 8e 12 05 00 00    	jle    fe20 <__find_arguments+0x980>
    f90e:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f913:	49 63 c4             	movslq %r12d,%rax
    f916:	41 83 c4 01          	add    $0x1,%r12d
    f91a:	c6 04 02 0f          	movb   $0xf,(%rdx,%rax,1)
    f91e:	e9 09 fc ff ff       	jmp    f52c <__find_arguments+0x8c>
    f923:	41 0f be 07          	movsbl (%r15),%eax
    f927:	83 c9 20             	or     $0x20,%ecx
    f92a:	e9 7d fc ff ff       	jmp    f5ac <__find_arguments+0x10c>
    f92f:	44 39 64 24 38       	cmp    %r12d,0x38(%rsp)
    f934:	0f 8e 07 04 00 00    	jle    fd41 <__find_arguments+0x8a1>
    f93a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    f93f:	45 39 e5             	cmp    %r12d,%r13d
    f942:	49 63 c4             	movslq %r12d,%rax
    f945:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f949:	41 83 c4 01          	add    $0x1,%r12d
    f94d:	c6 04 02 10          	movb   $0x10,(%rdx,%rax,1)
    f951:	e9 d6 fb ff ff       	jmp    f52c <__find_arguments+0x8c>
    f956:	41 0f be 07          	movsbl (%r15),%eax
    f95a:	80 cd 04             	or     $0x4,%ch
    f95d:	e9 4a fc ff ff       	jmp    f5ac <__find_arguments+0x10c>
    f962:	45 39 e5             	cmp    %r12d,%r13d
    f965:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f969:	45 0f 4c ec          	cmovl  %r12d,%r13d
    f96d:	f6 c1 20             	test   $0x20,%cl
    f970:	74 29                	je     f99b <__find_arguments+0x4fb>
    f972:	41 39 c4             	cmp    %eax,%r12d
    f975:	0f 8d 95 02 00 00    	jge    fc10 <__find_arguments+0x770>
    f97b:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f980:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f985:	4d 63 e4             	movslq %r12d,%r12
    f988:	41 39 d5             	cmp    %edx,%r13d
    f98b:	42 c6 04 20 0c       	movb   $0xc,(%rax,%r12,1)
    f990:	44 0f 4c ea          	cmovl  %edx,%r13d
    f994:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f998:	41 89 d4             	mov    %edx,%r12d
    f99b:	f6 c1 10             	test   $0x10,%cl
    f99e:	74 29                	je     f9c9 <__find_arguments+0x529>
    f9a0:	44 39 e0             	cmp    %r12d,%eax
    f9a3:	0f 8e 1d 02 00 00    	jle    fbc6 <__find_arguments+0x726>
    f9a9:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f9ae:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f9b3:	4d 63 e4             	movslq %r12d,%r12
    f9b6:	41 39 d5             	cmp    %edx,%r13d
    f9b9:	42 c6 04 20 09       	movb   $0x9,(%rax,%r12,1)
    f9be:	44 0f 4c ea          	cmovl  %edx,%r13d
    f9c2:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f9c6:	41 89 d4             	mov    %edx,%r12d
    f9c9:	f6 c1 40             	test   $0x40,%cl
    f9cc:	74 29                	je     f9f7 <__find_arguments+0x557>
    f9ce:	44 39 e0             	cmp    %r12d,%eax
    f9d1:	0f 8e c1 02 00 00    	jle    fc98 <__find_arguments+0x7f8>
    f9d7:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    f9dc:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    f9e1:	4d 63 e4             	movslq %r12d,%r12
    f9e4:	41 39 d5             	cmp    %edx,%r13d
    f9e7:	42 c6 04 20 03       	movb   $0x3,(%rax,%r12,1)
    f9ec:	44 0f 4c ea          	cmovl  %edx,%r13d
    f9f0:	8b 44 24 38          	mov    0x38(%rsp),%eax
    f9f4:	41 89 d4             	mov    %edx,%r12d
    f9f7:	f6 c5 02             	test   $0x2,%ch
    f9fa:	74 29                	je     fa25 <__find_arguments+0x585>
    f9fc:	44 39 e0             	cmp    %r12d,%eax
    f9ff:	0f 8e bb 02 00 00    	jle    fcc0 <__find_arguments+0x820>
    fa05:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    fa0a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    fa0f:	4d 63 e4             	movslq %r12d,%r12
    fa12:	41 39 d5             	cmp    %edx,%r13d
    fa15:	42 c6 04 20 12       	movb   $0x12,(%rax,%r12,1)
    fa1a:	44 0f 4c ea          	cmovl  %edx,%r13d
    fa1e:	8b 44 24 38          	mov    0x38(%rsp),%eax
    fa22:	41 89 d4             	mov    %edx,%r12d
    fa25:	f6 c5 04             	test   $0x4,%ch
    fa28:	74 29                	je     fa53 <__find_arguments+0x5b3>
    fa2a:	44 39 e0             	cmp    %r12d,%eax
    fa2d:	0f 8e d5 02 00 00    	jle    fd08 <__find_arguments+0x868>
    fa33:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    fa38:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    fa3d:	4d 63 e4             	movslq %r12d,%r12
    fa40:	41 39 d5             	cmp    %edx,%r13d
    fa43:	42 c6 04 20 15       	movb   $0x15,(%rax,%r12,1)
    fa48:	44 0f 4c ea          	cmovl  %edx,%r13d
    fa4c:	8b 44 24 38          	mov    0x38(%rsp),%eax
    fa50:	41 89 d4             	mov    %edx,%r12d
    fa53:	80 e5 10             	and    $0x10,%ch
    fa56:	74 29                	je     fa81 <__find_arguments+0x5e1>
    fa58:	44 39 e0             	cmp    %r12d,%eax
    fa5b:	0f 8e 87 02 00 00    	jle    fce8 <__find_arguments+0x848>
    fa61:	41 8d 54 24 01       	lea    0x1(%r12),%edx
    fa66:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    fa6b:	4d 63 e4             	movslq %r12d,%r12
    fa6e:	41 39 d5             	cmp    %edx,%r13d
    fa71:	42 c6 04 20 18       	movb   $0x18,(%rax,%r12,1)
    fa76:	44 0f 4c ea          	cmovl  %edx,%r13d
    fa7a:	8b 44 24 38          	mov    0x38(%rsp),%eax
    fa7e:	41 89 d4             	mov    %edx,%r12d
    fa81:	44 39 e0             	cmp    %r12d,%eax
    fa84:	0f 8e d6 03 00 00    	jle    fe60 <__find_arguments+0x9c0>
    fa8a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fa8f:	49 63 c4             	movslq %r12d,%rax
    fa92:	41 83 c4 01          	add    $0x1,%r12d
    fa96:	c6 04 02 06          	movb   $0x6,(%rdx,%rax,1)
    fa9a:	e9 8d fa ff ff       	jmp    f52c <__find_arguments+0x8c>
    fa9f:	41 0f be 07          	movsbl (%r15),%eax
    faa3:	3c 6c                	cmp    $0x6c,%al
    faa5:	0f 84 46 03 00 00    	je     fdf1 <__find_arguments+0x951>
    faab:	83 c9 10             	or     $0x10,%ecx
    faae:	e9 f9 fa ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fab3:	41 0f be 07          	movsbl (%r15),%eax
    fab7:	80 cd 10             	or     $0x10,%ch
    faba:	e9 ed fa ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fabf:	41 0f be 07          	movsbl (%r15),%eax
    fac3:	3c 68                	cmp    $0x68,%al
    fac5:	0f 84 15 03 00 00    	je     fde0 <__find_arguments+0x940>
    facb:	83 c9 40             	or     $0x40,%ecx
    face:	e9 d9 fa ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fad3:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fad8:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fadd:	e8 0e f9 ff ff       	call   f3f0 <__grow_type_table>
    fae2:	83 f8 ff             	cmp    $0xffffffff,%eax
    fae5:	0f 84 25 fb ff ff    	je     f610 <__find_arguments+0x170>
    faeb:	e9 95 fb ff ff       	jmp    f685 <__find_arguments+0x1e5>
    faf0:	f6 c1 20             	test   $0x20,%cl
    faf3:	0f 84 a6 00 00 00    	je     fb9f <__find_arguments+0x6ff>
    faf9:	41 39 c4             	cmp    %eax,%r12d
    fafc:	0f 8d 5e 05 00 00    	jge    10060 <__find_arguments+0xbc0>
    fb02:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fb07:	49 63 c4             	movslq %r12d,%rax
    fb0a:	41 83 c4 01          	add    $0x1,%r12d
    fb0e:	c6 04 02 0b          	movb   $0xb,(%rdx,%rax,1)
    fb12:	e9 15 fa ff ff       	jmp    f52c <__find_arguments+0x8c>
    fb17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fb1e:	00 00 
    fb20:	44 8b 16             	mov    (%rsi),%r10d
    fb23:	41 83 fa 2f          	cmp    $0x2f,%r10d
    fb27:	0f 87 03 02 00 00    	ja     fd30 <__find_arguments+0x890>
    fb2d:	45 89 d1             	mov    %r10d,%r9d
    fb30:	41 83 c2 08          	add    $0x8,%r10d
    fb34:	4c 03 4e 10          	add    0x10(%rsi),%r9
    fb38:	44 89 16             	mov    %r10d,(%rsi)
    fb3b:	4d 8b 09             	mov    (%r9),%r9
    fb3e:	4c 89 08             	mov    %r9,(%rax)
    fb41:	83 c2 01             	add    $0x1,%edx
    fb44:	41 39 d5             	cmp    %edx,%r13d
    fb47:	0f 8d 2b fa ff ff    	jge    f578 <__find_arguments+0xd8>
    fb4d:	45 31 e4             	xor    %r12d,%r12d
    fb50:	e9 d1 fa ff ff       	jmp    f626 <__find_arguments+0x186>
    fb55:	44 8b 16             	mov    (%rsi),%r10d
    fb58:	41 83 fa 2f          	cmp    $0x2f,%r10d
    fb5c:	0f 87 4e 03 00 00    	ja     feb0 <__find_arguments+0xa10>
    fb62:	45 89 d1             	mov    %r10d,%r9d
    fb65:	41 83 c2 08          	add    $0x8,%r10d
    fb69:	4c 03 4e 10          	add    0x10(%rsi),%r9
    fb6d:	44 89 16             	mov    %r10d,(%rsi)
    fb70:	45 8b 09             	mov    (%r9),%r9d
    fb73:	44 89 08             	mov    %r9d,(%rax)
    fb76:	eb c9                	jmp    fb41 <__find_arguments+0x6a1>
    fb78:	f6 c1 20             	test   $0x20,%cl
    fb7b:	0f 84 40 03 00 00    	je     fec1 <__find_arguments+0xa21>
    fb81:	41 39 c4             	cmp    %eax,%r12d
    fb84:	0f 8d 6e 04 00 00    	jge    fff8 <__find_arguments+0xb58>
    fb8a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fb8f:	49 63 c4             	movslq %r12d,%rax
    fb92:	41 83 c4 01          	add    $0x1,%r12d
    fb96:	c6 04 02 0a          	movb   $0xa,(%rdx,%rax,1)
    fb9a:	e9 8d f9 ff ff       	jmp    f52c <__find_arguments+0x8c>
    fb9f:	f6 c1 10             	test   $0x10,%cl
    fba2:	0f 84 49 03 00 00    	je     fef1 <__find_arguments+0xa51>
    fba8:	41 39 c4             	cmp    %eax,%r12d
    fbab:	0f 8d 23 04 00 00    	jge    ffd4 <__find_arguments+0xb34>
    fbb1:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fbb6:	49 63 c4             	movslq %r12d,%rax
    fbb9:	41 83 c4 01          	add    $0x1,%r12d
    fbbd:	c6 04 02 08          	movb   $0x8,(%rdx,%rax,1)
    fbc1:	e9 66 f9 ff ff       	jmp    f52c <__find_arguments+0x8c>
    fbc6:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fbcb:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fbd0:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    fbd4:	e8 17 f8 ff ff       	call   f3f0 <__grow_type_table>
    fbd9:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    fbdd:	83 f8 ff             	cmp    $0xffffffff,%eax
    fbe0:	0f 84 2a fa ff ff    	je     f610 <__find_arguments+0x170>
    fbe6:	e9 be fd ff ff       	jmp    f9a9 <__find_arguments+0x509>
    fbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fbf0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fbf5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fbfa:	e8 f1 f7 ff ff       	call   f3f0 <__grow_type_table>
    fbff:	83 f8 ff             	cmp    $0xffffffff,%eax
    fc02:	0f 84 08 fa ff ff    	je     f610 <__find_arguments+0x170>
    fc08:	e9 3c fb ff ff       	jmp    f749 <__find_arguments+0x2a9>
    fc0d:	0f 1f 00             	nopl   (%rax)
    fc10:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fc15:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fc1a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    fc1e:	e8 cd f7 ff ff       	call   f3f0 <__grow_type_table>
    fc23:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    fc27:	83 f8 ff             	cmp    $0xffffffff,%eax
    fc2a:	0f 84 e0 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fc30:	e9 46 fd ff ff       	jmp    f97b <__find_arguments+0x4db>
    fc35:	0f 1f 00             	nopl   (%rax)
    fc38:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fc3d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fc42:	e8 a9 f7 ff ff       	call   f3f0 <__grow_type_table>
    fc47:	83 f8 ff             	cmp    $0xffffffff,%eax
    fc4a:	0f 84 c0 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fc50:	e9 90 fc ff ff       	jmp    f8e5 <__find_arguments+0x445>
    fc55:	0f 1f 00             	nopl   (%rax)
    fc58:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fc5d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fc62:	e8 89 f7 ff ff       	call   f3f0 <__grow_type_table>
    fc67:	83 f8 ff             	cmp    $0xffffffff,%eax
    fc6a:	0f 84 a0 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fc70:	e9 ab fb ff ff       	jmp    f820 <__find_arguments+0x380>
    fc75:	0f 1f 00             	nopl   (%rax)
    fc78:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fc7d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fc82:	e8 69 f7 ff ff       	call   f3f0 <__grow_type_table>
    fc87:	83 f8 ff             	cmp    $0xffffffff,%eax
    fc8a:	0f 84 80 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fc90:	e9 52 fa ff ff       	jmp    f6e7 <__find_arguments+0x247>
    fc95:	0f 1f 00             	nopl   (%rax)
    fc98:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fc9d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fca2:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    fca6:	e8 45 f7 ff ff       	call   f3f0 <__grow_type_table>
    fcab:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    fcaf:	83 f8 ff             	cmp    $0xffffffff,%eax
    fcb2:	0f 84 58 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fcb8:	e9 1a fd ff ff       	jmp    f9d7 <__find_arguments+0x537>
    fcbd:	0f 1f 00             	nopl   (%rax)
    fcc0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fcc5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fcca:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    fcce:	e8 1d f7 ff ff       	call   f3f0 <__grow_type_table>
    fcd3:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    fcd7:	83 f8 ff             	cmp    $0xffffffff,%eax
    fcda:	0f 84 30 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fce0:	e9 20 fd ff ff       	jmp    fa05 <__find_arguments+0x565>
    fce5:	0f 1f 00             	nopl   (%rax)
    fce8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fced:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fcf2:	e8 f9 f6 ff ff       	call   f3f0 <__grow_type_table>
    fcf7:	83 f8 ff             	cmp    $0xffffffff,%eax
    fcfa:	0f 84 10 f9 ff ff    	je     f610 <__find_arguments+0x170>
    fd00:	e9 5c fd ff ff       	jmp    fa61 <__find_arguments+0x5c1>
    fd05:	0f 1f 00             	nopl   (%rax)
    fd08:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fd0d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fd12:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    fd16:	e8 d5 f6 ff ff       	call   f3f0 <__grow_type_table>
    fd1b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    fd1f:	83 f8 ff             	cmp    $0xffffffff,%eax
    fd22:	0f 84 e8 f8 ff ff    	je     f610 <__find_arguments+0x170>
    fd28:	e9 06 fd ff ff       	jmp    fa33 <__find_arguments+0x593>
    fd2d:	0f 1f 00             	nopl   (%rax)
    fd30:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    fd34:	4d 8d 51 08          	lea    0x8(%r9),%r10
    fd38:	4c 89 56 08          	mov    %r10,0x8(%rsi)
    fd3c:	e9 fa fd ff ff       	jmp    fb3b <__find_arguments+0x69b>
    fd41:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fd46:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fd4b:	e8 a0 f6 ff ff       	call   f3f0 <__grow_type_table>
    fd50:	83 f8 ff             	cmp    $0xffffffff,%eax
    fd53:	0f 84 b7 f8 ff ff    	je     f610 <__find_arguments+0x170>
    fd59:	e9 dc fb ff ff       	jmp    f93a <__find_arguments+0x49a>
    fd5e:	66 90                	xchg   %ax,%ax
    fd60:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fd65:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fd6a:	e8 81 f6 ff ff       	call   f3f0 <__grow_type_table>
    fd6f:	83 f8 ff             	cmp    $0xffffffff,%eax
    fd72:	0f 84 98 f8 ff ff    	je     f610 <__find_arguments+0x170>
    fd78:	e9 3d f9 ff ff       	jmp    f6ba <__find_arguments+0x21a>
    fd7d:	0f 1f 00             	nopl   (%rax)
    fd80:	8b 54 24 38          	mov    0x38(%rsp),%edx
    fd84:	3c 24                	cmp    $0x24,%al
    fd86:	0f 84 95 01 00 00    	je     ff21 <__find_arguments+0xa81>
    fd8c:	41 39 d4             	cmp    %edx,%r12d
    fd8f:	0f 8d 0b 03 00 00    	jge    100a0 <__find_arguments+0xc00>
    fd95:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fd9a:	49 63 c4             	movslq %r12d,%rax
    fd9d:	45 39 e5             	cmp    %r12d,%r13d
    fda0:	45 0f 4c ec          	cmovl  %r12d,%r13d
    fda4:	41 83 c4 01          	add    $0x1,%r12d
    fda8:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
    fdac:	41 0f be 07          	movsbl (%r15),%eax
    fdb0:	e9 f7 f7 ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fdb5:	41 39 c4             	cmp    %eax,%r12d
    fdb8:	0f 8c 8b fa ff ff    	jl     f849 <__find_arguments+0x3a9>
    fdbe:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fdc3:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fdc8:	e8 23 f6 ff ff       	call   f3f0 <__grow_type_table>
    fdcd:	83 f8 ff             	cmp    $0xffffffff,%eax
    fdd0:	0f 84 3a f8 ff ff    	je     f610 <__find_arguments+0x170>
    fdd6:	e9 6e fa ff ff       	jmp    f849 <__find_arguments+0x3a9>
    fddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fde0:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
    fde5:	80 cd 08             	or     $0x8,%ch
    fde8:	49 83 c7 01          	add    $0x1,%r15
    fdec:	e9 bb f7 ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fdf1:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
    fdf6:	83 c9 20             	or     $0x20,%ecx
    fdf9:	49 83 c7 01          	add    $0x1,%r15
    fdfd:	e9 aa f7 ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fe02:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fe07:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fe0c:	e8 df f5 ff ff       	call   f3f0 <__grow_type_table>
    fe11:	83 f8 ff             	cmp    $0xffffffff,%eax
    fe14:	0f 84 f6 f7 ff ff    	je     f610 <__find_arguments+0x170>
    fe1a:	e9 53 f9 ff ff       	jmp    f772 <__find_arguments+0x2d2>
    fe1f:	90                   	nop
    fe20:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fe25:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fe2a:	e8 c1 f5 ff ff       	call   f3f0 <__grow_type_table>
    fe2f:	83 f8 ff             	cmp    $0xffffffff,%eax
    fe32:	0f 84 d8 f7 ff ff    	je     f610 <__find_arguments+0x170>
    fe38:	e9 d1 fa ff ff       	jmp    f90e <__find_arguments+0x46e>
    fe3d:	0f 1f 00             	nopl   (%rax)
    fe40:	83 f8 24             	cmp    $0x24,%eax
    fe43:	0f 85 b6 f9 ff ff    	jne    f7ff <__find_arguments+0x35f>
    fe49:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
    fe4e:	41 89 f4             	mov    %esi,%r12d
    fe51:	49 89 d7             	mov    %rdx,%r15
    fe54:	e9 53 f7 ff ff       	jmp    f5ac <__find_arguments+0x10c>
    fe59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fe60:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fe65:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    fe6a:	e8 81 f5 ff ff       	call   f3f0 <__grow_type_table>
    fe6f:	83 f8 ff             	cmp    $0xffffffff,%eax
    fe72:	0f 84 98 f7 ff ff    	je     f610 <__find_arguments+0x170>
    fe78:	e9 0d fc ff ff       	jmp    fa8a <__find_arguments+0x5ea>
    fe7d:	0f 1f 00             	nopl   (%rax)
    fe80:	41 8d 7d 01          	lea    0x1(%r13),%edi
    fe84:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fe89:	48 63 ff             	movslq %edi,%rdi
    fe8c:	48 c1 e7 04          	shl    $0x4,%rdi
    fe90:	48 89 38             	mov    %rdi,(%rax)
    fe93:	e8 68 b8 ff ff       	call   b700 <dlmalloc>
    fe98:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    fe9d:	48 89 07             	mov    %rax,(%rdi)
    fea0:	48 85 c0             	test   %rax,%rax
    fea3:	0f 85 ad f6 ff ff    	jne    f556 <__find_arguments+0xb6>
    fea9:	e9 62 f7 ff ff       	jmp    f610 <__find_arguments+0x170>
    feae:	66 90                	xchg   %ax,%ax
    feb0:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    feb4:	4d 8d 51 08          	lea    0x8(%r9),%r10
    feb8:	4c 89 56 08          	mov    %r10,0x8(%rsi)
    febc:	e9 af fc ff ff       	jmp    fb70 <__find_arguments+0x6d0>
    fec1:	f6 c1 10             	test   $0x10,%cl
    fec4:	0f 85 ec 00 00 00    	jne    ffb6 <__find_arguments+0xb16>
    feca:	f6 c1 40             	test   $0x40,%cl
    fecd:	0f 84 b5 02 00 00    	je     10188 <__find_arguments+0xce8>
    fed3:	41 39 c4             	cmp    %eax,%r12d
    fed6:	0f 8d 74 03 00 00    	jge    10250 <__find_arguments+0xdb0>
    fedc:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    fee1:	49 63 c4             	movslq %r12d,%rax
    fee4:	41 83 c4 01          	add    $0x1,%r12d
    fee8:	c6 04 02 01          	movb   $0x1,(%rdx,%rax,1)
    feec:	e9 3b f6 ff ff       	jmp    f52c <__find_arguments+0x8c>
    fef1:	f6 c1 40             	test   $0x40,%cl
    fef4:	0f 85 9e 00 00 00    	jne    ff98 <__find_arguments+0xaf8>
    fefa:	80 e5 08             	and    $0x8,%ch
    fefd:	0f 84 e8 01 00 00    	je     100eb <__find_arguments+0xc4b>
    ff03:	41 39 c4             	cmp    %eax,%r12d
    ff06:	0f 8d 24 03 00 00    	jge    10230 <__find_arguments+0xd90>
    ff0c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    ff11:	49 63 c4             	movslq %r12d,%rax
    ff14:	41 83 c4 01          	add    $0x1,%r12d
    ff18:	c6 04 02 1a          	movb   $0x1a,(%rdx,%rax,1)
    ff1c:	e9 0b f6 ff ff       	jmp    f52c <__find_arguments+0x8c>
    ff21:	45 39 d5             	cmp    %r10d,%r13d
    ff24:	45 0f 4c ea          	cmovl  %r10d,%r13d
    ff28:	44 39 d2             	cmp    %r10d,%edx
    ff2b:	0f 8e e7 00 00 00    	jle    10018 <__find_arguments+0xb78>
    ff31:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    ff36:	4d 63 d2             	movslq %r10d,%r10
    ff39:	4d 8d 79 01          	lea    0x1(%r9),%r15
    ff3d:	42 c6 04 10 04       	movb   $0x4,(%rax,%r10,1)
    ff42:	41 0f be 41 01       	movsbl 0x1(%r9),%eax
    ff47:	e9 60 f6 ff ff       	jmp    f5ac <__find_arguments+0x10c>
    ff4c:	44 8b 56 04          	mov    0x4(%rsi),%r10d
    ff50:	41 81 fa af 00 00 00 	cmp    $0xaf,%r10d
    ff57:	0f 87 73 01 00 00    	ja     100d0 <__find_arguments+0xc30>
    ff5d:	45 89 d1             	mov    %r10d,%r9d
    ff60:	41 83 c2 10          	add    $0x10,%r10d
    ff64:	4c 03 4e 10          	add    0x10(%rsi),%r9
    ff68:	44 89 56 04          	mov    %r10d,0x4(%rsi)
    ff6c:	f2 41 0f 10 01       	movsd  (%r9),%xmm0
    ff71:	f2 0f 11 00          	movsd  %xmm0,(%rax)
    ff75:	e9 c7 fb ff ff       	jmp    fb41 <__find_arguments+0x6a1>
    ff7a:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
    ff7e:	4c 8d 4b 0f          	lea    0xf(%rbx),%r9
    ff82:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
    ff86:	4d 8d 51 10          	lea    0x10(%r9),%r10
    ff8a:	4c 89 56 08          	mov    %r10,0x8(%rsi)
    ff8e:	41 db 29             	fldt   (%r9)
    ff91:	db 38                	fstpt  (%rax)
    ff93:	e9 a9 fb ff ff       	jmp    fb41 <__find_arguments+0x6a1>
    ff98:	41 39 c4             	cmp    %eax,%r12d
    ff9b:	0f 8d 0e 02 00 00    	jge    101af <__find_arguments+0xd0f>
    ffa1:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    ffa6:	49 63 c4             	movslq %r12d,%rax
    ffa9:	41 83 c4 01          	add    $0x1,%r12d
    ffad:	c6 04 02 02          	movb   $0x2,(%rdx,%rax,1)
    ffb1:	e9 76 f5 ff ff       	jmp    f52c <__find_arguments+0x8c>
    ffb6:	41 39 c4             	cmp    %eax,%r12d
    ffb9:	0f 8d a5 01 00 00    	jge    10164 <__find_arguments+0xcc4>
    ffbf:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    ffc4:	49 63 c4             	movslq %r12d,%rax
    ffc7:	41 83 c4 01          	add    $0x1,%r12d
    ffcb:	c6 04 02 07          	movb   $0x7,(%rdx,%rax,1)
    ffcf:	e9 58 f5 ff ff       	jmp    f52c <__find_arguments+0x8c>
    ffd4:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    ffd9:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    ffde:	e8 0d f4 ff ff       	call   f3f0 <__grow_type_table>
    ffe3:	83 f8 ff             	cmp    $0xffffffff,%eax
    ffe6:	0f 84 24 f6 ff ff    	je     f610 <__find_arguments+0x170>
    ffec:	e9 c0 fb ff ff       	jmp    fbb1 <__find_arguments+0x711>
    fff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fff8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    fffd:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10002:	e8 e9 f3 ff ff       	call   f3f0 <__grow_type_table>
   10007:	83 f8 ff             	cmp    $0xffffffff,%eax
   1000a:	0f 84 00 f6 ff ff    	je     f610 <__find_arguments+0x170>
   10010:	e9 75 fb ff ff       	jmp    fb8a <__find_arguments+0x6ea>
   10015:	0f 1f 00             	nopl   (%rax)
   10018:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1001d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10022:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   10026:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
   1002b:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   10030:	e8 bb f3 ff ff       	call   f3f0 <__grow_type_table>
   10035:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   1003a:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
   1003f:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   10045:	83 f8 ff             	cmp    $0xffffffff,%eax
   10048:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   1004c:	0f 84 be f5 ff ff    	je     f610 <__find_arguments+0x170>
   10052:	e9 da fe ff ff       	jmp    ff31 <__find_arguments+0xa91>
   10057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1005e:	00 00 
   10060:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10065:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1006a:	e8 81 f3 ff ff       	call   f3f0 <__grow_type_table>
   1006f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10072:	0f 84 98 f5 ff ff    	je     f610 <__find_arguments+0x170>
   10078:	e9 85 fa ff ff       	jmp    fb02 <__find_arguments+0x662>
   1007d:	0f 1f 00             	nopl   (%rax)
   10080:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10085:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1008a:	e8 61 f3 ff ff       	call   f3f0 <__grow_type_table>
   1008f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10092:	0f 84 78 f5 ff ff    	je     f610 <__find_arguments+0x170>
   10098:	e9 05 f7 ff ff       	jmp    f7a2 <__find_arguments+0x302>
   1009d:	0f 1f 00             	nopl   (%rax)
   100a0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   100a5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   100aa:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   100ae:	e8 3d f3 ff ff       	call   f3f0 <__grow_type_table>
   100b3:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   100b7:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   100bd:	83 f8 ff             	cmp    $0xffffffff,%eax
   100c0:	0f 84 4a f5 ff ff    	je     f610 <__find_arguments+0x170>
   100c6:	e9 ca fc ff ff       	jmp    fd95 <__find_arguments+0x8f5>
   100cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   100d0:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   100d4:	4d 8d 51 08          	lea    0x8(%r9),%r10
   100d8:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   100dc:	e9 8b fe ff ff       	jmp    ff6c <__find_arguments+0xacc>
   100e1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   100e6:	e9 62 fa ff ff       	jmp    fb4d <__find_arguments+0x6ad>
   100eb:	41 39 c4             	cmp    %eax,%r12d
   100ee:	0f 8d 17 01 00 00    	jge    1020b <__find_arguments+0xd6b>
   100f4:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   100f9:	49 63 c4             	movslq %r12d,%rax
   100fc:	41 83 c4 01          	add    $0x1,%r12d
   10100:	c6 04 02 05          	movb   $0x5,(%rdx,%rax,1)
   10104:	e9 23 f4 ff ff       	jmp    f52c <__find_arguments+0x8c>
   10109:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   1010e:	49 89 d2             	mov    %rdx,%r10
   10111:	45 31 c9             	xor    %r9d,%r9d
   10114:	8d 78 d0             	lea    -0x30(%rax),%edi
   10117:	89 c6                	mov    %eax,%esi
   10119:	83 ff 09             	cmp    $0x9,%edi
   1011c:	76 32                	jbe    10150 <__find_arguments+0xcb0>
   1011e:	e9 ad 00 00 00       	jmp    101d0 <__find_arguments+0xd30>
   10123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10128:	49 83 c2 01          	add    $0x1,%r10
   1012c:	44 8d 4c 30 d0       	lea    -0x30(%rax,%rsi,1),%r9d
   10131:	41 0f be 02          	movsbl (%r10),%eax
   10135:	8d 78 d0             	lea    -0x30(%rax),%edi
   10138:	89 c6                	mov    %eax,%esi
   1013a:	83 ff 09             	cmp    $0x9,%edi
   1013d:	0f 87 8d 00 00 00    	ja     101d0 <__find_arguments+0xd30>
   10143:	41 81 f9 cc cc cc 0c 	cmp    $0xccccccc,%r9d
   1014a:	0f 8f c0 f4 ff ff    	jg     f610 <__find_arguments+0x170>
   10150:	43 8d 34 89          	lea    (%r9,%r9,4),%esi
   10154:	44 89 c7             	mov    %r8d,%edi
   10157:	01 f6                	add    %esi,%esi
   10159:	29 c7                	sub    %eax,%edi
   1015b:	39 f7                	cmp    %esi,%edi
   1015d:	7d c9                	jge    10128 <__find_arguments+0xc88>
   1015f:	e9 ac f4 ff ff       	jmp    f610 <__find_arguments+0x170>
   10164:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10169:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1016e:	e8 7d f2 ff ff       	call   f3f0 <__grow_type_table>
   10173:	83 f8 ff             	cmp    $0xffffffff,%eax
   10176:	0f 84 94 f4 ff ff    	je     f610 <__find_arguments+0x170>
   1017c:	e9 3e fe ff ff       	jmp    ffbf <__find_arguments+0xb1f>
   10181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10188:	80 e5 08             	and    $0x8,%ch
   1018b:	0f 84 24 fc ff ff    	je     fdb5 <__find_arguments+0x915>
   10191:	41 39 c4             	cmp    %eax,%r12d
   10194:	0f 8d d8 00 00 00    	jge    10272 <__find_arguments+0xdd2>
   1019a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1019f:	49 63 c4             	movslq %r12d,%rax
   101a2:	41 83 c4 01          	add    $0x1,%r12d
   101a6:	c6 04 02 19          	movb   $0x19,(%rdx,%rax,1)
   101aa:	e9 7d f3 ff ff       	jmp    f52c <__find_arguments+0x8c>
   101af:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   101b4:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   101b9:	e8 32 f2 ff ff       	call   f3f0 <__grow_type_table>
   101be:	83 f8 ff             	cmp    $0xffffffff,%eax
   101c1:	0f 84 49 f4 ff ff    	je     f610 <__find_arguments+0x170>
   101c7:	e9 d5 fd ff ff       	jmp    ffa1 <__find_arguments+0xb01>
   101cc:	0f 1f 40 00          	nopl   0x0(%rax)
   101d0:	8b 44 24 38          	mov    0x38(%rsp),%eax
   101d4:	40 80 fe 24          	cmp    $0x24,%sil
   101d8:	0f 84 ea 00 00 00    	je     102c8 <__find_arguments+0xe28>
   101de:	41 39 c4             	cmp    %eax,%r12d
   101e1:	0f 8d a8 00 00 00    	jge    1028f <__find_arguments+0xdef>
   101e7:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   101ec:	49 63 c4             	movslq %r12d,%rax
   101ef:	45 39 e5             	cmp    %r12d,%r13d
   101f2:	45 0f 4c ec          	cmovl  %r12d,%r13d
   101f6:	41 83 c4 01          	add    $0x1,%r12d
   101fa:	c6 04 06 04          	movb   $0x4,(%rsi,%rax,1)
   101fe:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   10203:	49 89 d7             	mov    %rdx,%r15
   10206:	e9 a1 f3 ff ff       	jmp    f5ac <__find_arguments+0x10c>
   1020b:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10210:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10215:	e8 d6 f1 ff ff       	call   f3f0 <__grow_type_table>
   1021a:	83 f8 ff             	cmp    $0xffffffff,%eax
   1021d:	0f 84 ed f3 ff ff    	je     f610 <__find_arguments+0x170>
   10223:	e9 cc fe ff ff       	jmp    100f4 <__find_arguments+0xc54>
   10228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1022f:	00 
   10230:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10235:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1023a:	e8 b1 f1 ff ff       	call   f3f0 <__grow_type_table>
   1023f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10242:	0f 84 c8 f3 ff ff    	je     f610 <__find_arguments+0x170>
   10248:	e9 bf fc ff ff       	jmp    ff0c <__find_arguments+0xa6c>
   1024d:	0f 1f 00             	nopl   (%rax)
   10250:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10255:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1025a:	e8 91 f1 ff ff       	call   f3f0 <__grow_type_table>
   1025f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10262:	0f 84 a8 f3 ff ff    	je     f610 <__find_arguments+0x170>
   10268:	e9 6f fc ff ff       	jmp    fedc <__find_arguments+0xa3c>
   1026d:	e8 de e8 ff ff       	call   eb50 <__stack_chk_fail>
   10272:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10277:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1027c:	e8 6f f1 ff ff       	call   f3f0 <__grow_type_table>
   10281:	83 f8 ff             	cmp    $0xffffffff,%eax
   10284:	0f 84 86 f3 ff ff    	je     f610 <__find_arguments+0x170>
   1028a:	e9 0b ff ff ff       	jmp    1019a <__find_arguments+0xcfa>
   1028f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10294:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10299:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   1029d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   102a2:	e8 49 f1 ff ff       	call   f3f0 <__grow_type_table>
   102a7:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   102ac:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   102b0:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   102b6:	83 c0 01             	add    $0x1,%eax
   102b9:	0f 84 51 f3 ff ff    	je     f610 <__find_arguments+0x170>
   102bf:	e9 23 ff ff ff       	jmp    101e7 <__find_arguments+0xd47>
   102c4:	0f 1f 40 00          	nopl   0x0(%rax)
   102c8:	45 39 cd             	cmp    %r9d,%r13d
   102cb:	45 0f 4c e9          	cmovl  %r9d,%r13d
   102cf:	44 39 c8             	cmp    %r9d,%eax
   102d2:	7e 1b                	jle    102ef <__find_arguments+0xe4f>
   102d4:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   102d9:	4d 63 c9             	movslq %r9d,%r9
   102dc:	4d 8d 7a 01          	lea    0x1(%r10),%r15
   102e0:	42 c6 04 08 04       	movb   $0x4,(%rax,%r9,1)
   102e5:	41 0f be 42 01       	movsbl 0x1(%r10),%eax
   102ea:	e9 bd f2 ff ff       	jmp    f5ac <__find_arguments+0x10c>
   102ef:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   102f4:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   102f9:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   102fd:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   10302:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   10307:	e8 e4 f0 ff ff       	call   f3f0 <__grow_type_table>
   1030c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   10311:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   10316:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1031c:	83 c0 01             	add    $0x1,%eax
   1031f:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   10323:	0f 84 e7 f2 ff ff    	je     f610 <__find_arguments+0x170>
   10329:	eb a9                	jmp    102d4 <__find_arguments+0xe34>
   1032b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010330 <__sprint.part.0>:
   10330:	53                   	push   %rbx
   10331:	48 89 f3             	mov    %rsi,%rbx
   10334:	e8 87 64 00 00       	call   167c0 <__sfvwrite>
   10339:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   10340:	00 
   10341:	5b                   	pop    %rbx
   10342:	c3                   	ret    
   10343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1034a:	00 00 00 
   1034d:	0f 1f 00             	nopl   (%rax)

0000000000010350 <__vfprintf>:
   10350:	f3 0f 1e fa          	endbr64 
   10354:	41 57                	push   %r15
   10356:	41 56                	push   %r14
   10358:	41 55                	push   %r13
   1035a:	41 54                	push   %r12
   1035c:	55                   	push   %rbp
   1035d:	53                   	push   %rbx
   1035e:	48 81 ec b8 02 00 00 	sub    $0x2b8,%rsp
   10365:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   1036a:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   1036f:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   10374:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1037b:	00 00 
   1037d:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   10384:	00 
   10385:	31 c0                	xor    %eax,%eax
   10387:	48 8b 47 30          	mov    0x30(%rdi),%rax
   1038b:	48 85 c0             	test   %rax,%rax
   1038e:	74 16                	je     103a6 <__vfprintf+0x56>
   10390:	48 83 f8 f0          	cmp    $0xfffffffffffffff0,%rax
   10394:	74 10                	je     103a6 <__vfprintf+0x56>
   10396:	44 8b 48 30          	mov    0x30(%rax),%r9d
   1039a:	45 85 c9             	test   %r9d,%r9d
   1039d:	75 07                	jne    103a6 <__vfprintf+0x56>
   1039f:	c7 40 30 ff ff ff ff 	movl   $0xffffffff,0x30(%rax)
   103a6:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   103ab:	0f b7 41 10          	movzwl 0x10(%rcx),%eax
   103af:	66 89 04 24          	mov    %ax,(%rsp)
   103b3:	83 e0 1a             	and    $0x1a,%eax
   103b6:	66 83 f8 0a          	cmp    $0xa,%ax
   103ba:	75 0b                	jne    103c7 <__vfprintf+0x77>
   103bc:	66 83 79 12 00       	cmpw   $0x0,0x12(%rcx)
   103c1:	0f 89 51 30 00 00    	jns    13418 <__vfprintf+0x30c8>
   103c7:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   103cc:	4c 8d ac 24 08 01 00 	lea    0x108(%rsp),%r13
   103d3:	00 
   103d4:	31 f6                	xor    %esi,%esi
   103d6:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   103dd:	00 00 00 00 00 
   103e2:	ba 08 00 00 00       	mov    $0x8,%edx
   103e7:	4c 89 ef             	mov    %r13,%rdi
   103ea:	4c 8d b4 24 b4 00 00 	lea    0xb4(%rsp),%r14
   103f1:	00 
   103f2:	f3 0f 6f 08          	movdqu (%rax),%xmm1
   103f6:	0f 11 8c 24 18 01 00 	movups %xmm1,0x118(%rsp)
   103fd:	00 
   103fe:	48 8b 40 10          	mov    0x10(%rax),%rax
   10402:	0f 29 0c 24          	movaps %xmm1,(%rsp)
   10406:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1040d:	00 
   1040e:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   10415:	00 
   10416:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1041b:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   10422:	00 
   10423:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1042a:	00 00 00 00 00 
   1042f:	e8 5c e5 ff ff       	call   e990 <memset>
   10434:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   10439:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   10440:	00 00 
   10442:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   10449:	00 
   1044a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1044f:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   10456:	00 00 
   10458:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   1045f:	00 
   10460:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   10465:	eb 1c                	jmp    10483 <__vfprintf+0x133>
   10467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1046e:	00 00 
   10470:	48 98                	cltq   
   10472:	48 01 c3             	add    %rax,%rbx
   10475:	83 bc 24 b4 00 00 00 	cmpl   $0x25,0xb4(%rsp)
   1047c:	25 
   1047d:	0f 84 a5 00 00 00    	je     10528 <__vfprintf+0x1d8>
   10483:	4c 89 e9             	mov    %r13,%rcx
   10486:	ba 01 00 00 00       	mov    $0x1,%edx
   1048b:	48 89 de             	mov    %rbx,%rsi
   1048e:	4c 89 f7             	mov    %r14,%rdi
   10491:	e8 aa 61 00 00       	call   16640 <mbrtowc>
   10496:	89 c5                	mov    %eax,%ebp
   10498:	85 c0                	test   %eax,%eax
   1049a:	7f d4                	jg     10470 <__vfprintf+0x120>
   1049c:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
   104a1:	0f 84 16 02 00 00    	je     106bd <__vfprintf+0x36d>
   104a7:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   104ac:	49 89 dc             	mov    %rbx,%r12
   104af:	49 29 cc             	sub    %rcx,%r12
   104b2:	0f 88 28 01 00 00    	js     105e0 <__vfprintf+0x290>
   104b8:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   104bd:	2b 44 24 28          	sub    0x28(%rsp),%eax
   104c1:	48 98                	cltq   
   104c3:	4c 39 e0             	cmp    %r12,%rax
   104c6:	0f 8c 14 01 00 00    	jl     105e0 <__vfprintf+0x290>
   104cc:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   104d3:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   104da:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   104e1:	00 
   104e2:	4c 89 a4 24 38 01 00 	mov    %r12,0x138(%rsp)
   104e9:	00 
   104ea:	44 01 e2             	add    %r12d,%edx
   104ed:	83 c0 01             	add    $0x1,%eax
   104f0:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   104f7:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   104fe:	83 f8 07             	cmp    $0x7,%eax
   10501:	0f 8e 61 01 00 00    	jle    10668 <__vfprintf+0x318>
   10507:	85 d2                	test   %edx,%edx
   10509:	0f 85 91 01 00 00    	jne    106a0 <__vfprintf+0x350>
   1050f:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   10516:	00 00 00 00 
   1051a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1051f:	e9 4c 01 00 00       	jmp    10670 <__vfprintf+0x320>
   10524:	0f 1f 40 00          	nopl   0x0(%rax)
   10528:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   1052c:	48 39 44 24 18       	cmp    %rax,0x18(%rsp)
   10531:	0f 85 59 01 00 00    	jne    10690 <__vfprintf+0x340>
   10537:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1053c:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   10541:	48 89 c3             	mov    %rax,%rbx
   10544:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   1054b:	00 
   1054c:	0f be 5b 01          	movsbl 0x1(%rbx),%ebx
   10550:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
   10556:	48 8d 2d 5f 15 01 00 	lea    0x1155f(%rip),%rbp        # 21abc <_ZZ17ecall_malloc_freeE8__func__+0x2bc>
   1055d:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   10564:	00 
   10565:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1056a:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
   10571:	00 
   10572:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   10579:	49 83 c4 01          	add    $0x1,%r12
   1057d:	8d 43 e0             	lea    -0x20(%rbx),%eax
   10580:	83 f8 5a             	cmp    $0x5a,%eax
   10583:	0f 87 77 01 00 00    	ja     10700 <__vfprintf+0x3b0>
   10589:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   1058e:	48 01 e8             	add    %rbp,%rax
   10591:	3e ff e0             	notrack jmp *%rax
   10594:	0f 1f 40 00          	nopl   0x0(%rax)
   10598:	45 31 c0             	xor    %r8d,%r8d
   1059b:	eb 06                	jmp    105a3 <__vfprintf+0x253>
   1059d:	0f 1f 00             	nopl   (%rax)
   105a0:	4d 89 fc             	mov    %r15,%r12
   105a3:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
   105a7:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   105ac:	01 c0                	add    %eax,%eax
   105ae:	29 da                	sub    %ebx,%edx
   105b0:	39 c2                	cmp    %eax,%edx
   105b2:	7c 2c                	jl     105e0 <__vfprintf+0x290>
   105b4:	44 8d 44 03 d0       	lea    -0x30(%rbx,%rax,1),%r8d
   105b9:	41 0f be 1c 24       	movsbl (%r12),%ebx
   105be:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   105c3:	8d 43 d0             	lea    -0x30(%rbx),%eax
   105c6:	83 f8 09             	cmp    $0x9,%eax
   105c9:	0f 87 c6 26 00 00    	ja     12c95 <__vfprintf+0x2945>
   105cf:	41 81 f8 cc cc cc 0c 	cmp    $0xccccccc,%r8d
   105d6:	7e c8                	jle    105a0 <__vfprintf+0x250>
   105d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   105df:	00 
   105e0:	e8 5b ed ff ff       	call   f340 <__errno>
   105e5:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   105ec:	ff 
   105ed:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   105f3:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   105f8:	48 85 c0             	test   %rax,%rax
   105fb:	74 08                	je     10605 <__vfprintf+0x2b5>
   105fd:	48 89 c7             	mov    %rax,%rdi
   10600:	e8 6b cb ff ff       	call   d170 <dlfree>
   10605:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1060a:	48 85 c0             	test   %rax,%rax
   1060d:	74 08                	je     10617 <__vfprintf+0x2c7>
   1060f:	48 89 c7             	mov    %rax,%rdi
   10612:	e8 b9 34 00 00       	call   13ad0 <__freedtoa>
   10617:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
   1061e:	00 
   1061f:	48 85 ff             	test   %rdi,%rdi
   10622:	74 12                	je     10636 <__vfprintf+0x2e6>
   10624:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1062b:	00 
   1062c:	48 39 c7             	cmp    %rax,%rdi
   1062f:	74 05                	je     10636 <__vfprintf+0x2e6>
   10631:	e8 3a cb ff ff       	call   d170 <dlfree>
   10636:	48 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%rax
   1063d:	00 
   1063e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   10645:	00 00 
   10647:	0f 85 b7 2e 00 00    	jne    13504 <__vfprintf+0x31b4>
   1064d:	8b 44 24 28          	mov    0x28(%rsp),%eax
   10651:	48 81 c4 b8 02 00 00 	add    $0x2b8,%rsp
   10658:	5b                   	pop    %rbx
   10659:	5d                   	pop    %rbp
   1065a:	41 5c                	pop    %r12
   1065c:	41 5d                	pop    %r13
   1065e:	41 5e                	pop    %r14
   10660:	41 5f                	pop    %r15
   10662:	c3                   	ret    
   10663:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10668:	4c 8d 94 24 40 01 00 	lea    0x140(%rsp),%r10
   1066f:	00 
   10670:	44 01 64 24 28       	add    %r12d,0x28(%rsp)
   10675:	85 ed                	test   %ebp,%ebp
   10677:	7e 44                	jle    106bd <__vfprintf+0x36d>
   10679:	48 8d 43 01          	lea    0x1(%rbx),%rax
   1067d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10682:	e9 bd fe ff ff       	jmp    10544 <__vfprintf+0x1f4>
   10687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1068e:	00 00 
   10690:	48 89 c3             	mov    %rax,%rbx
   10693:	e9 0f fe ff ff       	jmp    104a7 <__vfprintf+0x157>
   10698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1069f:	00 
   106a0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   106a5:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   106ac:	00 
   106ad:	e8 7e fc ff ff       	call   10330 <__sprint.part.0>
   106b2:	85 c0                	test   %eax,%eax
   106b4:	75 2a                	jne    106e0 <__vfprintf+0x390>
   106b6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   106bb:	eb b3                	jmp    10670 <__vfprintf+0x320>
   106bd:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   106c4:	85 c0                	test   %eax,%eax
   106c6:	0f 85 f7 24 00 00    	jne    12bc3 <__vfprintf+0x2873>
   106cc:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   106d3:	00 00 00 00 
   106d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   106de:	00 00 
   106e0:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   106e5:	f6 40 10 40          	testb  $0x40,0x10(%rax)
   106e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   106ee:	0f 44 44 24 28       	cmove  0x28(%rsp),%eax
   106f3:	89 44 24 28          	mov    %eax,0x28(%rsp)
   106f7:	e9 f7 fe ff ff       	jmp    105f3 <__vfprintf+0x2a3>
   106fc:	0f 1f 40 00          	nopl   0x0(%rax)
   10700:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10705:	85 db                	test   %ebx,%ebx
   10707:	74 b4                	je     106bd <__vfprintf+0x36d>
   10709:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   10710:	00 
   10711:	4c 8d 84 24 40 02 00 	lea    0x240(%rsp),%r8
   10718:	00 
   10719:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   10720:	00 
   10721:	88 9c 24 40 02 00 00 	mov    %bl,0x240(%rsp)
   10728:	bb 01 00 00 00       	mov    $0x1,%ebx
   1072d:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   10734:	00 
   10735:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   1073c:	00 
   1073d:	0f 1f 00             	nopl   (%rax)
   10740:	44 8b 24 24          	mov    (%rsp),%r12d
   10744:	8d 43 02             	lea    0x2(%rbx),%eax
   10747:	84 d2                	test   %dl,%dl
   10749:	0f 45 d8             	cmovne %eax,%ebx
   1074c:	41 81 e4 84 00 00 00 	and    $0x84,%r12d
   10753:	75 0e                	jne    10763 <__vfprintf+0x413>
   10755:	8b 6c 24 2c          	mov    0x2c(%rsp),%ebp
   10759:	29 dd                	sub    %ebx,%ebp
   1075b:	85 ed                	test   %ebp,%ebp
   1075d:	0f 8f 4d 11 00 00    	jg     118b0 <__vfprintf+0x1560>
   10763:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   1076a:	00 
   1076b:	74 5b                	je     107c8 <__vfprintf+0x478>
   1076d:	48 8d 84 24 b3 00 00 	lea    0xb3(%rsp),%rax
   10774:	00 
   10775:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   1077c:	00 
   1077d:	49 83 c2 10          	add    $0x10,%r10
   10781:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   10785:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1078c:	8d 50 01             	lea    0x1(%rax),%edx
   1078f:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   10796:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1079d:	83 c0 01             	add    $0x1,%eax
   107a0:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   107a7:	83 f8 07             	cmp    $0x7,%eax
   107aa:	7e 1c                	jle    107c8 <__vfprintf+0x478>
   107ac:	85 d2                	test   %edx,%edx
   107ae:	0f 85 14 15 00 00    	jne    11cc8 <__vfprintf+0x1978>
   107b4:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   107bb:	00 00 00 00 
   107bf:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   107c4:	0f 1f 40 00          	nopl   0x0(%rax)
   107c8:	80 bc 24 31 02 00 00 	cmpb   $0x0,0x231(%rsp)
   107cf:	00 
   107d0:	74 66                	je     10838 <__vfprintf+0x4e8>
   107d2:	48 8d 84 24 30 02 00 	lea    0x230(%rsp),%rax
   107d9:	00 
   107da:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   107e1:	00 
   107e2:	49 83 c2 10          	add    $0x10,%r10
   107e6:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   107ea:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   107f1:	c6 84 24 30 02 00 00 	movb   $0x30,0x230(%rsp)
   107f8:	30 
   107f9:	8d 50 02             	lea    0x2(%rax),%edx
   107fc:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   10803:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1080a:	83 c0 01             	add    $0x1,%eax
   1080d:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   10814:	83 f8 07             	cmp    $0x7,%eax
   10817:	7e 1f                	jle    10838 <__vfprintf+0x4e8>
   10819:	85 d2                	test   %edx,%edx
   1081b:	0f 85 df 14 00 00    	jne    11d00 <__vfprintf+0x19b0>
   10821:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   10828:	00 00 00 00 
   1082c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   10831:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10838:	41 81 fc 80 00 00 00 	cmp    $0x80,%r12d
   1083f:	0f 84 db 0d 00 00    	je     11620 <__vfprintf+0x12d0>
   10845:	44 8b 7c 24 48       	mov    0x48(%rsp),%r15d
   1084a:	44 2b 7c 24 40       	sub    0x40(%rsp),%r15d
   1084f:	45 85 ff             	test   %r15d,%r15d
   10852:	0f 8f 90 0c 00 00    	jg     114e8 <__vfprintf+0x1198>
   10858:	f7 04 24 00 01 00 00 	testl  $0x100,(%rsp)
   1085f:	0f 85 2b 0a 00 00    	jne    11290 <__vfprintf+0xf40>
   10865:	48 63 44 24 40       	movslq 0x40(%rsp),%rax
   1086a:	4d 89 02             	mov    %r8,(%r10)
   1086d:	48 89 c1             	mov    %rax,%rcx
   10870:	49 89 42 08          	mov    %rax,0x8(%r10)
   10874:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   1087b:	03 8c 24 fc 00 00 00 	add    0xfc(%rsp),%ecx
   10882:	83 c0 01             	add    $0x1,%eax
   10885:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   1088c:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   10893:	83 f8 07             	cmp    $0x7,%eax
   10896:	0f 8e 3c 0c 00 00    	jle    114d8 <__vfprintf+0x1188>
   1089c:	85 c9                	test   %ecx,%ecx
   1089e:	0f 85 e8 0f 00 00    	jne    1188c <__vfprintf+0x153c>
   108a4:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   108ab:	00 00 00 00 
   108af:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   108b4:	f6 04 24 04          	testb  $0x4,(%rsp)
   108b8:	74 11                	je     108cb <__vfprintf+0x57b>
   108ba:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
   108bf:	41 29 dc             	sub    %ebx,%r12d
   108c2:	45 85 e4             	test   %r12d,%r12d
   108c5:	0f 8f 35 11 00 00    	jg     11a00 <__vfprintf+0x16b0>
   108cb:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   108cf:	39 d8                	cmp    %ebx,%eax
   108d1:	0f 4d d8             	cmovge %eax,%ebx
   108d4:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   108d9:	2b 44 24 28          	sub    0x28(%rsp),%eax
   108dd:	39 c3                	cmp    %eax,%ebx
   108df:	0f 8f fb fc ff ff    	jg     105e0 <__vfprintf+0x290>
   108e5:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   108ec:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   108f0:	85 d2                	test   %edx,%edx
   108f2:	0f 85 80 0e 00 00    	jne    11778 <__vfprintf+0x1428>
   108f8:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   108ff:	00 00 00 00 
   10903:	e9 58 fb ff ff       	jmp    10460 <__vfprintf+0x110>
   10908:	83 fb 61             	cmp    $0x61,%ebx
   1090b:	ba 78 00 00 00       	mov    $0x78,%edx
   10910:	b8 58 00 00 00       	mov    $0x58,%eax
   10915:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1091a:	0f 44 c2             	cmove  %edx,%eax
   1091d:	48 8d 0d 0c 13 01 00 	lea    0x1130c(%rip),%rcx        # 21c30 <xdigs_upper.3330>
   10924:	48 8d 15 15 13 01 00 	lea    0x11315(%rip),%rdx        # 21c40 <xdigs_lower.3329>
   1092b:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10930:	48 0f 45 d1          	cmovne %rcx,%rdx
   10934:	b9 50 00 00 00       	mov    $0x50,%ecx
   10939:	88 84 24 31 02 00 00 	mov    %al,0x231(%rsp)
   10940:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
   10947:	00 
   10948:	ba 70 00 00 00       	mov    $0x70,%edx
   1094d:	0f 45 d1             	cmovne %ecx,%edx
   10950:	41 81 fb 00 00 00 80 	cmp    $0x80000000,%r11d
   10957:	41 83 d3 00          	adc    $0x0,%r11d
   1095b:	88 94 24 8b 00 00 00 	mov    %dl,0x8b(%rsp)
   10962:	48 85 ff             	test   %rdi,%rdi
   10965:	74 19                	je     10980 <__vfprintf+0x630>
   10967:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1096c:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   10971:	e8 5a 31 00 00       	call   13ad0 <__freedtoa>
   10976:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1097b:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   10980:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   10984:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1098b:	00 
   1098c:	8d 69 01             	lea    0x1(%rcx),%ebp
   1098f:	f6 04 24 08          	testb  $0x8,(%rsp)
   10993:	0f 84 29 1d 00 00    	je     126c2 <__vfprintf+0x2372>
   10999:	48 85 c0             	test   %rax,%rax
   1099c:	0f 84 66 24 00 00    	je     12e08 <__vfprintf+0x2ab8>
   109a2:	48 63 d1             	movslq %ecx,%rdx
   109a5:	48 c1 e2 04          	shl    $0x4,%rdx
   109a9:	db 2c 10             	fldt   (%rax,%rdx,1)
   109ac:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   109b1:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   109b8:	00 
   109b9:	44 89 de             	mov    %r11d,%esi
   109bc:	d9 c0                	fld    %st(0)
   109be:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   109c5:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   109cc:	00 
   109cd:	48 83 ec 10          	sub    $0x10,%rsp
   109d1:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   109d8:	00 
   109d9:	4c 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%r8
   109e0:	00 
   109e1:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   109e6:	db 3c 24             	fstpt  (%rsp)
   109e9:	e8 92 4a 00 00       	call   15480 <__hldtoa>
   109ee:	5e                   	pop    %rsi
   109ef:	5f                   	pop    %rdi
   109f0:	48 85 c0             	test   %rax,%rax
   109f3:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   109f8:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   109fd:	49 89 c0             	mov    %rax,%r8
   10a00:	0f 84 24 1d 00 00    	je     1272a <__vfprintf+0x23da>
   10a06:	45 85 db             	test   %r11d,%r11d
   10a09:	79 0b                	jns    10a16 <__vfprintf+0x6c6>
   10a0b:	44 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%r11d
   10a12:	00 
   10a13:	45 29 c3             	sub    %r8d,%r11d
   10a16:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   10a1d:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   10a24:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   10a2a:	0f 84 4d 20 00 00    	je     12a7d <__vfprintf+0x272d>
   10a30:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   10a37:	00 
   10a38:	85 c0                	test   %eax,%eax
   10a3a:	0f 85 fb 00 00 00    	jne    10b3b <__vfprintf+0x7eb>
   10a40:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   10a44:	e9 0a 01 00 00       	jmp    10b53 <__vfprintf+0x803>
   10a49:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10a4e:	88 9c 24 8b 00 00 00 	mov    %bl,0x8b(%rsp)
   10a55:	45 85 db             	test   %r11d,%r11d
   10a58:	0f 88 ac 1d 00 00    	js     1280a <__vfprintf+0x24ba>
   10a5e:	41 83 c3 01          	add    $0x1,%r11d
   10a62:	45 85 db             	test   %r11d,%r11d
   10a65:	b8 06 00 00 00       	mov    $0x6,%eax
   10a6a:	44 0f 48 d8          	cmovs  %eax,%r11d
   10a6e:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   10a73:	48 85 ff             	test   %rdi,%rdi
   10a76:	74 19                	je     10a91 <__vfprintf+0x741>
   10a78:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   10a7d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   10a82:	e8 49 30 00 00       	call   13ad0 <__freedtoa>
   10a87:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   10a8c:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   10a91:	8b 74 24 38          	mov    0x38(%rsp),%esi
   10a95:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   10a9c:	00 
   10a9d:	8d 6e 01             	lea    0x1(%rsi),%ebp
   10aa0:	f6 04 24 08          	testb  $0x8,(%rsp)
   10aa4:	0f 84 6c 13 00 00    	je     11e16 <__vfprintf+0x1ac6>
   10aaa:	48 85 c0             	test   %rax,%rax
   10aad:	0f 84 32 1d 00 00    	je     127e5 <__vfprintf+0x2495>
   10ab3:	48 63 d6             	movslq %esi,%rdx
   10ab6:	48 c1 e2 04          	shl    $0x4,%rdx
   10aba:	db 2c 10             	fldt   (%rax,%rdx,1)
   10abd:	31 f6                	xor    %esi,%esi
   10abf:	44 89 da             	mov    %r11d,%edx
   10ac2:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   10ac9:	00 
   10aca:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   10acf:	40 0f 94 c6          	sete   %sil
   10ad3:	4c 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%r8
   10ada:	00 
   10adb:	48 8d 8c 24 bc 00 00 	lea    0xbc(%rsp),%rcx
   10ae2:	00 
   10ae3:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   10ae8:	83 c6 02             	add    $0x2,%esi
   10aeb:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
   10af2:	00 
   10af3:	4c 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%r9
   10afa:	00 
   10afb:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   10b02:	e8 09 4c 00 00       	call   15710 <__ldtoa>
   10b07:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   10b0c:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   10b11:	48 85 c0             	test   %rax,%rax
   10b14:	49 89 c0             	mov    %rax,%r8
   10b17:	0f 84 0d 1c 00 00    	je     1272a <__vfprintf+0x23da>
   10b1d:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   10b24:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   10b2b:	00 
   10b2c:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   10b33:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   10b37:	85 c0                	test   %eax,%eax
   10b39:	74 0c                	je     10b47 <__vfprintf+0x7f7>
   10b3b:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   10b42:	2d 
   10b43:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   10b47:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   10b4d:	0f 84 96 14 00 00    	je     11fe9 <__vfprintf+0x1c99>
   10b53:	8b 0c 24             	mov    (%rsp),%ecx
   10b56:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   10b5d:	00 
   10b5e:	83 e3 df             	and    $0xffffffdf,%ebx
   10b61:	41 89 cc             	mov    %ecx,%r12d
   10b64:	4c 29 c0             	sub    %r8,%rax
   10b67:	89 84 24 98 00 00 00 	mov    %eax,0x98(%rsp)
   10b6e:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   10b75:	83 fb 47             	cmp    $0x47,%ebx
   10b78:	75 17                	jne    10b91 <__vfprintf+0x841>
   10b7a:	83 e1 01             	and    $0x1,%ecx
   10b7d:	83 fe fd             	cmp    $0xfffffffd,%esi
   10b80:	7c 09                	jl     10b8b <__vfprintf+0x83b>
   10b82:	41 39 f3             	cmp    %esi,%r11d
   10b85:	0f 8d 1d 21 00 00    	jge    12ca8 <__vfprintf+0x2958>
   10b8b:	85 c9                	test   %ecx,%ecx
   10b8d:	44 0f 44 d8          	cmove  %eax,%r11d
   10b91:	8b 0c 24             	mov    (%rsp),%ecx
   10b94:	44 89 df             	mov    %r11d,%edi
   10b97:	83 e1 01             	and    $0x1,%ecx
   10b9a:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   10ba1:	00 
   10ba2:	0f 85 9e 16 00 00    	jne    12246 <__vfprintf+0x1ef6>
   10ba8:	85 f6                	test   %esi,%esi
   10baa:	bb 01 00 00 00       	mov    $0x1,%ebx
   10baf:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   10bb6:	00 
   10bb7:	0f 4f de             	cmovg  %esi,%ebx
   10bba:	09 f9                	or     %edi,%ecx
   10bbc:	41 89 cb             	mov    %ecx,%r11d
   10bbf:	0f 85 ea 13 00 00    	jne    11faf <__vfprintf+0x1c5f>
   10bc5:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   10bc9:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   10bd0:	00 
   10bd1:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   10bd6:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   10bdd:	44 89 24 24          	mov    %r12d,(%rsp)
   10be1:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   10be8:	00 
   10be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10bf0:	3c 01                	cmp    $0x1,%al
   10bf2:	83 db ff             	sbb    $0xffffffff,%ebx
   10bf5:	e9 46 fb ff ff       	jmp    10740 <__vfprintf+0x3f0>
   10bfa:	8d 43 fe             	lea    -0x2(%rbx),%eax
   10bfd:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10c02:	88 84 24 8b 00 00 00 	mov    %al,0x8b(%rsp)
   10c09:	45 85 db             	test   %r11d,%r11d
   10c0c:	0f 85 50 fe ff ff    	jne    10a62 <__vfprintf+0x712>
   10c12:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   10c18:	e9 51 fe ff ff       	jmp    10a6e <__vfprintf+0x71e>
   10c1d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10c22:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   10c29:	00 
   10c2a:	e9 33 fe ff ff       	jmp    10a62 <__vfprintf+0x712>
   10c2f:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10c34:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   10c39:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   10c40:	00 
   10c41:	8d 50 01             	lea    0x1(%rax),%edx
   10c44:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   10c4b:	0f 84 d7 14 00 00    	je     12128 <__vfprintf+0x1dd8>
   10c51:	48 85 c9             	test   %rcx,%rcx
   10c54:	0f 84 b8 20 00 00    	je     12d12 <__vfprintf+0x29c2>
   10c5a:	48 c1 e0 04          	shl    $0x4,%rax
   10c5e:	48 8b 04 01          	mov    (%rcx,%rax,1),%rax
   10c62:	48 89 c1             	mov    %rax,%rcx
   10c65:	48 85 c0             	test   %rax,%rax
   10c68:	0f 88 bf 15 00 00    	js     1222d <__vfprintf+0x1edd>
   10c6e:	45 85 db             	test   %r11d,%r11d
   10c71:	0f 88 3c 11 00 00    	js     11db3 <__vfprintf+0x1a63>
   10c77:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   10c7e:	45 85 db             	test   %r11d,%r11d
   10c81:	0f 85 2c 11 00 00    	jne    11db3 <__vfprintf+0x1a63>
   10c87:	48 85 c9             	test   %rcx,%rcx
   10c8a:	0f 85 23 11 00 00    	jne    11db3 <__vfprintf+0x1a63>
   10c90:	89 54 24 38          	mov    %edx,0x38(%rsp)
   10c94:	0f 1f 40 00          	nopl   0x0(%rax)
   10c98:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   10c9f:	00 
   10ca0:	31 db                	xor    %ebx,%ebx
   10ca2:	45 31 db             	xor    %r11d,%r11d
   10ca5:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   10cac:	00 
   10cad:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   10cb4:	00 
   10cb5:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   10cbc:	00 
   10cbd:	4c 8d 84 24 a4 02 00 	lea    0x2a4(%rsp),%r8
   10cc4:	00 
   10cc5:	e9 26 ff ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   10cca:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   10cd1:	00 
   10cd2:	3c 24                	cmp    $0x24,%al
   10cd4:	0f 84 08 1f 00 00    	je     12be2 <__vfprintf+0x2892>
   10cda:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   10cdf:	8d 48 01             	lea    0x1(%rax),%ecx
   10ce2:	48 85 d2             	test   %rdx,%rdx
   10ce5:	0f 84 ff 22 00 00    	je     12fea <__vfprintf+0x2c9a>
   10ceb:	48 c1 e0 04          	shl    $0x4,%rax
   10cef:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   10cf2:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   10cf6:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   10cfb:	45 85 c0             	test   %r8d,%r8d
   10cfe:	0f 89 eb 21 00 00    	jns    12eef <__vfprintf+0x2b9f>
   10d04:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   10d08:	3d 00 00 00 80       	cmp    $0x80000000,%eax
   10d0d:	0f 84 cd f8 ff ff    	je     105e0 <__vfprintf+0x290>
   10d13:	f7 d8                	neg    %eax
   10d15:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   10d19:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   10d1d:	83 0c 24 04          	orl    $0x4,(%rsp)
   10d21:	41 0f be 1c 24       	movsbl (%r12),%ebx
   10d26:	e9 4e f8 ff ff       	jmp    10579 <__vfprintf+0x229>
   10d2b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   10d30:	80 fb 6c             	cmp    $0x6c,%bl
   10d33:	0f 84 31 1d 00 00    	je     12a6a <__vfprintf+0x271a>
   10d39:	83 0c 24 10          	orl    $0x10,(%rsp)
   10d3d:	e9 37 f8 ff ff       	jmp    10579 <__vfprintf+0x229>
   10d42:	83 0c 24 10          	orl    $0x10,(%rsp)
   10d46:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10d4b:	e9 e4 fe ff ff       	jmp    10c34 <__vfprintf+0x8e4>
   10d50:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10d54:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10d59:	44 8d 60 01          	lea    0x1(%rax),%r12d
   10d5d:	f6 04 24 10          	testb  $0x10,(%rsp)
   10d61:	0f 84 0b 18 00 00    	je     12572 <__vfprintf+0x2222>
   10d67:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   10d6c:	48 85 ff             	test   %rdi,%rdi
   10d6f:	74 19                	je     10d8a <__vfprintf+0xa3a>
   10d71:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   10d76:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   10d7b:	e8 f0 c3 ff ff       	call   d170 <dlfree>
   10d80:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   10d85:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   10d8a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   10d91:	00 
   10d92:	48 85 d2             	test   %rdx,%rdx
   10d95:	0f 84 2c 21 00 00    	je     12ec7 <__vfprintf+0x2b77>
   10d9b:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   10da0:	48 c1 e0 04          	shl    $0x4,%rax
   10da4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   10da8:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   10dad:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   10db3:	0f 84 96 1d 00 00    	je     12b4f <__vfprintf+0x27ff>
   10db9:	45 85 db             	test   %r11d,%r11d
   10dbc:	0f 88 2e 23 00 00    	js     130f0 <__vfprintf+0x2da0>
   10dc2:	4d 63 fb             	movslq %r11d,%r15
   10dc5:	41 83 fb 7f          	cmp    $0x7f,%r11d
   10dc9:	0f 8f 57 22 00 00    	jg     13026 <__vfprintf+0x2cd6>
   10dcf:	49 8d 7f 01          	lea    0x1(%r15),%rdi
   10dd3:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   10dd8:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   10ddd:	e8 1e a9 ff ff       	call   b700 <dlmalloc>
   10de2:	48 85 c0             	test   %rax,%rax
   10de5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10dea:	0f 84 e3 22 00 00    	je     130d3 <__vfprintf+0x2d83>
   10df0:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   10df5:	48 8d 9c 24 10 01 00 	lea    0x110(%rsp),%rbx
   10dfc:	00 
   10dfd:	31 f6                	xor    %esi,%esi
   10dff:	ba 08 00 00 00       	mov    $0x8,%edx
   10e04:	48 89 df             	mov    %rbx,%rdi
   10e07:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   10e0e:	00 
   10e0f:	e8 7c db ff ff       	call   e990 <memset>
   10e14:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   10e19:	48 89 d9             	mov    %rbx,%rcx
   10e1c:	4c 89 fa             	mov    %r15,%rdx
   10e1f:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   10e26:	00 
   10e27:	4c 89 c7             	mov    %r8,%rdi
   10e2a:	e8 71 59 00 00       	call   167a0 <wcsrtombs>
   10e2f:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   10e34:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   10e39:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   10e3d:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   10e42:	0f 84 1e 25 00 00    	je     13366 <__vfprintf+0x3016>
   10e48:	41 c6 04 00 00       	movb   $0x0,(%r8,%rax,1)
   10e4d:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   10e52:	e9 47 17 00 00       	jmp    1259e <__vfprintf+0x224e>
   10e57:	81 0c 24 00 02 00 00 	orl    $0x200,(%rsp)
   10e5e:	41 0f be 1c 24       	movsbl (%r12),%ebx
   10e63:	e9 11 f7 ff ff       	jmp    10579 <__vfprintf+0x229>
   10e68:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   10e6c:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   10e73:	00 
   10e74:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10e79:	8d 71 01             	lea    0x1(%rcx),%esi
   10e7c:	48 85 c0             	test   %rax,%rax
   10e7f:	0f 84 3f 1e 00 00    	je     12cc4 <__vfprintf+0x2974>
   10e85:	48 63 d1             	movslq %ecx,%rdx
   10e88:	48 c1 e2 04          	shl    $0x4,%rdx
   10e8c:	48 8b 0c 10          	mov    (%rax,%rdx,1),%rcx
   10e90:	c6 84 24 31 02 00 00 	movb   $0x78,0x231(%rsp)
   10e97:	78 
   10e98:	48 8d 05 a1 0d 01 00 	lea    0x10da1(%rip),%rax        # 21c40 <xdigs_lower.3329>
   10e9f:	89 74 24 38          	mov    %esi,0x38(%rsp)
   10ea3:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   10eaa:	00 
   10eab:	b8 02 00 00 00       	mov    $0x2,%eax
   10eb0:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   10eb7:	00 
   10eb8:	45 85 db             	test   %r11d,%r11d
   10ebb:	78 1b                	js     10ed8 <__vfprintf+0xb88>
   10ebd:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   10ec4:	48 85 c9             	test   %rcx,%rcx
   10ec7:	75 0f                	jne    10ed8 <__vfprintf+0xb88>
   10ec9:	45 85 db             	test   %r11d,%r11d
   10ecc:	0f 84 c6 fd ff ff    	je     10c98 <__vfprintf+0x948>
   10ed2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ed8:	83 f8 01             	cmp    $0x1,%eax
   10edb:	0f 84 d6 0e 00 00    	je     11db7 <__vfprintf+0x1a67>
   10ee1:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   10ee8:	00 
   10ee9:	49 89 d8             	mov    %rbx,%r8
   10eec:	83 f8 02             	cmp    $0x2,%eax
   10eef:	75 5f                	jne    10f50 <__vfprintf+0xc00>
   10ef1:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   10ef8:	00 
   10ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f00:	48 89 c8             	mov    %rcx,%rax
   10f03:	49 83 e8 01          	sub    $0x1,%r8
   10f07:	83 e0 0f             	and    $0xf,%eax
   10f0a:	48 c1 e9 04          	shr    $0x4,%rcx
   10f0e:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   10f12:	41 88 00             	mov    %al,(%r8)
   10f15:	75 e9                	jne    10f00 <__vfprintf+0xbb0>
   10f17:	4c 29 c3             	sub    %r8,%rbx
   10f1a:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   10f1e:	83 fb 64             	cmp    $0x64,%ebx
   10f21:	0f 8f 7f 1b 00 00    	jg     12aa6 <__vfprintf+0x2756>
   10f27:	41 39 db             	cmp    %ebx,%r11d
   10f2a:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   10f2f:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   10f36:	00 
   10f37:	41 0f 4d db          	cmovge %r11d,%ebx
   10f3b:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   10f42:	00 
   10f43:	e9 a8 fc ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   10f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10f4f:	00 
   10f50:	89 c8                	mov    %ecx,%eax
   10f52:	4c 89 c2             	mov    %r8,%rdx
   10f55:	49 83 e8 01          	sub    $0x1,%r8
   10f59:	83 e0 07             	and    $0x7,%eax
   10f5c:	83 c0 30             	add    $0x30,%eax
   10f5f:	48 c1 e9 03          	shr    $0x3,%rcx
   10f63:	41 88 00             	mov    %al,(%r8)
   10f66:	75 e8                	jne    10f50 <__vfprintf+0xc00>
   10f68:	3c 30                	cmp    $0x30,%al
   10f6a:	74 ab                	je     10f17 <__vfprintf+0xbc7>
   10f6c:	f6 04 24 01          	testb  $0x1,(%rsp)
   10f70:	74 a5                	je     10f17 <__vfprintf+0xbc7>
   10f72:	41 c6 40 ff 30       	movb   $0x30,-0x1(%r8)
   10f77:	4c 8d 42 fe          	lea    -0x2(%rdx),%r8
   10f7b:	eb 9a                	jmp    10f17 <__vfprintf+0xbc7>
   10f7d:	83 0c 24 20          	orl    $0x20,(%rsp)
   10f81:	41 0f be 1c 24       	movsbl (%r12),%ebx
   10f86:	e9 ee f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   10f8b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10f8f:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   10f94:	44 8d 78 01          	lea    0x1(%rax),%r15d
   10f98:	f6 04 24 10          	testb  $0x10,(%rsp)
   10f9c:	0f 85 64 1c 00 00    	jne    12c06 <__vfprintf+0x28b6>
   10fa2:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   10fa9:	00 
   10faa:	48 85 d2             	test   %rdx,%rdx
   10fad:	0f 84 22 1e 00 00    	je     12dd5 <__vfprintf+0x2a85>
   10fb3:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   10fb8:	48 c1 e0 04          	shl    $0x4,%rax
   10fbc:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   10fc0:	88 84 24 40 02 00 00 	mov    %al,0x240(%rsp)
   10fc7:	bb 01 00 00 00       	mov    $0x1,%ebx
   10fcc:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   10fd3:	00 
   10fd4:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   10fdb:	00 
   10fdc:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   10fe3:	00 
   10fe4:	4d 89 e0             	mov    %r12,%r8
   10fe7:	44 89 7c 24 38       	mov    %r15d,0x38(%rsp)
   10fec:	e9 3c f7 ff ff       	jmp    1072d <__vfprintf+0x3dd>
   10ff1:	81 0c 24 00 04 00 00 	orl    $0x400,(%rsp)
   10ff8:	41 0f be 1c 24       	movsbl (%r12),%ebx
   10ffd:	e9 77 f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   11002:	81 0c 24 00 10 00 00 	orl    $0x1000,(%rsp)
   11009:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1100e:	e9 66 f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   11013:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   1101a:	00 
   1101b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11020:	0f 85 53 f5 ff ff    	jne    10579 <__vfprintf+0x229>
   11026:	c6 84 24 b3 00 00 00 	movb   $0x20,0xb3(%rsp)
   1102d:	20 
   1102e:	e9 46 f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   11033:	83 0c 24 01          	orl    $0x1,(%rsp)
   11037:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1103c:	e9 38 f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   11041:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11046:	e9 2e f5 ff ff       	jmp    10579 <__vfprintf+0x229>
   1104b:	41 0f be 14 24       	movsbl (%r12),%edx
   11050:	4d 89 e7             	mov    %r12,%r15
   11053:	31 db                	xor    %ebx,%ebx
   11055:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   11058:	89 d0                	mov    %edx,%eax
   1105a:	83 f9 09             	cmp    $0x9,%ecx
   1105d:	76 2f                	jbe    1108e <__vfprintf+0xd3e>
   1105f:	e9 66 fc ff ff       	jmp    10cca <__vfprintf+0x97a>
   11064:	0f 1f 40 00          	nopl   0x0(%rax)
   11068:	49 83 c7 01          	add    $0x1,%r15
   1106c:	8d 5c 02 d0          	lea    -0x30(%rdx,%rax,1),%ebx
   11070:	41 0f be 17          	movsbl (%r15),%edx
   11074:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   11077:	89 d0                	mov    %edx,%eax
   11079:	83 f9 09             	cmp    $0x9,%ecx
   1107c:	0f 87 48 fc ff ff    	ja     10cca <__vfprintf+0x97a>
   11082:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   11088:	0f 8f 52 f5 ff ff    	jg     105e0 <__vfprintf+0x290>
   1108e:	8d 04 9b             	lea    (%rbx,%rbx,4),%eax
   11091:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   11096:	01 c0                	add    %eax,%eax
   11098:	29 d1                	sub    %edx,%ecx
   1109a:	39 c1                	cmp    %eax,%ecx
   1109c:	7d ca                	jge    11068 <__vfprintf+0xd18>
   1109e:	e9 3d f5 ff ff       	jmp    105e0 <__vfprintf+0x290>
   110a3:	41 0f be 1c 24       	movsbl (%r12),%ebx
   110a8:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   110ad:	83 fb 2a             	cmp    $0x2a,%ebx
   110b0:	0f 84 7a 23 00 00    	je     13430 <__vfprintf+0x30e0>
   110b6:	8d 43 d0             	lea    -0x30(%rbx),%eax
   110b9:	83 f8 09             	cmp    $0x9,%eax
   110bc:	0f 87 b3 21 00 00    	ja     13275 <__vfprintf+0x2f25>
   110c2:	b8 2f 00 00 80       	mov    $0x8000002f,%eax
   110c7:	39 d8                	cmp    %ebx,%eax
   110c9:	0f 88 11 f5 ff ff    	js     105e0 <__vfprintf+0x290>
   110cf:	31 c0                	xor    %eax,%eax
   110d1:	eb 27                	jmp    110fa <__vfprintf+0xdaa>
   110d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   110d8:	41 81 fc cc cc cc 0c 	cmp    $0xccccccc,%r12d
   110df:	0f 8f fb f4 ff ff    	jg     105e0 <__vfprintf+0x290>
   110e5:	43 8d 04 a4          	lea    (%r12,%r12,4),%eax
   110e9:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   110ee:	01 c0                	add    %eax,%eax
   110f0:	29 da                	sub    %ebx,%edx
   110f2:	39 c2                	cmp    %eax,%edx
   110f4:	0f 8c e6 f4 ff ff    	jl     105e0 <__vfprintf+0x290>
   110fa:	49 83 c7 01          	add    $0x1,%r15
   110fe:	44 8d 64 03 d0       	lea    -0x30(%rbx,%rax,1),%r12d
   11103:	41 0f be 5f ff       	movsbl -0x1(%r15),%ebx
   11108:	8d 43 d0             	lea    -0x30(%rbx),%eax
   1110b:	83 f8 09             	cmp    $0x9,%eax
   1110e:	76 c8                	jbe    110d8 <__vfprintf+0xd88>
   11110:	83 fb 24             	cmp    $0x24,%ebx
   11113:	0f 84 f0 23 00 00    	je     13509 <__vfprintf+0x31b9>
   11119:	45 89 e3             	mov    %r12d,%r11d
   1111c:	4d 89 fc             	mov    %r15,%r12
   1111f:	e9 59 f4 ff ff       	jmp    1057d <__vfprintf+0x22d>
   11124:	81 0c 24 80 00 00 00 	orl    $0x80,(%rsp)
   1112b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11130:	e9 44 f4 ff ff       	jmp    10579 <__vfprintf+0x229>
   11135:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1113a:	80 fb 68             	cmp    $0x68,%bl
   1113d:	0f 84 4d 19 00 00    	je     12a90 <__vfprintf+0x2740>
   11143:	83 0c 24 40          	orl    $0x40,(%rsp)
   11147:	e9 2d f4 ff ff       	jmp    10579 <__vfprintf+0x229>
   1114c:	83 0c 24 08          	orl    $0x8,(%rsp)
   11150:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11155:	e9 1f f4 ff ff       	jmp    10579 <__vfprintf+0x229>
   1115a:	c6 84 24 b3 00 00 00 	movb   $0x2b,0xb3(%rsp)
   11161:	2b 
   11162:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11167:	e9 0d f4 ff ff       	jmp    10579 <__vfprintf+0x229>
   1116c:	83 0c 24 10          	orl    $0x10,(%rsp)
   11170:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11175:	8b 74 24 38          	mov    0x38(%rsp),%esi
   11179:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   11180:	00 
   11181:	8d 46 01             	lea    0x1(%rsi),%eax
   11184:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   1118b:	0f 84 37 0f 00 00    	je     120c8 <__vfprintf+0x1d78>
   11191:	48 85 c9             	test   %rcx,%rcx
   11194:	0f 84 bf 16 00 00    	je     12859 <__vfprintf+0x2509>
   1119a:	48 63 d6             	movslq %esi,%rdx
   1119d:	48 c1 e2 04          	shl    $0x4,%rdx
   111a1:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   111a5:	89 44 24 38          	mov    %eax,0x38(%rsp)
   111a9:	31 c0                	xor    %eax,%eax
   111ab:	e9 00 fd ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   111b0:	83 0c 24 10          	orl    $0x10,(%rsp)
   111b4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   111b9:	8b 74 24 38          	mov    0x38(%rsp),%esi
   111bd:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   111c4:	00 
   111c5:	8d 46 01             	lea    0x1(%rsi),%eax
   111c8:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   111cf:	0f 84 ab 0f 00 00    	je     12180 <__vfprintf+0x1e30>
   111d5:	48 85 c9             	test   %rcx,%rcx
   111d8:	0f 84 ad 16 00 00    	je     1288b <__vfprintf+0x253b>
   111de:	48 63 d6             	movslq %esi,%rdx
   111e1:	48 c1 e2 04          	shl    $0x4,%rdx
   111e5:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   111e9:	89 44 24 38          	mov    %eax,0x38(%rsp)
   111ed:	b8 01 00 00 00       	mov    $0x1,%eax
   111f2:	e9 b9 fc ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   111f7:	48 8d 05 42 0a 01 00 	lea    0x10a42(%rip),%rax        # 21c40 <xdigs_lower.3329>
   111fe:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11203:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1120a:	00 
   1120b:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1120f:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   11216:	00 
   11217:	8d 46 01             	lea    0x1(%rsi),%eax
   1121a:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   11221:	0f 84 4a 0e 00 00    	je     12071 <__vfprintf+0x1d21>
   11227:	48 85 c9             	test   %rcx,%rcx
   1122a:	0f 84 90 16 00 00    	je     128c0 <__vfprintf+0x2570>
   11230:	48 63 d6             	movslq %esi,%rdx
   11233:	48 c1 e2 04          	shl    $0x4,%rdx
   11237:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   1123b:	f6 04 24 01          	testb  $0x1,(%rsp)
   1123f:	0f 84 87 0c 00 00    	je     11ecc <__vfprintf+0x1b7c>
   11245:	48 85 c9             	test   %rcx,%rcx
   11248:	0f 84 7e 0c 00 00    	je     11ecc <__vfprintf+0x1b7c>
   1124e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   11252:	b8 02 00 00 00       	mov    $0x2,%eax
   11257:	88 9c 24 31 02 00 00 	mov    %bl,0x231(%rsp)
   1125e:	e9 4d fc ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   11263:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11268:	e9 08 ff ff ff       	jmp    11175 <__vfprintf+0xe25>
   1126d:	48 8d 05 bc 09 01 00 	lea    0x109bc(%rip),%rax        # 21c30 <xdigs_upper.3330>
   11274:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11279:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   11280:	00 
   11281:	eb 88                	jmp    1120b <__vfprintf+0xebb>
   11283:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11288:	e9 2c ff ff ff       	jmp    111b9 <__vfprintf+0xe69>
   1128d:	0f 1f 00             	nopl   (%rax)
   11290:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   11297:	00 
   11298:	0f 85 02 05 00 00    	jne    117a0 <__vfprintf+0x1450>
   1129e:	8b 8c 24 bc 00 00 00 	mov    0xbc(%rsp),%ecx
   112a5:	85 c9                	test   %ecx,%ecx
   112a7:	0f 8e 2d 0c 00 00    	jle    11eda <__vfprintf+0x1b8a>
   112ad:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   112b4:	00 
   112b5:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   112bc:	4c 29 c5             	sub    %r8,%rbp
   112bf:	39 e8                	cmp    %ebp,%eax
   112c1:	0f 4e e8             	cmovle %eax,%ebp
   112c4:	85 ed                	test   %ebp,%ebp
   112c6:	7e 50                	jle    11318 <__vfprintf+0xfc8>
   112c8:	48 63 c5             	movslq %ebp,%rax
   112cb:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   112d2:	4d 89 02             	mov    %r8,(%r10)
   112d5:	49 83 c2 10          	add    $0x10,%r10
   112d9:	49 89 42 f8          	mov    %rax,-0x8(%r10)
   112dd:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   112e4:	01 ea                	add    %ebp,%edx
   112e6:	83 c0 01             	add    $0x1,%eax
   112e9:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   112f0:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   112f7:	83 f8 07             	cmp    $0x7,%eax
   112fa:	7e 1c                	jle    11318 <__vfprintf+0xfc8>
   112fc:	85 d2                	test   %edx,%edx
   112fe:	0f 85 ac 17 00 00    	jne    12ab0 <__vfprintf+0x2760>
   11304:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1130b:	00 00 00 00 
   1130f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11314:	0f 1f 40 00          	nopl   0x0(%rax)
   11318:	85 ed                	test   %ebp,%ebp
   1131a:	b8 00 00 00 00       	mov    $0x0,%eax
   1131f:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
   11326:	00 
   11327:	0f 48 e8             	cmovs  %eax,%ebp
   1132a:	41 29 ec             	sub    %ebp,%r12d
   1132d:	45 85 e4             	test   %r12d,%r12d
   11330:	0f 8f 28 10 00 00    	jg     1235e <__vfprintf+0x200e>
   11336:	48 63 84 24 8c 00 00 	movslq 0x8c(%rsp),%rax
   1133d:	00 
   1133e:	49 01 c0             	add    %rax,%r8
   11341:	8b 04 24             	mov    (%rsp),%eax
   11344:	83 e0 01             	and    $0x1,%eax
   11347:	44 09 d8             	or     %r11d,%eax
   1134a:	0f 84 64 f5 ff ff    	je     108b4 <__vfprintf+0x564>
   11350:	48 8d 05 60 07 01 00 	lea    0x10760(%rip),%rax        # 21ab7 <_ZZ17ecall_malloc_freeE8__func__+0x2b7>
   11357:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   1135e:	00 
   1135f:	49 83 c2 10          	add    $0x10,%r10
   11363:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   11367:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1136e:	8d 50 01             	lea    0x1(%rax),%edx
   11371:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   11378:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1137f:	83 c0 01             	add    $0x1,%eax
   11382:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11389:	83 f8 07             	cmp    $0x7,%eax
   1138c:	7e 22                	jle    113b0 <__vfprintf+0x1060>
   1138e:	85 d2                	test   %edx,%edx
   11390:	0f 85 9c 16 00 00    	jne    12a32 <__vfprintf+0x26e2>
   11396:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1139d:	00 00 00 00 
   113a1:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   113a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   113ad:	00 00 00 
   113b0:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   113b7:	00 
   113b8:	4c 29 c5             	sub    %r8,%rbp
   113bb:	41 39 eb             	cmp    %ebp,%r11d
   113be:	41 0f 4e eb          	cmovle %r11d,%ebp
   113c2:	85 ed                	test   %ebp,%ebp
   113c4:	7e 3b                	jle    11401 <__vfprintf+0x10b1>
   113c6:	48 63 c5             	movslq %ebp,%rax
   113c9:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   113d0:	4d 89 02             	mov    %r8,(%r10)
   113d3:	49 89 42 08          	mov    %rax,0x8(%r10)
   113d7:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   113de:	01 ea                	add    %ebp,%edx
   113e0:	83 c0 01             	add    $0x1,%eax
   113e3:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   113ea:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   113f1:	83 f8 07             	cmp    $0x7,%eax
   113f4:	0f 8f e6 0d 00 00    	jg     121e0 <__vfprintf+0x1e90>
   113fa:	49 83 c2 10          	add    $0x10,%r10
   113fe:	41 29 eb             	sub    %ebp,%r11d
   11401:	45 85 db             	test   %r11d,%r11d
   11404:	0f 8e aa f4 ff ff    	jle    108b4 <__vfprintf+0x564>
   1140a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11411:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   11418:	41 83 fb 10          	cmp    $0x10,%r11d
   1141c:	0f 8e 5c 1d 00 00    	jle    1317e <__vfprintf+0x2e2e>
   11422:	48 8d 2d e7 8d 01 00 	lea    0x18de7(%rip),%rbp        # 2a210 <zeroes.3328>
   11429:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   1142d:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   11432:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   11439:	00 
   1143a:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   1143f:	4c 89 e3             	mov    %r12,%rbx
   11442:	49 89 ed             	mov    %rbp,%r13
   11445:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1144a:	44 89 dd             	mov    %r11d,%ebp
   1144d:	eb 12                	jmp    11461 <__vfprintf+0x1111>
   1144f:	90                   	nop
   11450:	8d 7e 02             	lea    0x2(%rsi),%edi
   11453:	49 83 c2 10          	add    $0x10,%r10
   11457:	89 d6                	mov    %edx,%esi
   11459:	83 ed 10             	sub    $0x10,%ebp
   1145c:	83 fd 10             	cmp    $0x10,%ebp
   1145f:	7e 3e                	jle    1149f <__vfprintf+0x114f>
   11461:	83 c0 10             	add    $0x10,%eax
   11464:	8d 56 01             	lea    0x1(%rsi),%edx
   11467:	4d 89 2a             	mov    %r13,(%r10)
   1146a:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   11471:	00 
   11472:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11479:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11480:	83 fa 07             	cmp    $0x7,%edx
   11483:	7e cb                	jle    11450 <__vfprintf+0x1100>
   11485:	85 c0                	test   %eax,%eax
   11487:	0f 85 0b 08 00 00    	jne    11c98 <__vfprintf+0x1948>
   1148d:	83 ed 10             	sub    $0x10,%ebp
   11490:	31 f6                	xor    %esi,%esi
   11492:	bf 01 00 00 00       	mov    $0x1,%edi
   11497:	4d 89 fa             	mov    %r15,%r10
   1149a:	83 fd 10             	cmp    $0x10,%ebp
   1149d:	7f c2                	jg     11461 <__vfprintf+0x1111>
   1149f:	41 89 eb             	mov    %ebp,%r11d
   114a2:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   114a6:	4c 89 ed             	mov    %r13,%rbp
   114a9:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   114ae:	49 63 d3             	movslq %r11d,%rdx
   114b1:	44 01 d8             	add    %r11d,%eax
   114b4:	49 89 2a             	mov    %rbp,(%r10)
   114b7:	49 89 52 08          	mov    %rdx,0x8(%r10)
   114bb:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   114c2:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   114c9:	83 ff 07             	cmp    $0x7,%edi
   114cc:	0f 8f b2 03 00 00    	jg     11884 <__vfprintf+0x1534>
   114d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   114d8:	49 83 c2 10          	add    $0x10,%r10
   114dc:	e9 d3 f3 ff ff       	jmp    108b4 <__vfprintf+0x564>
   114e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   114e8:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   114ef:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   114f6:	41 83 ff 10          	cmp    $0x10,%r15d
   114fa:	0f 8e 34 18 00 00    	jle    12d34 <__vfprintf+0x29e4>
   11500:	48 8d 2d 09 8d 01 00 	lea    0x18d09(%rip),%rbp        # 2a210 <zeroes.3328>
   11507:	89 5c 24 78          	mov    %ebx,0x78(%rsp)
   1150b:	44 89 fb             	mov    %r15d,%ebx
   1150e:	4d 89 ef             	mov    %r13,%r15
   11511:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
   11518:	00 
   11519:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   1151e:	49 89 ee             	mov    %rbp,%r14
   11521:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   11528:	00 
   11529:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   1152e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   11533:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   11538:	eb 17                	jmp    11551 <__vfprintf+0x1201>
   1153a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11540:	8d 77 02             	lea    0x2(%rdi),%esi
   11543:	49 83 c2 10          	add    $0x10,%r10
   11547:	89 d7                	mov    %edx,%edi
   11549:	83 eb 10             	sub    $0x10,%ebx
   1154c:	83 fb 10             	cmp    $0x10,%ebx
   1154f:	7e 3a                	jle    1158b <__vfprintf+0x123b>
   11551:	83 c0 10             	add    $0x10,%eax
   11554:	8d 57 01             	lea    0x1(%rdi),%edx
   11557:	4d 89 32             	mov    %r14,(%r10)
   1155a:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   11561:	00 
   11562:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11569:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11570:	83 fa 07             	cmp    $0x7,%edx
   11573:	7e cb                	jle    11540 <__vfprintf+0x11f0>
   11575:	85 c0                	test   %eax,%eax
   11577:	75 77                	jne    115f0 <__vfprintf+0x12a0>
   11579:	83 eb 10             	sub    $0x10,%ebx
   1157c:	31 ff                	xor    %edi,%edi
   1157e:	be 01 00 00 00       	mov    $0x1,%esi
   11583:	4d 89 ea             	mov    %r13,%r10
   11586:	83 fb 10             	cmp    $0x10,%ebx
   11589:	7f c6                	jg     11551 <__vfprintf+0x1201>
   1158b:	4d 89 fd             	mov    %r15,%r13
   1158e:	4c 89 f5             	mov    %r14,%rbp
   11591:	41 89 df             	mov    %ebx,%r15d
   11594:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   11599:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1159e:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
   115a2:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   115a9:	00 
   115aa:	49 63 d7             	movslq %r15d,%rdx
   115ad:	44 01 f8             	add    %r15d,%eax
   115b0:	49 89 2a             	mov    %rbp,(%r10)
   115b3:	49 83 c2 10          	add    $0x10,%r10
   115b7:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   115bb:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   115c2:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   115c9:	83 fe 07             	cmp    $0x7,%esi
   115cc:	0f 8e 86 f2 ff ff    	jle    10858 <__vfprintf+0x508>
   115d2:	85 c0                	test   %eax,%eax
   115d4:	0f 85 5f 0a 00 00    	jne    12039 <__vfprintf+0x1ce9>
   115da:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   115e1:	00 00 00 00 
   115e5:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   115ea:	e9 69 f2 ff ff       	jmp    10858 <__vfprintf+0x508>
   115ef:	90                   	nop
   115f0:	4c 89 e6             	mov    %r12,%rsi
   115f3:	48 89 ef             	mov    %rbp,%rdi
   115f6:	e8 35 ed ff ff       	call   10330 <__sprint.part.0>
   115fb:	85 c0                	test   %eax,%eax
   115fd:	0f 85 dd f0 ff ff    	jne    106e0 <__vfprintf+0x390>
   11603:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1160a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11611:	4d 89 ea             	mov    %r13,%r10
   11614:	8d 77 01             	lea    0x1(%rdi),%esi
   11617:	e9 2d ff ff ff       	jmp    11549 <__vfprintf+0x11f9>
   1161c:	0f 1f 40 00          	nopl   0x0(%rax)
   11620:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   11625:	41 29 df             	sub    %ebx,%r15d
   11628:	45 85 ff             	test   %r15d,%r15d
   1162b:	0f 8e 14 f2 ff ff    	jle    10845 <__vfprintf+0x4f5>
   11631:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11638:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1163f:	41 83 ff 10          	cmp    $0x10,%r15d
   11643:	0f 8e d9 18 00 00    	jle    12f22 <__vfprintf+0x2bd2>
   11649:	48 8d 2d c0 8b 01 00 	lea    0x18bc0(%rip),%rbp        # 2a210 <zeroes.3328>
   11650:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   11657:	44 89 fb             	mov    %r15d,%ebx
   1165a:	4d 89 ef             	mov    %r13,%r15
   1165d:	4c 89 b4 24 a0 00 00 	mov    %r14,0xa0(%rsp)
   11664:	00 
   11665:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   1166a:	49 89 ee             	mov    %rbp,%r14
   1166d:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   11674:	00 
   11675:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   1167a:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   1167f:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   11684:	eb 1b                	jmp    116a1 <__vfprintf+0x1351>
   11686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1168d:	00 00 00 
   11690:	8d 77 02             	lea    0x2(%rdi),%esi
   11693:	49 83 c2 10          	add    $0x10,%r10
   11697:	89 d7                	mov    %edx,%edi
   11699:	83 eb 10             	sub    $0x10,%ebx
   1169c:	83 fb 10             	cmp    $0x10,%ebx
   1169f:	7e 3a                	jle    116db <__vfprintf+0x138b>
   116a1:	83 c0 10             	add    $0x10,%eax
   116a4:	8d 57 01             	lea    0x1(%rdi),%edx
   116a7:	4d 89 32             	mov    %r14,(%r10)
   116aa:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   116b1:	00 
   116b2:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   116b9:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   116c0:	83 fa 07             	cmp    $0x7,%edx
   116c3:	7e cb                	jle    11690 <__vfprintf+0x1340>
   116c5:	85 c0                	test   %eax,%eax
   116c7:	75 7f                	jne    11748 <__vfprintf+0x13f8>
   116c9:	83 eb 10             	sub    $0x10,%ebx
   116cc:	31 ff                	xor    %edi,%edi
   116ce:	be 01 00 00 00       	mov    $0x1,%esi
   116d3:	4d 89 ea             	mov    %r13,%r10
   116d6:	83 fb 10             	cmp    $0x10,%ebx
   116d9:	7f c6                	jg     116a1 <__vfprintf+0x1351>
   116db:	4d 89 fd             	mov    %r15,%r13
   116de:	4c 89 f5             	mov    %r14,%rbp
   116e1:	41 89 df             	mov    %ebx,%r15d
   116e4:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   116e9:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
   116ee:	8b 9c 24 80 00 00 00 	mov    0x80(%rsp),%ebx
   116f5:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
   116fc:	00 
   116fd:	49 63 d7             	movslq %r15d,%rdx
   11700:	44 01 f8             	add    %r15d,%eax
   11703:	49 89 2a             	mov    %rbp,(%r10)
   11706:	49 83 c2 10          	add    $0x10,%r10
   1170a:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1170e:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11715:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   1171c:	83 fe 07             	cmp    $0x7,%esi
   1171f:	0f 8e 20 f1 ff ff    	jle    10845 <__vfprintf+0x4f5>
   11725:	85 c0                	test   %eax,%eax
   11727:	0f 85 5f 12 00 00    	jne    1298c <__vfprintf+0x263c>
   1172d:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11734:	00 00 00 00 
   11738:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1173d:	e9 03 f1 ff ff       	jmp    10845 <__vfprintf+0x4f5>
   11742:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11748:	4c 89 e6             	mov    %r12,%rsi
   1174b:	48 89 ef             	mov    %rbp,%rdi
   1174e:	e8 dd eb ff ff       	call   10330 <__sprint.part.0>
   11753:	85 c0                	test   %eax,%eax
   11755:	0f 85 85 ef ff ff    	jne    106e0 <__vfprintf+0x390>
   1175b:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   11762:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11769:	4d 89 ea             	mov    %r13,%r10
   1176c:	8d 77 01             	lea    0x1(%rdi),%esi
   1176f:	e9 25 ff ff ff       	jmp    11699 <__vfprintf+0x1349>
   11774:	0f 1f 40 00          	nopl   0x0(%rax)
   11778:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1177d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   11784:	00 
   11785:	e8 a6 eb ff ff       	call   10330 <__sprint.part.0>
   1178a:	85 c0                	test   %eax,%eax
   1178c:	0f 84 66 f1 ff ff    	je     108f8 <__vfprintf+0x5a8>
   11792:	e9 49 ef ff ff       	jmp    106e0 <__vfprintf+0x390>
   11797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1179e:	00 00 
   117a0:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   117a7:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   117ae:	49 8d 4a 10          	lea    0x10(%r10),%rcx
   117b2:	8d 56 01             	lea    0x1(%rsi),%edx
   117b5:	41 83 fb 01          	cmp    $0x1,%r11d
   117b9:	0f 8e 79 05 00 00    	jle    11d38 <__vfprintf+0x19e8>
   117bf:	41 0f b6 38          	movzbl (%r8),%edi
   117c3:	83 c0 02             	add    $0x2,%eax
   117c6:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   117cd:	00 
   117ce:	c6 84 24 41 02 00 00 	movb   $0x2e,0x241(%rsp)
   117d5:	2e 
   117d6:	4d 89 22             	mov    %r12,(%r10)
   117d9:	49 8d 68 01          	lea    0x1(%r8),%rbp
   117dd:	83 c6 02             	add    $0x2,%esi
   117e0:	40 88 bc 24 40 02 00 	mov    %dil,0x240(%rsp)
   117e7:	00 
   117e8:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   117ef:	00 
   117f0:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   117f7:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   117fe:	83 fa 07             	cmp    $0x7,%edx
   11801:	0f 8e 6f 03 00 00    	jle    11b76 <__vfprintf+0x1826>
   11807:	85 c0                	test   %eax,%eax
   11809:	0f 85 2d 03 00 00    	jne    11b3c <__vfprintf+0x17ec>
   1180f:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   11816:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1181b:	be 01 00 00 00       	mov    $0x1,%esi
   11820:	48 89 ac 24 30 01 00 	mov    %rbp,0x130(%rsp)
   11827:	00 
   11828:	83 e8 01             	sub    $0x1,%eax
   1182b:	48 63 d0             	movslq %eax,%rdx
   1182e:	48 89 94 24 38 01 00 	mov    %rdx,0x138(%rsp)
   11835:	00 
   11836:	48 83 c1 10          	add    $0x10,%rcx
   1183a:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   1183e:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   11845:	00 
   11846:	45 89 dc             	mov    %r11d,%r12d
   11849:	45 85 db             	test   %r11d,%r11d
   1184c:	0f 8f 7a 03 00 00    	jg     11bcc <__vfprintf+0x187c>
   11852:	48 8d 94 24 38 02 00 	lea    0x238(%rsp),%rdx
   11859:	00 
   1185a:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   11861:	00 
   11862:	48 89 11             	mov    %rdx,(%rcx)
   11865:	48 63 94 24 9c 00 00 	movslq 0x9c(%rsp),%rdx
   1186c:	00 
   1186d:	01 d0                	add    %edx,%eax
   1186f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   11873:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   1187a:	41 83 f8 07          	cmp    $0x7,%r8d
   1187e:	0f 8e 26 05 00 00    	jle    11daa <__vfprintf+0x1a5a>
   11884:	85 c0                	test   %eax,%eax
   11886:	0f 84 18 f0 ff ff    	je     108a4 <__vfprintf+0x554>
   1188c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   11891:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   11898:	00 
   11899:	e8 92 ea ff ff       	call   10330 <__sprint.part.0>
   1189e:	85 c0                	test   %eax,%eax
   118a0:	0f 85 3a ee ff ff    	jne    106e0 <__vfprintf+0x390>
   118a6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   118ab:	e9 04 f0 ff ff       	jmp    108b4 <__vfprintf+0x564>
   118b0:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   118b7:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   118be:	00 
   118bf:	83 fd 10             	cmp    $0x10,%ebp
   118c2:	0f 8e 30 15 00 00    	jle    12df8 <__vfprintf+0x2aa8>
   118c8:	4c 8d 3d 51 89 01 00 	lea    0x18951(%rip),%r15        # 2a220 <blanks.3327>
   118cf:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   118d6:	00 
   118d7:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
   118dc:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   118e1:	89 9c 24 a0 00 00 00 	mov    %ebx,0xa0(%rsp)
   118e8:	48 89 f3             	mov    %rsi,%rbx
   118eb:	4c 89 b4 24 a8 00 00 	mov    %r14,0xa8(%rsp)
   118f2:	00 
   118f3:	4d 89 fe             	mov    %r15,%r14
   118f6:	4d 89 ef             	mov    %r13,%r15
   118f9:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   118fe:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   11903:	44 89 9c 24 80 00 00 	mov    %r11d,0x80(%rsp)
   1190a:	00 
   1190b:	eb 16                	jmp    11923 <__vfprintf+0x15d3>
   1190d:	0f 1f 00             	nopl   (%rax)
   11910:	41 8d 79 02          	lea    0x2(%r9),%edi
   11914:	49 83 c2 10          	add    $0x10,%r10
   11918:	41 89 d1             	mov    %edx,%r9d
   1191b:	83 ed 10             	sub    $0x10,%ebp
   1191e:	83 fd 10             	cmp    $0x10,%ebp
   11921:	7e 40                	jle    11963 <__vfprintf+0x1613>
   11923:	83 c0 10             	add    $0x10,%eax
   11926:	41 8d 51 01          	lea    0x1(%r9),%edx
   1192a:	4d 89 32             	mov    %r14,(%r10)
   1192d:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   11934:	00 
   11935:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   1193c:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11943:	83 fa 07             	cmp    $0x7,%edx
   11946:	7e c8                	jle    11910 <__vfprintf+0x15c0>
   11948:	85 c0                	test   %eax,%eax
   1194a:	0f 85 80 00 00 00    	jne    119d0 <__vfprintf+0x1680>
   11950:	83 ed 10             	sub    $0x10,%ebp
   11953:	45 31 c9             	xor    %r9d,%r9d
   11956:	bf 01 00 00 00       	mov    $0x1,%edi
   1195b:	4d 89 ea             	mov    %r13,%r10
   1195e:	83 fd 10             	cmp    $0x10,%ebp
   11961:	7f c0                	jg     11923 <__vfprintf+0x15d3>
   11963:	4d 89 fd             	mov    %r15,%r13
   11966:	44 8b 64 24 70       	mov    0x70(%rsp),%r12d
   1196b:	4d 89 f7             	mov    %r14,%r15
   1196e:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   11973:	44 8b 9c 24 80 00 00 	mov    0x80(%rsp),%r11d
   1197a:	00 
   1197b:	8b 9c 24 a0 00 00 00 	mov    0xa0(%rsp),%ebx
   11982:	4c 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%r14
   11989:	00 
   1198a:	48 63 cd             	movslq %ebp,%rcx
   1198d:	01 e8                	add    %ebp,%eax
   1198f:	4d 89 3a             	mov    %r15,(%r10)
   11992:	49 83 c2 10          	add    $0x10,%r10
   11996:	49 89 4a f8          	mov    %rcx,-0x8(%r10)
   1199a:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   119a1:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   119a8:	83 ff 07             	cmp    $0x7,%edi
   119ab:	0f 8e b2 ed ff ff    	jle    10763 <__vfprintf+0x413>
   119b1:	85 c0                	test   %eax,%eax
   119b3:	0f 85 23 0b 00 00    	jne    124dc <__vfprintf+0x218c>
   119b9:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   119c0:	00 00 00 00 
   119c4:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   119c9:	e9 95 ed ff ff       	jmp    10763 <__vfprintf+0x413>
   119ce:	66 90                	xchg   %ax,%ax
   119d0:	48 89 de             	mov    %rbx,%rsi
   119d3:	4c 89 e7             	mov    %r12,%rdi
   119d6:	e8 55 e9 ff ff       	call   10330 <__sprint.part.0>
   119db:	85 c0                	test   %eax,%eax
   119dd:	0f 85 fd ec ff ff    	jne    106e0 <__vfprintf+0x390>
   119e3:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   119ea:	00 
   119eb:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   119f2:	4d 89 ea             	mov    %r13,%r10
   119f5:	41 8d 79 01          	lea    0x1(%r9),%edi
   119f9:	e9 1d ff ff ff       	jmp    1191b <__vfprintf+0x15cb>
   119fe:	66 90                	xchg   %ax,%ax
   11a00:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11a07:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   11a0e:	41 83 fc 10          	cmp    $0x10,%r12d
   11a12:	0f 8e e5 14 00 00    	jle    12efd <__vfprintf+0x2bad>
   11a18:	4c 8d 3d 01 88 01 00 	lea    0x18801(%rip),%r15        # 2a220 <blanks.3327>
   11a1f:	48 8d ac 24 f0 00 00 	lea    0xf0(%rsp),%rbp
   11a26:	00 
   11a27:	89 1c 24             	mov    %ebx,(%rsp)
   11a2a:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   11a2f:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   11a34:	4d 89 fe             	mov    %r15,%r14
   11a37:	4d 89 ef             	mov    %r13,%r15
   11a3a:	45 89 e5             	mov    %r12d,%r13d
   11a3d:	49 89 ec             	mov    %rbp,%r12
   11a40:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   11a45:	eb 1c                	jmp    11a63 <__vfprintf+0x1713>
   11a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11a4e:	00 00 
   11a50:	8d 7e 02             	lea    0x2(%rsi),%edi
   11a53:	49 83 c2 10          	add    $0x10,%r10
   11a57:	89 d6                	mov    %edx,%esi
   11a59:	41 83 ed 10          	sub    $0x10,%r13d
   11a5d:	41 83 fd 10          	cmp    $0x10,%r13d
   11a61:	7e 40                	jle    11aa3 <__vfprintf+0x1753>
   11a63:	83 c0 10             	add    $0x10,%eax
   11a66:	8d 56 01             	lea    0x1(%rsi),%edx
   11a69:	4d 89 32             	mov    %r14,(%r10)
   11a6c:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   11a73:	00 
   11a74:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11a7b:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11a82:	83 fa 07             	cmp    $0x7,%edx
   11a85:	7e c9                	jle    11a50 <__vfprintf+0x1700>
   11a87:	85 c0                	test   %eax,%eax
   11a89:	0f 85 81 00 00 00    	jne    11b10 <__vfprintf+0x17c0>
   11a8f:	41 83 ed 10          	sub    $0x10,%r13d
   11a93:	31 f6                	xor    %esi,%esi
   11a95:	bf 01 00 00 00       	mov    $0x1,%edi
   11a9a:	49 89 ea             	mov    %rbp,%r10
   11a9d:	41 83 fd 10          	cmp    $0x10,%r13d
   11aa1:	7f c0                	jg     11a63 <__vfprintf+0x1713>
   11aa3:	45 89 ec             	mov    %r13d,%r12d
   11aa6:	8b 1c 24             	mov    (%rsp),%ebx
   11aa9:	4d 89 fd             	mov    %r15,%r13
   11aac:	4d 89 f7             	mov    %r14,%r15
   11aaf:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   11ab4:	49 63 d4             	movslq %r12d,%rdx
   11ab7:	44 01 e0             	add    %r12d,%eax
   11aba:	4d 89 3a             	mov    %r15,(%r10)
   11abd:	49 89 52 08          	mov    %rdx,0x8(%r10)
   11ac1:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11ac8:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   11acf:	83 ff 07             	cmp    $0x7,%edi
   11ad2:	0f 8e f3 ed ff ff    	jle    108cb <__vfprintf+0x57b>
   11ad8:	85 c0                	test   %eax,%eax
   11ada:	0f 85 63 0c 00 00    	jne    12743 <__vfprintf+0x23f3>
   11ae0:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11ae7:	00 00 00 00 
   11aeb:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   11aef:	39 d8                	cmp    %ebx,%eax
   11af1:	0f 4d d8             	cmovge %eax,%ebx
   11af4:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   11af9:	2b 44 24 28          	sub    0x28(%rsp),%eax
   11afd:	39 d8                	cmp    %ebx,%eax
   11aff:	0f 8c db ea ff ff    	jl     105e0 <__vfprintf+0x290>
   11b05:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   11b09:	e9 ea ed ff ff       	jmp    108f8 <__vfprintf+0x5a8>
   11b0e:	66 90                	xchg   %ax,%ax
   11b10:	4c 89 e6             	mov    %r12,%rsi
   11b13:	48 89 df             	mov    %rbx,%rdi
   11b16:	e8 15 e8 ff ff       	call   10330 <__sprint.part.0>
   11b1b:	85 c0                	test   %eax,%eax
   11b1d:	0f 85 bd eb ff ff    	jne    106e0 <__vfprintf+0x390>
   11b23:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   11b2a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11b31:	49 89 ea             	mov    %rbp,%r10
   11b34:	8d 7e 01             	lea    0x1(%rsi),%edi
   11b37:	e9 1d ff ff ff       	jmp    11a59 <__vfprintf+0x1709>
   11b3c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   11b41:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   11b48:	00 
   11b49:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   11b4e:	e8 dd e7 ff ff       	call   10330 <__sprint.part.0>
   11b53:	85 c0                	test   %eax,%eax
   11b55:	0f 85 85 eb ff ff    	jne    106e0 <__vfprintf+0x390>
   11b5b:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   11b62:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11b69:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   11b6e:	8d 71 01             	lea    0x1(%rcx),%esi
   11b71:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   11b76:	8b bc 24 98 00 00 00 	mov    0x98(%rsp),%edi
   11b7d:	48 89 29             	mov    %rbp,(%rcx)
   11b80:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   11b87:	8d 57 ff             	lea    -0x1(%rdi),%edx
   11b8a:	48 63 fa             	movslq %edx,%rdi
   11b8d:	01 d0                	add    %edx,%eax
   11b8f:	48 89 79 08          	mov    %rdi,0x8(%rcx)
   11b93:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11b9a:	83 fe 07             	cmp    $0x7,%esi
   11b9d:	0f 8e 93 fc ff ff    	jle    11836 <__vfprintf+0x14e6>
   11ba3:	85 c0                	test   %eax,%eax
   11ba5:	0f 85 7e 08 00 00    	jne    12429 <__vfprintf+0x20d9>
   11bab:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   11bb2:	00 
   11bb3:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   11bb8:	31 f6                	xor    %esi,%esi
   11bba:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11bc0:	45 89 dc             	mov    %r11d,%r12d
   11bc3:	45 85 db             	test   %r11d,%r11d
   11bc6:	0f 8e 86 fc ff ff    	jle    11852 <__vfprintf+0x1502>
   11bcc:	48 8d 2d 3d 86 01 00 	lea    0x1863d(%rip),%rbp        # 2a210 <zeroes.3328>
   11bd3:	41 83 fb 10          	cmp    $0x10,%r11d
   11bd7:	0f 8e 81 00 00 00    	jle    11c5e <__vfprintf+0x190e>
   11bdd:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   11be4:	00 
   11be5:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   11be9:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   11bee:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   11bf3:	4d 89 fd             	mov    %r15,%r13
   11bf6:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   11bfb:	eb 17                	jmp    11c14 <__vfprintf+0x18c4>
   11bfd:	0f 1f 00             	nopl   (%rax)
   11c00:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   11c04:	48 83 c1 10          	add    $0x10,%rcx
   11c08:	89 d6                	mov    %edx,%esi
   11c0a:	41 83 ec 10          	sub    $0x10,%r12d
   11c0e:	41 83 fc 10          	cmp    $0x10,%r12d
   11c12:	7e 41                	jle    11c55 <__vfprintf+0x1905>
   11c14:	83 c0 10             	add    $0x10,%eax
   11c17:	8d 56 01             	lea    0x1(%rsi),%edx
   11c1a:	48 89 29             	mov    %rbp,(%rcx)
   11c1d:	48 c7 41 08 10 00 00 	movq   $0x10,0x8(%rcx)
   11c24:	00 
   11c25:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11c2c:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11c33:	83 fa 07             	cmp    $0x7,%edx
   11c36:	7e c8                	jle    11c00 <__vfprintf+0x18b0>
   11c38:	85 c0                	test   %eax,%eax
   11c3a:	0f 85 c0 05 00 00    	jne    12200 <__vfprintf+0x1eb0>
   11c40:	41 83 ec 10          	sub    $0x10,%r12d
   11c44:	31 f6                	xor    %esi,%esi
   11c46:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   11c4c:	4c 89 f9             	mov    %r15,%rcx
   11c4f:	41 83 fc 10          	cmp    $0x10,%r12d
   11c53:	7f bf                	jg     11c14 <__vfprintf+0x18c4>
   11c55:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   11c59:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   11c5e:	49 63 d4             	movslq %r12d,%rdx
   11c61:	44 01 e0             	add    %r12d,%eax
   11c64:	48 89 29             	mov    %rbp,(%rcx)
   11c67:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   11c6b:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11c72:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   11c79:	00 
   11c7a:	41 83 f8 07          	cmp    $0x7,%r8d
   11c7e:	0f 8f e7 00 00 00    	jg     11d6b <__vfprintf+0x1a1b>
   11c84:	48 83 c1 10          	add    $0x10,%rcx
   11c88:	41 83 c0 01          	add    $0x1,%r8d
   11c8c:	e9 c1 fb ff ff       	jmp    11852 <__vfprintf+0x1502>
   11c91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11c98:	48 89 de             	mov    %rbx,%rsi
   11c9b:	4c 89 e7             	mov    %r12,%rdi
   11c9e:	e8 8d e6 ff ff       	call   10330 <__sprint.part.0>
   11ca3:	85 c0                	test   %eax,%eax
   11ca5:	0f 85 35 ea ff ff    	jne    106e0 <__vfprintf+0x390>
   11cab:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   11cb2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11cb9:	4d 89 fa             	mov    %r15,%r10
   11cbc:	8d 7e 01             	lea    0x1(%rsi),%edi
   11cbf:	e9 95 f7 ff ff       	jmp    11459 <__vfprintf+0x1109>
   11cc4:	0f 1f 40 00          	nopl   0x0(%rax)
   11cc8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   11ccd:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   11cd4:	00 
   11cd5:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   11cda:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   11cdf:	e8 4c e6 ff ff       	call   10330 <__sprint.part.0>
   11ce4:	85 c0                	test   %eax,%eax
   11ce6:	0f 85 f4 e9 ff ff    	jne    106e0 <__vfprintf+0x390>
   11cec:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11cf1:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   11cf6:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   11cfb:	e9 c8 ea ff ff       	jmp    107c8 <__vfprintf+0x478>
   11d00:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   11d05:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   11d0c:	00 
   11d0d:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   11d12:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   11d17:	e8 14 e6 ff ff       	call   10330 <__sprint.part.0>
   11d1c:	85 c0                	test   %eax,%eax
   11d1e:	0f 85 bc e9 ff ff    	jne    106e0 <__vfprintf+0x390>
   11d24:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11d29:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   11d2e:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   11d33:	e9 00 eb ff ff       	jmp    10838 <__vfprintf+0x4e8>
   11d38:	f6 04 24 01          	testb  $0x1,(%rsp)
   11d3c:	0f 85 7d fa ff ff    	jne    117bf <__vfprintf+0x146f>
   11d42:	83 c0 01             	add    $0x1,%eax
   11d45:	4d 89 02             	mov    %r8,(%r10)
   11d48:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   11d4c:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   11d53:	00 
   11d54:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11d5b:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   11d62:	83 fa 07             	cmp    $0x7,%edx
   11d65:	0f 8e e7 fa ff ff    	jle    11852 <__vfprintf+0x1502>
   11d6b:	85 c0                	test   %eax,%eax
   11d6d:	0f 85 51 0c 00 00    	jne    129c4 <__vfprintf+0x2674>
   11d73:	48 8d 84 24 38 02 00 	lea    0x238(%rsp),%rax
   11d7a:	00 
   11d7b:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   11d80:	c7 84 24 f8 00 00 00 	movl   $0x1,0xf8(%rsp)
   11d87:	01 00 00 00 
   11d8b:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   11d92:	00 
   11d93:	48 63 84 24 9c 00 00 	movslq 0x9c(%rsp),%rax
   11d9a:	00 
   11d9b:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   11da2:	00 
   11da3:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   11daa:	4c 8d 51 10          	lea    0x10(%rcx),%r10
   11dae:	e9 01 eb ff ff       	jmp    108b4 <__vfprintf+0x564>
   11db3:	89 54 24 38          	mov    %edx,0x38(%rsp)
   11db7:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   11dbe:	00 
   11dbf:	48 bf cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdi
   11dc6:	cc cc cc 
   11dc9:	48 89 de             	mov    %rbx,%rsi
   11dcc:	48 83 f9 09          	cmp    $0x9,%rcx
   11dd0:	76 35                	jbe    11e07 <__vfprintf+0x1ab7>
   11dd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11dd8:	48 89 c8             	mov    %rcx,%rax
   11ddb:	49 89 c9             	mov    %rcx,%r9
   11dde:	48 83 ee 01          	sub    $0x1,%rsi
   11de2:	48 f7 e7             	mul    %rdi
   11de5:	48 c1 ea 03          	shr    $0x3,%rdx
   11de9:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
   11ded:	48 01 c0             	add    %rax,%rax
   11df0:	49 29 c1             	sub    %rax,%r9
   11df3:	4c 89 c8             	mov    %r9,%rax
   11df6:	83 c0 30             	add    $0x30,%eax
   11df9:	88 06                	mov    %al,(%rsi)
   11dfb:	48 89 c8             	mov    %rcx,%rax
   11dfe:	48 89 d1             	mov    %rdx,%rcx
   11e01:	48 83 f8 63          	cmp    $0x63,%rax
   11e05:	77 d1                	ja     11dd8 <__vfprintf+0x1a88>
   11e07:	83 c1 30             	add    $0x30,%ecx
   11e0a:	4c 8d 46 ff          	lea    -0x1(%rsi),%r8
   11e0e:	88 4e ff             	mov    %cl,-0x1(%rsi)
   11e11:	e9 01 f1 ff ff       	jmp    10f17 <__vfprintf+0xbc7>
   11e16:	48 85 c0             	test   %rax,%rax
   11e19:	0f 84 9e 09 00 00    	je     127bd <__vfprintf+0x246d>
   11e1f:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   11e24:	48 c1 e2 04          	shl    $0x4,%rdx
   11e28:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   11e2d:	31 ff                	xor    %edi,%edi
   11e2f:	44 89 de             	mov    %r11d,%esi
   11e32:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   11e39:	00 
   11e3a:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   11e3f:	40 0f 94 c7          	sete   %dil
   11e43:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   11e4a:	00 
   11e4b:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   11e52:	00 
   11e53:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   11e58:	83 c7 02             	add    $0x2,%edi
   11e5b:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   11e62:	00 
   11e63:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   11e6a:	00 00 
   11e6c:	e8 2f 1e 00 00       	call   13ca0 <__dtoa>
   11e71:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   11e76:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   11e7b:	48 85 c0             	test   %rax,%rax
   11e7e:	49 89 c0             	mov    %rax,%r8
   11e81:	0f 84 a3 08 00 00    	je     1272a <__vfprintf+0x23da>
   11e87:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   11e8e:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   11e95:	00 
   11e96:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   11e9d:	81 fe 0f 27 00 00    	cmp    $0x270f,%esi
   11ea3:	0f 85 8a ec ff ff    	jne    10b33 <__vfprintf+0x7e3>
   11ea9:	c7 84 24 bc 00 00 00 	movl   $0x7fffffff,0xbc(%rsp)
   11eb0:	ff ff ff 7f 
   11eb4:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   11eb8:	85 c0                	test   %eax,%eax
   11eba:	0f 84 29 01 00 00    	je     11fe9 <__vfprintf+0x1c99>
   11ec0:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   11ec7:	e9 6f ec ff ff       	jmp    10b3b <__vfprintf+0x7eb>
   11ecc:	89 44 24 38          	mov    %eax,0x38(%rsp)
   11ed0:	b8 02 00 00 00       	mov    $0x2,%eax
   11ed5:	e9 d6 ef ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   11eda:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11ee1:	48 8d 2d 28 83 01 00 	lea    0x18328(%rip),%rbp        # 2a210 <zeroes.3328>
   11ee8:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   11eef:	00 
   11ef0:	49 83 c2 10          	add    $0x10,%r10
   11ef4:	49 89 6a f0          	mov    %rbp,-0x10(%r10)
   11ef8:	8d 48 01             	lea    0x1(%rax),%ecx
   11efb:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   11f02:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   11f09:	83 c0 01             	add    $0x1,%eax
   11f0c:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11f13:	83 f8 07             	cmp    $0x7,%eax
   11f16:	7e 18                	jle    11f30 <__vfprintf+0x1be0>
   11f18:	85 c9                	test   %ecx,%ecx
   11f1a:	0f 85 da 0a 00 00    	jne    129fa <__vfprintf+0x26aa>
   11f20:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11f27:	00 00 00 00 
   11f2b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11f30:	8b 04 24             	mov    (%rsp),%eax
   11f33:	83 e0 01             	and    $0x1,%eax
   11f36:	44 09 d8             	or     %r11d,%eax
   11f39:	74 56                	je     11f91 <__vfprintf+0x1c41>
   11f3b:	48 8d 05 75 fb 00 00 	lea    0xfb75(%rip),%rax        # 21ab7 <_ZZ17ecall_malloc_freeE8__func__+0x2b7>
   11f42:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   11f49:	00 
   11f4a:	49 83 c2 10          	add    $0x10,%r10
   11f4e:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   11f52:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11f59:	8d 48 01             	lea    0x1(%rax),%ecx
   11f5c:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   11f63:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   11f6a:	83 c0 01             	add    $0x1,%eax
   11f6d:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11f74:	83 f8 07             	cmp    $0x7,%eax
   11f77:	7e 18                	jle    11f91 <__vfprintf+0x1c41>
   11f79:	85 c9                	test   %ecx,%ecx
   11f7b:	0f 85 67 0b 00 00    	jne    12ae8 <__vfprintf+0x2798>
   11f81:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11f88:	00 00 00 00 
   11f8c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11f91:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   11f98:	41 89 c4             	mov    %eax,%r12d
   11f9b:	41 f7 dc             	neg    %r12d
   11f9e:	45 85 e4             	test   %r12d,%r12d
   11fa1:	0f 8f 5e 06 00 00    	jg     12605 <__vfprintf+0x22b5>
   11fa7:	41 01 c3             	add    %eax,%r11d
   11faa:	e9 01 f4 ff ff       	jmp    113b0 <__vfprintf+0x1060>
   11faf:	8d 4c 3b 01          	lea    0x1(%rbx,%rdi,1),%ecx
   11fb3:	bb 00 00 00 00       	mov    $0x0,%ebx
   11fb8:	44 89 24 24          	mov    %r12d,(%rsp)
   11fbc:	41 89 fb             	mov    %edi,%r11d
   11fbf:	85 c9                	test   %ecx,%ecx
   11fc1:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   11fc5:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   11fca:	0f 49 d9             	cmovns %ecx,%ebx
   11fcd:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   11fd4:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   11fdb:	00 
   11fdc:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   11fe3:	00 
   11fe4:	e9 07 ec ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   11fe9:	41 80 38 4e          	cmpb   $0x4e,(%r8)
   11fed:	0f 84 a6 07 00 00    	je     12799 <__vfprintf+0x2449>
   11ff3:	83 fb 60             	cmp    $0x60,%ebx
   11ff6:	48 8d 0d ab fa 00 00 	lea    0xfaab(%rip),%rcx        # 21aa8 <_ZZ17ecall_malloc_freeE8__func__+0x2a8>
   11ffd:	48 8d 35 a8 fa 00 00 	lea    0xfaa8(%rip),%rsi        # 21aac <_ZZ17ecall_malloc_freeE8__func__+0x2ac>
   12004:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   1200b:	00 
   1200c:	48 0f 4e ce          	cmovle %rsi,%rcx
   12010:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   12015:	bb 03 00 00 00       	mov    $0x3,%ebx
   1201a:	49 89 c8             	mov    %rcx,%r8
   1201d:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   12024:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%rsp)
   1202b:	00 
   1202c:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   12033:	00 
   12034:	e9 b7 eb ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   12039:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1203e:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12045:	00 
   12046:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   1204b:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   12050:	e8 db e2 ff ff       	call   10330 <__sprint.part.0>
   12055:	85 c0                	test   %eax,%eax
   12057:	0f 85 83 e6 ff ff    	jne    106e0 <__vfprintf+0x390>
   1205d:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12062:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   12067:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1206c:	e9 e7 e7 ff ff       	jmp    10858 <__vfprintf+0x508>
   12071:	f6 04 24 20          	testb  $0x20,(%rsp)
   12075:	0f 85 33 04 00 00    	jne    124ae <__vfprintf+0x215e>
   1207b:	f6 04 24 10          	testb  $0x10,(%rsp)
   1207f:	0f 85 32 08 00 00    	jne    128b7 <__vfprintf+0x2567>
   12085:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   1208c:	0f 85 1c 04 00 00    	jne    124ae <__vfprintf+0x215e>
   12092:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   12099:	0f 85 18 08 00 00    	jne    128b7 <__vfprintf+0x2567>
   1209f:	f6 04 24 40          	testb  $0x40,(%rsp)
   120a3:	0f 84 a4 11 00 00    	je     1324d <__vfprintf+0x2efd>
   120a9:	48 85 c9             	test   %rcx,%rcx
   120ac:	0f 84 e8 12 00 00    	je     1339a <__vfprintf+0x304a>
   120b2:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   120b7:	48 c1 e2 04          	shl    $0x4,%rdx
   120bb:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   120bf:	e9 77 f1 ff ff       	jmp    1123b <__vfprintf+0xeeb>
   120c4:	0f 1f 40 00          	nopl   0x0(%rax)
   120c8:	f6 04 24 20          	testb  $0x20,(%rsp)
   120cc:	0f 85 bb 03 00 00    	jne    1248d <__vfprintf+0x213d>
   120d2:	f6 04 24 10          	testb  $0x10,(%rsp)
   120d6:	0f 85 74 07 00 00    	jne    12850 <__vfprintf+0x2500>
   120dc:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   120e3:	0f 85 a4 03 00 00    	jne    1248d <__vfprintf+0x213d>
   120e9:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   120f0:	0f 85 5a 07 00 00    	jne    12850 <__vfprintf+0x2500>
   120f6:	f6 04 24 40          	testb  $0x40,(%rsp)
   120fa:	0f 84 bd 11 00 00    	je     132bd <__vfprintf+0x2f6d>
   12100:	48 85 c9             	test   %rcx,%rcx
   12103:	0f 84 34 12 00 00    	je     1333d <__vfprintf+0x2fed>
   12109:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1210e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   12112:	31 c0                	xor    %eax,%eax
   12114:	48 c1 e2 04          	shl    $0x4,%rdx
   12118:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   1211c:	e9 8f ed ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   12121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12128:	f6 04 24 20          	testb  $0x20,(%rsp)
   1212c:	0f 85 97 03 00 00    	jne    124c9 <__vfprintf+0x2179>
   12132:	f6 04 24 10          	testb  $0x10,(%rsp)
   12136:	0f 85 e4 09 00 00    	jne    12b20 <__vfprintf+0x27d0>
   1213c:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   12143:	0f 85 80 03 00 00    	jne    124c9 <__vfprintf+0x2179>
   12149:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   12150:	0f 85 ca 09 00 00    	jne    12b20 <__vfprintf+0x27d0>
   12156:	f6 04 24 40          	testb  $0x40,(%rsp)
   1215a:	0f 84 2d 10 00 00    	je     1318d <__vfprintf+0x2e3d>
   12160:	48 85 c9             	test   %rcx,%rcx
   12163:	0f 84 0a 12 00 00    	je     13373 <__vfprintf+0x3023>
   12169:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   1216e:	48 c1 e0 04          	shl    $0x4,%rax
   12172:	48 0f bf 0c 01       	movswq (%rcx,%rax,1),%rcx
   12177:	48 89 c8             	mov    %rcx,%rax
   1217a:	e9 e6 ea ff ff       	jmp    10c65 <__vfprintf+0x915>
   1217f:	90                   	nop
   12180:	f6 04 24 20          	testb  $0x20,(%rsp)
   12184:	0f 85 df 02 00 00    	jne    12469 <__vfprintf+0x2119>
   1218a:	f6 04 24 10          	testb  $0x10,(%rsp)
   1218e:	0f 85 ee 06 00 00    	jne    12882 <__vfprintf+0x2532>
   12194:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   1219b:	0f 85 c8 02 00 00    	jne    12469 <__vfprintf+0x2119>
   121a1:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   121a8:	0f 85 d4 06 00 00    	jne    12882 <__vfprintf+0x2532>
   121ae:	f6 04 24 40          	testb  $0x40,(%rsp)
   121b2:	0f 84 d4 10 00 00    	je     1328c <__vfprintf+0x2f3c>
   121b8:	48 85 c9             	test   %rcx,%rcx
   121bb:	0f 84 50 11 00 00    	je     13311 <__vfprintf+0x2fc1>
   121c1:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   121c6:	89 44 24 38          	mov    %eax,0x38(%rsp)
   121ca:	b8 01 00 00 00       	mov    $0x1,%eax
   121cf:	48 c1 e2 04          	shl    $0x4,%rdx
   121d3:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   121d7:	e9 d4 ec ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   121dc:	0f 1f 40 00          	nopl   0x0(%rax)
   121e0:	85 d2                	test   %edx,%edx
   121e2:	0f 85 80 05 00 00    	jne    12768 <__vfprintf+0x2418>
   121e8:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   121ef:	00 00 00 00 
   121f3:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   121f8:	41 29 eb             	sub    %ebp,%r11d
   121fb:	e9 01 f2 ff ff       	jmp    11401 <__vfprintf+0x10b1>
   12200:	4c 89 ee             	mov    %r13,%rsi
   12203:	48 89 df             	mov    %rbx,%rdi
   12206:	e8 25 e1 ff ff       	call   10330 <__sprint.part.0>
   1220b:	85 c0                	test   %eax,%eax
   1220d:	0f 85 cd e4 ff ff    	jne    106e0 <__vfprintf+0x390>
   12213:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1221a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12221:	4c 89 f9             	mov    %r15,%rcx
   12224:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   12228:	e9 dd f9 ff ff       	jmp    11c0a <__vfprintf+0x18ba>
   1222d:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   12234:	2d 
   12235:	48 f7 d9             	neg    %rcx
   12238:	b8 01 00 00 00       	mov    $0x1,%eax
   1223d:	89 54 24 38          	mov    %edx,0x38(%rsp)
   12241:	e9 72 ec ff ff       	jmp    10eb8 <__vfprintf+0xb68>
   12246:	0f b6 84 24 8b 00 00 	movzbl 0x8b(%rsp),%eax
   1224d:	00 
   1224e:	89 f1                	mov    %esi,%ecx
   12250:	88 84 24 38 02 00 00 	mov    %al,0x238(%rsp)
   12257:	b8 2b 00 00 00       	mov    $0x2b,%eax
   1225c:	83 e9 01             	sub    $0x1,%ecx
   1225f:	79 0c                	jns    1226d <__vfprintf+0x1f1d>
   12261:	b9 01 00 00 00       	mov    $0x1,%ecx
   12266:	b8 2d 00 00 00       	mov    $0x2d,%eax
   1226b:	29 f1                	sub    %esi,%ecx
   1226d:	88 84 24 39 02 00 00 	mov    %al,0x239(%rsp)
   12274:	83 f9 09             	cmp    $0x9,%ecx
   12277:	0f 8e 66 06 00 00    	jle    128e3 <__vfprintf+0x2593>
   1227d:	4c 8d 8c 24 38 02 00 	lea    0x238(%rsp),%r9
   12284:	00 
   12285:	4c 89 cf             	mov    %r9,%rdi
   12288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1228f:	00 
   12290:	48 63 c1             	movslq %ecx,%rax
   12293:	89 cb                	mov    %ecx,%ebx
   12295:	41 89 cf             	mov    %ecx,%r15d
   12298:	48 89 fe             	mov    %rdi,%rsi
   1229b:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   122a2:	c1 fb 1f             	sar    $0x1f,%ebx
   122a5:	48 8d 7f ff          	lea    -0x1(%rdi),%rdi
   122a9:	48 c1 f8 22          	sar    $0x22,%rax
   122ad:	29 d8                	sub    %ebx,%eax
   122af:	8d 1c 80             	lea    (%rax,%rax,4),%ebx
   122b2:	01 db                	add    %ebx,%ebx
   122b4:	41 29 df             	sub    %ebx,%r15d
   122b7:	44 89 fb             	mov    %r15d,%ebx
   122ba:	83 c3 30             	add    $0x30,%ebx
   122bd:	88 5e ff             	mov    %bl,-0x1(%rsi)
   122c0:	89 cb                	mov    %ecx,%ebx
   122c2:	89 c1                	mov    %eax,%ecx
   122c4:	83 fb 63             	cmp    $0x63,%ebx
   122c7:	7f c7                	jg     12290 <__vfprintf+0x1f40>
   122c9:	83 c1 30             	add    $0x30,%ecx
   122cc:	48 8d 46 fe          	lea    -0x2(%rsi),%rax
   122d0:	88 4f ff             	mov    %cl,-0x1(%rdi)
   122d3:	4c 39 c8             	cmp    %r9,%rax
   122d6:	0f 83 0f 10 00 00    	jae    132eb <__vfprintf+0x2f9b>
   122dc:	48 8d 9c 24 3a 02 00 	lea    0x23a(%rsp),%rbx
   122e3:	00 
   122e4:	48 89 df             	mov    %rbx,%rdi
   122e7:	eb 0a                	jmp    122f3 <__vfprintf+0x1fa3>
   122e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   122f0:	0f b6 08             	movzbl (%rax),%ecx
   122f3:	48 83 c0 01          	add    $0x1,%rax
   122f7:	48 83 c7 01          	add    $0x1,%rdi
   122fb:	88 4f ff             	mov    %cl,-0x1(%rdi)
   122fe:	4c 39 c8             	cmp    %r9,%rax
   12301:	75 ed                	jne    122f0 <__vfprintf+0x1fa0>
   12303:	48 89 d9             	mov    %rbx,%rcx
   12306:	48 29 f1             	sub    %rsi,%rcx
   12309:	48 01 cb             	add    %rcx,%rbx
   1230c:	89 d9                	mov    %ebx,%ecx
   1230e:	29 c1                	sub    %eax,%ecx
   12310:	89 8c 24 9c 00 00 00 	mov    %ecx,0x9c(%rsp)
   12317:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1231e:	44 01 d8             	add    %r11d,%eax
   12321:	89 44 24 40          	mov    %eax,0x40(%rsp)
   12325:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   1232c:	00 
   1232d:	41 83 fb 01          	cmp    $0x1,%r11d
   12331:	0f 8e b0 09 00 00    	jle    12ce7 <__vfprintf+0x2997>
   12337:	83 44 24 40 01       	addl   $0x1,0x40(%rsp)
   1233c:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   12340:	bb 00 00 00 00       	mov    $0x0,%ebx
   12345:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   1234a:	44 89 24 24          	mov    %r12d,(%rsp)
   1234e:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   12355:	00 
   12356:	0f 49 d9             	cmovns %ecx,%ebx
   12359:	e9 92 e8 ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   1235e:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12365:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1236c:	41 83 fc 10          	cmp    $0x10,%r12d
   12370:	0f 8e 43 0e 00 00    	jle    131b9 <__vfprintf+0x2e69>
   12376:	48 8d 2d 93 7e 01 00 	lea    0x17e93(%rip),%rbp        # 2a210 <zeroes.3328>
   1237d:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   12381:	44 89 e3             	mov    %r12d,%ebx
   12384:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   1238b:	00 
   1238c:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   12391:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   12396:	49 89 ed             	mov    %rbp,%r13
   12399:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1239e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   123a3:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   123a8:	eb 1b                	jmp    123c5 <__vfprintf+0x2075>
   123aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   123b0:	8d 77 02             	lea    0x2(%rdi),%esi
   123b3:	49 83 c2 10          	add    $0x10,%r10
   123b7:	89 d7                	mov    %edx,%edi
   123b9:	83 eb 10             	sub    $0x10,%ebx
   123bc:	83 fb 10             	cmp    $0x10,%ebx
   123bf:	0f 8e 4f 01 00 00    	jle    12514 <__vfprintf+0x21c4>
   123c5:	83 c0 10             	add    $0x10,%eax
   123c8:	8d 57 01             	lea    0x1(%rdi),%edx
   123cb:	4d 89 2a             	mov    %r13,(%r10)
   123ce:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   123d5:	00 
   123d6:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   123dd:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   123e4:	83 fa 07             	cmp    $0x7,%edx
   123e7:	7e c7                	jle    123b0 <__vfprintf+0x2060>
   123e9:	85 c0                	test   %eax,%eax
   123eb:	75 13                	jne    12400 <__vfprintf+0x20b0>
   123ed:	31 ff                	xor    %edi,%edi
   123ef:	be 01 00 00 00       	mov    $0x1,%esi
   123f4:	4d 89 e2             	mov    %r12,%r10
   123f7:	eb c0                	jmp    123b9 <__vfprintf+0x2069>
   123f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12400:	4c 89 fe             	mov    %r15,%rsi
   12403:	48 89 ef             	mov    %rbp,%rdi
   12406:	e8 25 df ff ff       	call   10330 <__sprint.part.0>
   1240b:	85 c0                	test   %eax,%eax
   1240d:	0f 85 cd e2 ff ff    	jne    106e0 <__vfprintf+0x390>
   12413:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1241a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12421:	4d 89 e2             	mov    %r12,%r10
   12424:	8d 77 01             	lea    0x1(%rdi),%esi
   12427:	eb 90                	jmp    123b9 <__vfprintf+0x2069>
   12429:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1242e:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12435:	00 
   12436:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   1243b:	e8 f0 de ff ff       	call   10330 <__sprint.part.0>
   12440:	85 c0                	test   %eax,%eax
   12442:	0f 85 98 e2 ff ff    	jne    106e0 <__vfprintf+0x390>
   12448:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1244f:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12456:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1245b:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12460:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   12464:	e9 d5 f3 ff ff       	jmp    1183e <__vfprintf+0x14ee>
   12469:	48 85 c9             	test   %rcx,%rcx
   1246c:	0f 84 21 09 00 00    	je     12d93 <__vfprintf+0x2a43>
   12472:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   12477:	48 c1 e2 04          	shl    $0x4,%rdx
   1247b:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   1247f:	89 44 24 38          	mov    %eax,0x38(%rsp)
   12483:	b8 01 00 00 00       	mov    $0x1,%eax
   12488:	e9 23 ea ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   1248d:	48 85 c9             	test   %rcx,%rcx
   12490:	0f 84 dd 08 00 00    	je     12d73 <__vfprintf+0x2a23>
   12496:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1249b:	48 c1 e2 04          	shl    $0x4,%rdx
   1249f:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   124a3:	89 44 24 38          	mov    %eax,0x38(%rsp)
   124a7:	31 c0                	xor    %eax,%eax
   124a9:	e9 02 ea ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   124ae:	48 85 c9             	test   %rcx,%rcx
   124b1:	0f 84 9c 08 00 00    	je     12d53 <__vfprintf+0x2a03>
   124b7:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   124bc:	48 c1 e2 04          	shl    $0x4,%rdx
   124c0:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   124c4:	e9 72 ed ff ff       	jmp    1123b <__vfprintf+0xeeb>
   124c9:	48 85 c9             	test   %rcx,%rcx
   124cc:	0f 84 e1 08 00 00    	je     12db3 <__vfprintf+0x2a63>
   124d2:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   124d7:	e9 7e e7 ff ff       	jmp    10c5a <__vfprintf+0x90a>
   124dc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   124e1:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   124e8:	00 
   124e9:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   124ee:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   124f3:	e8 38 de ff ff       	call   10330 <__sprint.part.0>
   124f8:	85 c0                	test   %eax,%eax
   124fa:	0f 85 e0 e1 ff ff    	jne    106e0 <__vfprintf+0x390>
   12500:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12505:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   1250a:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1250f:	e9 4f e2 ff ff       	jmp    10763 <__vfprintf+0x413>
   12514:	41 89 dc             	mov    %ebx,%r12d
   12517:	4c 89 ed             	mov    %r13,%rbp
   1251a:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1251f:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   12524:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   12528:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   1252d:	49 63 d4             	movslq %r12d,%rdx
   12530:	44 01 e0             	add    %r12d,%eax
   12533:	49 89 2a             	mov    %rbp,(%r10)
   12536:	49 83 c2 10          	add    $0x10,%r10
   1253a:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1253e:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12545:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   1254c:	83 fe 07             	cmp    $0x7,%esi
   1254f:	0f 8e e1 ed ff ff    	jle    11336 <__vfprintf+0xfe6>
   12555:	85 c0                	test   %eax,%eax
   12557:	0f 85 e6 08 00 00    	jne    12e43 <__vfprintf+0x2af3>
   1255d:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12564:	00 00 00 00 
   12568:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1256d:	e9 c4 ed ff ff       	jmp    11336 <__vfprintf+0xfe6>
   12572:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   12579:	00 
   1257a:	48 85 d2             	test   %rdx,%rdx
   1257d:	0f 84 f8 08 00 00    	je     12e7b <__vfprintf+0x2b2b>
   12583:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   12588:	48 c1 e0 04          	shl    $0x4,%rax
   1258c:	4c 8b 04 02          	mov    (%rdx,%rax,1),%r8
   12590:	4d 85 c0             	test   %r8,%r8
   12593:	48 8d 05 16 f5 00 00 	lea    0xf516(%rip),%rax        # 21ab0 <_ZZ17ecall_malloc_freeE8__func__+0x2b0>
   1259a:	4c 0f 44 c0          	cmove  %rax,%r8
   1259e:	45 85 db             	test   %r11d,%r11d
   125a1:	0f 88 6e 02 00 00    	js     12815 <__vfprintf+0x24c5>
   125a7:	49 63 d3             	movslq %r11d,%rdx
   125aa:	31 f6                	xor    %esi,%esi
   125ac:	4c 89 c7             	mov    %r8,%rdi
   125af:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   125b4:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   125b9:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   125be:	e8 4d 14 00 00       	call   13a10 <memchr>
   125c3:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   125c8:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   125cd:	48 89 c5             	mov    %rax,%rbp
   125d0:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   125d5:	4c 29 c5             	sub    %r8,%rbp
   125d8:	48 85 c0             	test   %rax,%rax
   125db:	89 e8                	mov    %ebp,%eax
   125dd:	41 0f 44 c3          	cmove  %r11d,%eax
   125e1:	89 44 24 40          	mov    %eax,0x40(%rsp)
   125e5:	8b 44 24 40          	mov    0x40(%rsp),%eax
   125e9:	bb 00 00 00 00       	mov    $0x0,%ebx
   125ee:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   125f3:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   125fa:	00 
   125fb:	85 c0                	test   %eax,%eax
   125fd:	0f 49 d8             	cmovns %eax,%ebx
   12600:	e9 28 e1 ff ff       	jmp    1072d <__vfprintf+0x3dd>
   12605:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1260c:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   12613:	41 83 fc 10          	cmp    $0x10,%r12d
   12617:	0f 8e 28 0c 00 00    	jle    13245 <__vfprintf+0x2ef5>
   1261d:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   12624:	00 
   12625:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   12629:	44 89 e3             	mov    %r12d,%ebx
   1262c:	49 89 ec             	mov    %rbp,%r12
   1262f:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   12634:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   12639:	4d 89 fd             	mov    %r15,%r13
   1263c:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   12641:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   12646:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1264b:	eb 18                	jmp    12665 <__vfprintf+0x2315>
   1264d:	0f 1f 00             	nopl   (%rax)
   12650:	8d 77 02             	lea    0x2(%rdi),%esi
   12653:	49 83 c2 10          	add    $0x10,%r10
   12657:	89 d7                	mov    %edx,%edi
   12659:	83 eb 10             	sub    $0x10,%ebx
   1265c:	83 fb 10             	cmp    $0x10,%ebx
   1265f:	0f 8e c6 02 00 00    	jle    1292b <__vfprintf+0x25db>
   12665:	83 c0 10             	add    $0x10,%eax
   12668:	8d 57 01             	lea    0x1(%rdi),%edx
   1266b:	4d 89 22             	mov    %r12,(%r10)
   1266e:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   12675:	00 
   12676:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   1267d:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   12684:	83 fa 07             	cmp    $0x7,%edx
   12687:	7e c7                	jle    12650 <__vfprintf+0x2300>
   12689:	85 c0                	test   %eax,%eax
   1268b:	75 0c                	jne    12699 <__vfprintf+0x2349>
   1268d:	31 ff                	xor    %edi,%edi
   1268f:	be 01 00 00 00       	mov    $0x1,%esi
   12694:	49 89 ea             	mov    %rbp,%r10
   12697:	eb c0                	jmp    12659 <__vfprintf+0x2309>
   12699:	4c 89 ee             	mov    %r13,%rsi
   1269c:	4c 89 ff             	mov    %r15,%rdi
   1269f:	e8 8c dc ff ff       	call   10330 <__sprint.part.0>
   126a4:	85 c0                	test   %eax,%eax
   126a6:	0f 85 34 e0 ff ff    	jne    106e0 <__vfprintf+0x390>
   126ac:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   126b3:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   126ba:	49 89 ea             	mov    %rbp,%r10
   126bd:	8d 77 01             	lea    0x1(%rdi),%esi
   126c0:	eb 97                	jmp    12659 <__vfprintf+0x2309>
   126c2:	48 85 c0             	test   %rax,%rax
   126c5:	0f 84 d3 07 00 00    	je     12e9e <__vfprintf+0x2b4e>
   126cb:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   126d0:	48 c1 e2 04          	shl    $0x4,%rdx
   126d4:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   126d9:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   126e0:	00 
   126e1:	44 89 de             	mov    %r11d,%esi
   126e4:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   126eb:	00 
   126ec:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   126f3:	00 
   126f4:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   126fb:	00 
   126fc:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   12701:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   12706:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   1270d:	00 00 
   1270f:	e8 bc 2a 00 00       	call   151d0 <__hdtoa>
   12714:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   12719:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1271e:	48 85 c0             	test   %rax,%rax
   12721:	49 89 c0             	mov    %rax,%r8
   12724:	0f 85 dc e2 ff ff    	jne    10a06 <__vfprintf+0x6b6>
   1272a:	e8 11 cc ff ff       	call   f340 <__errno>
   1272f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   12735:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1273c:	00 00 
   1273e:	e9 9d df ff ff       	jmp    106e0 <__vfprintf+0x390>
   12743:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12748:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   1274f:	00 
   12750:	e8 db db ff ff       	call   10330 <__sprint.part.0>
   12755:	85 c0                	test   %eax,%eax
   12757:	0f 84 6e e1 ff ff    	je     108cb <__vfprintf+0x57b>
   1275d:	e9 7e df ff ff       	jmp    106e0 <__vfprintf+0x390>
   12762:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12768:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1276d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12774:	00 
   12775:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   1277a:	e8 b1 db ff ff       	call   10330 <__sprint.part.0>
   1277f:	85 c0                	test   %eax,%eax
   12781:	0f 85 59 df ff ff    	jne    106e0 <__vfprintf+0x390>
   12787:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1278c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12791:	41 29 eb             	sub    %ebp,%r11d
   12794:	e9 68 ec ff ff       	jmp    11401 <__vfprintf+0x10b1>
   12799:	83 fb 60             	cmp    $0x60,%ebx
   1279c:	48 8d 05 01 f3 00 00 	lea    0xf301(%rip),%rax        # 21aa4 <_ZZ17ecall_malloc_freeE8__func__+0x2a4>
   127a3:	48 8d 0d f6 f2 00 00 	lea    0xf2f6(%rip),%rcx        # 21aa0 <_ZZ17ecall_malloc_freeE8__func__+0x2a0>
   127aa:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   127b1:	00 
   127b2:	48 0f 4e c8          	cmovle %rax,%rcx
   127b6:	31 c0                	xor    %eax,%eax
   127b8:	e9 53 f8 ff ff       	jmp    12010 <__vfprintf+0x1cc0>
   127bd:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   127c2:	8b 41 04             	mov    0x4(%rcx),%eax
   127c5:	3d af 00 00 00       	cmp    $0xaf,%eax
   127ca:	0f 87 8b 03 00 00    	ja     12b5b <__vfprintf+0x280b>
   127d0:	89 c2                	mov    %eax,%edx
   127d2:	83 c0 10             	add    $0x10,%eax
   127d5:	48 03 51 10          	add    0x10(%rcx),%rdx
   127d9:	89 41 04             	mov    %eax,0x4(%rcx)
   127dc:	f2 0f 10 02          	movsd  (%rdx),%xmm0
   127e0:	e9 48 f6 ff ff       	jmp    11e2d <__vfprintf+0x1add>
   127e5:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   127ea:	48 8b 41 08          	mov    0x8(%rcx),%rax
   127ee:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   127f3:	48 83 c0 0f          	add    $0xf,%rax
   127f7:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   127fb:	48 8d 50 10          	lea    0x10(%rax),%rdx
   127ff:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12803:	db 28                	fldt   (%rax)
   12805:	e9 b3 e2 ff ff       	jmp    10abd <__vfprintf+0x76d>
   1280a:	41 bb 07 00 00 00    	mov    $0x7,%r11d
   12810:	e9 59 e2 ff ff       	jmp    10a6e <__vfprintf+0x71e>
   12815:	4c 89 c7             	mov    %r8,%rdi
   12818:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   1281d:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   12822:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   12827:	e8 e4 c1 ff ff       	call   ea10 <strlen>
   1282c:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
   12832:	0f 87 a8 dd ff ff    	ja     105e0 <__vfprintf+0x290>
   12838:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1283d:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   12842:	89 44 24 40          	mov    %eax,0x40(%rsp)
   12846:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1284b:	e9 95 fd ff ff       	jmp    125e5 <__vfprintf+0x2295>
   12850:	48 85 c9             	test   %rcx,%rcx
   12853:	0f 85 3d fc ff ff    	jne    12496 <__vfprintf+0x2146>
   12859:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1285e:	8b 0f                	mov    (%rdi),%ecx
   12860:	83 f9 2f             	cmp    $0x2f,%ecx
   12863:	0f 87 44 03 00 00    	ja     12bad <__vfprintf+0x285d>
   12869:	89 ca                	mov    %ecx,%edx
   1286b:	83 c1 08             	add    $0x8,%ecx
   1286e:	48 03 57 10          	add    0x10(%rdi),%rdx
   12872:	89 0f                	mov    %ecx,(%rdi)
   12874:	48 8b 0a             	mov    (%rdx),%rcx
   12877:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1287b:	31 c0                	xor    %eax,%eax
   1287d:	e9 2e e6 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   12882:	48 85 c9             	test   %rcx,%rcx
   12885:	0f 85 e7 fb ff ff    	jne    12472 <__vfprintf+0x2122>
   1288b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12890:	8b 0f                	mov    (%rdi),%ecx
   12892:	83 f9 2f             	cmp    $0x2f,%ecx
   12895:	0f 87 fc 02 00 00    	ja     12b97 <__vfprintf+0x2847>
   1289b:	89 ca                	mov    %ecx,%edx
   1289d:	83 c1 08             	add    $0x8,%ecx
   128a0:	48 03 57 10          	add    0x10(%rdi),%rdx
   128a4:	89 0f                	mov    %ecx,(%rdi)
   128a6:	48 8b 0a             	mov    (%rdx),%rcx
   128a9:	89 44 24 38          	mov    %eax,0x38(%rsp)
   128ad:	b8 01 00 00 00       	mov    $0x1,%eax
   128b2:	e9 f9 e5 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   128b7:	48 85 c9             	test   %rcx,%rcx
   128ba:	0f 85 f7 fb ff ff    	jne    124b7 <__vfprintf+0x2167>
   128c0:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   128c5:	8b 0f                	mov    (%rdi),%ecx
   128c7:	83 f9 2f             	cmp    $0x2f,%ecx
   128ca:	0f 87 b1 02 00 00    	ja     12b81 <__vfprintf+0x2831>
   128d0:	89 ca                	mov    %ecx,%edx
   128d2:	83 c1 08             	add    $0x8,%ecx
   128d5:	48 03 57 10          	add    0x10(%rdi),%rdx
   128d9:	89 0f                	mov    %ecx,(%rdi)
   128db:	48 8b 0a             	mov    (%rdx),%rcx
   128de:	e9 58 e9 ff ff       	jmp    1123b <__vfprintf+0xeeb>
   128e3:	0f b6 b4 24 8b 00 00 	movzbl 0x8b(%rsp),%esi
   128ea:	00 
   128eb:	48 8d 84 24 3a 02 00 	lea    0x23a(%rsp),%rax
   128f2:	00 
   128f3:	83 e6 df             	and    $0xffffffdf,%esi
   128f6:	40 80 fe 45          	cmp    $0x45,%sil
   128fa:	75 10                	jne    1290c <__vfprintf+0x25bc>
   128fc:	c6 84 24 3a 02 00 00 	movb   $0x30,0x23a(%rsp)
   12903:	30 
   12904:	48 8d 84 24 3b 02 00 	lea    0x23b(%rsp),%rax
   1290b:	00 
   1290c:	83 c1 30             	add    $0x30,%ecx
   1290f:	88 08                	mov    %cl,(%rax)
   12911:	48 8d 8c 24 b0 02 00 	lea    0x2b0(%rsp),%rcx
   12918:	00 
   12919:	48 29 c8             	sub    %rcx,%rax
   1291c:	83 c0 79             	add    $0x79,%eax
   1291f:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   12926:	e9 ec f9 ff ff       	jmp    12317 <__vfprintf+0x1fc7>
   1292b:	4c 89 e5             	mov    %r12,%rbp
   1292e:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   12933:	41 89 dc             	mov    %ebx,%r12d
   12936:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1293b:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   12940:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   12944:	49 63 d4             	movslq %r12d,%rdx
   12947:	44 01 e0             	add    %r12d,%eax
   1294a:	49 89 2a             	mov    %rbp,(%r10)
   1294d:	49 89 52 08          	mov    %rdx,0x8(%r10)
   12951:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12958:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   1295f:	83 fe 07             	cmp    $0x7,%esi
   12962:	0f 8e 09 02 00 00    	jle    12b71 <__vfprintf+0x2821>
   12968:	85 c0                	test   %eax,%eax
   1296a:	0f 85 0f 06 00 00    	jne    12f7f <__vfprintf+0x2c2f>
   12970:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12977:	00 00 00 00 
   1297b:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   12982:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12987:	e9 1b f6 ff ff       	jmp    11fa7 <__vfprintf+0x1c57>
   1298c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12991:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12998:	00 
   12999:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   1299e:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   129a3:	e8 88 d9 ff ff       	call   10330 <__sprint.part.0>
   129a8:	85 c0                	test   %eax,%eax
   129aa:	0f 85 30 dd ff ff    	jne    106e0 <__vfprintf+0x390>
   129b0:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   129b5:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   129ba:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   129bf:	e9 81 de ff ff       	jmp    10845 <__vfprintf+0x4f5>
   129c4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   129c9:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   129d0:	00 
   129d1:	e8 5a d9 ff ff       	call   10330 <__sprint.part.0>
   129d6:	85 c0                	test   %eax,%eax
   129d8:	0f 85 02 dd ff ff    	jne    106e0 <__vfprintf+0x390>
   129de:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   129e5:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   129ec:	44 8d 41 01          	lea    0x1(%rcx),%r8d
   129f0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   129f5:	e9 58 ee ff ff       	jmp    11852 <__vfprintf+0x1502>
   129fa:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   129ff:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12a06:	00 
   12a07:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12a0c:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12a11:	e8 1a d9 ff ff       	call   10330 <__sprint.part.0>
   12a16:	85 c0                	test   %eax,%eax
   12a18:	0f 85 c2 dc ff ff    	jne    106e0 <__vfprintf+0x390>
   12a1e:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12a23:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12a28:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12a2d:	e9 fe f4 ff ff       	jmp    11f30 <__vfprintf+0x1be0>
   12a32:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12a37:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12a3e:	00 
   12a3f:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12a44:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12a49:	e8 e2 d8 ff ff       	call   10330 <__sprint.part.0>
   12a4e:	85 c0                	test   %eax,%eax
   12a50:	0f 85 8a dc ff ff    	jne    106e0 <__vfprintf+0x390>
   12a56:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12a5b:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12a60:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12a65:	e9 46 e9 ff ff       	jmp    113b0 <__vfprintf+0x1060>
   12a6a:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   12a70:	83 0c 24 20          	orl    $0x20,(%rsp)
   12a74:	49 83 c4 01          	add    $0x1,%r12
   12a78:	e9 fc da ff ff       	jmp    10579 <__vfprintf+0x229>
   12a7d:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   12a84:	00 
   12a85:	31 d2                	xor    %edx,%edx
   12a87:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   12a8b:	e9 28 f4 ff ff       	jmp    11eb8 <__vfprintf+0x1b68>
   12a90:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   12a96:	81 0c 24 00 08 00 00 	orl    $0x800,(%rsp)
   12a9d:	49 83 c4 01          	add    $0x1,%r12
   12aa1:	e9 d3 da ff ff       	jmp    10579 <__vfprintf+0x229>
   12aa6:	e8 e9 dc 00 00       	call   20794 <abort>
   12aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12ab0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12ab5:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12abc:	00 
   12abd:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12ac2:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12ac7:	e8 64 d8 ff ff       	call   10330 <__sprint.part.0>
   12acc:	85 c0                	test   %eax,%eax
   12ace:	0f 85 0c dc ff ff    	jne    106e0 <__vfprintf+0x390>
   12ad4:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12ad9:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12ade:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12ae3:	e9 30 e8 ff ff       	jmp    11318 <__vfprintf+0xfc8>
   12ae8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12aed:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12af4:	00 
   12af5:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12afa:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12aff:	e8 2c d8 ff ff       	call   10330 <__sprint.part.0>
   12b04:	85 c0                	test   %eax,%eax
   12b06:	0f 85 d4 db ff ff    	jne    106e0 <__vfprintf+0x390>
   12b0c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12b11:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12b16:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12b1b:	e9 71 f4 ff ff       	jmp    11f91 <__vfprintf+0x1c41>
   12b20:	48 85 c9             	test   %rcx,%rcx
   12b23:	0f 85 a9 f9 ff ff    	jne    124d2 <__vfprintf+0x2182>
   12b29:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12b2e:	8b 0f                	mov    (%rdi),%ecx
   12b30:	83 f9 2f             	cmp    $0x2f,%ecx
   12b33:	0f 87 e5 01 00 00    	ja     12d1e <__vfprintf+0x29ce>
   12b39:	89 c8                	mov    %ecx,%eax
   12b3b:	83 c1 08             	add    $0x8,%ecx
   12b3e:	48 03 47 10          	add    0x10(%rdi),%rax
   12b42:	89 0f                	mov    %ecx,(%rdi)
   12b44:	48 8b 00             	mov    (%rax),%rax
   12b47:	48 89 c1             	mov    %rax,%rcx
   12b4a:	e9 16 e1 ff ff       	jmp    10c65 <__vfprintf+0x915>
   12b4f:	4c 8d 05 5a ef 00 00 	lea    0xef5a(%rip),%r8        # 21ab0 <_ZZ17ecall_malloc_freeE8__func__+0x2b0>
   12b56:	e9 43 fa ff ff       	jmp    1259e <__vfprintf+0x224e>
   12b5b:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12b60:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   12b64:	48 8d 42 08          	lea    0x8(%rdx),%rax
   12b68:	48 89 41 08          	mov    %rax,0x8(%rcx)
   12b6c:	e9 6b fc ff ff       	jmp    127dc <__vfprintf+0x248c>
   12b71:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   12b78:	49 83 c2 10          	add    $0x10,%r10
   12b7c:	e9 26 f4 ff ff       	jmp    11fa7 <__vfprintf+0x1c57>
   12b81:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12b86:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   12b8a:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12b8e:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   12b92:	e9 44 fd ff ff       	jmp    128db <__vfprintf+0x258b>
   12b97:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12b9c:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   12ba0:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12ba4:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   12ba8:	e9 f9 fc ff ff       	jmp    128a6 <__vfprintf+0x2556>
   12bad:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12bb2:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   12bb6:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12bba:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   12bbe:	e9 b1 fc ff ff       	jmp    12874 <__vfprintf+0x2524>
   12bc3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12bc8:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12bcf:	00 
   12bd0:	e8 5b d7 ff ff       	call   10330 <__sprint.part.0>
   12bd5:	85 c0                	test   %eax,%eax
   12bd7:	0f 84 ef da ff ff    	je     106cc <__vfprintf+0x37c>
   12bdd:	e9 fe da ff ff       	jmp    106e0 <__vfprintf+0x390>
   12be2:	48 85 d2             	test   %rdx,%rdx
   12be5:	0f 84 dd 05 00 00    	je     131c8 <__vfprintf+0x2e78>
   12beb:	48 63 c3             	movslq %ebx,%rax
   12bee:	48 c1 e0 04          	shl    $0x4,%rax
   12bf2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   12bf5:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   12bf9:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   12bfd:	4d 8d 67 01          	lea    0x1(%r15),%r12
   12c01:	e9 f0 e0 ff ff       	jmp    10cf6 <__vfprintf+0x9a6>
   12c06:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   12c0d:	00 
   12c0e:	ba 08 00 00 00       	mov    $0x8,%edx
   12c13:	31 f6                	xor    %esi,%esi
   12c15:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   12c1a:	48 89 ef             	mov    %rbp,%rdi
   12c1d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   12c22:	e8 69 bd ff ff       	call   e990 <memset>
   12c27:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   12c2c:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   12c31:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   12c38:	00 
   12c39:	48 85 d2             	test   %rdx,%rdx
   12c3c:	0f 84 ef 02 00 00    	je     12f31 <__vfprintf+0x2be1>
   12c42:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   12c47:	48 c1 e0 04          	shl    $0x4,%rax
   12c4b:	8b 34 02             	mov    (%rdx,%rax,1),%esi
   12c4e:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   12c55:	00 
   12c56:	48 89 ea             	mov    %rbp,%rdx
   12c59:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12c5e:	4c 89 e7             	mov    %r12,%rdi
   12c61:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   12c66:	e8 15 3a 00 00       	call   16680 <wcrtomb>
   12c6b:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   12c70:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12c75:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   12c79:	48 89 c3             	mov    %rax,%rbx
   12c7c:	0f 84 f0 0a 00 00    	je     13772 <__vfprintf+0x3422>
   12c82:	85 c0                	test   %eax,%eax
   12c84:	89 44 24 40          	mov    %eax,0x40(%rsp)
   12c88:	b8 00 00 00 00       	mov    $0x0,%eax
   12c8d:	0f 48 d8             	cmovs  %eax,%ebx
   12c90:	e9 47 e3 ff ff       	jmp    10fdc <__vfprintf+0xc8c>
   12c95:	83 fb 24             	cmp    $0x24,%ebx
   12c98:	0f 84 a1 08 00 00    	je     1353f <__vfprintf+0x31ef>
   12c9e:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
   12ca3:	e9 74 e4 ff ff       	jmp    1111c <__vfprintf+0xdcc>
   12ca8:	89 c7                	mov    %eax,%edi
   12caa:	41 29 f3             	sub    %esi,%r11d
   12cad:	b8 00 00 00 00       	mov    $0x0,%eax
   12cb2:	29 f7                	sub    %esi,%edi
   12cb4:	85 c9                	test   %ecx,%ecx
   12cb6:	41 0f 45 fb          	cmovne %r11d,%edi
   12cba:	85 ff                	test   %edi,%edi
   12cbc:	0f 48 f8             	cmovs  %eax,%edi
   12cbf:	e9 e4 de ff ff       	jmp    10ba8 <__vfprintf+0x858>
   12cc4:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12cc9:	8b 11                	mov    (%rcx),%edx
   12ccb:	83 fa 2f             	cmp    $0x2f,%edx
   12cce:	0f 87 59 01 00 00    	ja     12e2d <__vfprintf+0x2add>
   12cd4:	89 d0                	mov    %edx,%eax
   12cd6:	83 c2 08             	add    $0x8,%edx
   12cd9:	48 03 41 10          	add    0x10(%rcx),%rax
   12cdd:	89 11                	mov    %edx,(%rcx)
   12cdf:	48 8b 08             	mov    (%rax),%rcx
   12ce2:	e9 a9 e1 ff ff       	jmp    10e90 <__vfprintf+0xb40>
   12ce7:	8b 0c 24             	mov    (%rsp),%ecx
   12cea:	83 e1 01             	and    $0x1,%ecx
   12ced:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   12cf1:	0f 85 40 f6 ff ff    	jne    12337 <__vfprintf+0x1fe7>
   12cf7:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   12cfb:	8b 5c 24 48          	mov    0x48(%rsp),%ebx
   12cff:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   12d04:	44 89 24 24          	mov    %r12d,(%rsp)
   12d08:	85 c9                	test   %ecx,%ecx
   12d0a:	0f 49 d9             	cmovns %ecx,%ebx
   12d0d:	e9 de de ff ff       	jmp    10bf0 <__vfprintf+0x8a0>
   12d12:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12d17:	8b 0e                	mov    (%rsi),%ecx
   12d19:	83 f9 2f             	cmp    $0x2f,%ecx
   12d1c:	76 25                	jbe    12d43 <__vfprintf+0x29f3>
   12d1e:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   12d23:	48 8b 47 08          	mov    0x8(%rdi),%rax
   12d27:	48 8d 48 08          	lea    0x8(%rax),%rcx
   12d2b:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   12d2f:	e9 10 fe ff ff       	jmp    12b44 <__vfprintf+0x27f4>
   12d34:	8d 77 01             	lea    0x1(%rdi),%esi
   12d37:	48 8d 2d d2 74 01 00 	lea    0x174d2(%rip),%rbp        # 2a210 <zeroes.3328>
   12d3e:	e9 67 e8 ff ff       	jmp    115aa <__vfprintf+0x125a>
   12d43:	89 c8                	mov    %ecx,%eax
   12d45:	83 c1 08             	add    $0x8,%ecx
   12d48:	48 03 46 10          	add    0x10(%rsi),%rax
   12d4c:	89 0e                	mov    %ecx,(%rsi)
   12d4e:	e9 f1 fd ff ff       	jmp    12b44 <__vfprintf+0x27f4>
   12d53:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12d58:	8b 0e                	mov    (%rsi),%ecx
   12d5a:	83 f9 2f             	cmp    $0x2f,%ecx
   12d5d:	0f 87 06 02 00 00    	ja     12f69 <__vfprintf+0x2c19>
   12d63:	89 ca                	mov    %ecx,%edx
   12d65:	83 c1 08             	add    $0x8,%ecx
   12d68:	48 03 56 10          	add    0x10(%rsi),%rdx
   12d6c:	89 0e                	mov    %ecx,(%rsi)
   12d6e:	e9 68 fb ff ff       	jmp    128db <__vfprintf+0x258b>
   12d73:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12d78:	8b 0e                	mov    (%rsi),%ecx
   12d7a:	83 f9 2f             	cmp    $0x2f,%ecx
   12d7d:	0f 87 3b 02 00 00    	ja     12fbe <__vfprintf+0x2c6e>
   12d83:	89 ca                	mov    %ecx,%edx
   12d85:	83 c1 08             	add    $0x8,%ecx
   12d88:	48 03 56 10          	add    0x10(%rsi),%rdx
   12d8c:	89 0e                	mov    %ecx,(%rsi)
   12d8e:	e9 e1 fa ff ff       	jmp    12874 <__vfprintf+0x2524>
   12d93:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12d98:	8b 0e                	mov    (%rsi),%ecx
   12d9a:	83 f9 2f             	cmp    $0x2f,%ecx
   12d9d:	0f 87 b0 01 00 00    	ja     12f53 <__vfprintf+0x2c03>
   12da3:	89 ca                	mov    %ecx,%edx
   12da5:	83 c1 08             	add    $0x8,%ecx
   12da8:	48 03 56 10          	add    0x10(%rsi),%rdx
   12dac:	89 0e                	mov    %ecx,(%rsi)
   12dae:	e9 f3 fa ff ff       	jmp    128a6 <__vfprintf+0x2556>
   12db3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12db8:	8b 0e                	mov    (%rsi),%ecx
   12dba:	83 f9 2f             	cmp    $0x2f,%ecx
   12dbd:	76 84                	jbe    12d43 <__vfprintf+0x29f3>
   12dbf:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12dc4:	48 8b 46 08          	mov    0x8(%rsi),%rax
   12dc8:	48 8d 48 08          	lea    0x8(%rax),%rcx
   12dcc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   12dd0:	e9 6f fd ff ff       	jmp    12b44 <__vfprintf+0x27f4>
   12dd5:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12dda:	8b 11                	mov    (%rcx),%edx
   12ddc:	83 fa 2f             	cmp    $0x2f,%edx
   12ddf:	0f 87 27 01 00 00    	ja     12f0c <__vfprintf+0x2bbc>
   12de5:	89 d0                	mov    %edx,%eax
   12de7:	83 c2 08             	add    $0x8,%edx
   12dea:	48 03 41 10          	add    0x10(%rcx),%rax
   12dee:	89 11                	mov    %edx,(%rcx)
   12df0:	0f b6 00             	movzbl (%rax),%eax
   12df3:	e9 c8 e1 ff ff       	jmp    10fc0 <__vfprintf+0xc70>
   12df8:	41 8d 79 01          	lea    0x1(%r9),%edi
   12dfc:	4c 8d 3d 1d 74 01 00 	lea    0x1741d(%rip),%r15        # 2a220 <blanks.3327>
   12e03:	e9 82 eb ff ff       	jmp    1198a <__vfprintf+0x163a>
   12e08:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12e0d:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12e11:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   12e16:	48 83 c0 0f          	add    $0xf,%rax
   12e1a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   12e1e:	48 8d 50 10          	lea    0x10(%rax),%rdx
   12e22:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12e26:	db 28                	fldt   (%rax)
   12e28:	e9 7f db ff ff       	jmp    109ac <__vfprintf+0x65c>
   12e2d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12e32:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12e36:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12e3a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12e3e:	e9 9c fe ff ff       	jmp    12cdf <__vfprintf+0x298f>
   12e43:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12e48:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12e4f:	00 
   12e50:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12e55:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12e5a:	e8 d1 d4 ff ff       	call   10330 <__sprint.part.0>
   12e5f:	85 c0                	test   %eax,%eax
   12e61:	0f 85 79 d8 ff ff    	jne    106e0 <__vfprintf+0x390>
   12e67:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12e6c:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12e71:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12e76:	e9 bb e4 ff ff       	jmp    11336 <__vfprintf+0xfe6>
   12e7b:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12e80:	8b 11                	mov    (%rcx),%edx
   12e82:	83 fa 2f             	cmp    $0x2f,%edx
   12e85:	0f 87 49 01 00 00    	ja     12fd4 <__vfprintf+0x2c84>
   12e8b:	89 d0                	mov    %edx,%eax
   12e8d:	83 c2 08             	add    $0x8,%edx
   12e90:	48 03 41 10          	add    0x10(%rcx),%rax
   12e94:	89 11                	mov    %edx,(%rcx)
   12e96:	4c 8b 00             	mov    (%rax),%r8
   12e99:	e9 f2 f6 ff ff       	jmp    12590 <__vfprintf+0x2240>
   12e9e:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12ea3:	8b 51 04             	mov    0x4(%rcx),%edx
   12ea6:	81 fa af 00 00 00    	cmp    $0xaf,%edx
   12eac:	0f 87 9e 02 00 00    	ja     13150 <__vfprintf+0x2e00>
   12eb2:	89 d0                	mov    %edx,%eax
   12eb4:	83 c2 10             	add    $0x10,%edx
   12eb7:	48 03 41 10          	add    0x10(%rcx),%rax
   12ebb:	89 51 04             	mov    %edx,0x4(%rcx)
   12ebe:	f2 0f 10 00          	movsd  (%rax),%xmm0
   12ec2:	e9 12 f8 ff ff       	jmp    126d9 <__vfprintf+0x2389>
   12ec7:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12ecc:	8b 11                	mov    (%rcx),%edx
   12ece:	83 fa 2f             	cmp    $0x2f,%edx
   12ed1:	0f 87 39 01 00 00    	ja     13010 <__vfprintf+0x2cc0>
   12ed7:	89 d0                	mov    %edx,%eax
   12ed9:	83 c2 08             	add    $0x8,%edx
   12edc:	48 03 41 10          	add    0x10(%rcx),%rax
   12ee0:	89 11                	mov    %edx,(%rcx)
   12ee2:	48 8b 00             	mov    (%rax),%rax
   12ee5:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   12eea:	e9 be de ff ff       	jmp    10dad <__vfprintf+0xa5d>
   12eef:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   12ef3:	41 0f be 1c 24       	movsbl (%r12),%ebx
   12ef8:	e9 7c d6 ff ff       	jmp    10579 <__vfprintf+0x229>
   12efd:	8d 7e 01             	lea    0x1(%rsi),%edi
   12f00:	4c 8d 3d 19 73 01 00 	lea    0x17319(%rip),%r15        # 2a220 <blanks.3327>
   12f07:	e9 a8 eb ff ff       	jmp    11ab4 <__vfprintf+0x1764>
   12f0c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12f11:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12f15:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12f19:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12f1d:	e9 ce fe ff ff       	jmp    12df0 <__vfprintf+0x2aa0>
   12f22:	8d 77 01             	lea    0x1(%rdi),%esi
   12f25:	48 8d 2d e4 72 01 00 	lea    0x172e4(%rip),%rbp        # 2a210 <zeroes.3328>
   12f2c:	e9 cc e7 ff ff       	jmp    116fd <__vfprintf+0x13ad>
   12f31:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12f36:	8b 11                	mov    (%rcx),%edx
   12f38:	83 fa 2f             	cmp    $0x2f,%edx
   12f3b:	0f 87 25 02 00 00    	ja     13166 <__vfprintf+0x2e16>
   12f41:	89 d0                	mov    %edx,%eax
   12f43:	83 c2 08             	add    $0x8,%edx
   12f46:	48 03 41 10          	add    0x10(%rcx),%rax
   12f4a:	89 11                	mov    %edx,(%rcx)
   12f4c:	8b 30                	mov    (%rax),%esi
   12f4e:	e9 fb fc ff ff       	jmp    12c4e <__vfprintf+0x28fe>
   12f53:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12f58:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   12f5c:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12f60:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   12f64:	e9 3d f9 ff ff       	jmp    128a6 <__vfprintf+0x2556>
   12f69:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12f6e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   12f72:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12f76:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   12f7a:	e9 5c f9 ff ff       	jmp    128db <__vfprintf+0x258b>
   12f7f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12f84:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12f8b:	00 
   12f8c:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   12f91:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   12f96:	e8 95 d3 ff ff       	call   10330 <__sprint.part.0>
   12f9b:	85 c0                	test   %eax,%eax
   12f9d:	0f 85 3d d7 ff ff    	jne    106e0 <__vfprintf+0x390>
   12fa3:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   12faa:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12faf:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12fb4:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   12fb9:	e9 e9 ef ff ff       	jmp    11fa7 <__vfprintf+0x1c57>
   12fbe:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12fc3:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   12fc7:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   12fcb:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   12fcf:	e9 a0 f8 ff ff       	jmp    12874 <__vfprintf+0x2524>
   12fd4:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   12fd9:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12fdd:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12fe1:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12fe5:	e9 ac fe ff ff       	jmp    12e96 <__vfprintf+0x2b46>
   12fea:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   12fef:	8b 16                	mov    (%rsi),%edx
   12ff1:	83 fa 2f             	cmp    $0x2f,%edx
   12ff4:	0f 87 01 03 00 00    	ja     132fb <__vfprintf+0x2fab>
   12ffa:	89 d0                	mov    %edx,%eax
   12ffc:	83 c2 08             	add    $0x8,%edx
   12fff:	48 03 46 10          	add    0x10(%rsi),%rax
   13003:	89 16                	mov    %edx,(%rsi)
   13005:	8b 00                	mov    (%rax),%eax
   13007:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   1300b:	e9 e6 dc ff ff       	jmp    10cf6 <__vfprintf+0x9a6>
   13010:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13015:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13019:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1301d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13021:	e9 bc fe ff ff       	jmp    12ee2 <__vfprintf+0x2b92>
   13026:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1302b:	ba 08 00 00 00       	mov    $0x8,%edx
   13030:	31 f6                	xor    %esi,%esi
   13032:	45 31 ff             	xor    %r15d,%r15d
   13035:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   1303c:	00 
   1303d:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   13042:	48 8d 9c 24 32 02 00 	lea    0x232(%rsp),%rbx
   13049:	00 
   1304a:	48 89 ef             	mov    %rbp,%rdi
   1304d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   13052:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   13059:	00 
   1305a:	e8 31 b9 ff ff       	call   e990 <memset>
   1305f:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   13064:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13069:	89 44 24 48          	mov    %eax,0x48(%rsp)
   1306d:	48 89 d8             	mov    %rbx,%rax
   13070:	48 89 eb             	mov    %rbp,%rbx
   13073:	48 89 c5             	mov    %rax,%rbp
   13076:	eb 11                	jmp    13089 <__vfprintf+0x2d39>
   13078:	4c 01 f8             	add    %r15,%rax
   1307b:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
   13080:	0f 87 f7 01 00 00    	ja     1327d <__vfprintf+0x2f2d>
   13086:	49 89 c7             	mov    %rax,%r15
   13089:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   13090:	00 
   13091:	48 89 da             	mov    %rbx,%rdx
   13094:	48 89 ef             	mov    %rbp,%rdi
   13097:	48 8d 70 04          	lea    0x4(%rax),%rsi
   1309b:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
   130a2:	00 
   130a3:	8b 30                	mov    (%rax),%esi
   130a5:	e8 d6 35 00 00       	call   16680 <wcrtomb>
   130aa:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   130ae:	48 83 fe fd          	cmp    $0xfffffffffffffffd,%rsi
   130b2:	76 c4                	jbe    13078 <__vfprintf+0x2d28>
   130b4:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   130b9:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   130be:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   130c2:	0f 85 07 dd ff ff    	jne    10dcf <__vfprintf+0xa7f>
   130c8:	e8 73 c2 ff ff       	call   f340 <__errno>
   130cd:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   130d3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   130d8:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   130df:	ff 
   130e0:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   130e6:	e9 1a d5 ff ff       	jmp    10605 <__vfprintf+0x2b5>
   130eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   130f0:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   130f7:	00 
   130f8:	31 f6                	xor    %esi,%esi
   130fa:	ba 08 00 00 00       	mov    $0x8,%edx
   130ff:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13104:	4c 89 ff             	mov    %r15,%rdi
   13107:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   1310c:	e8 7f b8 ff ff       	call   e990 <memset>
   13111:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   13116:	4c 89 f9             	mov    %r15,%rcx
   13119:	31 d2                	xor    %edx,%edx
   1311b:	31 ff                	xor    %edi,%edi
   1311d:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   13124:	00 
   13125:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   1312c:	00 
   1312d:	e8 6e 36 00 00       	call   167a0 <wcsrtombs>
   13132:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   13137:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1313c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13140:	49 89 c7             	mov    %rax,%r15
   13143:	0f 85 86 dc ff ff    	jne    10dcf <__vfprintf+0xa7f>
   13149:	e9 7a ff ff ff       	jmp    130c8 <__vfprintf+0x2d78>
   1314e:	66 90                	xchg   %ax,%ax
   13150:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13155:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13159:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1315d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13161:	e9 58 fd ff ff       	jmp    12ebe <__vfprintf+0x2b6e>
   13166:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1316b:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1316f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13173:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13177:	8b 30                	mov    (%rax),%esi
   13179:	e9 d0 fa ff ff       	jmp    12c4e <__vfprintf+0x28fe>
   1317e:	8d 7e 01             	lea    0x1(%rsi),%edi
   13181:	48 8d 2d 88 70 01 00 	lea    0x17088(%rip),%rbp        # 2a210 <zeroes.3328>
   13188:	e9 21 e3 ff ff       	jmp    114ae <__vfprintf+0x115e>
   1318d:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   13194:	0f 84 23 02 00 00    	je     133bd <__vfprintf+0x306d>
   1319a:	48 85 c9             	test   %rcx,%rcx
   1319d:	0f 84 a4 04 00 00    	je     13647 <__vfprintf+0x32f7>
   131a3:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   131a8:	48 c1 e0 04          	shl    $0x4,%rax
   131ac:	48 0f be 0c 01       	movsbq (%rcx,%rax,1),%rcx
   131b1:	48 89 c8             	mov    %rcx,%rax
   131b4:	e9 ac da ff ff       	jmp    10c65 <__vfprintf+0x915>
   131b9:	8d 77 01             	lea    0x1(%rdi),%esi
   131bc:	48 8d 2d 4d 70 01 00 	lea    0x1704d(%rip),%rbp        # 2a210 <zeroes.3328>
   131c3:	e9 65 f3 ff ff       	jmp    1252d <__vfprintf+0x21dd>
   131c8:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   131cd:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   131d4:	00 
   131d5:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   131dc:	00 
   131dd:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   131e2:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   131e9:	00 
   131ea:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   131f1:	00 
   131f2:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   131f7:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   131fe:	00 
   131ff:	e8 9c c2 ff ff       	call   f4a0 <__find_arguments>
   13204:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   13209:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
   1320e:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   13215:	00 
   13216:	48 85 d2             	test   %rdx,%rdx
   13219:	0f 85 cc f9 ff ff    	jne    12beb <__vfprintf+0x289b>
   1321f:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13224:	8b 11                	mov    (%rcx),%edx
   13226:	83 fa 2f             	cmp    $0x2f,%edx
   13229:	0f 87 59 02 00 00    	ja     13488 <__vfprintf+0x3138>
   1322f:	89 d0                	mov    %edx,%eax
   13231:	83 c2 08             	add    $0x8,%edx
   13234:	48 03 41 10          	add    0x10(%rcx),%rax
   13238:	89 11                	mov    %edx,(%rcx)
   1323a:	8b 00                	mov    (%rax),%eax
   1323c:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   13240:	e9 b4 f9 ff ff       	jmp    12bf9 <__vfprintf+0x28a9>
   13245:	8d 77 01             	lea    0x1(%rdi),%esi
   13248:	e9 f7 f6 ff ff       	jmp    12944 <__vfprintf+0x25f4>
   1324d:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   13254:	0f 84 81 01 00 00    	je     133db <__vfprintf+0x308b>
   1325a:	48 85 c9             	test   %rcx,%rcx
   1325d:	0f 84 ec 04 00 00    	je     1374f <__vfprintf+0x33ff>
   13263:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   13268:	48 c1 e2 04          	shl    $0x4,%rdx
   1326c:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   13270:	e9 c6 df ff ff       	jmp    1123b <__vfprintf+0xeeb>
   13275:	45 31 e4             	xor    %r12d,%r12d
   13278:	e9 93 de ff ff       	jmp    11110 <__vfprintf+0xdc0>
   1327d:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   13282:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   13287:	e9 43 db ff ff       	jmp    10dcf <__vfprintf+0xa7f>
   1328c:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   13293:	0f 84 5c 01 00 00    	je     133f5 <__vfprintf+0x30a5>
   13299:	48 85 c9             	test   %rcx,%rcx
   1329c:	0f 84 34 03 00 00    	je     135d6 <__vfprintf+0x3286>
   132a2:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   132a7:	89 44 24 38          	mov    %eax,0x38(%rsp)
   132ab:	b8 01 00 00 00       	mov    $0x1,%eax
   132b0:	48 c1 e2 04          	shl    $0x4,%rdx
   132b4:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   132b8:	e9 f3 db ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   132bd:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   132c4:	0f 84 d4 01 00 00    	je     1349e <__vfprintf+0x314e>
   132ca:	48 85 c9             	test   %rcx,%rcx
   132cd:	0f 84 b9 04 00 00    	je     1378c <__vfprintf+0x343c>
   132d3:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   132d8:	89 44 24 38          	mov    %eax,0x38(%rsp)
   132dc:	31 c0                	xor    %eax,%eax
   132de:	48 c1 e2 04          	shl    $0x4,%rdx
   132e2:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   132e6:	e9 c5 db ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   132eb:	c7 84 24 9c 00 00 00 	movl   $0x2,0x9c(%rsp)
   132f2:	02 00 00 00 
   132f6:	e9 1c f0 ff ff       	jmp    12317 <__vfprintf+0x1fc7>
   132fb:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13300:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13304:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13308:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1330c:	e9 f4 fc ff ff       	jmp    13005 <__vfprintf+0x2cb5>
   13311:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13316:	8b 0e                	mov    (%rsi),%ecx
   13318:	83 f9 2f             	cmp    $0x2f,%ecx
   1331b:	0f 87 08 02 00 00    	ja     13529 <__vfprintf+0x31d9>
   13321:	89 ca                	mov    %ecx,%edx
   13323:	83 c1 08             	add    $0x8,%ecx
   13326:	48 03 56 10          	add    0x10(%rsi),%rdx
   1332a:	89 0e                	mov    %ecx,(%rsi)
   1332c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   13330:	0f b7 0a             	movzwl (%rdx),%ecx
   13333:	b8 01 00 00 00       	mov    $0x1,%eax
   13338:	e9 73 db ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   1333d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13342:	8b 0e                	mov    (%rsi),%ecx
   13344:	83 f9 2f             	cmp    $0x2f,%ecx
   13347:	0f 87 10 02 00 00    	ja     1355d <__vfprintf+0x320d>
   1334d:	89 ca                	mov    %ecx,%edx
   1334f:	83 c1 08             	add    $0x8,%ecx
   13352:	48 03 56 10          	add    0x10(%rsi),%rdx
   13356:	89 0e                	mov    %ecx,(%rsi)
   13358:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1335c:	0f b7 0a             	movzwl (%rdx),%ecx
   1335f:	31 c0                	xor    %eax,%eax
   13361:	e9 4a db ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   13366:	4c 89 c7             	mov    %r8,%rdi
   13369:	e8 02 9e ff ff       	call   d170 <dlfree>
   1336e:	e9 55 fd ff ff       	jmp    130c8 <__vfprintf+0x2d78>
   13373:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13378:	8b 0e                	mov    (%rsi),%ecx
   1337a:	83 f9 2f             	cmp    $0x2f,%ecx
   1337d:	0f 87 c3 04 00 00    	ja     13846 <__vfprintf+0x34f6>
   13383:	89 c8                	mov    %ecx,%eax
   13385:	83 c1 08             	add    $0x8,%ecx
   13388:	48 03 46 10          	add    0x10(%rsi),%rax
   1338c:	89 0e                	mov    %ecx,(%rsi)
   1338e:	48 0f bf 08          	movswq (%rax),%rcx
   13392:	48 89 c8             	mov    %rcx,%rax
   13395:	e9 cb d8 ff ff       	jmp    10c65 <__vfprintf+0x915>
   1339a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1339f:	8b 0e                	mov    (%rsi),%ecx
   133a1:	83 f9 2f             	cmp    $0x2f,%ecx
   133a4:	0f 87 c0 02 00 00    	ja     1366a <__vfprintf+0x331a>
   133aa:	89 ca                	mov    %ecx,%edx
   133ac:	83 c1 08             	add    $0x8,%ecx
   133af:	48 03 56 10          	add    0x10(%rsi),%rdx
   133b3:	89 0e                	mov    %ecx,(%rsi)
   133b5:	0f b7 0a             	movzwl (%rdx),%ecx
   133b8:	e9 7e de ff ff       	jmp    1123b <__vfprintf+0xeeb>
   133bd:	48 85 c9             	test   %rcx,%rcx
   133c0:	0f 84 35 04 00 00    	je     137fb <__vfprintf+0x34ab>
   133c6:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   133cb:	48 c1 e0 04          	shl    $0x4,%rax
   133cf:	48 63 0c 01          	movslq (%rcx,%rax,1),%rcx
   133d3:	48 89 c8             	mov    %rcx,%rax
   133d6:	e9 8a d8 ff ff       	jmp    10c65 <__vfprintf+0x915>
   133db:	48 85 c9             	test   %rcx,%rcx
   133de:	0f 84 1a 02 00 00    	je     135fe <__vfprintf+0x32ae>
   133e4:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   133e9:	48 c1 e2 04          	shl    $0x4,%rdx
   133ed:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   133f0:	e9 46 de ff ff       	jmp    1123b <__vfprintf+0xeeb>
   133f5:	48 85 c9             	test   %rcx,%rcx
   133f8:	0f 84 b5 04 00 00    	je     138b3 <__vfprintf+0x3563>
   133fe:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   13403:	89 44 24 38          	mov    %eax,0x38(%rsp)
   13407:	b8 01 00 00 00       	mov    $0x1,%eax
   1340c:	48 c1 e2 04          	shl    $0x4,%rdx
   13410:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   13413:	e9 98 da ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   13418:	e8 23 bf ff ff       	call   f340 <__errno>
   1341d:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   13424:	ff 
   13425:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   1342b:	e9 06 d2 ff ff       	jmp    10636 <__vfprintf+0x2e6>
   13430:	41 0f be 44 24 01    	movsbl 0x1(%r12),%eax
   13436:	31 db                	xor    %ebx,%ebx
   13438:	4d 89 fc             	mov    %r15,%r12
   1343b:	8d 50 d0             	lea    -0x30(%rax),%edx
   1343e:	89 c1                	mov    %eax,%ecx
   13440:	83 fa 09             	cmp    $0x9,%edx
   13443:	76 2e                	jbe    13473 <__vfprintf+0x3123>
   13445:	eb 77                	jmp    134be <__vfprintf+0x316e>
   13447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1344e:	00 00 
   13450:	49 83 c4 01          	add    $0x1,%r12
   13454:	8d 5c 10 d0          	lea    -0x30(%rax,%rdx,1),%ebx
   13458:	41 0f be 04 24       	movsbl (%r12),%eax
   1345d:	8d 50 d0             	lea    -0x30(%rax),%edx
   13460:	89 c1                	mov    %eax,%ecx
   13462:	83 fa 09             	cmp    $0x9,%edx
   13465:	77 57                	ja     134be <__vfprintf+0x316e>
   13467:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   1346d:	0f 8f 6d d1 ff ff    	jg     105e0 <__vfprintf+0x290>
   13473:	8d 14 9b             	lea    (%rbx,%rbx,4),%edx
   13476:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   1347b:	01 d2                	add    %edx,%edx
   1347d:	29 c1                	sub    %eax,%ecx
   1347f:	39 d1                	cmp    %edx,%ecx
   13481:	7d cd                	jge    13450 <__vfprintf+0x3100>
   13483:	e9 58 d1 ff ff       	jmp    105e0 <__vfprintf+0x290>
   13488:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1348d:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13491:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13495:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13499:	e9 9c fd ff ff       	jmp    1323a <__vfprintf+0x2eea>
   1349e:	48 85 c9             	test   %rcx,%rcx
   134a1:	0f 84 0a 03 00 00    	je     137b1 <__vfprintf+0x3461>
   134a7:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   134ac:	89 44 24 38          	mov    %eax,0x38(%rsp)
   134b0:	31 c0                	xor    %eax,%eax
   134b2:	48 c1 e2 04          	shl    $0x4,%rdx
   134b6:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   134b9:	e9 f2 d9 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   134be:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   134c5:	00 
   134c6:	80 f9 24             	cmp    $0x24,%cl
   134c9:	0f 84 e3 01 00 00    	je     136b2 <__vfprintf+0x3362>
   134cf:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   134d4:	8d 48 01             	lea    0x1(%rax),%ecx
   134d7:	48 85 d2             	test   %rdx,%rdx
   134da:	0f 84 b3 01 00 00    	je     13693 <__vfprintf+0x3343>
   134e0:	48 c1 e0 04          	shl    $0x4,%rax
   134e4:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   134e8:	45 85 db             	test   %r11d,%r11d
   134eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   134f0:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   134f4:	41 0f be 1f          	movsbl (%r15),%ebx
   134f8:	44 0f 48 d8          	cmovs  %eax,%r11d
   134fc:	4d 89 fc             	mov    %r15,%r12
   134ff:	e9 75 d0 ff ff       	jmp    10579 <__vfprintf+0x229>
   13504:	e8 47 b6 ff ff       	call   eb50 <__stack_chk_fail>
   13509:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   13510:	00 00 
   13512:	0f 84 44 03 00 00    	je     1385c <__vfprintf+0x350c>
   13518:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1351d:	41 0f be 1f          	movsbl (%r15),%ebx
   13521:	4d 89 fc             	mov    %r15,%r12
   13524:	e9 50 d0 ff ff       	jmp    10579 <__vfprintf+0x229>
   13529:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1352e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13532:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13536:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   1353a:	e9 ed fd ff ff       	jmp    1332c <__vfprintf+0x2fdc>
   1353f:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   13546:	00 00 
   13548:	74 29                	je     13573 <__vfprintf+0x3223>
   1354a:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   13550:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   13555:	4d 89 fc             	mov    %r15,%r12
   13558:	e9 1c d0 ff ff       	jmp    10579 <__vfprintf+0x229>
   1355d:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13562:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13566:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   1356a:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   1356e:	e9 e5 fd ff ff       	jmp    13358 <__vfprintf+0x3008>
   13573:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   13578:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1357f:	00 
   13580:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   13587:	00 
   13588:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1358d:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   13594:	00 
   13595:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1359c:	00 
   1359d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   135a2:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   135a7:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   135ae:	00 
   135af:	e8 ec be ff ff       	call   f4a0 <__find_arguments>
   135b4:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
   135b9:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   135bf:	4d 89 fc             	mov    %r15,%r12
   135c2:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   135c7:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   135cc:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   135d1:	e9 a3 cf ff ff       	jmp    10579 <__vfprintf+0x229>
   135d6:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   135db:	8b 0f                	mov    (%rdi),%ecx
   135dd:	83 f9 2f             	cmp    $0x2f,%ecx
   135e0:	77 3a                	ja     1361c <__vfprintf+0x32cc>
   135e2:	89 ca                	mov    %ecx,%edx
   135e4:	83 c1 08             	add    $0x8,%ecx
   135e7:	48 03 57 10          	add    0x10(%rdi),%rdx
   135eb:	89 0f                	mov    %ecx,(%rdi)
   135ed:	89 44 24 38          	mov    %eax,0x38(%rsp)
   135f1:	0f b6 0a             	movzbl (%rdx),%ecx
   135f4:	b8 01 00 00 00       	mov    $0x1,%eax
   135f9:	e9 b2 d8 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   135fe:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13603:	8b 0e                	mov    (%rsi),%ecx
   13605:	83 f9 2f             	cmp    $0x2f,%ecx
   13608:	77 25                	ja     1362f <__vfprintf+0x32df>
   1360a:	89 ca                	mov    %ecx,%edx
   1360c:	83 c1 08             	add    $0x8,%ecx
   1360f:	48 03 56 10          	add    0x10(%rsi),%rdx
   13613:	89 0e                	mov    %ecx,(%rsi)
   13615:	8b 0a                	mov    (%rdx),%ecx
   13617:	e9 1f dc ff ff       	jmp    1123b <__vfprintf+0xeeb>
   1361c:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13621:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   13625:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13629:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   1362d:	eb be                	jmp    135ed <__vfprintf+0x329d>
   1362f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13634:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13638:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   1363c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13640:	8b 0a                	mov    (%rdx),%ecx
   13642:	e9 f4 db ff ff       	jmp    1123b <__vfprintf+0xeeb>
   13647:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1364c:	8b 0f                	mov    (%rdi),%ecx
   1364e:	83 f9 2f             	cmp    $0x2f,%ecx
   13651:	77 2d                	ja     13680 <__vfprintf+0x3330>
   13653:	89 c8                	mov    %ecx,%eax
   13655:	83 c1 08             	add    $0x8,%ecx
   13658:	48 03 47 10          	add    0x10(%rdi),%rax
   1365c:	89 0f                	mov    %ecx,(%rdi)
   1365e:	48 0f be 08          	movsbq (%rax),%rcx
   13662:	48 89 c8             	mov    %rcx,%rax
   13665:	e9 fb d5 ff ff       	jmp    10c65 <__vfprintf+0x915>
   1366a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1366f:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13673:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13677:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   1367b:	e9 35 fd ff ff       	jmp    133b5 <__vfprintf+0x3065>
   13680:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13685:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13689:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1368d:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   13691:	eb cb                	jmp    1365e <__vfprintf+0x330e>
   13693:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13698:	8b 16                	mov    (%rsi),%edx
   1369a:	83 fa 2f             	cmp    $0x2f,%edx
   1369d:	77 31                	ja     136d0 <__vfprintf+0x3380>
   1369f:	89 d0                	mov    %edx,%eax
   136a1:	83 c2 08             	add    $0x8,%edx
   136a4:	48 03 46 10          	add    0x10(%rsi),%rax
   136a8:	89 16                	mov    %edx,(%rsi)
   136aa:	44 8b 18             	mov    (%rax),%r11d
   136ad:	e9 36 fe ff ff       	jmp    134e8 <__vfprintf+0x3198>
   136b2:	48 85 d2             	test   %rdx,%rdx
   136b5:	74 2c                	je     136e3 <__vfprintf+0x3393>
   136b7:	48 63 c3             	movslq %ebx,%rax
   136ba:	48 c1 e0 04          	shl    $0x4,%rax
   136be:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   136c2:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   136c6:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   136cb:	e9 18 fe ff ff       	jmp    134e8 <__vfprintf+0x3198>
   136d0:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   136d5:	48 8b 46 08          	mov    0x8(%rsi),%rax
   136d9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   136dd:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   136e1:	eb c7                	jmp    136aa <__vfprintf+0x335a>
   136e3:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   136e8:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   136ef:	00 
   136f0:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   136f7:	00 
   136f8:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   136fd:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   13704:	00 
   13705:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1370c:	00 
   1370d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   13714:	00 
   13715:	e8 86 bd ff ff       	call   f4a0 <__find_arguments>
   1371a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   13721:	00 
   13722:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   13727:	48 85 d2             	test   %rdx,%rdx
   1372a:	75 8b                	jne    136b7 <__vfprintf+0x3367>
   1372c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13731:	8b 11                	mov    (%rcx),%edx
   13733:	83 fa 2f             	cmp    $0x2f,%edx
   13736:	0f 87 e1 00 00 00    	ja     1381d <__vfprintf+0x34cd>
   1373c:	89 d0                	mov    %edx,%eax
   1373e:	83 c2 08             	add    $0x8,%edx
   13741:	48 03 41 10          	add    0x10(%rcx),%rax
   13745:	89 11                	mov    %edx,(%rcx)
   13747:	44 8b 18             	mov    (%rax),%r11d
   1374a:	e9 73 ff ff ff       	jmp    136c2 <__vfprintf+0x3372>
   1374f:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13754:	8b 0f                	mov    (%rdi),%ecx
   13756:	83 f9 2f             	cmp    $0x2f,%ecx
   13759:	0f 87 7b 01 00 00    	ja     138da <__vfprintf+0x358a>
   1375f:	89 ca                	mov    %ecx,%edx
   13761:	83 c1 08             	add    $0x8,%ecx
   13764:	48 03 57 10          	add    0x10(%rdi),%rdx
   13768:	89 0f                	mov    %ecx,(%rdi)
   1376a:	0f b6 0a             	movzbl (%rdx),%ecx
   1376d:	e9 c9 da ff ff       	jmp    1123b <__vfprintf+0xeeb>
   13772:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   13777:	66 83 48 10 40       	orw    $0x40,0x10(%rax)
   1377c:	e8 bf bb ff ff       	call   f340 <__errno>
   13781:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   13787:	e9 54 cf ff ff       	jmp    106e0 <__vfprintf+0x390>
   1378c:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13791:	8b 0f                	mov    (%rdi),%ecx
   13793:	83 f9 2f             	cmp    $0x2f,%ecx
   13796:	77 3d                	ja     137d5 <__vfprintf+0x3485>
   13798:	89 ca                	mov    %ecx,%edx
   1379a:	83 c1 08             	add    $0x8,%ecx
   1379d:	48 03 57 10          	add    0x10(%rdi),%rdx
   137a1:	89 0f                	mov    %ecx,(%rdi)
   137a3:	89 44 24 38          	mov    %eax,0x38(%rsp)
   137a7:	0f b6 0a             	movzbl (%rdx),%ecx
   137aa:	31 c0                	xor    %eax,%eax
   137ac:	e9 ff d6 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   137b1:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   137b6:	8b 0e                	mov    (%rsi),%ecx
   137b8:	83 f9 2f             	cmp    $0x2f,%ecx
   137bb:	77 2b                	ja     137e8 <__vfprintf+0x3498>
   137bd:	89 ca                	mov    %ecx,%edx
   137bf:	83 c1 08             	add    $0x8,%ecx
   137c2:	48 03 56 10          	add    0x10(%rsi),%rdx
   137c6:	89 0e                	mov    %ecx,(%rsi)
   137c8:	89 44 24 38          	mov    %eax,0x38(%rsp)
   137cc:	8b 0a                	mov    (%rdx),%ecx
   137ce:	31 c0                	xor    %eax,%eax
   137d0:	e9 db d6 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   137d5:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   137da:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   137de:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   137e2:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   137e6:	eb bb                	jmp    137a3 <__vfprintf+0x3453>
   137e8:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   137ed:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   137f1:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   137f5:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   137f9:	eb cd                	jmp    137c8 <__vfprintf+0x3478>
   137fb:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13800:	8b 0e                	mov    (%rsi),%ecx
   13802:	83 f9 2f             	cmp    $0x2f,%ecx
   13805:	77 2c                	ja     13833 <__vfprintf+0x34e3>
   13807:	89 c8                	mov    %ecx,%eax
   13809:	83 c1 08             	add    $0x8,%ecx
   1380c:	48 03 46 10          	add    0x10(%rsi),%rax
   13810:	89 0e                	mov    %ecx,(%rsi)
   13812:	48 63 08             	movslq (%rax),%rcx
   13815:	48 89 c8             	mov    %rcx,%rax
   13818:	e9 48 d4 ff ff       	jmp    10c65 <__vfprintf+0x915>
   1381d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13822:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13826:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1382a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1382e:	e9 14 ff ff ff       	jmp    13747 <__vfprintf+0x33f7>
   13833:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13838:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1383c:	48 8d 48 08          	lea    0x8(%rax),%rcx
   13840:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13844:	eb cc                	jmp    13812 <__vfprintf+0x34c2>
   13846:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1384b:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1384f:	48 8d 48 08          	lea    0x8(%rax),%rcx
   13853:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13857:	e9 32 fb ff ff       	jmp    1338e <__vfprintf+0x303e>
   1385c:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   13861:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   13868:	00 
   13869:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   13870:	00 
   13871:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13876:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   1387d:	00 
   1387e:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   13885:	00 
   13886:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1388b:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   13892:	00 
   13893:	e8 08 bc ff ff       	call   f4a0 <__find_arguments>
   13898:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1389d:	41 0f be 1f          	movsbl (%r15),%ebx
   138a1:	4d 89 fc             	mov    %r15,%r12
   138a4:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   138a9:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   138ae:	e9 c6 cc ff ff       	jmp    10579 <__vfprintf+0x229>
   138b3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   138b8:	8b 0e                	mov    (%rsi),%ecx
   138ba:	83 f9 2f             	cmp    $0x2f,%ecx
   138bd:	77 31                	ja     138f0 <__vfprintf+0x35a0>
   138bf:	89 ca                	mov    %ecx,%edx
   138c1:	83 c1 08             	add    $0x8,%ecx
   138c4:	48 03 56 10          	add    0x10(%rsi),%rdx
   138c8:	89 0e                	mov    %ecx,(%rsi)
   138ca:	89 44 24 38          	mov    %eax,0x38(%rsp)
   138ce:	8b 0a                	mov    (%rdx),%ecx
   138d0:	b8 01 00 00 00       	mov    $0x1,%eax
   138d5:	e9 d6 d5 ff ff       	jmp    10eb0 <__vfprintf+0xb60>
   138da:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   138df:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   138e3:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   138e7:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   138eb:	e9 7a fe ff ff       	jmp    1376a <__vfprintf+0x341a>
   138f0:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   138f5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   138f9:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   138fd:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13901:	eb c7                	jmp    138ca <__vfprintf+0x357a>
   13903:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1390a:	00 00 00 
   1390d:	0f 1f 00             	nopl   (%rax)

0000000000013910 <__memcpy_verw>:
   13910:	8a 06                	mov    (%rsi),%al
   13912:	48 83 ec 08          	sub    $0x8,%rsp
   13916:	8c 1c 24             	mov    %ds,(%rsp)
   13919:	0f 00 2c 24          	verw   (%rsp)
   1391d:	88 07                	mov    %al,(%rdi)
   1391f:	0f ae f0             	mfence 
   13922:	0f ae e8             	lfence 
   13925:	48 83 c4 08          	add    $0x8,%rsp
   13929:	48 89 f8             	mov    %rdi,%rax
   1392c:	c3                   	ret    
   1392d:	cc                   	int3   
   1392e:	cc                   	int3   
   1392f:	cc                   	int3   

0000000000013930 <__memcpy_8a>:
   13930:	48 8b 06             	mov    (%rsi),%rax
   13933:	48 89 07             	mov    %rax,(%rdi)
   13936:	48 89 f8             	mov    %rdi,%rax
   13939:	c3                   	ret    
   1393a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000013940 <__memset>:
   13940:	48 89 f0             	mov    %rsi,%rax
   13943:	48 25 ff 00 00 00    	and    $0xff,%rax
   13949:	48 89 d1             	mov    %rdx,%rcx
   1394c:	49 89 fb             	mov    %rdi,%r11
   1394f:	fc                   	cld    
   13950:	48 83 f9 0f          	cmp    $0xf,%rcx
   13954:	7e 38                	jle    1398e <L1>
   13956:	88 c4                	mov    %al,%ah
   13958:	89 c2                	mov    %eax,%edx
   1395a:	c1 e0 10             	shl    $0x10,%eax
   1395d:	09 d0                	or     %edx,%eax
   1395f:	89 c2                	mov    %eax,%edx
   13961:	48 c1 e0 20          	shl    $0x20,%rax
   13965:	48 09 d0             	or     %rdx,%rax
   13968:	48 89 fa             	mov    %rdi,%rdx
   1396b:	48 f7 da             	neg    %rdx
   1396e:	48 83 e2 07          	and    $0x7,%rdx
   13972:	49 89 c8             	mov    %rcx,%r8
   13975:	49 29 d0             	sub    %rdx,%r8
   13978:	48 89 d1             	mov    %rdx,%rcx
   1397b:	f3 aa                	rep stos %al,%es:(%rdi)
   1397d:	4c 89 c1             	mov    %r8,%rcx
   13980:	48 c1 e9 03          	shr    $0x3,%rcx
   13984:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   13987:	4c 89 c1             	mov    %r8,%rcx
   1398a:	48 83 e1 07          	and    $0x7,%rcx

000000000001398e <L1>:
   1398e:	f3 aa                	rep stos %al,%es:(%rdi)
   13990:	4c 89 d8             	mov    %r11,%rax
   13993:	c3                   	ret    
   13994:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1399b:	00 00 00 
   1399e:	66 90                	xchg   %ax,%ax

00000000000139a0 <_libc__strlen>:
   139a0:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   139a7:	01 01 01 
   139aa:	40 f6 c7 07          	test   $0x7,%dil
   139ae:	48 89 f8             	mov    %rdi,%rax
   139b1:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   139b8:	80 80 80 
   139bb:	75 33                	jne    139f0 <_libc__strlen+0x50>
   139bd:	0f 1f 00             	nopl   (%rax)
   139c0:	48 8b 10             	mov    (%rax),%rdx
   139c3:	48 83 c0 08          	add    $0x8,%rax
   139c7:	48 89 d1             	mov    %rdx,%rcx
   139ca:	4c 29 c2             	sub    %r8,%rdx
   139cd:	48 f7 d1             	not    %rcx
   139d0:	4c 21 ca             	and    %r9,%rdx
   139d3:	74 eb                	je     139c0 <_libc__strlen+0x20>
   139d5:	48 21 ca             	and    %rcx,%rdx
   139d8:	74 e6                	je     139c0 <_libc__strlen+0x20>
   139da:	48 29 f8             	sub    %rdi,%rax
   139dd:	48 0f bc d2          	bsf    %rdx,%rdx
   139e1:	48 c1 ea 03          	shr    $0x3,%rdx
   139e5:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   139ea:	c3                   	ret    
   139eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   139f0:	88 c1                	mov    %al,%cl
   139f2:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   139f9:	80 e1 07             	and    $0x7,%cl
   139fc:	24 f8                	and    $0xf8,%al
   139fe:	c0 e1 03             	shl    $0x3,%cl
   13a01:	48 8b 10             	mov    (%rax),%rdx
   13a04:	48 d3 e6             	shl    %cl,%rsi
   13a07:	48 ff ce             	dec    %rsi
   13a0a:	48 09 f2             	or     %rsi,%rdx
   13a0d:	eb b4                	jmp    139c3 <_libc__strlen+0x23>
   13a0f:	90                   	nop

0000000000013a10 <memchr>:
   13a10:	f3 0f 1e fa          	endbr64 
   13a14:	e9 57 30 00 00       	jmp    16a70 <_libc__memchr>
   13a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013a20 <memmove>:
   13a20:	f3 0f 1e fa          	endbr64 
   13a24:	e9 77 30 00 00       	jmp    16aa0 <__memmove>
   13a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013a30 <__rv_alloc_D2A>:
   13a30:	f3 0f 1e fa          	endbr64 
   13a34:	48 63 ff             	movslq %edi,%rdi
   13a37:	53                   	push   %rbx
   13a38:	31 db                	xor    %ebx,%ebx
   13a3a:	48 83 ff 1b          	cmp    $0x1b,%rdi
   13a3e:	76 19                	jbe    13a59 <__rv_alloc_D2A+0x29>
   13a40:	ba 04 00 00 00       	mov    $0x4,%edx
   13a45:	0f 1f 00             	nopl   (%rax)
   13a48:	01 d2                	add    %edx,%edx
   13a4a:	83 c3 01             	add    $0x1,%ebx
   13a4d:	48 63 c2             	movslq %edx,%rax
   13a50:	48 83 c0 18          	add    $0x18,%rax
   13a54:	48 39 f8             	cmp    %rdi,%rax
   13a57:	76 ef                	jbe    13a48 <__rv_alloc_D2A+0x18>
   13a59:	89 df                	mov    %ebx,%edi
   13a5b:	e8 10 1e 00 00       	call   15870 <__Balloc_D2A>
   13a60:	48 85 c0             	test   %rax,%rax
   13a63:	74 06                	je     13a6b <__rv_alloc_D2A+0x3b>
   13a65:	89 18                	mov    %ebx,(%rax)
   13a67:	48 83 c0 04          	add    $0x4,%rax
   13a6b:	5b                   	pop    %rbx
   13a6c:	c3                   	ret    
   13a6d:	0f 1f 00             	nopl   (%rax)

0000000000013a70 <__nrv_alloc_D2A>:
   13a70:	f3 0f 1e fa          	endbr64 
   13a74:	55                   	push   %rbp
   13a75:	48 89 f5             	mov    %rsi,%rbp
   13a78:	53                   	push   %rbx
   13a79:	48 89 fb             	mov    %rdi,%rbx
   13a7c:	89 d7                	mov    %edx,%edi
   13a7e:	48 83 ec 08          	sub    $0x8,%rsp
   13a82:	e8 a9 ff ff ff       	call   13a30 <__rv_alloc_D2A>
   13a87:	48 85 c0             	test   %rax,%rax
   13a8a:	74 30                	je     13abc <__nrv_alloc_D2A+0x4c>
   13a8c:	0f b6 13             	movzbl (%rbx),%edx
   13a8f:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   13a93:	84 d2                	test   %dl,%dl
   13a95:	88 10                	mov    %dl,(%rax)
   13a97:	48 89 c2             	mov    %rax,%rdx
   13a9a:	74 17                	je     13ab3 <__nrv_alloc_D2A+0x43>
   13a9c:	0f 1f 40 00          	nopl   0x0(%rax)
   13aa0:	0f b6 39             	movzbl (%rcx),%edi
   13aa3:	48 83 c2 01          	add    $0x1,%rdx
   13aa7:	48 83 c1 01          	add    $0x1,%rcx
   13aab:	40 88 3a             	mov    %dil,(%rdx)
   13aae:	40 84 ff             	test   %dil,%dil
   13ab1:	75 ed                	jne    13aa0 <__nrv_alloc_D2A+0x30>
   13ab3:	48 85 ed             	test   %rbp,%rbp
   13ab6:	74 04                	je     13abc <__nrv_alloc_D2A+0x4c>
   13ab8:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   13abc:	48 83 c4 08          	add    $0x8,%rsp
   13ac0:	5b                   	pop    %rbx
   13ac1:	5d                   	pop    %rbp
   13ac2:	c3                   	ret    
   13ac3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13aca:	00 00 00 
   13acd:	0f 1f 00             	nopl   (%rax)

0000000000013ad0 <__freedtoa>:
   13ad0:	f3 0f 1e fa          	endbr64 
   13ad4:	8b 4f fc             	mov    -0x4(%rdi),%ecx
   13ad7:	b8 01 00 00 00       	mov    $0x1,%eax
   13adc:	48 83 ef 04          	sub    $0x4,%rdi
   13ae0:	d3 e0                	shl    %cl,%eax
   13ae2:	89 4f 08             	mov    %ecx,0x8(%rdi)
   13ae5:	89 47 0c             	mov    %eax,0xc(%rdi)
   13ae8:	e9 73 1e 00 00       	jmp    15960 <__Bfree_D2A>
   13aed:	0f 1f 00             	nopl   (%rax)

0000000000013af0 <__quorem_D2A>:
   13af0:	f3 0f 1e fa          	endbr64 
   13af4:	41 57                	push   %r15
   13af6:	31 c0                	xor    %eax,%eax
   13af8:	41 56                	push   %r14
   13afa:	41 55                	push   %r13
   13afc:	41 54                	push   %r12
   13afe:	55                   	push   %rbp
   13aff:	53                   	push   %rbx
   13b00:	48 83 ec 18          	sub    $0x18,%rsp
   13b04:	8b 6e 14             	mov    0x14(%rsi),%ebp
   13b07:	39 6f 14             	cmp    %ebp,0x14(%rdi)
   13b0a:	0f 8c 5f 01 00 00    	jl     13c6f <__quorem_D2A+0x17f>
   13b10:	83 ed 01             	sub    $0x1,%ebp
   13b13:	48 8d 5e 18          	lea    0x18(%rsi),%rbx
   13b17:	4c 8d 77 18          	lea    0x18(%rdi),%r14
   13b1b:	49 89 ff             	mov    %rdi,%r15
   13b1e:	48 63 c5             	movslq %ebp,%rax
   13b21:	31 d2                	xor    %edx,%edx
   13b23:	48 c1 e0 02          	shl    $0x2,%rax
   13b27:	4c 8d 24 03          	lea    (%rbx,%rax,1),%r12
   13b2b:	4c 01 f0             	add    %r14,%rax
   13b2e:	41 8b 3c 24          	mov    (%r12),%edi
   13b32:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13b37:	8b 00                	mov    (%rax),%eax
   13b39:	8d 4f 01             	lea    0x1(%rdi),%ecx
   13b3c:	89 44 24 04          	mov    %eax,0x4(%rsp)
   13b40:	89 c7                	mov    %eax,%edi
   13b42:	f7 f1                	div    %ecx
   13b44:	89 04 24             	mov    %eax,(%rsp)
   13b47:	41 89 c5             	mov    %eax,%r13d
   13b4a:	39 cf                	cmp    %ecx,%edi
   13b4c:	0f 82 ac 00 00 00    	jb     13bfe <__quorem_D2A+0x10e>
   13b52:	48 89 df             	mov    %rbx,%rdi
   13b55:	4d 89 f1             	mov    %r14,%r9
   13b58:	45 31 db             	xor    %r11d,%r11d
   13b5b:	31 d2                	xor    %edx,%edx
   13b5d:	0f 1f 00             	nopl   (%rax)
   13b60:	8b 07                	mov    (%rdi),%eax
   13b62:	48 83 c7 04          	add    $0x4,%rdi
   13b66:	49 83 c1 04          	add    $0x4,%r9
   13b6a:	0f b7 c8             	movzwl %ax,%ecx
   13b6d:	c1 e8 10             	shr    $0x10,%eax
   13b70:	41 0f af cd          	imul   %r13d,%ecx
   13b74:	41 0f af c5          	imul   %r13d,%eax
   13b78:	44 01 d9             	add    %r11d,%ecx
   13b7b:	41 89 c8             	mov    %ecx,%r8d
   13b7e:	0f b7 c9             	movzwl %cx,%ecx
   13b81:	41 c1 e8 10          	shr    $0x10,%r8d
   13b85:	01 ca                	add    %ecx,%edx
   13b87:	44 01 c0             	add    %r8d,%eax
   13b8a:	45 8b 41 fc          	mov    -0x4(%r9),%r8d
   13b8e:	41 89 c3             	mov    %eax,%r11d
   13b91:	0f b7 c0             	movzwl %ax,%eax
   13b94:	45 0f b7 d0          	movzwl %r8w,%r10d
   13b98:	41 c1 e8 10          	shr    $0x10,%r8d
   13b9c:	41 29 d2             	sub    %edx,%r10d
   13b9f:	41 29 c0             	sub    %eax,%r8d
   13ba2:	41 c1 eb 10          	shr    $0x10,%r11d
   13ba6:	44 89 d2             	mov    %r10d,%edx
   13ba9:	44 89 c0             	mov    %r8d,%eax
   13bac:	66 45 89 51 fc       	mov    %r10w,-0x4(%r9)
   13bb1:	c1 ea 10             	shr    $0x10,%edx
   13bb4:	83 e2 01             	and    $0x1,%edx
   13bb7:	29 d0                	sub    %edx,%eax
   13bb9:	89 c2                	mov    %eax,%edx
   13bbb:	66 41 89 41 fe       	mov    %ax,-0x2(%r9)
   13bc0:	c1 ea 10             	shr    $0x10,%edx
   13bc3:	83 e2 01             	and    $0x1,%edx
   13bc6:	49 39 fc             	cmp    %rdi,%r12
   13bc9:	73 95                	jae    13b60 <__quorem_D2A+0x70>
   13bcb:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
   13bd0:	45 85 c0             	test   %r8d,%r8d
   13bd3:	75 29                	jne    13bfe <__quorem_D2A+0x10e>
   13bd5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13bda:	48 83 e8 04          	sub    $0x4,%rax
   13bde:	49 39 c6             	cmp    %rax,%r14
   13be1:	72 11                	jb     13bf4 <__quorem_D2A+0x104>
   13be3:	eb 15                	jmp    13bfa <__quorem_D2A+0x10a>
   13be5:	0f 1f 00             	nopl   (%rax)
   13be8:	48 83 e8 04          	sub    $0x4,%rax
   13bec:	83 ed 01             	sub    $0x1,%ebp
   13bef:	49 39 c6             	cmp    %rax,%r14
   13bf2:	73 06                	jae    13bfa <__quorem_D2A+0x10a>
   13bf4:	8b 38                	mov    (%rax),%edi
   13bf6:	85 ff                	test   %edi,%edi
   13bf8:	74 ee                	je     13be8 <__quorem_D2A+0xf8>
   13bfa:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   13bfe:	4c 89 ff             	mov    %r15,%rdi
   13c01:	e8 8a 24 00 00       	call   16090 <__cmp_D2A>
   13c06:	85 c0                	test   %eax,%eax
   13c08:	78 62                	js     13c6c <__quorem_D2A+0x17c>
   13c0a:	41 8d 45 01          	lea    0x1(%r13),%eax
   13c0e:	4c 89 f6             	mov    %r14,%rsi
   13c11:	31 d2                	xor    %edx,%edx
   13c13:	89 04 24             	mov    %eax,(%rsp)
   13c16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13c1d:	00 00 00 
   13c20:	8b 3b                	mov    (%rbx),%edi
   13c22:	8b 06                	mov    (%rsi),%eax
   13c24:	48 83 c3 04          	add    $0x4,%rbx
   13c28:	48 83 c6 04          	add    $0x4,%rsi
   13c2c:	44 0f b7 c7          	movzwl %di,%r8d
   13c30:	0f b7 c8             	movzwl %ax,%ecx
   13c33:	c1 ef 10             	shr    $0x10,%edi
   13c36:	44 01 c2             	add    %r8d,%edx
   13c39:	c1 e8 10             	shr    $0x10,%eax
   13c3c:	29 d1                	sub    %edx,%ecx
   13c3e:	29 f8                	sub    %edi,%eax
   13c40:	89 ca                	mov    %ecx,%edx
   13c42:	66 89 4e fc          	mov    %cx,-0x4(%rsi)
   13c46:	c1 ea 10             	shr    $0x10,%edx
   13c49:	83 e2 01             	and    $0x1,%edx
   13c4c:	29 d0                	sub    %edx,%eax
   13c4e:	89 c2                	mov    %eax,%edx
   13c50:	66 89 46 fe          	mov    %ax,-0x2(%rsi)
   13c54:	c1 ea 10             	shr    $0x10,%edx
   13c57:	83 e2 01             	and    $0x1,%edx
   13c5a:	49 39 dc             	cmp    %rbx,%r12
   13c5d:	73 c1                	jae    13c20 <__quorem_D2A+0x130>
   13c5f:	48 63 c5             	movslq %ebp,%rax
   13c62:	49 8d 04 86          	lea    (%r14,%rax,4),%rax
   13c66:	8b 08                	mov    (%rax),%ecx
   13c68:	85 c9                	test   %ecx,%ecx
   13c6a:	74 1d                	je     13c89 <__quorem_D2A+0x199>
   13c6c:	8b 04 24             	mov    (%rsp),%eax
   13c6f:	48 83 c4 18          	add    $0x18,%rsp
   13c73:	5b                   	pop    %rbx
   13c74:	5d                   	pop    %rbp
   13c75:	41 5c                	pop    %r12
   13c77:	41 5d                	pop    %r13
   13c79:	41 5e                	pop    %r14
   13c7b:	41 5f                	pop    %r15
   13c7d:	c3                   	ret    
   13c7e:	66 90                	xchg   %ax,%ax
   13c80:	8b 10                	mov    (%rax),%edx
   13c82:	85 d2                	test   %edx,%edx
   13c84:	75 0c                	jne    13c92 <__quorem_D2A+0x1a2>
   13c86:	83 ed 01             	sub    $0x1,%ebp
   13c89:	48 83 e8 04          	sub    $0x4,%rax
   13c8d:	49 39 c6             	cmp    %rax,%r14
   13c90:	72 ee                	jb     13c80 <__quorem_D2A+0x190>
   13c92:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   13c96:	eb d4                	jmp    13c6c <__quorem_D2A+0x17c>
   13c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13c9f:	00 

0000000000013ca0 <__dtoa>:
   13ca0:	f3 0f 1e fa          	endbr64 
   13ca4:	41 57                	push   %r15
   13ca6:	41 56                	push   %r14
   13ca8:	66 49 0f 7e c6       	movq   %xmm0,%r14
   13cad:	41 55                	push   %r13
   13caf:	41 54                	push   %r12
   13cb1:	55                   	push   %rbp
   13cb2:	53                   	push   %rbx
   13cb3:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   13cb8:	48 83 ec 68          	sub    $0x68,%rsp
   13cbc:	89 7c 24 20          	mov    %edi,0x20(%rsp)
   13cc0:	89 74 24 10          	mov    %esi,0x10(%rsp)
   13cc4:	48 89 14 24          	mov    %rdx,(%rsp)
   13cc8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   13ccd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13cd4:	00 00 
   13cd6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   13cdb:	31 c0                	xor    %eax,%eax
   13cdd:	66 48 0f 7e c0       	movq   %xmm0,%rax
   13ce2:	48 c1 e8 20          	shr    $0x20,%rax
   13ce6:	89 c5                	mov    %eax,%ebp
   13ce8:	85 c0                	test   %eax,%eax
   13cea:	0f 88 30 04 00 00    	js     14120 <__dtoa+0x480>
   13cf0:	89 e8                	mov    %ebp,%eax
   13cf2:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   13cf8:	66 0f 28 c8          	movapd %xmm0,%xmm1
   13cfc:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   13d01:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   13d06:	0f 84 46 04 00 00    	je     14152 <__dtoa+0x4b2>
   13d0c:	66 0f ef f6          	pxor   %xmm6,%xmm6
   13d10:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   13d14:	0f 8b b6 03 00 00    	jnp    140d0 <__dtoa+0x430>
   13d1a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   13d1e:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   13d23:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
   13d28:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
   13d2e:	e8 fd 26 00 00       	call   16430 <__d2b_D2A>
   13d33:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
   13d39:	48 85 c0             	test   %rax,%rax
   13d3c:	49 89 c7             	mov    %rax,%r15
   13d3f:	0f 84 db 07 00 00    	je     14520 <__dtoa+0x880>
   13d45:	89 ef                	mov    %ebp,%edi
   13d47:	8b 74 24 50          	mov    0x50(%rsp),%esi
   13d4b:	c1 ef 14             	shr    $0x14,%edi
   13d4e:	0f 85 3c 04 00 00    	jne    14190 <__dtoa+0x4f0>
   13d54:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   13d58:	48 89 da             	mov    %rbx,%rdx
   13d5b:	01 f7                	add    %esi,%edi
   13d5d:	44 8d 8f 32 04 00 00 	lea    0x432(%rdi),%r9d
   13d64:	41 83 f9 20          	cmp    $0x20,%r9d
   13d68:	0f 8e 02 0a 00 00    	jle    14770 <__dtoa+0xad0>
   13d6e:	b9 40 00 00 00       	mov    $0x40,%ecx
   13d73:	89 e8                	mov    %ebp,%eax
   13d75:	44 29 c9             	sub    %r9d,%ecx
   13d78:	d3 e0                	shl    %cl,%eax
   13d7a:	8d 8f 12 04 00 00    	lea    0x412(%rdi),%ecx
   13d80:	d3 ea                	shr    %cl,%edx
   13d82:	09 d0                	or     %edx,%eax
   13d84:	89 c2                	mov    %eax,%edx
   13d86:	66 0f ef e4          	pxor   %xmm4,%xmm4
   13d8a:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
   13d91:	00 
   13d92:	83 ef 01             	sub    $0x1,%edi
   13d95:	f2 48 0f 2a e2       	cvtsi2sd %rdx,%xmm4
   13d9a:	66 48 0f 7e e0       	movq   %xmm4,%rax
   13d9f:	66 48 0f 7e e2       	movq   %xmm4,%rdx
   13da4:	48 c1 e8 20          	shr    $0x20,%rax
   13da8:	89 d2                	mov    %edx,%edx
   13daa:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   13daf:	48 c1 e0 20          	shl    $0x20,%rax
   13db3:	48 09 c2             	or     %rax,%rdx
   13db6:	66 0f ef d2          	pxor   %xmm2,%xmm2
   13dba:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   13dbf:	66 0f ef ff          	pxor   %xmm7,%xmm7
   13dc3:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   13dc7:	f2 0f 59 15 a9 de 00 	mulsd  0xdea9(%rip),%xmm2        # 21c78 <xdigs_lower.3329+0x38>
   13dce:	00 
   13dcf:	f2 0f 5c 05 89 de 00 	subsd  0xde89(%rip),%xmm0        # 21c60 <xdigs_lower.3329+0x20>
   13dd6:	00 
   13dd7:	f2 0f 59 05 89 de 00 	mulsd  0xde89(%rip),%xmm0        # 21c68 <xdigs_lower.3329+0x28>
   13dde:	00 
   13ddf:	f2 0f 58 05 89 de 00 	addsd  0xde89(%rip),%xmm0        # 21c70 <xdigs_lower.3329+0x30>
   13de6:	00 
   13de7:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
   13deb:	66 0f 2f f8          	comisd %xmm0,%xmm7
   13def:	f2 0f 2c d8          	cvttsd2si %xmm0,%ebx
   13df3:	0f 87 67 07 00 00    	ja     14560 <__dtoa+0x8c0>
   13df9:	44 8d 4e ff          	lea    -0x1(%rsi),%r9d
   13dfd:	41 29 f9             	sub    %edi,%r9d
   13e00:	45 89 cd             	mov    %r9d,%r13d
   13e03:	83 fb 16             	cmp    $0x16,%ebx
   13e06:	0f 87 24 07 00 00    	ja     14530 <__dtoa+0x890>
   13e0c:	48 63 c3             	movslq %ebx,%rax
   13e0f:	48 8d 15 0a df 00 00 	lea    0xdf0a(%rip),%rdx        # 21d20 <__tens_D2A>
   13e16:	f2 0f 10 04 c2       	movsd  (%rdx,%rax,8),%xmm0
   13e1b:	66 0f 2f c1          	comisd %xmm1,%xmm0
   13e1f:	0f 86 cb 03 00 00    	jbe    141f0 <__dtoa+0x550>
   13e25:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   13e2c:	00 
   13e2d:	83 eb 01             	sub    $0x1,%ebx
   13e30:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   13e37:	00 
   13e38:	45 85 ed             	test   %r13d,%r13d
   13e3b:	0f 88 08 07 00 00    	js     14549 <__dtoa+0x8a9>
   13e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13e48:	85 db                	test   %ebx,%ebx
   13e4a:	0f 89 b9 03 00 00    	jns    14209 <__dtoa+0x569>
   13e50:	8b 44 24 20          	mov    0x20(%rsp),%eax
   13e54:	41 89 dc             	mov    %ebx,%r12d
   13e57:	29 5c 24 24          	sub    %ebx,0x24(%rsp)
   13e5b:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   13e5f:	41 f7 dc             	neg    %r12d
   13e62:	31 db                	xor    %ebx,%ebx
   13e64:	83 f8 09             	cmp    $0x9,%eax
   13e67:	0f 87 b3 03 00 00    	ja     14220 <__dtoa+0x580>
   13e6d:	bd 01 00 00 00       	mov    $0x1,%ebp
   13e72:	83 f8 05             	cmp    $0x5,%eax
   13e75:	7e 09                	jle    13e80 <__dtoa+0x1e0>
   13e77:	83 e8 04             	sub    $0x4,%eax
   13e7a:	31 ed                	xor    %ebp,%ebp
   13e7c:	89 44 24 20          	mov    %eax,0x20(%rsp)
   13e80:	8b 44 24 20          	mov    0x20(%rsp),%eax
   13e84:	83 f8 04             	cmp    $0x4,%eax
   13e87:	0f 84 63 0e 00 00    	je     14cf0 <__dtoa+0x1050>
   13e8d:	83 f8 05             	cmp    $0x5,%eax
   13e90:	0f 84 8a 09 00 00    	je     14820 <__dtoa+0xb80>
   13e96:	83 f8 02             	cmp    $0x2,%eax
   13e99:	0f 84 e9 08 00 00    	je     14788 <__dtoa+0xae8>
   13e9f:	83 f8 03             	cmp    $0x3,%eax
   13ea2:	0f 85 80 03 00 00    	jne    14228 <__dtoa+0x588>
   13ea8:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   13eaf:	00 
   13eb0:	8b 44 24 10          	mov    0x10(%rsp),%eax
   13eb4:	03 44 24 28          	add    0x28(%rsp),%eax
   13eb8:	bf 01 00 00 00       	mov    $0x1,%edi
   13ebd:	89 44 24 48          	mov    %eax,0x48(%rsp)
   13ec1:	83 c0 01             	add    $0x1,%eax
   13ec4:	85 c0                	test   %eax,%eax
   13ec6:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   13eca:	0f 4f f8             	cmovg  %eax,%edi
   13ecd:	f2 0f 11 4c 24 38    	movsd  %xmm1,0x38(%rsp)
   13ed3:	e8 58 fb ff ff       	call   13a30 <__rv_alloc_D2A>
   13ed8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13edd:	48 85 c0             	test   %rax,%rax
   13ee0:	0f 84 3a 06 00 00    	je     14520 <__dtoa+0x880>
   13ee6:	83 7c 24 2c 0e       	cmpl   $0xe,0x2c(%rsp)
   13eeb:	0f 96 c0             	setbe  %al
   13eee:	40 20 e8             	and    %bpl,%al
   13ef1:	89 c1                	mov    %eax,%ecx
   13ef3:	0f 84 e6 06 00 00    	je     145df <__dtoa+0x93f>
   13ef9:	8b 44 24 28          	mov    0x28(%rsp),%eax
   13efd:	f2 0f 10 4c 24 38    	movsd  0x38(%rsp),%xmm1
   13f03:	85 c0                	test   %eax,%eax
   13f05:	0f 8e a5 08 00 00    	jle    147b0 <__dtoa+0xb10>
   13f0b:	89 c2                	mov    %eax,%edx
   13f0d:	89 c1                	mov    %eax,%ecx
   13f0f:	48 8d 05 0a de 00 00 	lea    0xde0a(%rip),%rax        # 21d20 <__tens_D2A>
   13f16:	83 e2 0f             	and    $0xf,%edx
   13f19:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   13f1e:	89 ca                	mov    %ecx,%edx
   13f20:	c1 fa 04             	sar    $0x4,%edx
   13f23:	80 e5 01             	and    $0x1,%ch
   13f26:	0f 84 bc 09 00 00    	je     148e8 <__dtoa+0xc48>
   13f2c:	83 e2 0f             	and    $0xf,%edx
   13f2f:	b8 03 00 00 00       	mov    $0x3,%eax
   13f34:	66 0f 28 c1          	movapd %xmm1,%xmm0
   13f38:	f2 0f 5e 05 c0 de 00 	divsd  0xdec0(%rip),%xmm0        # 21e00 <__bigtens_D2A+0x20>
   13f3f:	00 
   13f40:	85 d2                	test   %edx,%edx
   13f42:	74 24                	je     13f68 <__dtoa+0x2c8>
   13f44:	31 f6                	xor    %esi,%esi
   13f46:	4c 8d 15 93 de 00 00 	lea    0xde93(%rip),%r10        # 21de0 <__bigtens_D2A>
   13f4d:	0f 1f 00             	nopl   (%rax)
   13f50:	f6 c2 01             	test   $0x1,%dl
   13f53:	74 0c                	je     13f61 <__dtoa+0x2c1>
   13f55:	48 63 ce             	movslq %esi,%rcx
   13f58:	83 c0 01             	add    $0x1,%eax
   13f5b:	f2 41 0f 59 14 ca    	mulsd  (%r10,%rcx,8),%xmm2
   13f61:	83 c6 01             	add    $0x1,%esi
   13f64:	d1 fa                	sar    %edx
   13f66:	75 e8                	jne    13f50 <__dtoa+0x2b0>
   13f68:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   13f6c:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   13f71:	45 85 d2             	test   %r10d,%r10d
   13f74:	74 12                	je     13f88 <__dtoa+0x2e8>
   13f76:	f2 0f 10 2d 02 dd 00 	movsd  0xdd02(%rip),%xmm5        # 21c80 <xdigs_lower.3329+0x40>
   13f7d:	00 
   13f7e:	66 0f 2f e8          	comisd %xmm0,%xmm5
   13f82:	0f 87 38 0e 00 00    	ja     14dc0 <__dtoa+0x1120>
   13f88:	66 0f ef d2          	pxor   %xmm2,%xmm2
   13f8c:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   13f91:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   13f95:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   13f99:	f2 0f 58 15 ef dc 00 	addsd  0xdcef(%rip),%xmm2        # 21c90 <xdigs_lower.3329+0x50>
   13fa0:	00 
   13fa1:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   13fa6:	66 48 0f 7e d0       	movq   %xmm2,%rax
   13fab:	48 c1 ea 20          	shr    $0x20,%rdx
   13faf:	89 c0                	mov    %eax,%eax
   13fb1:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   13fb7:	48 c1 e2 20          	shl    $0x20,%rdx
   13fbb:	48 09 d0             	or     %rdx,%rax
   13fbe:	45 85 c0             	test   %r8d,%r8d
   13fc1:	0f 84 ea 05 00 00    	je     145b1 <__dtoa+0x911>
   13fc7:	8b 74 24 28          	mov    0x28(%rsp),%esi
   13fcb:	89 74 24 38          	mov    %esi,0x38(%rsp)
   13fcf:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
   13fd3:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   13fd7:	66 0f ef d2          	pxor   %xmm2,%xmm2
   13fdb:	66 48 0f 6e d8       	movq   %rax,%xmm3
   13fe0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   13fe5:	8d 46 ff             	lea    -0x1(%rsi),%eax
   13fe8:	48 8d 15 31 dd 00 00 	lea    0xdd31(%rip),%rdx        # 21d20 <__tens_D2A>
   13fef:	48 98                	cltq   
   13ff1:	f2 0f 10 24 c2       	movsd  (%rdx,%rax,8),%xmm4
   13ff6:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   13ffa:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   13ffe:	8d 47 30             	lea    0x30(%rdi),%eax
   14001:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   14005:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   14009:	85 ff                	test   %edi,%edi
   1400b:	0f 84 2f 09 00 00    	je     14940 <__dtoa+0xca0>
   14011:	f2 0f 10 15 87 dc 00 	movsd  0xdc87(%rip),%xmm2        # 21ca0 <xdigs_lower.3329+0x60>
   14018:	00 
   14019:	88 01                	mov    %al,(%rcx)
   1401b:	f2 0f 5e d4          	divsd  %xmm4,%xmm2
   1401f:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
   14023:	66 0f 2f d0          	comisd %xmm0,%xmm2
   14027:	0f 87 bb 0e 00 00    	ja     14ee8 <__dtoa+0x1248>
   1402d:	bf 01 00 00 00       	mov    $0x1,%edi
   14032:	f2 0f 10 2d 46 dc 00 	movsd  0xdc46(%rip),%xmm5        # 21c80 <xdigs_lower.3329+0x40>
   14039:	00 
   1403a:	f2 0f 10 25 46 dc 00 	movsd  0xdc46(%rip),%xmm4        # 21c88 <xdigs_lower.3329+0x48>
   14041:	00 
   14042:	29 d7                	sub    %edx,%edi
   14044:	eb 41                	jmp    14087 <__dtoa+0x3e7>
   14046:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1404d:	00 00 00 
   14050:	8d 04 17             	lea    (%rdi,%rdx,1),%eax
   14053:	39 f0                	cmp    %esi,%eax
   14055:	0f 8d 7f 05 00 00    	jge    145da <__dtoa+0x93a>
   1405b:	f2 0f 59 c4          	mulsd  %xmm4,%xmm0
   1405f:	66 0f ef db          	pxor   %xmm3,%xmm3
   14063:	48 83 c2 01          	add    $0x1,%rdx
   14067:	f2 0f 59 d4          	mulsd  %xmm4,%xmm2
   1406b:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1406f:	f2 0f 2a d8          	cvtsi2sd %eax,%xmm3
   14073:	83 c0 30             	add    $0x30,%eax
   14076:	88 42 ff             	mov    %al,-0x1(%rdx)
   14079:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
   1407d:	66 0f 2f d0          	comisd %xmm0,%xmm2
   14081:	0f 87 61 0e 00 00    	ja     14ee8 <__dtoa+0x1248>
   14087:	66 0f 28 dd          	movapd %xmm5,%xmm3
   1408b:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
   1408f:	66 0f 2f d3          	comisd %xmm3,%xmm2
   14093:	76 bb                	jbe    14050 <__dtoa+0x3b0>
   14095:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1409a:	eb 0d                	jmp    140a9 <__dtoa+0x409>
   1409c:	0f 1f 40 00          	nopl   0x0(%rax)
   140a0:	48 39 f2             	cmp    %rsi,%rdx
   140a3:	0f 84 27 0e 00 00    	je     14ed0 <__dtoa+0x1230>
   140a9:	48 89 d1             	mov    %rdx,%rcx
   140ac:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
   140b0:	48 83 ea 01          	sub    $0x1,%rdx
   140b4:	3c 39                	cmp    $0x39,%al
   140b6:	74 e8                	je     140a0 <__dtoa+0x400>
   140b8:	83 c0 01             	add    $0x1,%eax
   140bb:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   140c0:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   140c5:	88 02                	mov    %al,(%rdx)
   140c7:	e9 2d 09 00 00       	jmp    149f9 <__dtoa+0xd59>
   140cc:	0f 1f 40 00          	nopl   0x0(%rax)
   140d0:	0f 85 44 fc ff ff    	jne    13d1a <__dtoa+0x7a>
   140d6:	48 8b 04 24          	mov    (%rsp),%rax
   140da:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   140df:	ba 01 00 00 00       	mov    $0x1,%edx
   140e4:	48 8d 3d bd d4 00 00 	lea    0xd4bd(%rip),%rdi        # 215a8 <_ZZ17ecall_pointer_outE8__func__+0x28>
   140eb:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   140f1:	e8 7a f9 ff ff       	call   13a70 <__nrv_alloc_D2A>
   140f6:	49 89 c6             	mov    %rax,%r14
   140f9:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   140fe:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14105:	00 00 
   14107:	0f 85 cb 0f 00 00    	jne    150d8 <__dtoa+0x1438>
   1410d:	48 83 c4 68          	add    $0x68,%rsp
   14111:	4c 89 f0             	mov    %r14,%rax
   14114:	5b                   	pop    %rbx
   14115:	5d                   	pop    %rbp
   14116:	41 5c                	pop    %r12
   14118:	41 5d                	pop    %r13
   1411a:	41 5e                	pop    %r14
   1411c:	41 5f                	pop    %r15
   1411e:	c3                   	ret    
   1411f:	90                   	nop
   14120:	81 e5 ff ff ff 7f    	and    $0x7fffffff,%ebp
   14126:	89 da                	mov    %ebx,%edx
   14128:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
   1412e:	48 89 e8             	mov    %rbp,%rax
   14131:	48 c1 e0 20          	shl    $0x20,%rax
   14135:	48 09 c2             	or     %rax,%rdx
   14138:	89 e8                	mov    %ebp,%eax
   1413a:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   1413f:	49 89 d6             	mov    %rdx,%r14
   14142:	66 48 0f 6e ca       	movq   %rdx,%xmm1
   14147:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   1414c:	0f 85 ba fb ff ff    	jne    13d0c <__dtoa+0x6c>
   14152:	48 8b 04 24          	mov    (%rsp),%rax
   14156:	66 48 0f 7e cb       	movq   %xmm1,%rbx
   1415b:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   14161:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   14168:	ff 0f 00 
   1416b:	48 85 d8             	test   %rbx,%rax
   1416e:	75 58                	jne    141c8 <__dtoa+0x528>
   14170:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   14175:	ba 08 00 00 00       	mov    $0x8,%edx
   1417a:	48 8d 3d cf da 00 00 	lea    0xdacf(%rip),%rdi        # 21c50 <xdigs_lower.3329+0x10>
   14181:	e8 ea f8 ff ff       	call   13a70 <__nrv_alloc_D2A>
   14186:	49 89 c6             	mov    %rax,%r14
   14189:	e9 6b ff ff ff       	jmp    140f9 <__dtoa+0x459>
   1418e:	66 90                	xchg   %ax,%ax
   14190:	66 48 0f 7e c8       	movq   %xmm1,%rax
   14195:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1419a:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   141a1:	00 
   141a2:	81 ef ff 03 00 00    	sub    $0x3ff,%edi
   141a8:	48 c1 e8 20          	shr    $0x20,%rax
   141ac:	89 d2                	mov    %edx,%edx
   141ae:	25 ff ff 0f 00       	and    $0xfffff,%eax
   141b3:	48 0d 00 00 f0 3f    	or     $0x3ff00000,%rax
   141b9:	48 c1 e0 20          	shl    $0x20,%rax
   141bd:	48 09 c2             	or     %rax,%rdx
   141c0:	e9 f1 fb ff ff       	jmp    13db6 <__dtoa+0x116>
   141c5:	0f 1f 00             	nopl   (%rax)
   141c8:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   141cd:	ba 03 00 00 00       	mov    $0x3,%edx
   141d2:	48 8d 3d 80 da 00 00 	lea    0xda80(%rip),%rdi        # 21c59 <xdigs_lower.3329+0x19>
   141d9:	e8 92 f8 ff ff       	call   13a70 <__nrv_alloc_D2A>
   141de:	49 89 c6             	mov    %rax,%r14
   141e1:	e9 13 ff ff ff       	jmp    140f9 <__dtoa+0x459>
   141e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   141ed:	00 00 00 
   141f0:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   141f7:	00 
   141f8:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   141ff:	00 
   14200:	45 85 c9             	test   %r9d,%r9d
   14203:	0f 88 40 03 00 00    	js     14549 <__dtoa+0x8a9>
   14209:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1420d:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   14211:	41 01 dd             	add    %ebx,%r13d
   14214:	45 31 e4             	xor    %r12d,%r12d
   14217:	83 f8 09             	cmp    $0x9,%eax
   1421a:	0f 86 4d fc ff ff    	jbe    13e6d <__dtoa+0x1cd>
   14220:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   14227:	00 
   14228:	bf 12 00 00 00       	mov    $0x12,%edi
   1422d:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   14233:	e8 f8 f7 ff ff       	call   13a30 <__rv_alloc_D2A>
   14238:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   1423e:	48 85 c0             	test   %rax,%rax
   14241:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14246:	0f 84 d4 02 00 00    	je     14520 <__dtoa+0x880>
   1424c:	8b 44 24 54          	mov    0x54(%rsp),%eax
   14250:	85 c0                	test   %eax,%eax
   14252:	78 0b                	js     1425f <__dtoa+0x5bf>
   14254:	83 7c 24 28 0e       	cmpl   $0xe,0x28(%rsp)
   14259:	0f 8e d1 07 00 00    	jle    14a30 <__dtoa+0xd90>
   1425f:	c7 44 24 48 ff ff ff 	movl   $0xffffffff,0x48(%rsp)
   14266:	ff 
   14267:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   1426e:	00 
   1426f:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   14276:	ff 
   14277:	8b 54 24 44          	mov    0x44(%rsp),%edx
   1427b:	05 33 04 00 00       	add    $0x433,%eax
   14280:	85 d2                	test   %edx,%edx
   14282:	0f 84 28 07 00 00    	je     149b0 <__dtoa+0xd10>
   14288:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   1428c:	bf 01 00 00 00       	mov    $0x1,%edi
   14291:	41 01 c5             	add    %eax,%r13d
   14294:	8d 34 01             	lea    (%rcx,%rax,1),%esi
   14297:	89 74 24 38          	mov    %esi,0x38(%rsp)
   1429b:	e8 e0 18 00 00       	call   15b80 <__i2b_D2A>
   142a0:	48 89 c5             	mov    %rax,%rbp
   142a3:	48 85 c0             	test   %rax,%rax
   142a6:	0f 84 74 02 00 00    	je     14520 <__dtoa+0x880>
   142ac:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   142b3:	00 
   142b4:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   142b8:	85 c9                	test   %ecx,%ecx
   142ba:	7e 1b                	jle    142d7 <__dtoa+0x637>
   142bc:	45 85 ed             	test   %r13d,%r13d
   142bf:	7e 16                	jle    142d7 <__dtoa+0x637>
   142c1:	44 39 e9             	cmp    %r13d,%ecx
   142c4:	89 c8                	mov    %ecx,%eax
   142c6:	41 0f 4f c5          	cmovg  %r13d,%eax
   142ca:	29 44 24 38          	sub    %eax,0x38(%rsp)
   142ce:	29 c1                	sub    %eax,%ecx
   142d0:	41 29 c5             	sub    %eax,%r13d
   142d3:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   142d7:	45 85 e4             	test   %r12d,%r12d
   142da:	7e 47                	jle    14323 <__dtoa+0x683>
   142dc:	44 89 e6             	mov    %r12d,%esi
   142df:	44 8b 64 24 40       	mov    0x40(%rsp),%r12d
   142e4:	45 85 e4             	test   %r12d,%r12d
   142e7:	0f 84 5b 05 00 00    	je     14848 <__dtoa+0xba8>
   142ed:	48 89 ef             	mov    %rbp,%rdi
   142f0:	e8 eb 1a 00 00       	call   15de0 <__pow5mult_D2A>
   142f5:	48 89 c5             	mov    %rax,%rbp
   142f8:	48 85 c0             	test   %rax,%rax
   142fb:	0f 84 1f 02 00 00    	je     14520 <__dtoa+0x880>
   14301:	4c 89 fe             	mov    %r15,%rsi
   14304:	48 89 c7             	mov    %rax,%rdi
   14307:	e8 a4 18 00 00       	call   15bb0 <__mult_D2A>
   1430c:	49 89 c4             	mov    %rax,%r12
   1430f:	48 85 c0             	test   %rax,%rax
   14312:	0f 84 08 02 00 00    	je     14520 <__dtoa+0x880>
   14318:	4c 89 ff             	mov    %r15,%rdi
   1431b:	4d 89 e7             	mov    %r12,%r15
   1431e:	e8 3d 16 00 00       	call   15960 <__Bfree_D2A>
   14323:	bf 01 00 00 00       	mov    $0x1,%edi
   14328:	e8 53 18 00 00       	call   15b80 <__i2b_D2A>
   1432d:	49 89 c4             	mov    %rax,%r12
   14330:	48 85 c0             	test   %rax,%rax
   14333:	0f 84 e7 01 00 00    	je     14520 <__dtoa+0x880>
   14339:	85 db                	test   %ebx,%ebx
   1433b:	0f 85 27 05 00 00    	jne    14868 <__dtoa+0xbc8>
   14341:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   14346:	0f 8e d4 07 00 00    	jle    14b20 <__dtoa+0xe80>
   1434c:	8b 44 24 40          	mov    0x40(%rsp),%eax
   14350:	85 c0                	test   %eax,%eax
   14352:	0f 85 c8 07 00 00    	jne    14b20 <__dtoa+0xe80>
   14358:	b8 01 00 00 00       	mov    $0x1,%eax
   1435d:	44 01 e8             	add    %r13d,%eax
   14360:	83 e0 1f             	and    $0x1f,%eax
   14363:	0f 84 c7 04 00 00    	je     14830 <__dtoa+0xb90>
   14369:	ba 20 00 00 00       	mov    $0x20,%edx
   1436e:	29 c2                	sub    %eax,%edx
   14370:	83 fa 04             	cmp    $0x4,%edx
   14373:	0f 8e 82 0d 00 00    	jle    150fb <__dtoa+0x145b>
   14379:	ba 1c 00 00 00       	mov    $0x1c,%edx
   1437e:	29 c2                	sub    %eax,%edx
   14380:	01 54 24 38          	add    %edx,0x38(%rsp)
   14384:	01 54 24 24          	add    %edx,0x24(%rsp)
   14388:	41 01 d5             	add    %edx,%r13d
   1438b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1438f:	85 c0                	test   %eax,%eax
   14391:	0f 8f 69 05 00 00    	jg     14900 <__dtoa+0xc60>
   14397:	45 85 ed             	test   %r13d,%r13d
   1439a:	0f 8f 80 05 00 00    	jg     14920 <__dtoa+0xc80>
   143a0:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   143a5:	45 85 db             	test   %r11d,%r11d
   143a8:	0f 85 62 02 00 00    	jne    14610 <__dtoa+0x970>
   143ae:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   143b3:	45 85 c9             	test   %r9d,%r9d
   143b6:	0f 8e 44 09 00 00    	jle    14d00 <__dtoa+0x1060>
   143bc:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   143c0:	85 ff                	test   %edi,%edi
   143c2:	0f 84 a0 02 00 00    	je     14668 <__dtoa+0x9c8>
   143c8:	8b 44 24 24          	mov    0x24(%rsp),%eax
   143cc:	85 c0                	test   %eax,%eax
   143ce:	0f 8f 2c 07 00 00    	jg     14b00 <__dtoa+0xe60>
   143d4:	49 89 ed             	mov    %rbp,%r13
   143d7:	85 db                	test   %ebx,%ebx
   143d9:	0f 85 81 07 00 00    	jne    14b60 <__dtoa+0xec0>
   143df:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   143e3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   143e8:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   143ed:	83 e8 01             	sub    $0x1,%eax
   143f0:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   143f5:	48 8d 5c 01 01       	lea    0x1(%rcx,%rax,1),%rbx
   143fa:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   143ff:	90                   	nop
   14400:	4c 89 e6             	mov    %r12,%rsi
   14403:	4c 89 ff             	mov    %r15,%rdi
   14406:	e8 e5 f6 ff ff       	call   13af0 <__quorem_D2A>
   1440b:	48 89 ee             	mov    %rbp,%rsi
   1440e:	4c 89 ff             	mov    %r15,%rdi
   14411:	89 44 24 44          	mov    %eax,0x44(%rsp)
   14415:	44 8d 70 30          	lea    0x30(%rax),%r14d
   14419:	e8 72 1c 00 00       	call   16090 <__cmp_D2A>
   1441e:	4c 89 ee             	mov    %r13,%rsi
   14421:	4c 89 e7             	mov    %r12,%rdi
   14424:	89 c3                	mov    %eax,%ebx
   14426:	e8 b5 1c 00 00       	call   160e0 <__diff_D2A>
   1442b:	48 85 c0             	test   %rax,%rax
   1442e:	0f 84 ec 00 00 00    	je     14520 <__dtoa+0x880>
   14434:	8b 48 10             	mov    0x10(%rax),%ecx
   14437:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   1443c:	0f 95 c2             	setne  %dl
   1443f:	85 c9                	test   %ecx,%ecx
   14441:	88 54 24 24          	mov    %dl,0x24(%rsp)
   14445:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   14449:	0f 85 91 07 00 00    	jne    14be0 <__dtoa+0xf40>
   1444f:	48 89 c6             	mov    %rax,%rsi
   14452:	4c 89 ff             	mov    %r15,%rdi
   14455:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1445a:	e8 31 1c 00 00       	call   16090 <__cmp_D2A>
   1445f:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   14464:	89 44 24 40          	mov    %eax,0x40(%rsp)
   14468:	4c 89 cf             	mov    %r9,%rdi
   1446b:	e8 f0 14 00 00       	call   15960 <__Bfree_D2A>
   14470:	8b 44 24 40          	mov    0x40(%rsp),%eax
   14474:	85 c0                	test   %eax,%eax
   14476:	0f 85 d4 07 00 00    	jne    14c50 <__dtoa+0xfb0>
   1447c:	0f b6 54 24 24       	movzbl 0x24(%rsp),%edx
   14481:	84 d2                	test   %dl,%dl
   14483:	0f 84 c7 07 00 00    	je     14c50 <__dtoa+0xfb0>
   14489:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1448d:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   14491:	83 e0 01             	and    $0x1,%eax
   14494:	0f 84 64 0b 00 00    	je     14ffe <__dtoa+0x135e>
   1449a:	85 db                	test   %ebx,%ebx
   1449c:	0f 88 24 0b 00 00    	js     14fc6 <__dtoa+0x1326>
   144a2:	09 d8                	or     %ebx,%eax
   144a4:	0f 84 b5 0b 00 00    	je     1505f <__dtoa+0x13bf>
   144aa:	48 83 44 24 10 01    	addq   $0x1,0x10(%rsp)
   144b0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   144b5:	44 88 70 ff          	mov    %r14b,-0x1(%rax)
   144b9:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   144be:	0f 84 ef 0a 00 00    	je     14fb3 <__dtoa+0x1313>
   144c4:	4c 89 ff             	mov    %r15,%rdi
   144c7:	31 d2                	xor    %edx,%edx
   144c9:	be 0a 00 00 00       	mov    $0xa,%esi
   144ce:	e8 7d 15 00 00       	call   15a50 <__multadd_D2A>
   144d3:	49 89 c7             	mov    %rax,%r15
   144d6:	48 85 c0             	test   %rax,%rax
   144d9:	74 45                	je     14520 <__dtoa+0x880>
   144db:	31 d2                	xor    %edx,%edx
   144dd:	be 0a 00 00 00       	mov    $0xa,%esi
   144e2:	48 89 ef             	mov    %rbp,%rdi
   144e5:	4c 39 ed             	cmp    %r13,%rbp
   144e8:	0f 84 42 07 00 00    	je     14c30 <__dtoa+0xf90>
   144ee:	e8 5d 15 00 00       	call   15a50 <__multadd_D2A>
   144f3:	48 89 c5             	mov    %rax,%rbp
   144f6:	48 85 c0             	test   %rax,%rax
   144f9:	74 25                	je     14520 <__dtoa+0x880>
   144fb:	4c 89 ef             	mov    %r13,%rdi
   144fe:	31 d2                	xor    %edx,%edx
   14500:	be 0a 00 00 00       	mov    $0xa,%esi
   14505:	e8 46 15 00 00       	call   15a50 <__multadd_D2A>
   1450a:	49 89 c5             	mov    %rax,%r13
   1450d:	48 85 c0             	test   %rax,%rax
   14510:	0f 85 ea fe ff ff    	jne    14400 <__dtoa+0x760>
   14516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1451d:	00 00 00 
   14520:	45 31 f6             	xor    %r14d,%r14d
   14523:	e9 d1 fb ff ff       	jmp    140f9 <__dtoa+0x459>
   14528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1452f:	00 
   14530:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   14537:	00 
   14538:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   1453f:	00 
   14540:	45 85 ed             	test   %r13d,%r13d
   14543:	0f 89 ff f8 ff ff    	jns    13e48 <__dtoa+0x1a8>
   14549:	29 f7                	sub    %esi,%edi
   1454b:	45 31 ed             	xor    %r13d,%r13d
   1454e:	8d 47 01             	lea    0x1(%rdi),%eax
   14551:	89 44 24 24          	mov    %eax,0x24(%rsp)
   14555:	e9 ee f8 ff ff       	jmp    13e48 <__dtoa+0x1a8>
   1455a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14560:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14564:	f2 0f 2a d3          	cvtsi2sd %ebx,%xmm2
   14568:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
   1456c:	7a 06                	jp     14574 <__dtoa+0x8d4>
   1456e:	0f 84 85 f8 ff ff    	je     13df9 <__dtoa+0x159>
   14574:	83 eb 01             	sub    $0x1,%ebx
   14577:	e9 7d f8 ff ff       	jmp    13df9 <__dtoa+0x159>
   1457c:	0f 1f 40 00          	nopl   0x0(%rax)
   14580:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14584:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   14588:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   1458c:	f2 0f 58 15 fc d6 00 	addsd  0xd6fc(%rip),%xmm2        # 21c90 <xdigs_lower.3329+0x50>
   14593:	00 
   14594:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   14599:	66 48 0f 7e d0       	movq   %xmm2,%rax
   1459e:	48 c1 ea 20          	shr    $0x20,%rdx
   145a2:	89 c0                	mov    %eax,%eax
   145a4:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   145aa:	48 c1 e2 20          	shl    $0x20,%rdx
   145ae:	48 09 d0             	or     %rdx,%rax
   145b1:	f2 0f 5c 05 df d6 00 	subsd  0xd6df(%rip),%xmm0        # 21c98 <xdigs_lower.3329+0x58>
   145b8:	00 
   145b9:	66 48 0f 6e d0       	movq   %rax,%xmm2
   145be:	66 0f 2f c2          	comisd %xmm2,%xmm0
   145c2:	0f 87 68 08 00 00    	ja     14e30 <__dtoa+0x1190>
   145c8:	66 0f 57 15 e0 d6 00 	xorpd  0xd6e0(%rip),%xmm2        # 21cb0 <xdigs_lower.3329+0x70>
   145cf:	00 
   145d0:	66 0f 2f d0          	comisd %xmm0,%xmm2
   145d4:	0f 87 f6 03 00 00    	ja     149d0 <__dtoa+0xd30>
   145da:	66 49 0f 7e ce       	movq   %xmm1,%r14
   145df:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   145e3:	8b 44 24 54          	mov    0x54(%rsp),%eax
   145e7:	83 f9 0e             	cmp    $0xe,%ecx
   145ea:	7f 08                	jg     145f4 <__dtoa+0x954>
   145ec:	85 c0                	test   %eax,%eax
   145ee:	0f 89 8c 06 00 00    	jns    14c80 <__dtoa+0xfe0>
   145f4:	8b 74 24 24          	mov    0x24(%rsp),%esi
   145f8:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   145fc:	31 ed                	xor    %ebp,%ebp
   145fe:	89 74 24 38          	mov    %esi,0x38(%rsp)
   14602:	85 c9                	test   %ecx,%ecx
   14604:	0f 84 aa fc ff ff    	je     142b4 <__dtoa+0x614>
   1460a:	e9 68 fc ff ff       	jmp    14277 <__dtoa+0x5d7>
   1460f:	90                   	nop
   14610:	4c 89 e6             	mov    %r12,%rsi
   14613:	4c 89 ff             	mov    %r15,%rdi
   14616:	e8 75 1a 00 00       	call   16090 <__cmp_D2A>
   1461b:	85 c0                	test   %eax,%eax
   1461d:	0f 89 8b fd ff ff    	jns    143ae <__dtoa+0x70e>
   14623:	4c 89 ff             	mov    %r15,%rdi
   14626:	31 d2                	xor    %edx,%edx
   14628:	be 0a 00 00 00       	mov    $0xa,%esi
   1462d:	83 6c 24 28 01       	subl   $0x1,0x28(%rsp)
   14632:	e8 19 14 00 00       	call   15a50 <__multadd_D2A>
   14637:	49 89 c7             	mov    %rax,%r15
   1463a:	48 85 c0             	test   %rax,%rax
   1463d:	0f 84 dd fe ff ff    	je     14520 <__dtoa+0x880>
   14643:	44 8b 54 24 40       	mov    0x40(%rsp),%r10d
   14648:	45 85 d2             	test   %r10d,%r10d
   1464b:	0f 85 e2 09 00 00    	jne    15033 <__dtoa+0x1393>
   14651:	8b 44 24 48          	mov    0x48(%rsp),%eax
   14655:	85 c0                	test   %eax,%eax
   14657:	0f 8e 1b 0a 00 00    	jle    15078 <__dtoa+0x13d8>
   1465d:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   14661:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14668:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1466d:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   14672:	4c 89 f3             	mov    %r14,%rbx
   14675:	eb 24                	jmp    1469b <__dtoa+0x9fb>
   14677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1467e:	00 00 
   14680:	4c 89 ff             	mov    %r15,%rdi
   14683:	31 d2                	xor    %edx,%edx
   14685:	be 0a 00 00 00       	mov    $0xa,%esi
   1468a:	e8 c1 13 00 00       	call   15a50 <__multadd_D2A>
   1468f:	49 89 c7             	mov    %rax,%r15
   14692:	48 85 c0             	test   %rax,%rax
   14695:	0f 84 85 fe ff ff    	je     14520 <__dtoa+0x880>
   1469b:	4c 89 e6             	mov    %r12,%rsi
   1469e:	4c 89 ff             	mov    %r15,%rdi
   146a1:	48 83 c3 01          	add    $0x1,%rbx
   146a5:	e8 46 f4 ff ff       	call   13af0 <__quorem_D2A>
   146aa:	8d 50 30             	lea    0x30(%rax),%edx
   146ad:	88 53 ff             	mov    %dl,-0x1(%rbx)
   146b0:	41 8b 4f 18          	mov    0x18(%r15),%ecx
   146b4:	85 c9                	test   %ecx,%ecx
   146b6:	75 0b                	jne    146c3 <__dtoa+0xa23>
   146b8:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   146bd:	0f 8e 75 08 00 00    	jle    14f38 <__dtoa+0x1298>
   146c3:	89 d8                	mov    %ebx,%eax
   146c5:	44 29 f0             	sub    %r14d,%eax
   146c8:	41 39 c5             	cmp    %eax,%r13d
   146cb:	7f b3                	jg     14680 <__dtoa+0x9e0>
   146cd:	45 31 f6             	xor    %r14d,%r14d
   146d0:	4c 89 ff             	mov    %r15,%rdi
   146d3:	be 01 00 00 00       	mov    $0x1,%esi
   146d8:	89 54 24 20          	mov    %edx,0x20(%rsp)
   146dc:	e8 6f 18 00 00       	call   15f50 <__lshift_D2A>
   146e1:	49 89 c7             	mov    %rax,%r15
   146e4:	48 85 c0             	test   %rax,%rax
   146e7:	0f 84 33 fe ff ff    	je     14520 <__dtoa+0x880>
   146ed:	4c 89 e6             	mov    %r12,%rsi
   146f0:	48 89 c7             	mov    %rax,%rdi
   146f3:	e8 98 19 00 00       	call   16090 <__cmp_D2A>
   146f8:	0f b6 4b ff          	movzbl -0x1(%rbx),%ecx
   146fc:	85 c0                	test   %eax,%eax
   146fe:	0f 8e 63 08 00 00    	jle    14f67 <__dtoa+0x12c7>
   14704:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   14709:	eb 15                	jmp    14720 <__dtoa+0xa80>
   1470b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14710:	48 39 d0             	cmp    %rdx,%rax
   14713:	0f 84 36 08 00 00    	je     14f4f <__dtoa+0x12af>
   14719:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   1471d:	48 89 c3             	mov    %rax,%rbx
   14720:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   14724:	80 f9 39             	cmp    $0x39,%cl
   14727:	74 e7                	je     14710 <__dtoa+0xa70>
   14729:	83 c1 01             	add    $0x1,%ecx
   1472c:	88 08                	mov    %cl,(%rax)
   1472e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14732:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14736:	4c 89 e7             	mov    %r12,%rdi
   14739:	e8 22 12 00 00       	call   15960 <__Bfree_D2A>
   1473e:	48 85 ed             	test   %rbp,%rbp
   14741:	0f 84 96 09 00 00    	je     150dd <__dtoa+0x143d>
   14747:	4d 85 f6             	test   %r14,%r14
   1474a:	0f 84 9c 09 00 00    	je     150ec <__dtoa+0x144c>
   14750:	49 39 ee             	cmp    %rbp,%r14
   14753:	0f 84 93 09 00 00    	je     150ec <__dtoa+0x144c>
   14759:	4c 89 f7             	mov    %r14,%rdi
   1475c:	e8 ff 11 00 00       	call   15960 <__Bfree_D2A>
   14761:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14766:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1476b:	e9 81 02 00 00       	jmp    149f1 <__dtoa+0xd51>
   14770:	b9 20 00 00 00       	mov    $0x20,%ecx
   14775:	89 d8                	mov    %ebx,%eax
   14777:	44 29 c9             	sub    %r9d,%ecx
   1477a:	d3 e0                	shl    %cl,%eax
   1477c:	e9 03 f6 ff ff       	jmp    13d84 <__dtoa+0xe4>
   14781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14788:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   1478f:	00 
   14790:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
   14795:	45 85 db             	test   %r11d,%r11d
   14798:	0f 8e 22 01 00 00    	jle    148c0 <__dtoa+0xc20>
   1479e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   147a2:	89 7c 24 48          	mov    %edi,0x48(%rsp)
   147a6:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
   147aa:	e9 1e f7 ff ff       	jmp    13ecd <__dtoa+0x22d>
   147af:	90                   	nop
   147b0:	8b 74 24 28          	mov    0x28(%rsp),%esi
   147b4:	f7 de                	neg    %esi
   147b6:	0f 84 04 02 00 00    	je     149c0 <__dtoa+0xd20>
   147bc:	89 f2                	mov    %esi,%edx
   147be:	48 8d 05 5b d5 00 00 	lea    0xd55b(%rip),%rax        # 21d20 <__tens_D2A>
   147c5:	83 e2 0f             	and    $0xf,%edx
   147c8:	c1 fe 04             	sar    $0x4,%esi
   147cb:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   147d0:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
   147d4:	66 0f 28 c2          	movapd %xmm2,%xmm0
   147d8:	0f 84 16 08 00 00    	je     14ff4 <__dtoa+0x1354>
   147de:	31 d2                	xor    %edx,%edx
   147e0:	b8 02 00 00 00       	mov    $0x2,%eax
   147e5:	4c 8d 15 f4 d5 00 00 	lea    0xd5f4(%rip),%r10        # 21de0 <__bigtens_D2A>
   147ec:	31 ff                	xor    %edi,%edi
   147ee:	66 90                	xchg   %ax,%ax
   147f0:	40 f6 c6 01          	test   $0x1,%sil
   147f4:	74 0e                	je     14804 <__dtoa+0xb64>
   147f6:	48 63 d7             	movslq %edi,%rdx
   147f9:	83 c0 01             	add    $0x1,%eax
   147fc:	f2 41 0f 59 04 d2    	mulsd  (%r10,%rdx,8),%xmm0
   14802:	89 ca                	mov    %ecx,%edx
   14804:	83 c7 01             	add    $0x1,%edi
   14807:	d1 fe                	sar    %esi
   14809:	75 e5                	jne    147f0 <__dtoa+0xb50>
   1480b:	84 d2                	test   %dl,%dl
   1480d:	0f 85 59 f7 ff ff    	jne    13f6c <__dtoa+0x2cc>
   14813:	66 0f 28 c2          	movapd %xmm2,%xmm0
   14817:	e9 50 f7 ff ff       	jmp    13f6c <__dtoa+0x2cc>
   1481c:	0f 1f 40 00          	nopl   0x0(%rax)
   14820:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   14827:	00 
   14828:	e9 83 f6 ff ff       	jmp    13eb0 <__dtoa+0x210>
   1482d:	0f 1f 00             	nopl   (%rax)
   14830:	b8 1c 00 00 00       	mov    $0x1c,%eax
   14835:	01 44 24 38          	add    %eax,0x38(%rsp)
   14839:	41 01 c5             	add    %eax,%r13d
   1483c:	01 44 24 24          	add    %eax,0x24(%rsp)
   14840:	e9 46 fb ff ff       	jmp    1438b <__dtoa+0x6eb>
   14845:	0f 1f 00             	nopl   (%rax)
   14848:	4c 89 ff             	mov    %r15,%rdi
   1484b:	e8 90 15 00 00       	call   15de0 <__pow5mult_D2A>
   14850:	49 89 c7             	mov    %rax,%r15
   14853:	48 85 c0             	test   %rax,%rax
   14856:	0f 85 c7 fa ff ff    	jne    14323 <__dtoa+0x683>
   1485c:	e9 bf fc ff ff       	jmp    14520 <__dtoa+0x880>
   14861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14868:	89 de                	mov    %ebx,%esi
   1486a:	48 89 c7             	mov    %rax,%rdi
   1486d:	e8 6e 15 00 00       	call   15de0 <__pow5mult_D2A>
   14872:	49 89 c4             	mov    %rax,%r12
   14875:	48 85 c0             	test   %rax,%rax
   14878:	0f 84 a2 fc ff ff    	je     14520 <__dtoa+0x880>
   1487e:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   14883:	0f 8e 27 03 00 00    	jle    14bb0 <__dtoa+0xf10>
   14889:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1488d:	85 d2                	test   %edx,%edx
   1488f:	0f 85 1b 03 00 00    	jne    14bb0 <__dtoa+0xf10>
   14895:	31 db                	xor    %ebx,%ebx
   14897:	41 8b 44 24 14       	mov    0x14(%r12),%eax
   1489c:	83 e8 01             	sub    $0x1,%eax
   1489f:	48 98                	cltq   
   148a1:	41 8b 7c 84 18       	mov    0x18(%r12,%rax,4),%edi
   148a6:	e8 75 12 00 00       	call   15b20 <__hi0bits_D2A>
   148ab:	41 89 c2             	mov    %eax,%r10d
   148ae:	b8 20 00 00 00       	mov    $0x20,%eax
   148b3:	44 29 d0             	sub    %r10d,%eax
   148b6:	e9 a2 fa ff ff       	jmp    1435d <__dtoa+0x6bd>
   148bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   148c0:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
   148c7:	00 
   148c8:	bf 01 00 00 00       	mov    $0x1,%edi
   148cd:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%rsp)
   148d4:	00 
   148d5:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   148dc:	00 
   148dd:	e9 eb f5 ff ff       	jmp    13ecd <__dtoa+0x22d>
   148e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   148e8:	66 0f 28 c1          	movapd %xmm1,%xmm0
   148ec:	b8 02 00 00 00       	mov    $0x2,%eax
   148f1:	e9 4a f6 ff ff       	jmp    13f40 <__dtoa+0x2a0>
   148f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   148fd:	00 00 00 
   14900:	4c 89 ff             	mov    %r15,%rdi
   14903:	89 c6                	mov    %eax,%esi
   14905:	e8 46 16 00 00       	call   15f50 <__lshift_D2A>
   1490a:	49 89 c7             	mov    %rax,%r15
   1490d:	48 85 c0             	test   %rax,%rax
   14910:	0f 85 81 fa ff ff    	jne    14397 <__dtoa+0x6f7>
   14916:	e9 05 fc ff ff       	jmp    14520 <__dtoa+0x880>
   1491b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14920:	4c 89 e7             	mov    %r12,%rdi
   14923:	44 89 ee             	mov    %r13d,%esi
   14926:	e8 25 16 00 00       	call   15f50 <__lshift_D2A>
   1492b:	49 89 c4             	mov    %rax,%r12
   1492e:	48 85 c0             	test   %rax,%rax
   14931:	0f 85 69 fa ff ff    	jne    143a0 <__dtoa+0x700>
   14937:	e9 e4 fb ff ff       	jmp    14520 <__dtoa+0x880>
   1493c:	0f 1f 40 00          	nopl   0x0(%rax)
   14940:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
   14944:	66 0f ef ff          	pxor   %xmm7,%xmm7
   14948:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   1494c:	0f 8a fe 03 00 00    	jp     14d50 <__dtoa+0x10b0>
   14952:	0f 85 f8 03 00 00    	jne    14d50 <__dtoa+0x10b0>
   14958:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1495d:	0f 1f 00             	nopl   (%rax)
   14960:	88 06                	mov    %al,(%rsi)
   14962:	f2 0f 10 15 36 d3 00 	movsd  0xd336(%rip),%xmm2        # 21ca0 <xdigs_lower.3329+0x60>
   14969:	00 
   1496a:	66 0f 28 dc          	movapd %xmm4,%xmm3
   1496e:	f2 0f 58 da          	addsd  %xmm2,%xmm3
   14972:	66 0f 2f c3          	comisd %xmm3,%xmm0
   14976:	0f 87 19 f7 ff ff    	ja     14095 <__dtoa+0x3f5>
   1497c:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
   14980:	66 0f 2f d0          	comisd %xmm0,%xmm2
   14984:	0f 86 50 fc ff ff    	jbe    145da <__dtoa+0x93a>
   1498a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14990:	48 89 d0             	mov    %rdx,%rax
   14993:	48 83 ea 01          	sub    $0x1,%rdx
   14997:	80 3a 30             	cmpb   $0x30,(%rdx)
   1499a:	74 f4                	je     14990 <__dtoa+0xcf0>
   1499c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   149a1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   149a6:	eb 51                	jmp    149f9 <__dtoa+0xd59>
   149a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   149af:	00 
   149b0:	b8 36 00 00 00       	mov    $0x36,%eax
   149b5:	2b 44 24 50          	sub    0x50(%rsp),%eax
   149b9:	e9 ca f8 ff ff       	jmp    14288 <__dtoa+0x5e8>
   149be:	66 90                	xchg   %ax,%ax
   149c0:	66 0f 28 c1          	movapd %xmm1,%xmm0
   149c4:	b8 02 00 00 00       	mov    $0x2,%eax
   149c9:	e9 9e f5 ff ff       	jmp    13f6c <__dtoa+0x2cc>
   149ce:	66 90                	xchg   %ax,%ax
   149d0:	45 31 e4             	xor    %r12d,%r12d
   149d3:	31 ed                	xor    %ebp,%ebp
   149d5:	8b 44 24 10          	mov    0x10(%rsp),%eax
   149d9:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   149de:	f7 d0                	not    %eax
   149e0:	89 44 24 38          	mov    %eax,0x38(%rsp)
   149e4:	4c 89 e7             	mov    %r12,%rdi
   149e7:	e8 74 0f 00 00       	call   15960 <__Bfree_D2A>
   149ec:	48 85 ed             	test   %rbp,%rbp
   149ef:	74 08                	je     149f9 <__dtoa+0xd59>
   149f1:	48 89 ef             	mov    %rbp,%rdi
   149f4:	e8 67 0f 00 00       	call   15960 <__Bfree_D2A>
   149f9:	4c 89 ff             	mov    %r15,%rdi
   149fc:	e8 5f 0f 00 00       	call   15960 <__Bfree_D2A>
   14a01:	44 8b 6c 24 38       	mov    0x38(%rsp),%r13d
   14a06:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14a0b:	48 8b 0c 24          	mov    (%rsp),%rcx
   14a0f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   14a14:	41 83 c5 01          	add    $0x1,%r13d
   14a18:	c6 00 00             	movb   $0x0,(%rax)
   14a1b:	44 89 29             	mov    %r13d,(%rcx)
   14a1e:	48 85 db             	test   %rbx,%rbx
   14a21:	0f 84 d2 f6 ff ff    	je     140f9 <__dtoa+0x459>
   14a27:	48 89 03             	mov    %rax,(%rbx)
   14a2a:	e9 ca f6 ff ff       	jmp    140f9 <__dtoa+0x459>
   14a2f:	90                   	nop
   14a30:	48 63 44 24 28       	movslq 0x28(%rsp),%rax
   14a35:	48 8d 15 e4 d2 00 00 	lea    0xd2e4(%rip),%rdx        # 21d20 <__tens_D2A>
   14a3c:	66 0f 28 c1          	movapd %xmm1,%xmm0
   14a40:	66 0f ef f6          	pxor   %xmm6,%xmm6
   14a44:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   14a49:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   14a4e:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   14a52:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   14a56:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   14a5a:	66 0f ef c0          	pxor   %xmm0,%xmm0
   14a5e:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   14a62:	83 c0 30             	add    $0x30,%eax
   14a65:	88 03                	mov    %al,(%rbx)
   14a67:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   14a6b:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   14a6f:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   14a73:	0f 8b ee 05 00 00    	jnp    15067 <__dtoa+0x13c7>
   14a79:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   14a80:	ff 
   14a81:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   14a85:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   14a8a:	f2 0f 10 1d f6 d1 00 	movsd  0xd1f6(%rip),%xmm3        # 21c88 <xdigs_lower.3329+0x48>
   14a91:	00 
   14a92:	83 e8 02             	sub    $0x2,%eax
   14a95:	48 8d 54 03 02       	lea    0x2(%rbx,%rax,1),%rdx
   14a9a:	eb 0d                	jmp    14aa9 <__dtoa+0xe09>
   14a9c:	0f 1f 40 00          	nopl   0x0(%rax)
   14aa0:	48 39 d1             	cmp    %rdx,%rcx
   14aa3:	0f 84 57 04 00 00    	je     14f00 <__dtoa+0x1260>
   14aa9:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   14aad:	66 0f ef ff          	pxor   %xmm7,%xmm7
   14ab1:	48 83 c1 01          	add    $0x1,%rcx
   14ab5:	66 0f 28 c1          	movapd %xmm1,%xmm0
   14ab9:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   14abd:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   14ac1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   14ac5:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   14ac9:	8d 70 30             	lea    0x30(%rax),%esi
   14acc:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
   14ad0:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   14ad4:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   14ad8:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   14adc:	7a c2                	jp     14aa0 <__dtoa+0xe00>
   14ade:	75 c0                	jne    14aa0 <__dtoa+0xe00>
   14ae0:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14ae4:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14ae9:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   14aee:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14af2:	e9 02 ff ff ff       	jmp    149f9 <__dtoa+0xd59>
   14af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14afe:	00 00 
   14b00:	48 89 ef             	mov    %rbp,%rdi
   14b03:	89 c6                	mov    %eax,%esi
   14b05:	e8 46 14 00 00       	call   15f50 <__lshift_D2A>
   14b0a:	48 89 c5             	mov    %rax,%rbp
   14b0d:	48 85 c0             	test   %rax,%rax
   14b10:	0f 85 be f8 ff ff    	jne    143d4 <__dtoa+0x734>
   14b16:	e9 05 fa ff ff       	jmp    14520 <__dtoa+0x880>
   14b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14b20:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   14b27:	ff 0f 00 
   14b2a:	49 85 c6             	test   %rax,%r14
   14b2d:	0f 85 25 f8 ff ff    	jne    14358 <__dtoa+0x6b8>
   14b33:	4c 89 f0             	mov    %r14,%rax
   14b36:	48 c1 e8 20          	shr    $0x20,%rax
   14b3a:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   14b3f:	0f 84 13 f8 ff ff    	je     14358 <__dtoa+0x6b8>
   14b45:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   14b4a:	41 83 c5 01          	add    $0x1,%r13d
   14b4e:	85 db                	test   %ebx,%ebx
   14b50:	bb 01 00 00 00       	mov    $0x1,%ebx
   14b55:	0f 84 fd f7 ff ff    	je     14358 <__dtoa+0x6b8>
   14b5b:	e9 37 fd ff ff       	jmp    14897 <__dtoa+0xbf7>
   14b60:	8b 7d 08             	mov    0x8(%rbp),%edi
   14b63:	e8 08 0d 00 00       	call   15870 <__Balloc_D2A>
   14b68:	49 89 c5             	mov    %rax,%r13
   14b6b:	48 85 c0             	test   %rax,%rax
   14b6e:	0f 84 ac f9 ff ff    	je     14520 <__dtoa+0x880>
   14b74:	48 63 45 14          	movslq 0x14(%rbp),%rax
   14b78:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   14b7c:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   14b80:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   14b87:	00 
   14b88:	e8 33 9c ff ff       	call   e7c0 <memcpy>
   14b8d:	4c 89 ef             	mov    %r13,%rdi
   14b90:	be 01 00 00 00       	mov    $0x1,%esi
   14b95:	e8 b6 13 00 00       	call   15f50 <__lshift_D2A>
   14b9a:	49 89 c5             	mov    %rax,%r13
   14b9d:	48 85 c0             	test   %rax,%rax
   14ba0:	0f 85 39 f8 ff ff    	jne    143df <__dtoa+0x73f>
   14ba6:	e9 75 f9 ff ff       	jmp    14520 <__dtoa+0x880>
   14bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14bb0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   14bb7:	ff 0f 00 
   14bba:	49 85 c6             	test   %rax,%r14
   14bbd:	0f 85 d2 fc ff ff    	jne    14895 <__dtoa+0xbf5>
   14bc3:	4c 89 f0             	mov    %r14,%rax
   14bc6:	48 c1 e8 20          	shr    $0x20,%rax
   14bca:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   14bcf:	0f 85 70 ff ff ff    	jne    14b45 <__dtoa+0xea5>
   14bd5:	e9 bb fc ff ff       	jmp    14895 <__dtoa+0xbf5>
   14bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14be0:	48 89 c7             	mov    %rax,%rdi
   14be3:	e8 78 0d 00 00       	call   15960 <__Bfree_D2A>
   14be8:	85 db                	test   %ebx,%ebx
   14bea:	0f 88 9d 04 00 00    	js     1508d <__dtoa+0x13ed>
   14bf0:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   14bf5:	0f 85 45 02 00 00    	jne    14e40 <__dtoa+0x11a0>
   14bfb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14c00:	44 89 f2             	mov    %r14d,%edx
   14c03:	48 8d 58 01          	lea    0x1(%rax),%rbx
   14c07:	83 fa 39             	cmp    $0x39,%edx
   14c0a:	0f 84 c7 03 00 00    	je     14fd7 <__dtoa+0x1337>
   14c10:	83 c2 01             	add    $0x1,%edx
   14c13:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14c18:	49 89 ee             	mov    %rbp,%r14
   14c1b:	4c 89 ed             	mov    %r13,%rbp
   14c1e:	88 10                	mov    %dl,(%rax)
   14c20:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14c24:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14c28:	e9 09 fb ff ff       	jmp    14736 <__dtoa+0xa96>
   14c2d:	0f 1f 00             	nopl   (%rax)
   14c30:	e8 1b 0e 00 00       	call   15a50 <__multadd_D2A>
   14c35:	48 89 c5             	mov    %rax,%rbp
   14c38:	48 85 c0             	test   %rax,%rax
   14c3b:	0f 84 df f8 ff ff    	je     14520 <__dtoa+0x880>
   14c41:	49 89 c5             	mov    %rax,%r13
   14c44:	e9 b7 f7 ff ff       	jmp    14400 <__dtoa+0x760>
   14c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14c50:	85 db                	test   %ebx,%ebx
   14c52:	0f 88 fc 01 00 00    	js     14e54 <__dtoa+0x11b4>
   14c58:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   14c5d:	0f 85 e2 01 00 00    	jne    14e45 <__dtoa+0x11a5>
   14c63:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   14c68:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   14c6c:	85 c0                	test   %eax,%eax
   14c6e:	0f 8f 3a 04 00 00    	jg     150ae <__dtoa+0x140e>
   14c74:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   14c79:	e9 32 f8 ff ff       	jmp    144b0 <__dtoa+0x810>
   14c7e:	66 90                	xchg   %ax,%ax
   14c80:	8b 74 24 10          	mov    0x10(%rsp),%esi
   14c84:	48 63 c1             	movslq %ecx,%rax
   14c87:	48 8d 15 92 d0 00 00 	lea    0xd092(%rip),%rdx        # 21d20 <__tens_D2A>
   14c8e:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   14c93:	85 f6                	test   %esi,%esi
   14c95:	0f 89 74 04 00 00    	jns    1510f <__dtoa+0x146f>
   14c9b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   14c9f:	85 c0                	test   %eax,%eax
   14ca1:	0f 8f 68 04 00 00    	jg     1510f <__dtoa+0x146f>
   14ca7:	0f 85 23 fd ff ff    	jne    149d0 <__dtoa+0xd30>
   14cad:	f2 0f 59 15 e3 cf 00 	mulsd  0xcfe3(%rip),%xmm2        # 21c98 <xdigs_lower.3329+0x58>
   14cb4:	00 
   14cb5:	66 49 0f 6e fe       	movq   %r14,%xmm7
   14cba:	45 31 e4             	xor    %r12d,%r12d
   14cbd:	31 ed                	xor    %ebp,%ebp
   14cbf:	66 0f 2f d7          	comisd %xmm7,%xmm2
   14cc3:	0f 83 0c fd ff ff    	jae    149d5 <__dtoa+0xd35>
   14cc9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14cce:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   14cd2:	c6 00 31             	movb   $0x31,(%rax)
   14cd5:	83 c3 01             	add    $0x1,%ebx
   14cd8:	49 89 c6             	mov    %rax,%r14
   14cdb:	48 83 c0 01          	add    $0x1,%rax
   14cdf:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
   14ce3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14ce8:	e9 f7 fc ff ff       	jmp    149e4 <__dtoa+0xd44>
   14ced:	0f 1f 00             	nopl   (%rax)
   14cf0:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   14cf7:	00 
   14cf8:	e9 93 fa ff ff       	jmp    14790 <__dtoa+0xaf0>
   14cfd:	0f 1f 00             	nopl   (%rax)
   14d00:	8b 44 24 20          	mov    0x20(%rsp),%eax
   14d04:	83 e8 03             	sub    $0x3,%eax
   14d07:	83 e0 fd             	and    $0xfffffffd,%eax
   14d0a:	0f 85 ac f6 ff ff    	jne    143bc <__dtoa+0x71c>
   14d10:	4c 89 e7             	mov    %r12,%rdi
   14d13:	31 d2                	xor    %edx,%edx
   14d15:	be 05 00 00 00       	mov    $0x5,%esi
   14d1a:	e8 31 0d 00 00       	call   15a50 <__multadd_D2A>
   14d1f:	49 89 c4             	mov    %rax,%r12
   14d22:	48 85 c0             	test   %rax,%rax
   14d25:	0f 84 f5 f7 ff ff    	je     14520 <__dtoa+0x880>
   14d2b:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   14d30:	45 85 c0             	test   %r8d,%r8d
   14d33:	0f 85 9c fc ff ff    	jne    149d5 <__dtoa+0xd35>
   14d39:	48 89 c6             	mov    %rax,%rsi
   14d3c:	4c 89 ff             	mov    %r15,%rdi
   14d3f:	e8 4c 13 00 00       	call   16090 <__cmp_D2A>
   14d44:	85 c0                	test   %eax,%eax
   14d46:	7f 81                	jg     14cc9 <__dtoa+0x1029>
   14d48:	e9 88 fc ff ff       	jmp    149d5 <__dtoa+0xd35>
   14d4d:	0f 1f 00             	nopl   (%rax)
   14d50:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   14d55:	88 01                	mov    %al,(%rcx)
   14d57:	83 fe 01             	cmp    $0x1,%esi
   14d5a:	0f 84 02 fc ff ff    	je     14962 <__dtoa+0xcc2>
   14d60:	8d 46 fe             	lea    -0x2(%rsi),%eax
   14d63:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   14d68:	f2 0f 10 1d 18 cf 00 	movsd  0xcf18(%rip),%xmm3        # 21c88 <xdigs_lower.3329+0x48>
   14d6f:	00 
   14d70:	48 8d 7c 06 02       	lea    0x2(%rsi,%rax,1),%rdi
   14d75:	eb 15                	jmp    14d8c <__dtoa+0x10ec>
   14d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14d7e:	00 00 
   14d80:	88 42 ff             	mov    %al,-0x1(%rdx)
   14d83:	48 39 d7             	cmp    %rdx,%rdi
   14d86:	0f 84 d6 fb ff ff    	je     14962 <__dtoa+0xcc2>
   14d8c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   14d90:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14d94:	66 0f ef ed          	pxor   %xmm5,%xmm5
   14d98:	48 89 d6             	mov    %rdx,%rsi
   14d9b:	48 83 c2 01          	add    $0x1,%rdx
   14d9f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   14da3:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   14da7:	83 c0 30             	add    $0x30,%eax
   14daa:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   14dae:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   14db2:	7a cc                	jp     14d80 <__dtoa+0x10e0>
   14db4:	0f 84 a6 fb ff ff    	je     14960 <__dtoa+0xcc0>
   14dba:	eb c4                	jmp    14d80 <__dtoa+0x10e0>
   14dbc:	0f 1f 40 00          	nopl   0x0(%rax)
   14dc0:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   14dc5:	45 85 c9             	test   %r9d,%r9d
   14dc8:	0f 84 b2 f7 ff ff    	je     14580 <__dtoa+0x8e0>
   14dce:	8b 74 24 48          	mov    0x48(%rsp),%esi
   14dd2:	85 f6                	test   %esi,%esi
   14dd4:	0f 8e 00 f8 ff ff    	jle    145da <__dtoa+0x93a>
   14dda:	f2 0f 10 1d a6 ce 00 	movsd  0xcea6(%rip),%xmm3        # 21c88 <xdigs_lower.3329+0x48>
   14de1:	00 
   14de2:	83 c0 01             	add    $0x1,%eax
   14de5:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14de9:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   14ded:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   14df1:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   14df5:	83 e9 01             	sub    $0x1,%ecx
   14df8:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   14dfc:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   14e00:	f2 0f 58 15 88 ce 00 	addsd  0xce88(%rip),%xmm2        # 21c90 <xdigs_lower.3329+0x50>
   14e07:	00 
   14e08:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   14e0d:	66 48 0f 7e d0       	movq   %xmm2,%rax
   14e12:	48 c1 ea 20          	shr    $0x20,%rdx
   14e16:	89 c0                	mov    %eax,%eax
   14e18:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   14e1e:	48 c1 e2 20          	shl    $0x20,%rdx
   14e22:	48 09 d0             	or     %rdx,%rax
   14e25:	e9 a9 f1 ff ff       	jmp    13fd3 <__dtoa+0x333>
   14e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14e30:	45 31 e4             	xor    %r12d,%r12d
   14e33:	31 ed                	xor    %ebp,%ebp
   14e35:	e9 8f fe ff ff       	jmp    14cc9 <__dtoa+0x1029>
   14e3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14e40:	b8 01 00 00 00       	mov    $0x1,%eax
   14e45:	8b 54 24 48          	mov    0x48(%rsp),%edx
   14e49:	83 e2 01             	and    $0x1,%edx
   14e4c:	09 da                	or     %ebx,%edx
   14e4e:	0f 85 0f fe ff ff    	jne    14c63 <__dtoa+0xfc3>
   14e54:	44 89 f2             	mov    %r14d,%edx
   14e57:	89 c1                	mov    %eax,%ecx
   14e59:	41 8b 77 18          	mov    0x18(%r15),%esi
   14e5d:	85 f6                	test   %esi,%esi
   14e5f:	75 0b                	jne    14e6c <__dtoa+0x11cc>
   14e61:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   14e66:	0f 8e 5d 01 00 00    	jle    14fc9 <__dtoa+0x1329>
   14e6c:	85 c9                	test   %ecx,%ecx
   14e6e:	0f 8e 55 01 00 00    	jle    14fc9 <__dtoa+0x1329>
   14e74:	4c 89 ff             	mov    %r15,%rdi
   14e77:	be 01 00 00 00       	mov    $0x1,%esi
   14e7c:	89 54 24 20          	mov    %edx,0x20(%rsp)
   14e80:	e8 cb 10 00 00       	call   15f50 <__lshift_D2A>
   14e85:	49 89 c7             	mov    %rax,%r15
   14e88:	48 85 c0             	test   %rax,%rax
   14e8b:	0f 84 8f f6 ff ff    	je     14520 <__dtoa+0x880>
   14e91:	4c 89 e6             	mov    %r12,%rsi
   14e94:	48 89 c7             	mov    %rax,%rdi
   14e97:	e8 f4 11 00 00       	call   16090 <__cmp_D2A>
   14e9c:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   14ea1:	8b 54 24 20          	mov    0x20(%rsp),%edx
   14ea5:	48 83 c3 01          	add    $0x1,%rbx
   14ea9:	85 c0                	test   %eax,%eax
   14eab:	0f 8e e9 01 00 00    	jle    1509a <__dtoa+0x13fa>
   14eb1:	83 fa 39             	cmp    $0x39,%edx
   14eb4:	0f 84 1d 01 00 00    	je     14fd7 <__dtoa+0x1337>
   14eba:	f3 0f 1e fa          	endbr64 
   14ebe:	8b 54 24 44          	mov    0x44(%rsp),%edx
   14ec2:	83 c2 31             	add    $0x31,%edx
   14ec5:	e9 49 fd ff ff       	jmp    14c13 <__dtoa+0xf73>
   14eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14ed0:	c6 02 30             	movb   $0x30,(%rdx)
   14ed3:	0f b6 41 ff          	movzbl -0x1(%rcx),%eax
   14ed7:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   14edc:	e9 d7 f1 ff ff       	jmp    140b8 <__dtoa+0x418>
   14ee1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14ee8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14eed:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   14ef2:	e9 02 fb ff ff       	jmp    149f9 <__dtoa+0xd59>
   14ef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14efe:	00 00 
   14f00:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
   14f04:	66 0f 2f ca          	comisd %xmm2,%xmm1
   14f08:	0f 87 8f 00 00 00    	ja     14f9d <__dtoa+0x12fd>
   14f0e:	66 0f 2e ca          	ucomisd %xmm2,%xmm1
   14f12:	7a 0a                	jp     14f1e <__dtoa+0x127e>
   14f14:	75 08                	jne    14f1e <__dtoa+0x127e>
   14f16:	a8 01                	test   $0x1,%al
   14f18:	0f 85 7f 00 00 00    	jne    14f9d <__dtoa+0x12fd>
   14f1e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14f22:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14f27:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   14f2c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14f30:	e9 c4 fa ff ff       	jmp    149f9 <__dtoa+0xd59>
   14f35:	0f 1f 00             	nopl   (%rax)
   14f38:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14f3c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14f41:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   14f46:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14f4a:	e9 95 fa ff ff       	jmp    149e4 <__dtoa+0xd44>
   14f4f:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14f53:	83 c0 01             	add    $0x1,%eax
   14f56:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14f5a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14f5f:	c6 00 31             	movb   $0x31,(%rax)
   14f62:	e9 cf f7 ff ff       	jmp    14736 <__dtoa+0xa96>
   14f67:	75 1e                	jne    14f87 <__dtoa+0x12e7>
   14f69:	8b 54 24 20          	mov    0x20(%rsp),%edx
   14f6d:	83 e2 01             	and    $0x1,%edx
   14f70:	0f 85 8e f7 ff ff    	jne    14704 <__dtoa+0xa64>
   14f76:	eb 0f                	jmp    14f87 <__dtoa+0x12e7>
   14f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14f7f:	00 
   14f80:	0f b6 4b fe          	movzbl -0x2(%rbx),%ecx
   14f84:	48 89 c3             	mov    %rax,%rbx
   14f87:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   14f8b:	80 f9 30             	cmp    $0x30,%cl
   14f8e:	74 f0                	je     14f80 <__dtoa+0x12e0>
   14f90:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14f94:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14f98:	e9 99 f7 ff ff       	jmp    14736 <__dtoa+0xa96>
   14f9d:	f3 0f 1e fa          	endbr64 
   14fa1:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14fa5:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   14faa:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14fae:	e9 f6 f0 ff ff       	jmp    140a9 <__dtoa+0x409>
   14fb3:	44 89 f2             	mov    %r14d,%edx
   14fb6:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   14fbb:	49 89 ee             	mov    %rbp,%r14
   14fbe:	4c 89 ed             	mov    %r13,%rbp
   14fc1:	e9 0a f7 ff ff       	jmp    146d0 <__dtoa+0xa30>
   14fc6:	44 89 f2             	mov    %r14d,%edx
   14fc9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14fce:	48 8d 58 01          	lea    0x1(%rax),%rbx
   14fd2:	e9 3c fc ff ff       	jmp    14c13 <__dtoa+0xf73>
   14fd7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   14fdc:	49 89 ee             	mov    %rbp,%r14
   14fdf:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   14fe4:	4c 89 ed             	mov    %r13,%rbp
   14fe7:	b9 39 00 00 00       	mov    $0x39,%ecx
   14fec:	c6 00 39             	movb   $0x39,(%rax)
   14fef:	e9 2c f7 ff ff       	jmp    14720 <__dtoa+0xa80>
   14ff4:	b8 02 00 00 00       	mov    $0x2,%eax
   14ff9:	e9 6e ef ff ff       	jmp    13f6c <__dtoa+0x2cc>
   14ffe:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   15003:	89 de                	mov    %ebx,%esi
   15005:	44 89 f2             	mov    %r14d,%edx
   15008:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   1500c:	41 83 fe 39          	cmp    $0x39,%r14d
   15010:	74 c5                	je     14fd7 <__dtoa+0x1337>
   15012:	8b 44 24 44          	mov    0x44(%rsp),%eax
   15016:	49 89 ee             	mov    %rbp,%r14
   15019:	4c 89 ed             	mov    %r13,%rbp
   1501c:	83 c0 31             	add    $0x31,%eax
   1501f:	85 f6                	test   %esi,%esi
   15021:	0f 4f d0             	cmovg  %eax,%edx
   15024:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15028:	88 11                	mov    %dl,(%rcx)
   1502a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1502e:	e9 03 f7 ff ff       	jmp    14736 <__dtoa+0xa96>
   15033:	48 89 ef             	mov    %rbp,%rdi
   15036:	31 d2                	xor    %edx,%edx
   15038:	be 0a 00 00 00       	mov    $0xa,%esi
   1503d:	e8 0e 0a 00 00       	call   15a50 <__multadd_D2A>
   15042:	48 89 c5             	mov    %rax,%rbp
   15045:	48 85 c0             	test   %rax,%rax
   15048:	0f 84 d2 f4 ff ff    	je     14520 <__dtoa+0x880>
   1504e:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15052:	85 c0                	test   %eax,%eax
   15054:	7e 63                	jle    150b9 <__dtoa+0x1419>
   15056:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   1505a:	e9 69 f3 ff ff       	jmp    143c8 <__dtoa+0x728>
   1505f:	44 89 f2             	mov    %r14d,%edx
   15062:	e9 f2 fd ff ff       	jmp    14e59 <__dtoa+0x11b9>
   15067:	0f 84 73 fa ff ff    	je     14ae0 <__dtoa+0xe40>
   1506d:	e9 07 fa ff ff       	jmp    14a79 <__dtoa+0xdd9>
   15072:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15078:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1507c:	83 e8 03             	sub    $0x3,%eax
   1507f:	83 e0 fd             	and    $0xfffffffd,%eax
   15082:	74 47                	je     150cb <__dtoa+0x142b>
   15084:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15088:	e9 d0 f5 ff ff       	jmp    1465d <__dtoa+0x9bd>
   1508d:	44 89 f2             	mov    %r14d,%edx
   15090:	b9 01 00 00 00       	mov    $0x1,%ecx
   15095:	e9 bf fd ff ff       	jmp    14e59 <__dtoa+0x11b9>
   1509a:	0f 85 73 fb ff ff    	jne    14c13 <__dtoa+0xf73>
   150a0:	f6 c2 01             	test   $0x1,%dl
   150a3:	0f 85 08 fe ff ff    	jne    14eb1 <__dtoa+0x1211>
   150a9:	e9 65 fb ff ff       	jmp    14c13 <__dtoa+0xf73>
   150ae:	44 89 f2             	mov    %r14d,%edx
   150b1:	48 89 cb             	mov    %rcx,%rbx
   150b4:	e9 4e fb ff ff       	jmp    14c07 <__dtoa+0xf67>
   150b9:	8b 44 24 20          	mov    0x20(%rsp),%eax
   150bd:	83 e8 03             	sub    $0x3,%eax
   150c0:	83 e0 fd             	and    $0xfffffffd,%eax
   150c3:	74 06                	je     150cb <__dtoa+0x142b>
   150c5:	8b 44 24 48          	mov    0x48(%rsp),%eax
   150c9:	eb 8b                	jmp    15056 <__dtoa+0x13b6>
   150cb:	8b 44 24 48          	mov    0x48(%rsp),%eax
   150cf:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   150d3:	e9 38 fc ff ff       	jmp    14d10 <__dtoa+0x1070>
   150d8:	e8 73 9a ff ff       	call   eb50 <__stack_chk_fail>
   150dd:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   150e2:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   150e7:	e9 0d f9 ff ff       	jmp    149f9 <__dtoa+0xd59>
   150ec:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   150f1:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   150f6:	e9 f6 f8 ff ff       	jmp    149f1 <__dtoa+0xd51>
   150fb:	0f 84 8a f2 ff ff    	je     1438b <__dtoa+0x6eb>
   15101:	ba 3c 00 00 00       	mov    $0x3c,%edx
   15106:	29 c2                	sub    %eax,%edx
   15108:	89 d0                	mov    %edx,%eax
   1510a:	e9 26 f7 ff ff       	jmp    14835 <__dtoa+0xb95>
   1510f:	66 49 0f 6e c6       	movq   %r14,%xmm0
   15114:	66 49 0f 6e ce       	movq   %r14,%xmm1
   15119:	66 0f ef ed          	pxor   %xmm5,%xmm5
   1511d:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15122:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   15126:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   1512a:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1512e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15132:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   15136:	8d 48 30             	lea    0x30(%rax),%ecx
   15139:	88 0b                	mov    %cl,(%rbx)
   1513b:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1513f:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   15143:	66 0f 2e cd          	ucomisd %xmm5,%xmm1
   15147:	7b 13                	jnp    1515c <__dtoa+0x14bc>
   15149:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%rsp)
   1514e:	0f 84 ac fd ff ff    	je     14f00 <__dtoa+0x1260>
   15154:	48 89 d1             	mov    %rdx,%rcx
   15157:	e9 25 f9 ff ff       	jmp    14a81 <__dtoa+0xde1>
   1515c:	0f 84 bc fd ff ff    	je     14f1e <__dtoa+0x127e>
   15162:	eb e5                	jmp    15149 <__dtoa+0x14a9>
   15164:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1516b:	00 00 00 
   1516e:	66 90                	xchg   %ax,%ax

0000000000015170 <dorounding.isra.0>:
   15170:	48 63 c6             	movslq %esi,%rax
   15173:	80 3c 07 08          	cmpb   $0x8,(%rdi,%rax,1)
   15177:	7f 17                	jg     15190 <dorounding.isra.0+0x20>
   15179:	74 05                	je     15180 <dorounding.isra.0+0x10>
   1517b:	c3                   	ret    
   1517c:	0f 1f 40 00          	nopl   0x0(%rax)
   15180:	83 c6 01             	add    $0x1,%esi
   15183:	48 63 f6             	movslq %esi,%rsi
   15186:	f6 04 37 01          	testb  $0x1,(%rdi,%rsi,1)
   1518a:	74 ef                	je     1517b <dorounding.isra.0+0xb>
   1518c:	0f 1f 40 00          	nopl   0x0(%rax)
   15190:	48 8d 44 07 ff       	lea    -0x1(%rdi,%rax,1),%rax
   15195:	0f b6 08             	movzbl (%rax),%ecx
   15198:	80 f9 0f             	cmp    $0xf,%cl
   1519b:	74 13                	je     151b0 <dorounding.isra.0+0x40>
   1519d:	eb 21                	jmp    151c0 <dorounding.isra.0+0x50>
   1519f:	90                   	nop
   151a0:	c6 00 00             	movb   $0x0,(%rax)
   151a3:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   151a7:	48 83 e8 01          	sub    $0x1,%rax
   151ab:	80 f9 0f             	cmp    $0xf,%cl
   151ae:	75 10                	jne    151c0 <dorounding.isra.0+0x50>
   151b0:	48 39 c7             	cmp    %rax,%rdi
   151b3:	75 eb                	jne    151a0 <dorounding.isra.0+0x30>
   151b5:	c6 00 01             	movb   $0x1,(%rax)
   151b8:	83 02 04             	addl   $0x4,(%rdx)
   151bb:	c3                   	ret    
   151bc:	0f 1f 40 00          	nopl   0x0(%rax)
   151c0:	83 c1 01             	add    $0x1,%ecx
   151c3:	88 08                	mov    %cl,(%rax)
   151c5:	c3                   	ret    
   151c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   151cd:	00 00 00 

00000000000151d0 <__hdtoa>:
   151d0:	f3 0f 1e fa          	endbr64 
   151d4:	41 56                	push   %r14
   151d6:	41 55                	push   %r13
   151d8:	4c 63 ee             	movslq %esi,%r13
   151db:	41 54                	push   %r12
   151dd:	49 89 d4             	mov    %rdx,%r12
   151e0:	55                   	push   %rbp
   151e1:	4c 89 c5             	mov    %r8,%rbp
   151e4:	53                   	push   %rbx
   151e5:	48 89 fb             	mov    %rdi,%rbx
   151e8:	48 83 ec 10          	sub    $0x10,%rsp
   151ec:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   151f2:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
   151f7:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   151fc:	c0 e8 07             	shr    $0x7,%al
   151ff:	0f b6 c0             	movzbl %al,%eax
   15202:	89 01                	mov    %eax,(%rcx)
   15204:	e8 77 13 00 00       	call   16580 <__fpclassify>
   15209:	83 f8 04             	cmp    $0x4,%eax
   1520c:	0f 87 61 02 00 00    	ja     15473 <__hdtoa+0x2a3>
   15212:	48 8d 15 a7 ca 00 00 	lea    0xcaa7(%rip),%rdx        # 21cc0 <xdigs_lower.3329+0x80>
   15219:	89 c0                	mov    %eax,%eax
   1521b:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   15220:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   15224:	48 01 d0             	add    %rdx,%rax
   15227:	3e ff e0             	notrack jmp *%rax
   1522a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15230:	f2 0f 59 05 b0 ca 00 	mulsd  0xcab0(%rip),%xmm0        # 21ce8 <xdigs_lower.3329+0xa8>
   15237:	00 
   15238:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1523e:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   15243:	66 c1 e8 04          	shr    $0x4,%ax
   15247:	25 ff 07 00 00       	and    $0x7ff,%eax
   1524c:	2d 00 06 00 00       	sub    $0x600,%eax
   15251:	41 89 04 24          	mov    %eax,(%r12)
   15255:	45 85 ed             	test   %r13d,%r13d
   15258:	0f 84 32 01 00 00    	je     15390 <__hdtoa+0x1c0>
   1525e:	41 83 fd 0e          	cmp    $0xe,%r13d
   15262:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   15268:	4d 0f 4d f5          	cmovge %r13,%r14
   1526c:	44 89 f7             	mov    %r14d,%edi
   1526f:	e8 bc e7 ff ff       	call   13a30 <__rv_alloc_D2A>
   15274:	48 85 c0             	test   %rax,%rax
   15277:	0f 84 47 01 00 00    	je     153c4 <__hdtoa+0x1f4>
   1527d:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   15282:	48 8d 48 0d          	lea    0xd(%rax),%rcx
   15286:	48 39 ca             	cmp    %rcx,%rdx
   15289:	76 11                	jbe    1529c <__hdtoa+0xcc>
   1528b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15290:	c6 02 00             	movb   $0x0,(%rdx)
   15293:	48 83 ea 01          	sub    $0x1,%rdx
   15297:	48 39 ca             	cmp    %rcx,%rdx
   1529a:	75 f4                	jne    15290 <__hdtoa+0xc0>
   1529c:	48 8d 78 05          	lea    0x5(%rax),%rdi
   152a0:	48 39 d0             	cmp    %rdx,%rax
   152a3:	73 29                	jae    152ce <__hdtoa+0xfe>
   152a5:	48 39 d7             	cmp    %rdx,%rdi
   152a8:	73 24                	jae    152ce <__hdtoa+0xfe>
   152aa:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   152ae:	eb 05                	jmp    152b5 <__hdtoa+0xe5>
   152b0:	48 39 d0             	cmp    %rdx,%rax
   152b3:	73 15                	jae    152ca <__hdtoa+0xfa>
   152b5:	89 ce                	mov    %ecx,%esi
   152b7:	48 83 ea 01          	sub    $0x1,%rdx
   152bb:	c1 e9 04             	shr    $0x4,%ecx
   152be:	83 e6 0f             	and    $0xf,%esi
   152c1:	40 88 72 01          	mov    %sil,0x1(%rdx)
   152c5:	48 39 fa             	cmp    %rdi,%rdx
   152c8:	77 e6                	ja     152b0 <__hdtoa+0xe0>
   152ca:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   152ce:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   152d2:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   152d8:	48 39 d0             	cmp    %rdx,%rax
   152db:	73 2e                	jae    1530b <__hdtoa+0x13b>
   152dd:	0f 1f 00             	nopl   (%rax)
   152e0:	89 ce                	mov    %ecx,%esi
   152e2:	48 83 ea 01          	sub    $0x1,%rdx
   152e6:	c1 f9 04             	sar    $0x4,%ecx
   152e9:	83 e6 0f             	and    $0xf,%esi
   152ec:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   152f2:	40 88 72 01          	mov    %sil,0x1(%rdx)
   152f6:	48 39 d0             	cmp    %rdx,%rax
   152f9:	75 e5                	jne    152e0 <__hdtoa+0x110>
   152fb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   152ff:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
   15305:	09 ce                	or     %ecx,%esi
   15307:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1530b:	83 c9 01             	or     $0x1,%ecx
   1530e:	88 0a                	mov    %cl,(%rdx)
   15310:	45 85 ed             	test   %r13d,%r13d
   15313:	0f 88 1f 01 00 00    	js     15438 <__hdtoa+0x268>
   15319:	4d 63 c5             	movslq %r13d,%r8
   1531c:	49 01 c0             	add    %rax,%r8
   1531f:	41 83 fd 0d          	cmp    $0xd,%r13d
   15323:	7f 0a                	jg     1532f <__hdtoa+0x15f>
   15325:	41 80 38 00          	cmpb   $0x0,(%r8)
   15329:	0f 85 29 01 00 00    	jne    15458 <__hdtoa+0x288>
   1532f:	48 85 ed             	test   %rbp,%rbp
   15332:	74 04                	je     15338 <__hdtoa+0x168>
   15334:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   15338:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   1533c:	41 c6 00 00          	movb   $0x0,(%r8)
   15340:	48 39 d0             	cmp    %rdx,%rax
   15343:	77 7f                	ja     153c4 <__hdtoa+0x1f4>
   15345:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   15349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15350:	0f be 0a             	movsbl (%rdx),%ecx
   15353:	48 83 ea 01          	sub    $0x1,%rdx
   15357:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   1535b:	88 4a 01             	mov    %cl,0x1(%rdx)
   1535e:	48 39 f2             	cmp    %rsi,%rdx
   15361:	75 ed                	jne    15350 <__hdtoa+0x180>
   15363:	48 83 c4 10          	add    $0x10,%rsp
   15367:	5b                   	pop    %rbx
   15368:	5d                   	pop    %rbp
   15369:	41 5c                	pop    %r12
   1536b:	41 5d                	pop    %r13
   1536d:	41 5e                	pop    %r14
   1536f:	c3                   	ret    
   15370:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   15375:	66 c1 e8 04          	shr    $0x4,%ax
   15379:	25 ff 07 00 00       	and    $0x7ff,%eax
   1537e:	2d fe 03 00 00       	sub    $0x3fe,%eax
   15383:	41 89 04 24          	mov    %eax,(%r12)
   15387:	45 85 ed             	test   %r13d,%r13d
   1538a:	0f 85 ce fe ff ff    	jne    1525e <__hdtoa+0x8e>
   15390:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   15396:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1539c:	e9 cb fe ff ff       	jmp    1526c <__hdtoa+0x9c>
   153a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   153a8:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   153af:	7f 
   153b0:	ba 03 00 00 00       	mov    $0x3,%edx
   153b5:	48 89 ee             	mov    %rbp,%rsi
   153b8:	48 8d 3d 9a c8 00 00 	lea    0xc89a(%rip),%rdi        # 21c59 <xdigs_lower.3329+0x19>
   153bf:	e8 ac e6 ff ff       	call   13a70 <__nrv_alloc_D2A>
   153c4:	48 83 c4 10          	add    $0x10,%rsp
   153c8:	5b                   	pop    %rbx
   153c9:	5d                   	pop    %rbp
   153ca:	41 5c                	pop    %r12
   153cc:	41 5d                	pop    %r13
   153ce:	41 5e                	pop    %r14
   153d0:	c3                   	ret    
   153d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   153d8:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   153df:	7f 
   153e0:	48 89 ee             	mov    %rbp,%rsi
   153e3:	ba 08 00 00 00       	mov    $0x8,%edx
   153e8:	48 8d 3d 61 c8 00 00 	lea    0xc861(%rip),%rdi        # 21c50 <xdigs_lower.3329+0x10>
   153ef:	e8 7c e6 ff ff       	call   13a70 <__nrv_alloc_D2A>
   153f4:	48 83 c4 10          	add    $0x10,%rsp
   153f8:	5b                   	pop    %rbx
   153f9:	5d                   	pop    %rbp
   153fa:	41 5c                	pop    %r12
   153fc:	41 5d                	pop    %r13
   153fe:	41 5e                	pop    %r14
   15400:	c3                   	ret    
   15401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15408:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1540f:	00 
   15410:	48 89 ee             	mov    %rbp,%rsi
   15413:	ba 01 00 00 00       	mov    $0x1,%edx
   15418:	48 8d 3d 89 c1 00 00 	lea    0xc189(%rip),%rdi        # 215a8 <_ZZ17ecall_pointer_outE8__func__+0x28>
   1541f:	e8 4c e6 ff ff       	call   13a70 <__nrv_alloc_D2A>
   15424:	48 83 c4 10          	add    $0x10,%rsp
   15428:	5b                   	pop    %rbx
   15429:	5d                   	pop    %rbp
   1542a:	41 5c                	pop    %r12
   1542c:	41 5d                	pop    %r13
   1542e:	41 5e                	pop    %r14
   15430:	c3                   	ret    
   15431:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15438:	ba 0e 00 00 00       	mov    $0xe,%edx
   1543d:	0f 1f 00             	nopl   (%rax)
   15440:	41 89 d5             	mov    %edx,%r13d
   15443:	83 ea 01             	sub    $0x1,%edx
   15446:	48 63 ca             	movslq %edx,%rcx
   15449:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   1544d:	74 f1                	je     15440 <__hdtoa+0x270>
   1544f:	e9 c5 fe ff ff       	jmp    15319 <__hdtoa+0x149>
   15454:	0f 1f 40 00          	nopl   0x0(%rax)
   15458:	48 89 c7             	mov    %rax,%rdi
   1545b:	4c 89 e2             	mov    %r12,%rdx
   1545e:	44 89 ee             	mov    %r13d,%esi
   15461:	48 89 04 24          	mov    %rax,(%rsp)
   15465:	e8 06 fd ff ff       	call   15170 <dorounding.isra.0>
   1546a:	48 8b 04 24          	mov    (%rsp),%rax
   1546e:	e9 bc fe ff ff       	jmp    1532f <__hdtoa+0x15f>
   15473:	e8 1c b3 00 00       	call   20794 <abort>
   15478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1547f:	00 

0000000000015480 <__hldtoa>:
   15480:	f3 0f 1e fa          	endbr64 
   15484:	41 56                	push   %r14
   15486:	41 55                	push   %r13
   15488:	4c 63 ee             	movslq %esi,%r13
   1548b:	41 54                	push   %r12
   1548d:	49 89 d4             	mov    %rdx,%r12
   15490:	55                   	push   %rbp
   15491:	4c 89 c5             	mov    %r8,%rbp
   15494:	53                   	push   %rbx
   15495:	48 89 fb             	mov    %rdi,%rbx
   15498:	48 83 ec 20          	sub    $0x20,%rsp
   1549c:	0f b6 44 24 59       	movzbl 0x59(%rsp),%eax
   154a1:	db 6c 24 50          	fldt   0x50(%rsp)
   154a5:	c0 e8 07             	shr    $0x7,%al
   154a8:	0f b6 c0             	movzbl %al,%eax
   154ab:	89 01                	mov    %eax,(%rcx)
   154ad:	d9 c0                	fld    %st(0)
   154af:	db 3c 24             	fstpt  (%rsp)
   154b2:	db 7c 24 10          	fstpt  0x10(%rsp)
   154b6:	e8 25 11 00 00       	call   165e0 <__fpclassifyl>
   154bb:	5a                   	pop    %rdx
   154bc:	59                   	pop    %rcx
   154bd:	83 f8 04             	cmp    $0x4,%eax
   154c0:	0f 87 45 02 00 00    	ja     1570b <__hldtoa+0x28b>
   154c6:	48 8d 15 07 c8 00 00 	lea    0xc807(%rip),%rdx        # 21cd4 <xdigs_lower.3329+0x94>
   154cd:	db 2c 24             	fldt   (%rsp)
   154d0:	89 c0                	mov    %eax,%eax
   154d2:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   154d6:	48 01 d0             	add    %rdx,%rax
   154d9:	3e ff e0             	notrack jmp *%rax
   154dc:	0f 1f 40 00          	nopl   0x0(%rax)
   154e0:	dc 0d 02 c8 00 00    	fmull  0xc802(%rip)        # 21ce8 <xdigs_lower.3329+0xa8>
   154e6:	db 7c 24 40          	fstpt  0x40(%rsp)
   154ea:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   154ef:	25 ff 7f 00 00       	and    $0x7fff,%eax
   154f4:	2d 03 42 00 00       	sub    $0x4203,%eax
   154f9:	41 89 04 24          	mov    %eax,(%r12)
   154fd:	45 85 ed             	test   %r13d,%r13d
   15500:	0f 84 28 01 00 00    	je     1562e <__hldtoa+0x1ae>
   15506:	41 83 fd 10          	cmp    $0x10,%r13d
   1550a:	41 be 10 00 00 00    	mov    $0x10,%r14d
   15510:	4d 0f 4d f5          	cmovge %r13,%r14
   15514:	44 89 f7             	mov    %r14d,%edi
   15517:	e8 14 e5 ff ff       	call   13a30 <__rv_alloc_D2A>
   1551c:	48 85 c0             	test   %rax,%rax
   1551f:	0f 84 39 01 00 00    	je     1565e <__hldtoa+0x1de>
   15525:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   1552a:	48 8d 48 0f          	lea    0xf(%rax),%rcx
   1552e:	48 39 ca             	cmp    %rcx,%rdx
   15531:	76 11                	jbe    15544 <__hldtoa+0xc4>
   15533:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15538:	c6 02 00             	movb   $0x0,(%rdx)
   1553b:	48 83 ea 01          	sub    $0x1,%rdx
   1553f:	48 39 ca             	cmp    %rcx,%rdx
   15542:	75 f4                	jne    15538 <__hldtoa+0xb8>
   15544:	48 8d 78 07          	lea    0x7(%rax),%rdi
   15548:	48 39 d0             	cmp    %rdx,%rax
   1554b:	73 31                	jae    1557e <__hldtoa+0xfe>
   1554d:	48 39 d7             	cmp    %rdx,%rdi
   15550:	73 2c                	jae    1557e <__hldtoa+0xfe>
   15552:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   15556:	eb 0d                	jmp    15565 <__hldtoa+0xe5>
   15558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1555f:	00 
   15560:	48 39 d0             	cmp    %rdx,%rax
   15563:	73 15                	jae    1557a <__hldtoa+0xfa>
   15565:	89 ce                	mov    %ecx,%esi
   15567:	48 83 ea 01          	sub    $0x1,%rdx
   1556b:	c1 e9 04             	shr    $0x4,%ecx
   1556e:	83 e6 0f             	and    $0xf,%esi
   15571:	40 88 72 01          	mov    %sil,0x1(%rdx)
   15575:	48 39 fa             	cmp    %rdi,%rdx
   15578:	77 e6                	ja     15560 <__hldtoa+0xe0>
   1557a:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   1557e:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
   15582:	48 39 d0             	cmp    %rdx,%rax
   15585:	73 22                	jae    155a9 <__hldtoa+0x129>
   15587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1558e:	00 00 
   15590:	89 ce                	mov    %ecx,%esi
   15592:	48 83 ea 01          	sub    $0x1,%rdx
   15596:	c1 e9 04             	shr    $0x4,%ecx
   15599:	83 e6 0f             	and    $0xf,%esi
   1559c:	40 88 72 01          	mov    %sil,0x1(%rdx)
   155a0:	48 39 d0             	cmp    %rdx,%rax
   155a3:	75 eb                	jne    15590 <__hldtoa+0x110>
   155a5:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   155a9:	83 c9 08             	or     $0x8,%ecx
   155ac:	88 0a                	mov    %cl,(%rdx)
   155ae:	45 85 ed             	test   %r13d,%r13d
   155b1:	0f 88 19 01 00 00    	js     156d0 <__hldtoa+0x250>
   155b7:	4d 63 c5             	movslq %r13d,%r8
   155ba:	49 01 c0             	add    %rax,%r8
   155bd:	41 83 fd 0f          	cmp    $0xf,%r13d
   155c1:	7f 0a                	jg     155cd <__hldtoa+0x14d>
   155c3:	41 80 38 00          	cmpb   $0x0,(%r8)
   155c7:	0f 85 23 01 00 00    	jne    156f0 <__hldtoa+0x270>
   155cd:	48 85 ed             	test   %rbp,%rbp
   155d0:	74 04                	je     155d6 <__hldtoa+0x156>
   155d2:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   155d6:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   155da:	41 c6 00 00          	movb   $0x0,(%r8)
   155de:	48 39 d0             	cmp    %rdx,%rax
   155e1:	77 7b                	ja     1565e <__hldtoa+0x1de>
   155e3:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   155e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   155ee:	00 00 
   155f0:	0f be 0a             	movsbl (%rdx),%ecx
   155f3:	48 83 ea 01          	sub    $0x1,%rdx
   155f7:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   155fb:	88 4a 01             	mov    %cl,0x1(%rdx)
   155fe:	48 39 f2             	cmp    %rsi,%rdx
   15601:	75 ed                	jne    155f0 <__hldtoa+0x170>
   15603:	48 83 c4 10          	add    $0x10,%rsp
   15607:	5b                   	pop    %rbx
   15608:	5d                   	pop    %rbp
   15609:	41 5c                	pop    %r12
   1560b:	41 5d                	pop    %r13
   1560d:	41 5e                	pop    %r14
   1560f:	c3                   	ret    
   15610:	dd d8                	fstp   %st(0)
   15612:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   15617:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1561c:	2d 01 40 00 00       	sub    $0x4001,%eax
   15621:	41 89 04 24          	mov    %eax,(%r12)
   15625:	45 85 ed             	test   %r13d,%r13d
   15628:	0f 85 d8 fe ff ff    	jne    15506 <__hldtoa+0x86>
   1562e:	41 be 10 00 00 00    	mov    $0x10,%r14d
   15634:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1563a:	e9 d5 fe ff ff       	jmp    15514 <__hldtoa+0x94>
   1563f:	90                   	nop
   15640:	dd d8                	fstp   %st(0)
   15642:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   15649:	7f 
   1564a:	ba 03 00 00 00       	mov    $0x3,%edx
   1564f:	48 89 ee             	mov    %rbp,%rsi
   15652:	48 8d 3d 00 c6 00 00 	lea    0xc600(%rip),%rdi        # 21c59 <xdigs_lower.3329+0x19>
   15659:	e8 12 e4 ff ff       	call   13a70 <__nrv_alloc_D2A>
   1565e:	48 83 c4 10          	add    $0x10,%rsp
   15662:	5b                   	pop    %rbx
   15663:	5d                   	pop    %rbp
   15664:	41 5c                	pop    %r12
   15666:	41 5d                	pop    %r13
   15668:	41 5e                	pop    %r14
   1566a:	c3                   	ret    
   1566b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15670:	dd d8                	fstp   %st(0)
   15672:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   15679:	7f 
   1567a:	48 89 ee             	mov    %rbp,%rsi
   1567d:	ba 08 00 00 00       	mov    $0x8,%edx
   15682:	48 8d 3d c7 c5 00 00 	lea    0xc5c7(%rip),%rdi        # 21c50 <xdigs_lower.3329+0x10>
   15689:	e8 e2 e3 ff ff       	call   13a70 <__nrv_alloc_D2A>
   1568e:	48 83 c4 10          	add    $0x10,%rsp
   15692:	5b                   	pop    %rbx
   15693:	5d                   	pop    %rbp
   15694:	41 5c                	pop    %r12
   15696:	41 5d                	pop    %r13
   15698:	41 5e                	pop    %r14
   1569a:	c3                   	ret    
   1569b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   156a0:	dd d8                	fstp   %st(0)
   156a2:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   156a9:	00 
   156aa:	48 89 ee             	mov    %rbp,%rsi
   156ad:	ba 01 00 00 00       	mov    $0x1,%edx
   156b2:	48 8d 3d ef be 00 00 	lea    0xbeef(%rip),%rdi        # 215a8 <_ZZ17ecall_pointer_outE8__func__+0x28>
   156b9:	e8 b2 e3 ff ff       	call   13a70 <__nrv_alloc_D2A>
   156be:	48 83 c4 10          	add    $0x10,%rsp
   156c2:	5b                   	pop    %rbx
   156c3:	5d                   	pop    %rbp
   156c4:	41 5c                	pop    %r12
   156c6:	41 5d                	pop    %r13
   156c8:	41 5e                	pop    %r14
   156ca:	c3                   	ret    
   156cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   156d0:	ba 10 00 00 00       	mov    $0x10,%edx
   156d5:	0f 1f 00             	nopl   (%rax)
   156d8:	41 89 d5             	mov    %edx,%r13d
   156db:	83 ea 01             	sub    $0x1,%edx
   156de:	48 63 ca             	movslq %edx,%rcx
   156e1:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   156e5:	74 f1                	je     156d8 <__hldtoa+0x258>
   156e7:	e9 cb fe ff ff       	jmp    155b7 <__hldtoa+0x137>
   156ec:	0f 1f 40 00          	nopl   0x0(%rax)
   156f0:	48 89 c7             	mov    %rax,%rdi
   156f3:	4c 89 e2             	mov    %r12,%rdx
   156f6:	44 89 ee             	mov    %r13d,%esi
   156f9:	48 89 04 24          	mov    %rax,(%rsp)
   156fd:	e8 6e fa ff ff       	call   15170 <dorounding.isra.0>
   15702:	48 8b 04 24          	mov    (%rsp),%rax
   15706:	e9 c2 fe ff ff       	jmp    155cd <__hldtoa+0x14d>
   1570b:	e8 84 b0 00 00       	call   20794 <abort>

0000000000015710 <__ldtoa>:
   15710:	f3 0f 1e fa          	endbr64 
   15714:	41 57                	push   %r15
   15716:	41 56                	push   %r14
   15718:	41 89 d6             	mov    %edx,%r14d
   1571b:	41 55                	push   %r13
   1571d:	41 89 f5             	mov    %esi,%r13d
   15720:	41 54                	push   %r12
   15722:	4d 89 cc             	mov    %r9,%r12
   15725:	55                   	push   %rbp
   15726:	53                   	push   %rbx
   15727:	48 89 cb             	mov    %rcx,%rbx
   1572a:	48 83 ec 48          	sub    $0x48,%rsp
   1572e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15735:	00 00 
   15737:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1573c:	31 c0                	xor    %eax,%eax
   1573e:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   15745:	00 
   15746:	48 b8 40 00 00 00 c3 	movabs $0xffffbfc300000040,%rax
   1574d:	bf ff ff 
   15750:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   15755:	48 b8 c0 3f 00 00 01 	movabs $0x100003fc0,%rax
   1575c:	00 00 00 
   1575f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15764:	0f b6 47 09          	movzbl 0x9(%rdi),%eax
   15768:	c0 e8 07             	shr    $0x7,%al
   1576b:	0f b6 c0             	movzbl %al,%eax
   1576e:	41 89 00             	mov    %eax,(%r8)
   15771:	48 8b 07             	mov    (%rdi),%rax
   15774:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   15778:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1577d:	ff 77 08             	push   0x8(%rdi)
   15780:	81 e5 ff 7f 00 00    	and    $0x7fff,%ebp
   15786:	ff 37                	push   (%rdi)
   15788:	e8 53 0e 00 00       	call   165e0 <__fpclassifyl>
   1578d:	5e                   	pop    %rsi
   1578e:	5f                   	pop    %rdi
   1578f:	83 f8 04             	cmp    $0x4,%eax
   15792:	0f 87 c5 00 00 00    	ja     1585d <__ldtoa+0x14d>
   15798:	48 8d 15 51 c5 00 00 	lea    0xc551(%rip),%rdx        # 21cf0 <xdigs_lower.3329+0xb0>
   1579f:	89 c0                	mov    %eax,%eax
   157a1:	44 8d bd c2 bf ff ff 	lea    -0x403e(%rbp),%r15d
   157a8:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   157ac:	48 01 d0             	add    %rdx,%rax
   157af:	3e ff e0             	notrack jmp *%rax
   157b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   157b8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   157bf:	00 
   157c0:	44 8d bd c3 bf ff ff 	lea    -0x403d(%rbp),%r15d
   157c7:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   157cc:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   157d1:	45 89 f1             	mov    %r14d,%r9d
   157d4:	45 89 e8             	mov    %r13d,%r8d
   157d7:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   157dc:	41 54                	push   %r12
   157de:	44 89 fe             	mov    %r15d,%esi
   157e1:	53                   	push   %rbx
   157e2:	e8 19 13 00 00       	call   16b00 <__gdtoa>
   157e7:	81 3b 00 80 ff ff    	cmpl   $0xffff8000,(%rbx)
   157ed:	5a                   	pop    %rdx
   157ee:	59                   	pop    %rcx
   157ef:	75 06                	jne    157f7 <__ldtoa+0xe7>
   157f1:	c7 03 ff ff ff 7f    	movl   $0x7fffffff,(%rbx)
   157f7:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   157fc:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   15803:	00 00 
   15805:	75 5b                	jne    15862 <__ldtoa+0x152>
   15807:	48 83 c4 48          	add    $0x48,%rsp
   1580b:	5b                   	pop    %rbx
   1580c:	5d                   	pop    %rbp
   1580d:	41 5c                	pop    %r12
   1580f:	41 5d                	pop    %r13
   15811:	41 5e                	pop    %r14
   15813:	41 5f                	pop    %r15
   15815:	c3                   	ret    
   15816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1581d:	00 00 00 
   15820:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   15827:	00 
   15828:	eb 9d                	jmp    157c7 <__ldtoa+0xb7>
   1582a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15830:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%rsp)
   15837:	00 
   15838:	eb 8d                	jmp    157c7 <__ldtoa+0xb7>
   1583a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15840:	c7 44 24 0c 03 00 00 	movl   $0x3,0xc(%rsp)
   15847:	00 
   15848:	e9 7a ff ff ff       	jmp    157c7 <__ldtoa+0xb7>
   1584d:	0f 1f 00             	nopl   (%rax)
   15850:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   15857:	00 
   15858:	e9 6a ff ff ff       	jmp    157c7 <__ldtoa+0xb7>
   1585d:	e8 32 af 00 00       	call   20794 <abort>
   15862:	e8 e9 92 ff ff       	call   eb50 <__stack_chk_fail>
   15867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1586e:	00 00 

0000000000015870 <__Balloc_D2A>:
   15870:	f3 0f 1e fa          	endbr64 
   15874:	41 54                	push   %r12
   15876:	55                   	push   %rbp
   15877:	53                   	push   %rbx
   15878:	89 fb                	mov    %edi,%ebx
   1587a:	48 8d 3d 4f 58 01 00 	lea    0x1584f(%rip),%rdi        # 2b0d0 <__dtoa_locks>
   15881:	e8 ca 54 ff ff       	call   ad50 <sgx_spin_lock>
   15886:	83 fb 09             	cmp    $0x9,%ebx
   15889:	7e 5d                	jle    158e8 <__Balloc_D2A+0x78>
   1588b:	89 d9                	mov    %ebx,%ecx
   1588d:	bd 01 00 00 00       	mov    $0x1,%ebp
   15892:	d3 e5                	shl    %cl,%ebp
   15894:	8d 45 ff             	lea    -0x1(%rbp),%eax
   15897:	48 98                	cltq   
   15899:	48 8d 3c 85 27 00 00 	lea    0x27(,%rax,4),%rdi
   158a0:	00 
   158a1:	48 b8 f8 ff ff ff 07 	movabs $0x7fffffff8,%rax
   158a8:	00 00 00 
   158ab:	48 21 c7             	and    %rax,%rdi
   158ae:	e8 4d 5e ff ff       	call   b700 <dlmalloc>
   158b3:	49 89 c4             	mov    %rax,%r12
   158b6:	48 85 c0             	test   %rax,%rax
   158b9:	74 1f                	je     158da <__Balloc_D2A+0x6a>
   158bb:	41 89 5c 24 08       	mov    %ebx,0x8(%r12)
   158c0:	41 89 6c 24 0c       	mov    %ebp,0xc(%r12)
   158c5:	48 8d 3d 04 58 01 00 	lea    0x15804(%rip),%rdi        # 2b0d0 <__dtoa_locks>
   158cc:	e8 ef 54 ff ff       	call   adc0 <sgx_spin_unlock>
   158d1:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   158d8:	00 00 
   158da:	4c 89 e0             	mov    %r12,%rax
   158dd:	5b                   	pop    %rbx
   158de:	5d                   	pop    %rbp
   158df:	41 5c                	pop    %r12
   158e1:	c3                   	ret    
   158e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   158e8:	48 8d 05 91 57 01 00 	lea    0x15791(%rip),%rax        # 2b080 <freelist>
   158ef:	48 63 d3             	movslq %ebx,%rdx
   158f2:	4c 8b 24 d0          	mov    (%rax,%rdx,8),%r12
   158f6:	4d 85 e4             	test   %r12,%r12
   158f9:	74 0d                	je     15908 <__Balloc_D2A+0x98>
   158fb:	49 8b 0c 24          	mov    (%r12),%rcx
   158ff:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
   15903:	eb c0                	jmp    158c5 <__Balloc_D2A+0x55>
   15905:	0f 1f 00             	nopl   (%rax)
   15908:	bd 01 00 00 00       	mov    $0x1,%ebp
   1590d:	89 d9                	mov    %ebx,%ecx
   1590f:	4c 8b 25 1a 49 01 00 	mov    0x1491a(%rip),%r12        # 2a230 <pmem_next>
   15916:	48 8d 15 63 4e 01 00 	lea    0x14e63(%rip),%rdx        # 2a780 <private_mem>
   1591d:	d3 e5                	shl    %cl,%ebp
   1591f:	8d 45 ff             	lea    -0x1(%rbp),%eax
   15922:	4c 89 e6             	mov    %r12,%rsi
   15925:	48 98                	cltq   
   15927:	48 29 d6             	sub    %rdx,%rsi
   1592a:	48 8d 04 85 27 00 00 	lea    0x27(,%rax,4),%rax
   15931:	00 
   15932:	48 89 f2             	mov    %rsi,%rdx
   15935:	48 c1 e8 03          	shr    $0x3,%rax
   15939:	48 c1 fa 03          	sar    $0x3,%rdx
   1593d:	89 c0                	mov    %eax,%eax
   1593f:	48 01 c2             	add    %rax,%rdx
   15942:	48 81 fa 20 01 00 00 	cmp    $0x120,%rdx
   15949:	0f 87 3c ff ff ff    	ja     1588b <__Balloc_D2A+0x1b>
   1594f:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
   15953:	48 89 05 d6 48 01 00 	mov    %rax,0x148d6(%rip)        # 2a230 <pmem_next>
   1595a:	e9 5c ff ff ff       	jmp    158bb <__Balloc_D2A+0x4b>
   1595f:	90                   	nop

0000000000015960 <__Bfree_D2A>:
   15960:	f3 0f 1e fa          	endbr64 
   15964:	48 85 ff             	test   %rdi,%rdi
   15967:	74 47                	je     159b0 <__Bfree_D2A+0x50>
   15969:	55                   	push   %rbp
   1596a:	83 7f 08 09          	cmpl   $0x9,0x8(%rdi)
   1596e:	48 89 fd             	mov    %rdi,%rbp
   15971:	7e 0d                	jle    15980 <__Bfree_D2A+0x20>
   15973:	5d                   	pop    %rbp
   15974:	e9 f7 77 ff ff       	jmp    d170 <dlfree>
   15979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15980:	48 8d 3d 49 57 01 00 	lea    0x15749(%rip),%rdi        # 2b0d0 <__dtoa_locks>
   15987:	e8 c4 53 ff ff       	call   ad50 <sgx_spin_lock>
   1598c:	48 63 55 08          	movslq 0x8(%rbp),%rdx
   15990:	48 8d 05 e9 56 01 00 	lea    0x156e9(%rip),%rax        # 2b080 <freelist>
   15997:	48 8d 3d 32 57 01 00 	lea    0x15732(%rip),%rdi        # 2b0d0 <__dtoa_locks>
   1599e:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
   159a2:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
   159a6:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   159aa:	5d                   	pop    %rbp
   159ab:	e9 10 54 ff ff       	jmp    adc0 <sgx_spin_unlock>
   159b0:	c3                   	ret    
   159b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   159b8:	00 00 00 
   159bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000159c0 <__lo0bits_D2A>:
   159c0:	f3 0f 1e fa          	endbr64 
   159c4:	8b 07                	mov    (%rdi),%eax
   159c6:	45 31 c0             	xor    %r8d,%r8d
   159c9:	a8 07                	test   $0x7,%al
   159cb:	74 1b                	je     159e8 <__lo0bits_D2A+0x28>
   159cd:	a8 01                	test   $0x1,%al
   159cf:	75 0e                	jne    159df <__lo0bits_D2A+0x1f>
   159d1:	a8 02                	test   $0x2,%al
   159d3:	74 6b                	je     15a40 <__lo0bits_D2A+0x80>
   159d5:	d1 e8                	shr    %eax
   159d7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   159dd:	89 07                	mov    %eax,(%rdi)
   159df:	44 89 c0             	mov    %r8d,%eax
   159e2:	c3                   	ret    
   159e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   159e8:	66 85 c0             	test   %ax,%ax
   159eb:	75 09                	jne    159f6 <__lo0bits_D2A+0x36>
   159ed:	c1 e8 10             	shr    $0x10,%eax
   159f0:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   159f6:	84 c0                	test   %al,%al
   159f8:	75 07                	jne    15a01 <__lo0bits_D2A+0x41>
   159fa:	41 83 c0 08          	add    $0x8,%r8d
   159fe:	c1 e8 08             	shr    $0x8,%eax
   15a01:	a8 0f                	test   $0xf,%al
   15a03:	75 07                	jne    15a0c <__lo0bits_D2A+0x4c>
   15a05:	41 83 c0 04          	add    $0x4,%r8d
   15a09:	c1 e8 04             	shr    $0x4,%eax
   15a0c:	a8 03                	test   $0x3,%al
   15a0e:	75 07                	jne    15a17 <__lo0bits_D2A+0x57>
   15a10:	41 83 c0 02          	add    $0x2,%r8d
   15a14:	c1 e8 02             	shr    $0x2,%eax
   15a17:	a8 01                	test   $0x1,%al
   15a19:	75 08                	jne    15a23 <__lo0bits_D2A+0x63>
   15a1b:	41 83 c0 01          	add    $0x1,%r8d
   15a1f:	d1 e8                	shr    %eax
   15a21:	74 0d                	je     15a30 <__lo0bits_D2A+0x70>
   15a23:	89 07                	mov    %eax,(%rdi)
   15a25:	44 89 c0             	mov    %r8d,%eax
   15a28:	c3                   	ret    
   15a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15a30:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   15a36:	eb a7                	jmp    159df <__lo0bits_D2A+0x1f>
   15a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15a3f:	00 
   15a40:	c1 e8 02             	shr    $0x2,%eax
   15a43:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   15a49:	89 07                	mov    %eax,(%rdi)
   15a4b:	44 89 c0             	mov    %r8d,%eax
   15a4e:	c3                   	ret    
   15a4f:	90                   	nop

0000000000015a50 <__multadd_D2A>:
   15a50:	f3 0f 1e fa          	endbr64 
   15a54:	41 55                	push   %r13
   15a56:	31 c9                	xor    %ecx,%ecx
   15a58:	41 54                	push   %r12
   15a5a:	41 89 d4             	mov    %edx,%r12d
   15a5d:	55                   	push   %rbp
   15a5e:	48 89 fd             	mov    %rdi,%rbp
   15a61:	53                   	push   %rbx
   15a62:	48 83 ec 08          	sub    $0x8,%rsp
   15a66:	8b 5f 14             	mov    0x14(%rdi),%ebx
   15a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15a70:	8b 44 8d 18          	mov    0x18(%rbp,%rcx,4),%eax
   15a74:	0f b7 d0             	movzwl %ax,%edx
   15a77:	c1 e8 10             	shr    $0x10,%eax
   15a7a:	0f af d6             	imul   %esi,%edx
   15a7d:	0f af c6             	imul   %esi,%eax
   15a80:	44 01 e2             	add    %r12d,%edx
   15a83:	89 d7                	mov    %edx,%edi
   15a85:	0f b7 d2             	movzwl %dx,%edx
   15a88:	c1 ef 10             	shr    $0x10,%edi
   15a8b:	01 f8                	add    %edi,%eax
   15a8d:	41 89 c4             	mov    %eax,%r12d
   15a90:	c1 e0 10             	shl    $0x10,%eax
   15a93:	01 d0                	add    %edx,%eax
   15a95:	41 c1 ec 10          	shr    $0x10,%r12d
   15a99:	89 44 8d 18          	mov    %eax,0x18(%rbp,%rcx,4)
   15a9d:	48 83 c1 01          	add    $0x1,%rcx
   15aa1:	39 cb                	cmp    %ecx,%ebx
   15aa3:	7f cb                	jg     15a70 <__multadd_D2A+0x20>
   15aa5:	49 89 ed             	mov    %rbp,%r13
   15aa8:	45 85 e4             	test   %r12d,%r12d
   15aab:	74 16                	je     15ac3 <__multadd_D2A+0x73>
   15aad:	39 5d 0c             	cmp    %ebx,0xc(%rbp)
   15ab0:	7e 26                	jle    15ad8 <__multadd_D2A+0x88>
   15ab2:	48 63 c3             	movslq %ebx,%rax
   15ab5:	83 c3 01             	add    $0x1,%ebx
   15ab8:	49 89 ed             	mov    %rbp,%r13
   15abb:	44 89 64 85 18       	mov    %r12d,0x18(%rbp,%rax,4)
   15ac0:	89 5d 14             	mov    %ebx,0x14(%rbp)
   15ac3:	48 83 c4 08          	add    $0x8,%rsp
   15ac7:	4c 89 e8             	mov    %r13,%rax
   15aca:	5b                   	pop    %rbx
   15acb:	5d                   	pop    %rbp
   15acc:	41 5c                	pop    %r12
   15ace:	41 5d                	pop    %r13
   15ad0:	c3                   	ret    
   15ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15ad8:	8b 45 08             	mov    0x8(%rbp),%eax
   15adb:	8d 78 01             	lea    0x1(%rax),%edi
   15ade:	e8 8d fd ff ff       	call   15870 <__Balloc_D2A>
   15ae3:	49 89 c5             	mov    %rax,%r13
   15ae6:	48 85 c0             	test   %rax,%rax
   15ae9:	74 d8                	je     15ac3 <__multadd_D2A+0x73>
   15aeb:	48 63 45 14          	movslq 0x14(%rbp),%rax
   15aef:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   15af3:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   15af7:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   15afe:	00 
   15aff:	e8 bc 8c ff ff       	call   e7c0 <memcpy>
   15b04:	48 89 ef             	mov    %rbp,%rdi
   15b07:	4c 89 ed             	mov    %r13,%rbp
   15b0a:	e8 51 fe ff ff       	call   15960 <__Bfree_D2A>
   15b0f:	eb a1                	jmp    15ab2 <__multadd_D2A+0x62>
   15b11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15b18:	00 00 00 
   15b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015b20 <__hi0bits_D2A>:
   15b20:	f3 0f 1e fa          	endbr64 
   15b24:	31 c0                	xor    %eax,%eax
   15b26:	f7 c7 00 00 ff ff    	test   $0xffff0000,%edi
   15b2c:	75 08                	jne    15b36 <__hi0bits_D2A+0x16>
   15b2e:	c1 e7 10             	shl    $0x10,%edi
   15b31:	b8 10 00 00 00       	mov    $0x10,%eax
   15b36:	f7 c7 00 00 00 ff    	test   $0xff000000,%edi
   15b3c:	75 06                	jne    15b44 <__hi0bits_D2A+0x24>
   15b3e:	83 c0 08             	add    $0x8,%eax
   15b41:	c1 e7 08             	shl    $0x8,%edi
   15b44:	f7 c7 00 00 00 f0    	test   $0xf0000000,%edi
   15b4a:	75 06                	jne    15b52 <__hi0bits_D2A+0x32>
   15b4c:	83 c0 04             	add    $0x4,%eax
   15b4f:	c1 e7 04             	shl    $0x4,%edi
   15b52:	f7 c7 00 00 00 c0    	test   $0xc0000000,%edi
   15b58:	75 06                	jne    15b60 <__hi0bits_D2A+0x40>
   15b5a:	83 c0 02             	add    $0x2,%eax
   15b5d:	c1 e7 02             	shl    $0x2,%edi
   15b60:	85 ff                	test   %edi,%edi
   15b62:	78 11                	js     15b75 <__hi0bits_D2A+0x55>
   15b64:	83 c0 01             	add    $0x1,%eax
   15b67:	ba 20 00 00 00       	mov    $0x20,%edx
   15b6c:	81 e7 00 00 00 40    	and    $0x40000000,%edi
   15b72:	0f 44 c2             	cmove  %edx,%eax
   15b75:	c3                   	ret    
   15b76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15b7d:	00 00 00 

0000000000015b80 <__i2b_D2A>:
   15b80:	f3 0f 1e fa          	endbr64 
   15b84:	53                   	push   %rbx
   15b85:	89 fb                	mov    %edi,%ebx
   15b87:	bf 01 00 00 00       	mov    $0x1,%edi
   15b8c:	e8 df fc ff ff       	call   15870 <__Balloc_D2A>
   15b91:	48 85 c0             	test   %rax,%rax
   15b94:	74 0a                	je     15ba0 <__i2b_D2A+0x20>
   15b96:	89 58 18             	mov    %ebx,0x18(%rax)
   15b99:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   15ba0:	5b                   	pop    %rbx
   15ba1:	c3                   	ret    
   15ba2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15ba9:	00 00 00 
   15bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015bb0 <__mult_D2A>:
   15bb0:	f3 0f 1e fa          	endbr64 
   15bb4:	41 57                	push   %r15
   15bb6:	49 89 fa             	mov    %rdi,%r10
   15bb9:	41 56                	push   %r14
   15bbb:	49 89 f6             	mov    %rsi,%r14
   15bbe:	41 55                	push   %r13
   15bc0:	41 54                	push   %r12
   15bc2:	55                   	push   %rbp
   15bc3:	53                   	push   %rbx
   15bc4:	48 83 ec 18          	sub    $0x18,%rsp
   15bc8:	4c 63 67 14          	movslq 0x14(%rdi),%r12
   15bcc:	4c 63 7e 14          	movslq 0x14(%rsi),%r15
   15bd0:	45 39 fc             	cmp    %r15d,%r12d
   15bd3:	7c 0f                	jl     15be4 <__mult_D2A+0x34>
   15bd5:	44 89 f8             	mov    %r15d,%eax
   15bd8:	49 89 fe             	mov    %rdi,%r14
   15bdb:	4d 63 fc             	movslq %r12d,%r15
   15bde:	49 89 f2             	mov    %rsi,%r10
   15be1:	4c 63 e0             	movslq %eax,%r12
   15be4:	31 ff                	xor    %edi,%edi
   15be6:	43 8d 2c 27          	lea    (%r15,%r12,1),%ebp
   15bea:	41 39 6e 0c          	cmp    %ebp,0xc(%r14)
   15bee:	4c 89 14 24          	mov    %r10,(%rsp)
   15bf2:	40 0f 9c c7          	setl   %dil
   15bf6:	41 03 7e 08          	add    0x8(%r14),%edi
   15bfa:	e8 71 fc ff ff       	call   15870 <__Balloc_D2A>
   15bff:	49 89 c5             	mov    %rax,%r13
   15c02:	48 85 c0             	test   %rax,%rax
   15c05:	0f 84 49 01 00 00    	je     15d54 <__mult_D2A+0x1a4>
   15c0b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   15c0f:	48 63 c5             	movslq %ebp,%rax
   15c12:	4c 8b 14 24          	mov    (%rsp),%r10
   15c16:	48 8d 04 83          	lea    (%rbx,%rax,4),%rax
   15c1a:	48 89 da             	mov    %rbx,%rdx
   15c1d:	48 39 c3             	cmp    %rax,%rbx
   15c20:	73 15                	jae    15c37 <__mult_D2A+0x87>
   15c22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15c28:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   15c2e:	48 83 c2 04          	add    $0x4,%rdx
   15c32:	48 39 d0             	cmp    %rdx,%rax
   15c35:	77 f1                	ja     15c28 <__mult_D2A+0x78>
   15c37:	49 83 c2 18          	add    $0x18,%r10
   15c3b:	49 8d 76 18          	lea    0x18(%r14),%rsi
   15c3f:	4f 8d 24 a2          	lea    (%r10,%r12,4),%r12
   15c43:	48 89 f7             	mov    %rsi,%rdi
   15c46:	4e 8d 1c be          	lea    (%rsi,%r15,4),%r11
   15c4a:	4d 39 e2             	cmp    %r12,%r10
   15c4d:	0f 83 df 00 00 00    	jae    15d32 <__mult_D2A+0x182>
   15c53:	4c 89 da             	mov    %r11,%rdx
   15c56:	48 89 04 24          	mov    %rax,(%rsp)
   15c5a:	48 89 f8             	mov    %rdi,%rax
   15c5d:	4c 29 f2             	sub    %r14,%rdx
   15c60:	49 83 c6 19          	add    $0x19,%r14
   15c64:	89 6c 24 0c          	mov    %ebp,0xc(%rsp)
   15c68:	48 83 ea 19          	sub    $0x19,%rdx
   15c6c:	48 c1 ea 02          	shr    $0x2,%rdx
   15c70:	4d 39 f3             	cmp    %r14,%r11
   15c73:	48 8d 0c 95 04 00 00 	lea    0x4(,%rdx,4),%rcx
   15c7a:	00 
   15c7b:	ba 04 00 00 00       	mov    $0x4,%edx
   15c80:	48 89 d6             	mov    %rdx,%rsi
   15c83:	48 0f 43 f1          	cmovae %rcx,%rsi
   15c87:	48 89 f5             	mov    %rsi,%rbp
   15c8a:	eb 15                	jmp    15ca1 <__mult_D2A+0xf1>
   15c8c:	0f 1f 40 00          	nopl   0x0(%rax)
   15c90:	49 83 c2 04          	add    $0x4,%r10
   15c94:	48 83 c3 04          	add    $0x4,%rbx
   15c98:	4d 39 d4             	cmp    %r10,%r12
   15c9b:	0f 86 89 00 00 00    	jbe    15d2a <__mult_D2A+0x17a>
   15ca1:	45 8b 32             	mov    (%r10),%r14d
   15ca4:	45 89 f1             	mov    %r14d,%r9d
   15ca7:	41 81 e1 ff ff 00 00 	and    $0xffff,%r9d
   15cae:	0f 85 bc 00 00 00    	jne    15d70 <__mult_D2A+0x1c0>
   15cb4:	41 c1 ee 10          	shr    $0x10,%r14d
   15cb8:	74 d6                	je     15c90 <__mult_D2A+0xe0>
   15cba:	8b 33                	mov    (%rbx),%esi
   15cbc:	31 d2                	xor    %edx,%edx
   15cbe:	49 89 d8             	mov    %rbx,%r8
   15cc1:	49 89 c7             	mov    %rax,%r15
   15cc4:	89 d7                	mov    %edx,%edi
   15cc6:	41 89 f1             	mov    %esi,%r9d
   15cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15cd0:	41 8b 0f             	mov    (%r15),%ecx
   15cd3:	41 c1 e9 10          	shr    $0x10,%r9d
   15cd7:	66 41 89 30          	mov    %si,(%r8)
   15cdb:	49 83 c0 04          	add    $0x4,%r8
   15cdf:	49 83 c7 04          	add    $0x4,%r15
   15ce3:	0f b7 d1             	movzwl %cx,%edx
   15ce6:	c1 e9 10             	shr    $0x10,%ecx
   15ce9:	41 0f af d6          	imul   %r14d,%edx
   15ced:	41 0f af ce          	imul   %r14d,%ecx
   15cf1:	41 01 d1             	add    %edx,%r9d
   15cf4:	41 8d 14 39          	lea    (%r9,%rdi,1),%edx
   15cf8:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   15cfd:	45 8b 08             	mov    (%r8),%r9d
   15d00:	c1 ea 10             	shr    $0x10,%edx
   15d03:	41 0f b7 f1          	movzwl %r9w,%esi
   15d07:	01 f1                	add    %esi,%ecx
   15d09:	8d 34 11             	lea    (%rcx,%rdx,1),%esi
   15d0c:	89 f7                	mov    %esi,%edi
   15d0e:	c1 ef 10             	shr    $0x10,%edi
   15d11:	4d 39 fb             	cmp    %r15,%r11
   15d14:	77 ba                	ja     15cd0 <__mult_D2A+0x120>
   15d16:	49 83 c2 04          	add    $0x4,%r10
   15d1a:	89 34 2b             	mov    %esi,(%rbx,%rbp,1)
   15d1d:	48 83 c3 04          	add    $0x4,%rbx
   15d21:	4d 39 d4             	cmp    %r10,%r12
   15d24:	0f 87 77 ff ff ff    	ja     15ca1 <__mult_D2A+0xf1>
   15d2a:	48 8b 04 24          	mov    (%rsp),%rax
   15d2e:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
   15d32:	85 ed                	test   %ebp,%ebp
   15d34:	7f 0f                	jg     15d45 <__mult_D2A+0x195>
   15d36:	eb 18                	jmp    15d50 <__mult_D2A+0x1a0>
   15d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15d3f:	00 
   15d40:	83 ed 01             	sub    $0x1,%ebp
   15d43:	74 0b                	je     15d50 <__mult_D2A+0x1a0>
   15d45:	8b 50 fc             	mov    -0x4(%rax),%edx
   15d48:	48 83 e8 04          	sub    $0x4,%rax
   15d4c:	85 d2                	test   %edx,%edx
   15d4e:	74 f0                	je     15d40 <__mult_D2A+0x190>
   15d50:	41 89 6d 14          	mov    %ebp,0x14(%r13)
   15d54:	48 83 c4 18          	add    $0x18,%rsp
   15d58:	4c 89 e8             	mov    %r13,%rax
   15d5b:	5b                   	pop    %rbx
   15d5c:	5d                   	pop    %rbp
   15d5d:	41 5c                	pop    %r12
   15d5f:	41 5d                	pop    %r13
   15d61:	41 5e                	pop    %r14
   15d63:	41 5f                	pop    %r15
   15d65:	c3                   	ret    
   15d66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15d6d:	00 00 00 
   15d70:	48 89 de             	mov    %rbx,%rsi
   15d73:	49 89 c0             	mov    %rax,%r8
   15d76:	45 31 f6             	xor    %r14d,%r14d
   15d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15d80:	41 8b 08             	mov    (%r8),%ecx
   15d83:	8b 16                	mov    (%rsi),%edx
   15d85:	49 83 c0 04          	add    $0x4,%r8
   15d89:	48 83 c6 04          	add    $0x4,%rsi
   15d8d:	0f b7 f9             	movzwl %cx,%edi
   15d90:	c1 e9 10             	shr    $0x10,%ecx
   15d93:	44 0f b7 fa          	movzwl %dx,%r15d
   15d97:	41 0f af f9          	imul   %r9d,%edi
   15d9b:	c1 ea 10             	shr    $0x10,%edx
   15d9e:	41 0f af c9          	imul   %r9d,%ecx
   15da2:	44 01 ff             	add    %r15d,%edi
   15da5:	44 01 f7             	add    %r14d,%edi
   15da8:	01 ca                	add    %ecx,%edx
   15daa:	89 f9                	mov    %edi,%ecx
   15dac:	66 89 7e fc          	mov    %di,-0x4(%rsi)
   15db0:	c1 e9 10             	shr    $0x10,%ecx
   15db3:	01 ca                	add    %ecx,%edx
   15db5:	41 89 d6             	mov    %edx,%r14d
   15db8:	66 89 56 fe          	mov    %dx,-0x2(%rsi)
   15dbc:	41 c1 ee 10          	shr    $0x10,%r14d
   15dc0:	4d 39 c3             	cmp    %r8,%r11
   15dc3:	77 bb                	ja     15d80 <__mult_D2A+0x1d0>
   15dc5:	44 89 34 2b          	mov    %r14d,(%rbx,%rbp,1)
   15dc9:	45 8b 32             	mov    (%r10),%r14d
   15dcc:	e9 e3 fe ff ff       	jmp    15cb4 <__mult_D2A+0x104>
   15dd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15dd8:	00 00 00 
   15ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015de0 <__pow5mult_D2A>:
   15de0:	f3 0f 1e fa          	endbr64 
   15de4:	89 f0                	mov    %esi,%eax
   15de6:	41 56                	push   %r14
   15de8:	41 55                	push   %r13
   15dea:	41 54                	push   %r12
   15dec:	55                   	push   %rbp
   15ded:	48 89 fd             	mov    %rdi,%rbp
   15df0:	53                   	push   %rbx
   15df1:	89 f3                	mov    %esi,%ebx
   15df3:	83 e0 03             	and    $0x3,%eax
   15df6:	0f 85 b4 00 00 00    	jne    15eb0 <__pow5mult_D2A+0xd0>
   15dfc:	c1 fb 02             	sar    $0x2,%ebx
   15dff:	49 89 ee             	mov    %rbp,%r14
   15e02:	74 57                	je     15e5b <__pow5mult_D2A+0x7b>
   15e04:	4c 8b 25 55 49 01 00 	mov    0x14955(%rip),%r12        # 2a760 <p5s>
   15e0b:	4d 85 e4             	test   %r12,%r12
   15e0e:	0f 84 cd 00 00 00    	je     15ee1 <__pow5mult_D2A+0x101>
   15e14:	49 89 ee             	mov    %rbp,%r14
   15e17:	4c 8d 2d b6 52 01 00 	lea    0x152b6(%rip),%r13        # 2b0d4 <__dtoa_locks+0x4>
   15e1e:	eb 10                	jmp    15e30 <__pow5mult_D2A+0x50>
   15e20:	d1 fb                	sar    %ebx
   15e22:	74 37                	je     15e5b <__pow5mult_D2A+0x7b>
   15e24:	49 8b 2c 24          	mov    (%r12),%rbp
   15e28:	48 85 ed             	test   %rbp,%rbp
   15e2b:	74 43                	je     15e70 <__pow5mult_D2A+0x90>
   15e2d:	49 89 ec             	mov    %rbp,%r12
   15e30:	f6 c3 01             	test   $0x1,%bl
   15e33:	74 eb                	je     15e20 <__pow5mult_D2A+0x40>
   15e35:	4c 89 e6             	mov    %r12,%rsi
   15e38:	4c 89 f7             	mov    %r14,%rdi
   15e3b:	e8 70 fd ff ff       	call   15bb0 <__mult_D2A>
   15e40:	48 89 c5             	mov    %rax,%rbp
   15e43:	48 85 c0             	test   %rax,%rax
   15e46:	0f 84 86 00 00 00    	je     15ed2 <__pow5mult_D2A+0xf2>
   15e4c:	4c 89 f7             	mov    %r14,%rdi
   15e4f:	49 89 ee             	mov    %rbp,%r14
   15e52:	e8 09 fb ff ff       	call   15960 <__Bfree_D2A>
   15e57:	d1 fb                	sar    %ebx
   15e59:	75 c9                	jne    15e24 <__pow5mult_D2A+0x44>
   15e5b:	5b                   	pop    %rbx
   15e5c:	4c 89 f0             	mov    %r14,%rax
   15e5f:	5d                   	pop    %rbp
   15e60:	41 5c                	pop    %r12
   15e62:	41 5d                	pop    %r13
   15e64:	41 5e                	pop    %r14
   15e66:	c3                   	ret    
   15e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15e6e:	00 00 
   15e70:	4c 89 ef             	mov    %r13,%rdi
   15e73:	e8 d8 4e ff ff       	call   ad50 <sgx_spin_lock>
   15e78:	49 8b 2c 24          	mov    (%r12),%rbp
   15e7c:	48 85 ed             	test   %rbp,%rbp
   15e7f:	74 0f                	je     15e90 <__pow5mult_D2A+0xb0>
   15e81:	4c 89 ef             	mov    %r13,%rdi
   15e84:	e8 37 4f ff ff       	call   adc0 <sgx_spin_unlock>
   15e89:	eb a2                	jmp    15e2d <__pow5mult_D2A+0x4d>
   15e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15e90:	4c 89 e6             	mov    %r12,%rsi
   15e93:	4c 89 e7             	mov    %r12,%rdi
   15e96:	e8 15 fd ff ff       	call   15bb0 <__mult_D2A>
   15e9b:	49 89 04 24          	mov    %rax,(%r12)
   15e9f:	48 89 c5             	mov    %rax,%rbp
   15ea2:	48 85 c0             	test   %rax,%rax
   15ea5:	74 2b                	je     15ed2 <__pow5mult_D2A+0xf2>
   15ea7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15eae:	eb d1                	jmp    15e81 <__pow5mult_D2A+0xa1>
   15eb0:	83 e8 01             	sub    $0x1,%eax
   15eb3:	48 8d 15 4e be 00 00 	lea    0xbe4e(%rip),%rdx        # 21d08 <p05.2586>
   15eba:	48 98                	cltq   
   15ebc:	8b 34 82             	mov    (%rdx,%rax,4),%esi
   15ebf:	31 d2                	xor    %edx,%edx
   15ec1:	e8 8a fb ff ff       	call   15a50 <__multadd_D2A>
   15ec6:	48 89 c5             	mov    %rax,%rbp
   15ec9:	48 85 c0             	test   %rax,%rax
   15ecc:	0f 85 2a ff ff ff    	jne    15dfc <__pow5mult_D2A+0x1c>
   15ed2:	45 31 f6             	xor    %r14d,%r14d
   15ed5:	5b                   	pop    %rbx
   15ed6:	5d                   	pop    %rbp
   15ed7:	4c 89 f0             	mov    %r14,%rax
   15eda:	41 5c                	pop    %r12
   15edc:	41 5d                	pop    %r13
   15ede:	41 5e                	pop    %r14
   15ee0:	c3                   	ret    
   15ee1:	48 8d 3d ec 51 01 00 	lea    0x151ec(%rip),%rdi        # 2b0d4 <__dtoa_locks+0x4>
   15ee8:	e8 63 4e ff ff       	call   ad50 <sgx_spin_lock>
   15eed:	4c 8b 25 6c 48 01 00 	mov    0x1486c(%rip),%r12        # 2a760 <p5s>
   15ef4:	4d 85 e4             	test   %r12,%r12
   15ef7:	74 11                	je     15f0a <__pow5mult_D2A+0x12a>
   15ef9:	48 8d 3d d4 51 01 00 	lea    0x151d4(%rip),%rdi        # 2b0d4 <__dtoa_locks+0x4>
   15f00:	e8 bb 4e ff ff       	call   adc0 <sgx_spin_unlock>
   15f05:	e9 0a ff ff ff       	jmp    15e14 <__pow5mult_D2A+0x34>
   15f0a:	bf 01 00 00 00       	mov    $0x1,%edi
   15f0f:	e8 5c f9 ff ff       	call   15870 <__Balloc_D2A>
   15f14:	49 89 c4             	mov    %rax,%r12
   15f17:	48 85 c0             	test   %rax,%rax
   15f1a:	74 20                	je     15f3c <__pow5mult_D2A+0x15c>
   15f1c:	48 b8 01 00 00 00 71 	movabs $0x27100000001,%rax
   15f23:	02 00 00 
   15f26:	4c 89 25 33 48 01 00 	mov    %r12,0x14833(%rip)        # 2a760 <p5s>
   15f2d:	49 89 44 24 14       	mov    %rax,0x14(%r12)
   15f32:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   15f39:	00 
   15f3a:	eb bd                	jmp    15ef9 <__pow5mult_D2A+0x119>
   15f3c:	48 c7 05 19 48 01 00 	movq   $0x0,0x14819(%rip)        # 2a760 <p5s>
   15f43:	00 00 00 00 
   15f47:	45 31 f6             	xor    %r14d,%r14d
   15f4a:	e9 0c ff ff ff       	jmp    15e5b <__pow5mult_D2A+0x7b>
   15f4f:	90                   	nop

0000000000015f50 <__lshift_D2A>:
   15f50:	f3 0f 1e fa          	endbr64 
   15f54:	41 57                	push   %r15
   15f56:	41 89 f7             	mov    %esi,%r15d
   15f59:	41 56                	push   %r14
   15f5b:	41 c1 ff 05          	sar    $0x5,%r15d
   15f5f:	41 89 f6             	mov    %esi,%r14d
   15f62:	41 55                	push   %r13
   15f64:	41 54                	push   %r12
   15f66:	55                   	push   %rbp
   15f67:	48 89 fd             	mov    %rdi,%rbp
   15f6a:	53                   	push   %rbx
   15f6b:	48 83 ec 08          	sub    $0x8,%rsp
   15f6f:	8b 5d 14             	mov    0x14(%rbp),%ebx
   15f72:	8b 45 0c             	mov    0xc(%rbp),%eax
   15f75:	8b 7f 08             	mov    0x8(%rdi),%edi
   15f78:	44 01 fb             	add    %r15d,%ebx
   15f7b:	44 8d 63 01          	lea    0x1(%rbx),%r12d
   15f7f:	41 39 c4             	cmp    %eax,%r12d
   15f82:	7e 0e                	jle    15f92 <__lshift_D2A+0x42>
   15f84:	0f 1f 40 00          	nopl   0x0(%rax)
   15f88:	01 c0                	add    %eax,%eax
   15f8a:	83 c7 01             	add    $0x1,%edi
   15f8d:	41 39 c4             	cmp    %eax,%r12d
   15f90:	7f f6                	jg     15f88 <__lshift_D2A+0x38>
   15f92:	e8 d9 f8 ff ff       	call   15870 <__Balloc_D2A>
   15f97:	49 89 c5             	mov    %rax,%r13
   15f9a:	48 85 c0             	test   %rax,%rax
   15f9d:	0f 84 bf 00 00 00    	je     16062 <__lshift_D2A+0x112>
   15fa3:	48 8d 78 18          	lea    0x18(%rax),%rdi
   15fa7:	45 85 ff             	test   %r15d,%r15d
   15faa:	7e 29                	jle    15fd5 <__lshift_D2A+0x85>
   15fac:	41 8d 4f ff          	lea    -0x1(%r15),%ecx
   15fb0:	48 89 fa             	mov    %rdi,%rdx
   15fb3:	48 8d 44 88 1c       	lea    0x1c(%rax,%rcx,4),%rax
   15fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15fbf:	00 
   15fc0:	48 83 c2 04          	add    $0x4,%rdx
   15fc4:	c7 42 fc 00 00 00 00 	movl   $0x0,-0x4(%rdx)
   15fcb:	48 39 c2             	cmp    %rax,%rdx
   15fce:	75 f0                	jne    15fc0 <__lshift_D2A+0x70>
   15fd0:	48 8d 7c 8f 04       	lea    0x4(%rdi,%rcx,4),%rdi
   15fd5:	48 63 45 14          	movslq 0x14(%rbp),%rax
   15fd9:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   15fdd:	48 8d 04 86          	lea    (%rsi,%rax,4),%rax
   15fe1:	41 83 e6 1f          	and    $0x1f,%r14d
   15fe5:	0f 84 8d 00 00 00    	je     16078 <__lshift_D2A+0x128>
   15feb:	41 bb 20 00 00 00    	mov    $0x20,%r11d
   15ff1:	49 89 f9             	mov    %rdi,%r9
   15ff4:	45 31 c0             	xor    %r8d,%r8d
   15ff7:	45 29 f3             	sub    %r14d,%r11d
   15ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16000:	8b 16                	mov    (%rsi),%edx
   16002:	44 89 f1             	mov    %r14d,%ecx
   16005:	49 83 c1 04          	add    $0x4,%r9
   16009:	48 83 c6 04          	add    $0x4,%rsi
   1600d:	d3 e2                	shl    %cl,%edx
   1600f:	44 89 d9             	mov    %r11d,%ecx
   16012:	44 09 c2             	or     %r8d,%edx
   16015:	41 89 51 fc          	mov    %edx,-0x4(%r9)
   16019:	44 8b 46 fc          	mov    -0x4(%rsi),%r8d
   1601d:	41 d3 e8             	shr    %cl,%r8d
   16020:	48 39 f0             	cmp    %rsi,%rax
   16023:	77 db                	ja     16000 <__lshift_D2A+0xb0>
   16025:	48 89 c2             	mov    %rax,%rdx
   16028:	48 8d 4d 19          	lea    0x19(%rbp),%rcx
   1602c:	48 29 ea             	sub    %rbp,%rdx
   1602f:	48 83 ea 19          	sub    $0x19,%rdx
   16033:	48 c1 ea 02          	shr    $0x2,%rdx
   16037:	48 39 c8             	cmp    %rcx,%rax
   1603a:	b8 04 00 00 00       	mov    $0x4,%eax
   1603f:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
   16046:	00 
   16047:	48 0f 42 d0          	cmovb  %rax,%rdx
   1604b:	45 85 c0             	test   %r8d,%r8d
   1604e:	41 0f 45 dc          	cmovne %r12d,%ebx
   16052:	44 89 04 17          	mov    %r8d,(%rdi,%rdx,1)
   16056:	41 89 5d 14          	mov    %ebx,0x14(%r13)
   1605a:	48 89 ef             	mov    %rbp,%rdi
   1605d:	e8 fe f8 ff ff       	call   15960 <__Bfree_D2A>
   16062:	48 83 c4 08          	add    $0x8,%rsp
   16066:	4c 89 e8             	mov    %r13,%rax
   16069:	5b                   	pop    %rbx
   1606a:	5d                   	pop    %rbp
   1606b:	41 5c                	pop    %r12
   1606d:	41 5d                	pop    %r13
   1606f:	41 5e                	pop    %r14
   16071:	41 5f                	pop    %r15
   16073:	c3                   	ret    
   16074:	0f 1f 40 00          	nopl   0x0(%rax)
   16078:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16079:	48 39 f0             	cmp    %rsi,%rax
   1607c:	76 d8                	jbe    16056 <__lshift_D2A+0x106>
   1607e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1607f:	48 39 f0             	cmp    %rsi,%rax
   16082:	77 f4                	ja     16078 <__lshift_D2A+0x128>
   16084:	eb d0                	jmp    16056 <__lshift_D2A+0x106>
   16086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1608d:	00 00 00 

0000000000016090 <__cmp_D2A>:
   16090:	f3 0f 1e fa          	endbr64 
   16094:	48 63 46 14          	movslq 0x14(%rsi),%rax
   16098:	44 8b 47 14          	mov    0x14(%rdi),%r8d
   1609c:	41 29 c0             	sub    %eax,%r8d
   1609f:	75 39                	jne    160da <__cmp_D2A+0x4a>
   160a1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   160a8:	00 
   160a9:	48 83 c7 18          	add    $0x18,%rdi
   160ad:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   160b1:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   160b6:	eb 0d                	jmp    160c5 <__cmp_D2A+0x35>
   160b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   160bf:	00 
   160c0:	48 39 c7             	cmp    %rax,%rdi
   160c3:	73 15                	jae    160da <__cmp_D2A+0x4a>
   160c5:	48 83 e8 04          	sub    $0x4,%rax
   160c9:	48 83 ea 04          	sub    $0x4,%rdx
   160cd:	8b 0a                	mov    (%rdx),%ecx
   160cf:	39 08                	cmp    %ecx,(%rax)
   160d1:	74 ed                	je     160c0 <__cmp_D2A+0x30>
   160d3:	45 19 c0             	sbb    %r8d,%r8d
   160d6:	41 83 c8 01          	or     $0x1,%r8d
   160da:	44 89 c0             	mov    %r8d,%eax
   160dd:	c3                   	ret    
   160de:	66 90                	xchg   %ax,%ax

00000000000160e0 <__diff_D2A>:
   160e0:	f3 0f 1e fa          	endbr64 
   160e4:	41 56                	push   %r14
   160e6:	41 55                	push   %r13
   160e8:	41 54                	push   %r12
   160ea:	49 89 f4             	mov    %rsi,%r12
   160ed:	55                   	push   %rbp
   160ee:	53                   	push   %rbx
   160ef:	48 63 46 14          	movslq 0x14(%rsi),%rax
   160f3:	48 89 fb             	mov    %rdi,%rbx
   160f6:	8b 6f 14             	mov    0x14(%rdi),%ebp
   160f9:	29 c5                	sub    %eax,%ebp
   160fb:	0f 85 9f 01 00 00    	jne    162a0 <__diff_D2A+0x1c0>
   16101:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16108:	00 
   16109:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   1610d:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   16111:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   16116:	eb 11                	jmp    16129 <__diff_D2A+0x49>
   16118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1611f:	00 
   16120:	48 39 c1             	cmp    %rax,%rcx
   16123:	0f 83 97 01 00 00    	jae    162c0 <__diff_D2A+0x1e0>
   16129:	48 83 e8 04          	sub    $0x4,%rax
   1612d:	48 83 ea 04          	sub    $0x4,%rdx
   16131:	8b 32                	mov    (%rdx),%esi
   16133:	39 30                	cmp    %esi,(%rax)
   16135:	74 e9                	je     16120 <__diff_D2A+0x40>
   16137:	0f 82 6e 01 00 00    	jb     162ab <__diff_D2A+0x1cb>
   1613d:	8b 7b 08             	mov    0x8(%rbx),%edi
   16140:	e8 2b f7 ff ff       	call   15870 <__Balloc_D2A>
   16145:	48 85 c0             	test   %rax,%rax
   16148:	0f 84 45 01 00 00    	je     16293 <__diff_D2A+0x1b3>
   1614e:	48 63 53 14          	movslq 0x14(%rbx),%rdx
   16152:	4c 8d 5b 18          	lea    0x18(%rbx),%r11
   16156:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   1615b:	89 68 10             	mov    %ebp,0x10(%rax)
   1615e:	48 8d 70 18          	lea    0x18(%rax),%rsi
   16162:	4d 89 d9             	mov    %r11,%r9
   16165:	45 31 ed             	xor    %r13d,%r13d
   16168:	49 89 d2             	mov    %rdx,%r10
   1616b:	49 8d 1c 93          	lea    (%r11,%rdx,4),%rbx
   1616f:	49 63 54 24 14       	movslq 0x14(%r12),%rdx
   16174:	49 89 f0             	mov    %rsi,%r8
   16177:	48 8d 2c 97          	lea    (%rdi,%rdx,4),%rbp
   1617b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16180:	41 8b 11             	mov    (%r9),%edx
   16183:	44 8b 37             	mov    (%rdi),%r14d
   16186:	48 83 c7 04          	add    $0x4,%rdi
   1618a:	49 83 c1 04          	add    $0x4,%r9
   1618e:	49 83 c0 04          	add    $0x4,%r8
   16192:	0f b7 ca             	movzwl %dx,%ecx
   16195:	c1 ea 10             	shr    $0x10,%edx
   16198:	44 29 e9             	sub    %r13d,%ecx
   1619b:	45 0f b7 ee          	movzwl %r14w,%r13d
   1619f:	41 c1 ee 10          	shr    $0x10,%r14d
   161a3:	44 29 e9             	sub    %r13d,%ecx
   161a6:	44 29 f2             	sub    %r14d,%edx
   161a9:	41 89 cd             	mov    %ecx,%r13d
   161ac:	66 41 89 48 fc       	mov    %cx,-0x4(%r8)
   161b1:	41 c1 ed 10          	shr    $0x10,%r13d
   161b5:	41 83 e5 01          	and    $0x1,%r13d
   161b9:	44 29 ea             	sub    %r13d,%edx
   161bc:	41 89 d5             	mov    %edx,%r13d
   161bf:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   161c4:	41 c1 ed 10          	shr    $0x10,%r13d
   161c8:	41 83 e5 01          	and    $0x1,%r13d
   161cc:	48 39 fd             	cmp    %rdi,%rbp
   161cf:	77 af                	ja     16180 <__diff_D2A+0xa0>
   161d1:	48 89 ea             	mov    %rbp,%rdx
   161d4:	49 8d 7c 24 19       	lea    0x19(%r12),%rdi
   161d9:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   161df:	4c 29 e2             	sub    %r12,%rdx
   161e2:	48 83 ea 19          	sub    $0x19,%rdx
   161e6:	48 89 d1             	mov    %rdx,%rcx
   161e9:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   161ed:	48 c1 e9 02          	shr    $0x2,%rcx
   161f1:	48 39 fd             	cmp    %rdi,%rbp
   161f4:	49 0f 42 d0          	cmovb  %r8,%rdx
   161f8:	48 8d 0c 8d 04 00 00 	lea    0x4(,%rcx,4),%rcx
   161ff:	00 
   16200:	48 01 f2             	add    %rsi,%rdx
   16203:	48 39 fd             	cmp    %rdi,%rbp
   16206:	bf 04 00 00 00       	mov    $0x4,%edi
   1620b:	48 0f 42 cf          	cmovb  %rdi,%rcx
   1620f:	49 01 cb             	add    %rcx,%r11
   16212:	48 01 ce             	add    %rcx,%rsi
   16215:	4c 39 db             	cmp    %r11,%rbx
   16218:	0f 86 c2 00 00 00    	jbe    162e0 <__diff_D2A+0x200>
   1621e:	49 89 f1             	mov    %rsi,%r9
   16221:	4d 89 d8             	mov    %r11,%r8
   16224:	0f 1f 40 00          	nopl   0x0(%rax)
   16228:	41 8b 10             	mov    (%r8),%edx
   1622b:	49 83 c0 04          	add    $0x4,%r8
   1622f:	49 83 c1 04          	add    $0x4,%r9
   16233:	0f b7 ca             	movzwl %dx,%ecx
   16236:	c1 ea 10             	shr    $0x10,%edx
   16239:	44 29 e9             	sub    %r13d,%ecx
   1623c:	89 cd                	mov    %ecx,%ebp
   1623e:	66 41 89 49 fc       	mov    %cx,-0x4(%r9)
   16243:	c1 ed 10             	shr    $0x10,%ebp
   16246:	83 e5 01             	and    $0x1,%ebp
   16249:	29 ea                	sub    %ebp,%edx
   1624b:	41 89 d5             	mov    %edx,%r13d
   1624e:	66 41 89 51 fe       	mov    %dx,-0x2(%r9)
   16253:	41 c1 ed 10          	shr    $0x10,%r13d
   16257:	41 83 e5 01          	and    $0x1,%r13d
   1625b:	4c 39 c3             	cmp    %r8,%rbx
   1625e:	77 c8                	ja     16228 <__diff_D2A+0x148>
   16260:	48 83 eb 01          	sub    $0x1,%rbx
   16264:	4c 29 db             	sub    %r11,%rbx
   16267:	48 c1 eb 02          	shr    $0x2,%rbx
   1626b:	48 8d 4c 9e 04       	lea    0x4(%rsi,%rbx,4),%rcx
   16270:	48 8d 14 9e          	lea    (%rsi,%rbx,4),%rdx
   16274:	8b 71 fc             	mov    -0x4(%rcx),%esi
   16277:	85 f6                	test   %esi,%esi
   16279:	75 14                	jne    1628f <__diff_D2A+0x1af>
   1627b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16280:	8b 4a fc             	mov    -0x4(%rdx),%ecx
   16283:	48 83 ea 04          	sub    $0x4,%rdx
   16287:	41 83 ea 01          	sub    $0x1,%r10d
   1628b:	85 c9                	test   %ecx,%ecx
   1628d:	74 f1                	je     16280 <__diff_D2A+0x1a0>
   1628f:	44 89 50 14          	mov    %r10d,0x14(%rax)
   16293:	5b                   	pop    %rbx
   16294:	5d                   	pop    %rbp
   16295:	41 5c                	pop    %r12
   16297:	41 5d                	pop    %r13
   16299:	41 5e                	pop    %r14
   1629b:	c3                   	ret    
   1629c:	0f 1f 40 00          	nopl   0x0(%rax)
   162a0:	bd 00 00 00 00       	mov    $0x0,%ebp
   162a5:	0f 89 92 fe ff ff    	jns    1613d <__diff_D2A+0x5d>
   162ab:	48 89 d8             	mov    %rbx,%rax
   162ae:	bd 01 00 00 00       	mov    $0x1,%ebp
   162b3:	4c 89 e3             	mov    %r12,%rbx
   162b6:	49 89 c4             	mov    %rax,%r12
   162b9:	e9 7f fe ff ff       	jmp    1613d <__diff_D2A+0x5d>
   162be:	66 90                	xchg   %ax,%ax
   162c0:	31 ff                	xor    %edi,%edi
   162c2:	e8 a9 f5 ff ff       	call   15870 <__Balloc_D2A>
   162c7:	48 85 c0             	test   %rax,%rax
   162ca:	74 c7                	je     16293 <__diff_D2A+0x1b3>
   162cc:	48 c7 40 14 01 00 00 	movq   $0x1,0x14(%rax)
   162d3:	00 
   162d4:	5b                   	pop    %rbx
   162d5:	5d                   	pop    %rbp
   162d6:	41 5c                	pop    %r12
   162d8:	41 5d                	pop    %r13
   162da:	41 5e                	pop    %r14
   162dc:	c3                   	ret    
   162dd:	0f 1f 00             	nopl   (%rax)
   162e0:	48 89 f1             	mov    %rsi,%rcx
   162e3:	eb 8f                	jmp    16274 <__diff_D2A+0x194>
   162e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   162ec:	00 00 00 
   162ef:	90                   	nop

00000000000162f0 <__b2d_D2A>:
   162f0:	f3 0f 1e fa          	endbr64 
   162f4:	48 83 ec 18          	sub    $0x18,%rsp
   162f8:	4c 8d 4f 18          	lea    0x18(%rdi),%r9
   162fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16303:	00 00 
   16305:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1630a:	31 c0                	xor    %eax,%eax
   1630c:	48 63 47 14          	movslq 0x14(%rdi),%rax
   16310:	4d 8d 14 81          	lea    (%r9,%rax,4),%r10
   16314:	45 8b 42 fc          	mov    -0x4(%r10),%r8d
   16318:	4d 8d 5a fc          	lea    -0x4(%r10),%r11
   1631c:	44 89 c7             	mov    %r8d,%edi
   1631f:	e8 fc f7 ff ff       	call   15b20 <__hi0bits_D2A>
   16324:	b9 20 00 00 00       	mov    $0x20,%ecx
   16329:	89 ca                	mov    %ecx,%edx
   1632b:	29 c2                	sub    %eax,%edx
   1632d:	89 16                	mov    %edx,(%rsi)
   1632f:	83 f8 0a             	cmp    $0xa,%eax
   16332:	0f 8e 98 00 00 00    	jle    163d0 <__b2d_D2A+0xe0>
   16338:	83 e8 0b             	sub    $0xb,%eax
   1633b:	4d 39 d9             	cmp    %r11,%r9
   1633e:	73 58                	jae    16398 <__b2d_D2A+0xa8>
   16340:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   16344:	85 c0                	test   %eax,%eax
   16346:	74 56                	je     1639e <__b2d_D2A+0xae>
   16348:	29 c1                	sub    %eax,%ecx
   1634a:	44 89 c2             	mov    %r8d,%edx
   1634d:	41 89 f3             	mov    %esi,%r11d
   16350:	89 cf                	mov    %ecx,%edi
   16352:	89 c1                	mov    %eax,%ecx
   16354:	d3 e2                	shl    %cl,%edx
   16356:	89 f9                	mov    %edi,%ecx
   16358:	41 d3 eb             	shr    %cl,%r11d
   1635b:	89 c1                	mov    %eax,%ecx
   1635d:	49 8d 42 f8          	lea    -0x8(%r10),%rax
   16361:	44 09 da             	or     %r11d,%edx
   16364:	d3 e6                	shl    %cl,%esi
   16366:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   1636c:	48 c1 e2 20          	shl    $0x20,%rdx
   16370:	49 39 c1             	cmp    %rax,%r9
   16373:	73 0a                	jae    1637f <__b2d_D2A+0x8f>
   16375:	41 8b 42 f4          	mov    -0xc(%r10),%eax
   16379:	89 f9                	mov    %edi,%ecx
   1637b:	d3 e8                	shr    %cl,%eax
   1637d:	09 c6                	or     %eax,%esi
   1637f:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   16386:	ff ff ff 
   16389:	48 21 c2             	and    %rax,%rdx
   1638c:	48 09 f2             	or     %rsi,%rdx
   1638f:	eb 1d                	jmp    163ae <__b2d_D2A+0xbe>
   16391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16398:	31 f6                	xor    %esi,%esi
   1639a:	85 c0                	test   %eax,%eax
   1639c:	75 6a                	jne    16408 <__b2d_D2A+0x118>
   1639e:	44 89 c2             	mov    %r8d,%edx
   163a1:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   163a7:	48 c1 e2 20          	shl    $0x20,%rdx
   163ab:	48 09 f2             	or     %rsi,%rdx
   163ae:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   163b3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   163ba:	00 00 
   163bc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   163c1:	75 5d                	jne    16420 <__b2d_D2A+0x130>
   163c3:	48 83 c4 18          	add    $0x18,%rsp
   163c7:	c3                   	ret    
   163c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   163cf:	00 
   163d0:	b9 0b 00 00 00       	mov    $0xb,%ecx
   163d5:	44 89 c2             	mov    %r8d,%edx
   163d8:	31 f6                	xor    %esi,%esi
   163da:	29 c1                	sub    %eax,%ecx
   163dc:	d3 ea                	shr    %cl,%edx
   163de:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   163e4:	48 c1 e2 20          	shl    $0x20,%rdx
   163e8:	4d 39 d9             	cmp    %r11,%r9
   163eb:	73 06                	jae    163f3 <__b2d_D2A+0x103>
   163ed:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   163f1:	d3 ee                	shr    %cl,%esi
   163f3:	8d 48 15             	lea    0x15(%rax),%ecx
   163f6:	41 d3 e0             	shl    %cl,%r8d
   163f9:	41 09 f0             	or     %esi,%r8d
   163fc:	4c 09 c2             	or     %r8,%rdx
   163ff:	eb ad                	jmp    163ae <__b2d_D2A+0xbe>
   16401:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16408:	44 89 c2             	mov    %r8d,%edx
   1640b:	89 c1                	mov    %eax,%ecx
   1640d:	31 f6                	xor    %esi,%esi
   1640f:	d3 e2                	shl    %cl,%edx
   16411:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   16417:	48 c1 e2 20          	shl    $0x20,%rdx
   1641b:	e9 5f ff ff ff       	jmp    1637f <__b2d_D2A+0x8f>
   16420:	e8 2b 87 ff ff       	call   eb50 <__stack_chk_fail>
   16425:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1642c:	00 00 00 
   1642f:	90                   	nop

0000000000016430 <__d2b_D2A>:
   16430:	f3 0f 1e fa          	endbr64 
   16434:	41 54                	push   %r12
   16436:	66 49 0f 7e c4       	movq   %xmm0,%r12
   1643b:	55                   	push   %rbp
   1643c:	48 89 fd             	mov    %rdi,%rbp
   1643f:	bf 01 00 00 00       	mov    $0x1,%edi
   16444:	53                   	push   %rbx
   16445:	48 89 f3             	mov    %rsi,%rbx
   16448:	48 83 ec 10          	sub    $0x10,%rsp
   1644c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16453:	00 00 
   16455:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1645a:	31 c0                	xor    %eax,%eax
   1645c:	e8 0f f4 ff ff       	call   15870 <__Balloc_D2A>
   16461:	49 89 c1             	mov    %rax,%r9
   16464:	48 85 c0             	test   %rax,%rax
   16467:	0f 84 9b 00 00 00    	je     16508 <__d2b_D2A+0xd8>
   1646d:	4c 89 e2             	mov    %r12,%rdx
   16470:	44 89 24 24          	mov    %r12d,(%rsp)
   16474:	48 c1 ea 20          	shr    $0x20,%rdx
   16478:	89 d1                	mov    %edx,%ecx
   1647a:	c1 ea 14             	shr    $0x14,%edx
   1647d:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   16483:	89 ce                	mov    %ecx,%esi
   16485:	81 ce 00 00 10 00    	or     $0x100000,%esi
   1648b:	81 e2 ff 07 00 00    	and    $0x7ff,%edx
   16491:	0f 45 ce             	cmovne %esi,%ecx
   16494:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   16498:	45 85 e4             	test   %r12d,%r12d
   1649b:	0f 84 87 00 00 00    	je     16528 <__d2b_D2A+0xf8>
   164a1:	48 89 e7             	mov    %rsp,%rdi
   164a4:	e8 17 f5 ff ff       	call   159c0 <__lo0bits_D2A>
   164a9:	85 c0                	test   %eax,%eax
   164ab:	0f 84 b7 00 00 00    	je     16568 <__d2b_D2A+0x138>
   164b1:	8b 74 24 04          	mov    0x4(%rsp),%esi
   164b5:	b9 20 00 00 00       	mov    $0x20,%ecx
   164ba:	29 c1                	sub    %eax,%ecx
   164bc:	89 f7                	mov    %esi,%edi
   164be:	d3 e7                	shl    %cl,%edi
   164c0:	8b 0c 24             	mov    (%rsp),%ecx
   164c3:	09 f9                	or     %edi,%ecx
   164c5:	41 89 49 18          	mov    %ecx,0x18(%r9)
   164c9:	89 c1                	mov    %eax,%ecx
   164cb:	d3 ee                	shr    %cl,%esi
   164cd:	89 74 24 04          	mov    %esi,0x4(%rsp)
   164d1:	89 f1                	mov    %esi,%ecx
   164d3:	85 c9                	test   %ecx,%ecx
   164d5:	41 89 49 1c          	mov    %ecx,0x1c(%r9)
   164d9:	0f 95 c1             	setne  %cl
   164dc:	0f b6 c9             	movzbl %cl,%ecx
   164df:	83 c1 01             	add    $0x1,%ecx
   164e2:	41 89 49 14          	mov    %ecx,0x14(%r9)
   164e6:	85 d2                	test   %edx,%edx
   164e8:	75 64                	jne    1654e <__d2b_D2A+0x11e>
   164ea:	2d 32 04 00 00       	sub    $0x432,%eax
   164ef:	89 45 00             	mov    %eax,0x0(%rbp)
   164f2:	8d 41 ff             	lea    -0x1(%rcx),%eax
   164f5:	48 98                	cltq   
   164f7:	41 8b 7c 81 18       	mov    0x18(%r9,%rax,4),%edi
   164fc:	e8 1f f6 ff ff       	call   15b20 <__hi0bits_D2A>
   16501:	c1 e1 05             	shl    $0x5,%ecx
   16504:	29 c1                	sub    %eax,%ecx
   16506:	89 0b                	mov    %ecx,(%rbx)
   16508:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1650d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16514:	00 00 
   16516:	75 60                	jne    16578 <__d2b_D2A+0x148>
   16518:	48 83 c4 10          	add    $0x10,%rsp
   1651c:	4c 89 c8             	mov    %r9,%rax
   1651f:	5b                   	pop    %rbx
   16520:	5d                   	pop    %rbp
   16521:	41 5c                	pop    %r12
   16523:	c3                   	ret    
   16524:	0f 1f 40 00          	nopl   0x0(%rax)
   16528:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   1652d:	e8 8e f4 ff ff       	call   159c0 <__lo0bits_D2A>
   16532:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   16536:	41 c7 41 14 01 00 00 	movl   $0x1,0x14(%r9)
   1653d:	00 
   1653e:	83 c0 20             	add    $0x20,%eax
   16541:	41 89 49 18          	mov    %ecx,0x18(%r9)
   16545:	b9 01 00 00 00       	mov    $0x1,%ecx
   1654a:	85 d2                	test   %edx,%edx
   1654c:	74 9c                	je     164ea <__d2b_D2A+0xba>
   1654e:	8d 94 02 cd fb ff ff 	lea    -0x433(%rdx,%rax,1),%edx
   16555:	89 55 00             	mov    %edx,0x0(%rbp)
   16558:	ba 35 00 00 00       	mov    $0x35,%edx
   1655d:	29 c2                	sub    %eax,%edx
   1655f:	89 13                	mov    %edx,(%rbx)
   16561:	eb a5                	jmp    16508 <__d2b_D2A+0xd8>
   16563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16568:	8b 0c 24             	mov    (%rsp),%ecx
   1656b:	41 89 49 18          	mov    %ecx,0x18(%r9)
   1656f:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   16573:	e9 5b ff ff ff       	jmp    164d3 <__d2b_D2A+0xa3>
   16578:	e8 d3 85 ff ff       	call   eb50 <__stack_chk_fail>
   1657d:	0f 1f 00             	nopl   (%rax)

0000000000016580 <__fpclassify>:
   16580:	f3 0f 1e fa          	endbr64 
   16584:	f2 0f 11 44 24 f8    	movsd  %xmm0,-0x8(%rsp)
   1658a:	0f b7 44 24 fe       	movzwl -0x2(%rsp),%eax
   1658f:	66 25 f0 7f          	and    $0x7ff0,%ax
   16593:	75 23                	jne    165b8 <__fpclassify+0x38>
   16595:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   16599:	45 31 c0             	xor    %r8d,%r8d
   1659c:	25 ff ff 0f 00       	and    $0xfffff,%eax
   165a1:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   165a5:	41 0f 95 c0          	setne  %r8b
   165a9:	41 83 c0 02          	add    $0x2,%r8d
   165ad:	44 89 c0             	mov    %r8d,%eax
   165b0:	c3                   	ret    
   165b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   165b8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   165be:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   165c2:	75 e9                	jne    165ad <__fpclassify+0x2d>
   165c4:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   165c8:	45 31 c0             	xor    %r8d,%r8d
   165cb:	25 ff ff 0f 00       	and    $0xfffff,%eax
   165d0:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   165d4:	41 0f 94 c0          	sete   %r8b
   165d8:	44 89 c0             	mov    %r8d,%eax
   165db:	c3                   	ret    
   165dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000165e0 <__fpclassifyl>:
   165e0:	f3 0f 1e fa          	endbr64 
   165e4:	0f b7 44 24 10       	movzwl 0x10(%rsp),%eax
   165e9:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   165ed:	66 25 ff 7f          	and    $0x7fff,%ax
   165f1:	75 1d                	jne    16610 <__fpclassifyl+0x30>
   165f3:	45 31 c0             	xor    %r8d,%r8d
   165f6:	0b 54 24 08          	or     0x8(%rsp),%edx
   165fa:	41 0f 95 c0          	setne  %r8b
   165fe:	41 83 c0 02          	add    $0x2,%r8d
   16602:	44 89 c0             	mov    %r8d,%eax
   16605:	c3                   	ret    
   16606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1660d:	00 00 00 
   16610:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   16616:	66 3d ff 7f          	cmp    $0x7fff,%ax
   1661a:	75 e6                	jne    16602 <__fpclassifyl+0x22>
   1661c:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   16622:	45 31 c0             	xor    %r8d,%r8d
   16625:	0b 54 24 08          	or     0x8(%rsp),%edx
   16629:	41 0f 94 c0          	sete   %r8b
   1662d:	44 89 c0             	mov    %r8d,%eax
   16630:	c3                   	ret    
   16631:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16638:	00 00 00 
   1663b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016640 <mbrtowc>:
   16640:	f3 0f 1e fa          	endbr64 
   16644:	48 85 f6             	test   %rsi,%rsi
   16647:	74 27                	je     16670 <mbrtowc+0x30>
   16649:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   16650:	48 85 d2             	test   %rdx,%rdx
   16653:	74 1d                	je     16672 <mbrtowc+0x32>
   16655:	0f b6 06             	movzbl (%rsi),%eax
   16658:	48 85 ff             	test   %rdi,%rdi
   1665b:	74 05                	je     16662 <mbrtowc+0x22>
   1665d:	89 07                	mov    %eax,(%rdi)
   1665f:	0f b6 06             	movzbl (%rsi),%eax
   16662:	84 c0                	test   %al,%al
   16664:	0f 95 c0             	setne  %al
   16667:	0f b6 c0             	movzbl %al,%eax
   1666a:	c3                   	ret    
   1666b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16670:	31 c0                	xor    %eax,%eax
   16672:	c3                   	ret    
   16673:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1667a:	00 00 00 
   1667d:	0f 1f 00             	nopl   (%rax)

0000000000016680 <wcrtomb>:
   16680:	f3 0f 1e fa          	endbr64 
   16684:	48 85 ff             	test   %rdi,%rdi
   16687:	74 17                	je     166a0 <wcrtomb+0x20>
   16689:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   1668f:	77 1f                	ja     166b0 <wcrtomb+0x30>
   16691:	40 88 37             	mov    %sil,(%rdi)
   16694:	b8 01 00 00 00       	mov    $0x1,%eax
   16699:	c3                   	ret    
   1669a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   166a0:	b8 01 00 00 00       	mov    $0x1,%eax
   166a5:	c3                   	ret    
   166a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   166ad:	00 00 00 
   166b0:	48 83 ec 08          	sub    $0x8,%rsp
   166b4:	e8 87 8c ff ff       	call   f340 <__errno>
   166b9:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   166bf:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   166c6:	48 83 c4 08          	add    $0x8,%rsp
   166ca:	c3                   	ret    
   166cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000166d0 <wcsnrtombs>:
   166d0:	f3 0f 1e fa          	endbr64 
   166d4:	48 83 ec 08          	sub    $0x8,%rsp
   166d8:	48 85 ff             	test   %rdi,%rdi
   166db:	74 63                	je     16740 <wcsnrtombs+0x70>
   166dd:	48 39 ca             	cmp    %rcx,%rdx
   166e0:	48 0f 46 ca          	cmovbe %rdx,%rcx
   166e4:	31 c0                	xor    %eax,%eax
   166e6:	49 89 c8             	mov    %rcx,%r8
   166e9:	48 85 c9             	test   %rcx,%rcx
   166ec:	75 1e                	jne    1670c <wcsnrtombs+0x3c>
   166ee:	e9 85 00 00 00       	jmp    16778 <wcsnrtombs+0xa8>
   166f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   166f8:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   166fb:	85 d2                	test   %edx,%edx
   166fd:	0f 84 85 00 00 00    	je     16788 <wcsnrtombs+0xb8>
   16703:	48 83 c0 01          	add    $0x1,%rax
   16707:	49 39 c0             	cmp    %rax,%r8
   1670a:	74 64                	je     16770 <wcsnrtombs+0xa0>
   1670c:	48 8b 16             	mov    (%rsi),%rdx
   1670f:	48 8d 0c 82          	lea    (%rdx,%rax,4),%rcx
   16713:	8b 11                	mov    (%rcx),%edx
   16715:	81 fa ff 00 00 00    	cmp    $0xff,%edx
   1671b:	76 db                	jbe    166f8 <wcsnrtombs+0x28>
   1671d:	48 89 0e             	mov    %rcx,(%rsi)
   16720:	e8 1b 8c ff ff       	call   f340 <__errno>
   16725:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1672c:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   16732:	4c 89 c0             	mov    %r8,%rax
   16735:	48 83 c4 08          	add    $0x8,%rsp
   16739:	c3                   	ret    
   1673a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16740:	48 85 d2             	test   %rdx,%rdx
   16743:	74 55                	je     1679a <wcsnrtombs+0xca>
   16745:	48 8b 0e             	mov    (%rsi),%rcx
   16748:	45 31 c0             	xor    %r8d,%r8d
   1674b:	eb 10                	jmp    1675d <wcsnrtombs+0x8d>
   1674d:	0f 1f 00             	nopl   (%rax)
   16750:	85 c0                	test   %eax,%eax
   16752:	74 de                	je     16732 <wcsnrtombs+0x62>
   16754:	49 83 c0 01          	add    $0x1,%r8
   16758:	4c 39 c2             	cmp    %r8,%rdx
   1675b:	74 d5                	je     16732 <wcsnrtombs+0x62>
   1675d:	42 8b 04 81          	mov    (%rcx,%r8,4),%eax
   16761:	3d ff 00 00 00       	cmp    $0xff,%eax
   16766:	76 e8                	jbe    16750 <wcsnrtombs+0x80>
   16768:	eb b6                	jmp    16720 <wcsnrtombs+0x50>
   1676a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16770:	4a 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%rax
   16777:	00 
   16778:	48 01 06             	add    %rax,(%rsi)
   1677b:	4c 89 c0             	mov    %r8,%rax
   1677e:	48 83 c4 08          	add    $0x8,%rsp
   16782:	c3                   	ret    
   16783:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16788:	49 89 c0             	mov    %rax,%r8
   1678b:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   16792:	48 83 c4 08          	add    $0x8,%rsp
   16796:	4c 89 c0             	mov    %r8,%rax
   16799:	c3                   	ret    
   1679a:	45 31 c0             	xor    %r8d,%r8d
   1679d:	eb 93                	jmp    16732 <wcsnrtombs+0x62>
   1679f:	90                   	nop

00000000000167a0 <wcsrtombs>:
   167a0:	f3 0f 1e fa          	endbr64 
   167a4:	49 89 c8             	mov    %rcx,%r8
   167a7:	48 89 d1             	mov    %rdx,%rcx
   167aa:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   167b1:	e9 1a ff ff ff       	jmp    166d0 <wcsnrtombs>
   167b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   167bd:	00 00 00 

00000000000167c0 <__sfvwrite>:
   167c0:	f3 0f 1e fa          	endbr64 
   167c4:	8b 46 0c             	mov    0xc(%rsi),%eax
   167c7:	85 c0                	test   %eax,%eax
   167c9:	0f 84 91 02 00 00    	je     16a60 <__sfvwrite+0x2a0>
   167cf:	41 57                	push   %r15
   167d1:	49 89 f0             	mov    %rsi,%r8
   167d4:	41 56                	push   %r14
   167d6:	41 55                	push   %r13
   167d8:	41 54                	push   %r12
   167da:	55                   	push   %rbp
   167db:	48 89 fd             	mov    %rdi,%rbp
   167de:	53                   	push   %rbx
   167df:	48 83 ec 28          	sub    $0x28,%rsp
   167e3:	4c 8b 26             	mov    (%rsi),%r12
   167e6:	0f b7 47 10          	movzwl 0x10(%rdi),%eax
   167ea:	4d 8b 2c 24          	mov    (%r12),%r13
   167ee:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   167f3:	49 83 c4 10          	add    $0x10,%r12
   167f7:	a8 02                	test   $0x2,%al
   167f9:	0f 85 3d 02 00 00    	jne    16a3c <__sfvwrite+0x27c>
   167ff:	a8 01                	test   $0x1,%al
   16801:	0f 84 36 01 00 00    	je     1693d <__sfvwrite+0x17d>
   16807:	45 31 ff             	xor    %r15d,%r15d
   1680a:	31 d2                	xor    %edx,%edx
   1680c:	eb 7d                	jmp    1688b <__sfvwrite+0xcb>
   1680e:	66 90                	xchg   %ax,%ax
   16810:	85 d2                	test   %edx,%edx
   16812:	0f 84 8a 00 00 00    	je     168a2 <__sfvwrite+0xe2>
   16818:	4d 63 f7             	movslq %r15d,%r14
   1681b:	8b 45 20             	mov    0x20(%rbp),%eax
   1681e:	8b 55 0c             	mov    0xc(%rbp),%edx
   16821:	49 39 de             	cmp    %rbx,%r14
   16824:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   16828:	4c 0f 47 f3          	cmova  %rbx,%r14
   1682c:	01 c2                	add    %eax,%edx
   1682e:	44 39 f2             	cmp    %r14d,%edx
   16831:	7d 0a                	jge    1683d <__sfvwrite+0x7d>
   16833:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
   16837:	0f 87 fb 01 00 00    	ja     16a38 <__sfvwrite+0x278>
   1683d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   16842:	44 39 f0             	cmp    %r14d,%eax
   16845:	0f 8e ed 01 00 00    	jle    16a38 <__sfvwrite+0x278>
   1684b:	49 63 d6             	movslq %r14d,%rdx
   1684e:	4c 89 ee             	mov    %r13,%rsi
   16851:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   16856:	e8 65 7f ff ff       	call   e7c0 <memcpy>
   1685b:	44 29 75 0c          	sub    %r14d,0xc(%rbp)
   1685f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   16864:	48 01 55 00          	add    %rdx,0x0(%rbp)
   16868:	45 29 f7             	sub    %r14d,%r15d
   1686b:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   16870:	0f 84 c2 01 00 00    	je     16a38 <__sfvwrite+0x278>
   16876:	49 01 d5             	add    %rdx,%r13
   16879:	48 29 d3             	sub    %rdx,%rbx
   1687c:	45 29 70 0c          	sub    %r14d,0xc(%r8)
   16880:	ba 01 00 00 00       	mov    $0x1,%edx
   16885:	0f 84 22 01 00 00    	je     169ad <__sfvwrite+0x1ed>
   1688b:	48 85 db             	test   %rbx,%rbx
   1688e:	75 80                	jne    16810 <__sfvwrite+0x50>
   16890:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   16895:	4d 8b 2c 24          	mov    (%r12),%r13
   16899:	49 83 c4 10          	add    $0x10,%r12
   1689d:	48 85 db             	test   %rbx,%rbx
   168a0:	74 ee                	je     16890 <__sfvwrite+0xd0>
   168a2:	48 89 da             	mov    %rbx,%rdx
   168a5:	be 0a 00 00 00       	mov    $0xa,%esi
   168aa:	4c 89 ef             	mov    %r13,%rdi
   168ad:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   168b2:	e8 59 d1 ff ff       	call   13a10 <memchr>
   168b7:	8d 53 01             	lea    0x1(%rbx),%edx
   168ba:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   168bf:	4c 8d 78 01          	lea    0x1(%rax),%r15
   168c3:	4d 29 ef             	sub    %r13,%r15
   168c6:	48 85 c0             	test   %rax,%rax
   168c9:	44 0f 44 fa          	cmove  %edx,%r15d
   168cd:	e9 46 ff ff ff       	jmp    16818 <__sfvwrite+0x58>
   168d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   168d8:	89 c2                	mov    %eax,%edx
   168da:	66 81 e2 00 42       	and    $0x4200,%dx
   168df:	66 81 fa 00 42       	cmp    $0x4200,%dx
   168e4:	0f 84 d6 00 00 00    	je     169c0 <__sfvwrite+0x200>
   168ea:	f6 c4 02             	test   $0x2,%ah
   168ed:	74 71                	je     16960 <__sfvwrite+0x1a0>
   168ef:	48 63 d1             	movslq %ecx,%rdx
   168f2:	41 89 df             	mov    %ebx,%r15d
   168f5:	4c 63 f3             	movslq %ebx,%r14
   168f8:	48 39 d3             	cmp    %rdx,%rbx
   168fb:	73 05                	jae    16902 <__sfvwrite+0x142>
   168fd:	4c 89 f2             	mov    %r14,%rdx
   16900:	89 d9                	mov    %ebx,%ecx
   16902:	4c 89 ee             	mov    %r13,%rsi
   16905:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1690a:	4d 01 f5             	add    %r14,%r13
   1690d:	4c 29 f3             	sub    %r14,%rbx
   16910:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   16914:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   16919:	e8 a2 7e ff ff       	call   e7c0 <memcpy>
   1691e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   16923:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   16927:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1692c:	29 4d 0c             	sub    %ecx,0xc(%rbp)
   1692f:	48 01 55 00          	add    %rdx,0x0(%rbp)
   16933:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   16937:	74 74                	je     169ad <__sfvwrite+0x1ed>
   16939:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   1693d:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   16940:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   16944:	48 85 db             	test   %rbx,%rbx
   16947:	75 8f                	jne    168d8 <__sfvwrite+0x118>
   16949:	4d 8b 2c 24          	mov    (%r12),%r13
   1694d:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   16952:	49 83 c4 10          	add    $0x10,%r12
   16956:	eb ec                	jmp    16944 <__sfvwrite+0x184>
   16958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1695f:	00 
   16960:	48 39 7d 18          	cmp    %rdi,0x18(%rbp)
   16964:	73 0c                	jae    16972 <__sfvwrite+0x1b2>
   16966:	48 63 c9             	movslq %ecx,%rcx
   16969:	48 39 cb             	cmp    %rcx,%rbx
   1696c:	0f 87 ca 00 00 00    	ja     16a3c <__sfvwrite+0x27c>
   16972:	48 63 55 20          	movslq 0x20(%rbp),%rdx
   16976:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1697b:	48 39 d3             	cmp    %rdx,%rbx
   1697e:	0f 83 b8 00 00 00    	jae    16a3c <__sfvwrite+0x27c>
   16984:	4c 63 f3             	movslq %ebx,%r14
   16987:	4c 89 ee             	mov    %r13,%rsi
   1698a:	41 89 df             	mov    %ebx,%r15d
   1698d:	4c 89 f2             	mov    %r14,%rdx
   16990:	4d 01 f5             	add    %r14,%r13
   16993:	e8 28 7e ff ff       	call   e7c0 <memcpy>
   16998:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1699d:	29 5d 0c             	sub    %ebx,0xc(%rbp)
   169a0:	4c 29 f3             	sub    %r14,%rbx
   169a3:	4c 01 75 00          	add    %r14,0x0(%rbp)
   169a7:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   169ab:	75 8c                	jne    16939 <__sfvwrite+0x179>
   169ad:	48 83 c4 28          	add    $0x28,%rsp
   169b1:	31 c0                	xor    %eax,%eax
   169b3:	5b                   	pop    %rbx
   169b4:	5d                   	pop    %rbp
   169b5:	41 5c                	pop    %r12
   169b7:	41 5d                	pop    %r13
   169b9:	41 5e                	pop    %r14
   169bb:	41 5f                	pop    %r15
   169bd:	c3                   	ret    
   169be:	66 90                	xchg   %ax,%ax
   169c0:	48 63 d1             	movslq %ecx,%rdx
   169c3:	48 39 d3             	cmp    %rdx,%rbx
   169c6:	0f 86 1e ff ff ff    	jbe    168ea <__sfvwrite+0x12a>
   169cc:	4c 8b 4d 18          	mov    0x18(%rbp),%r9
   169d0:	44 8b 75 20          	mov    0x20(%rbp),%r14d
   169d4:	4c 29 cf             	sub    %r9,%rdi
   169d7:	49 89 ff             	mov    %rdi,%r15
   169da:	48 8d 0c 3b          	lea    (%rbx,%rdi,1),%rcx
   169de:	66 90                	xchg   %ax,%ax
   169e0:	43 8d 04 36          	lea    (%r14,%r14,1),%eax
   169e4:	44 8d 70 01          	lea    0x1(%rax),%r14d
   169e8:	49 63 d6             	movslq %r14d,%rdx
   169eb:	48 39 ca             	cmp    %rcx,%rdx
   169ee:	72 f0                	jb     169e0 <__sfvwrite+0x220>
   169f0:	83 c0 02             	add    $0x2,%eax
   169f3:	4c 89 cf             	mov    %r9,%rdi
   169f6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   169fb:	48 63 f0             	movslq %eax,%rsi
   169fe:	e8 fd 71 ff ff       	call   dc00 <dlrealloc>
   16a03:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   16a08:	48 85 c0             	test   %rax,%rax
   16a0b:	74 2b                	je     16a38 <__sfvwrite+0x278>
   16a0d:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   16a10:	4a 8d 3c 38          	lea    (%rax,%r15,1),%rdi
   16a14:	48 89 45 18          	mov    %rax,0x18(%rbp)
   16a18:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   16a1c:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   16a20:	44 01 f1             	add    %r14d,%ecx
   16a23:	2b 4d 20             	sub    0x20(%rbp),%ecx
   16a26:	44 89 75 20          	mov    %r14d,0x20(%rbp)
   16a2a:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   16a2d:	e9 b8 fe ff ff       	jmp    168ea <__sfvwrite+0x12a>
   16a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a38:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   16a3c:	83 c8 40             	or     $0x40,%eax
   16a3f:	66 89 45 10          	mov    %ax,0x10(%rbp)
   16a43:	48 83 c4 28          	add    $0x28,%rsp
   16a47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   16a4c:	5b                   	pop    %rbx
   16a4d:	5d                   	pop    %rbp
   16a4e:	41 5c                	pop    %r12
   16a50:	41 5d                	pop    %r13
   16a52:	41 5e                	pop    %r14
   16a54:	41 5f                	pop    %r15
   16a56:	c3                   	ret    
   16a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16a5e:	00 00 
   16a60:	31 c0                	xor    %eax,%eax
   16a62:	c3                   	ret    
   16a63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16a6a:	00 00 00 
   16a6d:	0f 1f 00             	nopl   (%rax)

0000000000016a70 <_libc__memchr>:
   16a70:	40 88 f0             	mov    %sil,%al
   16a73:	48 89 d1             	mov    %rdx,%rcx
   16a76:	48 85 c9             	test   %rcx,%rcx
   16a79:	74 0b                	je     16a86 <L1>
   16a7b:	fc                   	cld    
   16a7c:	f2 ae                	repnz scas %es:(%rdi),%al
   16a7e:	75 06                	jne    16a86 <L1>
   16a80:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   16a84:	eb 03                	jmp    16a89 <L2>

0000000000016a86 <L1>:
   16a86:	48 31 c0             	xor    %rax,%rax

0000000000016a89 <L2>:
   16a89:	c3                   	ret    
   16a8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000016a90 <_bcopy>:
   16a90:	48 87 fe             	xchg   %rdi,%rsi
   16a93:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   16a9a:	00 00 00 00 
   16a9e:	66 90                	xchg   %ax,%ax

0000000000016aa0 <__memmove>:
   16aa0:	49 89 fb             	mov    %rdi,%r11
   16aa3:	48 89 d1             	mov    %rdx,%rcx
   16aa6:	48 89 f8             	mov    %rdi,%rax
   16aa9:	48 29 f0             	sub    %rsi,%rax
   16aac:	48 39 c8             	cmp    %rcx,%rax
   16aaf:	72 16                	jb     16ac7 <__memmove+0x27>
   16ab1:	fc                   	cld    
   16ab2:	48 c1 e9 03          	shr    $0x3,%rcx
   16ab6:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   16ab9:	48 89 d1             	mov    %rdx,%rcx
   16abc:	48 83 e1 07          	and    $0x7,%rcx
   16ac0:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   16ac2:	4c 89 d8             	mov    %r11,%rax
   16ac5:	eb 29                	jmp    16af0 <__memmove+0x50>
   16ac7:	48 01 cf             	add    %rcx,%rdi
   16aca:	48 01 ce             	add    %rcx,%rsi
   16acd:	fd                   	std    
   16ace:	48 83 e1 07          	and    $0x7,%rcx
   16ad2:	48 ff cf             	dec    %rdi
   16ad5:	48 ff ce             	dec    %rsi
   16ad8:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   16ada:	48 89 d1             	mov    %rdx,%rcx
   16add:	48 c1 e9 03          	shr    $0x3,%rcx
   16ae1:	48 83 ee 07          	sub    $0x7,%rsi
   16ae5:	48 83 ef 07          	sub    $0x7,%rdi
   16ae9:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   16aec:	4c 89 d8             	mov    %r11,%rax
   16aef:	fc                   	cld    
   16af0:	c3                   	ret    
   16af1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16af8:	00 00 00 
   16afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016b00 <__gdtoa>:
   16b00:	f3 0f 1e fa          	endbr64 
   16b04:	41 57                	push   %r15
   16b06:	41 56                	push   %r14
   16b08:	41 55                	push   %r13
   16b0a:	41 54                	push   %r12
   16b0c:	55                   	push   %rbp
   16b0d:	53                   	push   %rbx
   16b0e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   16b15:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   16b1c:	00 
   16b1d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   16b22:	8b 11                	mov    (%rcx),%edx
   16b24:	48 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%rbp
   16b2b:	00 
   16b2c:	89 74 24 30          	mov    %esi,0x30(%rsp)
   16b30:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   16b35:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   16b3a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16b3f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   16b46:	00 00 
   16b48:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   16b4f:	00 
   16b50:	31 c0                	xor    %eax,%eax
   16b52:	89 d0                	mov    %edx,%eax
   16b54:	83 e0 cf             	and    $0xffffffcf,%eax
   16b57:	89 01                	mov    %eax,(%rcx)
   16b59:	89 d0                	mov    %edx,%eax
   16b5b:	83 e0 0f             	and    $0xf,%eax
   16b5e:	83 f8 03             	cmp    $0x3,%eax
   16b61:	0f 84 69 03 00 00    	je     16ed0 <__gdtoa+0x3d0>
   16b67:	89 d6                	mov    %edx,%esi
   16b69:	83 e6 0c             	and    $0xc,%esi
   16b6c:	89 74 24 20          	mov    %esi,0x20(%rsp)
   16b70:	0f 85 6a 02 00 00    	jne    16de0 <__gdtoa+0x2e0>
   16b76:	85 c0                	test   %eax,%eax
   16b78:	0f 84 22 03 00 00    	je     16ea0 <__gdtoa+0x3a0>
   16b7e:	83 e8 01             	sub    $0x1,%eax
   16b81:	45 31 e4             	xor    %r12d,%r12d
   16b84:	83 f8 01             	cmp    $0x1,%eax
   16b87:	0f 87 83 02 00 00    	ja     16e10 <__gdtoa+0x310>
   16b8d:	48 89 cb             	mov    %rcx,%rbx
   16b90:	8b 0f                	mov    (%rdi),%ecx
   16b92:	49 89 ff             	mov    %rdi,%r15
   16b95:	b8 20 00 00 00       	mov    $0x20,%eax
   16b9a:	31 ff                	xor    %edi,%edi
   16b9c:	83 f9 20             	cmp    $0x20,%ecx
   16b9f:	0f 8e 5b 03 00 00    	jle    16f00 <__gdtoa+0x400>
   16ba5:	01 c0                	add    %eax,%eax
   16ba7:	83 c7 01             	add    $0x1,%edi
   16baa:	39 c1                	cmp    %eax,%ecx
   16bac:	7f f7                	jg     16ba5 <__gdtoa+0xa5>
   16bae:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   16bb2:	89 54 24 38          	mov    %edx,0x38(%rsp)
   16bb6:	e8 b5 ec ff ff       	call   15870 <__Balloc_D2A>
   16bbb:	8b 54 24 38          	mov    0x38(%rsp),%edx
   16bbf:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   16bc3:	48 85 c0             	test   %rax,%rax
   16bc6:	49 89 c5             	mov    %rax,%r13
   16bc9:	0f 84 b9 02 00 00    	je     16e88 <__gdtoa+0x388>
   16bcf:	44 8d 59 ff          	lea    -0x1(%rcx),%r11d
   16bd3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16bd8:	4d 8d 45 18          	lea    0x18(%r13),%r8
   16bdc:	41 c1 fb 05          	sar    $0x5,%r11d
   16be0:	4c 89 c6             	mov    %r8,%rsi
   16be3:	4d 63 db             	movslq %r11d,%r11
   16be6:	49 c1 e3 02          	shl    $0x2,%r11
   16bea:	4a 8d 3c 18          	lea    (%rax,%r11,1),%rdi
   16bee:	66 90                	xchg   %ax,%ax
   16bf0:	44 8b 08             	mov    (%rax),%r9d
   16bf3:	48 83 c0 04          	add    $0x4,%rax
   16bf7:	48 83 c6 04          	add    $0x4,%rsi
   16bfb:	44 89 4e fc          	mov    %r9d,-0x4(%rsi)
   16bff:	48 39 c7             	cmp    %rax,%rdi
   16c02:	73 ec                	jae    16bf0 <__gdtoa+0xf0>
   16c04:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16c09:	48 83 c7 01          	add    $0x1,%rdi
   16c0d:	4d 8d 73 04          	lea    0x4(%r11),%r14
   16c11:	48 83 c0 01          	add    $0x1,%rax
   16c15:	48 39 c7             	cmp    %rax,%rdi
   16c18:	b8 04 00 00 00       	mov    $0x4,%eax
   16c1d:	4c 0f 42 f0          	cmovb  %rax,%r14
   16c21:	49 c1 fe 02          	sar    $0x2,%r14
   16c25:	eb 12                	jmp    16c39 <__gdtoa+0x139>
   16c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16c2e:	00 00 
   16c30:	45 85 f6             	test   %r14d,%r14d
   16c33:	0f 84 d7 02 00 00    	je     16f10 <__gdtoa+0x410>
   16c39:	45 89 f4             	mov    %r14d,%r12d
   16c3c:	41 83 ee 01          	sub    $0x1,%r14d
   16c40:	49 63 c6             	movslq %r14d,%rax
   16c43:	41 8b 34 80          	mov    (%r8,%rax,4),%esi
   16c47:	85 f6                	test   %esi,%esi
   16c49:	74 e5                	je     16c30 <__gdtoa+0x130>
   16c4b:	45 89 65 14          	mov    %r12d,0x14(%r13)
   16c4f:	41 8b 7c 85 18       	mov    0x18(%r13,%rax,4),%edi
   16c54:	45 89 e6             	mov    %r12d,%r14d
   16c57:	89 54 24 40          	mov    %edx,0x40(%rsp)
   16c5b:	41 c1 e6 05          	shl    $0x5,%r14d
   16c5f:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   16c63:	e8 b8 ee ff ff       	call   15b20 <__hi0bits_D2A>
   16c68:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   16c6c:	8b 54 24 40          	mov    0x40(%rsp),%edx
   16c70:	41 29 c6             	sub    %eax,%r14d
   16c73:	4c 89 ef             	mov    %r13,%rdi
   16c76:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   16c7a:	89 54 24 38          	mov    %edx,0x38(%rsp)
   16c7e:	e8 8d 18 00 00       	call   18510 <__trailz_D2A>
   16c83:	8b 54 24 38          	mov    0x38(%rsp),%edx
   16c87:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   16c8b:	85 c0                	test   %eax,%eax
   16c8d:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   16c94:	0f 85 86 02 00 00    	jne    16f20 <__gdtoa+0x420>
   16c9a:	8b 44 24 30          	mov    0x30(%rsp),%eax
   16c9e:	89 44 24 40          	mov    %eax,0x40(%rsp)
   16ca2:	41 8b 45 14          	mov    0x14(%r13),%eax
   16ca6:	85 c0                	test   %eax,%eax
   16ca8:	0f 84 e2 01 00 00    	je     16e90 <__gdtoa+0x390>
   16cae:	48 8d b4 24 a4 00 00 	lea    0xa4(%rsp),%rsi
   16cb5:	00 
   16cb6:	4c 89 ef             	mov    %r13,%rdi
   16cb9:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   16cbd:	89 54 24 38          	mov    %edx,0x38(%rsp)
   16cc1:	e8 2a f6 ff ff       	call   162f0 <__b2d_D2A>
   16cc6:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   16cca:	66 0f ef c9          	pxor   %xmm1,%xmm1
   16cce:	8b 54 24 38          	mov    0x38(%rsp),%edx
   16cd2:	66 48 0f 7e c6       	movq   %xmm0,%rsi
   16cd7:	66 48 0f 7e c0       	movq   %xmm0,%rax
   16cdc:	48 c1 ee 20          	shr    $0x20,%rsi
   16ce0:	46 8d 0c 31          	lea    (%rcx,%r14,1),%r9d
   16ce4:	89 c0                	mov    %eax,%eax
   16ce6:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   16cea:	81 e6 ff ff 0f 00    	and    $0xfffff,%esi
   16cf0:	41 8d 79 ff          	lea    -0x1(%r9),%edi
   16cf4:	81 ce 00 00 f0 3f    	or     $0x3ff00000,%esi
   16cfa:	f2 0f 2a cf          	cvtsi2sd %edi,%xmm1
   16cfe:	41 89 fc             	mov    %edi,%r12d
   16d01:	f2 0f 59 0d 6f af 00 	mulsd  0xaf6f(%rip),%xmm1        # 21c78 <xdigs_lower.3329+0x38>
   16d08:	00 
   16d09:	49 89 f0             	mov    %rsi,%r8
   16d0c:	41 c1 fc 1f          	sar    $0x1f,%r12d
   16d10:	49 c1 e0 20          	shl    $0x20,%r8
   16d14:	45 89 e3             	mov    %r12d,%r11d
   16d17:	4c 09 c0             	or     %r8,%rax
   16d1a:	41 31 fb             	xor    %edi,%r11d
   16d1d:	66 48 0f 6e c0       	movq   %rax,%xmm0
   16d22:	f2 0f 5c 05 36 af 00 	subsd  0xaf36(%rip),%xmm0        # 21c60 <xdigs_lower.3329+0x20>
   16d29:	00 
   16d2a:	45 29 e3             	sub    %r12d,%r11d
   16d2d:	f2 0f 59 05 33 af 00 	mulsd  0xaf33(%rip),%xmm0        # 21c68 <xdigs_lower.3329+0x28>
   16d34:	00 
   16d35:	41 81 eb 35 04 00 00 	sub    $0x435,%r11d
   16d3c:	f2 0f 58 05 2c af 00 	addsd  0xaf2c(%rip),%xmm0        # 21c70 <xdigs_lower.3329+0x30>
   16d43:	00 
   16d44:	45 85 db             	test   %r11d,%r11d
   16d47:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   16d4b:	7e 15                	jle    16d62 <__gdtoa+0x262>
   16d4d:	66 0f ef c9          	pxor   %xmm1,%xmm1
   16d51:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   16d56:	f2 0f 59 0d ca b1 00 	mulsd  0xb1ca(%rip),%xmm1        # 21f28 <_C_ctype_+0x108>
   16d5d:	00 
   16d5e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   16d62:	66 0f ef f6          	pxor   %xmm6,%xmm6
   16d66:	f2 44 0f 2c d8       	cvttsd2si %xmm0,%r11d
   16d6b:	66 0f 2f f0          	comisd %xmm0,%xmm6
   16d6f:	0f 87 c3 08 00 00    	ja     17638 <__gdtoa+0xb38>
   16d75:	41 89 fc             	mov    %edi,%r12d
   16d78:	89 c0                	mov    %eax,%eax
   16d7a:	41 c1 e4 14          	shl    $0x14,%r12d
   16d7e:	44 01 e6             	add    %r12d,%esi
   16d81:	48 c1 e6 20          	shl    $0x20,%rsi
   16d85:	48 09 f0             	or     %rsi,%rax
   16d88:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   16d8f:	00 
   16d90:	49 89 c2             	mov    %rax,%r10
   16d93:	8b 44 24 40          	mov    0x40(%rsp),%eax
   16d97:	f7 d8                	neg    %eax
   16d99:	89 44 24 48          	mov    %eax,0x48(%rsp)
   16d9d:	41 83 fb 16          	cmp    $0x16,%r11d
   16da1:	0f 87 b1 01 00 00    	ja     16f58 <__gdtoa+0x458>
   16da7:	49 63 c3             	movslq %r11d,%rax
   16daa:	48 8d 35 6f af 00 00 	lea    0xaf6f(%rip),%rsi        # 21d20 <__tens_D2A>
   16db1:	66 49 0f 6e fa       	movq   %r10,%xmm7
   16db6:	f2 0f 10 04 c6       	movsd  (%rsi,%rax,8),%xmm0
   16dbb:	66 0f 2f c7          	comisd %xmm7,%xmm0
   16dbf:	0f 86 e3 05 00 00    	jbe    173a8 <__gdtoa+0x8a8>
   16dc5:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   16dcc:	00 00 00 00 
   16dd0:	41 83 eb 01          	sub    $0x1,%r11d
   16dd4:	e9 8a 01 00 00       	jmp    16f63 <__gdtoa+0x463>
   16dd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16de0:	83 f8 04             	cmp    $0x4,%eax
   16de3:	0f 85 9f 00 00 00    	jne    16e88 <__gdtoa+0x388>
   16de9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16dee:	ba 03 00 00 00       	mov    $0x3,%edx
   16df3:	48 89 ee             	mov    %rbp,%rsi
   16df6:	48 8d 3d 5c ae 00 00 	lea    0xae5c(%rip),%rdi        # 21c59 <xdigs_lower.3329+0x19>
   16dfd:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   16e03:	e8 68 cc ff ff       	call   13a70 <__nrv_alloc_D2A>
   16e08:	49 89 c4             	mov    %rax,%r12
   16e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16e10:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   16e17:	00 
   16e18:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   16e1f:	00 00 
   16e21:	0f 85 3e 15 00 00    	jne    18365 <__gdtoa+0x1865>
   16e27:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   16e2e:	4c 89 e0             	mov    %r12,%rax
   16e31:	5b                   	pop    %rbx
   16e32:	5d                   	pop    %rbp
   16e33:	41 5c                	pop    %r12
   16e35:	41 5d                	pop    %r13
   16e37:	41 5e                	pop    %r14
   16e39:	41 5f                	pop    %r15
   16e3b:	c3                   	ret    
   16e3c:	8b 78 08             	mov    0x8(%rax),%edi
   16e3f:	49 89 c7             	mov    %rax,%r15
   16e42:	e8 29 ea ff ff       	call   15870 <__Balloc_D2A>
   16e47:	49 89 c6             	mov    %rax,%r14
   16e4a:	48 85 c0             	test   %rax,%rax
   16e4d:	74 39                	je     16e88 <__gdtoa+0x388>
   16e4f:	49 63 47 14          	movslq 0x14(%r15),%rax
   16e53:	49 8d 77 10          	lea    0x10(%r15),%rsi
   16e57:	49 8d 7e 10          	lea    0x10(%r14),%rdi
   16e5b:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   16e62:	00 
   16e63:	e8 58 79 ff ff       	call   e7c0 <memcpy>
   16e68:	be 01 00 00 00       	mov    $0x1,%esi
   16e6d:	4c 89 f7             	mov    %r14,%rdi
   16e70:	e8 db f0 ff ff       	call   15f50 <__lshift_D2A>
   16e75:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   16e7a:	48 85 c0             	test   %rax,%rax
   16e7d:	0f 85 2d 09 00 00    	jne    177b0 <__gdtoa+0xcb0>
   16e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16e88:	45 31 e4             	xor    %r12d,%r12d
   16e8b:	eb 83                	jmp    16e10 <__gdtoa+0x310>
   16e8d:	0f 1f 00             	nopl   (%rax)
   16e90:	4c 89 ef             	mov    %r13,%rdi
   16e93:	e8 c8 ea ff ff       	call   15960 <__Bfree_D2A>
   16e98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16e9f:	00 
   16ea0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16ea5:	ba 01 00 00 00       	mov    $0x1,%edx
   16eaa:	48 89 ee             	mov    %rbp,%rsi
   16ead:	48 8d 3d f4 a6 00 00 	lea    0xa6f4(%rip),%rdi        # 215a8 <_ZZ17ecall_pointer_outE8__func__+0x28>
   16eb4:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   16eba:	e8 b1 cb ff ff       	call   13a70 <__nrv_alloc_D2A>
   16ebf:	49 89 c4             	mov    %rax,%r12
   16ec2:	e9 49 ff ff ff       	jmp    16e10 <__gdtoa+0x310>
   16ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16ece:	00 00 
   16ed0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16ed5:	ba 08 00 00 00       	mov    $0x8,%edx
   16eda:	48 89 ee             	mov    %rbp,%rsi
   16edd:	48 8d 3d 6c ad 00 00 	lea    0xad6c(%rip),%rdi        # 21c50 <xdigs_lower.3329+0x10>
   16ee4:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   16eea:	e8 81 cb ff ff       	call   13a70 <__nrv_alloc_D2A>
   16eef:	49 89 c4             	mov    %rax,%r12
   16ef2:	e9 19 ff ff ff       	jmp    16e10 <__gdtoa+0x310>
   16ef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16efe:	00 00 
   16f00:	89 f7                	mov    %esi,%edi
   16f02:	e9 a7 fc ff ff       	jmp    16bae <__gdtoa+0xae>
   16f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16f0e:	00 00 
   16f10:	41 c7 45 14 00 00 00 	movl   $0x0,0x14(%r13)
   16f17:	00 
   16f18:	e9 56 fd ff ff       	jmp    16c73 <__gdtoa+0x173>
   16f1d:	0f 1f 00             	nopl   (%rax)
   16f20:	89 c6                	mov    %eax,%esi
   16f22:	4c 89 ef             	mov    %r13,%rdi
   16f25:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   16f29:	89 54 24 38          	mov    %edx,0x38(%rsp)
   16f2d:	e8 ee 14 00 00       	call   18420 <__rshift_D2A>
   16f32:	8b 84 24 a4 00 00 00 	mov    0xa4(%rsp),%eax
   16f39:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   16f3d:	8b 54 24 38          	mov    0x38(%rsp),%edx
   16f41:	01 c1                	add    %eax,%ecx
   16f43:	41 29 c6             	sub    %eax,%r14d
   16f46:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   16f4a:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   16f4e:	e9 4f fd ff ff       	jmp    16ca2 <__gdtoa+0x1a2>
   16f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16f58:	c7 84 24 94 00 00 00 	movl   $0x1,0x94(%rsp)
   16f5f:	01 00 00 00 
   16f63:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
   16f68:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   16f6f:	00 
   16f70:	45 85 e4             	test   %r12d,%r12d
   16f73:	0f 88 4e 04 00 00    	js     173c7 <__gdtoa+0x8c7>
   16f79:	45 85 db             	test   %r11d,%r11d
   16f7c:	0f 88 06 04 00 00    	js     17388 <__gdtoa+0x888>
   16f82:	44 01 5c 24 48       	add    %r11d,0x48(%rsp)
   16f87:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   16f8c:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
   16f93:	00 
   16f94:	8b 44 24 10          	mov    0x10(%rsp),%eax
   16f98:	83 f8 09             	cmp    $0x9,%eax
   16f9b:	0f 87 bf 01 00 00    	ja     17160 <__gdtoa+0x660>
   16fa1:	83 f8 05             	cmp    $0x5,%eax
   16fa4:	0f 8f 36 04 00 00    	jg     173e0 <__gdtoa+0x8e0>
   16faa:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   16fb1:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   16fb6:	0f 96 c0             	setbe  %al
   16fb9:	0f b6 c0             	movzbl %al,%eax
   16fbc:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   16fc3:	8b 44 24 10          	mov    0x10(%rsp),%eax
   16fc7:	83 f8 04             	cmp    $0x4,%eax
   16fca:	0f 84 a0 07 00 00    	je     17770 <__gdtoa+0xc70>
   16fd0:	83 f8 05             	cmp    $0x5,%eax
   16fd3:	0f 84 87 06 00 00    	je     17660 <__gdtoa+0xb60>
   16fd9:	83 f8 02             	cmp    $0x2,%eax
   16fdc:	0f 85 16 06 00 00    	jne    175f8 <__gdtoa+0xaf8>
   16fe2:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   16fe9:	00 
   16fea:	8b 44 24 28          	mov    0x28(%rsp),%eax
   16fee:	bf 01 00 00 00       	mov    $0x1,%edi
   16ff3:	85 c0                	test   %eax,%eax
   16ff5:	0f 4f f8             	cmovg  %eax,%edi
   16ff8:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   16fff:	89 bc 24 9c 00 00 00 	mov    %edi,0x9c(%rsp)
   17006:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   1700a:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   1700e:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
   17015:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1701a:	44 89 4c 24 70       	mov    %r9d,0x70(%rsp)
   1701f:	89 94 24 98 00 00 00 	mov    %edx,0x98(%rsp)
   17026:	e8 05 ca ff ff       	call   13a30 <__rv_alloc_D2A>
   1702b:	49 89 c4             	mov    %rax,%r12
   1702e:	48 85 c0             	test   %rax,%rax
   17031:	0f 84 51 fe ff ff    	je     16e88 <__gdtoa+0x388>
   17037:	41 8b 77 0c          	mov    0xc(%r15),%esi
   1703b:	44 8b 4c 24 70       	mov    0x70(%rsp),%r9d
   17040:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17045:	8b 8c 24 90 00 00 00 	mov    0x90(%rsp),%ecx
   1704c:	83 ee 01             	sub    $0x1,%esi
   1704f:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
   17053:	0f 84 82 01 00 00    	je     171db <__gdtoa+0x6db>
   17059:	b8 02 00 00 00       	mov    $0x2,%eax
   1705e:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
   17065:	0f 49 c6             	cmovns %esi,%eax
   17068:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1706c:	89 c6                	mov    %eax,%esi
   1706e:	80 e6 01             	and    $0x1,%dh
   17071:	0f 85 59 01 00 00    	jne    171d0 <__gdtoa+0x6d0>
   17077:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1707b:	85 d2                	test   %edx,%edx
   1707d:	0f 88 7d 03 00 00    	js     17400 <__gdtoa+0x900>
   17083:	8b 44 24 78          	mov    0x78(%rsp),%eax
   17087:	83 f8 0e             	cmp    $0xe,%eax
   1708a:	0f 8f 70 03 00 00    	jg     17400 <__gdtoa+0x900>
   17090:	48 98                	cltq   
   17092:	48 8d 15 87 ac 00 00 	lea    0xac87(%rip),%rdx        # 21d20 <__tens_D2A>
   17099:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   1709e:	48 89 c1             	mov    %rax,%rcx
   170a1:	8b 44 24 28          	mov    0x28(%rsp),%eax
   170a5:	85 c0                	test   %eax,%eax
   170a7:	0f 89 eb 05 00 00    	jns    17698 <__gdtoa+0xb98>
   170ad:	8b 44 24 38          	mov    0x38(%rsp),%eax
   170b1:	85 c0                	test   %eax,%eax
   170b3:	0f 8f df 05 00 00    	jg     17698 <__gdtoa+0xb98>
   170b9:	0f 85 b1 05 00 00    	jne    17670 <__gdtoa+0xb70>
   170bf:	f2 0f 59 15 d1 ab 00 	mulsd  0xabd1(%rip),%xmm2        # 21c98 <xdigs_lower.3329+0x58>
   170c6:	00 
   170c7:	66 0f 2f 94 24 88 00 	comisd 0x88(%rsp),%xmm2
   170ce:	00 00 
   170d0:	0f 83 9a 05 00 00    	jae    17670 <__gdtoa+0xb70>
   170d6:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   170dd:	00 00 
   170df:	83 c1 02             	add    $0x2,%ecx
   170e2:	45 31 f6             	xor    %r14d,%r14d
   170e5:	41 89 cf             	mov    %ecx,%r15d
   170e8:	41 c6 04 24 31       	movb   $0x31,(%r12)
   170ed:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   170f2:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   170f9:	00 
   170fa:	4c 89 f7             	mov    %r14,%rdi
   170fd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17102:	e8 59 e8 ff ff       	call   15960 <__Bfree_D2A>
   17107:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1710d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17112:	74 14                	je     17128 <__gdtoa+0x628>
   17114:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17119:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1711e:	e8 3d e8 ff ff       	call   15960 <__Bfree_D2A>
   17123:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17128:	4c 89 ef             	mov    %r13,%rdi
   1712b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17130:	e8 2b e8 ff ff       	call   15960 <__Bfree_D2A>
   17135:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1713a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1713f:	c6 00 00             	movb   $0x0,(%rax)
   17142:	44 89 39             	mov    %r15d,(%rcx)
   17145:	48 85 ed             	test   %rbp,%rbp
   17148:	74 04                	je     1714e <__gdtoa+0x64e>
   1714a:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1714e:	8b 44 24 20          	mov    0x20(%rsp),%eax
   17152:	09 03                	or     %eax,(%rbx)
   17154:	e9 b7 fc ff ff       	jmp    16e10 <__gdtoa+0x310>
   17159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17160:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   17167:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   1716e:	00 
   1716f:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   17174:	0f 96 c0             	setbe  %al
   17177:	0f b6 c0             	movzbl %al,%eax
   1717a:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   17181:	66 0f ef c0          	pxor   %xmm0,%xmm0
   17185:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   1718c:	00 
   1718d:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
   17191:	f2 0f 59 05 97 ad 00 	mulsd  0xad97(%rip),%xmm0        # 21f30 <_C_ctype_+0x110>
   17198:	00 
   17199:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   171a0:	00 
   171a1:	c7 84 24 9c 00 00 00 	movl   $0xffffffff,0x9c(%rsp)
   171a8:	ff ff ff ff 
   171ac:	c7 44 24 38 ff ff ff 	movl   $0xffffffff,0x38(%rsp)
   171b3:	ff 
   171b4:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   171b8:	83 c7 03             	add    $0x3,%edi
   171bb:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   171c2:	e9 47 fe ff ff       	jmp    1700e <__gdtoa+0x50e>
   171c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   171ce:	00 00 
   171d0:	b8 03 00 00 00       	mov    $0x3,%eax
   171d5:	29 f0                	sub    %esi,%eax
   171d7:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   171db:	44 0f b6 84 24 80 00 	movzbl 0x80(%rsp),%r8d
   171e2:	00 00 
   171e4:	8b 74 24 38          	mov    0x38(%rsp),%esi
   171e8:	83 fe 0e             	cmp    $0xe,%esi
   171eb:	0f 96 c0             	setbe  %al
   171ee:	41 20 c0             	and    %al,%r8b
   171f1:	0f 84 80 fe ff ff    	je     17077 <__gdtoa+0x577>
   171f7:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   171fb:	0b 44 24 78          	or     0x78(%rsp),%eax
   171ff:	0f 85 72 fe ff ff    	jne    17077 <__gdtoa+0x577>
   17205:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1720c:	00 
   1720d:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   17214:	00 00 00 00 
   17218:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   1721f:	00 00 
   17221:	45 85 d2             	test   %r10d,%r10d
   17224:	74 12                	je     17238 <__gdtoa+0x738>
   17226:	f2 0f 10 25 52 aa 00 	movsd  0xaa52(%rip),%xmm4        # 21c80 <xdigs_lower.3329+0x40>
   1722d:	00 
   1722e:	66 0f 2f e0          	comisd %xmm0,%xmm4
   17232:	0f 87 68 0c 00 00    	ja     17ea0 <__gdtoa+0x13a0>
   17238:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1723c:	8b 7c 24 38          	mov    0x38(%rsp),%edi
   17240:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   17244:	f2 0f 58 0d 44 aa 00 	addsd  0xaa44(%rip),%xmm1        # 21c90 <xdigs_lower.3329+0x50>
   1724b:	00 
   1724c:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   17251:	66 48 0f 7e c8       	movq   %xmm1,%rax
   17256:	48 c1 ea 20          	shr    $0x20,%rdx
   1725a:	89 c0                	mov    %eax,%eax
   1725c:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   17262:	48 c1 e2 20          	shl    $0x20,%rdx
   17266:	48 09 d0             	or     %rdx,%rax
   17269:	85 ff                	test   %edi,%edi
   1726b:	0f 84 d1 08 00 00    	je     17b42 <__gdtoa+0x1042>
   17271:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   17278:	00 
   17279:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   1727e:	66 48 0f 6e e0       	movq   %rax,%xmm4
   17283:	8b 74 24 60          	mov    0x60(%rsp),%esi
   17287:	41 8d 42 ff          	lea    -0x1(%r10),%eax
   1728b:	48 8d 15 8e aa 00 00 	lea    0xaa8e(%rip),%rdx        # 21d20 <__tens_D2A>
   17292:	48 98                	cltq   
   17294:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   17299:	85 f6                	test   %esi,%esi
   1729b:	0f 84 05 0b 00 00    	je     17da6 <__gdtoa+0x12a6>
   172a1:	f2 0f 10 0d f7 a9 00 	movsd  0xa9f7(%rip),%xmm1        # 21ca0 <xdigs_lower.3329+0x60>
   172a8:	00 
   172a9:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   172ad:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   172b2:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   172b6:	66 0f ef d2          	pxor   %xmm2,%xmm2
   172ba:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   172be:	83 c2 30             	add    $0x30,%edx
   172c1:	41 88 14 24          	mov    %dl,(%r12)
   172c5:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   172c9:	f2 0f 5c cc          	subsd  %xmm4,%xmm1
   172cd:	66 0f 2f c8          	comisd %xmm0,%xmm1
   172d1:	0f 87 15 0d 00 00    	ja     17fec <__gdtoa+0x14ec>
   172d7:	f2 0f 10 25 a1 a9 00 	movsd  0xa9a1(%rip),%xmm4        # 21c80 <xdigs_lower.3329+0x40>
   172de:	00 
   172df:	f2 0f 10 1d a1 a9 00 	movsd  0xa9a1(%rip),%xmm3        # 21c88 <xdigs_lower.3329+0x48>
   172e6:	00 
   172e7:	eb 4d                	jmp    17336 <__gdtoa+0x836>
   172e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   172f0:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   172f7:	8d 56 01             	lea    0x1(%rsi),%edx
   172fa:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   17301:	44 39 d2             	cmp    %r10d,%edx
   17304:	0f 8d 61 08 00 00    	jge    17b6b <__gdtoa+0x106b>
   1730a:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1730e:	66 0f ef d2          	pxor   %xmm2,%xmm2
   17312:	48 83 c0 01          	add    $0x1,%rax
   17316:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   1731a:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   1731e:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   17322:	83 c2 30             	add    $0x30,%edx
   17325:	88 50 ff             	mov    %dl,-0x1(%rax)
   17328:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1732c:	66 0f 2f c8          	comisd %xmm0,%xmm1
   17330:	0f 87 b6 0c 00 00    	ja     17fec <__gdtoa+0x14ec>
   17336:	66 0f 28 d4          	movapd %xmm4,%xmm2
   1733a:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
   1733e:	66 0f 2f ca          	comisd %xmm2,%xmm1
   17342:	76 ac                	jbe    172f0 <__gdtoa+0x7f0>
   17344:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   17349:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   1734d:	41 83 c7 01          	add    $0x1,%r15d
   17351:	eb 15                	jmp    17368 <__gdtoa+0x868>
   17353:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17358:	49 39 cc             	cmp    %rcx,%r12
   1735b:	0f 84 ef 0b 00 00    	je     17f50 <__gdtoa+0x1450>
   17361:	0f b6 51 ff          	movzbl -0x1(%rcx),%edx
   17365:	48 89 c8             	mov    %rcx,%rax
   17368:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1736c:	80 fa 39             	cmp    $0x39,%dl
   1736f:	74 e7                	je     17358 <__gdtoa+0x858>
   17371:	83 c2 01             	add    $0x1,%edx
   17374:	88 11                	mov    %dl,(%rcx)
   17376:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1737d:	00 
   1737e:	e9 a5 fd ff ff       	jmp    17128 <__gdtoa+0x628>
   17383:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17388:	44 89 d8             	mov    %r11d,%eax
   1738b:	44 29 5c 24 50       	sub    %r11d,0x50(%rsp)
   17390:	f7 d8                	neg    %eax
   17392:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   17397:	45 31 db             	xor    %r11d,%r11d
   1739a:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1739e:	e9 f1 fb ff ff       	jmp    16f94 <__gdtoa+0x494>
   173a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   173a8:	8b 44 24 48          	mov    0x48(%rsp),%eax
   173ac:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   173b3:	00 
   173b4:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   173bb:	00 00 00 00 
   173bf:	85 c0                	test   %eax,%eax
   173c1:	0f 89 bb fb ff ff    	jns    16f82 <__gdtoa+0x482>
   173c7:	44 29 f7             	sub    %r14d,%edi
   173ca:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   173d1:	00 
   173d2:	8d 47 01             	lea    0x1(%rdi),%eax
   173d5:	89 44 24 50          	mov    %eax,0x50(%rsp)
   173d9:	e9 9b fb ff ff       	jmp    16f79 <__gdtoa+0x479>
   173de:	66 90                	xchg   %ax,%ax
   173e0:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
   173e7:	00 00 00 00 
   173eb:	83 e8 04             	sub    $0x4,%eax
   173ee:	89 44 24 10          	mov    %eax,0x10(%rsp)
   173f2:	e9 cc fb ff ff       	jmp    16fc3 <__gdtoa+0x4c3>
   173f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   173fe:	00 00 
   17400:	8b 44 24 60          	mov    0x60(%rsp),%eax
   17404:	85 c0                	test   %eax,%eax
   17406:	0f 84 44 03 00 00    	je     17750 <__gdtoa+0xc50>
   1740c:	8d 41 01             	lea    0x1(%rcx),%eax
   1740f:	41 8b 57 04          	mov    0x4(%r15),%edx
   17413:	41 29 c9             	sub    %ecx,%r9d
   17416:	44 29 f0             	sub    %r14d,%eax
   17419:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   17420:	41 39 d1             	cmp    %edx,%r9d
   17423:	0f 8d e7 05 00 00    	jge    17a10 <__gdtoa+0xf10>
   17429:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1742d:	8d 4e fd             	lea    -0x3(%rsi),%ecx
   17430:	83 e1 fd             	and    $0xfffffffd,%ecx
   17433:	0f 84 d7 05 00 00    	je     17a10 <__gdtoa+0xf10>
   17439:	8b 44 24 40          	mov    0x40(%rsp),%eax
   1743d:	29 d0                	sub    %edx,%eax
   1743f:	83 c0 01             	add    $0x1,%eax
   17442:	83 fe 01             	cmp    $0x1,%esi
   17445:	8b 74 24 38          	mov    0x38(%rsp),%esi
   17449:	0f 9f c1             	setg   %cl
   1744c:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   17453:	85 f6                	test   %esi,%esi
   17455:	0f 9f c2             	setg   %dl
   17458:	84 d1                	test   %dl,%cl
   1745a:	74 08                	je     17464 <__gdtoa+0x964>
   1745c:	39 f0                	cmp    %esi,%eax
   1745e:	0f 8f b7 05 00 00    	jg     17a1b <__gdtoa+0xf1b>
   17464:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   17468:	01 44 24 48          	add    %eax,0x48(%rsp)
   1746c:	8b 54 24 68          	mov    0x68(%rsp),%edx
   17470:	01 c8                	add    %ecx,%eax
   17472:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   17476:	89 44 24 50          	mov    %eax,0x50(%rsp)
   1747a:	bf 01 00 00 00       	mov    $0x1,%edi
   1747f:	89 94 24 90 00 00 00 	mov    %edx,0x90(%rsp)
   17486:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1748b:	e8 f0 e6 ff ff       	call   15b80 <__i2b_D2A>
   17490:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17495:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
   1749c:	48 85 c0             	test   %rax,%rax
   1749f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   174a4:	0f 84 de f9 ff ff    	je     16e88 <__gdtoa+0x388>
   174aa:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
   174ae:	85 c9                	test   %ecx,%ecx
   174b0:	7e 26                	jle    174d8 <__gdtoa+0x9d8>
   174b2:	8b 74 24 48          	mov    0x48(%rsp),%esi
   174b6:	85 f6                	test   %esi,%esi
   174b8:	7e 1e                	jle    174d8 <__gdtoa+0x9d8>
   174ba:	39 f1                	cmp    %esi,%ecx
   174bc:	89 f0                	mov    %esi,%eax
   174be:	0f 4e c1             	cmovle %ecx,%eax
   174c1:	29 44 24 50          	sub    %eax,0x50(%rsp)
   174c5:	29 c1                	sub    %eax,%ecx
   174c7:	29 c6                	sub    %eax,%esi
   174c9:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   174d0:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   174d4:	89 74 24 48          	mov    %esi,0x48(%rsp)
   174d8:	8b 44 24 68          	mov    0x68(%rsp),%eax
   174dc:	85 c0                	test   %eax,%eax
   174de:	7e 20                	jle    17500 <__gdtoa+0xa00>
   174e0:	8b 44 24 60          	mov    0x60(%rsp),%eax
   174e4:	85 c0                	test   %eax,%eax
   174e6:	0f 84 bc 07 00 00    	je     17ca8 <__gdtoa+0x11a8>
   174ec:	85 d2                	test   %edx,%edx
   174ee:	0f 8f 4c 08 00 00    	jg     17d40 <__gdtoa+0x1240>
   174f4:	8b 74 24 68          	mov    0x68(%rsp),%esi
   174f8:	29 d6                	sub    %edx,%esi
   174fa:	0f 85 7d 09 00 00    	jne    17e7d <__gdtoa+0x137d>
   17500:	bf 01 00 00 00       	mov    $0x1,%edi
   17505:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1750a:	e8 71 e6 ff ff       	call   15b80 <__i2b_D2A>
   1750f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   17514:	48 89 c7             	mov    %rax,%rdi
   17517:	48 85 c0             	test   %rax,%rax
   1751a:	0f 84 68 f9 ff ff    	je     16e88 <__gdtoa+0x388>
   17520:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17525:	45 85 db             	test   %r11d,%r11d
   17528:	0f 8f 4a 05 00 00    	jg     17a78 <__gdtoa+0xf78>
   1752e:	41 83 fe 01          	cmp    $0x1,%r14d
   17532:	75 0b                	jne    1753f <__gdtoa+0xa3f>
   17534:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   17539:	0f 8e 6d 0a 00 00    	jle    17fac <__gdtoa+0x14ac>
   1753f:	45 31 f6             	xor    %r14d,%r14d
   17542:	45 85 db             	test   %r11d,%r11d
   17545:	0f 85 5c 05 00 00    	jne    17aa7 <__gdtoa+0xfa7>
   1754b:	b8 1b 00 00 00       	mov    $0x1b,%eax
   17550:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
   17555:	2b 44 24 48          	sub    0x48(%rsp),%eax
   17559:	83 e0 1f             	and    $0x1f,%eax
   1755c:	41 01 c2             	add    %eax,%r10d
   1755f:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   17566:	41 89 c7             	mov    %eax,%r15d
   17569:	89 c6                	mov    %eax,%esi
   1756b:	45 85 d2             	test   %r10d,%r10d
   1756e:	0f 8f 5c 05 00 00    	jg     17ad0 <__gdtoa+0xfd0>
   17574:	03 74 24 48          	add    0x48(%rsp),%esi
   17578:	85 f6                	test   %esi,%esi
   1757a:	0f 8f 78 05 00 00    	jg     17af8 <__gdtoa+0xff8>
   17580:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   17587:	85 c0                	test   %eax,%eax
   17589:	0f 85 41 07 00 00    	jne    17cd0 <__gdtoa+0x11d0>
   1758f:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   17594:	45 85 d2             	test   %r10d,%r10d
   17597:	0f 8f e3 01 00 00    	jg     17780 <__gdtoa+0xc80>
   1759d:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   175a2:	0f 8e d8 01 00 00    	jle    17780 <__gdtoa+0xc80>
   175a8:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   175ad:	31 d2                	xor    %edx,%edx
   175af:	be 05 00 00 00       	mov    $0x5,%esi
   175b4:	e8 97 e4 ff ff       	call   15a50 <__multadd_D2A>
   175b9:	49 89 c6             	mov    %rax,%r14
   175bc:	48 85 c0             	test   %rax,%rax
   175bf:	0f 84 c3 f8 ff ff    	je     16e88 <__gdtoa+0x388>
   175c5:	44 8b 4c 24 38       	mov    0x38(%rsp),%r9d
   175ca:	45 85 c9             	test   %r9d,%r9d
   175cd:	0f 85 a9 00 00 00    	jne    1767c <__gdtoa+0xb7c>
   175d3:	48 89 c6             	mov    %rax,%rsi
   175d6:	4c 89 ef             	mov    %r13,%rdi
   175d9:	e8 b2 ea ff ff       	call   16090 <__cmp_D2A>
   175de:	85 c0                	test   %eax,%eax
   175e0:	0f 8e 96 00 00 00    	jle    1767c <__gdtoa+0xb7c>
   175e6:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   175eb:	41 83 c7 02          	add    $0x2,%r15d
   175ef:	e9 f4 fa ff ff       	jmp    170e8 <__gdtoa+0x5e8>
   175f4:	0f 1f 40 00          	nopl   0x0(%rax)
   175f8:	83 f8 03             	cmp    $0x3,%eax
   175fb:	0f 85 80 fb ff ff    	jne    17181 <__gdtoa+0x681>
   17601:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   17608:	00 
   17609:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1760d:	03 44 24 78          	add    0x78(%rsp),%eax
   17611:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   17618:	83 c0 01             	add    $0x1,%eax
   1761b:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1761f:	85 c0                	test   %eax,%eax
   17621:	0f 8e 39 04 00 00    	jle    17a60 <__gdtoa+0xf60>
   17627:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1762e:	89 c7                	mov    %eax,%edi
   17630:	e9 d9 f9 ff ff       	jmp    1700e <__gdtoa+0x50e>
   17635:	0f 1f 00             	nopl   (%rax)
   17638:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1763c:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   17641:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   17645:	7a 06                	jp     1764d <__gdtoa+0xb4d>
   17647:	0f 84 28 f7 ff ff    	je     16d75 <__gdtoa+0x275>
   1764d:	41 83 eb 01          	sub    $0x1,%r11d
   17651:	e9 1f f7 ff ff       	jmp    16d75 <__gdtoa+0x275>
   17656:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1765d:	00 00 00 
   17660:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   17667:	00 
   17668:	eb 9f                	jmp    17609 <__gdtoa+0xb09>
   1766a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17670:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   17677:	00 00 
   17679:	45 31 f6             	xor    %r14d,%r14d
   1767c:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   17681:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   17688:	00 
   17689:	4c 89 e0             	mov    %r12,%rax
   1768c:	41 f7 df             	neg    %r15d
   1768f:	e9 66 fa ff ff       	jmp    170fa <__gdtoa+0x5fa>
   17694:	0f 1f 40 00          	nopl   0x0(%rax)
   17698:	8b 74 24 78          	mov    0x78(%rsp),%esi
   1769c:	66 0f ef ff          	pxor   %xmm7,%xmm7
   176a0:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   176a7:	00 00 
   176a9:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   176b0:	01 00 00 00 
   176b4:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   176b9:	66 0f 28 c8          	movapd %xmm0,%xmm1
   176bd:	83 c6 01             	add    $0x1,%esi
   176c0:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   176c4:	41 89 f7             	mov    %esi,%r15d
   176c7:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   176cb:	66 0f ef c9          	pxor   %xmm1,%xmm1
   176cf:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   176d3:	8d 51 30             	lea    0x30(%rcx),%edx
   176d6:	41 88 14 24          	mov    %dl,(%r12)
   176da:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   176de:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   176e2:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   176e6:	0f 8b d8 0a 00 00    	jnp    181c4 <__gdtoa+0x16c4>
   176ec:	f2 0f 10 1d 94 a5 00 	movsd  0xa594(%rip),%xmm3        # 21c88 <xdigs_lower.3329+0x48>
   176f3:	00 
   176f4:	0f 1f 40 00          	nopl   0x0(%rax)
   176f8:	8b 94 24 a4 00 00 00 	mov    0xa4(%rsp),%edx
   176ff:	3b 54 24 38          	cmp    0x38(%rsp),%edx
   17703:	0f 84 77 04 00 00    	je     17b80 <__gdtoa+0x1080>
   17709:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1770d:	66 0f ef ed          	pxor   %xmm5,%xmm5
   17711:	83 c2 01             	add    $0x1,%edx
   17714:	48 83 c0 01          	add    $0x1,%rax
   17718:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   1771f:	66 0f 28 c8          	movapd %xmm0,%xmm1
   17723:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   17727:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   1772b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1772f:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   17733:	8d 51 30             	lea    0x30(%rcx),%edx
   17736:	88 50 ff             	mov    %dl,-0x1(%rax)
   17739:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   1773d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   17741:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   17745:	7a b1                	jp     176f8 <__gdtoa+0xbf8>
   17747:	0f 84 db f9 ff ff    	je     17128 <__gdtoa+0x628>
   1774d:	eb a9                	jmp    176f8 <__gdtoa+0xbf8>
   1774f:	90                   	nop
   17750:	8b 44 24 50          	mov    0x50(%rsp),%eax
   17754:	8b 54 24 68          	mov    0x68(%rsp),%edx
   17758:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1775f:	00 00 
   17761:	89 44 24 70          	mov    %eax,0x70(%rsp)
   17765:	e9 40 fd ff ff       	jmp    174aa <__gdtoa+0x9aa>
   1776a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17770:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   17777:	00 
   17778:	e9 6d f8 ff ff       	jmp    16fea <__gdtoa+0x4ea>
   1777d:	0f 1f 00             	nopl   (%rax)
   17780:	44 8b 44 24 60       	mov    0x60(%rsp),%r8d
   17785:	45 85 c0             	test   %r8d,%r8d
   17788:	0f 84 2a 04 00 00    	je     17bb8 <__gdtoa+0x10b8>
   1778e:	8b 74 24 70          	mov    0x70(%rsp),%esi
   17792:	44 01 fe             	add    %r15d,%esi
   17795:	85 f6                	test   %esi,%esi
   17797:	0f 8f 91 07 00 00    	jg     17f2e <__gdtoa+0x142e>
   1779d:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   177a2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   177a7:	45 85 f6             	test   %r14d,%r14d
   177aa:	0f 85 8c f6 ff ff    	jne    16e3c <__gdtoa+0x33c>
   177b0:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   177b5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   177ba:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   177bf:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   177c4:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   177c9:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
   177ce:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   177d3:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   177da:	01 00 00 00 
   177de:	e9 cc 00 00 00       	jmp    178af <__gdtoa+0xdaf>
   177e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   177e8:	48 89 c7             	mov    %rax,%rdi
   177eb:	e8 70 e1 ff ff       	call   15960 <__Bfree_D2A>
   177f0:	b9 01 00 00 00       	mov    $0x1,%ecx
   177f5:	45 85 f6             	test   %r14d,%r14d
   177f8:	0f 88 a9 08 00 00    	js     180a7 <__gdtoa+0x15a7>
   177fe:	44 0b 74 24 10       	or     0x10(%rsp),%r14d
   17803:	75 0e                	jne    17813 <__gdtoa+0xd13>
   17805:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1780a:	f6 00 01             	testb  $0x1,(%rax)
   1780d:	0f 84 94 08 00 00    	je     180a7 <__gdtoa+0x15a7>
   17813:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   17818:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1781c:	4d 89 f7             	mov    %r14,%r15
   1781f:	85 c9                	test   %ecx,%ecx
   17821:	7e 0b                	jle    1782e <__gdtoa+0xd2e>
   17823:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   17828:	0f 85 a1 09 00 00    	jne    181cf <__gdtoa+0x16cf>
   1782e:	0f b6 44 24 30       	movzbl 0x30(%rsp),%eax
   17833:	41 88 46 ff          	mov    %al,-0x1(%r14)
   17837:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1783b:	39 84 24 a4 00 00 00 	cmp    %eax,0xa4(%rsp)
   17842:	0f 84 d6 09 00 00    	je     1821e <__gdtoa+0x171e>
   17848:	4c 89 ef             	mov    %r13,%rdi
   1784b:	31 d2                	xor    %edx,%edx
   1784d:	be 0a 00 00 00       	mov    $0xa,%esi
   17852:	e8 f9 e1 ff ff       	call   15a50 <__multadd_D2A>
   17857:	49 89 c5             	mov    %rax,%r13
   1785a:	48 85 c0             	test   %rax,%rax
   1785d:	0f 84 25 f6 ff ff    	je     16e88 <__gdtoa+0x388>
   17863:	31 d2                	xor    %edx,%edx
   17865:	be 0a 00 00 00       	mov    $0xa,%esi
   1786a:	48 89 ef             	mov    %rbp,%rdi
   1786d:	4c 39 e5             	cmp    %r12,%rbp
   17870:	0f 84 7a 01 00 00    	je     179f0 <__gdtoa+0xef0>
   17876:	e8 d5 e1 ff ff       	call   15a50 <__multadd_D2A>
   1787b:	48 89 c5             	mov    %rax,%rbp
   1787e:	48 85 c0             	test   %rax,%rax
   17881:	0f 84 01 f6 ff ff    	je     16e88 <__gdtoa+0x388>
   17887:	4c 89 e7             	mov    %r12,%rdi
   1788a:	31 d2                	xor    %edx,%edx
   1788c:	be 0a 00 00 00       	mov    $0xa,%esi
   17891:	e8 ba e1 ff ff       	call   15a50 <__multadd_D2A>
   17896:	49 89 c4             	mov    %rax,%r12
   17899:	48 85 c0             	test   %rax,%rax
   1789c:	0f 84 e6 f5 ff ff    	je     16e88 <__gdtoa+0x388>
   178a2:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   178a9:	01 
   178aa:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   178af:	48 89 de             	mov    %rbx,%rsi
   178b2:	4c 89 ef             	mov    %r13,%rdi
   178b5:	e8 36 c2 ff ff       	call   13af0 <__quorem_D2A>
   178ba:	48 89 ee             	mov    %rbp,%rsi
   178bd:	4c 89 ef             	mov    %r13,%rdi
   178c0:	41 89 c7             	mov    %eax,%r15d
   178c3:	8d 40 30             	lea    0x30(%rax),%eax
   178c6:	89 44 24 30          	mov    %eax,0x30(%rsp)
   178ca:	e8 c1 e7 ff ff       	call   16090 <__cmp_D2A>
   178cf:	4c 89 e6             	mov    %r12,%rsi
   178d2:	48 89 df             	mov    %rbx,%rdi
   178d5:	41 89 c6             	mov    %eax,%r14d
   178d8:	e8 03 e8 ff ff       	call   160e0 <__diff_D2A>
   178dd:	48 85 c0             	test   %rax,%rax
   178e0:	0f 84 a2 f5 ff ff    	je     16e88 <__gdtoa+0x388>
   178e6:	8b 78 10             	mov    0x10(%rax),%edi
   178e9:	85 ff                	test   %edi,%edi
   178eb:	0f 85 f7 fe ff ff    	jne    177e8 <__gdtoa+0xce8>
   178f1:	48 89 c6             	mov    %rax,%rsi
   178f4:	4c 89 ef             	mov    %r13,%rdi
   178f7:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   178fc:	e8 8f e7 ff ff       	call   16090 <__cmp_D2A>
   17901:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17906:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1790a:	4c 89 c7             	mov    %r8,%rdi
   1790d:	e8 4e e0 ff ff       	call   15960 <__Bfree_D2A>
   17912:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   17916:	0b 4c 24 40          	or     0x40(%rsp),%ecx
   1791a:	0f 85 e5 0a 00 00    	jne    18405 <__gdtoa+0x1905>
   17920:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17925:	8b 00                	mov    (%rax),%eax
   17927:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1792b:	83 e0 01             	and    $0x1,%eax
   1792e:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   17932:	0f 85 bd fe ff ff    	jne    177f5 <__gdtoa+0xcf5>
   17938:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1793c:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   17941:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   17946:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1794b:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   17950:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   17955:	83 fa 39             	cmp    $0x39,%edx
   17958:	0f 84 b3 09 00 00    	je     18311 <__gdtoa+0x1811>
   1795e:	45 85 f6             	test   %r14d,%r14d
   17961:	0f 8e 77 0a 00 00    	jle    183de <__gdtoa+0x18de>
   17967:	41 8d 57 31          	lea    0x31(%r15),%edx
   1796b:	b9 20 00 00 00       	mov    $0x20,%ecx
   17970:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   17975:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1797a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   1797e:	88 16                	mov    %dl,(%rsi)
   17980:	48 8d 46 01          	lea    0x1(%rsi),%rax
   17984:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   17989:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1798e:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   17993:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17998:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1799d:	e8 be df ff ff       	call   15960 <__Bfree_D2A>
   179a2:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   179a7:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   179ac:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   179b1:	41 83 c7 01          	add    $0x1,%r15d
   179b5:	48 85 c9             	test   %rcx,%rcx
   179b8:	0f 84 6a f7 ff ff    	je     17128 <__gdtoa+0x628>
   179be:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   179c3:	4d 85 d2             	test   %r10,%r10
   179c6:	0f 84 48 f7 ff ff    	je     17114 <__gdtoa+0x614>
   179cc:	49 39 ca             	cmp    %rcx,%r10
   179cf:	0f 84 3f f7 ff ff    	je     17114 <__gdtoa+0x614>
   179d5:	4c 89 d7             	mov    %r10,%rdi
   179d8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   179dd:	e8 7e df ff ff       	call   15960 <__Bfree_D2A>
   179e2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   179e7:	e9 28 f7 ff ff       	jmp    17114 <__gdtoa+0x614>
   179ec:	0f 1f 40 00          	nopl   0x0(%rax)
   179f0:	e8 5b e0 ff ff       	call   15a50 <__multadd_D2A>
   179f5:	48 89 c5             	mov    %rax,%rbp
   179f8:	48 85 c0             	test   %rax,%rax
   179fb:	0f 84 87 f4 ff ff    	je     16e88 <__gdtoa+0x388>
   17a01:	49 89 c4             	mov    %rax,%r12
   17a04:	e9 99 fe ff ff       	jmp    178a2 <__gdtoa+0xda2>
   17a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17a10:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   17a15:	0f 8e 49 fa ff ff    	jle    17464 <__gdtoa+0x964>
   17a1b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   17a1f:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
   17a23:	83 e8 01             	sub    $0x1,%eax
   17a26:	39 c1                	cmp    %eax,%ecx
   17a28:	0f 8c d1 04 00 00    	jl     17eff <__gdtoa+0x13ff>
   17a2e:	29 c1                	sub    %eax,%ecx
   17a30:	89 ca                	mov    %ecx,%edx
   17a32:	8b 44 24 38          	mov    0x38(%rsp),%eax
   17a36:	85 c0                	test   %eax,%eax
   17a38:	0f 88 d4 04 00 00    	js     17f12 <__gdtoa+0x1412>
   17a3e:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   17a42:	01 44 24 48          	add    %eax,0x48(%rsp)
   17a46:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   17a4d:	01 c8                	add    %ecx,%eax
   17a4f:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   17a53:	89 44 24 50          	mov    %eax,0x50(%rsp)
   17a57:	e9 1e fa ff ff       	jmp    1747a <__gdtoa+0x97a>
   17a5c:	0f 1f 40 00          	nopl   0x0(%rax)
   17a60:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   17a67:	01 00 00 00 
   17a6b:	bf 01 00 00 00       	mov    $0x1,%edi
   17a70:	e9 99 f5 ff ff       	jmp    1700e <__gdtoa+0x50e>
   17a75:	0f 1f 00             	nopl   (%rax)
   17a78:	44 89 de             	mov    %r11d,%esi
   17a7b:	e8 60 e3 ff ff       	call   15de0 <__pow5mult_D2A>
   17a80:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17a85:	48 85 c0             	test   %rax,%rax
   17a88:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   17a8d:	0f 84 f5 f3 ff ff    	je     16e88 <__gdtoa+0x388>
   17a93:	41 83 fe 01          	cmp    $0x1,%r14d
   17a97:	75 0b                	jne    17aa4 <__gdtoa+0xfa4>
   17a99:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   17a9e:	0f 8e d1 05 00 00    	jle    18075 <__gdtoa+0x1575>
   17aa4:	45 31 f6             	xor    %r14d,%r14d
   17aa7:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   17aac:	8b 41 14             	mov    0x14(%rcx),%eax
   17aaf:	89 44 24 30          	mov    %eax,0x30(%rsp)
   17ab3:	83 e8 01             	sub    $0x1,%eax
   17ab6:	48 98                	cltq   
   17ab8:	8b 7c 81 18          	mov    0x18(%rcx,%rax,4),%edi
   17abc:	e8 5f e0 ff ff       	call   15b20 <__hi0bits_D2A>
   17ac1:	83 e8 04             	sub    $0x4,%eax
   17ac4:	e9 87 fa ff ff       	jmp    17550 <__gdtoa+0xa50>
   17ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17ad0:	4c 89 ef             	mov    %r13,%rdi
   17ad3:	44 89 d6             	mov    %r10d,%esi
   17ad6:	e8 75 e4 ff ff       	call   15f50 <__lshift_D2A>
   17adb:	49 89 c5             	mov    %rax,%r13
   17ade:	48 85 c0             	test   %rax,%rax
   17ae1:	0f 84 a1 f3 ff ff    	je     16e88 <__gdtoa+0x388>
   17ae7:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   17aee:	e9 81 fa ff ff       	jmp    17574 <__gdtoa+0xa74>
   17af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17af8:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   17afd:	e8 4e e4 ff ff       	call   15f50 <__lshift_D2A>
   17b02:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   17b07:	48 85 c0             	test   %rax,%rax
   17b0a:	0f 85 70 fa ff ff    	jne    17580 <__gdtoa+0xa80>
   17b10:	e9 73 f3 ff ff       	jmp    16e88 <__gdtoa+0x388>
   17b15:	66 0f 28 c8          	movapd %xmm0,%xmm1
   17b19:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   17b1d:	f2 0f 58 0d 6b a1 00 	addsd  0xa16b(%rip),%xmm1        # 21c90 <xdigs_lower.3329+0x50>
   17b24:	00 
   17b25:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   17b2a:	66 48 0f 7e c8       	movq   %xmm1,%rax
   17b2f:	48 c1 ea 20          	shr    $0x20,%rdx
   17b33:	89 c0                	mov    %eax,%eax
   17b35:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   17b3b:	48 c1 e2 20          	shl    $0x20,%rdx
   17b3f:	48 09 d0             	or     %rdx,%rax
   17b42:	f2 0f 5c 05 4e a1 00 	subsd  0xa14e(%rip),%xmm0        # 21c98 <xdigs_lower.3329+0x58>
   17b49:	00 
   17b4a:	66 48 0f 6e c8       	movq   %rax,%xmm1
   17b4f:	66 0f 2f c1          	comisd %xmm1,%xmm0
   17b53:	0f 87 05 04 00 00    	ja     17f5e <__gdtoa+0x145e>
   17b59:	66 0f 57 0d 4f a1 00 	xorpd  0xa14f(%rip),%xmm1        # 21cb0 <xdigs_lower.3329+0x70>
   17b60:	00 
   17b61:	66 0f 2f c8          	comisd %xmm0,%xmm1
   17b65:	0f 87 05 fb ff ff    	ja     17670 <__gdtoa+0xb70>
   17b6b:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   17b72:	00 
   17b73:	e9 ff f4 ff ff       	jmp    17077 <__gdtoa+0x577>
   17b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17b7f:	00 
   17b80:	8b 7c 24 5c          	mov    0x5c(%rsp),%edi
   17b84:	85 ff                	test   %edi,%edi
   17b86:	0f 84 e9 03 00 00    	je     17f75 <__gdtoa+0x1475>
   17b8c:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   17b93:	00 
   17b94:	83 ff 01             	cmp    $0x1,%edi
   17b97:	0f 85 8b f5 ff ff    	jne    17128 <__gdtoa+0x628>
   17b9d:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   17ba1:	e9 c2 f7 ff ff       	jmp    17368 <__gdtoa+0x868>
   17ba6:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   17bad:	89 44 24 38          	mov    %eax,0x38(%rsp)
   17bb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17bb8:	48 89 e8             	mov    %rbp,%rax
   17bbb:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   17bc0:	4c 89 ed             	mov    %r13,%rbp
   17bc3:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   17bc8:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   17bcd:	4d 89 e7             	mov    %r12,%r15
   17bd0:	49 89 c5             	mov    %rax,%r13
   17bd3:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   17bda:	01 00 00 00 
   17bde:	eb 23                	jmp    17c03 <__gdtoa+0x1103>
   17be0:	48 89 ef             	mov    %rbp,%rdi
   17be3:	31 d2                	xor    %edx,%edx
   17be5:	be 0a 00 00 00       	mov    $0xa,%esi
   17bea:	e8 61 de ff ff       	call   15a50 <__multadd_D2A>
   17bef:	48 89 c5             	mov    %rax,%rbp
   17bf2:	48 85 c0             	test   %rax,%rax
   17bf5:	0f 84 8d f2 ff ff    	je     16e88 <__gdtoa+0x388>
   17bfb:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   17c02:	01 
   17c03:	48 89 de             	mov    %rbx,%rsi
   17c06:	48 89 ef             	mov    %rbp,%rdi
   17c09:	49 83 c7 01          	add    $0x1,%r15
   17c0d:	e8 de be ff ff       	call   13af0 <__quorem_D2A>
   17c12:	8d 50 30             	lea    0x30(%rax),%edx
   17c15:	41 88 57 ff          	mov    %dl,-0x1(%r15)
   17c19:	44 39 b4 24 a4 00 00 	cmp    %r14d,0xa4(%rsp)
   17c20:	00 
   17c21:	7c bd                	jl     17be0 <__gdtoa+0x10e0>
   17c23:	4c 89 e8             	mov    %r13,%rax
   17c26:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   17c2b:	49 89 ed             	mov    %rbp,%r13
   17c2e:	45 31 d2             	xor    %r10d,%r10d
   17c31:	48 89 c5             	mov    %rax,%rbp
   17c34:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   17c38:	85 c0                	test   %eax,%eax
   17c3a:	0f 84 d2 03 00 00    	je     18012 <__gdtoa+0x1512>
   17c40:	83 f8 02             	cmp    $0x2,%eax
   17c43:	0f 84 14 04 00 00    	je     1805d <__gdtoa+0x155d>
   17c49:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   17c4e:	7f 31                	jg     17c81 <__gdtoa+0x1181>
   17c50:	41 8b 4d 18          	mov    0x18(%r13),%ecx
   17c54:	85 c9                	test   %ecx,%ecx
   17c56:	75 29                	jne    17c81 <__gdtoa+0x1181>
   17c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17c5f:	00 
   17c60:	4c 89 f8             	mov    %r15,%rax
   17c63:	49 83 ef 01          	sub    $0x1,%r15
   17c67:	41 80 3f 30          	cmpb   $0x30,(%r15)
   17c6b:	74 f3                	je     17c60 <__gdtoa+0x1160>
   17c6d:	e9 1c fd ff ff       	jmp    1798e <__gdtoa+0xe8e>
   17c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17c78:	4d 39 fc             	cmp    %r15,%r12
   17c7b:	0f 84 54 03 00 00    	je     17fd5 <__gdtoa+0x14d5>
   17c81:	4c 89 f8             	mov    %r15,%rax
   17c84:	4d 8d 7f ff          	lea    -0x1(%r15),%r15
   17c88:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   17c8c:	80 fa 39             	cmp    $0x39,%dl
   17c8f:	74 e7                	je     17c78 <__gdtoa+0x1178>
   17c91:	83 c2 01             	add    $0x1,%edx
   17c94:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   17c9b:	00 
   17c9c:	41 88 17             	mov    %dl,(%r15)
   17c9f:	e9 ea fc ff ff       	jmp    1798e <__gdtoa+0xe8e>
   17ca4:	0f 1f 40 00          	nopl   0x0(%rax)
   17ca8:	8b 74 24 68          	mov    0x68(%rsp),%esi
   17cac:	4c 89 ef             	mov    %r13,%rdi
   17caf:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   17cb4:	e8 27 e1 ff ff       	call   15de0 <__pow5mult_D2A>
   17cb9:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17cbe:	48 85 c0             	test   %rax,%rax
   17cc1:	49 89 c5             	mov    %rax,%r13
   17cc4:	0f 85 36 f8 ff ff    	jne    17500 <__gdtoa+0xa00>
   17cca:	e9 b9 f1 ff ff       	jmp    16e88 <__gdtoa+0x388>
   17ccf:	90                   	nop
   17cd0:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   17cd5:	4c 89 ef             	mov    %r13,%rdi
   17cd8:	e8 b3 e3 ff ff       	call   16090 <__cmp_D2A>
   17cdd:	85 c0                	test   %eax,%eax
   17cdf:	0f 89 aa f8 ff ff    	jns    1758f <__gdtoa+0xa8f>
   17ce5:	4c 89 ef             	mov    %r13,%rdi
   17ce8:	31 d2                	xor    %edx,%edx
   17cea:	be 0a 00 00 00       	mov    $0xa,%esi
   17cef:	83 6c 24 78 01       	subl   $0x1,0x78(%rsp)
   17cf4:	e8 57 dd ff ff       	call   15a50 <__multadd_D2A>
   17cf9:	49 89 c5             	mov    %rax,%r13
   17cfc:	48 85 c0             	test   %rax,%rax
   17cff:	0f 84 83 f1 ff ff    	je     16e88 <__gdtoa+0x388>
   17d05:	44 8b 5c 24 60       	mov    0x60(%rsp),%r11d
   17d0a:	45 85 db             	test   %r11d,%r11d
   17d0d:	0f 85 ba 05 00 00    	jne    182cd <__gdtoa+0x17cd>
   17d13:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   17d1a:	85 d2                	test   %edx,%edx
   17d1c:	0f 8f 84 fe ff ff    	jg     17ba6 <__gdtoa+0x10a6>
   17d22:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   17d27:	0f 8e 79 fe ff ff    	jle    17ba6 <__gdtoa+0x10a6>
   17d2d:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   17d34:	89 44 24 38          	mov    %eax,0x38(%rsp)
   17d38:	e9 6b f8 ff ff       	jmp    175a8 <__gdtoa+0xaa8>
   17d3d:	0f 1f 00             	nopl   (%rax)
   17d40:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17d45:	89 d6                	mov    %edx,%esi
   17d47:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   17d4e:	00 
   17d4f:	89 54 24 7c          	mov    %edx,0x7c(%rsp)
   17d53:	e8 88 e0 ff ff       	call   15de0 <__pow5mult_D2A>
   17d58:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17d5d:	48 85 c0             	test   %rax,%rax
   17d60:	0f 84 22 f1 ff ff    	je     16e88 <__gdtoa+0x388>
   17d66:	4c 89 ee             	mov    %r13,%rsi
   17d69:	48 89 c7             	mov    %rax,%rdi
   17d6c:	e8 3f de ff ff       	call   15bb0 <__mult_D2A>
   17d71:	48 85 c0             	test   %rax,%rax
   17d74:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   17d7b:	00 
   17d7c:	0f 84 06 f1 ff ff    	je     16e88 <__gdtoa+0x388>
   17d82:	4c 89 ef             	mov    %r13,%rdi
   17d85:	e8 d6 db ff ff       	call   15960 <__Bfree_D2A>
   17d8a:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   17d91:	00 
   17d92:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
   17d96:	44 8b 9c 24 90 00 00 	mov    0x90(%rsp),%r11d
   17d9d:	00 
   17d9e:	49 89 c5             	mov    %rax,%r13
   17da1:	e9 4e f7 ff ff       	jmp    174f4 <__gdtoa+0x9f4>
   17da6:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
   17daa:	66 0f 28 c8          	movapd %xmm0,%xmm1
   17dae:	4c 89 e0             	mov    %r12,%rax
   17db1:	31 ff                	xor    %edi,%edi
   17db3:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   17dba:	01 00 00 00 
   17dbe:	f2 0f 10 15 c2 9e 00 	movsd  0x9ec2(%rip),%xmm2        # 21c88 <xdigs_lower.3329+0x48>
   17dc5:	00 
   17dc6:	eb 19                	jmp    17de1 <__gdtoa+0x12e1>
   17dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17dcf:	00 
   17dd0:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   17dd4:	83 c6 01             	add    $0x1,%esi
   17dd7:	44 89 c7             	mov    %r8d,%edi
   17dda:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
   17de1:	f2 0f 2c d1          	cvttsd2si %xmm1,%edx
   17de5:	85 d2                	test   %edx,%edx
   17de7:	74 0f                	je     17df8 <__gdtoa+0x12f8>
   17de9:	66 0f ef db          	pxor   %xmm3,%xmm3
   17ded:	44 89 c7             	mov    %r8d,%edi
   17df0:	f2 0f 2a da          	cvtsi2sd %edx,%xmm3
   17df4:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
   17df8:	48 83 c0 01          	add    $0x1,%rax
   17dfc:	83 c2 30             	add    $0x30,%edx
   17dff:	88 50 ff             	mov    %dl,-0x1(%rax)
   17e02:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   17e09:	44 39 d6             	cmp    %r10d,%esi
   17e0c:	75 c2                	jne    17dd0 <__gdtoa+0x12d0>
   17e0e:	40 84 ff             	test   %dil,%dil
   17e11:	0f 84 87 02 00 00    	je     1809e <__gdtoa+0x159e>
   17e17:	f2 0f 10 05 81 9e 00 	movsd  0x9e81(%rip),%xmm0        # 21ca0 <xdigs_lower.3329+0x60>
   17e1e:	00 
   17e1f:	66 0f 28 d4          	movapd %xmm4,%xmm2
   17e23:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
   17e27:	66 0f 2f ca          	comisd %xmm2,%xmm1
   17e2b:	0f 87 5f 02 00 00    	ja     18090 <__gdtoa+0x1590>
   17e31:	f2 0f 5c c4          	subsd  %xmm4,%xmm0
   17e35:	66 0f 2f c1          	comisd %xmm1,%xmm0
   17e39:	0f 86 2c fd ff ff    	jbe    17b6b <__gdtoa+0x106b>
   17e3f:	66 0f ef ff          	pxor   %xmm7,%xmm7
   17e43:	48 89 c2             	mov    %rax,%rdx
   17e46:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   17e4a:	7a 06                	jp     17e52 <__gdtoa+0x1352>
   17e4c:	0f 84 e7 04 00 00    	je     18339 <__gdtoa+0x1839>
   17e52:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   17e56:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   17e5d:	00 
   17e5e:	8d 70 01             	lea    0x1(%rax),%esi
   17e61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17e68:	48 89 d0             	mov    %rdx,%rax
   17e6b:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
   17e6f:	80 78 ff 30          	cmpb   $0x30,-0x1(%rax)
   17e73:	74 f3                	je     17e68 <__gdtoa+0x1368>
   17e75:	41 89 f7             	mov    %esi,%r15d
   17e78:	e9 ab f2 ff ff       	jmp    17128 <__gdtoa+0x628>
   17e7d:	4c 89 ef             	mov    %r13,%rdi
   17e80:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
   17e85:	e8 56 df ff ff       	call   15de0 <__pow5mult_D2A>
   17e8a:	44 8b 5c 24 68       	mov    0x68(%rsp),%r11d
   17e8f:	48 85 c0             	test   %rax,%rax
   17e92:	49 89 c5             	mov    %rax,%r13
   17e95:	0f 85 65 f6 ff ff    	jne    17500 <__gdtoa+0xa00>
   17e9b:	e9 e8 ef ff ff       	jmp    16e88 <__gdtoa+0x388>
   17ea0:	85 f6                	test   %esi,%esi
   17ea2:	0f 84 6d fc ff ff    	je     17b15 <__gdtoa+0x1015>
   17ea8:	44 8b 94 24 9c 00 00 	mov    0x9c(%rsp),%r10d
   17eaf:	00 
   17eb0:	45 85 d2             	test   %r10d,%r10d
   17eb3:	0f 8e b2 fc ff ff    	jle    17b6b <__gdtoa+0x106b>
   17eb9:	f2 0f 59 05 c7 9d 00 	mulsd  0x9dc7(%rip),%xmm0        # 21c88 <xdigs_lower.3329+0x48>
   17ec0:	00 
   17ec1:	f2 0f 10 0d 6f a0 00 	movsd  0xa06f(%rip),%xmm1        # 21f38 <_C_ctype_+0x118>
   17ec8:	00 
   17ec9:	c7 44 24 5c ff ff ff 	movl   $0xffffffff,0x5c(%rsp)
   17ed0:	ff 
   17ed1:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   17ed5:	f2 0f 58 0d b3 9d 00 	addsd  0x9db3(%rip),%xmm1        # 21c90 <xdigs_lower.3329+0x50>
   17edc:	00 
   17edd:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   17ee2:	66 48 0f 7e c8       	movq   %xmm1,%rax
   17ee7:	48 c1 ea 20          	shr    $0x20,%rdx
   17eeb:	89 c0                	mov    %eax,%eax
   17eed:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   17ef3:	48 c1 e2 20          	shl    $0x20,%rdx
   17ef7:	48 09 d0             	or     %rdx,%rax
   17efa:	e9 7f f3 ff ff       	jmp    1727e <__gdtoa+0x77e>
   17eff:	44 2b 5c 24 68       	sub    0x68(%rsp),%r11d
   17f04:	31 d2                	xor    %edx,%edx
   17f06:	89 44 24 68          	mov    %eax,0x68(%rsp)
   17f0a:	41 01 c3             	add    %eax,%r11d
   17f0d:	e9 20 fb ff ff       	jmp    17a32 <__gdtoa+0xf32>
   17f12:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   17f19:	00 00 00 00 
   17f1d:	8b 44 24 50          	mov    0x50(%rsp),%eax
   17f21:	2b 44 24 38          	sub    0x38(%rsp),%eax
   17f25:	89 44 24 70          	mov    %eax,0x70(%rsp)
   17f29:	e9 4c f5 ff ff       	jmp    1747a <__gdtoa+0x97a>
   17f2e:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17f33:	e8 18 e0 ff ff       	call   15f50 <__lshift_D2A>
   17f38:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   17f3d:	48 85 c0             	test   %rax,%rax
   17f40:	0f 85 57 f8 ff ff    	jne    1779d <__gdtoa+0xc9d>
   17f46:	e9 3d ef ff ff       	jmp    16e88 <__gdtoa+0x388>
   17f4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17f50:	41 83 c7 01          	add    $0x1,%r15d
   17f54:	ba 31 00 00 00       	mov    $0x31,%edx
   17f59:	e9 16 f4 ff ff       	jmp    17374 <__gdtoa+0x874>
   17f5e:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   17f65:	00 00 
   17f67:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   17f6d:	45 31 f6             	xor    %r14d,%r14d
   17f70:	e9 73 f1 ff ff       	jmp    170e8 <__gdtoa+0x5e8>
   17f75:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   17f79:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   17f7d:	66 0f 2f c2          	comisd %xmm2,%xmm0
   17f81:	0f 87 e1 f3 ff ff    	ja     17368 <__gdtoa+0x868>
   17f87:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
   17f8b:	7a 0b                	jp     17f98 <__gdtoa+0x1498>
   17f8d:	75 09                	jne    17f98 <__gdtoa+0x1498>
   17f8f:	80 e1 01             	and    $0x1,%cl
   17f92:	0f 85 d0 f3 ff ff    	jne    17368 <__gdtoa+0x868>
   17f98:	f3 0f 1e fa          	endbr64 
   17f9c:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   17fa3:	00 
   17fa4:	48 89 c2             	mov    %rax,%rdx
   17fa7:	e9 bc fe ff ff       	jmp    17e68 <__gdtoa+0x1368>
   17fac:	41 8b 47 04          	mov    0x4(%r15),%eax
   17fb0:	45 31 f6             	xor    %r14d,%r14d
   17fb3:	83 c0 01             	add    $0x1,%eax
   17fb6:	3b 44 24 30          	cmp    0x30(%rsp),%eax
   17fba:	0f 8d 82 f5 ff ff    	jge    17542 <__gdtoa+0xa42>
   17fc0:	83 44 24 50 01       	addl   $0x1,0x50(%rsp)
   17fc5:	41 be 01 00 00 00    	mov    $0x1,%r14d
   17fcb:	83 44 24 48 01       	addl   $0x1,0x48(%rsp)
   17fd0:	e9 6d f5 ff ff       	jmp    17542 <__gdtoa+0xa42>
   17fd5:	83 44 24 78 01       	addl   $0x1,0x78(%rsp)
   17fda:	41 c6 04 24 31       	movb   $0x31,(%r12)
   17fdf:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   17fe6:	00 
   17fe7:	e9 a2 f9 ff ff       	jmp    1798e <__gdtoa+0xe8e>
   17fec:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   17ff1:	66 0f ef ff          	pxor   %xmm7,%xmm7
   17ff5:	41 83 c7 01          	add    $0x1,%r15d
   17ff9:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   17ffd:	7a 06                	jp     18005 <__gdtoa+0x1505>
   17fff:	0f 84 3c 02 00 00    	je     18241 <__gdtoa+0x1741>
   18005:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1800c:	00 
   1800d:	e9 16 f1 ff ff       	jmp    17128 <__gdtoa+0x628>
   18012:	4c 89 ef             	mov    %r13,%rdi
   18015:	be 01 00 00 00       	mov    $0x1,%esi
   1801a:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1801f:	89 54 24 10          	mov    %edx,0x10(%rsp)
   18023:	e8 28 df ff ff       	call   15f50 <__lshift_D2A>
   18028:	49 89 c5             	mov    %rax,%r13
   1802b:	48 85 c0             	test   %rax,%rax
   1802e:	0f 84 54 ee ff ff    	je     16e88 <__gdtoa+0x388>
   18034:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18039:	48 89 c7             	mov    %rax,%rdi
   1803c:	e8 4f e0 ff ff       	call   16090 <__cmp_D2A>
   18041:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   18046:	85 c0                	test   %eax,%eax
   18048:	0f 8f 33 fc ff ff    	jg     17c81 <__gdtoa+0x1181>
   1804e:	75 0d                	jne    1805d <__gdtoa+0x155d>
   18050:	8b 54 24 10          	mov    0x10(%rsp),%edx
   18054:	80 e2 01             	and    $0x1,%dl
   18057:	0f 85 24 fc ff ff    	jne    17c81 <__gdtoa+0x1181>
   1805d:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   18062:	0f 8e e5 02 00 00    	jle    1834d <__gdtoa+0x184d>
   18068:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1806f:	00 
   18070:	e9 eb fb ff ff       	jmp    17c60 <__gdtoa+0x1160>
   18075:	41 8b 47 04          	mov    0x4(%r15),%eax
   18079:	83 c0 01             	add    $0x1,%eax
   1807c:	39 44 24 30          	cmp    %eax,0x30(%rsp)
   18080:	0f 8f 3a ff ff ff    	jg     17fc0 <__gdtoa+0x14c0>
   18086:	e9 19 fa ff ff       	jmp    17aa4 <__gdtoa+0xfa4>
   1808b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18090:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   18095:	41 83 c7 01          	add    $0x1,%r15d
   18099:	e9 ca f2 ff ff       	jmp    17368 <__gdtoa+0x868>
   1809e:	66 0f 28 c8          	movapd %xmm0,%xmm1
   180a2:	e9 70 fd ff ff       	jmp    17e17 <__gdtoa+0x1317>
   180a7:	8b 74 24 5c          	mov    0x5c(%rsp),%esi
   180ab:	8b 54 24 30          	mov    0x30(%rsp),%edx
   180af:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   180b4:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   180b9:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   180be:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   180c3:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   180c8:	85 f6                	test   %esi,%esi
   180ca:	0f 84 7e 01 00 00    	je     1824e <__gdtoa+0x174e>
   180d0:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   180d5:	0f 8e 8f 02 00 00    	jle    1836a <__gdtoa+0x186a>
   180db:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   180e0:	0f 84 c2 01 00 00    	je     182a8 <__gdtoa+0x17a8>
   180e6:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   180eb:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
   180f0:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   180f5:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   180fa:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   180ff:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   18104:	eb 57                	jmp    1815d <__gdtoa+0x165d>
   18106:	41 88 56 ff          	mov    %dl,-0x1(%r14)
   1810a:	be 0a 00 00 00       	mov    $0xa,%esi
   1810f:	31 d2                	xor    %edx,%edx
   18111:	4c 89 e7             	mov    %r12,%rdi
   18114:	e8 37 d9 ff ff       	call   15a50 <__multadd_D2A>
   18119:	48 89 c3             	mov    %rax,%rbx
   1811c:	48 85 c0             	test   %rax,%rax
   1811f:	0f 84 63 ed ff ff    	je     16e88 <__gdtoa+0x388>
   18125:	4c 39 e5             	cmp    %r12,%rbp
   18128:	4c 89 ef             	mov    %r13,%rdi
   1812b:	be 0a 00 00 00       	mov    $0xa,%esi
   18130:	48 0f 44 e8          	cmove  %rax,%rbp
   18134:	31 d2                	xor    %edx,%edx
   18136:	e8 15 d9 ff ff       	call   15a50 <__multadd_D2A>
   1813b:	49 89 c5             	mov    %rax,%r13
   1813e:	48 85 c0             	test   %rax,%rax
   18141:	0f 84 41 ed ff ff    	je     16e88 <__gdtoa+0x388>
   18147:	4c 89 fe             	mov    %r15,%rsi
   1814a:	48 89 c7             	mov    %rax,%rdi
   1814d:	49 89 dc             	mov    %rbx,%r12
   18150:	e8 9b b9 ff ff       	call   13af0 <__quorem_D2A>
   18155:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1815a:	8d 50 30             	lea    0x30(%rax),%edx
   1815d:	4c 89 e6             	mov    %r12,%rsi
   18160:	4c 89 ff             	mov    %r15,%rdi
   18163:	89 54 24 10          	mov    %edx,0x10(%rsp)
   18167:	e8 24 df ff ff       	call   16090 <__cmp_D2A>
   1816c:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   18171:	8b 54 24 10          	mov    0x10(%rsp),%edx
   18175:	85 c0                	test   %eax,%eax
   18177:	4c 8d 73 01          	lea    0x1(%rbx),%r14
   1817b:	7f 89                	jg     18106 <__gdtoa+0x1606>
   1817d:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   18182:	49 89 ea             	mov    %rbp,%r10
   18185:	4c 89 e0             	mov    %r12,%rax
   18188:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1818d:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   18192:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   18197:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1819c:	83 fa 39             	cmp    $0x39,%edx
   1819f:	0f 84 75 01 00 00    	je     1831a <__gdtoa+0x181a>
   181a5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   181aa:	83 c2 01             	add    $0x1,%edx
   181ad:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   181b4:	00 
   181b5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   181ba:	4c 89 f0             	mov    %r14,%rax
   181bd:	88 11                	mov    %dl,(%rcx)
   181bf:	e9 ca f7 ff ff       	jmp    1798e <__gdtoa+0xe8e>
   181c4:	0f 84 5e ef ff ff    	je     17128 <__gdtoa+0x628>
   181ca:	e9 1d f5 ff ff       	jmp    176ec <__gdtoa+0xbec>
   181cf:	8b 54 24 30          	mov    0x30(%rsp),%edx
   181d3:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   181d8:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   181dd:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   181e2:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   181e7:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   181ec:	83 fa 39             	cmp    $0x39,%edx
   181ef:	0f 84 25 01 00 00    	je     1831a <__gdtoa+0x181a>
   181f5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   181fa:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   181ff:	83 c2 01             	add    $0x1,%edx
   18202:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   18209:	00 
   1820a:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1820f:	88 10                	mov    %dl,(%rax)
   18211:	4c 89 f0             	mov    %r14,%rax
   18214:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   18219:	e9 70 f7 ff ff       	jmp    1798e <__gdtoa+0xe8e>
   1821e:	4c 89 e0             	mov    %r12,%rax
   18221:	49 89 ea             	mov    %rbp,%r10
   18224:	8b 54 24 30          	mov    0x30(%rsp),%edx
   18228:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1822d:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   18232:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   18237:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1823c:	e9 f3 f9 ff ff       	jmp    17c34 <__gdtoa+0x1134>
   18241:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   18248:	00 
   18249:	e9 da ee ff ff       	jmp    17128 <__gdtoa+0x628>
   1824e:	85 c9                	test   %ecx,%ecx
   18250:	7e 4b                	jle    1829d <__gdtoa+0x179d>
   18252:	4c 89 ef             	mov    %r13,%rdi
   18255:	be 01 00 00 00       	mov    $0x1,%esi
   1825a:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1825e:	e8 ed dc ff ff       	call   15f50 <__lshift_D2A>
   18263:	49 89 c5             	mov    %rax,%r13
   18266:	48 85 c0             	test   %rax,%rax
   18269:	0f 84 19 ec ff ff    	je     16e88 <__gdtoa+0x388>
   1826f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18274:	48 89 c7             	mov    %rax,%rdi
   18277:	e8 14 de ff ff       	call   16090 <__cmp_D2A>
   1827c:	8b 54 24 10          	mov    0x10(%rsp),%edx
   18280:	85 c0                	test   %eax,%eax
   18282:	0f 8e 3e 01 00 00    	jle    183c6 <__gdtoa+0x18c6>
   18288:	83 fa 39             	cmp    $0x39,%edx
   1828b:	0f 84 80 00 00 00    	je     18311 <__gdtoa+0x1811>
   18291:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   18298:	00 
   18299:	41 8d 57 31          	lea    0x31(%r15),%edx
   1829d:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   182a2:	0f 8e f2 00 00 00    	jle    1839a <__gdtoa+0x189a>
   182a8:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   182ad:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   182b2:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   182b9:	00 
   182ba:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   182bf:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   182c4:	4c 8d 70 01          	lea    0x1(%rax),%r14
   182c8:	e9 e8 fe ff ff       	jmp    181b5 <__gdtoa+0x16b5>
   182cd:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   182d2:	31 d2                	xor    %edx,%edx
   182d4:	be 0a 00 00 00       	mov    $0xa,%esi
   182d9:	e8 72 d7 ff ff       	call   15a50 <__multadd_D2A>
   182de:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   182e3:	48 85 c0             	test   %rax,%rax
   182e6:	0f 84 9c eb ff ff    	je     16e88 <__gdtoa+0x388>
   182ec:	83 bc 24 9c 00 00 00 	cmpl   $0x0,0x9c(%rsp)
   182f3:	00 
   182f4:	7f 0b                	jg     18301 <__gdtoa+0x1801>
   182f6:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   182fb:	0f 8f 2c fa ff ff    	jg     17d2d <__gdtoa+0x122d>
   18301:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   18308:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1830c:	e9 7d f4 ff ff       	jmp    1778e <__gdtoa+0xc8e>
   18311:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18316:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1831a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1831f:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   18324:	4d 89 f7             	mov    %r14,%r15
   18327:	c6 00 39             	movb   $0x39,(%rax)
   1832a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1832f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18334:	e9 48 f9 ff ff       	jmp    17c81 <__gdtoa+0x1181>
   18339:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1833d:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   18344:	00 
   18345:	8d 70 01             	lea    0x1(%rax),%esi
   18348:	e9 1b fb ff ff       	jmp    17e68 <__gdtoa+0x1368>
   1834d:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   18352:	b8 10 00 00 00       	mov    $0x10,%eax
   18357:	0f 44 44 24 20       	cmove  0x20(%rsp),%eax
   1835c:	89 44 24 20          	mov    %eax,0x20(%rsp)
   18360:	e9 fb f8 ff ff       	jmp    17c60 <__gdtoa+0x1160>
   18365:	e8 e6 67 ff ff       	call   eb50 <__stack_chk_fail>
   1836a:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   1836f:	0f 85 66 fd ff ff    	jne    180db <__gdtoa+0x15db>
   18375:	85 c9                	test   %ecx,%ecx
   18377:	0f 8f d5 fe ff ff    	jg     18252 <__gdtoa+0x1752>
   1837d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   18382:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   18387:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1838c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18391:	4c 8d 70 01          	lea    0x1(%rax),%r14
   18395:	e9 1b fe ff ff       	jmp    181b5 <__gdtoa+0x16b5>
   1839a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1839f:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   183a4:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   183a9:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   183ae:	74 3f                	je     183ef <__gdtoa+0x18ef>
   183b0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   183b5:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   183bc:	00 
   183bd:	4c 8d 70 01          	lea    0x1(%rax),%r14
   183c1:	e9 ef fd ff ff       	jmp    181b5 <__gdtoa+0x16b5>
   183c6:	75 09                	jne    183d1 <__gdtoa+0x18d1>
   183c8:	f6 c2 01             	test   $0x1,%dl
   183cb:	0f 85 b7 fe ff ff    	jne    18288 <__gdtoa+0x1788>
   183d1:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   183d8:	00 
   183d9:	e9 bf fe ff ff       	jmp    1829d <__gdtoa+0x179d>
   183de:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   183e3:	7e 29                	jle    1840e <__gdtoa+0x190e>
   183e5:	b9 10 00 00 00       	mov    $0x10,%ecx
   183ea:	e9 81 f5 ff ff       	jmp    17970 <__gdtoa+0xe70>
   183ef:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   183f3:	89 44 24 20          	mov    %eax,0x20(%rsp)
   183f7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   183fc:	4c 8d 70 01          	lea    0x1(%rax),%r14
   18400:	e9 b0 fd ff ff       	jmp    181b5 <__gdtoa+0x16b5>
   18405:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   18409:	e9 e7 f3 ff ff       	jmp    177f5 <__gdtoa+0xcf5>
   1840e:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   18413:	b8 10 00 00 00       	mov    $0x10,%eax
   18418:	0f 45 c8             	cmovne %eax,%ecx
   1841b:	e9 50 f5 ff ff       	jmp    17970 <__gdtoa+0xe70>

0000000000018420 <__rshift_D2A>:
   18420:	f3 0f 1e fa          	endbr64 
   18424:	41 54                	push   %r12
   18426:	49 89 f9             	mov    %rdi,%r9
   18429:	55                   	push   %rbp
   1842a:	53                   	push   %rbx
   1842b:	89 f3                	mov    %esi,%ebx
   1842d:	4c 63 5f 14          	movslq 0x14(%rdi),%r11
   18431:	c1 fb 05             	sar    $0x5,%ebx
   18434:	41 39 db             	cmp    %ebx,%r11d
   18437:	7e 77                	jle    184b0 <__rshift_D2A+0x90>
   18439:	48 8d 6f 18          	lea    0x18(%rdi),%rbp
   1843d:	41 89 f0             	mov    %esi,%r8d
   18440:	48 63 db             	movslq %ebx,%rbx
   18443:	4e 8d 54 9d 00       	lea    0x0(%rbp,%r11,4),%r10
   18448:	48 8d 74 9d 00       	lea    0x0(%rbp,%rbx,4),%rsi
   1844d:	41 83 e0 1f          	and    $0x1f,%r8d
   18451:	74 75                	je     184c8 <__rshift_D2A+0xa8>
   18453:	8b 06                	mov    (%rsi),%eax
   18455:	44 89 c1             	mov    %r8d,%ecx
   18458:	41 bc 20 00 00 00    	mov    $0x20,%r12d
   1845e:	48 8d 56 04          	lea    0x4(%rsi),%rdx
   18462:	45 29 c4             	sub    %r8d,%r12d
   18465:	d3 e8                	shr    %cl,%eax
   18467:	89 c7                	mov    %eax,%edi
   18469:	49 39 d2             	cmp    %rdx,%r10
   1846c:	0f 86 86 00 00 00    	jbe    184f8 <__rshift_D2A+0xd8>
   18472:	48 89 ee             	mov    %rbp,%rsi
   18475:	0f 1f 00             	nopl   (%rax)
   18478:	8b 02                	mov    (%rdx),%eax
   1847a:	44 89 e1             	mov    %r12d,%ecx
   1847d:	48 83 c6 04          	add    $0x4,%rsi
   18481:	48 83 c2 04          	add    $0x4,%rdx
   18485:	d3 e0                	shl    %cl,%eax
   18487:	44 89 c1             	mov    %r8d,%ecx
   1848a:	09 f8                	or     %edi,%eax
   1848c:	89 46 fc             	mov    %eax,-0x4(%rsi)
   1848f:	8b 7a fc             	mov    -0x4(%rdx),%edi
   18492:	d3 ef                	shr    %cl,%edi
   18494:	49 39 d2             	cmp    %rdx,%r10
   18497:	77 df                	ja     18478 <__rshift_D2A+0x58>
   18499:	49 29 db             	sub    %rbx,%r11
   1849c:	4a 8d 44 9d fc       	lea    -0x4(%rbp,%r11,4),%rax
   184a1:	89 38                	mov    %edi,(%rax)
   184a3:	85 ff                	test   %edi,%edi
   184a5:	74 37                	je     184de <__rshift_D2A+0xbe>
   184a7:	48 83 c0 04          	add    $0x4,%rax
   184ab:	eb 31                	jmp    184de <__rshift_D2A+0xbe>
   184ad:	0f 1f 00             	nopl   (%rax)
   184b0:	41 c7 41 14 00 00 00 	movl   $0x0,0x14(%r9)
   184b7:	00 
   184b8:	5b                   	pop    %rbx
   184b9:	5d                   	pop    %rbp
   184ba:	41 c7 41 18 00 00 00 	movl   $0x0,0x18(%r9)
   184c1:	00 
   184c2:	41 5c                	pop    %r12
   184c4:	c3                   	ret    
   184c5:	0f 1f 00             	nopl   (%rax)
   184c8:	48 89 ef             	mov    %rbp,%rdi
   184cb:	49 39 f2             	cmp    %rsi,%r10
   184ce:	76 e0                	jbe    184b0 <__rshift_D2A+0x90>
   184d0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   184d1:	49 39 f2             	cmp    %rsi,%r10
   184d4:	77 fa                	ja     184d0 <__rshift_D2A+0xb0>
   184d6:	49 29 db             	sub    %rbx,%r11
   184d9:	4a 8d 44 9d 00       	lea    0x0(%rbp,%r11,4),%rax
   184de:	48 29 e8             	sub    %rbp,%rax
   184e1:	48 c1 f8 02          	sar    $0x2,%rax
   184e5:	41 89 41 14          	mov    %eax,0x14(%r9)
   184e9:	85 c0                	test   %eax,%eax
   184eb:	74 cb                	je     184b8 <__rshift_D2A+0x98>
   184ed:	5b                   	pop    %rbx
   184ee:	5d                   	pop    %rbp
   184ef:	41 5c                	pop    %r12
   184f1:	c3                   	ret    
   184f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   184f8:	41 89 41 18          	mov    %eax,0x18(%r9)
   184fc:	85 c0                	test   %eax,%eax
   184fe:	74 b0                	je     184b0 <__rshift_D2A+0x90>
   18500:	48 89 e8             	mov    %rbp,%rax
   18503:	eb a2                	jmp    184a7 <__rshift_D2A+0x87>
   18505:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1850c:	00 00 00 
   1850f:	90                   	nop

0000000000018510 <__trailz_D2A>:
   18510:	f3 0f 1e fa          	endbr64 
   18514:	41 54                	push   %r12
   18516:	45 31 e4             	xor    %r12d,%r12d
   18519:	48 83 ec 10          	sub    $0x10,%rsp
   1851d:	48 63 57 14          	movslq 0x14(%rdi),%rdx
   18521:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18528:	00 00 
   1852a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1852f:	31 c0                	xor    %eax,%eax
   18531:	48 8d 47 18          	lea    0x18(%rdi),%rax
   18535:	48 8d 0c 90          	lea    (%rax,%rdx,4),%rcx
   18539:	48 39 c8             	cmp    %rcx,%rax
   1853c:	72 0f                	jb     1854d <__trailz_D2A+0x3d>
   1853e:	eb 24                	jmp    18564 <__trailz_D2A+0x54>
   18540:	48 83 c0 04          	add    $0x4,%rax
   18544:	41 83 c4 20          	add    $0x20,%r12d
   18548:	48 39 c1             	cmp    %rax,%rcx
   1854b:	76 17                	jbe    18564 <__trailz_D2A+0x54>
   1854d:	8b 10                	mov    (%rax),%edx
   1854f:	85 d2                	test   %edx,%edx
   18551:	74 ed                	je     18540 <__trailz_D2A+0x30>
   18553:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   18558:	89 54 24 04          	mov    %edx,0x4(%rsp)
   1855c:	e8 5f d4 ff ff       	call   159c0 <__lo0bits_D2A>
   18561:	41 01 c4             	add    %eax,%r12d
   18564:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18569:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18570:	00 00 
   18572:	75 0a                	jne    1857e <__trailz_D2A+0x6e>
   18574:	48 83 c4 10          	add    $0x10,%rsp
   18578:	44 89 e0             	mov    %r12d,%eax
   1857b:	41 5c                	pop    %r12
   1857d:	c3                   	ret    
   1857e:	e8 cd 65 ff ff       	call   eb50 <__stack_chk_fail>
   18583:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1858a:	00 00 00 
   1858d:	0f 1f 00             	nopl   (%rax)

0000000000018590 <_Unwind_Resume>:
   18590:	f3 0f 1e fa          	endbr64 
   18594:	41 57                	push   %r15
   18596:	41 56                	push   %r14
   18598:	41 55                	push   %r13
   1859a:	49 89 fd             	mov    %rdi,%r13
   1859d:	41 54                	push   %r12
   1859f:	55                   	push   %rbp
   185a0:	53                   	push   %rbx
   185a1:	48 81 ec 58 08 00 00 	sub    $0x858,%rsp
   185a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   185af:	00 00 
   185b1:	48 89 84 24 48 08 00 	mov    %rax,0x848(%rsp)
   185b8:	00 
   185b9:	31 c0                	xor    %eax,%eax
   185bb:	4c 8d 64 24 70       	lea    0x70(%rsp),%r12
   185c0:	c7 84 24 38 08 00 00 	movl   $0x0,0x838(%rsp)
   185c7:	00 00 00 00 
   185cb:	4c 89 e7             	mov    %r12,%rdi
   185ce:	e8 a6 09 00 00       	call   18f79 <_Ux86_64_getcontext>
   185d3:	85 c0                	test   %eax,%eax
   185d5:	0f 88 ad 00 00 00    	js     18688 <_Unwind_Resume+0xf8>
   185db:	48 8d ac 24 40 04 00 	lea    0x440(%rsp),%rbp
   185e2:	00 
   185e3:	4c 89 e6             	mov    %r12,%rsi
   185e6:	48 89 ef             	mov    %rbp,%rdi
   185e9:	e8 82 03 00 00       	call   18970 <_ULx86_64_init_local>
   185ee:	85 c0                	test   %eax,%eax
   185f0:	0f 88 92 00 00 00    	js     18688 <_Unwind_Resume+0xf8>
   185f6:	4d 8b 65 10          	mov    0x10(%r13),%r12
   185fa:	49 8b 45 18          	mov    0x18(%r13),%rax
   185fe:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   18603:	4d 8b 7d 00          	mov    0x0(%r13),%r15
   18607:	49 83 fc 01          	cmp    $0x1,%r12
   1860b:	48 89 04 24          	mov    %rax,(%rsp)
   1860f:	19 db                	sbb    %ebx,%ebx
   18611:	83 e3 f8             	and    $0xfffffff8,%ebx
   18614:	83 c3 0a             	add    $0xa,%ebx
   18617:	eb 4b                	jmp    18664 <_Unwind_Resume+0xd4>
   18619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18620:	4d 85 e4             	test   %r12,%r12
   18623:	74 1b                	je     18640 <_Unwind_Resume+0xb0>
   18625:	4c 8b 0c 24          	mov    (%rsp),%r9
   18629:	49 89 e8             	mov    %rbp,%r8
   1862c:	4c 89 e9             	mov    %r13,%rcx
   1862f:	4c 89 fa             	mov    %r15,%rdx
   18632:	89 de                	mov    %ebx,%esi
   18634:	bf 01 00 00 00       	mov    $0x1,%edi
   18639:	41 ff d4             	call   *%r12
   1863c:	85 c0                	test   %eax,%eax
   1863e:	75 48                	jne    18688 <_Unwind_Resume+0xf8>
   18640:	8b 84 24 38 08 00 00 	mov    0x838(%rsp),%eax
   18647:	85 c0                	test   %eax,%eax
   18649:	75 3d                	jne    18688 <_Unwind_Resume+0xf8>
   1864b:	4c 89 f6             	mov    %r14,%rsi
   1864e:	48 89 ef             	mov    %rbp,%rdi
   18651:	e8 2a 03 00 00       	call   18980 <_ULx86_64_get_proc_info>
   18656:	85 c0                	test   %eax,%eax
   18658:	78 2e                	js     18688 <_Unwind_Resume+0xf8>
   1865a:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1865f:	4d 85 c9             	test   %r9,%r9
   18662:	75 29                	jne    1868d <_Unwind_Resume+0xfd>
   18664:	48 89 ef             	mov    %rbp,%rdi
   18667:	e8 54 05 00 00       	call   18bc0 <_ULx86_64_step>
   1866c:	85 c0                	test   %eax,%eax
   1866e:	7f b0                	jg     18620 <_Unwind_Resume+0x90>
   18670:	75 16                	jne    18688 <_Unwind_Resume+0xf8>
   18672:	c7 84 24 38 08 00 00 	movl   $0x1,0x838(%rsp)
   18679:	01 00 00 00 
   1867d:	83 cb 10             	or     $0x10,%ebx
   18680:	4d 85 e4             	test   %r12,%r12
   18683:	75 a0                	jne    18625 <_Unwind_Resume+0x95>
   18685:	0f 1f 00             	nopl   (%rax)
   18688:	e8 07 81 00 00       	call   20794 <abort>
   1868d:	4d 85 e4             	test   %r12,%r12
   18690:	74 1f                	je     186b1 <_Unwind_Resume+0x121>
   18692:	49 89 e8             	mov    %rbp,%r8
   18695:	4c 89 e9             	mov    %r13,%rcx
   18698:	4c 89 fa             	mov    %r15,%rdx
   1869b:	89 de                	mov    %ebx,%esi
   1869d:	bf 01 00 00 00       	mov    $0x1,%edi
   186a2:	41 ff d1             	call   *%r9
   186a5:	83 f8 08             	cmp    $0x8,%eax
   186a8:	75 37                	jne    186e1 <_Unwind_Resume+0x151>
   186aa:	f6 c3 04             	test   $0x4,%bl
   186ad:	74 b5                	je     18664 <_Unwind_Resume+0xd4>
   186af:	eb d7                	jmp    18688 <_Unwind_Resume+0xf8>
   186b1:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   186b6:	be 10 00 00 00       	mov    $0x10,%esi
   186bb:	48 89 ef             	mov    %rbp,%rdi
   186be:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   186c3:	e8 c8 46 00 00       	call   1cd90 <_ULx86_64_get_reg>
   186c8:	85 c0                	test   %eax,%eax
   186ca:	78 bc                	js     18688 <_Unwind_Resume+0xf8>
   186cc:	48 8b 04 24          	mov    (%rsp),%rax
   186d0:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   186d5:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   186da:	75 b6                	jne    18692 <_Unwind_Resume+0x102>
   186dc:	83 cb 04             	or     $0x4,%ebx
   186df:	eb b1                	jmp    18692 <_Unwind_Resume+0x102>
   186e1:	83 f8 07             	cmp    $0x7,%eax
   186e4:	75 a2                	jne    18688 <_Unwind_Resume+0xf8>
   186e6:	48 89 ef             	mov    %rbp,%rdi
   186e9:	e8 82 03 00 00       	call   18a70 <_ULx86_64_resume>
   186ee:	eb 98                	jmp    18688 <_Unwind_Resume+0xf8>

00000000000186f0 <unw_init_local_common>:
   186f0:	41 55                	push   %r13
   186f2:	41 54                	push   %r12
   186f4:	41 89 d4             	mov    %edx,%r12d
   186f7:	53                   	push   %rbx
   186f8:	48 89 fb             	mov    %rdi,%rbx
   186fb:	48 83 ec 10          	sub    $0x10,%rsp
   186ff:	8b 05 63 13 02 00    	mov    0x21363(%rip),%eax        # 39a68 <_ULx86_64_init_done>
   18705:	85 c0                	test   %eax,%eax
   18707:	0f 84 43 02 00 00    	je     18950 <unw_init_local_common+0x260>
   1870d:	48 8d 96 90 00 00 00 	lea    0x90(%rsi),%rdx
   18714:	48 8b 05 65 1b 01 00 	mov    0x11b65(%rip),%rax        # 2a280 <_ULx86_64_local_addr_space>
   1871b:	48 89 1b             	mov    %rbx,(%rbx)
   1871e:	48 89 53 40          	mov    %rdx,0x40(%rbx)
   18722:	48 8d 96 88 00 00 00 	lea    0x88(%rsi),%rdx
   18729:	48 89 53 50          	mov    %rdx,0x50(%rbx)
   1872d:	48 8d 96 98 00 00 00 	lea    0x98(%rsi),%rdx
   18734:	48 89 53 60          	mov    %rdx,0x60(%rbx)
   18738:	48 8d 96 80 00 00 00 	lea    0x80(%rsi),%rdx
   1873f:	48 89 53 70          	mov    %rdx,0x70(%rbx)
   18743:	48 8d 56 70          	lea    0x70(%rsi),%rdx
   18747:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
   1874e:	48 8d 56 68          	lea    0x68(%rsi),%rdx
   18752:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
   18759:	48 8d 56 78          	lea    0x78(%rsi),%rdx
   1875d:	48 89 93 a0 00 00 00 	mov    %rdx,0xa0(%rbx)
   18764:	48 8d 96 a0 00 00 00 	lea    0xa0(%rsi),%rdx
   1876b:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
   18772:	48 8d 56 28          	lea    0x28(%rsi),%rdx
   18776:	48 89 93 c0 00 00 00 	mov    %rdx,0xc0(%rbx)
   1877d:	48 8d 56 30          	lea    0x30(%rsi),%rdx
   18781:	48 89 93 d0 00 00 00 	mov    %rdx,0xd0(%rbx)
   18788:	48 8d 56 38          	lea    0x38(%rsi),%rdx
   1878c:	48 89 93 e0 00 00 00 	mov    %rdx,0xe0(%rbx)
   18793:	48 8d 56 40          	lea    0x40(%rsi),%rdx
   18797:	48 89 93 f0 00 00 00 	mov    %rdx,0xf0(%rbx)
   1879e:	48 8d 56 48          	lea    0x48(%rsi),%rdx
   187a2:	48 89 93 00 01 00 00 	mov    %rdx,0x100(%rbx)
   187a9:	48 8d 56 50          	lea    0x50(%rsi),%rdx
   187ad:	48 89 93 10 01 00 00 	mov    %rdx,0x110(%rbx)
   187b4:	48 8d 56 58          	lea    0x58(%rsi),%rdx
   187b8:	48 89 b3 d0 01 00 00 	mov    %rsi,0x1d0(%rbx)
   187bf:	48 89 43 08          	mov    %rax,0x8(%rbx)
   187c3:	c7 83 c8 01 00 00 00 	movl   $0x0,0x1c8(%rbx)
   187ca:	00 00 00 
   187cd:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   187d4:	00 
   187d5:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
   187dc:	00 
   187dd:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
   187e4:	00 
   187e5:	48 c7 43 78 00 00 00 	movq   $0x0,0x78(%rbx)
   187ec:	00 
   187ed:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
   187f4:	00 00 00 00 
   187f8:	48 c7 83 98 00 00 00 	movq   $0x0,0x98(%rbx)
   187ff:	00 00 00 00 
   18803:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   1880a:	00 00 00 00 
   1880e:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   18815:	00 00 00 00 
   18819:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
   18820:	00 00 00 00 
   18824:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1882b:	00 00 00 00 
   1882f:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   18836:	00 00 00 00 
   1883a:	48 c7 83 f8 00 00 00 	movq   $0x0,0xf8(%rbx)
   18841:	00 00 00 00 
   18845:	48 c7 83 08 01 00 00 	movq   $0x0,0x108(%rbx)
   1884c:	00 00 00 00 
   18850:	48 c7 83 18 01 00 00 	movq   $0x0,0x118(%rbx)
   18857:	00 00 00 00 
   1885b:	48 89 93 20 01 00 00 	mov    %rdx,0x120(%rbx)
   18862:	48 8d 56 60          	lea    0x60(%rsi),%rdx
   18866:	48 81 c6 a8 00 00 00 	add    $0xa8,%rsi
   1886d:	48 89 93 30 01 00 00 	mov    %rdx,0x130(%rbx)
   18874:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   18878:	48 c7 83 28 01 00 00 	movq   $0x0,0x128(%rbx)
   1887f:	00 00 00 00 
   18883:	48 c7 83 38 01 00 00 	movq   $0x0,0x138(%rbx)
   1888a:	00 00 00 00 
   1888e:	48 89 b3 40 01 00 00 	mov    %rsi,0x140(%rbx)
   18895:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   1889c:	00 00 00 00 
   188a0:	0f 84 c2 00 00 00    	je     18968 <unw_init_local_common+0x278>
   188a6:	31 c9                	xor    %ecx,%ecx
   188a8:	49 89 d8             	mov    %rbx,%r8
   188ab:	48 89 c7             	mov    %rax,%rdi
   188ae:	ff 50 18             	call   *0x18(%rax)
   188b1:	85 c0                	test   %eax,%eax
   188b3:	0f 88 85 00 00 00    	js     1893e <unw_init_local_common+0x24e>
   188b9:	48 8b 03             	mov    (%rbx),%rax
   188bc:	be 07 00 00 00       	mov    $0x7,%esi
   188c1:	4c 8d 6b 10          	lea    0x10(%rbx),%r13
   188c5:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   188cc:	e8 7f 42 00 00       	call   1cb50 <_ULx86_64_r_uc_addr>
   188d1:	48 89 c6             	mov    %rax,%rsi
   188d4:	48 85 c0             	test   %rax,%rax
   188d7:	0f 84 8b 00 00 00    	je     18968 <unw_init_local_common+0x278>
   188dd:	48 8b 43 08          	mov    0x8(%rbx),%rax
   188e1:	31 c9                	xor    %ecx,%ecx
   188e3:	4c 8b 03             	mov    (%rbx),%r8
   188e6:	4c 89 ea             	mov    %r13,%rdx
   188e9:	48 89 c7             	mov    %rax,%rdi
   188ec:	ff 50 18             	call   *0x18(%rax)
   188ef:	85 c0                	test   %eax,%eax
   188f1:	78 4b                	js     1893e <unw_init_local_common+0x24e>
   188f3:	0f b6 93 50 01 00 00 	movzbl 0x150(%rbx),%edx
   188fa:	45 01 e4             	add    %r12d,%r12d
   188fd:	31 c0                	xor    %eax,%eax
   188ff:	c7 83 b8 01 00 00 00 	movl   $0x0,0x1b8(%rbx)
   18906:	00 00 00 
   18909:	41 83 e4 0f          	and    $0xf,%r12d
   1890d:	48 c7 83 c0 01 00 00 	movq   $0x0,0x1c0(%rbx)
   18914:	00 00 00 00 
   18918:	83 e2 f0             	and    $0xfffffff0,%edx
   1891b:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   18922:	00 
   18923:	41 09 d4             	or     %edx,%r12d
   18926:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   1892d:	44 88 a3 50 01 00 00 	mov    %r12b,0x150(%rbx)
   18934:	c7 83 a0 01 00 00 00 	movl   $0x0,0x1a0(%rbx)
   1893b:	00 00 00 
   1893e:	48 83 c4 10          	add    $0x10,%rsp
   18942:	5b                   	pop    %rbx
   18943:	41 5c                	pop    %r12
   18945:	41 5d                	pop    %r13
   18947:	c3                   	ret    
   18948:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1894f:	00 
   18950:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   18955:	e8 36 49 00 00       	call   1d290 <_ULx86_64_init>
   1895a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1895f:	e9 a9 fd ff ff       	jmp    1870d <unw_init_local_common+0x1d>
   18964:	0f 1f 40 00          	nopl   0x0(%rax)
   18968:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1896d:	eb cf                	jmp    1893e <unw_init_local_common+0x24e>
   1896f:	90                   	nop

0000000000018970 <_ULx86_64_init_local>:
   18970:	f3 0f 1e fa          	endbr64 
   18974:	ba 01 00 00 00       	mov    $0x1,%edx
   18979:	e9 72 fd ff ff       	jmp    186f0 <unw_init_local_common>
   1897e:	66 90                	xchg   %ax,%ax

0000000000018980 <_ULx86_64_get_proc_info>:
   18980:	f3 0f 1e fa          	endbr64 
   18984:	55                   	push   %rbp
   18985:	48 89 f5             	mov    %rsi,%rbp
   18988:	53                   	push   %rbx
   18989:	48 89 fb             	mov    %rdi,%rbx
   1898c:	48 83 ec 08          	sub    $0x8,%rsp
   18990:	e8 bb 21 00 00       	call   1ab50 <_ULx86_64_dwarf_make_proc_info>
   18995:	85 c0                	test   %eax,%eax
   18997:	78 47                	js     189e0 <_ULx86_64_get_proc_info+0x60>
   18999:	f3 0f 6f 8b 58 01 00 	movdqu 0x158(%rbx),%xmm1
   189a0:	00 
   189a1:	0f 11 4d 00          	movups %xmm1,0x0(%rbp)
   189a5:	f3 0f 6f 93 68 01 00 	movdqu 0x168(%rbx),%xmm2
   189ac:	00 
   189ad:	0f 11 55 10          	movups %xmm2,0x10(%rbp)
   189b1:	f3 0f 6f 9b 78 01 00 	movdqu 0x178(%rbx),%xmm3
   189b8:	00 
   189b9:	0f 11 5d 20          	movups %xmm3,0x20(%rbp)
   189bd:	f3 0f 6f a3 88 01 00 	movdqu 0x188(%rbx),%xmm4
   189c4:	00 
   189c5:	0f 11 65 30          	movups %xmm4,0x30(%rbp)
   189c9:	48 8b 83 98 01 00 00 	mov    0x198(%rbx),%rax
   189d0:	48 89 45 40          	mov    %rax,0x40(%rbp)
   189d4:	48 83 c4 08          	add    $0x8,%rsp
   189d8:	31 c0                	xor    %eax,%eax
   189da:	5b                   	pop    %rbx
   189db:	5d                   	pop    %rbp
   189dc:	c3                   	ret    
   189dd:	0f 1f 00             	nopl   (%rax)
   189e0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   189e4:	48 c7 45 40 00 00 00 	movq   $0x0,0x40(%rbp)
   189eb:	00 
   189ec:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   189f0:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   189f4:	0f 11 45 20          	movups %xmm0,0x20(%rbp)
   189f8:	0f 11 45 30          	movups %xmm0,0x30(%rbp)
   189fc:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18a00:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18a04:	48 83 c0 01          	add    $0x1,%rax
   18a08:	48 89 45 08          	mov    %rax,0x8(%rbp)
   18a0c:	48 83 c4 08          	add    $0x8,%rsp
   18a10:	31 c0                	xor    %eax,%eax
   18a12:	5b                   	pop    %rbx
   18a13:	5d                   	pop    %rbp
   18a14:	c3                   	ret    
   18a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18a1c:	00 00 00 
   18a1f:	90                   	nop

0000000000018a20 <_ULx86_64_local_resume>:
   18a20:	f3 0f 1e fa          	endbr64 
   18a24:	41 54                	push   %r12
   18a26:	48 89 f7             	mov    %rsi,%rdi
   18a29:	55                   	push   %rbp
   18a2a:	48 89 f5             	mov    %rsi,%rbp
   18a2d:	48 83 ec 08          	sub    $0x8,%rsp
   18a31:	4c 8b a6 d0 01 00 00 	mov    0x1d0(%rsi),%r12
   18a38:	e8 13 21 00 00       	call   1ab50 <_ULx86_64_dwarf_make_proc_info>
   18a3d:	48 83 bd c0 01 00 00 	cmpq   $0x0,0x1c0(%rbp)
   18a44:	00 
   18a45:	75 19                	jne    18a60 <_ULx86_64_local_resume+0x40>
   18a47:	4c 89 e7             	mov    %r12,%rdi
   18a4a:	e8 d2 47 00 00       	call   1d221 <_Ux86_64_setcontext>
   18a4f:	48 83 c4 08          	add    $0x8,%rsp
   18a53:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   18a58:	5d                   	pop    %rbp
   18a59:	41 5c                	pop    %r12
   18a5b:	c3                   	ret    
   18a5c:	0f 1f 40 00          	nopl   0x0(%rax)
   18a60:	48 89 ef             	mov    %rbp,%rdi
   18a63:	e8 b8 41 00 00       	call   1cc20 <_ULx86_64_sigreturn>
   18a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18a6f:	00 

0000000000018a70 <_ULx86_64_resume>:
   18a70:	f3 0f 1e fa          	endbr64 
   18a74:	41 57                	push   %r15
   18a76:	45 31 ff             	xor    %r15d,%r15d
   18a79:	41 56                	push   %r14
   18a7b:	41 55                	push   %r13
   18a7d:	41 54                	push   %r12
   18a7f:	55                   	push   %rbp
   18a80:	48 89 fd             	mov    %rdi,%rbp
   18a83:	53                   	push   %rbx
   18a84:	48 83 ec 48          	sub    $0x48,%rsp
   18a88:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   18a8c:	48 8b 1f             	mov    (%rdi),%rbx
   18a8f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18a96:	00 00 
   18a98:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18a9d:	31 c0                	xor    %eax,%eax
   18a9f:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   18aa4:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   18aa9:	4d 8b 74 24 20       	mov    0x20(%r12),%r14
   18aae:	48 89 04 24          	mov    %rax,(%rsp)
   18ab2:	eb 42                	jmp    18af6 <_ULx86_64_resume+0x86>
   18ab4:	0f 1f 40 00          	nopl   0x0(%rax)
   18ab8:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   18abd:	31 c9                	xor    %ecx,%ecx
   18abf:	44 89 fe             	mov    %r15d,%esi
   18ac2:	48 89 ef             	mov    %rbp,%rdi
   18ac5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   18aca:	e8 81 4e 00 00       	call   1d950 <_ULx86_64_access_fpreg>
   18acf:	85 c0                	test   %eax,%eax
   18ad1:	78 19                	js     18aec <_ULx86_64_resume+0x7c>
   18ad3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   18ad8:	48 8b 04 24          	mov    (%rsp),%rax
   18adc:	49 89 d8             	mov    %rbx,%r8
   18adf:	44 89 fe             	mov    %r15d,%esi
   18ae2:	b9 01 00 00 00       	mov    $0x1,%ecx
   18ae7:	4c 89 e7             	mov    %r12,%rdi
   18aea:	ff d0                	call   *%rax
   18aec:	41 83 c7 01          	add    $0x1,%r15d
   18af0:	41 83 ff 11          	cmp    $0x11,%r15d
   18af4:	74 3e                	je     18b34 <_ULx86_64_resume+0xc4>
   18af6:	44 89 ff             	mov    %r15d,%edi
   18af9:	e8 92 3f 00 00       	call   1ca90 <_Ux86_64_is_fpreg>
   18afe:	85 c0                	test   %eax,%eax
   18b00:	75 b6                	jne    18ab8 <_ULx86_64_resume+0x48>
   18b02:	31 c9                	xor    %ecx,%ecx
   18b04:	4c 89 ea             	mov    %r13,%rdx
   18b07:	44 89 fe             	mov    %r15d,%esi
   18b0a:	48 89 ef             	mov    %rbp,%rdi
   18b0d:	e8 5e 4b 00 00       	call   1d670 <_ULx86_64_access_reg>
   18b12:	85 c0                	test   %eax,%eax
   18b14:	78 d6                	js     18aec <_ULx86_64_resume+0x7c>
   18b16:	44 89 fe             	mov    %r15d,%esi
   18b19:	41 83 c7 01          	add    $0x1,%r15d
   18b1d:	49 89 d8             	mov    %rbx,%r8
   18b20:	b9 01 00 00 00       	mov    $0x1,%ecx
   18b25:	4c 89 ea             	mov    %r13,%rdx
   18b28:	4c 89 e7             	mov    %r12,%rdi
   18b2b:	41 ff d6             	call   *%r14
   18b2e:	41 83 ff 11          	cmp    $0x11,%r15d
   18b32:	75 c2                	jne    18af6 <_ULx86_64_resume+0x86>
   18b34:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
   18b39:	75 35                	jne    18b70 <_ULx86_64_resume+0x100>
   18b3b:	48 8b 45 08          	mov    0x8(%rbp),%rax
   18b3f:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   18b43:	48 89 ee             	mov    %rbp,%rsi
   18b46:	48 89 c7             	mov    %rax,%rdi
   18b49:	ff 50 30             	call   *0x30(%rax)
   18b4c:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   18b51:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   18b58:	00 00 
   18b5a:	75 50                	jne    18bac <_ULx86_64_resume+0x13c>
   18b5c:	48 83 c4 48          	add    $0x48,%rsp
   18b60:	5b                   	pop    %rbx
   18b61:	5d                   	pop    %rbp
   18b62:	41 5c                	pop    %r12
   18b64:	41 5d                	pop    %r13
   18b66:	41 5e                	pop    %r14
   18b68:	41 5f                	pop    %r15
   18b6a:	c3                   	ret    
   18b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18b70:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   18b75:	31 c9                	xor    %ecx,%ecx
   18b77:	be 07 00 00 00       	mov    $0x7,%esi
   18b7c:	48 89 ef             	mov    %rbp,%rdi
   18b7f:	4c 89 ea             	mov    %r13,%rdx
   18b82:	e8 e9 4a 00 00       	call   1d670 <_ULx86_64_access_reg>
   18b87:	85 c0                	test   %eax,%eax
   18b89:	78 b0                	js     18b3b <_ULx86_64_resume+0xcb>
   18b8b:	48 8b 45 20          	mov    0x20(%rbp),%rax
   18b8f:	49 89 d8             	mov    %rbx,%r8
   18b92:	48 01 44 24 18       	add    %rax,0x18(%rsp)
   18b97:	4c 89 ea             	mov    %r13,%rdx
   18b9a:	b9 01 00 00 00       	mov    $0x1,%ecx
   18b9f:	be 07 00 00 00       	mov    $0x7,%esi
   18ba4:	4c 89 e7             	mov    %r12,%rdi
   18ba7:	41 ff d6             	call   *%r14
   18baa:	eb 8f                	jmp    18b3b <_ULx86_64_resume+0xcb>
   18bac:	e8 9f 5f ff ff       	call   eb50 <__stack_chk_fail>
   18bb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18bb8:	00 00 00 
   18bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018bc0 <_ULx86_64_step>:
   18bc0:	f3 0f 1e fa          	endbr64 
   18bc4:	41 57                	push   %r15
   18bc6:	41 56                	push   %r14
   18bc8:	41 55                	push   %r13
   18bca:	41 54                	push   %r12
   18bcc:	55                   	push   %rbp
   18bcd:	53                   	push   %rbx
   18bce:	48 89 fb             	mov    %rdi,%rbx
   18bd1:	48 83 ec 28          	sub    $0x28,%rsp
   18bd5:	8b af c8 01 00 00    	mov    0x1c8(%rdi),%ebp
   18bdb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18be2:	00 00 
   18be4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18be9:	31 c0                	xor    %eax,%eax
   18beb:	c7 87 c8 01 00 00 01 	movl   $0x1,0x1c8(%rdi)
   18bf2:	00 00 00 
   18bf5:	c7 87 b8 01 00 00 00 	movl   $0x0,0x1b8(%rdi)
   18bfc:	00 00 00 
   18bff:	e8 cc 18 00 00       	call   1a4d0 <_ULx86_64_dwarf_step>
   18c04:	89 ab c8 01 00 00    	mov    %ebp,0x1c8(%rbx)
   18c0a:	41 89 c4             	mov    %eax,%r12d
   18c0d:	85 c0                	test   %eax,%eax
   18c0f:	79 33                	jns    18c44 <_ULx86_64_step+0x84>
   18c11:	83 f8 f6             	cmp    $0xfffffff6,%eax
   18c14:	74 2a                	je     18c40 <_ULx86_64_step+0x80>
   18c16:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18c1b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   18c22:	00 00 
   18c24:	0f 85 3a 03 00 00    	jne    18f64 <_ULx86_64_step+0x3a4>
   18c2a:	48 83 c4 28          	add    $0x28,%rsp
   18c2e:	44 89 e0             	mov    %r12d,%eax
   18c31:	5b                   	pop    %rbx
   18c32:	5d                   	pop    %rbp
   18c33:	41 5c                	pop    %r12
   18c35:	41 5d                	pop    %r13
   18c37:	41 5e                	pop    %r14
   18c39:	41 5f                	pop    %r15
   18c3b:	c3                   	ret    
   18c3c:	0f 1f 40 00          	nopl   0x0(%rax)
   18c40:	85 c0                	test   %eax,%eax
   18c42:	78 1c                	js     18c60 <_ULx86_64_step+0xa0>
   18c44:	48 83 bb a0 00 00 00 	cmpq   $0x0,0xa0(%rbx)
   18c4b:	00 
   18c4c:	75 c8                	jne    18c16 <_ULx86_64_step+0x56>
   18c4e:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   18c55:	00 
   18c56:	45 31 e4             	xor    %r12d,%r12d
   18c59:	eb bb                	jmp    18c16 <_ULx86_64_step+0x56>
   18c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18c60:	48 89 df             	mov    %rbx,%rdi
   18c63:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   18c67:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   18c6b:	c7 83 c8 01 00 00 01 	movl   $0x1,0x1c8(%rbx)
   18c72:	00 00 00 
   18c75:	e8 a6 3e 00 00       	call   1cb20 <_ULx86_64_is_signal_frame>
   18c7a:	85 c0                	test   %eax,%eax
   18c7c:	7e 5a                	jle    18cd8 <_ULx86_64_step+0x118>
   18c7e:	48 89 df             	mov    %rbx,%rdi
   18c81:	e8 ba 3e 00 00       	call   1cb40 <_ULx86_64_handle_signal_frame>
   18c86:	41 89 c4             	mov    %eax,%r12d
   18c89:	85 c0                	test   %eax,%eax
   18c8b:	0f 88 d7 00 00 00    	js     18d68 <_ULx86_64_step+0x1a8>
   18c91:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   18c98:	4d 85 ff             	test   %r15,%r15
   18c9b:	0f 84 c7 00 00 00    	je     18d68 <_ULx86_64_step+0x1a8>
   18ca1:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
   18ca8:	48 85 f6             	test   %rsi,%rsi
   18cab:	0f 85 bf 00 00 00    	jne    18d70 <_ULx86_64_step+0x1b0>
   18cb1:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   18cb8:	00 
   18cb9:	48 39 f5             	cmp    %rsi,%rbp
   18cbc:	0f 85 54 ff ff ff    	jne    18c16 <_ULx86_64_step+0x56>
   18cc2:	4c 39 6b 10          	cmp    %r13,0x10(%rbx)
   18cc6:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   18ccb:	44 0f 44 e0          	cmove  %eax,%r12d
   18ccf:	e9 42 ff ff ff       	jmp    18c16 <_ULx86_64_step+0x56>
   18cd4:	0f 1f 40 00          	nopl   0x0(%rax)
   18cd8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18cdc:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   18ce1:	e8 5a 40 00 00       	call   1cd40 <_Ux86_64_get_accessors>
   18ce6:	31 c9                	xor    %ecx,%ecx
   18ce8:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   18cec:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18cf0:	4c 8b 03             	mov    (%rbx),%r8
   18cf3:	49 89 c7             	mov    %rax,%r15
   18cf6:	4c 89 f2             	mov    %r14,%rdx
   18cf9:	ff 50 18             	call   *0x18(%rax)
   18cfc:	85 c0                	test   %eax,%eax
   18cfe:	78 29                	js     18d29 <_ULx86_64_step+0x169>
   18d00:	48 8b 43 18          	mov    0x18(%rbx),%rax
   18d04:	31 c9                	xor    %ecx,%ecx
   18d06:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18d0a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   18d0f:	4c 8b 03             	mov    (%rbx),%r8
   18d12:	48 8d 70 08          	lea    0x8(%rax),%rsi
   18d16:	41 ff 57 18          	call   *0x18(%r15)
   18d1a:	85 c0                	test   %eax,%eax
   18d1c:	78 0b                	js     18d29 <_ULx86_64_step+0x169>
   18d1e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18d23:	66 3d ff 25          	cmp    $0x25ff,%ax
   18d27:	74 72                	je     18d9b <_ULx86_64_step+0x1db>
   18d29:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   18d30:	48 8d 43 40          	lea    0x40(%rbx),%rax
   18d34:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   18d3b:	4d 85 ff             	test   %r15,%r15
   18d3e:	0f 85 ab 00 00 00    	jne    18def <_ULx86_64_step+0x22f>
   18d44:	0f 1f 40 00          	nopl   0x0(%rax)
   18d48:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18d4f:	48 83 c0 10          	add    $0x10,%rax
   18d53:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   18d5a:	00 
   18d5b:	48 39 c2             	cmp    %rax,%rdx
   18d5e:	75 e8                	jne    18d48 <_ULx86_64_step+0x188>
   18d60:	e9 2c ff ff ff       	jmp    18c91 <_ULx86_64_step+0xd1>
   18d65:	0f 1f 00             	nopl   (%rax)
   18d68:	45 31 e4             	xor    %r12d,%r12d
   18d6b:	e9 a6 fe ff ff       	jmp    18c16 <_ULx86_64_step+0x56>
   18d70:	48 8b 83 48 01 00 00 	mov    0x148(%rbx),%rax
   18d77:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   18d7b:	a8 02                	test   $0x2,%al
   18d7d:	0f 85 6b 01 00 00    	jne    18eee <_ULx86_64_step+0x32e>
   18d83:	48 85 c0             	test   %rax,%rax
   18d86:	0f 84 8c 01 00 00    	je     18f18 <_ULx86_64_step+0x358>
   18d8c:	48 89 73 18          	mov    %rsi,0x18(%rbx)
   18d90:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   18d96:	e9 1e ff ff ff       	jmp    18cb9 <_ULx86_64_step+0xf9>
   18d9b:	48 c1 e8 30          	shr    $0x30,%rax
   18d9f:	3c 68                	cmp    $0x68,%al
   18da1:	75 86                	jne    18d29 <_ULx86_64_step+0x169>
   18da3:	80 7c 24 13 e9       	cmpb   $0xe9,0x13(%rsp)
   18da8:	0f 85 7b ff ff ff    	jne    18d29 <_ULx86_64_step+0x169>
   18dae:	48 b8 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rax
   18db5:	ff ff ff 
   18db8:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   18dbf:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   18dc6:	00 00 00 00 
   18dca:	48 0d 16 01 00 00    	or     $0x116,%rax
   18dd0:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   18dd7:	48 8b 43 10          	mov    0x10(%rbx),%rax
   18ddb:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
   18de2:	48 83 c0 08          	add    $0x8,%rax
   18de6:	48 89 43 10          	mov    %rax,0x10(%rbx)
   18dea:	e9 a2 fe ff ff       	jmp    18c91 <_ULx86_64_step+0xd1>
   18def:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
   18df6:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18dfa:	4c 8b 03             	mov    (%rbx),%r8
   18dfd:	a8 02                	test   $0x2,%al
   18dff:	0f 85 27 01 00 00    	jne    18f2c <_ULx86_64_step+0x36c>
   18e05:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   18e09:	48 85 c0             	test   %rax,%rax
   18e0c:	0f 84 42 01 00 00    	je     18f54 <_ULx86_64_step+0x394>
   18e12:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   18e17:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18e1e:	00 00 
   18e20:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   18e25:	31 c9                	xor    %ecx,%ecx
   18e27:	4c 89 fe             	mov    %r15,%rsi
   18e2a:	41 ff d1             	call   *%r9
   18e2d:	41 89 c4             	mov    %eax,%r12d
   18e30:	85 c0                	test   %eax,%eax
   18e32:	78 1d                	js     18e51 <_ULx86_64_step+0x291>
   18e34:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   18e38:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18e3d:	48 39 c2             	cmp    %rax,%rdx
   18e40:	77 0f                	ja     18e51 <_ULx86_64_step+0x291>
   18e42:	48 29 d0             	sub    %rdx,%rax
   18e45:	49 8d 4f 08          	lea    0x8(%r15),%rcx
   18e49:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
   18e4f:	76 05                	jbe    18e56 <_ULx86_64_step+0x296>
   18e51:	31 c9                	xor    %ecx,%ecx
   18e53:	45 31 ff             	xor    %r15d,%r15d
   18e56:	48 b8 08 00 00 00 00 	movabs $0xfffe000000000008,%rax
   18e5d:	00 fe ff 
   18e60:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   18e67:	48 83 43 10 10       	addq   $0x10,0x10(%rbx)
   18e6c:	48 ba 01 02 00 00 c0 	movabs $0x1ffc000000201,%rdx
   18e73:	ff 01 00 
   18e76:	48 09 d0             	or     %rdx,%rax
   18e79:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   18e80:	48 8d 43 40          	lea    0x40(%rbx),%rax
   18e84:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   18e8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18e90:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   18e97:	48 83 c0 10          	add    $0x10,%rax
   18e9b:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   18ea2:	00 
   18ea3:	48 39 c2             	cmp    %rax,%rdx
   18ea6:	75 e8                	jne    18e90 <_ULx86_64_step+0x2d0>
   18ea8:	80 8b 50 01 00 00 02 	orb    $0x2,0x150(%rbx)
   18eaf:	4c 89 bb a0 00 00 00 	mov    %r15,0xa0(%rbx)
   18eb6:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   18ebd:	00 00 00 00 
   18ec1:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
   18ec8:	00 00 00 00 
   18ecc:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   18ed3:	00 00 00 00 
   18ed7:	48 89 8b 40 01 00 00 	mov    %rcx,0x140(%rbx)
   18ede:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   18ee5:	00 00 00 00 
   18ee9:	e9 aa fd ff ff       	jmp    18c98 <_ULx86_64_step+0xd8>
   18eee:	48 8b 43 08          	mov    0x8(%rbx),%rax
   18ef2:	4c 8b 03             	mov    (%rbx),%r8
   18ef5:	31 c9                	xor    %ecx,%ecx
   18ef7:	48 89 c7             	mov    %rax,%rdi
   18efa:	ff 50 20             	call   *0x20(%rax)
   18efd:	41 89 c4             	mov    %eax,%r12d
   18f00:	45 85 e4             	test   %r12d,%r12d
   18f03:	0f 88 0d fd ff ff    	js     18c16 <_ULx86_64_step+0x56>
   18f09:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   18f0d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   18f13:	e9 a1 fd ff ff       	jmp    18cb9 <_ULx86_64_step+0xf9>
   18f18:	48 8b 43 08          	mov    0x8(%rbx),%rax
   18f1c:	4c 8b 03             	mov    (%rbx),%r8
   18f1f:	31 c9                	xor    %ecx,%ecx
   18f21:	48 89 c7             	mov    %rax,%rdi
   18f24:	ff 50 18             	call   *0x18(%rax)
   18f27:	41 89 c4             	mov    %eax,%r12d
   18f2a:	eb d4                	jmp    18f00 <_ULx86_64_step+0x340>
   18f2c:	31 c9                	xor    %ecx,%ecx
   18f2e:	4c 89 f2             	mov    %r14,%rdx
   18f31:	44 89 fe             	mov    %r15d,%esi
   18f34:	ff 57 20             	call   *0x20(%rdi)
   18f37:	41 89 c4             	mov    %eax,%r12d
   18f3a:	45 85 e4             	test   %r12d,%r12d
   18f3d:	0f 88 d3 fc ff ff    	js     18c16 <_ULx86_64_step+0x56>
   18f43:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   18f48:	4d 85 ff             	test   %r15,%r15
   18f4b:	75 1c                	jne    18f69 <_ULx86_64_step+0x3a9>
   18f4d:	31 c9                	xor    %ecx,%ecx
   18f4f:	e9 2c ff ff ff       	jmp    18e80 <_ULx86_64_step+0x2c0>
   18f54:	31 c9                	xor    %ecx,%ecx
   18f56:	4c 89 f2             	mov    %r14,%rdx
   18f59:	4c 89 fe             	mov    %r15,%rsi
   18f5c:	41 ff d1             	call   *%r9
   18f5f:	41 89 c4             	mov    %eax,%r12d
   18f62:	eb d6                	jmp    18f3a <_ULx86_64_step+0x37a>
   18f64:	e8 e7 5b ff ff       	call   eb50 <__stack_chk_fail>
   18f69:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18f6d:	4c 8b 03             	mov    (%rbx),%r8
   18f70:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   18f74:	e9 9e fe ff ff       	jmp    18e17 <_ULx86_64_step+0x257>

0000000000018f79 <_Ux86_64_getcontext>:
   18f79:	4c 89 67 48          	mov    %r12,0x48(%rdi)
   18f7d:	4c 89 6f 50          	mov    %r13,0x50(%rdi)
   18f81:	4c 89 77 58          	mov    %r14,0x58(%rdi)
   18f85:	4c 89 7f 60          	mov    %r15,0x60(%rdi)
   18f89:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   18f8d:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   18f94:	4c 89 47 28          	mov    %r8,0x28(%rdi)
   18f98:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
   18f9c:	48 89 7f 68          	mov    %rdi,0x68(%rdi)
   18fa0:	48 89 77 70          	mov    %rsi,0x70(%rdi)
   18fa4:	48 89 97 88 00 00 00 	mov    %rdx,0x88(%rdi)
   18fab:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
   18fb2:	48 89 8f 98 00 00 00 	mov    %rcx,0x98(%rdi)
   18fb9:	4c 8d 87 e0 00 00 00 	lea    0xe0(%rdi),%r8
   18fc0:	4c 89 87 a8 01 00 00 	mov    %r8,0x1a8(%rdi)
   18fc7:	41 d9 30             	fnstenv (%r8)
   18fca:	41 0f ae 58 18       	stmxcsr 0x18(%r8)
   18fcf:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   18fd4:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   18fdb:	48 8b 04 24          	mov    (%rsp),%rax
   18fdf:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   18fe6:	48 31 c0             	xor    %rax,%rax
   18fe9:	c3                   	ret    

0000000000018fea <_Ux86_64_getcontext_trace>:
   18fea:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   18fee:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   18ff5:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   18ffa:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   19001:	48 8b 04 24          	mov    (%rsp),%rax
   19005:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   1900c:	48 31 c0             	xor    %rax,%rax
   1900f:	c3                   	ret    

0000000000019010 <fetch_proc_info>:
   19010:	41 56                	push   %r14
   19012:	66 0f ef c0          	pxor   %xmm0,%xmm0
   19016:	4c 8d b7 58 01 00 00 	lea    0x158(%rdi),%r14
   1901d:	b9 01 00 00 00       	mov    $0x1,%ecx
   19022:	41 55                	push   %r13
   19024:	49 89 f5             	mov    %rsi,%r13
   19027:	4c 89 f2             	mov    %r14,%rdx
   1902a:	41 54                	push   %r12
   1902c:	55                   	push   %rbp
   1902d:	48 89 fd             	mov    %rdi,%rbp
   19030:	48 83 ec 08          	sub    $0x8,%rsp
   19034:	0f b6 87 50 01 00 00 	movzbl 0x150(%rdi),%eax
   1903b:	48 c7 87 98 01 00 00 	movq   $0x0,0x198(%rdi)
   19042:	00 00 00 00 
   19046:	0f 11 87 58 01 00 00 	movups %xmm0,0x158(%rdi)
   1904d:	83 e0 02             	and    $0x2,%eax
   19050:	0f 11 87 68 01 00 00 	movups %xmm0,0x168(%rdi)
   19057:	3c 01                	cmp    $0x1,%al
   19059:	0f 11 87 78 01 00 00 	movups %xmm0,0x178(%rdi)
   19060:	49 83 d5 ff          	adc    $0xffffffffffffffff,%r13
   19064:	0f 11 87 88 01 00 00 	movups %xmm0,0x188(%rdi)
   1906b:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1906f:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   19073:	4c 89 ee             	mov    %r13,%rsi
   19076:	e8 35 3c 00 00       	call   1ccb0 <_ULx86_64_Ifind_dynamic_proc_info>
   1907b:	83 f8 f6             	cmp    $0xfffffff6,%eax
   1907e:	74 30                	je     190b0 <fetch_proc_info+0xa0>
   19080:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   19087:	0f 87 7d 00 00 00    	ja     1910a <fetch_proc_info+0xfa>
   1908d:	80 8d 50 01 00 00 0c 	orb    $0xc,0x150(%rbp)
   19094:	41 89 c4             	mov    %eax,%r12d
   19097:	85 c0                	test   %eax,%eax
   19099:	79 50                	jns    190eb <fetch_proc_info+0xdb>
   1909b:	48 83 c4 08          	add    $0x8,%rsp
   1909f:	44 89 e0             	mov    %r12d,%eax
   190a2:	5d                   	pop    %rbp
   190a3:	41 5c                	pop    %r12
   190a5:	41 5d                	pop    %r13
   190a7:	41 5e                	pop    %r14
   190a9:	c3                   	ret    
   190aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   190b0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   190b4:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   190b8:	b9 01 00 00 00       	mov    $0x1,%ecx
   190bd:	4c 89 f2             	mov    %r14,%rdx
   190c0:	4c 89 ee             	mov    %r13,%rsi
   190c3:	e8 e8 5d 00 00       	call   1eeb0 <_ULx86_64_dwarf_find_proc_info>
   190c8:	41 89 c4             	mov    %eax,%r12d
   190cb:	85 c0                	test   %eax,%eax
   190cd:	78 cc                	js     1909b <fetch_proc_info+0x8b>
   190cf:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   190d6:	77 32                	ja     1910a <fetch_proc_info+0xfa>
   190d8:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   190df:	83 e0 f3             	and    $0xfffffff3,%eax
   190e2:	83 c8 04             	or     $0x4,%eax
   190e5:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   190eb:	4c 89 ee             	mov    %r13,%rsi
   190ee:	48 89 ef             	mov    %rbp,%rdi
   190f1:	ba 01 00 00 00       	mov    $0x1,%edx
   190f6:	e8 a5 39 00 00       	call   1caa0 <_ULx86_64_fetch_frame>
   190fb:	48 83 c4 08          	add    $0x8,%rsp
   190ff:	44 89 e0             	mov    %r12d,%eax
   19102:	5d                   	pop    %rbp
   19103:	41 5c                	pop    %r12
   19105:	41 5d                	pop    %r13
   19107:	41 5e                	pop    %r14
   19109:	c3                   	ret    
   1910a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   19110:	eb 89                	jmp    1909b <fetch_proc_info+0x8b>
   19112:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   19119:	00 00 00 
   1911c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019120 <run_cfi_program>:
   19120:	41 57                	push   %r15
   19122:	4d 89 cf             	mov    %r9,%r15
   19125:	41 56                	push   %r14
   19127:	4d 89 c6             	mov    %r8,%r14
   1912a:	41 55                	push   %r13
   1912c:	49 89 cd             	mov    %rcx,%r13
   1912f:	41 54                	push   %r12
   19131:	49 89 d4             	mov    %rdx,%r12
   19134:	55                   	push   %rbp
   19135:	48 89 f5             	mov    %rsi,%rbp
   19138:	53                   	push   %rbx
   19139:	48 83 ec 38          	sub    $0x38,%rsp
   1913d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   19142:	f6 87 80 01 00 00 20 	testb  $0x20,0x180(%rdi)
   19149:	0f 84 f1 06 00 00    	je     19840 <run_cfi_program+0x720>
   1914f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19156:	00 00 
   19158:	48 8b 05 21 11 01 00 	mov    0x11121(%rip),%rax        # 2a280 <_ULx86_64_local_addr_space>
   1915f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19164:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19169:	e8 d2 3b 00 00       	call   1cd40 <_Ux86_64_get_accessors>
   1916e:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19173:	4d 3b 2c 24          	cmp    (%r12),%r13
   19177:	0f 82 e3 00 00 00    	jb     19260 <run_cfi_program+0x140>
   1917d:	49 8b 3e             	mov    (%r14),%rdi
   19180:	48 8d 1d bd 90 00 00 	lea    0x90bd(%rip),%rbx        # 22244 <_C_ctype_+0x424>
   19187:	4c 8d 1d b2 8d 00 00 	lea    0x8db2(%rip),%r11        # 21f40 <_C_ctype_+0x120>
   1918e:	4c 39 ff             	cmp    %r15,%rdi
   19191:	0f 83 c9 00 00 00    	jae    19260 <run_cfi_program+0x140>
   19197:	0f b6 17             	movzbl (%rdi),%edx
   1919a:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1919e:	49 89 06             	mov    %rax,(%r14)
   191a1:	89 d1                	mov    %edx,%ecx
   191a3:	81 e1 c0 00 00 00    	and    $0xc0,%ecx
   191a9:	0f 84 79 06 00 00    	je     19828 <run_cfi_program+0x708>
   191af:	89 d6                	mov    %edx,%esi
   191b1:	83 e2 3f             	and    $0x3f,%edx
   191b4:	83 e6 3f             	and    $0x3f,%esi
   191b7:	80 f9 c0             	cmp    $0xc0,%cl
   191ba:	0f 87 5a 09 00 00    	ja     19b1a <run_cfi_program+0x9fa>
   191c0:	0f b6 c9             	movzbl %cl,%ecx
   191c3:	49 63 0c 8b          	movslq (%r11,%rcx,4),%rcx
   191c7:	4c 01 d9             	add    %r11,%rcx
   191ca:	3e ff e1             	notrack jmp *%rcx
   191cd:	40 80 fe 10          	cmp    $0x10,%sil
   191d1:	0f 86 ca 05 00 00    	jbe    197a1 <run_cfi_program+0x681>
   191d7:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   191dc:	48 83 c4 38          	add    $0x38,%rsp
   191e0:	5b                   	pop    %rbx
   191e1:	5d                   	pop    %rbp
   191e2:	41 5c                	pop    %r12
   191e4:	41 5d                	pop    %r13
   191e6:	41 5e                	pop    %r14
   191e8:	41 5f                	pop    %r15
   191ea:	c3                   	ret    
   191eb:	31 c9                	xor    %ecx,%ecx
   191ed:	31 d2                	xor    %edx,%edx
   191ef:	0f b6 38             	movzbl (%rax),%edi
   191f2:	48 83 c0 01          	add    $0x1,%rax
   191f6:	49 89 06             	mov    %rax,(%r14)
   191f9:	48 89 fe             	mov    %rdi,%rsi
   191fc:	83 e6 7f             	and    $0x7f,%esi
   191ff:	48 d3 e6             	shl    %cl,%rsi
   19202:	48 83 c1 07          	add    $0x7,%rcx
   19206:	48 09 f2             	or     %rsi,%rdx
   19209:	40 84 ff             	test   %dil,%dil
   1920c:	78 e1                	js     191ef <run_cfi_program+0xcf>
   1920e:	48 83 fa 10          	cmp    $0x10,%rdx
   19212:	0f 87 4e 09 00 00    	ja     19b66 <run_cfi_program+0xa46>
   19218:	c6 84 15 d0 00 00 00 	movb   $0x5,0xd0(%rbp,%rdx,1)
   1921f:	05 
   19220:	31 c9                	xor    %ecx,%ecx
   19222:	31 f6                	xor    %esi,%esi
   19224:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1922b:	00 
   1922c:	49 8b 3e             	mov    (%r14),%rdi
   1922f:	90                   	nop
   19230:	0f b6 17             	movzbl (%rdi),%edx
   19233:	48 83 c7 01          	add    $0x1,%rdi
   19237:	49 89 3e             	mov    %rdi,(%r14)
   1923a:	48 89 d0             	mov    %rdx,%rax
   1923d:	83 e0 7f             	and    $0x7f,%eax
   19240:	48 d3 e0             	shl    %cl,%rax
   19243:	48 83 c1 07          	add    $0x7,%rcx
   19247:	48 09 c6             	or     %rax,%rsi
   1924a:	84 d2                	test   %dl,%dl
   1924c:	78 e2                	js     19230 <run_cfi_program+0x110>
   1924e:	48 01 f7             	add    %rsi,%rdi
   19251:	49 89 3e             	mov    %rdi,(%r14)
   19254:	4d 3b 2c 24          	cmp    (%r12),%r13
   19258:	0f 83 30 ff ff ff    	jae    1918e <run_cfi_program+0x6e>
   1925e:	66 90                	xchg   %ax,%ax
   19260:	31 c0                	xor    %eax,%eax
   19262:	48 83 c4 38          	add    $0x38,%rsp
   19266:	5b                   	pop    %rbx
   19267:	5d                   	pop    %rbp
   19268:	41 5c                	pop    %r12
   1926a:	41 5d                	pop    %r13
   1926c:	41 5e                	pop    %r14
   1926e:	41 5f                	pop    %r15
   19270:	c3                   	ret    
   19271:	31 c9                	xor    %ecx,%ecx
   19273:	31 d2                	xor    %edx,%edx
   19275:	0f b6 38             	movzbl (%rax),%edi
   19278:	48 83 c0 01          	add    $0x1,%rax
   1927c:	49 89 06             	mov    %rax,(%r14)
   1927f:	48 89 fe             	mov    %rdi,%rsi
   19282:	83 e6 7f             	and    $0x7f,%esi
   19285:	48 d3 e6             	shl    %cl,%rsi
   19288:	48 83 c1 07          	add    $0x7,%rcx
   1928c:	48 09 f2             	or     %rsi,%rdx
   1928f:	40 84 ff             	test   %dil,%dil
   19292:	78 e1                	js     19275 <run_cfi_program+0x155>
   19294:	48 83 fa 10          	cmp    $0x10,%rdx
   19298:	0f 87 c8 08 00 00    	ja     19b66 <run_cfi_program+0xa46>
   1929e:	31 c9                	xor    %ecx,%ecx
   192a0:	45 31 c0             	xor    %r8d,%r8d
   192a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   192a8:	0f b6 38             	movzbl (%rax),%edi
   192ab:	48 83 c0 01          	add    $0x1,%rax
   192af:	49 89 06             	mov    %rax,(%r14)
   192b2:	48 89 fe             	mov    %rdi,%rsi
   192b5:	83 e6 7f             	and    $0x7f,%esi
   192b8:	48 d3 e6             	shl    %cl,%rsi
   192bb:	48 83 c1 07          	add    $0x7,%rcx
   192bf:	49 09 f0             	or     %rsi,%r8
   192c2:	40 84 ff             	test   %dil,%dil
   192c5:	78 e1                	js     192a8 <run_cfi_program+0x188>
   192c7:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   192cc:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   192d1:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   192d8:	02 
   192d9:	49 f7 d8             	neg    %r8
   192dc:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   192e3:	00 
   192e4:	4d 3b 2c 24          	cmp    (%r12),%r13
   192e8:	0f 83 a2 00 00 00    	jae    19390 <run_cfi_program+0x270>
   192ee:	31 c0                	xor    %eax,%eax
   192f0:	e9 6d ff ff ff       	jmp    19262 <run_cfi_program+0x142>
   192f5:	31 c9                	xor    %ecx,%ecx
   192f7:	31 d2                	xor    %edx,%edx
   192f9:	0f b6 38             	movzbl (%rax),%edi
   192fc:	48 83 c0 01          	add    $0x1,%rax
   19300:	49 89 06             	mov    %rax,(%r14)
   19303:	48 89 fe             	mov    %rdi,%rsi
   19306:	83 e6 7f             	and    $0x7f,%esi
   19309:	48 d3 e6             	shl    %cl,%rsi
   1930c:	48 83 c1 07          	add    $0x7,%rcx
   19310:	48 09 f2             	or     %rsi,%rdx
   19313:	40 84 ff             	test   %dil,%dil
   19316:	78 e1                	js     192f9 <run_cfi_program+0x1d9>
   19318:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   1931c:	4d 3b 2c 24          	cmp    (%r12),%r13
   19320:	73 6e                	jae    19390 <run_cfi_program+0x270>
   19322:	31 c0                	xor    %eax,%eax
   19324:	e9 39 ff ff ff       	jmp    19262 <run_cfi_program+0x142>
   19329:	31 c9                	xor    %ecx,%ecx
   1932b:	31 d2                	xor    %edx,%edx
   1932d:	0f b6 38             	movzbl (%rax),%edi
   19330:	48 83 c0 01          	add    $0x1,%rax
   19334:	49 89 06             	mov    %rax,(%r14)
   19337:	48 89 fe             	mov    %rdi,%rsi
   1933a:	83 e6 7f             	and    $0x7f,%esi
   1933d:	48 d3 e6             	shl    %cl,%rsi
   19340:	48 83 c1 07          	add    $0x7,%rcx
   19344:	48 09 f2             	or     %rsi,%rdx
   19347:	40 84 ff             	test   %dil,%dil
   1934a:	78 e1                	js     1932d <run_cfi_program+0x20d>
   1934c:	48 83 f9 3f          	cmp    $0x3f,%rcx
   19350:	77 12                	ja     19364 <run_cfi_program+0x244>
   19352:	83 e7 40             	and    $0x40,%edi
   19355:	74 0d                	je     19364 <run_cfi_program+0x244>
   19357:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1935e:	48 d3 e0             	shl    %cl,%rax
   19361:	48 09 c2             	or     %rax,%rdx
   19364:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19369:	48 0f af 50 28       	imul   0x28(%rax),%rdx
   1936e:	c6 85 e2 00 00 00 00 	movb   $0x0,0xe2(%rbp)
   19375:	48 89 95 78 01 00 00 	mov    %rdx,0x178(%rbp)
   1937c:	4d 3b 2c 24          	cmp    (%r12),%r13
   19380:	0f 82 da fe ff ff    	jb     19260 <run_cfi_program+0x140>
   19386:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1938d:	00 00 00 
   19390:	49 8b 3e             	mov    (%r14),%rdi
   19393:	4c 39 ff             	cmp    %r15,%rdi
   19396:	0f 82 fb fd ff ff    	jb     19197 <run_cfi_program+0x77>
   1939c:	e9 bf fe ff ff       	jmp    19260 <run_cfi_program+0x140>
   193a1:	31 c9                	xor    %ecx,%ecx
   193a3:	31 d2                	xor    %edx,%edx
   193a5:	0f b6 38             	movzbl (%rax),%edi
   193a8:	48 83 c0 01          	add    $0x1,%rax
   193ac:	49 89 06             	mov    %rax,(%r14)
   193af:	48 89 fe             	mov    %rdi,%rsi
   193b2:	83 e6 7f             	and    $0x7f,%esi
   193b5:	48 d3 e6             	shl    %cl,%rsi
   193b8:	48 83 c1 07          	add    $0x7,%rcx
   193bc:	48 09 f2             	or     %rsi,%rdx
   193bf:	40 84 ff             	test   %dil,%dil
   193c2:	78 e1                	js     193a5 <run_cfi_program+0x285>
   193c4:	48 83 fa 10          	cmp    $0x10,%rdx
   193c8:	0f 87 98 07 00 00    	ja     19b66 <run_cfi_program+0xa46>
   193ce:	31 c9                	xor    %ecx,%ecx
   193d0:	45 31 c0             	xor    %r8d,%r8d
   193d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   193d8:	0f b6 38             	movzbl (%rax),%edi
   193db:	48 83 c0 01          	add    $0x1,%rax
   193df:	49 89 06             	mov    %rax,(%r14)
   193e2:	48 89 fe             	mov    %rdi,%rsi
   193e5:	83 e6 7f             	and    $0x7f,%esi
   193e8:	48 d3 e6             	shl    %cl,%rsi
   193eb:	48 83 c1 07          	add    $0x7,%rcx
   193ef:	49 09 f0             	or     %rsi,%r8
   193f2:	40 84 ff             	test   %dil,%dil
   193f5:	78 e1                	js     193d8 <run_cfi_program+0x2b8>
   193f7:	48 83 f9 3f          	cmp    $0x3f,%rcx
   193fb:	77 12                	ja     1940f <run_cfi_program+0x2ef>
   193fd:	83 e7 40             	and    $0x40,%edi
   19400:	74 0d                	je     1940f <run_cfi_program+0x2ef>
   19402:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   19409:	48 d3 e0             	shl    %cl,%rax
   1940c:	49 09 c0             	or     %rax,%r8
   1940f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19414:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1941b:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   19420:	b8 03 00 00 00       	mov    $0x3,%eax
   19425:	66 89 85 e1 00 00 00 	mov    %ax,0xe1(%rbp)
   1942c:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   19433:	4d 3b 2c 24          	cmp    (%r12),%r13
   19437:	0f 83 53 ff ff ff    	jae    19390 <run_cfi_program+0x270>
   1943d:	31 c0                	xor    %eax,%eax
   1943f:	e9 1e fe ff ff       	jmp    19262 <run_cfi_program+0x142>
   19444:	31 c9                	xor    %ecx,%ecx
   19446:	31 d2                	xor    %edx,%edx
   19448:	0f b6 38             	movzbl (%rax),%edi
   1944b:	48 83 c0 01          	add    $0x1,%rax
   1944f:	49 89 06             	mov    %rax,(%r14)
   19452:	48 89 fe             	mov    %rdi,%rsi
   19455:	83 e6 7f             	and    $0x7f,%esi
   19458:	48 d3 e6             	shl    %cl,%rsi
   1945b:	48 83 c1 07          	add    $0x7,%rcx
   1945f:	48 09 f2             	or     %rsi,%rdx
   19462:	40 84 ff             	test   %dil,%dil
   19465:	78 e1                	js     19448 <run_cfi_program+0x328>
   19467:	48 83 fa 10          	cmp    $0x10,%rdx
   1946b:	0f 87 f5 06 00 00    	ja     19b66 <run_cfi_program+0xa46>
   19471:	31 c9                	xor    %ecx,%ecx
   19473:	45 31 c0             	xor    %r8d,%r8d
   19476:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1947d:	00 00 00 
   19480:	0f b6 38             	movzbl (%rax),%edi
   19483:	48 83 c0 01          	add    $0x1,%rax
   19487:	49 89 06             	mov    %rax,(%r14)
   1948a:	48 89 fe             	mov    %rdi,%rsi
   1948d:	83 e6 7f             	and    $0x7f,%esi
   19490:	48 d3 e6             	shl    %cl,%rsi
   19493:	48 83 c1 07          	add    $0x7,%rcx
   19497:	49 09 f0             	or     %rsi,%r8
   1949a:	40 84 ff             	test   %dil,%dil
   1949d:	78 e1                	js     19480 <run_cfi_program+0x360>
   1949f:	48 83 f9 3f          	cmp    $0x3f,%rcx
   194a3:	77 1b                	ja     194c0 <run_cfi_program+0x3a0>
   194a5:	83 e7 40             	and    $0x40,%edi
   194a8:	74 16                	je     194c0 <run_cfi_program+0x3a0>
   194aa:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   194b1:	48 d3 e0             	shl    %cl,%rax
   194b4:	49 09 c0             	or     %rax,%r8
   194b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   194be:	00 00 
   194c0:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   194c5:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   194ca:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   194d1:	02 
   194d2:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   194d9:	00 
   194da:	4d 3b 2c 24          	cmp    (%r12),%r13
   194de:	0f 83 ac fe ff ff    	jae    19390 <run_cfi_program+0x270>
   194e4:	31 c0                	xor    %eax,%eax
   194e6:	e9 77 fd ff ff       	jmp    19262 <run_cfi_program+0x142>
   194eb:	31 c9                	xor    %ecx,%ecx
   194ed:	31 d2                	xor    %edx,%edx
   194ef:	0f b6 38             	movzbl (%rax),%edi
   194f2:	48 83 c0 01          	add    $0x1,%rax
   194f6:	49 89 06             	mov    %rax,(%r14)
   194f9:	48 89 fe             	mov    %rdi,%rsi
   194fc:	83 e6 7f             	and    $0x7f,%esi
   194ff:	48 d3 e6             	shl    %cl,%rsi
   19502:	48 83 c1 07          	add    $0x7,%rcx
   19506:	48 09 f2             	or     %rsi,%rdx
   19509:	40 84 ff             	test   %dil,%dil
   1950c:	78 e1                	js     194ef <run_cfi_program+0x3cf>
   1950e:	48 83 fa 10          	cmp    $0x10,%rdx
   19512:	0f 87 4e 06 00 00    	ja     19b66 <run_cfi_program+0xa46>
   19518:	c6 84 15 d0 00 00 00 	movb   $0x4,0xd0(%rbp,%rdx,1)
   1951f:	04 
   19520:	31 c9                	xor    %ecx,%ecx
   19522:	31 f6                	xor    %esi,%esi
   19524:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1952b:	00 
   1952c:	49 8b 3e             	mov    (%r14),%rdi
   1952f:	90                   	nop
   19530:	0f b6 17             	movzbl (%rdi),%edx
   19533:	48 83 c7 01          	add    $0x1,%rdi
   19537:	49 89 3e             	mov    %rdi,(%r14)
   1953a:	48 89 d0             	mov    %rdx,%rax
   1953d:	83 e0 7f             	and    $0x7f,%eax
   19540:	48 d3 e0             	shl    %cl,%rax
   19543:	48 83 c1 07          	add    $0x7,%rcx
   19547:	48 09 c6             	or     %rax,%rsi
   1954a:	84 d2                	test   %dl,%dl
   1954c:	78 e2                	js     19530 <run_cfi_program+0x410>
   1954e:	48 01 f7             	add    %rsi,%rdi
   19551:	49 89 3e             	mov    %rdi,(%r14)
   19554:	4d 3b 2c 24          	cmp    (%r12),%r13
   19558:	0f 83 30 fc ff ff    	jae    1918e <run_cfi_program+0x6e>
   1955e:	e9 fd fc ff ff       	jmp    19260 <run_cfi_program+0x140>
   19563:	31 c9                	xor    %ecx,%ecx
   19565:	31 d2                	xor    %edx,%edx
   19567:	0f b6 38             	movzbl (%rax),%edi
   1956a:	48 83 c0 01          	add    $0x1,%rax
   1956e:	49 89 06             	mov    %rax,(%r14)
   19571:	48 89 fe             	mov    %rdi,%rsi
   19574:	83 e6 7f             	and    $0x7f,%esi
   19577:	48 d3 e6             	shl    %cl,%rsi
   1957a:	48 83 c1 07          	add    $0x7,%rcx
   1957e:	48 09 f2             	or     %rsi,%rdx
   19581:	40 84 ff             	test   %dil,%dil
   19584:	78 e1                	js     19567 <run_cfi_program+0x447>
   19586:	e9 e3 fd ff ff       	jmp    1936e <run_cfi_program+0x24e>
   1958b:	31 c9                	xor    %ecx,%ecx
   1958d:	31 d2                	xor    %edx,%edx
   1958f:	0f b6 38             	movzbl (%rax),%edi
   19592:	48 83 c0 01          	add    $0x1,%rax
   19596:	49 89 06             	mov    %rax,(%r14)
   19599:	48 89 fe             	mov    %rdi,%rsi
   1959c:	83 e6 7f             	and    $0x7f,%esi
   1959f:	48 d3 e6             	shl    %cl,%rsi
   195a2:	48 83 c1 07          	add    $0x7,%rcx
   195a6:	48 09 f2             	or     %rsi,%rdx
   195a9:	40 84 ff             	test   %dil,%dil
   195ac:	78 e1                	js     1958f <run_cfi_program+0x46f>
   195ae:	48 83 fa 10          	cmp    $0x10,%rdx
   195b2:	0f 87 ae 05 00 00    	ja     19b66 <run_cfi_program+0xa46>
   195b8:	c6 85 e1 00 00 00 03 	movb   $0x3,0xe1(%rbp)
   195bf:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   195c6:	4d 3b 2c 24          	cmp    (%r12),%r13
   195ca:	0f 83 c0 fd ff ff    	jae    19390 <run_cfi_program+0x270>
   195d0:	31 c0                	xor    %eax,%eax
   195d2:	e9 8b fc ff ff       	jmp    19262 <run_cfi_program+0x142>
   195d7:	31 c9                	xor    %ecx,%ecx
   195d9:	31 d2                	xor    %edx,%edx
   195db:	0f b6 38             	movzbl (%rax),%edi
   195de:	48 83 c0 01          	add    $0x1,%rax
   195e2:	49 89 06             	mov    %rax,(%r14)
   195e5:	48 89 fe             	mov    %rdi,%rsi
   195e8:	83 e6 7f             	and    $0x7f,%esi
   195eb:	48 d3 e6             	shl    %cl,%rsi
   195ee:	48 83 c1 07          	add    $0x7,%rcx
   195f2:	48 09 f2             	or     %rsi,%rdx
   195f5:	40 84 ff             	test   %dil,%dil
   195f8:	78 e1                	js     195db <run_cfi_program+0x4bb>
   195fa:	48 83 fa 10          	cmp    $0x10,%rdx
   195fe:	0f 87 62 05 00 00    	ja     19b66 <run_cfi_program+0xa46>
   19604:	31 c9                	xor    %ecx,%ecx
   19606:	45 31 c0             	xor    %r8d,%r8d
   19609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19610:	0f b6 38             	movzbl (%rax),%edi
   19613:	48 83 c0 01          	add    $0x1,%rax
   19617:	49 89 06             	mov    %rax,(%r14)
   1961a:	48 89 fe             	mov    %rdi,%rsi
   1961d:	83 e6 7f             	and    $0x7f,%esi
   19620:	48 d3 e6             	shl    %cl,%rsi
   19623:	48 83 c1 07          	add    $0x7,%rcx
   19627:	49 09 f0             	or     %rsi,%r8
   1962a:	40 84 ff             	test   %dil,%dil
   1962d:	78 e1                	js     19610 <run_cfi_program+0x4f0>
   1962f:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   19636:	ba 03 00 00 00       	mov    $0x3,%edx
   1963b:	66 89 95 e1 00 00 00 	mov    %dx,0xe1(%rbp)
   19642:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   19649:	4d 3b 2c 24          	cmp    (%r12),%r13
   1964d:	0f 83 3d fd ff ff    	jae    19390 <run_cfi_program+0x270>
   19653:	31 c0                	xor    %eax,%eax
   19655:	e9 08 fc ff ff       	jmp    19262 <run_cfi_program+0x142>
   1965a:	31 c9                	xor    %ecx,%ecx
   1965c:	31 d2                	xor    %edx,%edx
   1965e:	0f b6 38             	movzbl (%rax),%edi
   19661:	48 83 c0 01          	add    $0x1,%rax
   19665:	49 89 06             	mov    %rax,(%r14)
   19668:	48 89 fe             	mov    %rdi,%rsi
   1966b:	83 e6 7f             	and    $0x7f,%esi
   1966e:	48 d3 e6             	shl    %cl,%rsi
   19671:	48 83 c1 07          	add    $0x7,%rcx
   19675:	48 09 f2             	or     %rsi,%rdx
   19678:	40 84 ff             	test   %dil,%dil
   1967b:	78 e1                	js     1965e <run_cfi_program+0x53e>
   1967d:	48 83 fa 10          	cmp    $0x10,%rdx
   19681:	0f 87 df 04 00 00    	ja     19b66 <run_cfi_program+0xa46>
   19687:	31 c9                	xor    %ecx,%ecx
   19689:	45 31 c0             	xor    %r8d,%r8d
   1968c:	0f 1f 40 00          	nopl   0x0(%rax)
   19690:	0f b6 38             	movzbl (%rax),%edi
   19693:	48 83 c0 01          	add    $0x1,%rax
   19697:	49 89 06             	mov    %rax,(%r14)
   1969a:	48 89 fe             	mov    %rdi,%rsi
   1969d:	83 e6 7f             	and    $0x7f,%esi
   196a0:	48 d3 e6             	shl    %cl,%rsi
   196a3:	48 83 c1 07          	add    $0x7,%rcx
   196a7:	49 09 f0             	or     %rsi,%r8
   196aa:	40 84 ff             	test   %dil,%dil
   196ad:	78 e1                	js     19690 <run_cfi_program+0x570>
   196af:	c6 84 15 d0 00 00 00 	movb   $0x3,0xd0(%rbp,%rdx,1)
   196b6:	03 
   196b7:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   196be:	00 
   196bf:	4d 3b 2c 24          	cmp    (%r12),%r13
   196c3:	0f 83 c7 fc ff ff    	jae    19390 <run_cfi_program+0x270>
   196c9:	31 c0                	xor    %eax,%eax
   196cb:	e9 92 fb ff ff       	jmp    19262 <run_cfi_program+0x142>
   196d0:	31 c9                	xor    %ecx,%ecx
   196d2:	31 d2                	xor    %edx,%edx
   196d4:	0f b6 38             	movzbl (%rax),%edi
   196d7:	48 83 c0 01          	add    $0x1,%rax
   196db:	49 89 06             	mov    %rax,(%r14)
   196de:	48 89 fe             	mov    %rdi,%rsi
   196e1:	83 e6 7f             	and    $0x7f,%esi
   196e4:	48 d3 e6             	shl    %cl,%rsi
   196e7:	48 83 c1 07          	add    $0x7,%rcx
   196eb:	48 09 f2             	or     %rsi,%rdx
   196ee:	40 84 ff             	test   %dil,%dil
   196f1:	78 e1                	js     196d4 <run_cfi_program+0x5b4>
   196f3:	48 83 fa 10          	cmp    $0x10,%rdx
   196f7:	0f 87 69 04 00 00    	ja     19b66 <run_cfi_program+0xa46>
   196fd:	c6 84 15 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rdx,1)
   19704:	01 
   19705:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1970c:	00 00 00 00 00 
   19711:	4d 3b 2c 24          	cmp    (%r12),%r13
   19715:	0f 83 75 fc ff ff    	jae    19390 <run_cfi_program+0x270>
   1971b:	31 c0                	xor    %eax,%eax
   1971d:	e9 40 fb ff ff       	jmp    19262 <run_cfi_program+0x142>
   19722:	31 c9                	xor    %ecx,%ecx
   19724:	31 d2                	xor    %edx,%edx
   19726:	0f b6 38             	movzbl (%rax),%edi
   19729:	48 83 c0 01          	add    $0x1,%rax
   1972d:	49 89 06             	mov    %rax,(%r14)
   19730:	48 89 fe             	mov    %rdi,%rsi
   19733:	83 e6 7f             	and    $0x7f,%esi
   19736:	48 d3 e6             	shl    %cl,%rsi
   19739:	48 83 c1 07          	add    $0x7,%rcx
   1973d:	48 09 f2             	or     %rsi,%rdx
   19740:	40 84 ff             	test   %dil,%dil
   19743:	78 e1                	js     19726 <run_cfi_program+0x606>
   19745:	48 83 fa 10          	cmp    $0x10,%rdx
   19749:	0f 87 17 04 00 00    	ja     19b66 <run_cfi_program+0xa46>
   1974f:	c6 84 15 d0 00 00 00 	movb   $0x0,0xd0(%rbp,%rdx,1)
   19756:	00 
   19757:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1975e:	00 00 00 00 00 
   19763:	4d 3b 2c 24          	cmp    (%r12),%r13
   19767:	0f 83 23 fc ff ff    	jae    19390 <run_cfi_program+0x270>
   1976d:	31 c0                	xor    %eax,%eax
   1976f:	e9 ee fa ff ff       	jmp    19262 <run_cfi_program+0x142>
   19774:	31 c9                	xor    %ecx,%ecx
   19776:	31 d2                	xor    %edx,%edx
   19778:	0f b6 38             	movzbl (%rax),%edi
   1977b:	48 83 c0 01          	add    $0x1,%rax
   1977f:	49 89 06             	mov    %rax,(%r14)
   19782:	48 89 fe             	mov    %rdi,%rsi
   19785:	83 e6 7f             	and    $0x7f,%esi
   19788:	48 d3 e6             	shl    %cl,%rsi
   1978b:	48 83 c1 07          	add    $0x7,%rcx
   1978f:	48 09 f2             	or     %rsi,%rdx
   19792:	40 84 ff             	test   %dil,%dil
   19795:	78 e1                	js     19778 <run_cfi_program+0x658>
   19797:	48 83 fa 10          	cmp    $0x10,%rdx
   1979b:	0f 87 36 fa ff ff    	ja     191d7 <run_cfi_program+0xb7>
   197a1:	0f b6 44 15 18       	movzbl 0x18(%rbp,%rdx,1),%eax
   197a6:	88 84 15 d0 00 00 00 	mov    %al,0xd0(%rbp,%rdx,1)
   197ad:	48 8d 44 d5 00       	lea    0x0(%rbp,%rdx,8),%rax
   197b2:	48 8b 50 30          	mov    0x30(%rax),%rdx
   197b6:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
   197bd:	4d 3b 2c 24          	cmp    (%r12),%r13
   197c1:	0f 83 c9 fb ff ff    	jae    19390 <run_cfi_program+0x270>
   197c7:	31 c0                	xor    %eax,%eax
   197c9:	e9 94 fa ff ff       	jmp    19262 <run_cfi_program+0x142>
   197ce:	31 c9                	xor    %ecx,%ecx
   197d0:	31 d2                	xor    %edx,%edx
   197d2:	0f b6 38             	movzbl (%rax),%edi
   197d5:	48 83 c0 01          	add    $0x1,%rax
   197d9:	49 89 06             	mov    %rax,(%r14)
   197dc:	48 89 fe             	mov    %rdi,%rsi
   197df:	83 e6 7f             	and    $0x7f,%esi
   197e2:	48 d3 e6             	shl    %cl,%rsi
   197e5:	48 83 c1 07          	add    $0x7,%rcx
   197e9:	48 09 f2             	or     %rsi,%rdx
   197ec:	40 84 ff             	test   %dil,%dil
   197ef:	78 e1                	js     197d2 <run_cfi_program+0x6b2>
   197f1:	48 83 fa 10          	cmp    $0x10,%rdx
   197f5:	0f 87 6b 03 00 00    	ja     19b66 <run_cfi_program+0xa46>
   197fb:	31 c9                	xor    %ecx,%ecx
   197fd:	45 31 c0             	xor    %r8d,%r8d
   19800:	0f b6 38             	movzbl (%rax),%edi
   19803:	48 83 c0 01          	add    $0x1,%rax
   19807:	49 89 06             	mov    %rax,(%r14)
   1980a:	48 89 fe             	mov    %rdi,%rsi
   1980d:	83 e6 7f             	and    $0x7f,%esi
   19810:	48 d3 e6             	shl    %cl,%rsi
   19813:	48 83 c1 07          	add    $0x7,%rcx
   19817:	49 09 f0             	or     %rsi,%r8
   1981a:	40 84 ff             	test   %dil,%dil
   1981d:	78 e1                	js     19800 <run_cfi_program+0x6e0>
   1981f:	e9 9c fc ff ff       	jmp    194c0 <run_cfi_program+0x3a0>
   19824:	0f 1f 40 00          	nopl   0x0(%rax)
   19828:	80 fa 3c             	cmp    $0x3c,%dl
   1982b:	0f 87 e9 02 00 00    	ja     19b1a <run_cfi_program+0x9fa>
   19831:	48 63 14 93          	movslq (%rbx,%rdx,4),%rdx
   19835:	48 01 da             	add    %rbx,%rdx
   19838:	3e ff e2             	notrack jmp *%rdx
   1983b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19840:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19845:	48 8b 58 08          	mov    0x8(%rax),%rbx
   19849:	48 8b 00             	mov    (%rax),%rax
   1984c:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   19851:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19856:	e9 09 f9 ff ff       	jmp    19164 <run_cfi_program+0x44>
   1985b:	c6 85 e1 00 00 00 04 	movb   $0x4,0xe1(%rbp)
   19862:	31 c9                	xor    %ecx,%ecx
   19864:	31 f6                	xor    %esi,%esi
   19866:	48 89 85 70 01 00 00 	mov    %rax,0x170(%rbp)
   1986d:	49 8b 3e             	mov    (%r14),%rdi
   19870:	0f b6 17             	movzbl (%rdi),%edx
   19873:	48 83 c7 01          	add    $0x1,%rdi
   19877:	49 89 3e             	mov    %rdi,(%r14)
   1987a:	48 89 d0             	mov    %rdx,%rax
   1987d:	83 e0 7f             	and    $0x7f,%eax
   19880:	48 d3 e0             	shl    %cl,%rax
   19883:	48 83 c1 07          	add    $0x7,%rcx
   19887:	48 09 c6             	or     %rax,%rsi
   1988a:	84 d2                	test   %dl,%dl
   1988c:	78 e2                	js     19870 <run_cfi_program+0x750>
   1988e:	48 01 f7             	add    %rsi,%rdi
   19891:	49 89 3e             	mov    %rdi,(%r14)
   19894:	4d 3b 2c 24          	cmp    (%r12),%r13
   19898:	0f 83 f0 f8 ff ff    	jae    1918e <run_cfi_program+0x6e>
   1989e:	e9 bd f9 ff ff       	jmp    19260 <run_cfi_program+0x140>
   198a3:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   198a8:	48 8b 30             	mov    (%rax),%rsi
   198ab:	48 85 f6             	test   %rsi,%rsi
   198ae:	0f 84 23 f9 ff ff    	je     191d7 <run_cfi_program+0xb7>
   198b4:	f3 0f 6f 5e 08       	movdqu 0x8(%rsi),%xmm3
   198b9:	f3 0f 6f 66 18       	movdqu 0x18(%rsi),%xmm4
   198be:	f3 0f 6f 6e 28       	movdqu 0x28(%rsi),%xmm5
   198c3:	f3 0f 6f 76 38       	movdqu 0x38(%rsi),%xmm6
   198c8:	f3 0f 6f 7e 48       	movdqu 0x48(%rsi),%xmm7
   198cd:	48 8b 86 b8 00 00 00 	mov    0xb8(%rsi),%rax
   198d4:	0f 11 9d c8 00 00 00 	movups %xmm3,0xc8(%rbp)
   198db:	f3 0f 6f 86 a8 00 00 	movdqu 0xa8(%rsi),%xmm0
   198e2:	00 
   198e3:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   198e8:	0f 11 a5 d8 00 00 00 	movups %xmm4,0xd8(%rbp)
   198ef:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   198f4:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   198f9:	0f 11 ad e8 00 00 00 	movups %xmm5,0xe8(%rbp)
   19900:	0f 11 b5 f8 00 00 00 	movups %xmm6,0xf8(%rbp)
   19907:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   1990c:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   19913:	00 
   19914:	0f 11 bd 08 01 00 00 	movups %xmm7,0x108(%rbp)
   1991b:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   19922:	00 
   19923:	48 89 85 78 01 00 00 	mov    %rax,0x178(%rbp)
   1992a:	48 8b 06             	mov    (%rsi),%rax
   1992d:	0f 11 9d 18 01 00 00 	movups %xmm3,0x118(%rbp)
   19934:	0f 11 a5 28 01 00 00 	movups %xmm4,0x128(%rbp)
   1993b:	0f 11 ad 38 01 00 00 	movups %xmm5,0x138(%rbp)
   19942:	0f 11 b5 48 01 00 00 	movups %xmm6,0x148(%rbp)
   19949:	0f 11 bd 58 01 00 00 	movups %xmm7,0x158(%rbp)
   19950:	0f 11 85 68 01 00 00 	movups %xmm0,0x168(%rbp)
   19957:	48 89 07             	mov    %rax,(%rdi)
   1995a:	48 8d 3d df 00 02 00 	lea    0x200df(%rip),%rdi        # 39a40 <dwarf_reg_state_pool>
   19961:	e8 ea 30 00 00       	call   1ca50 <_UIx86_64__mempool_free>
   19966:	4d 3b 2c 24          	cmp    (%r12),%r13
   1996a:	0f 82 f0 f8 ff ff    	jb     19260 <run_cfi_program+0x140>
   19970:	49 8b 3e             	mov    (%r14),%rdi
   19973:	4c 8d 1d c6 85 00 00 	lea    0x85c6(%rip),%r11        # 21f40 <_C_ctype_+0x120>
   1997a:	4c 39 ff             	cmp    %r15,%rdi
   1997d:	0f 82 14 f8 ff ff    	jb     19197 <run_cfi_program+0x77>
   19983:	31 c0                	xor    %eax,%eax
   19985:	e9 d8 f8 ff ff       	jmp    19262 <run_cfi_program+0x142>
   1998a:	0f b6 00             	movzbl (%rax),%eax
   1998d:	48 83 c7 02          	add    $0x2,%rdi
   19991:	49 89 3e             	mov    %rdi,(%r14)
   19994:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   19999:	48 0f af 47 20       	imul   0x20(%rdi),%rax
   1999e:	49 03 04 24          	add    (%r12),%rax
   199a2:	49 89 04 24          	mov    %rax,(%r12)
   199a6:	4c 39 e8             	cmp    %r13,%rax
   199a9:	0f 86 e1 f9 ff ff    	jbe    19390 <run_cfi_program+0x270>
   199af:	31 c0                	xor    %eax,%eax
   199b1:	e9 ac f8 ff ff       	jmp    19262 <run_cfi_program+0x142>
   199b6:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   199bb:	48 83 ec 08          	sub    $0x8,%rsp
   199bf:	4d 89 e1             	mov    %r12,%r9
   199c2:	4c 89 f2             	mov    %r14,%rdx
   199c5:	0f b6 48 44          	movzbl 0x44(%rax),%ecx
   199c9:	ff 74 24 20          	push   0x20(%rsp)
   199cd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   199d2:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   199d7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   199dc:	4c 8d 80 58 01 00 00 	lea    0x158(%rax),%r8
   199e3:	e8 68 12 00 00       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   199e8:	4d 39 2c 24          	cmp    %r13,(%r12)
   199ec:	59                   	pop    %rcx
   199ed:	4c 8d 1d 4c 85 00 00 	lea    0x854c(%rip),%r11        # 21f40 <_C_ctype_+0x120>
   199f4:	5e                   	pop    %rsi
   199f5:	77 10                	ja     19a07 <run_cfi_program+0x8e7>
   199f7:	49 8b 3e             	mov    (%r14),%rdi
   199fa:	85 c0                	test   %eax,%eax
   199fc:	78 09                	js     19a07 <run_cfi_program+0x8e7>
   199fe:	4c 39 ff             	cmp    %r15,%rdi
   19a01:	0f 82 90 f7 ff ff    	jb     19197 <run_cfi_program+0x77>
   19a07:	85 c0                	test   %eax,%eax
   19a09:	ba 00 00 00 00       	mov    $0x0,%edx
   19a0e:	0f 4f c2             	cmovg  %edx,%eax
   19a11:	e9 c6 f7 ff ff       	jmp    191dc <run_cfi_program+0xbc>
   19a16:	8b 00                	mov    (%rax),%eax
   19a18:	48 83 c7 05          	add    $0x5,%rdi
   19a1c:	e9 70 ff ff ff       	jmp    19991 <run_cfi_program+0x871>
   19a21:	0f b7 00             	movzwl (%rax),%eax
   19a24:	48 83 c7 03          	add    $0x3,%rdi
   19a28:	e9 64 ff ff ff       	jmp    19991 <run_cfi_program+0x871>
   19a2d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   19a32:	48 8d 3d 07 00 02 00 	lea    0x20007(%rip),%rdi        # 39a40 <dwarf_reg_state_pool>
   19a39:	48 8b 08             	mov    (%rax),%rcx
   19a3c:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   19a41:	e8 9a 2f 00 00       	call   1c9e0 <_UIx86_64__mempool_alloc>
   19a46:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   19a4b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   19a50:	4c 8d 1d e9 84 00 00 	lea    0x84e9(%rip),%r11        # 21f40 <_C_ctype_+0x120>
   19a57:	48 85 c0             	test   %rax,%rax
   19a5a:	48 89 07             	mov    %rax,(%rdi)
   19a5d:	0f 84 41 01 00 00    	je     19ba4 <run_cfi_program+0xa84>
   19a63:	48 89 08             	mov    %rcx,(%rax)
   19a66:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   19a6b:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   19a72:	00 
   19a73:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   19a7a:	00 
   19a7b:	48 8b 00             	mov    (%rax),%rax
   19a7e:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   19a85:	00 
   19a86:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   19a8d:	00 
   19a8e:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   19a95:	00 
   19a96:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   19a9d:	00 
   19a9e:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   19aa5:	00 
   19aa6:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   19aaa:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   19ab1:	00 
   19ab2:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   19ab9:	00 
   19aba:	0f 11 48 18          	movups %xmm1,0x18(%rax)
   19abe:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   19ac5:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   19acc:	00 
   19acd:	0f 11 50 28          	movups %xmm2,0x28(%rax)
   19ad1:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   19ad8:	00 
   19ad9:	0f 11 58 38          	movups %xmm3,0x38(%rax)
   19add:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
   19ae4:	0f 11 60 48          	movups %xmm4,0x48(%rax)
   19ae8:	0f 11 68 58          	movups %xmm5,0x58(%rax)
   19aec:	0f 11 70 68          	movups %xmm6,0x68(%rax)
   19af0:	0f 11 78 78          	movups %xmm7,0x78(%rax)
   19af4:	0f 11 80 88 00 00 00 	movups %xmm0,0x88(%rax)
   19afb:	0f 11 88 98 00 00 00 	movups %xmm1,0x98(%rax)
   19b02:	0f 11 90 a8 00 00 00 	movups %xmm2,0xa8(%rax)
   19b09:	4d 3b 2c 24          	cmp    (%r12),%r13
   19b0d:	0f 83 7d f8 ff ff    	jae    19390 <run_cfi_program+0x270>
   19b13:	31 c0                	xor    %eax,%eax
   19b15:	e9 48 f7 ff ff       	jmp    19262 <run_cfi_program+0x142>
   19b1a:	4d 3b 2c 24          	cmp    (%r12),%r13
   19b1e:	0f 82 3c f7 ff ff    	jb     19260 <run_cfi_program+0x140>
   19b24:	4c 39 f8             	cmp    %r15,%rax
   19b27:	0f 83 33 f7 ff ff    	jae    19260 <run_cfi_program+0x140>
   19b2d:	48 89 c7             	mov    %rax,%rdi
   19b30:	e9 62 f6 ff ff       	jmp    19197 <run_cfi_program+0x77>
   19b35:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   19b3a:	48 0f af 50 20       	imul   0x20(%rax),%rdx
   19b3f:	49 03 14 24          	add    (%r12),%rdx
   19b43:	49 89 14 24          	mov    %rdx,(%r12)
   19b47:	4c 39 ea             	cmp    %r13,%rdx
   19b4a:	0f 86 40 f8 ff ff    	jbe    19390 <run_cfi_program+0x270>
   19b50:	31 c0                	xor    %eax,%eax
   19b52:	e9 0b f7 ff ff       	jmp    19262 <run_cfi_program+0x142>
   19b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19b5e:	00 00 
   19b60:	40 80 fe 10          	cmp    $0x10,%sil
   19b64:	76 14                	jbe    19b7a <run_cfi_program+0xa5a>
   19b66:	48 83 c4 38          	add    $0x38,%rsp
   19b6a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   19b6f:	5b                   	pop    %rbx
   19b70:	5d                   	pop    %rbp
   19b71:	41 5c                	pop    %r12
   19b73:	41 5d                	pop    %r13
   19b75:	41 5e                	pop    %r14
   19b77:	41 5f                	pop    %r15
   19b79:	c3                   	ret    
   19b7a:	31 c9                	xor    %ecx,%ecx
   19b7c:	45 31 c0             	xor    %r8d,%r8d
   19b7f:	90                   	nop
   19b80:	0f b6 38             	movzbl (%rax),%edi
   19b83:	48 83 c0 01          	add    $0x1,%rax
   19b87:	49 89 06             	mov    %rax,(%r14)
   19b8a:	48 89 fe             	mov    %rdi,%rsi
   19b8d:	83 e6 7f             	and    $0x7f,%esi
   19b90:	48 d3 e6             	shl    %cl,%rsi
   19b93:	48 83 c1 07          	add    $0x7,%rcx
   19b97:	49 09 f0             	or     %rsi,%r8
   19b9a:	40 84 ff             	test   %dil,%dil
   19b9d:	78 e1                	js     19b80 <run_cfi_program+0xa60>
   19b9f:	e9 1c f9 ff ff       	jmp    194c0 <run_cfi_program+0x3a0>
   19ba4:	48 89 0f             	mov    %rcx,(%rdi)
   19ba7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   19bac:	e9 2b f6 ff ff       	jmp    191dc <run_cfi_program+0xbc>
   19bb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   19bb8:	00 00 00 
   19bbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019bc0 <create_state_record_for.part.0>:
   19bc0:	41 57                	push   %r15
   19bc2:	b9 30 00 00 00       	mov    $0x30,%ecx
   19bc7:	41 56                	push   %r14
   19bc9:	41 55                	push   %r13
   19bcb:	41 54                	push   %r12
   19bcd:	55                   	push   %rbp
   19bce:	48 89 f5             	mov    %rsi,%rbp
   19bd1:	53                   	push   %rbx
   19bd2:	48 89 fb             	mov    %rdi,%rbx
   19bd5:	48 89 f7             	mov    %rsi,%rdi
   19bd8:	48 83 ec 38          	sub    $0x38,%rsp
   19bdc:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   19be1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19be8:	00 00 
   19bea:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19bef:	31 c0                	xor    %eax,%eax
   19bf1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   19bf4:	0f 1f 40 00          	nopl   0x0(%rax)
   19bf8:	c6 84 05 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rax,1)
   19bff:	01 
   19c00:	48 c7 84 c5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rax,8)
   19c07:	00 00 00 00 00 
   19c0c:	48 83 c0 01          	add    $0x1,%rax
   19c10:	48 83 f8 13          	cmp    $0x13,%rax
   19c14:	75 e2                	jne    19bf8 <create_state_record_for.part.0+0x38>
   19c16:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   19c1b:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   19c20:	48 89 ee             	mov    %rbp,%rsi
   19c23:	48 89 df             	mov    %rbx,%rdi
   19c26:	48 8b 83 90 01 00 00 	mov    0x190(%rbx),%rax
   19c2d:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   19c34:	4d 89 f8             	mov    %r15,%r8
   19c37:	48 8b 50 30          	mov    0x30(%rax),%rdx
   19c3b:	48 89 95 c8 00 00 00 	mov    %rdx,0xc8(%rbp)
   19c42:	48 8b 10             	mov    (%rax),%rdx
   19c45:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19c4c:	00 00 
   19c4e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   19c53:	4c 8b 48 08          	mov    0x8(%rax),%r9
   19c57:	4c 89 ea             	mov    %r13,%rdx
   19c5a:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   19c61:	00 00 
   19c63:	50                   	push   %rax
   19c64:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   19c69:	41 56                	push   %r14
   19c6b:	e8 b0 f4 ff ff       	call   19120 <run_cfi_program>
   19c70:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   19c75:	59                   	pop    %rcx
   19c76:	41 89 c4             	mov    %eax,%r12d
   19c79:	5f                   	pop    %rdi
   19c7a:	48 85 f6             	test   %rsi,%rsi
   19c7d:	74 32                	je     19cb1 <create_state_record_for.part.0+0xf1>
   19c7f:	48 8d 15 ba fd 01 00 	lea    0x1fdba(%rip),%rdx        # 39a40 <dwarf_reg_state_pool>
   19c86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   19c8d:	00 00 00 
   19c90:	48 8b 06             	mov    (%rsi),%rax
   19c93:	48 89 d7             	mov    %rdx,%rdi
   19c96:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19c9b:	e8 b0 2d 00 00       	call   1ca50 <_UIx86_64__mempool_free>
   19ca0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   19ca5:	48 8d 15 94 fd 01 00 	lea    0x1fd94(%rip),%rdx        # 39a40 <dwarf_reg_state_pool>
   19cac:	48 85 f6             	test   %rsi,%rsi
   19caf:	75 df                	jne    19c90 <create_state_record_for.part.0+0xd0>
   19cb1:	45 85 e4             	test   %r12d,%r12d
   19cb4:	0f 88 2c 01 00 00    	js     19de6 <create_state_record_for.part.0+0x226>
   19cba:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   19cc1:	00 
   19cc2:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   19cc9:	00 
   19cca:	48 89 ee             	mov    %rbp,%rsi
   19ccd:	48 89 df             	mov    %rbx,%rdi
   19cd0:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   19cd7:	00 
   19cd8:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   19cdf:	00 
   19ce0:	4d 89 f8             	mov    %r15,%r8
   19ce3:	0f 29 45 10          	movaps %xmm0,0x10(%rbp)
   19ce7:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   19cee:	00 
   19cef:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   19cf6:	00 
   19cf7:	0f 29 4d 20          	movaps %xmm1,0x20(%rbp)
   19cfb:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   19d02:	00 
   19d03:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   19d0a:	00 
   19d0b:	0f 29 55 30          	movaps %xmm2,0x30(%rbp)
   19d0f:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   19d16:	00 
   19d17:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   19d1e:	00 
   19d1f:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   19d26:	00 
   19d27:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   19d2e:	0f 29 5d 40          	movaps %xmm3,0x40(%rbp)
   19d32:	0f 29 65 50          	movaps %xmm4,0x50(%rbp)
   19d36:	0f 29 6d 60          	movaps %xmm5,0x60(%rbp)
   19d3a:	0f 29 75 70          	movaps %xmm6,0x70(%rbp)
   19d3e:	0f 29 bd 80 00 00 00 	movaps %xmm7,0x80(%rbp)
   19d45:	0f 29 85 90 00 00 00 	movaps %xmm0,0x90(%rbp)
   19d4c:	0f 29 8d a0 00 00 00 	movaps %xmm1,0xa0(%rbp)
   19d53:	0f 29 95 b0 00 00 00 	movaps %xmm2,0xb0(%rbp)
   19d5a:	48 89 95 c0 00 00 00 	mov    %rdx,0xc0(%rbp)
   19d61:	48 8b 93 90 01 00 00 	mov    0x190(%rbx),%rdx
   19d68:	48 8b 42 10          	mov    0x10(%rdx),%rax
   19d6c:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   19d73:	00 00 
   19d75:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   19d7a:	48 8b 83 58 01 00 00 	mov    0x158(%rbx),%rax
   19d81:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19d86:	0f b6 83 50 01 00 00 	movzbl 0x150(%rbx),%eax
   19d8d:	48 8d 1d ac fc 01 00 	lea    0x1fcac(%rip),%rbx        # 39a40 <dwarf_reg_state_pool>
   19d94:	4c 8b 4a 18          	mov    0x18(%rdx),%r9
   19d98:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   19d9d:	52                   	push   %rdx
   19d9e:	4c 89 ea             	mov    %r13,%rdx
   19da1:	41 56                	push   %r14
   19da3:	d0 e8                	shr    %al
   19da5:	83 e0 01             	and    $0x1,%eax
   19da8:	48 29 c1             	sub    %rax,%rcx
   19dab:	e8 70 f3 ff ff       	call   19120 <run_cfi_program>
   19db0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   19db5:	41 89 c4             	mov    %eax,%r12d
   19db8:	58                   	pop    %rax
   19db9:	5a                   	pop    %rdx
   19dba:	48 85 f6             	test   %rsi,%rsi
   19dbd:	74 1b                	je     19dda <create_state_record_for.part.0+0x21a>
   19dbf:	90                   	nop
   19dc0:	48 8b 06             	mov    (%rsi),%rax
   19dc3:	48 89 df             	mov    %rbx,%rdi
   19dc6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19dcb:	e8 80 2c 00 00       	call   1ca50 <_UIx86_64__mempool_free>
   19dd0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   19dd5:	48 85 f6             	test   %rsi,%rsi
   19dd8:	75 e6                	jne    19dc0 <create_state_record_for.part.0+0x200>
   19dda:	45 85 e4             	test   %r12d,%r12d
   19ddd:	b8 00 00 00 00       	mov    $0x0,%eax
   19de2:	44 0f 4f e0          	cmovg  %eax,%r12d
   19de6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19deb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19df2:	00 00 
   19df4:	75 12                	jne    19e08 <create_state_record_for.part.0+0x248>
   19df6:	48 83 c4 38          	add    $0x38,%rsp
   19dfa:	44 89 e0             	mov    %r12d,%eax
   19dfd:	5b                   	pop    %rbx
   19dfe:	5d                   	pop    %rbp
   19dff:	41 5c                	pop    %r12
   19e01:	41 5d                	pop    %r13
   19e03:	41 5e                	pop    %r14
   19e05:	41 5f                	pop    %r15
   19e07:	c3                   	ret    
   19e08:	e8 43 4d ff ff       	call   eb50 <__stack_chk_fail>
   19e0d:	0f 1f 00             	nopl   (%rax)

0000000000019e10 <apply_reg_state>:
   19e10:	41 57                	push   %r15
   19e12:	49 89 ff             	mov    %rdi,%r15
   19e15:	41 56                	push   %r14
   19e17:	41 55                	push   %r13
   19e19:	41 54                	push   %r12
   19e1b:	49 89 f4             	mov    %rsi,%r12
   19e1e:	55                   	push   %rbp
   19e1f:	53                   	push   %rbx
   19e20:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   19e27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19e2e:	00 00 
   19e30:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   19e37:	00 
   19e38:	31 c0                	xor    %eax,%eax
   19e3a:	48 8b 47 18          	mov    0x18(%rdi),%rax
   19e3e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19e43:	48 8b 47 10          	mov    0x10(%rdi),%rax
   19e47:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19e4b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19e50:	e8 eb 2e 00 00       	call   1cd40 <_Ux86_64_get_accessors>
   19e55:	41 80 7c 24 19 03    	cmpb   $0x3,0x19(%r12)
   19e5b:	0f 85 5f 03 00 00    	jne    1a1c0 <apply_reg_state+0x3b0>
   19e61:	49 8b 84 24 a8 00 00 	mov    0xa8(%r12),%rax
   19e68:	00 
   19e69:	48 83 f8 07          	cmp    $0x7,%rax
   19e6d:	0f 84 35 04 00 00    	je     1a2a8 <apply_reg_state+0x498>
   19e73:	31 f6                	xor    %esi,%esi
   19e75:	48 83 f8 10          	cmp    $0x10,%rax
   19e79:	0f 86 d1 03 00 00    	jbe    1a250 <apply_reg_state+0x440>
   19e7f:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
   19e84:	4c 89 ff             	mov    %r15,%rdi
   19e87:	e8 04 2f 00 00       	call   1cd90 <_ULx86_64_get_reg>
   19e8c:	85 c0                	test   %eax,%eax
   19e8e:	0f 88 bb 01 00 00    	js     1a04f <apply_reg_state+0x23f>
   19e94:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19e99:	49 03 84 24 b0 00 00 	add    0xb0(%r12),%rax
   19ea0:	00 
   19ea1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19ea6:	49 8d 77 40          	lea    0x40(%r15),%rsi
   19eaa:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   19eaf:	b9 22 00 00 00       	mov    $0x22,%ecx
   19eb4:	31 db                	xor    %ebx,%ebx
   19eb6:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   19ebb:	48 89 ef             	mov    %rbp,%rdi
   19ebe:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   19ec3:	4c 8d 2d 6e 84 00 00 	lea    0x846e(%rip),%r13        # 22338 <_C_ctype_+0x518>
   19eca:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   19ecd:	48 89 04 24          	mov    %rax,(%rsp)
   19ed1:	4c 89 e0             	mov    %r12,%rax
   19ed4:	4c 8d 74 24 24       	lea    0x24(%rsp),%r14
   19ed9:	4d 89 fc             	mov    %r15,%r12
   19edc:	49 89 c7             	mov    %rax,%r15
   19edf:	90                   	nop
   19ee0:	41 80 7c 1f 08 05    	cmpb   $0x5,0x8(%r15,%rbx,1)
   19ee6:	0f 87 c4 00 00 00    	ja     19fb0 <apply_reg_state+0x1a0>
   19eec:	41 0f b6 44 1f 08    	movzbl 0x8(%r15,%rbx,1),%eax
   19ef2:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
   19ef7:	4c 01 e8             	add    %r13,%rax
   19efa:	3e ff e0             	notrack jmp *%rax
   19efd:	0f 1f 00             	nopl   (%rax)
   19f00:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   19f05:	31 c9                	xor    %ecx,%ecx
   19f07:	45 31 d2             	xor    %r10d,%r10d
   19f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19f10:	0f b6 32             	movzbl (%rdx),%esi
   19f13:	48 83 c2 01          	add    $0x1,%rdx
   19f17:	48 89 f0             	mov    %rsi,%rax
   19f1a:	83 e0 7f             	and    $0x7f,%eax
   19f1d:	48 d3 e0             	shl    %cl,%rax
   19f20:	48 83 c1 07          	add    $0x7,%rcx
   19f24:	49 09 c2             	or     %rax,%r10
   19f27:	40 84 f6             	test   %sil,%sil
   19f2a:	78 e4                	js     19f10 <apply_reg_state+0x100>
   19f2c:	48 8b 0c 24          	mov    (%rsp),%rcx
   19f30:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   19f35:	4d 89 f0             	mov    %r14,%r8
   19f38:	4c 89 d2             	mov    %r10,%rdx
   19f3b:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   19f40:	4c 89 e7             	mov    %r12,%rdi
   19f43:	e8 e8 3d 00 00       	call   1dd30 <_ULx86_64_dwarf_eval_expr>
   19f48:	85 c0                	test   %eax,%eax
   19f4a:	0f 88 ff 00 00 00    	js     1a04f <apply_reg_state+0x23f>
   19f50:	8b 54 24 24          	mov    0x24(%rsp),%edx
   19f54:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   19f59:	85 d2                	test   %edx,%edx
   19f5b:	0f 84 37 02 00 00    	je     1a198 <apply_reg_state+0x388>
   19f61:	31 f6                	xor    %esi,%esi
   19f63:	48 83 f8 10          	cmp    $0x10,%rax
   19f67:	77 0b                	ja     19f74 <apply_reg_state+0x164>
   19f69:	48 8d 3d 00 86 00 00 	lea    0x8600(%rip),%rdi        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   19f70:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   19f74:	49 8b 04 24          	mov    (%r12),%rax
   19f78:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   19f7f:	e8 cc 2b 00 00       	call   1cb50 <_ULx86_64_r_uc_addr>
   19f84:	48 89 da             	mov    %rbx,%rdx
   19f87:	48 c1 e2 04          	shl    $0x4,%rdx
   19f8b:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   19f90:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   19f95:	48 c7 04 10 00 00 00 	movq   $0x0,(%rax,%rdx,1)
   19f9c:	00 
   19f9d:	48 89 da             	mov    %rbx,%rdx
   19fa0:	48 c1 e2 04          	shl    $0x4,%rdx
   19fa4:	48 c7 04 10 04 00 00 	movq   $0x4,(%rax,%rdx,1)
   19fab:	00 
   19fac:	0f 1f 40 00          	nopl   0x0(%rax)
   19fb0:	48 83 c3 01          	add    $0x1,%rbx
   19fb4:	48 83 fb 11          	cmp    $0x11,%rbx
   19fb8:	0f 85 22 ff ff ff    	jne    19ee0 <apply_reg_state+0xd0>
   19fbe:	4c 89 f8             	mov    %r15,%rax
   19fc1:	4d 89 e7             	mov    %r12,%r15
   19fc4:	48 89 ee             	mov    %rbp,%rsi
   19fc7:	49 89 c4             	mov    %rax,%r12
   19fca:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   19fcf:	49 89 47 40          	mov    %rax,0x40(%r15)
   19fd3:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   19fda:	00 
   19fdb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   19fe0:	48 89 87 08 01 00 00 	mov    %rax,0x108(%rdi)
   19fe7:	48 89 f8             	mov    %rdi,%rax
   19fea:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   19fee:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   19ff2:	48 29 f8             	sub    %rdi,%rax
   19ff5:	8d 88 10 01 00 00    	lea    0x110(%rax),%ecx
   19ffb:	48 29 c6             	sub    %rax,%rsi
   19ffe:	89 c8                	mov    %ecx,%eax
   1a000:	c1 e8 03             	shr    $0x3,%eax
   1a003:	89 c1                	mov    %eax,%ecx
   1a005:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1a008:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1a00d:	49 89 47 10          	mov    %rax,0x10(%r15)
   1a011:	49 8b 04 24          	mov    (%r12),%rax
   1a015:	48 83 c0 04          	add    $0x4,%rax
   1a019:	48 c1 e0 04          	shl    $0x4,%rax
   1a01d:	4c 01 f8             	add    %r15,%rax
   1a020:	48 8b 30             	mov    (%rax),%rsi
   1a023:	48 85 f6             	test   %rsi,%rsi
   1a026:	0f 85 34 02 00 00    	jne    1a260 <apply_reg_state+0x450>
   1a02c:	49 c7 47 18 00 00 00 	movq   $0x0,0x18(%r15)
   1a033:	00 
   1a034:	31 c0                	xor    %eax,%eax
   1a036:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1a03b:	0f 84 49 02 00 00    	je     1a28a <apply_reg_state+0x47a>
   1a041:	41 f6 87 50 01 00 00 	testb  $0x1,0x150(%r15)
   1a048:	01 
   1a049:	0f 85 91 02 00 00    	jne    1a2e0 <apply_reg_state+0x4d0>
   1a04f:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   1a056:	00 
   1a057:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1a05e:	00 00 
   1a060:	0f 85 a6 02 00 00    	jne    1a30c <apply_reg_state+0x4fc>
   1a066:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   1a06d:	5b                   	pop    %rbx
   1a06e:	5d                   	pop    %rbp
   1a06f:	41 5c                	pop    %r12
   1a071:	41 5d                	pop    %r13
   1a073:	41 5e                	pop    %r14
   1a075:	41 5f                	pop    %r15
   1a077:	c3                   	ret    
   1a078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a07f:	00 
   1a080:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   1a085:	31 c9                	xor    %ecx,%ecx
   1a087:	45 31 d2             	xor    %r10d,%r10d
   1a08a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a090:	0f b6 32             	movzbl (%rdx),%esi
   1a093:	48 83 c2 01          	add    $0x1,%rdx
   1a097:	48 89 f0             	mov    %rsi,%rax
   1a09a:	83 e0 7f             	and    $0x7f,%eax
   1a09d:	48 d3 e0             	shl    %cl,%rax
   1a0a0:	48 83 c1 07          	add    $0x7,%rcx
   1a0a4:	49 09 c2             	or     %rax,%r10
   1a0a7:	40 84 f6             	test   %sil,%sil
   1a0aa:	78 e4                	js     1a090 <apply_reg_state+0x280>
   1a0ac:	48 8b 0c 24          	mov    (%rsp),%rcx
   1a0b0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1a0b5:	4d 89 f0             	mov    %r14,%r8
   1a0b8:	4c 89 d2             	mov    %r10,%rdx
   1a0bb:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1a0c0:	4c 89 e7             	mov    %r12,%rdi
   1a0c3:	e8 68 3c 00 00       	call   1dd30 <_ULx86_64_dwarf_eval_expr>
   1a0c8:	85 c0                	test   %eax,%eax
   1a0ca:	78 83                	js     1a04f <apply_reg_state+0x23f>
   1a0cc:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   1a0d0:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1a0d5:	85 c9                	test   %ecx,%ecx
   1a0d7:	0f 84 9b 00 00 00    	je     1a178 <apply_reg_state+0x368>
   1a0dd:	31 f6                	xor    %esi,%esi
   1a0df:	48 83 f8 10          	cmp    $0x10,%rax
   1a0e3:	77 0b                	ja     1a0f0 <apply_reg_state+0x2e0>
   1a0e5:	48 8d 3d 84 84 00 00 	lea    0x8484(%rip),%rdi        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1a0ec:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   1a0f0:	49 8b 04 24          	mov    (%r12),%rax
   1a0f4:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1a0fb:	e8 50 2a 00 00       	call   1cb50 <_ULx86_64_r_uc_addr>
   1a100:	49 89 c0             	mov    %rax,%r8
   1a103:	48 89 d8             	mov    %rbx,%rax
   1a106:	48 c1 e0 04          	shl    $0x4,%rax
   1a10a:	4c 89 44 05 00       	mov    %r8,0x0(%rbp,%rax,1)
   1a10f:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1a116:	00 00 
   1a118:	e9 93 fe ff ff       	jmp    19fb0 <apply_reg_state+0x1a0>
   1a11d:	0f 1f 00             	nopl   (%rax)
   1a120:	49 8b 44 df 20       	mov    0x20(%r15,%rbx,8),%rax
   1a125:	31 f6                	xor    %esi,%esi
   1a127:	48 83 f8 10          	cmp    $0x10,%rax
   1a12b:	77 c3                	ja     1a0f0 <apply_reg_state+0x2e0>
   1a12d:	eb b6                	jmp    1a0e5 <apply_reg_state+0x2d5>
   1a12f:	90                   	nop
   1a130:	48 89 d8             	mov    %rbx,%rax
   1a133:	48 c1 e0 04          	shl    $0x4,%rax
   1a137:	48 c7 44 05 00 00 00 	movq   $0x0,0x0(%rbp,%rax,1)
   1a13e:	00 00 
   1a140:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1a147:	00 00 
   1a149:	e9 62 fe ff ff       	jmp    19fb0 <apply_reg_state+0x1a0>
   1a14e:	66 90                	xchg   %ax,%ax
   1a150:	48 89 da             	mov    %rbx,%rdx
   1a153:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1a158:	49 03 44 df 20       	add    0x20(%r15,%rbx,8),%rax
   1a15d:	48 c1 e2 04          	shl    $0x4,%rdx
   1a161:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1a166:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1a16d:	00 00 
   1a16f:	e9 3c fe ff ff       	jmp    19fb0 <apply_reg_state+0x1a0>
   1a174:	0f 1f 40 00          	nopl   0x0(%rax)
   1a178:	48 89 da             	mov    %rbx,%rdx
   1a17b:	48 c1 e2 04          	shl    $0x4,%rdx
   1a17f:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1a184:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1a18b:	00 00 
   1a18d:	e9 1e fe ff ff       	jmp    19fb0 <apply_reg_state+0x1a0>
   1a192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a198:	48 89 da             	mov    %rbx,%rdx
   1a19b:	48 c1 e2 04          	shl    $0x4,%rdx
   1a19f:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1a1a4:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1a1a9:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1a1b0:	00 00 
   1a1b2:	e9 e6 fd ff ff       	jmp    19f9d <apply_reg_state+0x18d>
   1a1b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a1be:	00 00 
   1a1c0:	49 8b 94 24 a8 00 00 	mov    0xa8(%r12),%rdx
   1a1c7:	00 
   1a1c8:	31 c9                	xor    %ecx,%ecx
   1a1ca:	45 31 d2             	xor    %r10d,%r10d
   1a1cd:	0f 1f 00             	nopl   (%rax)
   1a1d0:	0f b6 32             	movzbl (%rdx),%esi
   1a1d3:	48 83 c2 01          	add    $0x1,%rdx
   1a1d7:	48 89 f0             	mov    %rsi,%rax
   1a1da:	83 e0 7f             	and    $0x7f,%eax
   1a1dd:	48 d3 e0             	shl    %cl,%rax
   1a1e0:	48 83 c1 07          	add    $0x7,%rcx
   1a1e4:	49 09 c2             	or     %rax,%r10
   1a1e7:	40 84 f6             	test   %sil,%sil
   1a1ea:	78 e4                	js     1a1d0 <apply_reg_state+0x3c0>
   1a1ec:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1a1f1:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   1a1f6:	4c 89 d2             	mov    %r10,%rdx
   1a1f9:	4c 89 ff             	mov    %r15,%rdi
   1a1fc:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1a201:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
   1a206:	e8 25 3b 00 00       	call   1dd30 <_ULx86_64_dwarf_eval_expr>
   1a20b:	85 c0                	test   %eax,%eax
   1a20d:	0f 88 3c fe ff ff    	js     1a04f <apply_reg_state+0x23f>
   1a213:	8b 74 24 28          	mov    0x28(%rsp),%esi
   1a217:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1a21c:	85 f6                	test   %esi,%esi
   1a21e:	74 22                	je     1a242 <apply_reg_state+0x432>
   1a220:	31 f6                	xor    %esi,%esi
   1a222:	48 83 f8 10          	cmp    $0x10,%rax
   1a226:	77 0b                	ja     1a233 <apply_reg_state+0x423>
   1a228:	48 8d 15 41 83 00 00 	lea    0x8341(%rip),%rdx        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1a22f:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1a233:	49 8b 07             	mov    (%r15),%rax
   1a236:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1a23d:	e8 0e 29 00 00       	call   1cb50 <_ULx86_64_r_uc_addr>
   1a242:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a247:	e9 5a fc ff ff       	jmp    19ea6 <apply_reg_state+0x96>
   1a24c:	0f 1f 40 00          	nopl   0x0(%rax)
   1a250:	48 8d 15 19 83 00 00 	lea    0x8319(%rip),%rdx        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1a257:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1a25b:	e9 1f fc ff ff       	jmp    19e7f <apply_reg_state+0x6f>
   1a260:	48 8b 40 08          	mov    0x8(%rax),%rax
   1a264:	a8 02                	test   $0x2,%al
   1a266:	75 51                	jne    1a2b9 <apply_reg_state+0x4a9>
   1a268:	48 85 c0             	test   %rax,%rax
   1a26b:	0f 84 85 00 00 00    	je     1a2f6 <apply_reg_state+0x4e6>
   1a271:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1a276:	49 89 77 18          	mov    %rsi,0x18(%r15)
   1a27a:	b8 01 00 00 00       	mov    $0x1,%eax
   1a27f:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1a284:	0f 85 b7 fd ff ff    	jne    1a041 <apply_reg_state+0x231>
   1a28a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a28f:	49 39 7f 10          	cmp    %rdi,0x10(%r15)
   1a293:	0f 85 a8 fd ff ff    	jne    1a041 <apply_reg_state+0x231>
   1a299:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1a29e:	e9 ac fd ff ff       	jmp    1a04f <apply_reg_state+0x23f>
   1a2a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a2a8:	41 80 7c 24 0f 01    	cmpb   $0x1,0xf(%r12)
   1a2ae:	75 a0                	jne    1a250 <apply_reg_state+0x440>
   1a2b0:	49 8b 47 10          	mov    0x10(%r15),%rax
   1a2b4:	e9 e0 fb ff ff       	jmp    19e99 <apply_reg_state+0x89>
   1a2b9:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a2bd:	4d 8b 07             	mov    (%r15),%r8
   1a2c0:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1a2c5:	31 c9                	xor    %ecx,%ecx
   1a2c7:	48 89 c7             	mov    %rax,%rdi
   1a2ca:	ff 50 20             	call   *0x20(%rax)
   1a2cd:	85 c0                	test   %eax,%eax
   1a2cf:	0f 88 7a fd ff ff    	js     1a04f <apply_reg_state+0x23f>
   1a2d5:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1a2da:	eb 9a                	jmp    1a276 <apply_reg_state+0x466>
   1a2dc:	0f 1f 40 00          	nopl   0x0(%rax)
   1a2e0:	4c 89 e6             	mov    %r12,%rsi
   1a2e3:	4c 89 ff             	mov    %r15,%rdi
   1a2e6:	89 04 24             	mov    %eax,(%rsp)
   1a2e9:	e8 72 36 00 00       	call   1d960 <_ULx86_64_stash_frame>
   1a2ee:	8b 04 24             	mov    (%rsp),%eax
   1a2f1:	e9 59 fd ff ff       	jmp    1a04f <apply_reg_state+0x23f>
   1a2f6:	49 8b 47 08          	mov    0x8(%r15),%rax
   1a2fa:	4d 8b 07             	mov    (%r15),%r8
   1a2fd:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1a302:	31 c9                	xor    %ecx,%ecx
   1a304:	48 89 c7             	mov    %rax,%rdi
   1a307:	ff 50 18             	call   *0x18(%rax)
   1a30a:	eb c1                	jmp    1a2cd <apply_reg_state+0x4bd>
   1a30c:	e8 3f 48 ff ff       	call   eb50 <__stack_chk_fail>
   1a311:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a318:	00 00 00 
   1a31b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a320 <_ULx86_64_dwarf_flush_rs_cache>:
   1a320:	f3 0f 1e fa          	endbr64 
   1a324:	55                   	push   %rbp
   1a325:	48 8d 47 30          	lea    0x30(%rdi),%rax
   1a329:	53                   	push   %rbx
   1a32a:	48 89 fb             	mov    %rdi,%rbx
   1a32d:	48 83 ec 08          	sub    $0x8,%rsp
   1a331:	66 83 7f 06 07       	cmpw   $0x7,0x6(%rdi)
   1a336:	0f 84 24 01 00 00    	je     1a460 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1a33c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1a340:	48 85 ff             	test   %rdi,%rdi
   1a343:	0f 84 17 01 00 00    	je     1a460 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1a349:	48 39 c7             	cmp    %rax,%rdi
   1a34c:	74 05                	je     1a353 <_ULx86_64_dwarf_flush_rs_cache+0x33>
   1a34e:	e8 1d 2e ff ff       	call   d170 <dlfree>
   1a353:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1a357:	48 85 ff             	test   %rdi,%rdi
   1a35a:	74 11                	je     1a36d <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1a35c:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1a363:	48 39 c7             	cmp    %rax,%rdi
   1a366:	74 05                	je     1a36d <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1a368:	e8 03 2e ff ff       	call   d170 <dlfree>
   1a36d:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1a371:	48 85 ff             	test   %rdi,%rdi
   1a374:	74 11                	je     1a387 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1a376:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1a37d:	48 39 c7             	cmp    %rax,%rdi
   1a380:	74 05                	je     1a387 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1a382:	e8 e9 2d ff ff       	call   d170 <dlfree>
   1a387:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1a38b:	bd 01 00 00 00       	mov    $0x1,%ebp
   1a390:	89 ef                	mov    %ebp,%edi
   1a392:	83 c1 01             	add    $0x1,%ecx
   1a395:	d3 e7                	shl    %cl,%edi
   1a397:	48 63 ff             	movslq %edi,%rdi
   1a39a:	48 01 ff             	add    %rdi,%rdi
   1a39d:	e8 5e 13 ff ff       	call   b700 <dlmalloc>
   1a3a2:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1a3a6:	89 ef                	mov    %ebp,%edi
   1a3a8:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1a3ac:	d3 e7                	shl    %cl,%edi
   1a3ae:	48 63 ff             	movslq %edi,%rdi
   1a3b1:	48 69 ff b8 00 00 00 	imul   $0xb8,%rdi,%rdi
   1a3b8:	e8 43 13 ff ff       	call   b700 <dlmalloc>
   1a3bd:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1a3c1:	89 ef                	mov    %ebp,%edi
   1a3c3:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1a3c7:	d3 e7                	shl    %cl,%edi
   1a3c9:	48 63 ff             	movslq %edi,%rdi
   1a3cc:	48 c1 e7 04          	shl    $0x4,%rdi
   1a3d0:	e8 2b 13 ff ff       	call   b700 <dlmalloc>
   1a3d5:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1a3da:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1a3de:	0f 84 e1 00 00 00    	je     1a4c5 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1a3e4:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   1a3e9:	0f 84 d6 00 00 00    	je     1a4c5 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1a3ef:	48 85 c0             	test   %rax,%rax
   1a3f2:	0f 84 cd 00 00 00    	je     1a4c5 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1a3f8:	0f b7 43 06          	movzwl 0x6(%rbx),%eax
   1a3fc:	89 ee                	mov    %ebp,%esi
   1a3fe:	45 31 c0             	xor    %r8d,%r8d
   1a401:	66 44 89 43 04       	mov    %r8w,0x4(%rbx)
   1a406:	8d 48 01             	lea    0x1(%rax),%ecx
   1a409:	66 89 43 08          	mov    %ax,0x8(%rbx)
   1a40d:	d3 e6                	shl    %cl,%esi
   1a40f:	89 c1                	mov    %eax,%ecx
   1a411:	d3 e5                	shl    %cl,%ebp
   1a413:	85 ed                	test   %ebp,%ebp
   1a415:	7f 74                	jg     1a48b <_ULx86_64_dwarf_flush_rs_cache+0x16b>
   1a417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a41e:	00 00 
   1a420:	85 f6                	test   %esi,%esi
   1a422:	7e 2a                	jle    1a44e <_ULx86_64_dwarf_flush_rs_cache+0x12e>
   1a424:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1a428:	31 c0                	xor    %eax,%eax
   1a42a:	be 01 00 00 00       	mov    $0x1,%esi
   1a42f:	90                   	nop
   1a430:	48 63 d0             	movslq %eax,%rdx
   1a433:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1a438:	83 c0 01             	add    $0x1,%eax
   1a43b:	66 89 0c 57          	mov    %cx,(%rdi,%rdx,2)
   1a43f:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1a443:	89 f2                	mov    %esi,%edx
   1a445:	83 c1 01             	add    $0x1,%ecx
   1a448:	d3 e2                	shl    %cl,%edx
   1a44a:	39 c2                	cmp    %eax,%edx
   1a44c:	7f e2                	jg     1a430 <_ULx86_64_dwarf_flush_rs_cache+0x110>
   1a44e:	31 c0                	xor    %eax,%eax
   1a450:	48 83 c4 08          	add    $0x8,%rsp
   1a454:	5b                   	pop    %rbx
   1a455:	5d                   	pop    %rbp
   1a456:	c3                   	ret    
   1a457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a45e:	00 00 
   1a460:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1a464:	bd 80 00 00 00       	mov    $0x80,%ebp
   1a469:	be 00 01 00 00       	mov    $0x100,%esi
   1a46e:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1a475:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1a479:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1a480:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1a484:	c7 43 04 00 00 07 00 	movl   $0x70000,0x4(%rbx)
   1a48b:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1a48f:	8d 4d ff             	lea    -0x1(%rbp),%ecx
   1a492:	48 c1 e1 04          	shl    $0x4,%rcx
   1a496:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1a49a:	48 01 d1             	add    %rdx,%rcx
   1a49d:	eb 05                	jmp    1a4a4 <_ULx86_64_dwarf_flush_rs_cache+0x184>
   1a49f:	90                   	nop
   1a4a0:	48 83 c2 10          	add    $0x10,%rdx
   1a4a4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1a4a9:	80 60 0c fe          	andb   $0xfe,0xc(%rax)
   1a4ad:	66 89 78 08          	mov    %di,0x8(%rax)
   1a4b1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1a4b8:	48 89 d0             	mov    %rdx,%rax
   1a4bb:	48 39 d1             	cmp    %rdx,%rcx
   1a4be:	75 e0                	jne    1a4a0 <_ULx86_64_dwarf_flush_rs_cache+0x180>
   1a4c0:	e9 5b ff ff ff       	jmp    1a420 <_ULx86_64_dwarf_flush_rs_cache+0x100>
   1a4c5:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1a4ca:	eb 84                	jmp    1a450 <_ULx86_64_dwarf_flush_rs_cache+0x130>
   1a4cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a4d0 <_ULx86_64_dwarf_step>:
   1a4d0:	f3 0f 1e fa          	endbr64 
   1a4d4:	41 57                	push   %r15
   1a4d6:	41 56                	push   %r14
   1a4d8:	41 55                	push   %r13
   1a4da:	41 54                	push   %r12
   1a4dc:	55                   	push   %rbp
   1a4dd:	48 89 fd             	mov    %rdi,%rbp
   1a4e0:	53                   	push   %rbx
   1a4e1:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1a4e8:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1a4ec:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a4f3:	00 00 
   1a4f5:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1a4fc:	00 
   1a4fd:	31 c0                	xor    %eax,%eax
   1a4ff:	41 8b 44 24 40       	mov    0x40(%r12),%eax
   1a504:	85 c0                	test   %eax,%eax
   1a506:	0f 84 b4 02 00 00    	je     1a7c0 <_ULx86_64_dwarf_step+0x2f0>
   1a50c:	4d 8d 6c 24 58       	lea    0x58(%r12),%r13
   1a511:	83 f8 01             	cmp    $0x1,%eax
   1a514:	75 10                	jne    1a526 <_ULx86_64_dwarf_step+0x56>
   1a516:	4c 89 ef             	mov    %r13,%rdi
   1a519:	e8 32 08 ff ff       	call   ad50 <sgx_spin_lock>
   1a51e:	85 c0                	test   %eax,%eax
   1a520:	0f 85 18 06 00 00    	jne    1ab3e <_ULx86_64_dwarf_step+0x66e>
   1a526:	41 8b 44 24 70       	mov    0x70(%r12),%eax
   1a52b:	41 39 44 24 44       	cmp    %eax,0x44(%r12)
   1a530:	75 08                	jne    1a53a <_ULx86_64_dwarf_step+0x6a>
   1a532:	49 83 7c 24 68 00    	cmpq   $0x0,0x68(%r12)
   1a538:	75 1a                	jne    1a554 <_ULx86_64_dwarf_step+0x84>
   1a53a:	4c 89 ef             	mov    %r13,%rdi
   1a53d:	e8 de fd ff ff       	call   1a320 <_ULx86_64_dwarf_flush_rs_cache>
   1a542:	85 c0                	test   %eax,%eax
   1a544:	0f 88 76 02 00 00    	js     1a7c0 <_ULx86_64_dwarf_step+0x2f0>
   1a54a:	41 8b 44 24 44       	mov    0x44(%r12),%eax
   1a54f:	41 89 44 24 70       	mov    %eax,0x70(%r12)
   1a554:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1a558:	4d 85 ed             	test   %r13,%r13
   1a55b:	0f 84 bf 05 00 00    	je     1ab20 <_ULx86_64_dwarf_step+0x650>
   1a561:	0f b7 9d a0 01 00 00 	movzwl 0x1a0(%rbp),%ebx
   1a568:	66 85 db             	test   %bx,%bx
   1a56b:	7e 24                	jle    1a591 <_ULx86_64_dwarf_step+0xc1>
   1a56d:	83 eb 01             	sub    $0x1,%ebx
   1a570:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1a577:	00 
   1a578:	48 0f bf db          	movswq %bx,%rbx
   1a57c:	48 89 d8             	mov    %rbx,%rax
   1a57f:	48 c1 e0 04          	shl    $0x4,%rax
   1a583:	48 01 d0             	add    %rdx,%rax
   1a586:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1a58a:	74 05                	je     1a591 <_ULx86_64_dwarf_step+0xc1>
   1a58c:	48 39 30             	cmp    %rsi,(%rax)
   1a58f:	74 73                	je     1a604 <_ULx86_64_dwarf_step+0x134>
   1a591:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1a598:	79 37 9e 
   1a59b:	41 0f b7 54 24 5e    	movzwl 0x5e(%r12),%edx
   1a5a1:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1a5a6:	48 0f af c6          	imul   %rsi,%rax
   1a5aa:	29 d1                	sub    %edx,%ecx
   1a5ac:	48 d3 e8             	shr    %cl,%rax
   1a5af:	49 8b 4c 24 68       	mov    0x68(%r12),%rcx
   1a5b4:	0f b6 c0             	movzbl %al,%eax
   1a5b7:	0f b7 1c 41          	movzwl (%rcx,%rax,2),%ebx
   1a5bb:	89 d1                	mov    %edx,%ecx
   1a5bd:	b8 01 00 00 00       	mov    $0x1,%eax
   1a5c2:	d3 e0                	shl    %cl,%eax
   1a5c4:	89 c1                	mov    %eax,%ecx
   1a5c6:	0f b7 c3             	movzwl %bx,%eax
   1a5c9:	39 c1                	cmp    %eax,%ecx
   1a5cb:	0f 8e b7 02 00 00    	jle    1a888 <_ULx86_64_dwarf_step+0x3b8>
   1a5d1:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1a5d8:	00 
   1a5d9:	eb 14                	jmp    1a5ef <_ULx86_64_dwarf_step+0x11f>
   1a5db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a5e0:	0f b7 58 08          	movzwl 0x8(%rax),%ebx
   1a5e4:	0f b7 c3             	movzwl %bx,%eax
   1a5e7:	39 c8                	cmp    %ecx,%eax
   1a5e9:	0f 8d 99 02 00 00    	jge    1a888 <_ULx86_64_dwarf_step+0x3b8>
   1a5ef:	48 89 d8             	mov    %rbx,%rax
   1a5f2:	48 c1 e0 04          	shl    $0x4,%rax
   1a5f6:	48 01 d0             	add    %rdx,%rax
   1a5f9:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1a5fd:	74 e1                	je     1a5e0 <_ULx86_64_dwarf_step+0x110>
   1a5ff:	48 39 30             	cmp    %rsi,(%rax)
   1a602:	75 dc                	jne    1a5e0 <_ULx86_64_dwarf_step+0x110>
   1a604:	48 69 db b8 00 00 00 	imul   $0xb8,%rbx,%rbx
   1a60b:	49 03 5c 24 78       	add    0x78(%r12),%rbx
   1a610:	48 85 db             	test   %rbx,%rbx
   1a613:	0f 84 6f 02 00 00    	je     1a888 <_ULx86_64_dwarf_step+0x3b8>
   1a619:	48 89 d8             	mov    %rbx,%rax
   1a61c:	49 2b 44 24 78       	sub    0x78(%r12),%rax
   1a621:	48 c1 f8 03          	sar    $0x3,%rax
   1a625:	66 69 c0 a7 37       	imul   $0x37a7,%ax,%ax
   1a62a:	0f b7 c0             	movzwl %ax,%eax
   1a62d:	48 c1 e0 04          	shl    $0x4,%rax
   1a631:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax
   1a636:	f7 d0                	not    %eax
   1a638:	83 e0 02             	and    $0x2,%eax
   1a63b:	89 c2                	mov    %eax,%edx
   1a63d:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1a644:	83 e0 fd             	and    $0xfffffffd,%eax
   1a647:	09 d0                	or     %edx,%eax
   1a649:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   1a64f:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   1a653:	0f 11 84 24 c8 00 00 	movups %xmm0,0xc8(%rsp)
   1a65a:	00 
   1a65b:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   1a660:	0f 11 8c 24 d8 00 00 	movups %xmm1,0xd8(%rsp)
   1a667:	00 
   1a668:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   1a66d:	0f 11 94 24 e8 00 00 	movups %xmm2,0xe8(%rsp)
   1a674:	00 
   1a675:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   1a67a:	0f 11 9c 24 f8 00 00 	movups %xmm3,0xf8(%rsp)
   1a681:	00 
   1a682:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   1a687:	0f 11 a4 24 08 01 00 	movups %xmm4,0x108(%rsp)
   1a68e:	00 
   1a68f:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   1a694:	0f 11 ac 24 18 01 00 	movups %xmm5,0x118(%rsp)
   1a69b:	00 
   1a69c:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   1a6a1:	0f 11 b4 24 28 01 00 	movups %xmm6,0x128(%rsp)
   1a6a8:	00 
   1a6a9:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   1a6ae:	0f 11 bc 24 38 01 00 	movups %xmm7,0x138(%rsp)
   1a6b5:	00 
   1a6b6:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   1a6bd:	00 
   1a6be:	0f 11 84 24 48 01 00 	movups %xmm0,0x148(%rsp)
   1a6c5:	00 
   1a6c6:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1a6cd:	00 
   1a6ce:	0f 11 8c 24 58 01 00 	movups %xmm1,0x158(%rsp)
   1a6d5:	00 
   1a6d6:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   1a6dd:	00 
   1a6de:	0f 11 94 24 68 01 00 	movups %xmm2,0x168(%rsp)
   1a6e5:	00 
   1a6e6:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
   1a6ed:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1a6f4:	00 
   1a6f5:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1a6f9:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1a6fd:	75 10                	jne    1a70f <_ULx86_64_dwarf_step+0x23f>
   1a6ff:	4c 89 ef             	mov    %r13,%rdi
   1a702:	e8 b9 06 ff ff       	call   adc0 <sgx_spin_unlock>
   1a707:	85 c0                	test   %eax,%eax
   1a709:	0f 85 2f 04 00 00    	jne    1ab3e <_ULx86_64_dwarf_step+0x66e>
   1a70f:	45 31 e4             	xor    %r12d,%r12d
   1a712:	49 2b 5d 20          	sub    0x20(%r13),%rbx
   1a716:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1a71a:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   1a721:	6f 7a d3 
   1a724:	48 c1 fb 03          	sar    $0x3,%rbx
   1a728:	48 0f af d8          	imul   %rax,%rbx
   1a72c:	0f b7 d3             	movzwl %bx,%edx
   1a72f:	8d 73 01             	lea    0x1(%rbx),%esi
   1a732:	0f b7 c3             	movzwl %bx,%eax
   1a735:	48 c1 e2 04          	shl    $0x4,%rdx
   1a739:	0f b7 54 11 0a       	movzwl 0xa(%rcx,%rdx,1),%edx
   1a73e:	66 89 95 a0 01 00 00 	mov    %dx,0x1a0(%rbp)
   1a745:	48 0f bf 95 a2 01 00 	movswq 0x1a2(%rbp),%rdx
   1a74c:	00 
   1a74d:	48 c1 e2 04          	shl    $0x4,%rdx
   1a751:	66 89 74 11 0a       	mov    %si,0xa(%rcx,%rdx,1)
   1a756:	66 89 9d a2 01 00 00 	mov    %bx,0x1a2(%rbp)
   1a75d:	45 85 e4             	test   %r12d,%r12d
   1a760:	78 2d                	js     1a78f <_ULx86_64_dwarf_step+0x2bf>
   1a762:	48 c1 e0 04          	shl    $0x4,%rax
   1a766:	49 03 45 28          	add    0x28(%r13),%rax
   1a76a:	48 89 ef             	mov    %rbp,%rdi
   1a76d:	0f b6 70 0c          	movzbl 0xc(%rax),%esi
   1a771:	40 d0 ee             	shr    %sil
   1a774:	83 e6 01             	and    $0x1,%esi
   1a777:	e8 64 23 00 00       	call   1cae0 <_ULx86_64_reuse_frame>
   1a77c:	48 8d b4 24 c8 00 00 	lea    0xc8(%rsp),%rsi
   1a783:	00 
   1a784:	48 89 ef             	mov    %rbp,%rdi
   1a787:	e8 84 f6 ff ff       	call   19e10 <apply_reg_state>
   1a78c:	41 89 c4             	mov    %eax,%r12d
   1a78f:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1a796:	00 
   1a797:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1a79e:	00 00 
   1a7a0:	0f 85 9d 03 00 00    	jne    1ab43 <_ULx86_64_dwarf_step+0x673>
   1a7a6:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1a7ad:	44 89 e0             	mov    %r12d,%eax
   1a7b0:	5b                   	pop    %rbx
   1a7b1:	5d                   	pop    %rbp
   1a7b2:	41 5c                	pop    %r12
   1a7b4:	41 5d                	pop    %r13
   1a7b6:	41 5e                	pop    %r14
   1a7b8:	41 5f                	pop    %r15
   1a7ba:	c3                   	ret    
   1a7bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a7c0:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1a7c4:	45 31 ff             	xor    %r15d,%r15d
   1a7c7:	45 31 ed             	xor    %r13d,%r13d
   1a7ca:	48 89 ef             	mov    %rbp,%rdi
   1a7cd:	e8 3e e8 ff ff       	call   19010 <fetch_proc_info>
   1a7d2:	41 89 c4             	mov    %eax,%r12d
   1a7d5:	85 c0                	test   %eax,%eax
   1a7d7:	0f 88 c4 00 00 00    	js     1a8a1 <_ULx86_64_dwarf_step+0x3d1>
   1a7dd:	48 8b 85 90 01 00 00 	mov    0x190(%rbp),%rax
   1a7e4:	0f b6 58 46          	movzbl 0x46(%rax),%ebx
   1a7e8:	8b 85 88 01 00 00    	mov    0x188(%rbp),%eax
   1a7ee:	c0 eb 02             	shr    $0x2,%bl
   1a7f1:	83 f3 01             	xor    $0x1,%ebx
   1a7f4:	83 e3 01             	and    $0x1,%ebx
   1a7f7:	85 c0                	test   %eax,%eax
   1a7f9:	0f 84 d1 02 00 00    	je     1aad0 <_ULx86_64_dwarf_step+0x600>
   1a7ff:	83 e8 01             	sub    $0x1,%eax
   1a802:	83 f8 01             	cmp    $0x1,%eax
   1a805:	0f 87 dd 02 00 00    	ja     1aae8 <_ULx86_64_dwarf_step+0x618>
   1a80b:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1a80f:	48 89 e6             	mov    %rsp,%rsi
   1a812:	48 89 ef             	mov    %rbp,%rdi
   1a815:	e8 a6 f3 ff ff       	call   19bc0 <create_state_record_for.part.0>
   1a81a:	41 89 c6             	mov    %eax,%r14d
   1a81d:	41 89 c4             	mov    %eax,%r12d
   1a820:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1a827:	41 f7 d6             	not    %r14d
   1a82a:	41 c1 ee 1f          	shr    $0x1f,%r14d
   1a82e:	45 21 fe             	and    %r15d,%r14d
   1a831:	a8 08                	test   $0x8,%al
   1a833:	0f 85 81 00 00 00    	jne    1a8ba <_ULx86_64_dwarf_step+0x3ea>
   1a839:	48 8b b5 90 01 00 00 	mov    0x190(%rbp),%rsi
   1a840:	48 85 f6             	test   %rsi,%rsi
   1a843:	74 0d                	je     1a852 <_ULx86_64_dwarf_step+0x382>
   1a845:	83 bd 88 01 00 00 01 	cmpl   $0x1,0x188(%rbp)
   1a84c:	0f 84 ae 02 00 00    	je     1ab00 <_ULx86_64_dwarf_step+0x630>
   1a852:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1a859:	01 db                	add    %ebx,%ebx
   1a85b:	83 e3 06             	and    $0x6,%ebx
   1a85e:	83 e0 f9             	and    $0xfffffff9,%eax
   1a861:	09 c3                	or     %eax,%ebx
   1a863:	88 9d 50 01 00 00    	mov    %bl,0x150(%rbp)
   1a869:	45 84 f6             	test   %r14b,%r14b
   1a86c:	75 6a                	jne    1a8d8 <_ULx86_64_dwarf_step+0x408>
   1a86e:	4d 85 ed             	test   %r13,%r13
   1a871:	0f 85 b1 02 00 00    	jne    1ab28 <_ULx86_64_dwarf_step+0x658>
   1a877:	45 85 e4             	test   %r12d,%r12d
   1a87a:	0f 89 fc fe ff ff    	jns    1a77c <_ULx86_64_dwarf_step+0x2ac>
   1a880:	e9 0a ff ff ff       	jmp    1a78f <_ULx86_64_dwarf_step+0x2bf>
   1a885:	0f 1f 00             	nopl   (%rax)
   1a888:	48 89 ef             	mov    %rbp,%rdi
   1a88b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1a891:	e8 7a e7 ff ff       	call   19010 <fetch_proc_info>
   1a896:	41 89 c4             	mov    %eax,%r12d
   1a899:	85 c0                	test   %eax,%eax
   1a89b:	0f 89 3c ff ff ff    	jns    1a7dd <_ULx86_64_dwarf_step+0x30d>
   1a8a1:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1a8a8:	45 31 f6             	xor    %r14d,%r14d
   1a8ab:	89 c3                	mov    %eax,%ebx
   1a8ad:	d0 eb                	shr    %bl
   1a8af:	83 e3 01             	and    $0x1,%ebx
   1a8b2:	a8 08                	test   $0x8,%al
   1a8b4:	0f 84 7f ff ff ff    	je     1a839 <_ULx86_64_dwarf_step+0x369>
   1a8ba:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1a8be:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1a8c2:	48 8d b5 58 01 00 00 	lea    0x158(%rbp),%rsi
   1a8c9:	e8 a2 24 00 00       	call   1cd70 <_ULx86_64_Iput_dynamic_unwind_info>
   1a8ce:	e9 7f ff ff ff       	jmp    1a852 <_ULx86_64_dwarf_step+0x382>
   1a8d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a8d8:	41 0f b7 55 06       	movzwl 0x6(%r13),%edx
   1a8dd:	41 0f b7 5d 04       	movzwl 0x4(%r13),%ebx
   1a8e2:	be 01 00 00 00       	mov    $0x1,%esi
   1a8e7:	4d 8b 45 28          	mov    0x28(%r13),%r8
   1a8eb:	4d 8b 5d 10          	mov    0x10(%r13),%r11
   1a8ef:	89 d1                	mov    %edx,%ecx
   1a8f1:	49 89 de             	mov    %rbx,%r14
   1a8f4:	8d 43 01             	lea    0x1(%rbx),%eax
   1a8f7:	48 89 df             	mov    %rbx,%rdi
   1a8fa:	d3 e6                	shl    %cl,%esi
   1a8fc:	49 c1 e6 04          	shl    $0x4,%r14
   1a900:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   1a903:	4f 8d 0c 30          	lea    (%r8,%r14,1),%r9
   1a907:	21 c8                	and    %ecx,%eax
   1a909:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1a90e:	66 41 89 45 04       	mov    %ax,0x4(%r13)
   1a913:	49 8b 01             	mov    (%r9),%rax
   1a916:	29 d1                	sub    %edx,%ecx
   1a918:	48 85 c0             	test   %rax,%rax
   1a91b:	74 5d                	je     1a97a <_ULx86_64_dwarf_step+0x4aa>
   1a91d:	48 ba 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rdx
   1a924:	79 37 9e 
   1a927:	48 0f af c2          	imul   %rdx,%rax
   1a92b:	48 d3 e8             	shr    %cl,%rax
   1a92e:	0f b6 c0             	movzbl %al,%eax
   1a931:	4d 8d 14 43          	lea    (%r11,%rax,2),%r10
   1a935:	41 0f b7 02          	movzwl (%r10),%eax
   1a939:	89 c2                	mov    %eax,%edx
   1a93b:	39 c6                	cmp    %eax,%esi
   1a93d:	7f 14                	jg     1a953 <_ULx86_64_dwarf_step+0x483>
   1a93f:	eb 39                	jmp    1a97a <_ULx86_64_dwarf_step+0x4aa>
   1a941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a948:	4c 8d 50 08          	lea    0x8(%rax),%r10
   1a94c:	0f b7 c2             	movzwl %dx,%eax
   1a94f:	39 c6                	cmp    %eax,%esi
   1a951:	7e 27                	jle    1a97a <_ULx86_64_dwarf_step+0x4aa>
   1a953:	0f b7 c2             	movzwl %dx,%eax
   1a956:	41 89 d7             	mov    %edx,%r15d
   1a959:	48 c1 e0 04          	shl    $0x4,%rax
   1a95d:	4c 01 c0             	add    %r8,%rax
   1a960:	0f b7 50 08          	movzwl 0x8(%rax),%edx
   1a964:	66 44 39 ff          	cmp    %r15w,%di
   1a968:	75 de                	jne    1a948 <_ULx86_64_dwarf_step+0x478>
   1a96a:	66 41 89 12          	mov    %dx,(%r10)
   1a96e:	41 0f b7 45 06       	movzwl 0x6(%r13),%eax
   1a973:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1a978:	29 c1                	sub    %eax,%ecx
   1a97a:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1a981:	79 37 9e 
   1a984:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1a988:	48 0f af c2          	imul   %rdx,%rax
   1a98c:	48 d3 e8             	shr    %cl,%rax
   1a98f:	0f b6 c0             	movzbl %al,%eax
   1a992:	49 8d 04 43          	lea    (%r11,%rax,2),%rax
   1a996:	0f b7 08             	movzwl (%rax),%ecx
   1a999:	66 41 89 49 08       	mov    %cx,0x8(%r9)
   1a99e:	66 89 38             	mov    %di,(%rax)
   1a9a1:	48 89 ef             	mov    %rbp,%rdi
   1a9a4:	41 80 49 0c 01       	orb    $0x1,0xc(%r9)
   1a9a9:	49 89 11             	mov    %rdx,(%r9)
   1a9ac:	e8 1f 21 00 00       	call   1cad0 <_ULx86_64_cache_frame>
   1a9b1:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1a9b5:	83 e0 01             	and    $0x1,%eax
   1a9b8:	8d 14 00             	lea    (%rax,%rax,1),%edx
   1a9bb:	42 0f b6 44 31 0c    	movzbl 0xc(%rcx,%r14,1),%eax
   1a9c1:	83 e0 fd             	and    $0xfffffffd,%eax
   1a9c4:	09 d0                	or     %edx,%eax
   1a9c6:	48 ba a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rdx
   1a9cd:	6f 7a d3 
   1a9d0:	42 88 44 31 0c       	mov    %al,0xc(%rcx,%r14,1)
   1a9d5:	48 69 c3 b8 00 00 00 	imul   $0xb8,%rbx,%rax
   1a9dc:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   1a9e0:	48 01 c3             	add    %rax,%rbx
   1a9e3:	48 c1 f8 03          	sar    $0x3,%rax
   1a9e7:	48 0f af c2          	imul   %rdx,%rax
   1a9eb:	31 d2                	xor    %edx,%edx
   1a9ed:	48 c1 e0 04          	shl    $0x4,%rax
   1a9f1:	66 89 54 01 0a       	mov    %dx,0xa(%rcx,%rax,1)
   1a9f6:	f3 0f 6f 9c 24 c8 00 	movdqu 0xc8(%rsp),%xmm3
   1a9fd:	00 00 
   1a9ff:	0f 11 1b             	movups %xmm3,(%rbx)
   1aa02:	f3 0f 6f a4 24 d8 00 	movdqu 0xd8(%rsp),%xmm4
   1aa09:	00 00 
   1aa0b:	0f 11 63 10          	movups %xmm4,0x10(%rbx)
   1aa0f:	f3 0f 6f ac 24 e8 00 	movdqu 0xe8(%rsp),%xmm5
   1aa16:	00 00 
   1aa18:	0f 11 6b 20          	movups %xmm5,0x20(%rbx)
   1aa1c:	f3 0f 6f b4 24 f8 00 	movdqu 0xf8(%rsp),%xmm6
   1aa23:	00 00 
   1aa25:	0f 11 73 30          	movups %xmm6,0x30(%rbx)
   1aa29:	f3 0f 6f bc 24 08 01 	movdqu 0x108(%rsp),%xmm7
   1aa30:	00 00 
   1aa32:	0f 11 7b 40          	movups %xmm7,0x40(%rbx)
   1aa36:	f3 0f 6f 9c 24 18 01 	movdqu 0x118(%rsp),%xmm3
   1aa3d:	00 00 
   1aa3f:	0f 11 5b 50          	movups %xmm3,0x50(%rbx)
   1aa43:	f3 0f 6f a4 24 28 01 	movdqu 0x128(%rsp),%xmm4
   1aa4a:	00 00 
   1aa4c:	0f 11 63 60          	movups %xmm4,0x60(%rbx)
   1aa50:	f3 0f 6f ac 24 38 01 	movdqu 0x138(%rsp),%xmm5
   1aa57:	00 00 
   1aa59:	0f 11 6b 70          	movups %xmm5,0x70(%rbx)
   1aa5d:	f3 0f 6f b4 24 48 01 	movdqu 0x148(%rsp),%xmm6
   1aa64:	00 00 
   1aa66:	0f 11 b3 80 00 00 00 	movups %xmm6,0x80(%rbx)
   1aa6d:	f3 0f 6f bc 24 58 01 	movdqu 0x158(%rsp),%xmm7
   1aa74:	00 00 
   1aa76:	0f 11 bb 90 00 00 00 	movups %xmm7,0x90(%rbx)
   1aa7d:	f3 0f 6f 84 24 68 01 	movdqu 0x168(%rsp),%xmm0
   1aa84:	00 00 
   1aa86:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
   1aa8d:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1aa94:	00 
   1aa95:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
   1aa9c:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1aaa0:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1aaa4:	75 10                	jne    1aab6 <_ULx86_64_dwarf_step+0x5e6>
   1aaa6:	4c 89 ef             	mov    %r13,%rdi
   1aaa9:	e8 12 03 ff ff       	call   adc0 <sgx_spin_unlock>
   1aaae:	85 c0                	test   %eax,%eax
   1aab0:	0f 85 88 00 00 00    	jne    1ab3e <_ULx86_64_dwarf_step+0x66e>
   1aab6:	48 85 db             	test   %rbx,%rbx
   1aab9:	0f 85 53 fc ff ff    	jne    1a712 <_ULx86_64_dwarf_step+0x242>
   1aabf:	b8 ff ff 00 00       	mov    $0xffff,%eax
   1aac4:	e9 94 fc ff ff       	jmp    1a75d <_ULx86_64_dwarf_step+0x28d>
   1aac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1aad0:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1aad7:	45 31 f6             	xor    %r14d,%r14d
   1aada:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1aae0:	e9 4c fd ff ff       	jmp    1a831 <_ULx86_64_dwarf_step+0x361>
   1aae5:	0f 1f 00             	nopl   (%rax)
   1aae8:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1aaef:	45 31 f6             	xor    %r14d,%r14d
   1aaf2:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1aaf8:	e9 34 fd ff ff       	jmp    1a831 <_ULx86_64_dwarf_step+0x361>
   1aafd:	0f 1f 00             	nopl   (%rax)
   1ab00:	48 8d 3d f9 ee 01 00 	lea    0x1eef9(%rip),%rdi        # 39a00 <dwarf_cie_info_pool>
   1ab07:	e8 44 1f 00 00       	call   1ca50 <_UIx86_64__mempool_free>
   1ab0c:	48 c7 85 90 01 00 00 	movq   $0x0,0x190(%rbp)
   1ab13:	00 00 00 00 
   1ab17:	e9 36 fd ff ff       	jmp    1a852 <_ULx86_64_dwarf_step+0x382>
   1ab1c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ab20:	45 31 ff             	xor    %r15d,%r15d
   1ab23:	e9 a2 fc ff ff       	jmp    1a7ca <_ULx86_64_dwarf_step+0x2fa>
   1ab28:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1ab2c:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1ab30:	75 8d                	jne    1aabf <_ULx86_64_dwarf_step+0x5ef>
   1ab32:	4c 89 ef             	mov    %r13,%rdi
   1ab35:	e8 86 02 ff ff       	call   adc0 <sgx_spin_unlock>
   1ab3a:	85 c0                	test   %eax,%eax
   1ab3c:	74 81                	je     1aabf <_ULx86_64_dwarf_step+0x5ef>
   1ab3e:	e8 51 5c 00 00       	call   20794 <abort>
   1ab43:	e8 08 40 ff ff       	call   eb50 <__stack_chk_fail>
   1ab48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ab4f:	00 

000000000001ab50 <_ULx86_64_dwarf_make_proc_info>:
   1ab50:	f3 0f 1e fa          	endbr64 
   1ab54:	41 54                	push   %r12
   1ab56:	53                   	push   %rbx
   1ab57:	48 89 fb             	mov    %rdi,%rbx
   1ab5a:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1ab61:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   1ab65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ab6c:	00 00 
   1ab6e:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1ab75:	00 
   1ab76:	31 c0                	xor    %eax,%eax
   1ab78:	e8 93 e4 ff ff       	call   19010 <fetch_proc_info>
   1ab7d:	41 89 c4             	mov    %eax,%r12d
   1ab80:	85 c0                	test   %eax,%eax
   1ab82:	78 30                	js     1abb4 <_ULx86_64_dwarf_make_proc_info+0x64>
   1ab84:	8b 83 88 01 00 00    	mov    0x188(%rbx),%eax
   1ab8a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1ab90:	85 c0                	test   %eax,%eax
   1ab92:	74 20                	je     1abb4 <_ULx86_64_dwarf_make_proc_info+0x64>
   1ab94:	83 e8 01             	sub    $0x1,%eax
   1ab97:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1ab9d:	83 f8 01             	cmp    $0x1,%eax
   1aba0:	77 12                	ja     1abb4 <_ULx86_64_dwarf_make_proc_info+0x64>
   1aba2:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1aba6:	48 89 e6             	mov    %rsp,%rsi
   1aba9:	48 89 df             	mov    %rbx,%rdi
   1abac:	e8 0f f0 ff ff       	call   19bc0 <create_state_record_for.part.0>
   1abb1:	41 89 c4             	mov    %eax,%r12d
   1abb4:	f6 83 50 01 00 00 08 	testb  $0x8,0x150(%rbx)
   1abbb:	75 53                	jne    1ac10 <_ULx86_64_dwarf_make_proc_info+0xc0>
   1abbd:	48 8b b3 90 01 00 00 	mov    0x190(%rbx),%rsi
   1abc4:	48 85 f6             	test   %rsi,%rsi
   1abc7:	74 09                	je     1abd2 <_ULx86_64_dwarf_make_proc_info+0x82>
   1abc9:	83 bb 88 01 00 00 01 	cmpl   $0x1,0x188(%rbx)
   1abd0:	74 56                	je     1ac28 <_ULx86_64_dwarf_make_proc_info+0xd8>
   1abd2:	80 a3 50 01 00 00 fb 	andb   $0xfb,0x150(%rbx)
   1abd9:	45 85 e4             	test   %r12d,%r12d
   1abdc:	78 0c                	js     1abea <_ULx86_64_dwarf_make_proc_info+0x9a>
   1abde:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1abe3:	45 31 e4             	xor    %r12d,%r12d
   1abe6:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1abea:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1abf1:	00 
   1abf2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1abf9:	00 00 
   1abfb:	75 44                	jne    1ac41 <_ULx86_64_dwarf_make_proc_info+0xf1>
   1abfd:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1ac04:	44 89 e0             	mov    %r12d,%eax
   1ac07:	5b                   	pop    %rbx
   1ac08:	41 5c                	pop    %r12
   1ac0a:	c3                   	ret    
   1ac0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ac10:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1ac14:	48 8b 13             	mov    (%rbx),%rdx
   1ac17:	48 8d b3 58 01 00 00 	lea    0x158(%rbx),%rsi
   1ac1e:	e8 4d 21 00 00       	call   1cd70 <_ULx86_64_Iput_dynamic_unwind_info>
   1ac23:	eb ad                	jmp    1abd2 <_ULx86_64_dwarf_make_proc_info+0x82>
   1ac25:	0f 1f 00             	nopl   (%rax)
   1ac28:	48 8d 3d d1 ed 01 00 	lea    0x1edd1(%rip),%rdi        # 39a00 <dwarf_cie_info_pool>
   1ac2f:	e8 1c 1e 00 00       	call   1ca50 <_UIx86_64__mempool_free>
   1ac34:	48 c7 83 90 01 00 00 	movq   $0x0,0x190(%rbx)
   1ac3b:	00 00 00 00 
   1ac3f:	eb 91                	jmp    1abd2 <_ULx86_64_dwarf_make_proc_info+0x82>
   1ac41:	e8 0a 3f ff ff       	call   eb50 <__stack_chk_fail>
   1ac46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ac4d:	00 00 00 

000000000001ac50 <_ULx86_64_dwarf_read_encoded_pointer>:
   1ac50:	f3 0f 1e fa          	endbr64 
   1ac54:	80 f9 ff             	cmp    $0xff,%cl
   1ac57:	0f 84 83 01 00 00    	je     1ade0 <_ULx86_64_dwarf_read_encoded_pointer+0x190>
   1ac5d:	48 8b 3a             	mov    (%rdx),%rdi
   1ac60:	89 c8                	mov    %ecx,%eax
   1ac62:	80 f9 50             	cmp    $0x50,%cl
   1ac65:	0f 84 3d 01 00 00    	je     1ada8 <_ULx86_64_dwarf_read_encoded_pointer+0x158>
   1ac6b:	83 e1 0f             	and    $0xf,%ecx
   1ac6e:	80 f9 0c             	cmp    $0xc,%cl
   1ac71:	0f 87 79 01 00 00    	ja     1adf0 <_ULx86_64_dwarf_read_encoded_pointer+0x1a0>
   1ac77:	48 8d 35 d2 76 00 00 	lea    0x76d2(%rip),%rsi        # 22350 <_C_ctype_+0x530>
   1ac7e:	0f b6 c9             	movzbl %cl,%ecx
   1ac81:	53                   	push   %rbx
   1ac82:	48 63 0c 8e          	movslq (%rsi,%rcx,4),%rcx
   1ac86:	48 01 f1             	add    %rsi,%rcx
   1ac89:	3e ff e1             	notrack jmp *%rcx
   1ac8c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ac90:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
   1ac94:	48 8b 37             	mov    (%rdi),%rsi
   1ac97:	48 89 0a             	mov    %rcx,(%rdx)
   1ac9a:	48 85 f6             	test   %rsi,%rsi
   1ac9d:	74 41                	je     1ace0 <_ULx86_64_dwarf_read_encoded_pointer+0x90>
   1ac9f:	89 c2                	mov    %eax,%edx
   1aca1:	83 e2 70             	and    $0x70,%edx
   1aca4:	80 fa 30             	cmp    $0x30,%dl
   1aca7:	0f 84 23 01 00 00    	je     1add0 <_ULx86_64_dwarf_read_encoded_pointer+0x180>
   1acad:	77 21                	ja     1acd0 <_ULx86_64_dwarf_read_encoded_pointer+0x80>
   1acaf:	84 d2                	test   %dl,%dl
   1acb1:	74 08                	je     1acbb <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1acb3:	80 fa 10             	cmp    $0x10,%dl
   1acb6:	75 38                	jne    1acf0 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1acb8:	48 01 fe             	add    %rdi,%rsi
   1acbb:	84 c0                	test   %al,%al
   1acbd:	0f 88 05 01 00 00    	js     1adc8 <_ULx86_64_dwarf_read_encoded_pointer+0x178>
   1acc3:	31 c0                	xor    %eax,%eax
   1acc5:	49 89 31             	mov    %rsi,(%r9)
   1acc8:	5b                   	pop    %rbx
   1acc9:	c3                   	ret    
   1acca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1acd0:	80 fa 40             	cmp    $0x40,%dl
   1acd3:	75 1b                	jne    1acf0 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1acd5:	49 03 30             	add    (%r8),%rsi
   1acd8:	eb e1                	jmp    1acbb <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1acda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ace0:	31 c0                	xor    %eax,%eax
   1ace2:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1ace9:	5b                   	pop    %rbx
   1acea:	c3                   	ret    
   1aceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1acf0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1acf5:	5b                   	pop    %rbx
   1acf6:	c3                   	ret    
   1acf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1acfe:	00 00 
   1ad00:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1ad04:	0f b7 37             	movzwl (%rdi),%esi
   1ad07:	48 89 0a             	mov    %rcx,(%rdx)
   1ad0a:	eb 8e                	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ad0c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad10:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1ad14:	8b 37                	mov    (%rdi),%esi
   1ad16:	48 89 0a             	mov    %rcx,(%rdx)
   1ad19:	e9 7c ff ff ff       	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ad1e:	66 90                	xchg   %ax,%ax
   1ad20:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1ad24:	48 63 37             	movslq (%rdi),%rsi
   1ad27:	48 89 0a             	mov    %rcx,(%rdx)
   1ad2a:	e9 6b ff ff ff       	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ad2f:	90                   	nop
   1ad30:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1ad34:	48 0f bf 37          	movswq (%rdi),%rsi
   1ad38:	48 89 0a             	mov    %rcx,(%rdx)
   1ad3b:	e9 5a ff ff ff       	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ad40:	49 89 fa             	mov    %rdi,%r10
   1ad43:	31 c9                	xor    %ecx,%ecx
   1ad45:	31 f6                	xor    %esi,%esi
   1ad47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ad4e:	00 00 
   1ad50:	41 0f b6 1a          	movzbl (%r10),%ebx
   1ad54:	49 83 c2 01          	add    $0x1,%r10
   1ad58:	4c 89 12             	mov    %r10,(%rdx)
   1ad5b:	49 89 db             	mov    %rbx,%r11
   1ad5e:	41 83 e3 7f          	and    $0x7f,%r11d
   1ad62:	49 d3 e3             	shl    %cl,%r11
   1ad65:	48 83 c1 07          	add    $0x7,%rcx
   1ad69:	4c 09 de             	or     %r11,%rsi
   1ad6c:	84 db                	test   %bl,%bl
   1ad6e:	78 e0                	js     1ad50 <_ULx86_64_dwarf_read_encoded_pointer+0x100>
   1ad70:	e9 25 ff ff ff       	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ad75:	0f 1f 00             	nopl   (%rax)
   1ad78:	49 89 fa             	mov    %rdi,%r10
   1ad7b:	31 c9                	xor    %ecx,%ecx
   1ad7d:	31 f6                	xor    %esi,%esi
   1ad7f:	90                   	nop
   1ad80:	41 0f b6 1a          	movzbl (%r10),%ebx
   1ad84:	49 83 c2 01          	add    $0x1,%r10
   1ad88:	4c 89 12             	mov    %r10,(%rdx)
   1ad8b:	49 89 db             	mov    %rbx,%r11
   1ad8e:	41 83 e3 7f          	and    $0x7f,%r11d
   1ad92:	49 d3 e3             	shl    %cl,%r11
   1ad95:	48 83 c1 07          	add    $0x7,%rcx
   1ad99:	4c 09 de             	or     %r11,%rsi
   1ad9c:	84 db                	test   %bl,%bl
   1ad9e:	78 e0                	js     1ad80 <_ULx86_64_dwarf_read_encoded_pointer+0x130>
   1ada0:	e9 f5 fe ff ff       	jmp    1ac9a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1ada5:	0f 1f 00             	nopl   (%rax)
   1ada8:	48 83 c7 07          	add    $0x7,%rdi
   1adac:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1adb0:	48 89 3a             	mov    %rdi,(%rdx)
   1adb3:	48 8b 07             	mov    (%rdi),%rax
   1adb6:	48 83 c7 08          	add    $0x8,%rdi
   1adba:	48 89 3a             	mov    %rdi,(%rdx)
   1adbd:	49 89 01             	mov    %rax,(%r9)
   1adc0:	31 c0                	xor    %eax,%eax
   1adc2:	c3                   	ret    
   1adc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1adc8:	48 8b 36             	mov    (%rsi),%rsi
   1adcb:	e9 f3 fe ff ff       	jmp    1acc3 <_ULx86_64_dwarf_read_encoded_pointer+0x73>
   1add0:	49 03 70 20          	add    0x20(%r8),%rsi
   1add4:	e9 e2 fe ff ff       	jmp    1acbb <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1add9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ade0:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1ade7:	31 c0                	xor    %eax,%eax
   1ade9:	c3                   	ret    
   1adea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1adf0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1adf5:	c3                   	ret    
   1adf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1adfd:	00 00 00 

000000000001ae00 <_Ux86_64_dwarf_init>:
   1ae00:	f3 0f 1e fa          	endbr64 
   1ae04:	48 83 ec 08          	sub    $0x8,%rsp
   1ae08:	31 d2                	xor    %edx,%edx
   1ae0a:	be c0 00 00 00       	mov    $0xc0,%esi
   1ae0f:	48 8d 3d 2a ec 01 00 	lea    0x1ec2a(%rip),%rdi        # 39a40 <dwarf_reg_state_pool>
   1ae16:	e8 25 1b 00 00       	call   1c940 <_UIx86_64__mempool_init>
   1ae1b:	31 d2                	xor    %edx,%edx
   1ae1d:	be 48 00 00 00       	mov    $0x48,%esi
   1ae22:	48 8d 3d d7 eb 01 00 	lea    0x1ebd7(%rip),%rdi        # 39a00 <dwarf_cie_info_pool>
   1ae29:	e8 12 1b 00 00       	call   1c940 <_UIx86_64__mempool_init>
   1ae2e:	31 c0                	xor    %eax,%eax
   1ae30:	48 83 c4 08          	add    $0x8,%rsp
   1ae34:	c3                   	ret    
   1ae35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ae3c:	00 00 00 
   1ae3f:	90                   	nop

000000000001ae40 <_ZL5traceP15_Unwind_ContextPv>:
   1ae40:	f3 0f 1e fa          	endbr64 
   1ae44:	b8 08 00 00 00       	mov    $0x8,%eax
   1ae49:	c3                   	ret    
   1ae4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001ae50 <_ZL14free_exceptionPc>:
   1ae50:	48 8d 05 c9 02 01 00 	lea    0x102c9(%rip),%rax        # 2b120 <_ZL16emergency_buffer>
   1ae57:	48 39 c7             	cmp    %rax,%rdi
   1ae5a:	72 0c                	jb     1ae68 <_ZL14free_exceptionPc+0x18>
   1ae5c:	48 8d 90 00 40 00 00 	lea    0x4000(%rax),%rdx
   1ae63:	48 39 d7             	cmp    %rdx,%rdi
   1ae66:	72 08                	jb     1ae70 <_ZL14free_exceptionPc+0x20>
   1ae68:	e9 03 23 ff ff       	jmp    d170 <dlfree>
   1ae6d:	0f 1f 00             	nopl   (%rax)
   1ae70:	53                   	push   %rbx
   1ae71:	31 db                	xor    %ebx,%ebx
   1ae73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ae78:	48 39 c7             	cmp    %rax,%rdi
   1ae7b:	74 33                	je     1aeb0 <_ZL14free_exceptionPc+0x60>
   1ae7d:	83 c3 01             	add    $0x1,%ebx
   1ae80:	48 05 00 04 00 00    	add    $0x400,%rax
   1ae86:	83 fb 10             	cmp    $0x10,%ebx
   1ae89:	75 ed                	jne    1ae78 <_ZL14free_exceptionPc+0x28>
   1ae8b:	ba 00 04 00 00       	mov    $0x400,%edx
   1ae90:	31 f6                	xor    %esi,%esi
   1ae92:	e8 f9 3a ff ff       	call   e990 <memset>
   1ae97:	48 8d 3d 5a 02 01 00 	lea    0x1025a(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1ae9e:	e8 ad fe fe ff       	call   ad50 <sgx_spin_lock>
   1aea3:	48 8d 3d 4e 02 01 00 	lea    0x1024e(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1aeaa:	5b                   	pop    %rbx
   1aeab:	e9 10 ff fe ff       	jmp    adc0 <sgx_spin_unlock>
   1aeb0:	ba 00 04 00 00       	mov    $0x400,%edx
   1aeb5:	31 f6                	xor    %esi,%esi
   1aeb7:	48 63 db             	movslq %ebx,%rbx
   1aeba:	e8 d1 3a ff ff       	call   e990 <memset>
   1aebf:	48 8d 3d 32 02 01 00 	lea    0x10232(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1aec6:	e8 85 fe fe ff       	call   ad50 <sgx_spin_lock>
   1aecb:	48 8d 05 2e 02 01 00 	lea    0x1022e(%rip),%rax        # 2b100 <_ZL16buffer_allocated>
   1aed2:	48 8d 3d 1f 02 01 00 	lea    0x1021f(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1aed9:	c6 05 60 f3 00 00 01 	movb   $0x1,0xf360(%rip)        # 2a240 <_ZL16buffer_available>
   1aee0:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
   1aee4:	5b                   	pop    %rbx
   1aee5:	e9 d6 fe fe ff       	jmp    adc0 <sgx_spin_unlock>
   1aeea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001aef0 <_ZL10read_valuecPPh>:
   1aef0:	83 e7 0f             	and    $0xf,%edi
   1aef3:	40 80 ff 0c          	cmp    $0xc,%dil
   1aef7:	0f 87 25 01 00 00    	ja     1b022 <_ZL10read_valuecPPh+0x132>
   1aefd:	48 8d 15 80 74 00 00 	lea    0x7480(%rip),%rdx        # 22384 <_C_ctype_+0x564>
   1af04:	40 0f b6 ff          	movzbl %dil,%edi
   1af08:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   1af0c:	48 01 d0             	add    %rdx,%rax
   1af0f:	3e ff e0             	notrack jmp *%rax
   1af12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1af18:	48 8b 06             	mov    (%rsi),%rax
   1af1b:	4c 8b 00             	mov    (%rax),%r8
   1af1e:	48 83 c0 08          	add    $0x8,%rax
   1af22:	48 89 06             	mov    %rax,(%rsi)
   1af25:	4c 89 c0             	mov    %r8,%rax
   1af28:	c3                   	ret    
   1af29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1af30:	48 8b 16             	mov    (%rsi),%rdx
   1af33:	31 c9                	xor    %ecx,%ecx
   1af35:	45 31 c0             	xor    %r8d,%r8d
   1af38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1af3f:	00 
   1af40:	0f b6 02             	movzbl (%rdx),%eax
   1af43:	48 83 c2 01          	add    $0x1,%rdx
   1af47:	48 89 16             	mov    %rdx,(%rsi)
   1af4a:	89 c7                	mov    %eax,%edi
   1af4c:	83 e0 7f             	and    $0x7f,%eax
   1af4f:	d3 e0                	shl    %cl,%eax
   1af51:	83 e7 7f             	and    $0x7f,%edi
   1af54:	83 c1 07             	add    $0x7,%ecx
   1af57:	48 98                	cltq   
   1af59:	49 01 c0             	add    %rax,%r8
   1af5c:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1af60:	75 de                	jne    1af40 <_ZL10read_valuecPPh+0x50>
   1af62:	4c 89 c0             	mov    %r8,%rax
   1af65:	c3                   	ret    
   1af66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1af6d:	00 00 00 
   1af70:	48 8b 06             	mov    (%rsi),%rax
   1af73:	44 0f b7 00          	movzwl (%rax),%r8d
   1af77:	48 83 c0 02          	add    $0x2,%rax
   1af7b:	48 89 06             	mov    %rax,(%rsi)
   1af7e:	4c 89 c0             	mov    %r8,%rax
   1af81:	c3                   	ret    
   1af82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1af88:	48 8b 06             	mov    (%rsi),%rax
   1af8b:	44 8b 00             	mov    (%rax),%r8d
   1af8e:	48 83 c0 04          	add    $0x4,%rax
   1af92:	48 89 06             	mov    %rax,(%rsi)
   1af95:	4c 89 c0             	mov    %r8,%rax
   1af98:	c3                   	ret    
   1af99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1afa0:	48 8b 06             	mov    (%rsi),%rax
   1afa3:	4c 63 00             	movslq (%rax),%r8
   1afa6:	48 83 c0 04          	add    $0x4,%rax
   1afaa:	48 89 06             	mov    %rax,(%rsi)
   1afad:	4c 89 c0             	mov    %r8,%rax
   1afb0:	c3                   	ret    
   1afb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1afb8:	48 8b 16             	mov    (%rsi),%rdx
   1afbb:	31 ff                	xor    %edi,%edi
   1afbd:	45 31 c0             	xor    %r8d,%r8d
   1afc0:	0f b6 02             	movzbl (%rdx),%eax
   1afc3:	89 f9                	mov    %edi,%ecx
   1afc5:	48 83 c2 01          	add    $0x1,%rdx
   1afc9:	48 89 16             	mov    %rdx,(%rsi)
   1afcc:	41 89 c1             	mov    %eax,%r9d
   1afcf:	83 e0 7f             	and    $0x7f,%eax
   1afd2:	d3 e0                	shl    %cl,%eax
   1afd4:	41 83 e1 7f          	and    $0x7f,%r9d
   1afd8:	89 f9                	mov    %edi,%ecx
   1afda:	83 c7 07             	add    $0x7,%edi
   1afdd:	48 98                	cltq   
   1afdf:	49 01 c0             	add    %rax,%r8
   1afe2:	44 3a 4a ff          	cmp    -0x1(%rdx),%r9b
   1afe6:	75 d8                	jne    1afc0 <_ZL10read_valuecPPh+0xd0>
   1afe8:	83 c1 06             	add    $0x6,%ecx
   1afeb:	4c 89 c0             	mov    %r8,%rax
   1afee:	48 d3 e8             	shr    %cl,%rax
   1aff1:	48 83 f8 01          	cmp    $0x1,%rax
   1aff5:	0f 85 2a ff ff ff    	jne    1af25 <_ZL10read_valuecPPh+0x35>
   1affb:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1b002:	89 f9                	mov    %edi,%ecx
   1b004:	48 d3 e0             	shl    %cl,%rax
   1b007:	49 09 c0             	or     %rax,%r8
   1b00a:	e9 16 ff ff ff       	jmp    1af25 <_ZL10read_valuecPPh+0x35>
   1b00f:	90                   	nop
   1b010:	48 8b 06             	mov    (%rsi),%rax
   1b013:	4c 0f bf 00          	movswq (%rax),%r8
   1b017:	48 83 c0 02          	add    $0x2,%rax
   1b01b:	48 89 06             	mov    %rax,(%rsi)
   1b01e:	4c 89 c0             	mov    %r8,%rax
   1b021:	c3                   	ret    
   1b022:	50                   	push   %rax
   1b023:	e8 6c 57 00 00       	call   20794 <abort>
   1b028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b02f:	00 

000000000001b030 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>:
   1b030:	41 54                	push   %r12
   1b032:	89 f0                	mov    %esi,%eax
   1b034:	49 89 d4             	mov    %rdx,%r12
   1b037:	53                   	push   %rbx
   1b038:	83 e0 70             	and    $0x70,%eax
   1b03b:	89 f3                	mov    %esi,%ebx
   1b03d:	48 83 ec 08          	sub    $0x8,%rsp
   1b041:	3c 30                	cmp    $0x30,%al
   1b043:	74 53                	je     1b098 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x68>
   1b045:	77 31                	ja     1b078 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x48>
   1b047:	3c 10                	cmp    $0x10,%al
   1b049:	74 45                	je     1b090 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x60>
   1b04b:	3c 20                	cmp    $0x20,%al
   1b04d:	75 11                	jne    1b060 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1b04f:	e8 5c 1f 00 00       	call   1cfb0 <_Unwind_GetTextRelBase>
   1b054:	49 01 c4             	add    %rax,%r12
   1b057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b05e:	00 00 
   1b060:	84 db                	test   %bl,%bl
   1b062:	79 04                	jns    1b068 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x38>
   1b064:	4d 8b 24 24          	mov    (%r12),%r12
   1b068:	48 83 c4 08          	add    $0x8,%rsp
   1b06c:	4c 89 e0             	mov    %r12,%rax
   1b06f:	5b                   	pop    %rbx
   1b070:	41 5c                	pop    %r12
   1b072:	c3                   	ret    
   1b073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b078:	3c 40                	cmp    $0x40,%al
   1b07a:	75 e4                	jne    1b060 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1b07c:	e8 df 1e 00 00       	call   1cf60 <_Unwind_GetRegionStart>
   1b081:	49 01 c4             	add    %rax,%r12
   1b084:	eb da                	jmp    1b060 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1b086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b08d:	00 00 00 
   1b090:	49 01 cc             	add    %rcx,%r12
   1b093:	eb cb                	jmp    1b060 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1b095:	0f 1f 00             	nopl   (%rax)
   1b098:	e8 d3 1d 00 00       	call   1ce70 <_Unwind_GetDataRelBase>
   1b09d:	49 01 c4             	add    %rax,%r12
   1b0a0:	eb be                	jmp    1b060 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1b0a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b0a9:	00 00 00 
   1b0ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b0b0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>:
   1b0b0:	41 54                	push   %r12
   1b0b2:	55                   	push   %rbp
   1b0b3:	48 89 f5             	mov    %rsi,%rbp
   1b0b6:	53                   	push   %rbx
   1b0b7:	48 83 ec 10          	sub    $0x10,%rsp
   1b0bb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b0c2:	00 00 
   1b0c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b0c9:	31 c0                	xor    %eax,%eax
   1b0cb:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   1b0d2:	48 89 04 24          	mov    %rax,(%rsp)
   1b0d6:	48 85 ff             	test   %rdi,%rdi
   1b0d9:	0f 84 91 00 00 00    	je     1b170 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc0>
   1b0df:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1b0e3:	48 89 d3             	mov    %rdx,%rbx
   1b0e6:	49 8b 04 24          	mov    (%r12),%rax
   1b0ea:	4c 89 e7             	mov    %r12,%rdi
   1b0ed:	ff 50 10             	call   *0x10(%rax)
   1b0f0:	84 c0                	test   %al,%al
   1b0f2:	75 4c                	jne    1b140 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x90>
   1b0f4:	48 85 ed             	test   %rbp,%rbp
   1b0f7:	0f 84 80 00 00 00    	je     1b17d <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xcd>
   1b0fd:	4c 89 e6             	mov    %r12,%rsi
   1b100:	48 89 ef             	mov    %rbp,%rdi
   1b103:	e8 98 10 00 00       	call   1c1a0 <_ZNKSt9type_infoeqERKS_>
   1b108:	84 c0                	test   %al,%al
   1b10a:	75 54                	jne    1b160 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   1b10c:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1b110:	48 89 e2             	mov    %rsp,%rdx
   1b113:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b118:	4c 89 e6             	mov    %r12,%rsi
   1b11b:	48 89 ef             	mov    %rbp,%rdi
   1b11e:	ff 50 20             	call   *0x20(%rax)
   1b121:	84 c0                	test   %al,%al
   1b123:	75 3b                	jne    1b160 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   1b125:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1b12a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1b131:	00 00 
   1b133:	75 43                	jne    1b178 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc8>
   1b135:	48 83 c4 10          	add    $0x10,%rsp
   1b139:	5b                   	pop    %rbx
   1b13a:	5d                   	pop    %rbp
   1b13b:	41 5c                	pop    %r12
   1b13d:	c3                   	ret    
   1b13e:	66 90                	xchg   %ax,%ax
   1b140:	48 8b 04 24          	mov    (%rsp),%rax
   1b144:	48 8b 00             	mov    (%rax),%rax
   1b147:	48 89 04 24          	mov    %rax,(%rsp)
   1b14b:	48 85 ed             	test   %rbp,%rbp
   1b14e:	75 ad                	jne    1b0fd <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x4d>
   1b150:	48 89 03             	mov    %rax,(%rbx)
   1b153:	b8 01 00 00 00       	mov    $0x1,%eax
   1b158:	eb cb                	jmp    1b125 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1b15a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b160:	48 8b 14 24          	mov    (%rsp),%rdx
   1b164:	48 89 13             	mov    %rdx,(%rbx)
   1b167:	eb bc                	jmp    1b125 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1b169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b170:	48 85 f6             	test   %rsi,%rsi
   1b173:	0f 94 c0             	sete   %al
   1b176:	eb ad                	jmp    1b125 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1b178:	e8 d3 39 ff ff       	call   eb50 <__stack_chk_fail>
   1b17d:	48 8b 04 24          	mov    (%rsp),%rax
   1b181:	eb cd                	jmp    1b150 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xa0>
   1b183:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b18a:	00 00 00 
   1b18d:	0f 1f 00             	nopl   (%rax)

000000000001b190 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>:
   1b190:	41 54                	push   %r12
   1b192:	55                   	push   %rbp
   1b193:	48 89 fd             	mov    %rdi,%rbp
   1b196:	53                   	push   %rbx
   1b197:	48 83 ec 10          	sub    $0x10,%rsp
   1b19b:	0f be 3a             	movsbl (%rdx),%edi
   1b19e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b1a5:	00 00 
   1b1a7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b1ac:	31 c0                	xor    %eax,%eax
   1b1ae:	89 f8                	mov    %edi,%eax
   1b1b0:	83 e0 0f             	and    $0xf,%eax
   1b1b3:	3c 0c                	cmp    $0xc,%al
   1b1b5:	0f 87 7c 00 00 00    	ja     1b237 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xa7>
   1b1bb:	48 89 d3             	mov    %rdx,%rbx
   1b1be:	0f b6 c0             	movzbl %al,%eax
   1b1c1:	48 8d 15 f0 71 00 00 	lea    0x71f0(%rip),%rdx        # 223b8 <_C_ctype_+0x598>
   1b1c8:	49 89 f4             	mov    %rsi,%r12
   1b1cb:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1b1cf:	48 01 d0             	add    %rdx,%rax
   1b1d2:	3e ff e0             	notrack jmp *%rax
   1b1d5:	0f 1f 00             	nopl   (%rax)
   1b1d8:	b8 08 00 00 00       	mov    $0x8,%eax
   1b1dd:	0f af c8             	imul   %eax,%ecx
   1b1e0:	48 89 e6             	mov    %rsp,%rsi
   1b1e3:	48 63 c9             	movslq %ecx,%rcx
   1b1e6:	49 29 cc             	sub    %rcx,%r12
   1b1e9:	4c 89 24 24          	mov    %r12,(%rsp)
   1b1ed:	e8 fe fc ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1b1f2:	48 89 c2             	mov    %rax,%rdx
   1b1f5:	31 c0                	xor    %eax,%eax
   1b1f7:	48 85 d2             	test   %rdx,%rdx
   1b1fa:	74 0e                	je     1b20a <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x7a>
   1b1fc:	0f b6 33             	movzbl (%rbx),%esi
   1b1ff:	4c 89 e1             	mov    %r12,%rcx
   1b202:	48 89 ef             	mov    %rbp,%rdi
   1b205:	e8 26 fe ff ff       	call   1b030 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1b20a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1b20f:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1b216:	00 00 
   1b218:	75 22                	jne    1b23c <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xac>
   1b21a:	48 83 c4 10          	add    $0x10,%rsp
   1b21e:	5b                   	pop    %rbx
   1b21f:	5d                   	pop    %rbp
   1b220:	41 5c                	pop    %r12
   1b222:	c3                   	ret    
   1b223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b228:	b8 02 00 00 00       	mov    $0x2,%eax
   1b22d:	eb ae                	jmp    1b1dd <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   1b22f:	90                   	nop
   1b230:	b8 04 00 00 00       	mov    $0x4,%eax
   1b235:	eb a6                	jmp    1b1dd <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   1b237:	e8 58 55 00 00       	call   20794 <abort>
   1b23c:	e8 0f 39 ff ff       	call   eb50 <__stack_chk_fail>
   1b241:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b248:	00 00 00 
   1b24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b250 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>:
   1b250:	41 57                	push   %r15
   1b252:	49 89 cf             	mov    %rcx,%r15
   1b255:	41 56                	push   %r14
   1b257:	41 55                	push   %r13
   1b259:	41 54                	push   %r12
   1b25b:	49 89 fc             	mov    %rdi,%r12
   1b25e:	55                   	push   %rbp
   1b25f:	48 89 f5             	mov    %rsi,%rbp
   1b262:	53                   	push   %rbx
   1b263:	48 83 ec 28          	sub    $0x28,%rsp
   1b267:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1b26c:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1b271:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b278:	00 00 
   1b27a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1b27f:	31 c0                	xor    %eax,%eax
   1b281:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   1b288:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   1b28f:	e8 2c 1c 00 00       	call   1cec0 <_Unwind_GetIP>
   1b294:	4c 89 e7             	mov    %r12,%rdi
   1b297:	49 89 c6             	mov    %rax,%r14
   1b29a:	e8 c1 1c 00 00       	call   1cf60 <_Unwind_GetRegionStart>
   1b29f:	49 29 c6             	sub    %rax,%r14
   1b2a2:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1b2a6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b2ab:	48 3b 45 28          	cmp    0x28(%rbp),%rax
   1b2af:	77 79                	ja     1b32a <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   1b2b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b2b8:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1b2bc:	4c 89 ee             	mov    %r13,%rsi
   1b2bf:	e8 2c fc ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1b2c4:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1b2c8:	4c 89 ee             	mov    %r13,%rsi
   1b2cb:	48 89 c3             	mov    %rax,%rbx
   1b2ce:	e8 1d fc ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1b2d3:	49 89 c4             	mov    %rax,%r12
   1b2d6:	49 39 de             	cmp    %rbx,%r14
   1b2d9:	72 4f                	jb     1b32a <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   1b2db:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1b2df:	4c 89 ee             	mov    %r13,%rsi
   1b2e2:	e8 09 fc ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1b2e7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1b2ec:	31 c9                	xor    %ecx,%ecx
   1b2ee:	31 ff                	xor    %edi,%edi
   1b2f0:	0f b6 16             	movzbl (%rsi),%edx
   1b2f3:	48 83 c6 01          	add    $0x1,%rsi
   1b2f7:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1b2fc:	41 89 d0             	mov    %edx,%r8d
   1b2ff:	83 e2 7f             	and    $0x7f,%edx
   1b302:	d3 e2                	shl    %cl,%edx
   1b304:	41 83 e0 7f          	and    $0x7f,%r8d
   1b308:	83 c1 07             	add    $0x7,%ecx
   1b30b:	48 63 d2             	movslq %edx,%rdx
   1b30e:	48 01 d7             	add    %rdx,%rdi
   1b311:	44 3a 46 ff          	cmp    -0x1(%rsi),%r8b
   1b315:	75 d9                	jne    1b2f0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xa0>
   1b317:	49 39 de             	cmp    %rbx,%r14
   1b31a:	76 08                	jbe    1b324 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xd4>
   1b31c:	4c 01 e3             	add    %r12,%rbx
   1b31f:	49 39 de             	cmp    %rbx,%r14
   1b322:	76 2b                	jbe    1b34f <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xff>
   1b324:	48 39 75 28          	cmp    %rsi,0x28(%rbp)
   1b328:	73 8e                	jae    1b2b8 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x68>
   1b32a:	45 31 c0             	xor    %r8d,%r8d
   1b32d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1b332:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1b339:	00 00 
   1b33b:	75 3c                	jne    1b379 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x129>
   1b33d:	48 83 c4 28          	add    $0x28,%rsp
   1b341:	44 89 c0             	mov    %r8d,%eax
   1b344:	5b                   	pop    %rbx
   1b345:	5d                   	pop    %rbp
   1b346:	41 5c                	pop    %r12
   1b348:	41 5d                	pop    %r13
   1b34a:	41 5e                	pop    %r14
   1b34c:	41 5f                	pop    %r15
   1b34e:	c3                   	ret    
   1b34f:	48 85 ff             	test   %rdi,%rdi
   1b352:	74 0c                	je     1b360 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x110>
   1b354:	48 8b 55 28          	mov    0x28(%rbp),%rdx
   1b358:	48 8d 54 3a ff       	lea    -0x1(%rdx,%rdi,1),%rdx
   1b35d:	49 89 17             	mov    %rdx,(%r15)
   1b360:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1b366:	48 85 c0             	test   %rax,%rax
   1b369:	74 c2                	je     1b32d <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   1b36b:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1b370:	48 03 45 08          	add    0x8(%rbp),%rax
   1b374:	48 89 03             	mov    %rax,(%rbx)
   1b377:	eb b4                	jmp    1b32d <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   1b379:	e8 d2 37 ff ff       	call   eb50 <__stack_chk_fail>
   1b37e:	66 90                	xchg   %ax,%ax

000000000001b380 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>:
   1b380:	41 57                	push   %r15
   1b382:	41 56                	push   %r14
   1b384:	41 55                	push   %r13
   1b386:	41 54                	push   %r12
   1b388:	55                   	push   %rbp
   1b389:	53                   	push   %rbx
   1b38a:	48 83 ec 28          	sub    $0x28,%rsp
   1b38e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1b393:	48 85 d2             	test   %rdx,%rdx
   1b396:	0f 84 f0 01 00 00    	je     1b58c <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x20c>
   1b39c:	48 85 c9             	test   %rcx,%rcx
   1b39f:	48 89 fd             	mov    %rdi,%rbp
   1b3a2:	49 89 f7             	mov    %rsi,%r15
   1b3a5:	49 89 d5             	mov    %rdx,%r13
   1b3a8:	48 89 cb             	mov    %rcx,%rbx
   1b3ab:	4d 89 cc             	mov    %r9,%r12
   1b3ae:	4c 8d 76 18          	lea    0x18(%rsi),%r14
   1b3b2:	0f 95 44 24 0b       	setne  0xb(%rsp)
   1b3b7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   1b3be:	00 
   1b3bf:	90                   	nop
   1b3c0:	31 d2                	xor    %edx,%edx
   1b3c2:	45 31 c0             	xor    %r8d,%r8d
   1b3c5:	89 d1                	mov    %edx,%ecx
   1b3c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b3ce:	00 00 
   1b3d0:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   1b3d5:	49 83 c5 01          	add    $0x1,%r13
   1b3d9:	89 d0                	mov    %edx,%eax
   1b3db:	83 e0 7f             	and    $0x7f,%eax
   1b3de:	d3 e0                	shl    %cl,%eax
   1b3e0:	48 98                	cltq   
   1b3e2:	49 01 c0             	add    %rax,%r8
   1b3e5:	89 c8                	mov    %ecx,%eax
   1b3e7:	83 c1 07             	add    $0x7,%ecx
   1b3ea:	84 d2                	test   %dl,%dl
   1b3ec:	78 e2                	js     1b3d0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x50>
   1b3ee:	89 ca                	mov    %ecx,%edx
   1b3f0:	89 c1                	mov    %eax,%ecx
   1b3f2:	4c 89 c6             	mov    %r8,%rsi
   1b3f5:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1b3fc:	83 c1 06             	add    $0x6,%ecx
   1b3ff:	4c 89 c7             	mov    %r8,%rdi
   1b402:	48 d3 ee             	shr    %cl,%rsi
   1b405:	89 d1                	mov    %edx,%ecx
   1b407:	48 d3 e0             	shl    %cl,%rax
   1b40a:	49 09 c0             	or     %rax,%r8
   1b40d:	48 83 fe 01          	cmp    $0x1,%rsi
   1b411:	4c 89 ee             	mov    %r13,%rsi
   1b414:	4c 0f 45 c7          	cmovne %rdi,%r8
   1b418:	31 d2                	xor    %edx,%edx
   1b41a:	45 31 db             	xor    %r11d,%r11d
   1b41d:	89 d1                	mov    %edx,%ecx
   1b41f:	90                   	nop
   1b420:	0f b6 16             	movzbl (%rsi),%edx
   1b423:	48 83 c6 01          	add    $0x1,%rsi
   1b427:	89 d0                	mov    %edx,%eax
   1b429:	83 e0 7f             	and    $0x7f,%eax
   1b42c:	d3 e0                	shl    %cl,%eax
   1b42e:	48 98                	cltq   
   1b430:	49 01 c3             	add    %rax,%r11
   1b433:	89 c8                	mov    %ecx,%eax
   1b435:	83 c1 07             	add    $0x7,%ecx
   1b438:	84 d2                	test   %dl,%dl
   1b43a:	78 e4                	js     1b420 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0xa0>
   1b43c:	89 ca                	mov    %ecx,%edx
   1b43e:	89 c1                	mov    %eax,%ecx
   1b440:	4c 89 d8             	mov    %r11,%rax
   1b443:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1b44a:	83 c1 06             	add    $0x6,%ecx
   1b44d:	4c 89 de             	mov    %r11,%rsi
   1b450:	48 d3 e8             	shr    %cl,%rax
   1b453:	89 d1                	mov    %edx,%ecx
   1b455:	48 d3 e7             	shl    %cl,%rdi
   1b458:	49 09 fb             	or     %rdi,%r11
   1b45b:	48 83 f8 01          	cmp    $0x1,%rax
   1b45f:	4c 0f 45 de          	cmovne %rsi,%r11
   1b463:	49 63 c3             	movslq %r11d,%rax
   1b466:	45 85 db             	test   %r11d,%r11d
   1b469:	4d 8d 4c 05 00       	lea    0x0(%r13,%rax,1),%r9
   1b46e:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   1b474:	4d 0f 45 e9          	cmovne %r9,%r13
   1b478:	45 85 c0             	test   %r8d,%r8d
   1b47b:	7e 5b                	jle    1b4d8 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   1b47d:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   1b482:	74 54                	je     1b4d8 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   1b484:	49 8b 77 10          	mov    0x10(%r15),%rsi
   1b488:	44 89 c1             	mov    %r8d,%ecx
   1b48b:	4c 89 f2             	mov    %r14,%rdx
   1b48e:	48 89 ef             	mov    %rbp,%rdi
   1b491:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   1b496:	e8 f5 fc ff ff       	call   1b190 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   1b49b:	4c 89 e2             	mov    %r12,%rdx
   1b49e:	48 89 df             	mov    %rbx,%rdi
   1b4a1:	48 89 c6             	mov    %rax,%rsi
   1b4a4:	e8 07 fc ff ff       	call   1b0b0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   1b4a9:	4c 63 44 24 10       	movslq 0x10(%rsp),%r8
   1b4ae:	84 c0                	test   %al,%al
   1b4b0:	0f 85 c1 00 00 00    	jne    1b577 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1f7>
   1b4b6:	4d 85 ed             	test   %r13,%r13
   1b4b9:	0f 85 01 ff ff ff    	jne    1b3c0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x40>
   1b4bf:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1b4c3:	48 83 c4 28          	add    $0x28,%rsp
   1b4c7:	5b                   	pop    %rbx
   1b4c8:	5d                   	pop    %rbp
   1b4c9:	41 5c                	pop    %r12
   1b4cb:	41 5d                	pop    %r13
   1b4cd:	41 5e                	pop    %r14
   1b4cf:	41 5f                	pop    %r15
   1b4d1:	c3                   	ret    
   1b4d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b4d8:	45 85 c0             	test   %r8d,%r8d
   1b4db:	79 07                	jns    1b4e4 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x164>
   1b4dd:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   1b4e2:	75 1c                	jne    1b500 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x180>
   1b4e4:	45 85 c0             	test   %r8d,%r8d
   1b4e7:	75 cd                	jne    1b4b6 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1b4e9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1b4ee:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   1b4f5:	00 
   1b4f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b4fd:	eb b7                	jmp    1b4b6 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1b4ff:	90                   	nop
   1b500:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1b504:	4d 63 c0             	movslq %r8d,%r8
   1b507:	85 c0                	test   %eax,%eax
   1b509:	75 08                	jne    1b513 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x193>
   1b50b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1b510:	4c 89 00             	mov    %r8,(%rax)
   1b513:	49 f7 d0             	not    %r8
   1b516:	4d 03 47 10          	add    0x10(%r15),%r8
   1b51a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   1b51f:	4d 89 fd             	mov    %r15,%r13
   1b522:	4d 89 c7             	mov    %r8,%r15
   1b525:	eb 2e                	jmp    1b555 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1d5>
   1b527:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b52e:	00 00 
   1b530:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1b534:	4c 89 f2             	mov    %r14,%rdx
   1b537:	48 89 ef             	mov    %rbp,%rdi
   1b53a:	49 83 c7 01          	add    $0x1,%r15
   1b53e:	e8 4d fc ff ff       	call   1b190 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   1b543:	4c 89 e2             	mov    %r12,%rdx
   1b546:	48 89 df             	mov    %rbx,%rdi
   1b549:	48 89 c6             	mov    %rax,%rsi
   1b54c:	e8 5f fb ff ff       	call   1b0b0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   1b551:	84 c0                	test   %al,%al
   1b553:	75 15                	jne    1b56a <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1ea>
   1b555:	41 0f b6 0f          	movzbl (%r15),%ecx
   1b559:	84 c9                	test   %cl,%cl
   1b55b:	75 d3                	jne    1b530 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1b0>
   1b55d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1b564:	00 
   1b565:	e9 55 ff ff ff       	jmp    1b4bf <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1b56a:	4d 89 ef             	mov    %r13,%r15
   1b56d:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   1b572:	e9 3f ff ff ff       	jmp    1b4b6 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1b577:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1b57c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1b583:	00 
   1b584:	4c 89 00             	mov    %r8,(%rax)
   1b587:	e9 33 ff ff ff       	jmp    1b4bf <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1b58c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   1b593:	00 
   1b594:	e9 26 ff ff ff       	jmp    1b4bf <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1b599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b5a0 <_ZSt10unexpectedv>:
   1b5a0:	f3 0f 1e fa          	endbr64 
   1b5a4:	55                   	push   %rbp
   1b5a5:	0f b6 05 2c fb 00 00 	movzbl 0xfb2c(%rip),%eax        # 2b0d8 <_ZGVZSt10unexpectedvE4info>
   1b5ac:	84 c0                	test   %al,%al
   1b5ae:	74 20                	je     1b5d0 <_ZSt10unexpectedv+0x30>
   1b5b0:	48 8b 05 29 fb 00 00 	mov    0xfb29(%rip),%rax        # 2b0e0 <_ZZSt10unexpectedvE4info>
   1b5b7:	48 85 c0             	test   %rax,%rax
   1b5ba:	74 09                	je     1b5c5 <_ZSt10unexpectedv+0x25>
   1b5bc:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b5c0:	48 85 c0             	test   %rax,%rax
   1b5c3:	75 39                	jne    1b5fe <_ZSt10unexpectedv+0x5e>
   1b5c5:	5d                   	pop    %rbp
   1b5c6:	ff 25 7c ec 00 00    	jmp    *0xec7c(%rip)        # 2a248 <_ZL17unexpectedHandler>
   1b5cc:	0f 1f 40 00          	nopl   0x0(%rax)
   1b5d0:	48 8d 3d 01 fb 00 00 	lea    0xfb01(%rip),%rdi        # 2b0d8 <_ZGVZSt10unexpectedvE4info>
   1b5d7:	e8 74 0a 00 00       	call   1c050 <__cxa_guard_acquire>
   1b5dc:	85 c0                	test   %eax,%eax
   1b5de:	74 d0                	je     1b5b0 <_ZSt10unexpectedv+0x10>
   1b5e0:	e8 28 4e 00 00       	call   2040d <get_thread_data>
   1b5e5:	48 83 c0 68          	add    $0x68,%rax
   1b5e9:	48 8d 3d e8 fa 00 00 	lea    0xfae8(%rip),%rdi        # 2b0d8 <_ZGVZSt10unexpectedvE4info>
   1b5f0:	48 89 05 e9 fa 00 00 	mov    %rax,0xfae9(%rip)        # 2b0e0 <_ZZSt10unexpectedvE4info>
   1b5f7:	e8 a4 0a 00 00       	call   1c0a0 <__cxa_guard_release>
   1b5fc:	eb b2                	jmp    1b5b0 <_ZSt10unexpectedv+0x10>
   1b5fe:	ff d0                	call   *%rax
   1b600:	e8 8f 51 00 00       	call   20794 <abort>
   1b605:	f3 0f 1e fa          	endbr64 
   1b609:	48 89 c5             	mov    %rax,%rbp
   1b60c:	e9 0f 6a fe ff       	jmp    2020 <_ZSt10unexpectedv.cold>
   1b611:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b618:	00 00 00 
   1b61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b620 <__cxa_begin_catch>:
   1b620:	f3 0f 1e fa          	endbr64 
   1b624:	53                   	push   %rbx
   1b625:	48 89 fb             	mov    %rdi,%rbx
   1b628:	e8 e0 4d 00 00       	call   2040d <get_thread_data>
   1b62d:	48 ba 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%rdx
   1b634:	aa b1 b8 
   1b637:	48 03 13             	add    (%rbx),%rdx
   1b63a:	83 a8 90 00 00 00 01 	subl   $0x1,0x90(%rax)
   1b641:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   1b645:	48 83 fa 01          	cmp    $0x1,%rdx
   1b649:	76 05                	jbe    1b650 <__cxa_begin_catch+0x30>
   1b64b:	4c 89 c0             	mov    %r8,%rax
   1b64e:	5b                   	pop    %rbx
   1b64f:	c3                   	ret    
   1b650:	8b 53 d0             	mov    -0x30(%rbx),%edx
   1b653:	85 d2                	test   %edx,%edx
   1b655:	74 19                	je     1b670 <__cxa_begin_catch+0x50>
   1b657:	79 2d                	jns    1b686 <__cxa_begin_catch+0x66>
   1b659:	b8 01 00 00 00       	mov    $0x1,%eax
   1b65e:	29 d0                	sub    %edx,%eax
   1b660:	89 c2                	mov    %eax,%edx
   1b662:	4c 8b 43 f0          	mov    -0x10(%rbx),%r8
   1b666:	89 53 d0             	mov    %edx,-0x30(%rbx)
   1b669:	5b                   	pop    %rbx
   1b66a:	4c 89 c0             	mov    %r8,%rax
   1b66d:	c3                   	ret    
   1b66e:	66 90                	xchg   %ax,%ax
   1b670:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   1b677:	48 89 4b c8          	mov    %rcx,-0x38(%rbx)
   1b67b:	48 8d 4b a0          	lea    -0x60(%rbx),%rcx
   1b67f:	48 89 88 88 00 00 00 	mov    %rcx,0x88(%rax)
   1b686:	83 c2 01             	add    $0x1,%edx
   1b689:	eb d7                	jmp    1b662 <__cxa_begin_catch+0x42>
   1b68b:	f3 0f 1e fa          	endbr64 
   1b68f:	48 89 c7             	mov    %rax,%rdi
   1b692:	48 89 d0             	mov    %rdx,%rax
   1b695:	e9 ca 69 fe ff       	jmp    2064 <__cxa_begin_catch.cold>
   1b69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b6a0 <_ZSt9terminatev>:
   1b6a0:	f3 0f 1e fa          	endbr64 
   1b6a4:	55                   	push   %rbp
   1b6a5:	0f b6 05 3c fa 00 00 	movzbl 0xfa3c(%rip),%eax        # 2b0e8 <_ZGVZSt9terminatevE4info>
   1b6ac:	84 c0                	test   %al,%al
   1b6ae:	74 26                	je     1b6d6 <_ZSt9terminatev+0x36>
   1b6b0:	48 8b 05 39 fa 00 00 	mov    0xfa39(%rip),%rax        # 2b0f0 <_ZZSt9terminatevE4info>
   1b6b7:	48 85 c0             	test   %rax,%rax
   1b6ba:	74 0f                	je     1b6cb <_ZSt9terminatev+0x2b>
   1b6bc:	48 8b 00             	mov    (%rax),%rax
   1b6bf:	48 85 c0             	test   %rax,%rax
   1b6c2:	74 07                	je     1b6cb <_ZSt9terminatev+0x2b>
   1b6c4:	ff d0                	call   *%rax
   1b6c6:	e8 c9 50 00 00       	call   20794 <abort>
   1b6cb:	ff 15 7f eb 00 00    	call   *0xeb7f(%rip)        # 2a250 <_ZL16terminateHandler>
   1b6d1:	e8 be 50 00 00       	call   20794 <abort>
   1b6d6:	48 8d 3d 0b fa 00 00 	lea    0xfa0b(%rip),%rdi        # 2b0e8 <_ZGVZSt9terminatevE4info>
   1b6dd:	e8 6e 09 00 00       	call   1c050 <__cxa_guard_acquire>
   1b6e2:	85 c0                	test   %eax,%eax
   1b6e4:	74 ca                	je     1b6b0 <_ZSt9terminatev+0x10>
   1b6e6:	e8 22 4d 00 00       	call   2040d <get_thread_data>
   1b6eb:	48 83 c0 68          	add    $0x68,%rax
   1b6ef:	48 8d 3d f2 f9 00 00 	lea    0xf9f2(%rip),%rdi        # 2b0e8 <_ZGVZSt9terminatevE4info>
   1b6f6:	48 89 05 f3 f9 00 00 	mov    %rax,0xf9f3(%rip)        # 2b0f0 <_ZZSt9terminatevE4info>
   1b6fd:	e8 9e 09 00 00       	call   1c0a0 <__cxa_guard_release>
   1b702:	eb ac                	jmp    1b6b0 <_ZSt9terminatev+0x10>
   1b704:	f3 0f 1e fa          	endbr64 
   1b708:	48 89 c5             	mov    %rax,%rbp
   1b70b:	e9 64 69 fe ff       	jmp    2074 <_ZSt9terminatev.cold>
   1b710:	f3 0f 1e fa          	endbr64 
   1b714:	48 89 c7             	mov    %rax,%rdi
   1b717:	e9 6c 69 fe ff       	jmp    2088 <_ZSt9terminatev.cold+0x14>
   1b71c:	f3 0f 1e fa          	endbr64 
   1b720:	48 89 c7             	mov    %rax,%rdi
   1b723:	e9 6a 69 fe ff       	jmp    2092 <_ZSt9terminatev.cold+0x1e>
   1b728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b72f:	00 

000000000001b730 <__cxa_free_exception>:
   1b730:	f3 0f 1e fa          	endbr64 
   1b734:	55                   	push   %rbp
   1b735:	48 8b 47 90          	mov    -0x70(%rdi),%rax
   1b739:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   1b73d:	48 85 c0             	test   %rax,%rax
   1b740:	74 02                	je     1b744 <__cxa_free_exception+0x14>
   1b742:	ff d0                	call   *%rax
   1b744:	48 89 ef             	mov    %rbp,%rdi
   1b747:	5d                   	pop    %rbp
   1b748:	e9 03 f7 ff ff       	jmp    1ae50 <_ZL14free_exceptionPc>
   1b74d:	f3 0f 1e fa          	endbr64 
   1b751:	48 89 c7             	mov    %rax,%rdi
   1b754:	e9 6b 69 fe ff       	jmp    20c4 <__cxa_free_exception.cold>
   1b759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b760 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>:
   1b760:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1b767:	55 4e 47 
   1b76a:	48 39 47 60          	cmp    %rax,0x60(%rdi)
   1b76e:	74 20                	je     1b790 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x30>
   1b770:	f0 48 83 2f 01       	lock subq $0x1,(%rdi)
   1b775:	74 09                	je     1b780 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x20>
   1b777:	c3                   	ret    
   1b778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b77f:	00 
   1b780:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1b784:	e9 a7 ff ff ff       	jmp    1b730 <__cxa_free_exception>
   1b789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b790:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1b794:	e9 07 00 00 00       	jmp    1b7a0 <__cxa_free_dependent_exception>
   1b799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b7a0 <__cxa_free_dependent_exception>:
   1b7a0:	f3 0f 1e fa          	endbr64 
   1b7a4:	55                   	push   %rbp
   1b7a5:	48 8b 47 80          	mov    -0x80(%rdi),%rax
   1b7a9:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   1b7ad:	48 85 c0             	test   %rax,%rax
   1b7b0:	74 1b                	je     1b7cd <__cxa_free_dependent_exception+0x2d>
   1b7b2:	48 ba 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rdx
   1b7b9:	55 4e 47 
   1b7bc:	49 89 e8             	mov    %rbp,%r8
   1b7bf:	48 39 57 e0          	cmp    %rdx,-0x20(%rdi)
   1b7c3:	74 1b                	je     1b7e0 <__cxa_free_dependent_exception+0x40>
   1b7c5:	4c 89 c7             	mov    %r8,%rdi
   1b7c8:	e8 93 ff ff ff       	call   1b760 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   1b7cd:	48 89 ef             	mov    %rbp,%rdi
   1b7d0:	5d                   	pop    %rbp
   1b7d1:	e9 7a f6 ff ff       	jmp    1ae50 <_ZL14free_exceptionPc>
   1b7d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b7dd:	00 00 00 
   1b7e0:	4c 8d 40 80          	lea    -0x80(%rax),%r8
   1b7e4:	eb df                	jmp    1b7c5 <__cxa_free_dependent_exception+0x25>
   1b7e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b7ed:	00 00 00 

000000000001b7f0 <__cxa_end_catch>:
   1b7f0:	f3 0f 1e fa          	endbr64 
   1b7f4:	48 83 ec 08          	sub    $0x8,%rsp
   1b7f8:	e8 10 4c 00 00       	call   2040d <get_thread_data>
   1b7fd:	48 8b b8 88 00 00 00 	mov    0x88(%rax),%rdi
   1b804:	8b 57 30             	mov    0x30(%rdi),%edx
   1b807:	85 d2                	test   %edx,%edx
   1b809:	78 25                	js     1b830 <__cxa_end_catch+0x40>
   1b80b:	83 ea 01             	sub    $0x1,%edx
   1b80e:	89 57 30             	mov    %edx,0x30(%rdi)
   1b811:	75 30                	jne    1b843 <__cxa_end_catch+0x53>
   1b813:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   1b817:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1b81e:	48 83 c4 08          	add    $0x8,%rsp
   1b822:	e9 39 ff ff ff       	jmp    1b760 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   1b827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b82e:	00 00 
   1b830:	83 c2 01             	add    $0x1,%edx
   1b833:	89 57 30             	mov    %edx,0x30(%rdi)
   1b836:	75 0b                	jne    1b843 <__cxa_end_catch+0x53>
   1b838:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   1b83c:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1b843:	48 83 c4 08          	add    $0x8,%rsp
   1b847:	c3                   	ret    
   1b848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b84f:	00 

000000000001b850 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   1b850:	f3 0f 1e fa          	endbr64 
   1b854:	48 89 f7             	mov    %rsi,%rdi
   1b857:	e9 d4 fe ff ff       	jmp    1b730 <__cxa_free_exception>
   1b85c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b860 <_ZL12alloc_or_diem>:
   1b860:	41 55                	push   %r13
   1b862:	48 89 fe             	mov    %rdi,%rsi
   1b865:	41 54                	push   %r12
   1b867:	55                   	push   %rbp
   1b868:	53                   	push   %rbx
   1b869:	48 89 fb             	mov    %rdi,%rbx
   1b86c:	bf 01 00 00 00       	mov    $0x1,%edi
   1b871:	48 83 ec 08          	sub    $0x8,%rsp
   1b875:	e8 06 23 ff ff       	call   db80 <calloc>
   1b87a:	49 89 c4             	mov    %rax,%r12
   1b87d:	48 85 c0             	test   %rax,%rax
   1b880:	74 0e                	je     1b890 <_ZL12alloc_or_diem+0x30>
   1b882:	48 83 c4 08          	add    $0x8,%rsp
   1b886:	4c 89 e0             	mov    %r12,%rax
   1b889:	5b                   	pop    %rbx
   1b88a:	5d                   	pop    %rbp
   1b88b:	41 5c                	pop    %r12
   1b88d:	41 5d                	pop    %r13
   1b88f:	c3                   	ret    
   1b890:	48 81 fb 00 04 00 00 	cmp    $0x400,%rbx
   1b897:	0f 87 c3 00 00 00    	ja     1b960 <_ZL12alloc_or_diem+0x100>
   1b89d:	e8 6b 4b 00 00       	call   2040d <get_thread_data>
   1b8a2:	83 78 78 03          	cmpl   $0x3,0x78(%rax)
   1b8a6:	48 89 c5             	mov    %rax,%rbp
   1b8a9:	0f 8f b1 00 00 00    	jg     1b960 <_ZL12alloc_or_diem+0x100>
   1b8af:	48 8d 3d 42 f8 00 00 	lea    0xf842(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1b8b6:	4c 8d 2d 43 f8 00 00 	lea    0xf843(%rip),%r13        # 2b100 <_ZL16buffer_allocated>
   1b8bd:	e8 8e f4 fe ff       	call   ad50 <sgx_spin_lock>
   1b8c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b8c8:	48 89 de             	mov    %rbx,%rsi
   1b8cb:	bf 01 00 00 00       	mov    $0x1,%edi
   1b8d0:	e8 ab 22 ff ff       	call   db80 <calloc>
   1b8d5:	49 89 c4             	mov    %rax,%r12
   1b8d8:	48 85 c0             	test   %rax,%rax
   1b8db:	0f 85 87 00 00 00    	jne    1b968 <_ZL12alloc_or_diem+0x108>
   1b8e1:	31 c0                	xor    %eax,%eax
   1b8e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b8e8:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   1b8ee:	41 89 c4             	mov    %eax,%r12d
   1b8f1:	74 3d                	je     1b930 <_ZL12alloc_or_diem+0xd0>
   1b8f3:	48 83 c0 01          	add    $0x1,%rax
   1b8f7:	48 83 f8 10          	cmp    $0x10,%rax
   1b8fb:	75 eb                	jne    1b8e8 <_ZL12alloc_or_diem+0x88>
   1b8fd:	48 8d 3d f4 f7 00 00 	lea    0xf7f4(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1b904:	c6 05 35 e9 00 00 00 	movb   $0x0,0xe935(%rip)        # 2a240 <_ZL16buffer_available>
   1b90b:	e8 b0 f4 fe ff       	call   adc0 <sgx_spin_unlock>
   1b910:	0f b6 05 29 e9 00 00 	movzbl 0xe929(%rip),%eax        # 2a240 <_ZL16buffer_available>
   1b917:	84 c0                	test   %al,%al
   1b919:	74 f5                	je     1b910 <_ZL12alloc_or_diem+0xb0>
   1b91b:	48 8d 3d d6 f7 00 00 	lea    0xf7d6(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1b922:	e8 29 f4 fe ff       	call   ad50 <sgx_spin_lock>
   1b927:	eb 9f                	jmp    1b8c8 <_ZL12alloc_or_diem+0x68>
   1b929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b930:	48 98                	cltq   
   1b932:	48 8d 3d bf f7 00 00 	lea    0xf7bf(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1b939:	41 c1 e4 0a          	shl    $0xa,%r12d
   1b93d:	41 c6 44 05 00 01    	movb   $0x1,0x0(%r13,%rax,1)
   1b943:	4d 63 e4             	movslq %r12d,%r12
   1b946:	e8 75 f4 fe ff       	call   adc0 <sgx_spin_unlock>
   1b94b:	48 8d 05 ce f7 00 00 	lea    0xf7ce(%rip),%rax        # 2b120 <_ZL16emergency_buffer>
   1b952:	83 45 78 01          	addl   $0x1,0x78(%rbp)
   1b956:	49 01 c4             	add    %rax,%r12
   1b959:	0f 85 23 ff ff ff    	jne    1b882 <_ZL12alloc_or_diem+0x22>
   1b95f:	90                   	nop
   1b960:	e8 3b fd ff ff       	call   1b6a0 <_ZSt9terminatev>
   1b965:	0f 1f 00             	nopl   (%rax)
   1b968:	48 8d 3d 89 f7 00 00 	lea    0xf789(%rip),%rdi        # 2b0f8 <_ZL21emergency_malloc_lock>
   1b96f:	e8 4c f4 fe ff       	call   adc0 <sgx_spin_unlock>
   1b974:	e9 09 ff ff ff       	jmp    1b882 <_ZL12alloc_or_diem+0x22>
   1b979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b980 <__cxa_allocate_exception>:
   1b980:	f3 0f 1e fa          	endbr64 
   1b984:	48 83 ec 08          	sub    $0x8,%rsp
   1b988:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1b98c:	e8 cf fe ff ff       	call   1b860 <_ZL12alloc_or_diem>
   1b991:	48 83 c4 08          	add    $0x8,%rsp
   1b995:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   1b999:	c3                   	ret    
   1b99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001b9a0 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>:
   1b9a0:	53                   	push   %rbx
   1b9a1:	83 ff 05             	cmp    $0x5,%edi
   1b9a4:	74 05                	je     1b9ab <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xb>
   1b9a6:	e8 f5 fc ff ff       	call   1b6a0 <_ZSt9terminatev>
   1b9ab:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1b9b2:	55 4e 47 
   1b9b5:	48 89 f3             	mov    %rsi,%rbx
   1b9b8:	48 39 46 60          	cmp    %rax,0x60(%rsi)
   1b9bc:	74 4e                	je     1ba0c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6c>
   1b9be:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1b9c2:	48 85 ff             	test   %rdi,%rdi
   1b9c5:	74 35                	je     1b9fc <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   1b9c7:	48 8d 15 5a e2 00 00 	lea    0xe25a(%rip),%rdx        # 29c28 <_ZTIN10__cxxabiv117__class_type_infoE>
   1b9ce:	31 c9                	xor    %ecx,%ecx
   1b9d0:	48 8d 35 41 e2 00 00 	lea    0xe241(%rip),%rsi        # 29c18 <_ZTISt9type_info>
   1b9d7:	e8 74 37 00 00       	call   1f150 <__dynamic_cast>
   1b9dc:	48 89 c2             	mov    %rax,%rdx
   1b9df:	48 85 c0             	test   %rax,%rax
   1b9e2:	74 18                	je     1b9fc <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   1b9e4:	48 8b 05 75 e3 00 00 	mov    0xe375(%rip),%rax        # 29d60 <_ZTISt9exception>
   1b9eb:	48 8d b3 80 00 00 00 	lea    0x80(%rbx),%rsi
   1b9f2:	48 8d 3d 67 e3 00 00 	lea    0xe367(%rip),%rdi        # 29d60 <_ZTISt9exception>
   1b9f9:	ff 50 30             	call   *0x30(%rax)
   1b9fc:	31 f6                	xor    %esi,%esi
   1b9fe:	48 8d 3d 3b f4 ff ff 	lea    -0xbc5(%rip),%rdi        # 1ae40 <_ZL5traceP15_Unwind_ContextPv>
   1ba05:	e8 a6 13 00 00       	call   1cdb0 <_Unwind_Backtrace>
   1ba0a:	eb 9a                	jmp    1b9a6 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6>
   1ba0c:	48 8b 1e             	mov    (%rsi),%rbx
   1ba0f:	48 83 c3 80          	add    $0xffffffffffffff80,%rbx
   1ba13:	eb a9                	jmp    1b9be <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x1e>
   1ba15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ba1c:	00 00 00 
   1ba1f:	90                   	nop

000000000001ba20 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>:
   1ba20:	55                   	push   %rbp
   1ba21:	48 89 fd             	mov    %rdi,%rbp
   1ba24:	e8 e4 49 00 00       	call   2040d <get_thread_data>
   1ba29:	48 8b 50 70          	mov    0x70(%rax),%rdx
   1ba2d:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1ba31:	48 85 d2             	test   %rdx,%rdx
   1ba34:	74 27                	je     1ba5d <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x3d>
   1ba36:	48 8b 50 68          	mov    0x68(%rax),%rdx
   1ba3a:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1ba3e:	48 85 d2             	test   %rdx,%rdx
   1ba41:	74 27                	je     1ba6a <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x4a>
   1ba43:	83 80 90 00 00 00 01 	addl   $0x1,0x90(%rax)
   1ba4a:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   1ba4e:	e8 6d 15 00 00       	call   1cfc0 <_Unwind_RaiseException>
   1ba53:	48 89 ee             	mov    %rbp,%rsi
   1ba56:	89 c7                	mov    %eax,%edi
   1ba58:	e8 43 ff ff ff       	call   1b9a0 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>
   1ba5d:	48 8b 15 e4 e7 00 00 	mov    0xe7e4(%rip),%rdx        # 2a248 <_ZL17unexpectedHandler>
   1ba64:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1ba68:	eb cc                	jmp    1ba36 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x16>
   1ba6a:	48 8b 15 df e7 00 00 	mov    0xe7df(%rip),%rdx        # 2a250 <_ZL16terminateHandler>
   1ba71:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1ba75:	eb cc                	jmp    1ba43 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x23>
   1ba77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ba7e:	00 00 

000000000001ba80 <__cxa_throw>:
   1ba80:	f3 0f 1e fa          	endbr64 
   1ba84:	50                   	push   %rax
   1ba85:	58                   	pop    %rax
   1ba86:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
   1ba8d:	55 4e 47 
   1ba90:	48 83 ec 08          	sub    $0x8,%rsp
   1ba94:	48 89 47 e0          	mov    %rax,-0x20(%rdi)
   1ba98:	48 8d 05 b1 fd ff ff 	lea    -0x24f(%rip),%rax        # 1b850 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>
   1ba9f:	48 83 c7 80          	add    $0xffffffffffffff80,%rdi
   1baa3:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   1baaa:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   1baae:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1bab2:	48 89 47 68          	mov    %rax,0x68(%rdi)
   1bab6:	e8 65 ff ff ff       	call   1ba20 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>
   1babb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bac0 <__gxx_personality_v0>:
   1bac0:	f3 0f 1e fa          	endbr64 
   1bac4:	41 57                	push   %r15
   1bac6:	41 56                	push   %r14
   1bac8:	41 55                	push   %r13
   1baca:	41 54                	push   %r12
   1bacc:	55                   	push   %rbp
   1bacd:	53                   	push   %rbx
   1bace:	48 83 ec 78          	sub    $0x78,%rsp
   1bad2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1bad9:	00 00 
   1badb:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1bae0:	31 c0                	xor    %eax,%eax
   1bae2:	83 ff 01             	cmp    $0x1,%edi
   1bae5:	0f 85 75 02 00 00    	jne    1bd60 <__gxx_personality_v0+0x2a0>
   1baeb:	49 89 cc             	mov    %rcx,%r12
   1baee:	4c 89 c5             	mov    %r8,%rbp
   1baf1:	45 31 ed             	xor    %r13d,%r13d
   1baf4:	31 db                	xor    %ebx,%ebx
   1baf6:	49 bf 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%r15
   1bafd:	aa b1 b8 
   1bb00:	49 01 d7             	add    %rdx,%r15
   1bb03:	49 83 ff 01          	cmp    $0x1,%r15
   1bb07:	0f 86 b3 00 00 00    	jbe    1bbc0 <__gxx_personality_v0+0x100>
   1bb0d:	48 89 ef             	mov    %rbp,%rdi
   1bb10:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1bb14:	e8 f7 13 00 00       	call   1cf10 <_Unwind_GetLanguageSpecificData>
   1bb19:	49 89 c6             	mov    %rax,%r14
   1bb1c:	48 85 c0             	test   %rax,%rax
   1bb1f:	0f 84 0b 02 00 00    	je     1bd30 <__gxx_personality_v0+0x270>
   1bb25:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1bb29:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1bb2d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1bb34:	00 00 
   1bb36:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1bb3b:	40 f6 c6 01          	test   $0x1,%sil
   1bb3f:	0f 85 ab 00 00 00    	jne    1bbf0 <__gxx_personality_v0+0x130>
   1bb45:	83 e6 04             	and    $0x4,%esi
   1bb48:	0f 84 22 02 00 00    	je     1bd70 <__gxx_personality_v0+0x2b0>
   1bb4e:	49 83 ff 01          	cmp    $0x1,%r15
   1bb52:	0f 87 a8 03 00 00    	ja     1bf00 <__gxx_personality_v0+0x440>
   1bb58:	48 8b 43 48          	mov    0x48(%rbx),%rax
   1bb5c:	48 85 c0             	test   %rax,%rax
   1bb5f:	0f 84 d3 04 00 00    	je     1c038 <__gxx_personality_v0+0x578>
   1bb65:	31 f6                	xor    %esi,%esi
   1bb67:	48 85 db             	test   %rbx,%rbx
   1bb6a:	74 11                	je     1bb7d <__gxx_personality_v0+0xbd>
   1bb6c:	48 63 53 34          	movslq 0x34(%rbx),%rdx
   1bb70:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bb75:	48 89 c6             	mov    %rax,%rsi
   1bb78:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1bb7d:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   1bb84:	00 
   1bb85:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%rbx)
   1bb8c:	48 89 ef             	mov    %rbp,%rdi
   1bb8f:	e8 7c 16 00 00       	call   1d210 <_Unwind_SetIP>
   1bb94:	4c 89 e2             	mov    %r12,%rdx
   1bb97:	31 f6                	xor    %esi,%esi
   1bb99:	48 89 ef             	mov    %rbp,%rdi
   1bb9c:	e8 5f 16 00 00       	call   1d200 <_Unwind_SetGR>
   1bba1:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1bba6:	be 01 00 00 00       	mov    $0x1,%esi
   1bbab:	48 89 ef             	mov    %rbp,%rdi
   1bbae:	e8 4d 16 00 00       	call   1d200 <_Unwind_SetGR>
   1bbb3:	b8 07 00 00 00       	mov    $0x7,%eax
   1bbb8:	e9 78 01 00 00       	jmp    1bd35 <__gxx_personality_v0+0x275>
   1bbbd:	0f 1f 00             	nopl   (%rax)
   1bbc0:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1bbc7:	55 4e 47 
   1bbca:	48 8d 59 a0          	lea    -0x60(%rcx),%rbx
   1bbce:	49 89 dd             	mov    %rbx,%r13
   1bbd1:	48 39 01             	cmp    %rax,(%rcx)
   1bbd4:	0f 85 33 ff ff ff    	jne    1bb0d <__gxx_personality_v0+0x4d>
   1bbda:	48 8b 41 a0          	mov    -0x60(%rcx),%rax
   1bbde:	4c 8d 68 80          	lea    -0x80(%rax),%r13
   1bbe2:	e9 26 ff ff ff       	jmp    1bb0d <__gxx_personality_v0+0x4d>
   1bbe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bbee:	00 00 
   1bbf0:	48 89 ef             	mov    %rbp,%rdi
   1bbf3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1bbf8:	e8 63 13 00 00       	call   1cf60 <_Unwind_GetRegionStart>
   1bbfd:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bc02:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1bc07:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1bc0b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bc10:	45 0f b6 27          	movzbl (%r15),%r12d
   1bc14:	41 80 fc ff          	cmp    $0xff,%r12b
   1bc18:	74 25                	je     1bc3f <__gxx_personality_v0+0x17f>
   1bc1a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1bc1f:	41 0f be fc          	movsbl %r12b,%edi
   1bc23:	e8 c8 f2 ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1bc28:	41 0f b6 f4          	movzbl %r12b,%esi
   1bc2c:	4c 89 f9             	mov    %r15,%rcx
   1bc2f:	48 89 ef             	mov    %rbp,%rdi
   1bc32:	48 89 c2             	mov    %rax,%rdx
   1bc35:	e8 f6 f3 ff ff       	call   1b030 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1bc3a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1bc3f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1bc43:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bc48:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1bc4f:	00 00 
   1bc51:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bc56:	0f b6 02             	movzbl (%rdx),%eax
   1bc59:	88 44 24 48          	mov    %al,0x48(%rsp)
   1bc5d:	3c ff                	cmp    $0xff,%al
   1bc5f:	74 33                	je     1bc94 <__gxx_personality_v0+0x1d4>
   1bc61:	31 c9                	xor    %ecx,%ecx
   1bc63:	31 d2                	xor    %edx,%edx
   1bc65:	0f 1f 00             	nopl   (%rax)
   1bc68:	0f b6 06             	movzbl (%rsi),%eax
   1bc6b:	48 83 c6 01          	add    $0x1,%rsi
   1bc6f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bc74:	89 c7                	mov    %eax,%edi
   1bc76:	83 e0 7f             	and    $0x7f,%eax
   1bc79:	d3 e0                	shl    %cl,%eax
   1bc7b:	83 e7 7f             	and    $0x7f,%edi
   1bc7e:	83 c1 07             	add    $0x7,%ecx
   1bc81:	48 98                	cltq   
   1bc83:	48 01 c2             	add    %rax,%rdx
   1bc86:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1bc8a:	75 dc                	jne    1bc68 <__gxx_personality_v0+0x1a8>
   1bc8c:	48 01 f2             	add    %rsi,%rdx
   1bc8f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1bc94:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1bc98:	31 c9                	xor    %ecx,%ecx
   1bc9a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bc9f:	0f b6 06             	movzbl (%rsi),%eax
   1bca2:	31 f6                	xor    %esi,%esi
   1bca4:	88 44 24 60          	mov    %al,0x60(%rsp)
   1bca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bcaf:	00 
   1bcb0:	0f b6 02             	movzbl (%rdx),%eax
   1bcb3:	48 83 c2 01          	add    $0x1,%rdx
   1bcb7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bcbc:	89 c7                	mov    %eax,%edi
   1bcbe:	83 e0 7f             	and    $0x7f,%eax
   1bcc1:	d3 e0                	shl    %cl,%eax
   1bcc3:	83 e7 7f             	and    $0x7f,%edi
   1bcc6:	83 c1 07             	add    $0x7,%ecx
   1bcc9:	48 98                	cltq   
   1bccb:	48 01 c6             	add    %rax,%rsi
   1bcce:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1bcd2:	75 dc                	jne    1bcb0 <__gxx_personality_v0+0x1f0>
   1bcd4:	48 01 d6             	add    %rdx,%rsi
   1bcd7:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1bcdc:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1bce1:	48 89 ef             	mov    %rbp,%rdi
   1bce4:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1bce9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1bcee:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1bcf3:	4c 89 e6             	mov    %r12,%rsi
   1bcf6:	e8 55 f5 ff ff       	call   1b250 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1bcfb:	84 c0                	test   %al,%al
   1bcfd:	0f 84 ed 01 00 00    	je     1bef0 <__gxx_personality_v0+0x430>
   1bd03:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1bd08:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1bd0c:	48 85 d2             	test   %rdx,%rdx
   1bd0f:	74 1f                	je     1bd30 <__gxx_personality_v0+0x270>
   1bd11:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1bd16:	4c 89 e9             	mov    %r13,%rcx
   1bd19:	4c 89 e6             	mov    %r12,%rsi
   1bd1c:	48 89 ef             	mov    %rbp,%rdi
   1bd1f:	e8 5c f6 ff ff       	call   1b380 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1bd24:	83 f8 02             	cmp    $0x2,%eax
   1bd27:	0f 84 9b 01 00 00    	je     1bec8 <__gxx_personality_v0+0x408>
   1bd2d:	0f 1f 00             	nopl   (%rax)
   1bd30:	b8 08 00 00 00       	mov    $0x8,%eax
   1bd35:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   1bd3a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1bd41:	00 00 
   1bd43:	0f 85 f4 02 00 00    	jne    1c03d <__gxx_personality_v0+0x57d>
   1bd49:	48 83 c4 78          	add    $0x78,%rsp
   1bd4d:	5b                   	pop    %rbx
   1bd4e:	5d                   	pop    %rbp
   1bd4f:	41 5c                	pop    %r12
   1bd51:	41 5d                	pop    %r13
   1bd53:	41 5e                	pop    %r14
   1bd55:	41 5f                	pop    %r15
   1bd57:	c3                   	ret    
   1bd58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bd5f:	00 
   1bd60:	b8 03 00 00 00       	mov    $0x3,%eax
   1bd65:	eb ce                	jmp    1bd35 <__gxx_personality_v0+0x275>
   1bd67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bd6e:	00 00 
   1bd70:	48 89 ef             	mov    %rbp,%rdi
   1bd73:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1bd78:	e8 e3 11 00 00       	call   1cf60 <_Unwind_GetRegionStart>
   1bd7d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bd82:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1bd87:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1bd8b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bd90:	45 0f b6 37          	movzbl (%r15),%r14d
   1bd94:	41 80 fe ff          	cmp    $0xff,%r14b
   1bd98:	74 25                	je     1bdbf <__gxx_personality_v0+0x2ff>
   1bd9a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1bd9f:	41 0f be fe          	movsbl %r14b,%edi
   1bda3:	e8 48 f1 ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1bda8:	41 0f b6 f6          	movzbl %r14b,%esi
   1bdac:	4c 89 f9             	mov    %r15,%rcx
   1bdaf:	48 89 ef             	mov    %rbp,%rdi
   1bdb2:	48 89 c2             	mov    %rax,%rdx
   1bdb5:	e8 76 f2 ff ff       	call   1b030 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1bdba:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1bdbf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1bdc3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bdc8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1bdcf:	00 00 
   1bdd1:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bdd6:	0f b6 02             	movzbl (%rdx),%eax
   1bdd9:	88 44 24 48          	mov    %al,0x48(%rsp)
   1bddd:	3c ff                	cmp    $0xff,%al
   1bddf:	74 33                	je     1be14 <__gxx_personality_v0+0x354>
   1bde1:	31 c9                	xor    %ecx,%ecx
   1bde3:	31 d2                	xor    %edx,%edx
   1bde5:	0f 1f 00             	nopl   (%rax)
   1bde8:	0f b6 06             	movzbl (%rsi),%eax
   1bdeb:	48 83 c6 01          	add    $0x1,%rsi
   1bdef:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bdf4:	89 c7                	mov    %eax,%edi
   1bdf6:	83 e0 7f             	and    $0x7f,%eax
   1bdf9:	d3 e0                	shl    %cl,%eax
   1bdfb:	83 e7 7f             	and    $0x7f,%edi
   1bdfe:	83 c1 07             	add    $0x7,%ecx
   1be01:	48 98                	cltq   
   1be03:	48 01 c2             	add    %rax,%rdx
   1be06:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1be0a:	75 dc                	jne    1bde8 <__gxx_personality_v0+0x328>
   1be0c:	48 01 f2             	add    %rsi,%rdx
   1be0f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1be14:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1be18:	31 c9                	xor    %ecx,%ecx
   1be1a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1be1f:	0f b6 06             	movzbl (%rsi),%eax
   1be22:	31 f6                	xor    %esi,%esi
   1be24:	88 44 24 60          	mov    %al,0x60(%rsp)
   1be28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1be2f:	00 
   1be30:	0f b6 02             	movzbl (%rdx),%eax
   1be33:	48 83 c2 01          	add    $0x1,%rdx
   1be37:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1be3c:	89 c7                	mov    %eax,%edi
   1be3e:	83 e0 7f             	and    $0x7f,%eax
   1be41:	d3 e0                	shl    %cl,%eax
   1be43:	83 e7 7f             	and    $0x7f,%edi
   1be46:	83 c1 07             	add    $0x7,%ecx
   1be49:	48 98                	cltq   
   1be4b:	48 01 c6             	add    %rax,%rsi
   1be4e:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1be52:	75 dc                	jne    1be30 <__gxx_personality_v0+0x370>
   1be54:	48 01 d6             	add    %rdx,%rsi
   1be57:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   1be5c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1be61:	48 89 ef             	mov    %rbp,%rdi
   1be64:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1be69:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1be6e:	4c 89 f6             	mov    %r14,%rsi
   1be71:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1be76:	e8 d5 f3 ff ff       	call   1b250 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1be7b:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1be80:	48 85 f6             	test   %rsi,%rsi
   1be83:	0f 84 a7 fe ff ff    	je     1bd30 <__gxx_personality_v0+0x270>
   1be89:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1be8e:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1be92:	48 85 d2             	test   %rdx,%rdx
   1be95:	0f 84 f1 fc ff ff    	je     1bb8c <__gxx_personality_v0+0xcc>
   1be9b:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1bea0:	4c 89 e9             	mov    %r13,%rcx
   1bea3:	4c 89 f6             	mov    %r14,%rsi
   1bea6:	48 89 ef             	mov    %rbp,%rdi
   1bea9:	e8 d2 f4 ff ff       	call   1b380 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1beae:	83 f8 01             	cmp    $0x1,%eax
   1beb1:	0f 85 79 fe ff ff    	jne    1bd30 <__gxx_personality_v0+0x270>
   1beb7:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1bebc:	e9 cb fc ff ff       	jmp    1bb8c <__gxx_personality_v0+0xcc>
   1bec1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bec8:	48 85 db             	test   %rbx,%rbx
   1becb:	74 23                	je     1bef0 <__gxx_personality_v0+0x430>
   1becd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1bed2:	4c 89 73 40          	mov    %r14,0x40(%rbx)
   1bed6:	89 43 34             	mov    %eax,0x34(%rbx)
   1bed9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1bede:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1bee2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1bee7:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1beeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bef0:	b8 06 00 00 00       	mov    $0x6,%eax
   1bef5:	e9 3b fe ff ff       	jmp    1bd35 <__gxx_personality_v0+0x275>
   1befa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bf00:	48 89 ef             	mov    %rbp,%rdi
   1bf03:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1bf08:	e8 53 10 00 00       	call   1cf60 <_Unwind_GetRegionStart>
   1bf0d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1bf12:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1bf17:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1bf1b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bf20:	45 0f b6 37          	movzbl (%r15),%r14d
   1bf24:	41 80 fe ff          	cmp    $0xff,%r14b
   1bf28:	74 25                	je     1bf4f <__gxx_personality_v0+0x48f>
   1bf2a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1bf2f:	41 0f be fe          	movsbl %r14b,%edi
   1bf33:	e8 b8 ef ff ff       	call   1aef0 <_ZL10read_valuecPPh>
   1bf38:	41 0f b6 f6          	movzbl %r14b,%esi
   1bf3c:	4c 89 f9             	mov    %r15,%rcx
   1bf3f:	48 89 ef             	mov    %rbp,%rdi
   1bf42:	48 89 c2             	mov    %rax,%rdx
   1bf45:	e8 e6 f0 ff ff       	call   1b030 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1bf4a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1bf4f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1bf53:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bf58:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1bf5f:	00 00 
   1bf61:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bf66:	0f b6 02             	movzbl (%rdx),%eax
   1bf69:	88 44 24 48          	mov    %al,0x48(%rsp)
   1bf6d:	3c ff                	cmp    $0xff,%al
   1bf6f:	74 33                	je     1bfa4 <__gxx_personality_v0+0x4e4>
   1bf71:	31 c9                	xor    %ecx,%ecx
   1bf73:	31 d2                	xor    %edx,%edx
   1bf75:	0f 1f 00             	nopl   (%rax)
   1bf78:	0f b6 06             	movzbl (%rsi),%eax
   1bf7b:	48 83 c6 01          	add    $0x1,%rsi
   1bf7f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1bf84:	89 c7                	mov    %eax,%edi
   1bf86:	83 e0 7f             	and    $0x7f,%eax
   1bf89:	d3 e0                	shl    %cl,%eax
   1bf8b:	83 e7 7f             	and    $0x7f,%edi
   1bf8e:	83 c1 07             	add    $0x7,%ecx
   1bf91:	48 98                	cltq   
   1bf93:	48 01 c2             	add    %rax,%rdx
   1bf96:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1bf9a:	75 dc                	jne    1bf78 <__gxx_personality_v0+0x4b8>
   1bf9c:	48 01 f2             	add    %rsi,%rdx
   1bf9f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1bfa4:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1bfa8:	31 c9                	xor    %ecx,%ecx
   1bfaa:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bfaf:	0f b6 06             	movzbl (%rsi),%eax
   1bfb2:	31 f6                	xor    %esi,%esi
   1bfb4:	88 44 24 60          	mov    %al,0x60(%rsp)
   1bfb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bfbf:	00 
   1bfc0:	0f b6 02             	movzbl (%rdx),%eax
   1bfc3:	48 83 c2 01          	add    $0x1,%rdx
   1bfc7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bfcc:	89 c7                	mov    %eax,%edi
   1bfce:	83 e0 7f             	and    $0x7f,%eax
   1bfd1:	d3 e0                	shl    %cl,%eax
   1bfd3:	83 e7 7f             	and    $0x7f,%edi
   1bfd6:	83 c1 07             	add    $0x7,%ecx
   1bfd9:	48 98                	cltq   
   1bfdb:	48 01 c6             	add    %rax,%rsi
   1bfde:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1bfe2:	75 dc                	jne    1bfc0 <__gxx_personality_v0+0x500>
   1bfe4:	48 01 d6             	add    %rdx,%rsi
   1bfe7:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   1bfec:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1bff1:	48 89 ef             	mov    %rbp,%rdi
   1bff4:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1bff9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1bffe:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1c003:	4c 89 f6             	mov    %r14,%rsi
   1c006:	e8 45 f2 ff ff       	call   1b250 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1c00b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1c010:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1c014:	48 85 d2             	test   %rdx,%rdx
   1c017:	0f 84 9a fe ff ff    	je     1beb7 <__gxx_personality_v0+0x3f7>
   1c01d:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1c022:	4c 89 e9             	mov    %r13,%rcx
   1c025:	4c 89 f6             	mov    %r14,%rsi
   1c028:	48 89 ef             	mov    %rbp,%rdi
   1c02b:	e8 50 f3 ff ff       	call   1b380 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1c030:	e9 82 fe ff ff       	jmp    1beb7 <__gxx_personality_v0+0x3f7>
   1c035:	0f 1f 00             	nopl   (%rax)
   1c038:	e8 63 f6 ff ff       	call   1b6a0 <_ZSt9terminatev>
   1c03d:	e8 0e 2b ff ff       	call   eb50 <__stack_chk_fail>
   1c042:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c049:	00 00 00 
   1c04c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c050 <__cxa_guard_acquire>:
   1c050:	f3 0f 1e fa          	endbr64 
   1c054:	48 8b 17             	mov    (%rdi),%rdx
   1c057:	31 c0                	xor    %eax,%eax
   1c059:	80 fa 01             	cmp    $0x1,%dl
   1c05c:	74 1e                	je     1c07c <__cxa_guard_acquire+0x2c>
   1c05e:	48 8d 57 01          	lea    0x1(%rdi),%rdx
   1c062:	31 f6                	xor    %esi,%esi
   1c064:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c069:	89 f0                	mov    %esi,%eax
   1c06b:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   1c06f:	75 0c                	jne    1c07d <__cxa_guard_acquire+0x2d>
   1c071:	48 8b 07             	mov    (%rdi),%rax
   1c074:	3c 01                	cmp    $0x1,%al
   1c076:	0f 95 c0             	setne  %al
   1c079:	0f b6 c0             	movzbl %al,%eax
   1c07c:	c3                   	ret    
   1c07d:	48 8b 07             	mov    (%rdi),%rax
   1c080:	2c 01                	sub    $0x1,%al
   1c082:	75 e5                	jne    1c069 <__cxa_guard_acquire+0x19>
   1c084:	eb eb                	jmp    1c071 <__cxa_guard_acquire+0x21>
   1c086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c08d:	00 00 00 

000000000001c090 <__cxa_guard_abort>:
   1c090:	f3 0f 1e fa          	endbr64 
   1c094:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   1c09b:	c3                   	ret    
   1c09c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c0a0 <__cxa_guard_release>:
   1c0a0:	f3 0f 1e fa          	endbr64 
   1c0a4:	c6 07 01             	movb   $0x1,(%rdi)
   1c0a7:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   1c0ae:	c3                   	ret    
   1c0af:	90                   	nop

000000000001c0b0 <_ZNSt9exceptionD1Ev>:
   1c0b0:	f3 0f 1e fa          	endbr64 
   1c0b4:	c3                   	ret    
   1c0b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c0bc:	00 00 00 
   1c0bf:	90                   	nop

000000000001c0c0 <_ZNKSt9exception4whatEv>:
   1c0c0:	f3 0f 1e fa          	endbr64 
   1c0c4:	48 8d 05 21 63 00 00 	lea    0x6321(%rip),%rax        # 223ec <_C_ctype_+0x5cc>
   1c0cb:	c3                   	ret    
   1c0cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c0d0 <_ZNSt9bad_allocD1Ev>:
   1c0d0:	f3 0f 1e fa          	endbr64 
   1c0d4:	c3                   	ret    
   1c0d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c0dc:	00 00 00 
   1c0df:	90                   	nop

000000000001c0e0 <_ZNKSt9bad_alloc4whatEv>:
   1c0e0:	f3 0f 1e fa          	endbr64 
   1c0e4:	48 8d 05 10 63 00 00 	lea    0x6310(%rip),%rax        # 223fb <_C_ctype_+0x5db>
   1c0eb:	c3                   	ret    
   1c0ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c0f0 <_ZNSt9exceptionD0Ev>:
   1c0f0:	f3 0f 1e fa          	endbr64 
   1c0f4:	be 08 00 00 00       	mov    $0x8,%esi
   1c0f9:	e9 d2 00 00 00       	jmp    1c1d0 <_ZdlPvm>
   1c0fe:	66 90                	xchg   %ax,%ax

000000000001c100 <_ZNSt9bad_allocD0Ev>:
   1c100:	f3 0f 1e fa          	endbr64 
   1c104:	be 08 00 00 00       	mov    $0x8,%esi
   1c109:	e9 c2 00 00 00       	jmp    1c1d0 <_ZdlPvm>
   1c10e:	66 90                	xchg   %ax,%ax

000000000001c110 <_ZNSt9exceptionC1Ev>:
   1c110:	f3 0f 1e fa          	endbr64 
   1c114:	48 8d 05 bd da 00 00 	lea    0xdabd(%rip),%rax        # 29bd8 <_ZTVSt9exception+0x10>
   1c11b:	48 89 07             	mov    %rax,(%rdi)
   1c11e:	c3                   	ret    
   1c11f:	90                   	nop

000000000001c120 <_ZNSt9bad_allocC1Ev>:
   1c120:	f3 0f 1e fa          	endbr64 
   1c124:	48 8d 05 d5 da 00 00 	lea    0xdad5(%rip),%rax        # 29c00 <_ZTVSt9bad_alloc+0x10>
   1c12b:	48 89 07             	mov    %rax,(%rdi)
   1c12e:	c3                   	ret    
   1c12f:	90                   	nop

000000000001c130 <_ZNKSt9type_info14__is_pointer_pEv>:
   1c130:	f3 0f 1e fa          	endbr64 
   1c134:	31 c0                	xor    %eax,%eax
   1c136:	c3                   	ret    
   1c137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c13e:	00 00 

000000000001c140 <_ZNKSt9type_info15__is_function_pEv>:
   1c140:	f3 0f 1e fa          	endbr64 
   1c144:	31 c0                	xor    %eax,%eax
   1c146:	c3                   	ret    
   1c147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c14e:	00 00 

000000000001c150 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   1c150:	f3 0f 1e fa          	endbr64 
   1c154:	48 39 fe             	cmp    %rdi,%rsi
   1c157:	0f 94 c0             	sete   %al
   1c15a:	c3                   	ret    
   1c15b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c160 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   1c160:	f3 0f 1e fa          	endbr64 
   1c164:	c3                   	ret    
   1c165:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c16c:	00 00 00 
   1c16f:	90                   	nop

000000000001c170 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   1c170:	f3 0f 1e fa          	endbr64 
   1c174:	c3                   	ret    
   1c175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c17c:	00 00 00 
   1c17f:	90                   	nop

000000000001c180 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   1c180:	f3 0f 1e fa          	endbr64 
   1c184:	be 10 00 00 00       	mov    $0x10,%esi
   1c189:	e9 42 00 00 00       	jmp    1c1d0 <_ZdlPvm>
   1c18e:	66 90                	xchg   %ax,%ax

000000000001c190 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   1c190:	f3 0f 1e fa          	endbr64 
   1c194:	be 18 00 00 00       	mov    $0x18,%esi
   1c199:	e9 32 00 00 00       	jmp    1c1d0 <_ZdlPvm>
   1c19e:	66 90                	xchg   %ax,%ax

000000000001c1a0 <_ZNKSt9type_infoeqERKS_>:
   1c1a0:	f3 0f 1e fa          	endbr64 
   1c1a4:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1c1a8:	48 39 47 08          	cmp    %rax,0x8(%rdi)
   1c1ac:	0f 94 c0             	sete   %al
   1c1af:	c3                   	ret    

000000000001c1b0 <_ZdlPv>:
   1c1b0:	f3 0f 1e fa          	endbr64 
   1c1b4:	e9 b7 0f ff ff       	jmp    d170 <dlfree>
   1c1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c1c0 <_ZdaPv>:
   1c1c0:	f3 0f 1e fa          	endbr64 
   1c1c4:	e9 e7 ff ff ff       	jmp    1c1b0 <_ZdlPv>
   1c1c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c1d0 <_ZdlPvm>:
   1c1d0:	f3 0f 1e fa          	endbr64 
   1c1d4:	e9 d7 ff ff ff       	jmp    1c1b0 <_ZdlPv>
   1c1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c1e0 <_Znwm>:
   1c1e0:	f3 0f 1e fa          	endbr64 
   1c1e4:	55                   	push   %rbp
   1c1e5:	53                   	push   %rbx
   1c1e6:	48 89 fb             	mov    %rdi,%rbx
   1c1e9:	48 83 ec 08          	sub    $0x8,%rsp
   1c1ed:	e8 0e f5 fe ff       	call   b700 <dlmalloc>
   1c1f2:	48 85 c0             	test   %rax,%rax
   1c1f5:	75 23                	jne    1c21a <_Znwm+0x3a>
   1c1f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c1fe:	00 00 
   1c200:	e8 3b 00 00 00       	call   1c240 <_Z9call_newhv>
   1c205:	85 c0                	test   %eax,%eax
   1c207:	0f 84 d5 5e fe ff    	je     20e2 <_Znwm.cold>
   1c20d:	48 89 df             	mov    %rbx,%rdi
   1c210:	e8 eb f4 fe ff       	call   b700 <dlmalloc>
   1c215:	48 85 c0             	test   %rax,%rax
   1c218:	74 e6                	je     1c200 <_Znwm+0x20>
   1c21a:	48 83 c4 08          	add    $0x8,%rsp
   1c21e:	5b                   	pop    %rbx
   1c21f:	5d                   	pop    %rbp
   1c220:	c3                   	ret    
   1c221:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c228:	00 00 00 
   1c22b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c230 <_Znam>:
   1c230:	f3 0f 1e fa          	endbr64 
   1c234:	e9 a7 ff ff ff       	jmp    1c1e0 <_Znwm>
   1c239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c240 <_Z9call_newhv>:
   1c240:	f3 0f 1e fa          	endbr64 
   1c244:	53                   	push   %rbx
   1c245:	48 8d 3d dc 2e 01 00 	lea    0x12edc(%rip),%rdi        # 2f128 <_ZStL12handler_lock>
   1c24c:	e8 ff ea fe ff       	call   ad50 <sgx_spin_lock>
   1c251:	48 8b 1d c8 2e 01 00 	mov    0x12ec8(%rip),%rbx        # 2f120 <_ZStL9new_handl>
   1c258:	48 8d 3d c9 2e 01 00 	lea    0x12ec9(%rip),%rdi        # 2f128 <_ZStL12handler_lock>
   1c25f:	e8 5c eb fe ff       	call   adc0 <sgx_spin_unlock>
   1c264:	31 c0                	xor    %eax,%eax
   1c266:	48 85 db             	test   %rbx,%rbx
   1c269:	74 07                	je     1c272 <_Z9call_newhv+0x32>
   1c26b:	ff d3                	call   *%rbx
   1c26d:	b8 01 00 00 00       	mov    $0x1,%eax
   1c272:	5b                   	pop    %rbx
   1c273:	c3                   	ret    
   1c274:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c27b:	00 00 00 
   1c27e:	66 90                	xchg   %ax,%ax

000000000001c280 <_ZNKSt11logic_error4whatEv>:
   1c280:	f3 0f 1e fa          	endbr64 
   1c284:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1c288:	c3                   	ret    
   1c289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c290 <_ZNKSt13runtime_error4whatEv>:
   1c290:	f3 0f 1e fa          	endbr64 
   1c294:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1c298:	c3                   	ret    
   1c299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c2a0 <_ZNSt11logic_errorD1Ev>:
   1c2a0:	f3 0f 1e fa          	endbr64 
   1c2a4:	48 8d 05 bd d9 00 00 	lea    0xd9bd(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c2ab:	55                   	push   %rbp
   1c2ac:	48 89 fd             	mov    %rdi,%rbp
   1c2af:	48 89 07             	mov    %rax,(%rdi)
   1c2b2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c2b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c2bb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c2c0:	83 e8 01             	sub    $0x1,%eax
   1c2c3:	78 0b                	js     1c2d0 <_ZNSt11logic_errorD1Ev+0x30>
   1c2c5:	48 89 ef             	mov    %rbp,%rdi
   1c2c8:	5d                   	pop    %rbp
   1c2c9:	e9 e2 fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c2ce:	66 90                	xchg   %ax,%ax
   1c2d0:	48 83 ef 18          	sub    $0x18,%rdi
   1c2d4:	e8 d7 fe ff ff       	call   1c1b0 <_ZdlPv>
   1c2d9:	48 89 ef             	mov    %rbp,%rdi
   1c2dc:	5d                   	pop    %rbp
   1c2dd:	e9 ce fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c2e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c2e9:	00 00 00 
   1c2ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c2f0 <_ZNSt13runtime_errorD1Ev>:
   1c2f0:	f3 0f 1e fa          	endbr64 
   1c2f4:	48 8d 05 95 d9 00 00 	lea    0xd995(%rip),%rax        # 29c90 <_ZTVSt13runtime_error+0x10>
   1c2fb:	55                   	push   %rbp
   1c2fc:	48 89 fd             	mov    %rdi,%rbp
   1c2ff:	48 89 07             	mov    %rax,(%rdi)
   1c302:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c306:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c30b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c310:	83 e8 01             	sub    $0x1,%eax
   1c313:	78 0b                	js     1c320 <_ZNSt13runtime_errorD1Ev+0x30>
   1c315:	48 89 ef             	mov    %rbp,%rdi
   1c318:	5d                   	pop    %rbp
   1c319:	e9 92 fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c31e:	66 90                	xchg   %ax,%ax
   1c320:	48 83 ef 18          	sub    $0x18,%rdi
   1c324:	e8 87 fe ff ff       	call   1c1b0 <_ZdlPv>
   1c329:	48 89 ef             	mov    %rbp,%rdi
   1c32c:	5d                   	pop    %rbp
   1c32d:	e9 7e fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c332:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c339:	00 00 00 
   1c33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c340 <_ZNSt12length_errorD1Ev>:
   1c340:	f3 0f 1e fa          	endbr64 
   1c344:	48 8d 05 1d d9 00 00 	lea    0xd91d(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c34b:	55                   	push   %rbp
   1c34c:	48 89 fd             	mov    %rdi,%rbp
   1c34f:	48 89 07             	mov    %rax,(%rdi)
   1c352:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c356:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c35b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c360:	83 e8 01             	sub    $0x1,%eax
   1c363:	78 0b                	js     1c370 <_ZNSt12length_errorD1Ev+0x30>
   1c365:	48 89 ef             	mov    %rbp,%rdi
   1c368:	5d                   	pop    %rbp
   1c369:	e9 42 fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c36e:	66 90                	xchg   %ax,%ax
   1c370:	48 83 ef 18          	sub    $0x18,%rdi
   1c374:	e8 37 fe ff ff       	call   1c1b0 <_ZdlPv>
   1c379:	48 89 ef             	mov    %rbp,%rdi
   1c37c:	5d                   	pop    %rbp
   1c37d:	e9 2e fd ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c382:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c389:	00 00 00 
   1c38c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c390 <_ZNSt12out_of_rangeD1Ev>:
   1c390:	f3 0f 1e fa          	endbr64 
   1c394:	48 8d 05 cd d8 00 00 	lea    0xd8cd(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c39b:	55                   	push   %rbp
   1c39c:	48 89 fd             	mov    %rdi,%rbp
   1c39f:	48 89 07             	mov    %rax,(%rdi)
   1c3a2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c3a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c3ab:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c3b0:	83 e8 01             	sub    $0x1,%eax
   1c3b3:	78 0b                	js     1c3c0 <_ZNSt12out_of_rangeD1Ev+0x30>
   1c3b5:	48 89 ef             	mov    %rbp,%rdi
   1c3b8:	5d                   	pop    %rbp
   1c3b9:	e9 f2 fc ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c3be:	66 90                	xchg   %ax,%ax
   1c3c0:	48 83 ef 18          	sub    $0x18,%rdi
   1c3c4:	e8 e7 fd ff ff       	call   1c1b0 <_ZdlPv>
   1c3c9:	48 89 ef             	mov    %rbp,%rdi
   1c3cc:	5d                   	pop    %rbp
   1c3cd:	e9 de fc ff ff       	jmp    1c0b0 <_ZNSt9exceptionD1Ev>
   1c3d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c3d9:	00 00 00 
   1c3dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c3e0 <_ZNSt12length_errorD0Ev>:
   1c3e0:	f3 0f 1e fa          	endbr64 
   1c3e4:	48 8d 05 7d d8 00 00 	lea    0xd87d(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c3eb:	55                   	push   %rbp
   1c3ec:	48 89 fd             	mov    %rdi,%rbp
   1c3ef:	48 89 07             	mov    %rax,(%rdi)
   1c3f2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c3f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c3fb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c400:	83 e8 01             	sub    $0x1,%eax
   1c403:	78 1b                	js     1c420 <_ZNSt12length_errorD0Ev+0x40>
   1c405:	48 89 ef             	mov    %rbp,%rdi
   1c408:	e8 a3 fc ff ff       	call   1c0b0 <_ZNSt9exceptionD1Ev>
   1c40d:	48 89 ef             	mov    %rbp,%rdi
   1c410:	be 10 00 00 00       	mov    $0x10,%esi
   1c415:	5d                   	pop    %rbp
   1c416:	e9 b5 fd ff ff       	jmp    1c1d0 <_ZdlPvm>
   1c41b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c420:	48 83 ef 18          	sub    $0x18,%rdi
   1c424:	e8 87 fd ff ff       	call   1c1b0 <_ZdlPv>
   1c429:	eb da                	jmp    1c405 <_ZNSt12length_errorD0Ev+0x25>
   1c42b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c430 <_ZNSt12out_of_rangeD0Ev>:
   1c430:	f3 0f 1e fa          	endbr64 
   1c434:	48 8d 05 2d d8 00 00 	lea    0xd82d(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c43b:	55                   	push   %rbp
   1c43c:	48 89 fd             	mov    %rdi,%rbp
   1c43f:	48 89 07             	mov    %rax,(%rdi)
   1c442:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c446:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c44b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c450:	83 e8 01             	sub    $0x1,%eax
   1c453:	78 1b                	js     1c470 <_ZNSt12out_of_rangeD0Ev+0x40>
   1c455:	48 89 ef             	mov    %rbp,%rdi
   1c458:	e8 53 fc ff ff       	call   1c0b0 <_ZNSt9exceptionD1Ev>
   1c45d:	48 89 ef             	mov    %rbp,%rdi
   1c460:	be 10 00 00 00       	mov    $0x10,%esi
   1c465:	5d                   	pop    %rbp
   1c466:	e9 65 fd ff ff       	jmp    1c1d0 <_ZdlPvm>
   1c46b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c470:	48 83 ef 18          	sub    $0x18,%rdi
   1c474:	e8 37 fd ff ff       	call   1c1b0 <_ZdlPv>
   1c479:	eb da                	jmp    1c455 <_ZNSt12out_of_rangeD0Ev+0x25>
   1c47b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c480 <_ZNSt11logic_errorD0Ev>:
   1c480:	f3 0f 1e fa          	endbr64 
   1c484:	48 8d 05 dd d7 00 00 	lea    0xd7dd(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c48b:	55                   	push   %rbp
   1c48c:	48 89 fd             	mov    %rdi,%rbp
   1c48f:	48 89 07             	mov    %rax,(%rdi)
   1c492:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c496:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c49b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c4a0:	83 e8 01             	sub    $0x1,%eax
   1c4a3:	78 1b                	js     1c4c0 <_ZNSt11logic_errorD0Ev+0x40>
   1c4a5:	48 89 ef             	mov    %rbp,%rdi
   1c4a8:	e8 03 fc ff ff       	call   1c0b0 <_ZNSt9exceptionD1Ev>
   1c4ad:	48 89 ef             	mov    %rbp,%rdi
   1c4b0:	be 10 00 00 00       	mov    $0x10,%esi
   1c4b5:	5d                   	pop    %rbp
   1c4b6:	e9 15 fd ff ff       	jmp    1c1d0 <_ZdlPvm>
   1c4bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c4c0:	48 83 ef 18          	sub    $0x18,%rdi
   1c4c4:	e8 e7 fc ff ff       	call   1c1b0 <_ZdlPv>
   1c4c9:	eb da                	jmp    1c4a5 <_ZNSt11logic_errorD0Ev+0x25>
   1c4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c4d0 <_ZNSt13runtime_errorD0Ev>:
   1c4d0:	f3 0f 1e fa          	endbr64 
   1c4d4:	48 8d 05 b5 d7 00 00 	lea    0xd7b5(%rip),%rax        # 29c90 <_ZTVSt13runtime_error+0x10>
   1c4db:	55                   	push   %rbp
   1c4dc:	48 89 fd             	mov    %rdi,%rbp
   1c4df:	48 89 07             	mov    %rax,(%rdi)
   1c4e2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c4e6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c4eb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c4f0:	83 e8 01             	sub    $0x1,%eax
   1c4f3:	78 1b                	js     1c510 <_ZNSt13runtime_errorD0Ev+0x40>
   1c4f5:	48 89 ef             	mov    %rbp,%rdi
   1c4f8:	e8 b3 fb ff ff       	call   1c0b0 <_ZNSt9exceptionD1Ev>
   1c4fd:	48 89 ef             	mov    %rbp,%rdi
   1c500:	be 10 00 00 00       	mov    $0x10,%esi
   1c505:	5d                   	pop    %rbp
   1c506:	e9 c5 fc ff ff       	jmp    1c1d0 <_ZdlPvm>
   1c50b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c510:	48 83 ef 18          	sub    $0x18,%rdi
   1c514:	e8 97 fc ff ff       	call   1c1b0 <_ZdlPv>
   1c519:	eb da                	jmp    1c4f5 <_ZNSt13runtime_errorD0Ev+0x25>
   1c51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c520 <_ZNSt11logic_errorC1EPKc>:
   1c520:	f3 0f 1e fa          	endbr64 
   1c524:	41 55                	push   %r13
   1c526:	49 89 f5             	mov    %rsi,%r13
   1c529:	41 54                	push   %r12
   1c52b:	49 89 fc             	mov    %rdi,%r12
   1c52e:	55                   	push   %rbp
   1c52f:	53                   	push   %rbx
   1c530:	48 83 ec 08          	sub    $0x8,%rsp
   1c534:	e8 d7 fb ff ff       	call   1c110 <_ZNSt9exceptionC1Ev>
   1c539:	48 8d 05 28 d7 00 00 	lea    0xd728(%rip),%rax        # 29c68 <_ZTVSt11logic_error+0x10>
   1c540:	4c 89 ef             	mov    %r13,%rdi
   1c543:	49 89 04 24          	mov    %rax,(%r12)
   1c547:	e8 c4 24 ff ff       	call   ea10 <strlen>
   1c54c:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1c550:	48 89 c5             	mov    %rax,%rbp
   1c553:	e8 88 fc ff ff       	call   1c1e0 <_Znwm>
   1c558:	48 89 28             	mov    %rbp,(%rax)
   1c55b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1c55f:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1c563:	4c 89 ee             	mov    %r13,%rsi
   1c566:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1c56a:	48 89 df             	mov    %rbx,%rdi
   1c56d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1c574:	e8 47 22 ff ff       	call   e7c0 <memcpy>
   1c579:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1c57e:	48 83 c4 08          	add    $0x8,%rsp
   1c582:	5b                   	pop    %rbx
   1c583:	5d                   	pop    %rbp
   1c584:	41 5c                	pop    %r12
   1c586:	41 5d                	pop    %r13
   1c588:	c3                   	ret    
   1c589:	f3 0f 1e fa          	endbr64 
   1c58d:	48 89 c5             	mov    %rax,%rbp
   1c590:	e9 d5 5b fe ff       	jmp    216a <_ZNSt11logic_errorC2EPKc.cold>
   1c595:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c59c:	00 00 00 
   1c59f:	90                   	nop

000000000001c5a0 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>:
   1c5a0:	f3 0f 1e fa          	endbr64 
   1c5a4:	41 55                	push   %r13
   1c5a6:	41 54                	push   %r12
   1c5a8:	49 89 fc             	mov    %rdi,%r12
   1c5ab:	55                   	push   %rbp
   1c5ac:	53                   	push   %rbx
   1c5ad:	48 89 f3             	mov    %rsi,%rbx
   1c5b0:	4c 8d 6b 01          	lea    0x1(%rbx),%r13
   1c5b4:	48 83 ec 08          	sub    $0x8,%rsp
   1c5b8:	e8 53 fb ff ff       	call   1c110 <_ZNSt9exceptionC1Ev>
   1c5bd:	48 8d 05 cc d6 00 00 	lea    0xd6cc(%rip),%rax        # 29c90 <_ZTVSt13runtime_error+0x10>
   1c5c4:	49 89 04 24          	mov    %rax,(%r12)
   1c5c8:	f6 03 01             	testb  $0x1,(%rbx)
   1c5cb:	74 04                	je     1c5d1 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0x31>
   1c5cd:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1c5d1:	4c 89 ef             	mov    %r13,%rdi
   1c5d4:	e8 37 24 ff ff       	call   ea10 <strlen>
   1c5d9:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1c5dd:	48 89 c5             	mov    %rax,%rbp
   1c5e0:	e8 fb fb ff ff       	call   1c1e0 <_Znwm>
   1c5e5:	48 89 28             	mov    %rbp,(%rax)
   1c5e8:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1c5ec:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1c5f0:	4c 89 ee             	mov    %r13,%rsi
   1c5f3:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1c5f7:	48 89 df             	mov    %rbx,%rdi
   1c5fa:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1c601:	e8 ba 21 ff ff       	call   e7c0 <memcpy>
   1c606:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1c60b:	48 83 c4 08          	add    $0x8,%rsp
   1c60f:	5b                   	pop    %rbx
   1c610:	5d                   	pop    %rbp
   1c611:	41 5c                	pop    %r12
   1c613:	41 5d                	pop    %r13
   1c615:	c3                   	ret    
   1c616:	f3 0f 1e fa          	endbr64 
   1c61a:	48 89 c5             	mov    %rax,%rbp
   1c61d:	e9 58 5b fe ff       	jmp    217a <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>
   1c622:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c629:	00 00 00 
   1c62c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c630 <_ZNSt13runtime_errorC1EPKc>:
   1c630:	f3 0f 1e fa          	endbr64 
   1c634:	41 55                	push   %r13
   1c636:	49 89 f5             	mov    %rsi,%r13
   1c639:	41 54                	push   %r12
   1c63b:	49 89 fc             	mov    %rdi,%r12
   1c63e:	55                   	push   %rbp
   1c63f:	53                   	push   %rbx
   1c640:	48 83 ec 08          	sub    $0x8,%rsp
   1c644:	e8 c7 fa ff ff       	call   1c110 <_ZNSt9exceptionC1Ev>
   1c649:	48 8d 05 40 d6 00 00 	lea    0xd640(%rip),%rax        # 29c90 <_ZTVSt13runtime_error+0x10>
   1c650:	4c 89 ef             	mov    %r13,%rdi
   1c653:	49 89 04 24          	mov    %rax,(%r12)
   1c657:	e8 b4 23 ff ff       	call   ea10 <strlen>
   1c65c:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1c660:	48 89 c5             	mov    %rax,%rbp
   1c663:	e8 78 fb ff ff       	call   1c1e0 <_Znwm>
   1c668:	48 89 28             	mov    %rbp,(%rax)
   1c66b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1c66f:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1c673:	4c 89 ee             	mov    %r13,%rsi
   1c676:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1c67a:	48 89 df             	mov    %rbx,%rdi
   1c67d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1c684:	e8 37 21 ff ff       	call   e7c0 <memcpy>
   1c689:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1c68e:	48 83 c4 08          	add    $0x8,%rsp
   1c692:	5b                   	pop    %rbx
   1c693:	5d                   	pop    %rbp
   1c694:	41 5c                	pop    %r12
   1c696:	41 5d                	pop    %r13
   1c698:	c3                   	ret    
   1c699:	f3 0f 1e fa          	endbr64 
   1c69d:	48 89 c5             	mov    %rax,%rbp
   1c6a0:	e9 e5 5a fe ff       	jmp    218a <_ZNSt13runtime_errorC2EPKc.cold>
   1c6a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c6ac:	00 00 00 
   1c6af:	90                   	nop

000000000001c6b0 <_ZNSt13runtime_erroraSERKS_>:
   1c6b0:	f3 0f 1e fa          	endbr64 
   1c6b4:	41 54                	push   %r12
   1c6b6:	49 89 fc             	mov    %rdi,%r12
   1c6b9:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1c6bd:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1c6c1:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1c6c6:	f0 83 40 f8 01       	lock addl $0x1,-0x8(%rax)
   1c6cb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c6d0:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1c6d5:	83 e8 01             	sub    $0x1,%eax
   1c6d8:	78 06                	js     1c6e0 <_ZNSt13runtime_erroraSERKS_+0x30>
   1c6da:	4c 89 e0             	mov    %r12,%rax
   1c6dd:	41 5c                	pop    %r12
   1c6df:	c3                   	ret    
   1c6e0:	48 83 ef 18          	sub    $0x18,%rdi
   1c6e4:	e8 c7 fa ff ff       	call   1c1b0 <_ZdlPv>
   1c6e9:	4c 89 e0             	mov    %r12,%rax
   1c6ec:	41 5c                	pop    %r12
   1c6ee:	c3                   	ret    
   1c6ef:	90                   	nop

000000000001c6f0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>:
   1c6f0:	f3 0f 1e fa          	endbr64 
   1c6f4:	f6 07 01             	testb  $0x1,(%rdi)
   1c6f7:	75 07                	jne    1c700 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev+0x10>
   1c6f9:	c3                   	ret    
   1c6fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c700:	48 83 ec 08          	sub    $0x8,%rsp
   1c704:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1c708:	e8 a3 fa ff ff       	call   1c1b0 <_ZdlPv>
   1c70d:	48 83 c4 08          	add    $0x8,%rsp
   1c711:	c3                   	ret    
   1c712:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c719:	00 00 00 
   1c71c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c720 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>:
   1c720:	f3 0f 1e fa          	endbr64 
   1c724:	41 57                	push   %r15
   1c726:	49 89 cf             	mov    %rcx,%r15
   1c729:	41 56                	push   %r14
   1c72b:	49 89 d6             	mov    %rdx,%r14
   1c72e:	41 55                	push   %r13
   1c730:	49 89 f5             	mov    %rsi,%r13
   1c733:	41 54                	push   %r12
   1c735:	4d 89 c4             	mov    %r8,%r12
   1c738:	55                   	push   %rbp
   1c739:	48 89 fd             	mov    %rdi,%rbp
   1c73c:	53                   	push   %rbx
   1c73d:	48 83 ec 08          	sub    $0x8,%rsp
   1c741:	0f b6 07             	movzbl (%rdi),%eax
   1c744:	89 c2                	mov    %eax,%edx
   1c746:	83 e2 01             	and    $0x1,%edx
   1c749:	74 6d                	je     1c7b8 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x98>
   1c74b:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   1c74f:	49 39 dd             	cmp    %rbx,%r13
   1c752:	77 4c                	ja     1c7a0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x80>
   1c754:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1c758:	74 46                	je     1c7a0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x80>
   1c75a:	4c 29 eb             	sub    %r13,%rbx
   1c75d:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   1c761:	4c 39 f3             	cmp    %r14,%rbx
   1c764:	49 0f 47 de          	cmova  %r14,%rbx
   1c768:	49 39 dc             	cmp    %rbx,%r12
   1c76b:	49 89 d8             	mov    %rbx,%r8
   1c76e:	4d 0f 46 c4          	cmovbe %r12,%r8
   1c772:	84 d2                	test   %dl,%dl
   1c774:	74 04                	je     1c77a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x5a>
   1c776:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1c77a:	4d 85 c0             	test   %r8,%r8
   1c77d:	75 49                	jne    1c7c8 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xa8>
   1c77f:	49 39 dc             	cmp    %rbx,%r12
   1c782:	77 6c                	ja     1c7f0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xd0>
   1c784:	0f 92 c0             	setb   %al
   1c787:	0f b6 c0             	movzbl %al,%eax
   1c78a:	48 83 c4 08          	add    $0x8,%rsp
   1c78e:	5b                   	pop    %rbx
   1c78f:	5d                   	pop    %rbp
   1c790:	41 5c                	pop    %r12
   1c792:	41 5d                	pop    %r13
   1c794:	41 5e                	pop    %r14
   1c796:	41 5f                	pop    %r15
   1c798:	c3                   	ret    
   1c799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c7a0:	48 89 ef             	mov    %rbp,%rdi
   1c7a3:	e8 4e 5a fe ff       	call   21f6 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>
   1c7a8:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   1c7ac:	83 e2 01             	and    $0x1,%edx
   1c7af:	eb a9                	jmp    1c75a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x3a>
   1c7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c7b8:	48 d1 e8             	shr    %rax
   1c7bb:	83 e0 7f             	and    $0x7f,%eax
   1c7be:	48 89 c3             	mov    %rax,%rbx
   1c7c1:	eb 8c                	jmp    1c74f <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x2f>
   1c7c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c7c8:	4c 01 ef             	add    %r13,%rdi
   1c7cb:	4c 89 c2             	mov    %r8,%rdx
   1c7ce:	4c 89 fe             	mov    %r15,%rsi
   1c7d1:	e8 0a 1d ff ff       	call   e4e0 <memcmp>
   1c7d6:	85 c0                	test   %eax,%eax
   1c7d8:	74 a5                	je     1c77f <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x5f>
   1c7da:	48 83 c4 08          	add    $0x8,%rsp
   1c7de:	5b                   	pop    %rbx
   1c7df:	5d                   	pop    %rbp
   1c7e0:	41 5c                	pop    %r12
   1c7e2:	41 5d                	pop    %r13
   1c7e4:	41 5e                	pop    %r14
   1c7e6:	41 5f                	pop    %r15
   1c7e8:	c3                   	ret    
   1c7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c7f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1c7f5:	eb 93                	jmp    1c78a <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x6a>
   1c7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c7fe:	00 00 

000000000001c800 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>:
   1c800:	f3 0f 1e fa          	endbr64 
   1c804:	41 56                	push   %r14
   1c806:	41 55                	push   %r13
   1c808:	41 54                	push   %r12
   1c80a:	49 89 f4             	mov    %rsi,%r12
   1c80d:	55                   	push   %rbp
   1c80e:	48 89 fd             	mov    %rdi,%rbp
   1c811:	53                   	push   %rbx
   1c812:	48 89 d3             	mov    %rdx,%rbx
   1c815:	48 83 fa ef          	cmp    $0xffffffffffffffef,%rdx
   1c819:	77 25                	ja     1c840 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x40>
   1c81b:	48 83 fa 16          	cmp    $0x16,%rdx
   1c81f:	77 24                	ja     1c845 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x45>
   1c821:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   1c824:	4c 8d 6f 01          	lea    0x1(%rdi),%r13
   1c828:	88 07                	mov    %al,(%rdi)
   1c82a:	48 85 d2             	test   %rdx,%rdx
   1c82d:	75 39                	jne    1c868 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x68>
   1c82f:	41 c6 44 1d 00 00    	movb   $0x0,0x0(%r13,%rbx,1)
   1c835:	5b                   	pop    %rbx
   1c836:	5d                   	pop    %rbp
   1c837:	41 5c                	pop    %r12
   1c839:	41 5d                	pop    %r13
   1c83b:	41 5e                	pop    %r14
   1c83d:	c3                   	ret    
   1c83e:	66 90                	xchg   %ax,%ax
   1c840:	e8 55 59 fe ff       	call   219a <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>
   1c845:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   1c849:	49 83 e6 f0          	and    $0xfffffffffffffff0,%r14
   1c84d:	4c 89 f7             	mov    %r14,%rdi
   1c850:	49 83 ce 01          	or     $0x1,%r14
   1c854:	e8 87 f9 ff ff       	call   1c1e0 <_Znwm>
   1c859:	4c 89 75 00          	mov    %r14,0x0(%rbp)
   1c85d:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1c861:	49 89 c5             	mov    %rax,%r13
   1c864:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   1c868:	48 89 da             	mov    %rbx,%rdx
   1c86b:	4c 89 e6             	mov    %r12,%rsi
   1c86e:	4c 89 ef             	mov    %r13,%rdi
   1c871:	e8 4a 1f ff ff       	call   e7c0 <memcpy>
   1c876:	41 c6 44 1d 00 00    	movb   $0x0,0x0(%r13,%rbx,1)
   1c87c:	5b                   	pop    %rbx
   1c87d:	5d                   	pop    %rbp
   1c87e:	41 5c                	pop    %r12
   1c880:	41 5d                	pop    %r13
   1c882:	41 5e                	pop    %r14
   1c884:	c3                   	ret    
   1c885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c88c:	00 00 00 
   1c88f:	90                   	nop

000000000001c890 <expand>:
   1c890:	55                   	push   %rbp
   1c891:	48 89 fd             	mov    %rdi,%rbp
   1c894:	53                   	push   %rbx
   1c895:	48 83 ec 08          	sub    $0x8,%rsp
   1c899:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   1c89d:	48 89 df             	mov    %rbx,%rdi
   1c8a0:	e8 5b ee fe ff       	call   b700 <dlmalloc>
   1c8a5:	48 85 c0             	test   %rax,%rax
   1c8a8:	74 45                	je     1c8ef <expand+0x5f>
   1c8aa:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   1c8ae:	4c 29 c3             	sub    %r8,%rbx
   1c8b1:	48 89 df             	mov    %rbx,%rdi
   1c8b4:	48 01 c7             	add    %rax,%rdi
   1c8b7:	72 2f                	jb     1c8e8 <expand+0x58>
   1c8b9:	8b 5d 1c             	mov    0x1c(%rbp),%ebx
   1c8bc:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   1c8c0:	8d 53 01             	lea    0x1(%rbx),%edx
   1c8c3:	eb 06                	jmp    1c8cb <expand+0x3b>
   1c8c5:	0f 1f 00             	nopl   (%rax)
   1c8c8:	48 89 c8             	mov    %rcx,%rax
   1c8cb:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
   1c8cf:	48 89 30             	mov    %rsi,(%rax)
   1c8d2:	41 89 d1             	mov    %edx,%r9d
   1c8d5:	48 89 c6             	mov    %rax,%rsi
   1c8d8:	83 c2 01             	add    $0x1,%edx
   1c8db:	48 39 f9             	cmp    %rdi,%rcx
   1c8de:	76 e8                	jbe    1c8c8 <expand+0x38>
   1c8e0:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1c8e4:	44 89 4d 1c          	mov    %r9d,0x1c(%rbp)
   1c8e8:	48 83 c4 08          	add    $0x8,%rsp
   1c8ec:	5b                   	pop    %rbx
   1c8ed:	5d                   	pop    %rbp
   1c8ee:	c3                   	ret    
   1c8ef:	48 8b 05 3a 28 01 00 	mov    0x1283a(%rip),%rax        # 2f130 <pg_size>
   1c8f6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1c8fa:	48 8d 5c 10 ff       	lea    -0x1(%rax,%rdx,1),%rbx
   1c8ff:	48 f7 d8             	neg    %rax
   1c902:	48 21 c3             	and    %rax,%rbx
   1c905:	48 89 df             	mov    %rbx,%rdi
   1c908:	e8 f3 ed fe ff       	call   b700 <dlmalloc>
   1c90d:	48 85 c0             	test   %rax,%rax
   1c910:	75 98                	jne    1c8aa <expand+0x1a>
   1c912:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   1c916:	48 8d 43 0f          	lea    0xf(%rbx),%rax
   1c91a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1c91e:	f0 48 0f c1 05 11 28 	lock xadd %rax,0x12811(%rip)        # 2f138 <sos_memory_freepos>
   1c925:	01 00 
   1c927:	48 8d 15 12 28 01 00 	lea    0x12812(%rip),%rdx        # 2f140 <sos_memory>
   1c92e:	48 01 d0             	add    %rdx,%rax
   1c931:	e9 74 ff ff ff       	jmp    1c8aa <expand+0x1a>
   1c936:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c93d:	00 00 00 

000000000001c940 <_UIx86_64__mempool_init>:
   1c940:	f3 0f 1e fa          	endbr64 
   1c944:	48 8b 0d e5 27 01 00 	mov    0x127e5(%rip),%rcx        # 2f130 <pg_size>
   1c94b:	41 54                	push   %r12
   1c94d:	49 89 d4             	mov    %rdx,%r12
   1c950:	55                   	push   %rbp
   1c951:	48 89 fd             	mov    %rdi,%rbp
   1c954:	53                   	push   %rbx
   1c955:	48 89 f3             	mov    %rsi,%rbx
   1c958:	48 85 c9             	test   %rcx,%rcx
   1c95b:	75 0f                	jne    1c96c <_UIx86_64__mempool_init+0x2c>
   1c95d:	e8 0e 34 00 00       	call   1fd70 <getpagesize>
   1c962:	48 63 c8             	movslq %eax,%rcx
   1c965:	48 89 0d c4 27 01 00 	mov    %rcx,0x127c4(%rip)        # 2f130 <pg_size>
   1c96c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c970:	48 8d 73 0f          	lea    0xf(%rbx),%rsi
   1c974:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   1c97b:	00 
   1c97c:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   1c980:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
   1c984:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   1c98b:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   1c98f:	4d 85 e4             	test   %r12,%r12
   1c992:	75 23                	jne    1c9b7 <_UIx86_64__mempool_init+0x77>
   1c994:	48 89 c8             	mov    %rcx,%rax
   1c997:	31 d2                	xor    %edx,%edx
   1c999:	48 f7 f6             	div    %rsi
   1c99c:	48 83 f8 03          	cmp    $0x3,%rax
   1c9a0:	77 0e                	ja     1c9b0 <_UIx86_64__mempool_init+0x70>
   1c9a2:	b8 10 00 00 00       	mov    $0x10,%eax
   1c9a7:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   1c9ad:	eb 0b                	jmp    1c9ba <_UIx86_64__mempool_init+0x7a>
   1c9af:	90                   	nop
   1c9b0:	48 c1 e8 02          	shr    $0x2,%rax
   1c9b4:	49 89 c4             	mov    %rax,%r12
   1c9b7:	44 89 e0             	mov    %r12d,%eax
   1c9ba:	48 89 75 08          	mov    %rsi,0x8(%rbp)
   1c9be:	49 0f af f4          	imul   %r12,%rsi
   1c9c2:	5b                   	pop    %rbx
   1c9c3:	48 89 ef             	mov    %rbp,%rdi
   1c9c6:	89 45 18             	mov    %eax,0x18(%rbp)
   1c9c9:	48 8d 44 71 ff       	lea    -0x1(%rcx,%rsi,2),%rax
   1c9ce:	48 f7 d9             	neg    %rcx
   1c9d1:	48 21 c1             	and    %rax,%rcx
   1c9d4:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   1c9d8:	5d                   	pop    %rbp
   1c9d9:	41 5c                	pop    %r12
   1c9db:	e9 b0 fe ff ff       	jmp    1c890 <expand>

000000000001c9e0 <_UIx86_64__mempool_alloc>:
   1c9e0:	f3 0f 1e fa          	endbr64 
   1c9e4:	41 54                	push   %r12
   1c9e6:	55                   	push   %rbp
   1c9e7:	48 89 fd             	mov    %rdi,%rbp
   1c9ea:	48 83 ec 08          	sub    $0x8,%rsp
   1c9ee:	e8 5d e3 fe ff       	call   ad50 <sgx_spin_lock>
   1c9f3:	85 c0                	test   %eax,%eax
   1c9f5:	75 46                	jne    1ca3d <_UIx86_64__mempool_alloc+0x5d>
   1c9f7:	8b 45 1c             	mov    0x1c(%rbp),%eax
   1c9fa:	3b 45 18             	cmp    0x18(%rbp),%eax
   1c9fd:	76 31                	jbe    1ca30 <_UIx86_64__mempool_alloc+0x50>
   1c9ff:	4c 8b 65 20          	mov    0x20(%rbp),%r12
   1ca03:	83 e8 01             	sub    $0x1,%eax
   1ca06:	48 89 ef             	mov    %rbp,%rdi
   1ca09:	89 45 1c             	mov    %eax,0x1c(%rbp)
   1ca0c:	49 8b 04 24          	mov    (%r12),%rax
   1ca10:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1ca14:	e8 a7 e3 fe ff       	call   adc0 <sgx_spin_unlock>
   1ca19:	85 c0                	test   %eax,%eax
   1ca1b:	75 20                	jne    1ca3d <_UIx86_64__mempool_alloc+0x5d>
   1ca1d:	48 83 c4 08          	add    $0x8,%rsp
   1ca21:	4c 89 e0             	mov    %r12,%rax
   1ca24:	5d                   	pop    %rbp
   1ca25:	41 5c                	pop    %r12
   1ca27:	c3                   	ret    
   1ca28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ca2f:	00 
   1ca30:	48 89 ef             	mov    %rbp,%rdi
   1ca33:	e8 58 fe ff ff       	call   1c890 <expand>
   1ca38:	8b 45 1c             	mov    0x1c(%rbp),%eax
   1ca3b:	eb c2                	jmp    1c9ff <_UIx86_64__mempool_alloc+0x1f>
   1ca3d:	e8 52 3d 00 00       	call   20794 <abort>
   1ca42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ca49:	00 00 00 
   1ca4c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ca50 <_UIx86_64__mempool_free>:
   1ca50:	f3 0f 1e fa          	endbr64 
   1ca54:	55                   	push   %rbp
   1ca55:	48 89 fd             	mov    %rdi,%rbp
   1ca58:	53                   	push   %rbx
   1ca59:	48 89 f3             	mov    %rsi,%rbx
   1ca5c:	48 83 ec 08          	sub    $0x8,%rsp
   1ca60:	e8 eb e2 fe ff       	call   ad50 <sgx_spin_lock>
   1ca65:	85 c0                	test   %eax,%eax
   1ca67:	75 22                	jne    1ca8b <_UIx86_64__mempool_free+0x3b>
   1ca69:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1ca6d:	48 89 ef             	mov    %rbp,%rdi
   1ca70:	48 89 03             	mov    %rax,(%rbx)
   1ca73:	83 45 1c 01          	addl   $0x1,0x1c(%rbp)
   1ca77:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
   1ca7b:	e8 40 e3 fe ff       	call   adc0 <sgx_spin_unlock>
   1ca80:	85 c0                	test   %eax,%eax
   1ca82:	75 07                	jne    1ca8b <_UIx86_64__mempool_free+0x3b>
   1ca84:	48 83 c4 08          	add    $0x8,%rsp
   1ca88:	5b                   	pop    %rbx
   1ca89:	5d                   	pop    %rbp
   1ca8a:	c3                   	ret    
   1ca8b:	e8 04 3d 00 00       	call   20794 <abort>

000000000001ca90 <_Ux86_64_is_fpreg>:
   1ca90:	f3 0f 1e fa          	endbr64 
   1ca94:	31 c0                	xor    %eax,%eax
   1ca96:	c3                   	ret    
   1ca97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ca9e:	00 00 

000000000001caa0 <_ULx86_64_fetch_frame>:
   1caa0:	f3 0f 1e fa          	endbr64 
   1caa4:	31 c0                	xor    %eax,%eax
   1caa6:	f6 87 50 01 00 00 04 	testb  $0x4,0x150(%rdi)
   1caad:	74 16                	je     1cac5 <_ULx86_64_fetch_frame+0x25>
   1caaf:	48 8b 97 90 01 00 00 	mov    0x190(%rdi),%rdx
   1cab6:	48 85 d2             	test   %rdx,%rdx
   1cab9:	74 0a                	je     1cac5 <_ULx86_64_fetch_frame+0x25>
   1cabb:	0f b6 42 46          	movzbl 0x46(%rdx),%eax
   1cabf:	c0 e8 02             	shr    $0x2,%al
   1cac2:	83 e0 01             	and    $0x1,%eax
   1cac5:	89 87 b8 01 00 00    	mov    %eax,0x1b8(%rdi)
   1cacb:	c3                   	ret    
   1cacc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cad0 <_ULx86_64_cache_frame>:
   1cad0:	f3 0f 1e fa          	endbr64 
   1cad4:	8b 87 b8 01 00 00    	mov    0x1b8(%rdi),%eax
   1cada:	c3                   	ret    
   1cadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001cae0 <_ULx86_64_reuse_frame>:
   1cae0:	f3 0f 1e fa          	endbr64 
   1cae4:	89 b7 b8 01 00 00    	mov    %esi,0x1b8(%rdi)
   1caea:	83 fe 01             	cmp    $0x1,%esi
   1caed:	74 01                	je     1caf0 <_ULx86_64_reuse_frame+0x10>
   1caef:	c3                   	ret    
   1caf0:	48 b8 18 00 00 00 fc 	movabs $0xfffffffc00000018,%rax
   1caf7:	ff ff ff 
   1cafa:	48 23 87 b0 01 00 00 	and    0x1b0(%rdi),%rax
   1cb01:	48 83 c8 07          	or     $0x7,%rax
   1cb05:	48 89 87 b0 01 00 00 	mov    %rax,0x1b0(%rdi)
   1cb0c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1cb10:	48 89 87 c0 01 00 00 	mov    %rax,0x1c0(%rdi)
   1cb17:	c3                   	ret    
   1cb18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cb1f:	00 

000000000001cb20 <_ULx86_64_is_signal_frame>:
   1cb20:	f3 0f 1e fa          	endbr64 
   1cb24:	8b 97 b8 01 00 00    	mov    0x1b8(%rdi),%edx
   1cb2a:	31 c0                	xor    %eax,%eax
   1cb2c:	85 d2                	test   %edx,%edx
   1cb2e:	0f 95 c0             	setne  %al
   1cb31:	c3                   	ret    
   1cb32:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cb39:	00 00 00 
   1cb3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cb40 <_ULx86_64_handle_signal_frame>:
   1cb40:	f3 0f 1e fa          	endbr64 
   1cb44:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1cb49:	c3                   	ret    
   1cb4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001cb50 <_ULx86_64_r_uc_addr>:
   1cb50:	f3 0f 1e fa          	endbr64 
   1cb54:	83 fe 10             	cmp    $0x10,%esi
   1cb57:	0f 87 f5 56 fe ff    	ja     2252 <_ULx86_64_r_uc_addr.cold>
   1cb5d:	48 8d 15 bc 59 00 00 	lea    0x59bc(%rip),%rdx        # 22520 <_ZTSSt12out_of_range+0x20>
   1cb64:	89 f6                	mov    %esi,%esi
   1cb66:	48 63 04 b2          	movslq (%rdx,%rsi,4),%rax
   1cb6a:	48 01 d0             	add    %rdx,%rax
   1cb6d:	3e ff e0             	notrack jmp *%rax
   1cb70:	48 8d 47 60          	lea    0x60(%rdi),%rax
   1cb74:	c3                   	ret    
   1cb75:	0f 1f 00             	nopl   (%rax)
   1cb78:	48 8d 87 a8 00 00 00 	lea    0xa8(%rdi),%rax
   1cb7f:	c3                   	ret    
   1cb80:	48 8d 87 90 00 00 00 	lea    0x90(%rdi),%rax
   1cb87:	c3                   	ret    
   1cb88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cb8f:	00 
   1cb90:	48 8d 87 88 00 00 00 	lea    0x88(%rdi),%rax
   1cb97:	c3                   	ret    
   1cb98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cb9f:	00 
   1cba0:	48 8d 87 98 00 00 00 	lea    0x98(%rdi),%rax
   1cba7:	c3                   	ret    
   1cba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cbaf:	00 
   1cbb0:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   1cbb7:	c3                   	ret    
   1cbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cbbf:	00 
   1cbc0:	48 8d 47 70          	lea    0x70(%rdi),%rax
   1cbc4:	c3                   	ret    
   1cbc5:	0f 1f 00             	nopl   (%rax)
   1cbc8:	48 8d 47 68          	lea    0x68(%rdi),%rax
   1cbcc:	c3                   	ret    
   1cbcd:	0f 1f 00             	nopl   (%rax)
   1cbd0:	48 8d 47 78          	lea    0x78(%rdi),%rax
   1cbd4:	c3                   	ret    
   1cbd5:	0f 1f 00             	nopl   (%rax)
   1cbd8:	48 8d 87 a0 00 00 00 	lea    0xa0(%rdi),%rax
   1cbdf:	c3                   	ret    
   1cbe0:	48 8d 47 28          	lea    0x28(%rdi),%rax
   1cbe4:	c3                   	ret    
   1cbe5:	0f 1f 00             	nopl   (%rax)
   1cbe8:	48 8d 47 30          	lea    0x30(%rdi),%rax
   1cbec:	c3                   	ret    
   1cbed:	0f 1f 00             	nopl   (%rax)
   1cbf0:	48 8d 47 38          	lea    0x38(%rdi),%rax
   1cbf4:	c3                   	ret    
   1cbf5:	0f 1f 00             	nopl   (%rax)
   1cbf8:	48 8d 47 40          	lea    0x40(%rdi),%rax
   1cbfc:	c3                   	ret    
   1cbfd:	0f 1f 00             	nopl   (%rax)
   1cc00:	48 8d 47 48          	lea    0x48(%rdi),%rax
   1cc04:	c3                   	ret    
   1cc05:	0f 1f 00             	nopl   (%rax)
   1cc08:	48 8d 47 50          	lea    0x50(%rdi),%rax
   1cc0c:	c3                   	ret    
   1cc0d:	0f 1f 00             	nopl   (%rax)
   1cc10:	48 8d 47 58          	lea    0x58(%rdi),%rax
   1cc14:	c3                   	ret    
   1cc15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cc1c:	00 00 00 
   1cc1f:	90                   	nop

000000000001cc20 <_ULx86_64_sigreturn>:
   1cc20:	f3 0f 1e fa          	endbr64 
   1cc24:	50                   	push   %rax
   1cc25:	58                   	pop    %rax
   1cc26:	48 83 ec 08          	sub    $0x8,%rsp
   1cc2a:	48 8b b7 d0 01 00 00 	mov    0x1d0(%rdi),%rsi
   1cc31:	48 8b 8f c0 01 00 00 	mov    0x1c0(%rdi),%rcx
   1cc38:	f3 0f 6f 46 28       	movdqu 0x28(%rsi),%xmm0
   1cc3d:	0f 11 41 28          	movups %xmm0,0x28(%rcx)
   1cc41:	f3 0f 6f 4e 38       	movdqu 0x38(%rsi),%xmm1
   1cc46:	0f 11 49 38          	movups %xmm1,0x38(%rcx)
   1cc4a:	f3 0f 6f 56 48       	movdqu 0x48(%rsi),%xmm2
   1cc4f:	0f 11 51 48          	movups %xmm2,0x48(%rcx)
   1cc53:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   1cc58:	0f 11 59 58          	movups %xmm3,0x58(%rcx)
   1cc5c:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   1cc61:	0f 11 61 68          	movups %xmm4,0x68(%rcx)
   1cc65:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   1cc6a:	0f 11 69 78          	movups %xmm5,0x78(%rcx)
   1cc6e:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   1cc75:	00 
   1cc76:	0f 11 b1 88 00 00 00 	movups %xmm6,0x88(%rcx)
   1cc7d:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   1cc84:	00 
   1cc85:	0f 11 b9 98 00 00 00 	movups %xmm7,0x98(%rcx)
   1cc8c:	48 8b 96 a8 00 00 00 	mov    0xa8(%rsi),%rdx
   1cc93:	48 89 91 a8 00 00 00 	mov    %rdx,0xa8(%rcx)
   1cc9a:	48 89 cc             	mov    %rcx,%rsp
   1cc9d:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
   1cca4:	0f 05                	syscall 
   1cca6:	e8 e9 3a 00 00       	call   20794 <abort>
   1ccab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ccb0 <_ULx86_64_Ifind_dynamic_proc_info>:
   1ccb0:	f3 0f 1e fa          	endbr64 
   1ccb4:	48 39 3d c5 d5 00 00 	cmp    %rdi,0xd5c5(%rip)        # 2a280 <_ULx86_64_local_addr_space>
   1ccbb:	75 73                	jne    1cd30 <_ULx86_64_Ifind_dynamic_proc_info+0x80>
   1ccbd:	41 56                	push   %r14
   1ccbf:	4d 89 c6             	mov    %r8,%r14
   1ccc2:	41 55                	push   %r13
   1ccc4:	49 89 d5             	mov    %rdx,%r13
   1ccc7:	41 54                	push   %r12
   1ccc9:	49 89 fc             	mov    %rdi,%r12
   1cccc:	55                   	push   %rbp
   1cccd:	48 89 f5             	mov    %rsi,%rbp
   1ccd0:	53                   	push   %rbx
   1ccd1:	89 cb                	mov    %ecx,%ebx
   1ccd3:	e8 08 25 00 00       	call   1f1e0 <_U_dyn_info_list_addr>
   1ccd8:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1ccdc:	48 85 c9             	test   %rcx,%rcx
   1ccdf:	74 1b                	je     1ccfc <_ULx86_64_Ifind_dynamic_proc_info+0x4c>
   1cce1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cce8:	48 3b 69 10          	cmp    0x10(%rcx),%rbp
   1ccec:	72 06                	jb     1ccf4 <_ULx86_64_Ifind_dynamic_proc_info+0x44>
   1ccee:	48 3b 69 18          	cmp    0x18(%rcx),%rbp
   1ccf2:	72 1c                	jb     1cd10 <_ULx86_64_Ifind_dynamic_proc_info+0x60>
   1ccf4:	48 8b 09             	mov    (%rcx),%rcx
   1ccf7:	48 85 c9             	test   %rcx,%rcx
   1ccfa:	75 ec                	jne    1cce8 <_ULx86_64_Ifind_dynamic_proc_info+0x38>
   1ccfc:	5b                   	pop    %rbx
   1ccfd:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1cd02:	5d                   	pop    %rbp
   1cd03:	41 5c                	pop    %r12
   1cd05:	41 5d                	pop    %r13
   1cd07:	41 5e                	pop    %r14
   1cd09:	c3                   	ret    
   1cd0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1cd10:	4d 89 f1             	mov    %r14,%r9
   1cd13:	41 89 d8             	mov    %ebx,%r8d
   1cd16:	4c 89 ea             	mov    %r13,%rdx
   1cd19:	5b                   	pop    %rbx
   1cd1a:	48 89 ee             	mov    %rbp,%rsi
   1cd1d:	4c 89 e7             	mov    %r12,%rdi
   1cd20:	5d                   	pop    %rbp
   1cd21:	41 5c                	pop    %r12
   1cd23:	41 5d                	pop    %r13
   1cd25:	41 5e                	pop    %r14
   1cd27:	e9 c4 24 00 00       	jmp    1f1f0 <_ULx86_64_Iextract_dynamic_proc_info>
   1cd2c:	0f 1f 40 00          	nopl   0x0(%rax)
   1cd30:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1cd35:	c3                   	ret    
   1cd36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cd3d:	00 00 00 

000000000001cd40 <_Ux86_64_get_accessors>:
   1cd40:	f3 0f 1e fa          	endbr64 
   1cd44:	8b 05 1e cd 01 00    	mov    0x1cd1e(%rip),%eax        # 39a68 <_ULx86_64_init_done>
   1cd4a:	41 54                	push   %r12
   1cd4c:	49 89 fc             	mov    %rdi,%r12
   1cd4f:	85 c0                	test   %eax,%eax
   1cd51:	74 0d                	je     1cd60 <_Ux86_64_get_accessors+0x20>
   1cd53:	4c 89 e0             	mov    %r12,%rax
   1cd56:	41 5c                	pop    %r12
   1cd58:	c3                   	ret    
   1cd59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cd60:	e8 2b 05 00 00       	call   1d290 <_ULx86_64_init>
   1cd65:	4c 89 e0             	mov    %r12,%rax
   1cd68:	41 5c                	pop    %r12
   1cd6a:	c3                   	ret    
   1cd6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001cd70 <_ULx86_64_Iput_dynamic_unwind_info>:
   1cd70:	f3 0f 1e fa          	endbr64 
   1cd74:	8b 46 30             	mov    0x30(%rsi),%eax
   1cd77:	83 e8 01             	sub    $0x1,%eax
   1cd7a:	83 f8 01             	cmp    $0x1,%eax
   1cd7d:	76 01                	jbe    1cd80 <_ULx86_64_Iput_dynamic_unwind_info+0x10>
   1cd7f:	c3                   	ret    
   1cd80:	e9 3b 22 00 00       	jmp    1efc0 <_ULx86_64_dwarf_put_unwind_info>
   1cd85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cd8c:	00 00 00 
   1cd8f:	90                   	nop

000000000001cd90 <_ULx86_64_get_reg>:
   1cd90:	f3 0f 1e fa          	endbr64 
   1cd94:	83 fe 10             	cmp    $0x10,%esi
   1cd97:	74 07                	je     1cda0 <_ULx86_64_get_reg+0x10>
   1cd99:	31 c9                	xor    %ecx,%ecx
   1cd9b:	e9 d0 08 00 00       	jmp    1d670 <_ULx86_64_access_reg>
   1cda0:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1cda4:	48 89 02             	mov    %rax,(%rdx)
   1cda7:	31 c0                	xor    %eax,%eax
   1cda9:	c3                   	ret    
   1cdaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001cdb0 <_Unwind_Backtrace>:
   1cdb0:	f3 0f 1e fa          	endbr64 
   1cdb4:	41 55                	push   %r13
   1cdb6:	41 54                	push   %r12
   1cdb8:	49 89 f4             	mov    %rsi,%r12
   1cdbb:	55                   	push   %rbp
   1cdbc:	48 89 fd             	mov    %rdi,%rbp
   1cdbf:	53                   	push   %rbx
   1cdc0:	48 81 ec e8 07 00 00 	sub    $0x7e8,%rsp
   1cdc7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cdce:	00 00 
   1cdd0:	48 89 84 24 d8 07 00 	mov    %rax,0x7d8(%rsp)
   1cdd7:	00 
   1cdd8:	31 c0                	xor    %eax,%eax
   1cdda:	49 89 e5             	mov    %rsp,%r13
   1cddd:	c7 84 24 c8 07 00 00 	movl   $0x0,0x7c8(%rsp)
   1cde4:	00 00 00 00 
   1cde8:	4c 89 ef             	mov    %r13,%rdi
   1cdeb:	e8 89 c1 ff ff       	call   18f79 <_Ux86_64_getcontext>
   1cdf0:	85 c0                	test   %eax,%eax
   1cdf2:	78 1c                	js     1ce10 <_Unwind_Backtrace+0x60>
   1cdf4:	48 8d 9c 24 d0 03 00 	lea    0x3d0(%rsp),%rbx
   1cdfb:	00 
   1cdfc:	4c 89 ee             	mov    %r13,%rsi
   1cdff:	48 89 df             	mov    %rbx,%rdi
   1ce02:	e8 69 bb ff ff       	call   18970 <_ULx86_64_init_local>
   1ce07:	85 c0                	test   %eax,%eax
   1ce09:	79 41                	jns    1ce4c <_Unwind_Backtrace+0x9c>
   1ce0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ce10:	b8 03 00 00 00       	mov    $0x3,%eax
   1ce15:	48 8b 94 24 d8 07 00 	mov    0x7d8(%rsp),%rdx
   1ce1c:	00 
   1ce1d:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1ce24:	00 00 
   1ce26:	75 39                	jne    1ce61 <_Unwind_Backtrace+0xb1>
   1ce28:	48 81 c4 e8 07 00 00 	add    $0x7e8,%rsp
   1ce2f:	5b                   	pop    %rbx
   1ce30:	5d                   	pop    %rbp
   1ce31:	41 5c                	pop    %r12
   1ce33:	41 5d                	pop    %r13
   1ce35:	c3                   	ret    
   1ce36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ce3d:	00 00 00 
   1ce40:	4c 89 e6             	mov    %r12,%rsi
   1ce43:	48 89 df             	mov    %rbx,%rdi
   1ce46:	ff d5                	call   *%rbp
   1ce48:	85 c0                	test   %eax,%eax
   1ce4a:	75 c4                	jne    1ce10 <_Unwind_Backtrace+0x60>
   1ce4c:	48 89 df             	mov    %rbx,%rdi
   1ce4f:	e8 6c bd ff ff       	call   18bc0 <_ULx86_64_step>
   1ce54:	85 c0                	test   %eax,%eax
   1ce56:	7f e8                	jg     1ce40 <_Unwind_Backtrace+0x90>
   1ce58:	b8 05 00 00 00       	mov    $0x5,%eax
   1ce5d:	74 b6                	je     1ce15 <_Unwind_Backtrace+0x65>
   1ce5f:	eb af                	jmp    1ce10 <_Unwind_Backtrace+0x60>
   1ce61:	e8 ea 1c ff ff       	call   eb50 <__stack_chk_fail>
   1ce66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ce6d:	00 00 00 

000000000001ce70 <_Unwind_GetDataRelBase>:
   1ce70:	f3 0f 1e fa          	endbr64 
   1ce74:	48 83 ec 58          	sub    $0x58,%rsp
   1ce78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ce7f:	00 00 
   1ce81:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1ce86:	31 c0                	xor    %eax,%eax
   1ce88:	48 89 e6             	mov    %rsp,%rsi
   1ce8b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1ce92:	00 00 
   1ce94:	e8 e7 ba ff ff       	call   18980 <_ULx86_64_get_proc_info>
   1ce99:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1ce9e:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1cea3:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1ceaa:	00 00 
   1ceac:	75 05                	jne    1ceb3 <_Unwind_GetDataRelBase+0x43>
   1ceae:	48 83 c4 58          	add    $0x58,%rsp
   1ceb2:	c3                   	ret    
   1ceb3:	e8 98 1c ff ff       	call   eb50 <__stack_chk_fail>
   1ceb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cebf:	00 

000000000001cec0 <_Unwind_GetIP>:
   1cec0:	f3 0f 1e fa          	endbr64 
   1cec4:	48 83 ec 18          	sub    $0x18,%rsp
   1cec8:	be 10 00 00 00       	mov    $0x10,%esi
   1cecd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ced4:	00 00 
   1ced6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cedb:	31 c0                	xor    %eax,%eax
   1cedd:	48 89 e2             	mov    %rsp,%rdx
   1cee0:	e8 ab fe ff ff       	call   1cd90 <_ULx86_64_get_reg>
   1cee5:	48 8b 04 24          	mov    (%rsp),%rax
   1cee9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1ceee:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1cef5:	00 00 
   1cef7:	75 05                	jne    1cefe <_Unwind_GetIP+0x3e>
   1cef9:	48 83 c4 18          	add    $0x18,%rsp
   1cefd:	c3                   	ret    
   1cefe:	e8 4d 1c ff ff       	call   eb50 <__stack_chk_fail>
   1cf03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cf0a:	00 00 00 
   1cf0d:	0f 1f 00             	nopl   (%rax)

000000000001cf10 <_Unwind_GetLanguageSpecificData>:
   1cf10:	f3 0f 1e fa          	endbr64 
   1cf14:	48 83 ec 58          	sub    $0x58,%rsp
   1cf18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cf1f:	00 00 
   1cf21:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1cf26:	31 c0                	xor    %eax,%eax
   1cf28:	48 89 e6             	mov    %rsp,%rsi
   1cf2b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1cf32:	00 00 
   1cf34:	e8 47 ba ff ff       	call   18980 <_ULx86_64_get_proc_info>
   1cf39:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1cf3e:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1cf43:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1cf4a:	00 00 
   1cf4c:	75 05                	jne    1cf53 <_Unwind_GetLanguageSpecificData+0x43>
   1cf4e:	48 83 c4 58          	add    $0x58,%rsp
   1cf52:	c3                   	ret    
   1cf53:	e8 f8 1b ff ff       	call   eb50 <__stack_chk_fail>
   1cf58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf5f:	00 

000000000001cf60 <_Unwind_GetRegionStart>:
   1cf60:	f3 0f 1e fa          	endbr64 
   1cf64:	48 83 ec 58          	sub    $0x58,%rsp
   1cf68:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cf6f:	00 00 
   1cf71:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1cf76:	31 c0                	xor    %eax,%eax
   1cf78:	48 89 e6             	mov    %rsp,%rsi
   1cf7b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1cf82:	00 
   1cf83:	e8 f8 b9 ff ff       	call   18980 <_ULx86_64_get_proc_info>
   1cf88:	48 8b 04 24          	mov    (%rsp),%rax
   1cf8c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1cf91:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1cf98:	00 00 
   1cf9a:	75 05                	jne    1cfa1 <_Unwind_GetRegionStart+0x41>
   1cf9c:	48 83 c4 58          	add    $0x58,%rsp
   1cfa0:	c3                   	ret    
   1cfa1:	e8 aa 1b ff ff       	call   eb50 <__stack_chk_fail>
   1cfa6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cfad:	00 00 00 

000000000001cfb0 <_Unwind_GetTextRelBase>:
   1cfb0:	f3 0f 1e fa          	endbr64 
   1cfb4:	31 c0                	xor    %eax,%eax
   1cfb6:	c3                   	ret    
   1cfb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cfbe:	00 00 

000000000001cfc0 <_Unwind_RaiseException>:
   1cfc0:	f3 0f 1e fa          	endbr64 
   1cfc4:	41 57                	push   %r15
   1cfc6:	41 56                	push   %r14
   1cfc8:	41 55                	push   %r13
   1cfca:	41 54                	push   %r12
   1cfcc:	55                   	push   %rbp
   1cfcd:	53                   	push   %rbx
   1cfce:	48 89 fb             	mov    %rdi,%rbx
   1cfd1:	48 81 ec a8 08 00 00 	sub    $0x8a8,%rsp
   1cfd8:	4c 8b 37             	mov    (%rdi),%r14
   1cfdb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1cfe2:	00 00 
   1cfe4:	48 89 84 24 98 08 00 	mov    %rax,0x898(%rsp)
   1cfeb:	00 
   1cfec:	31 c0                	xor    %eax,%eax
   1cfee:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   1cff5:	00 
   1cff6:	c7 84 24 88 08 00 00 	movl   $0x0,0x888(%rsp)
   1cffd:	00 00 00 00 
   1d001:	4c 89 ef             	mov    %r13,%rdi
   1d004:	e8 70 bf ff ff       	call   18f79 <_Ux86_64_getcontext>
   1d009:	85 c0                	test   %eax,%eax
   1d00b:	78 53                	js     1d060 <_Unwind_RaiseException+0xa0>
   1d00d:	48 8d ac 24 90 04 00 	lea    0x490(%rsp),%rbp
   1d014:	00 
   1d015:	4c 89 ee             	mov    %r13,%rsi
   1d018:	48 89 ef             	mov    %rbp,%rdi
   1d01b:	e8 50 b9 ff ff       	call   18970 <_ULx86_64_init_local>
   1d020:	85 c0                	test   %eax,%eax
   1d022:	78 3c                	js     1d060 <_Unwind_RaiseException+0xa0>
   1d024:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1d029:	eb 1e                	jmp    1d049 <_Unwind_RaiseException+0x89>
   1d02b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d030:	4c 89 e6             	mov    %r12,%rsi
   1d033:	48 89 ef             	mov    %rbp,%rdi
   1d036:	e8 45 b9 ff ff       	call   18980 <_ULx86_64_get_proc_info>
   1d03b:	85 c0                	test   %eax,%eax
   1d03d:	78 21                	js     1d060 <_Unwind_RaiseException+0xa0>
   1d03f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1d044:	48 85 c0             	test   %rax,%rax
   1d047:	75 47                	jne    1d090 <_Unwind_RaiseException+0xd0>
   1d049:	48 89 ef             	mov    %rbp,%rdi
   1d04c:	e8 6f bb ff ff       	call   18bc0 <_ULx86_64_step>
   1d051:	85 c0                	test   %eax,%eax
   1d053:	7f db                	jg     1d030 <_Unwind_RaiseException+0x70>
   1d055:	b8 05 00 00 00       	mov    $0x5,%eax
   1d05a:	74 09                	je     1d065 <_Unwind_RaiseException+0xa5>
   1d05c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d060:	b8 03 00 00 00       	mov    $0x3,%eax
   1d065:	48 8b 8c 24 98 08 00 	mov    0x898(%rsp),%rcx
   1d06c:	00 
   1d06d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1d074:	00 00 
   1d076:	0f 85 2f 01 00 00    	jne    1d1ab <_Unwind_RaiseException+0x1eb>
   1d07c:	48 81 c4 a8 08 00 00 	add    $0x8a8,%rsp
   1d083:	5b                   	pop    %rbx
   1d084:	5d                   	pop    %rbp
   1d085:	41 5c                	pop    %r12
   1d087:	41 5d                	pop    %r13
   1d089:	41 5e                	pop    %r14
   1d08b:	41 5f                	pop    %r15
   1d08d:	c3                   	ret    
   1d08e:	66 90                	xchg   %ax,%ax
   1d090:	49 89 e8             	mov    %rbp,%r8
   1d093:	48 89 d9             	mov    %rbx,%rcx
   1d096:	4c 89 f2             	mov    %r14,%rdx
   1d099:	be 01 00 00 00       	mov    $0x1,%esi
   1d09e:	bf 01 00 00 00       	mov    $0x1,%edi
   1d0a3:	ff d0                	call   *%rax
   1d0a5:	83 f8 08             	cmp    $0x8,%eax
   1d0a8:	74 9f                	je     1d049 <_Unwind_RaiseException+0x89>
   1d0aa:	83 f8 06             	cmp    $0x6,%eax
   1d0ad:	75 b1                	jne    1d060 <_Unwind_RaiseException+0xa0>
   1d0af:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1d0b4:	be 10 00 00 00       	mov    $0x10,%esi
   1d0b9:	48 89 ef             	mov    %rbp,%rdi
   1d0bc:	e8 cf fc ff ff       	call   1cd90 <_ULx86_64_get_reg>
   1d0c1:	85 c0                	test   %eax,%eax
   1d0c3:	78 9b                	js     1d060 <_Unwind_RaiseException+0xa0>
   1d0c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1d0ca:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1d0d1:	00 
   1d0d2:	4c 89 ee             	mov    %r13,%rsi
   1d0d5:	48 89 ef             	mov    %rbp,%rdi
   1d0d8:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1d0dc:	e8 8f b8 ff ff       	call   18970 <_ULx86_64_init_local>
   1d0e1:	85 c0                	test   %eax,%eax
   1d0e3:	0f 88 77 ff ff ff    	js     1d060 <_Unwind_RaiseException+0xa0>
   1d0e9:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1d0ed:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1d0f1:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1d0f6:	4c 8b 3b             	mov    (%rbx),%r15
   1d0f9:	49 83 fd 01          	cmp    $0x1,%r13
   1d0fd:	48 89 04 24          	mov    %rax,(%rsp)
   1d101:	45 19 e4             	sbb    %r12d,%r12d
   1d104:	41 83 e4 f8          	and    $0xfffffff8,%r12d
   1d108:	41 83 c4 0a          	add    $0xa,%r12d
   1d10c:	eb 48                	jmp    1d156 <_Unwind_RaiseException+0x196>
   1d10e:	4d 85 ed             	test   %r13,%r13
   1d111:	74 1c                	je     1d12f <_Unwind_RaiseException+0x16f>
   1d113:	4c 8b 0c 24          	mov    (%rsp),%r9
   1d117:	49 89 e8             	mov    %rbp,%r8
   1d11a:	48 89 d9             	mov    %rbx,%rcx
   1d11d:	4c 89 fa             	mov    %r15,%rdx
   1d120:	44 89 e6             	mov    %r12d,%esi
   1d123:	bf 01 00 00 00       	mov    $0x1,%edi
   1d128:	41 ff d5             	call   *%r13
   1d12b:	85 c0                	test   %eax,%eax
   1d12d:	75 49                	jne    1d178 <_Unwind_RaiseException+0x1b8>
   1d12f:	8b 84 24 88 08 00 00 	mov    0x888(%rsp),%eax
   1d136:	85 c0                	test   %eax,%eax
   1d138:	75 3e                	jne    1d178 <_Unwind_RaiseException+0x1b8>
   1d13a:	4c 89 f6             	mov    %r14,%rsi
   1d13d:	48 89 ef             	mov    %rbp,%rdi
   1d140:	e8 3b b8 ff ff       	call   18980 <_ULx86_64_get_proc_info>
   1d145:	85 c0                	test   %eax,%eax
   1d147:	78 2f                	js     1d178 <_Unwind_RaiseException+0x1b8>
   1d149:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   1d150:	00 
   1d151:	4d 85 c9             	test   %r9,%r9
   1d154:	75 2c                	jne    1d182 <_Unwind_RaiseException+0x1c2>
   1d156:	48 89 ef             	mov    %rbp,%rdi
   1d159:	e8 62 ba ff ff       	call   18bc0 <_ULx86_64_step>
   1d15e:	85 c0                	test   %eax,%eax
   1d160:	7f ac                	jg     1d10e <_Unwind_RaiseException+0x14e>
   1d162:	75 14                	jne    1d178 <_Unwind_RaiseException+0x1b8>
   1d164:	c7 84 24 88 08 00 00 	movl   $0x1,0x888(%rsp)
   1d16b:	01 00 00 00 
   1d16f:	41 83 cc 10          	or     $0x10,%r12d
   1d173:	4d 85 ed             	test   %r13,%r13
   1d176:	75 9b                	jne    1d113 <_Unwind_RaiseException+0x153>
   1d178:	b8 02 00 00 00       	mov    $0x2,%eax
   1d17d:	e9 e3 fe ff ff       	jmp    1d065 <_Unwind_RaiseException+0xa5>
   1d182:	4d 85 ed             	test   %r13,%r13
   1d185:	74 3b                	je     1d1c2 <_Unwind_RaiseException+0x202>
   1d187:	49 89 e8             	mov    %rbp,%r8
   1d18a:	48 89 d9             	mov    %rbx,%rcx
   1d18d:	4c 89 fa             	mov    %r15,%rdx
   1d190:	44 89 e6             	mov    %r12d,%esi
   1d193:	bf 01 00 00 00       	mov    $0x1,%edi
   1d198:	41 ff d1             	call   *%r9
   1d19b:	83 f8 08             	cmp    $0x8,%eax
   1d19e:	75 10                	jne    1d1b0 <_Unwind_RaiseException+0x1f0>
   1d1a0:	41 f6 c4 04          	test   $0x4,%r12b
   1d1a4:	74 b0                	je     1d156 <_Unwind_RaiseException+0x196>
   1d1a6:	e8 e9 35 00 00       	call   20794 <abort>
   1d1ab:	e8 a0 19 ff ff       	call   eb50 <__stack_chk_fail>
   1d1b0:	83 f8 07             	cmp    $0x7,%eax
   1d1b3:	75 c3                	jne    1d178 <_Unwind_RaiseException+0x1b8>
   1d1b5:	48 89 ef             	mov    %rbp,%rdi
   1d1b8:	e8 b3 b8 ff ff       	call   18a70 <_ULx86_64_resume>
   1d1bd:	e8 d2 35 00 00       	call   20794 <abort>
   1d1c2:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1d1c7:	be 10 00 00 00       	mov    $0x10,%esi
   1d1cc:	48 89 ef             	mov    %rbp,%rdi
   1d1cf:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1d1d4:	e8 b7 fb ff ff       	call   1cd90 <_ULx86_64_get_reg>
   1d1d9:	85 c0                	test   %eax,%eax
   1d1db:	78 9b                	js     1d178 <_Unwind_RaiseException+0x1b8>
   1d1dd:	48 8b 04 24          	mov    (%rsp),%rax
   1d1e1:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   1d1e6:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1d1eb:	75 9a                	jne    1d187 <_Unwind_RaiseException+0x1c7>
   1d1ed:	41 83 cc 04          	or     $0x4,%r12d
   1d1f1:	eb 94                	jmp    1d187 <_Unwind_RaiseException+0x1c7>
   1d1f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d1fa:	00 00 00 
   1d1fd:	0f 1f 00             	nopl   (%rax)

000000000001d200 <_Unwind_SetGR>:
   1d200:	f3 0f 1e fa          	endbr64 
   1d204:	e9 67 20 00 00       	jmp    1f270 <_ULx86_64_set_reg>
   1d209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d210 <_Unwind_SetIP>:
   1d210:	f3 0f 1e fa          	endbr64 
   1d214:	48 89 f2             	mov    %rsi,%rdx
   1d217:	be 10 00 00 00       	mov    $0x10,%esi
   1d21c:	e9 4f 20 00 00       	jmp    1f270 <_ULx86_64_set_reg>

000000000001d221 <_Ux86_64_setcontext>:
   1d221:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
   1d228:	41 d9 20             	fldenv (%r8)
   1d22b:	41 0f ae 50 18       	ldmxcsr 0x18(%r8)
   1d230:	4c 8b 47 28          	mov    0x28(%rdi),%r8
   1d234:	4c 8b 4f 30          	mov    0x30(%rdi),%r9
   1d238:	48 8b 9f 80 00 00 00 	mov    0x80(%rdi),%rbx
   1d23f:	48 8b 6f 78          	mov    0x78(%rdi),%rbp
   1d243:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   1d247:	4c 8b 6f 50          	mov    0x50(%rdi),%r13
   1d24b:	4c 8b 77 58          	mov    0x58(%rdi),%r14
   1d24f:	4c 8b 7f 60          	mov    0x60(%rdi),%r15
   1d253:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   1d257:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
   1d25e:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
   1d265:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   1d26c:	48 8b a7 a0 00 00 00 	mov    0xa0(%rdi),%rsp
   1d273:	48 8b 8f a8 00 00 00 	mov    0xa8(%rdi),%rcx
   1d27a:	51                   	push   %rcx
   1d27b:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   1d282:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
   1d286:	c3                   	ret    
   1d287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d28e:	00 00 

000000000001d290 <_ULx86_64_init>:
   1d290:	f3 0f 1e fa          	endbr64 
   1d294:	48 83 ec 08          	sub    $0x8,%rsp
   1d298:	48 8d 3d a1 5e 01 00 	lea    0x15ea1(%rip),%rdi        # 33140 <_ULx86_64_lock>
   1d29f:	e8 ac da fe ff       	call   ad50 <sgx_spin_lock>
   1d2a4:	85 c0                	test   %eax,%eax
   1d2a6:	75 3d                	jne    1d2e5 <_ULx86_64_init+0x55>
   1d2a8:	8b 05 ba c7 01 00    	mov    0x1c7ba(%rip),%eax        # 39a68 <_ULx86_64_init_done>
   1d2ae:	85 c0                	test   %eax,%eax
   1d2b0:	75 1e                	jne    1d2d0 <_ULx86_64_init+0x40>
   1d2b2:	e8 b9 1e 00 00       	call   1f170 <_UIx86_64_mi_init>
   1d2b7:	e8 44 db ff ff       	call   1ae00 <_Ux86_64_dwarf_init>
   1d2bc:	e8 bf 02 00 00       	call   1d580 <_ULx86_64_init_mem_validate>
   1d2c1:	e8 da 02 00 00       	call   1d5a0 <_ULx86_64_local_addr_space_init>
   1d2c6:	c7 05 98 c7 01 00 01 	movl   $0x1,0x1c798(%rip)        # 39a68 <_ULx86_64_init_done>
   1d2cd:	00 00 00 
   1d2d0:	48 8d 3d 69 5e 01 00 	lea    0x15e69(%rip),%rdi        # 33140 <_ULx86_64_lock>
   1d2d7:	e8 e4 da fe ff       	call   adc0 <sgx_spin_unlock>
   1d2dc:	85 c0                	test   %eax,%eax
   1d2de:	75 05                	jne    1d2e5 <_ULx86_64_init+0x55>
   1d2e0:	48 83 c4 08          	add    $0x8,%rsp
   1d2e4:	c3                   	ret    
   1d2e5:	e8 aa 34 00 00       	call   20794 <abort>
   1d2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d2f0 <put_unwind_info>:
   1d2f0:	f3 0f 1e fa          	endbr64 
   1d2f4:	c3                   	ret    
   1d2f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d2fc:	00 00 00 
   1d2ff:	90                   	nop

000000000001d300 <get_static_proc_name>:
   1d300:	f3 0f 1e fa          	endbr64 
   1d304:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d309:	c3                   	ret    
   1d30a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d310 <msync_validate>:
   1d310:	f3 0f 1e fa          	endbr64 
   1d314:	41 54                	push   %r12
   1d316:	31 c0                	xor    %eax,%eax
   1d318:	49 89 f4             	mov    %rsi,%r12
   1d31b:	55                   	push   %rbp
   1d31c:	48 89 fd             	mov    %rdi,%rbp
   1d31f:	48 83 ec 08          	sub    $0x8,%rsp
   1d323:	e8 a8 ab fe ff       	call   7ed0 <sgx_is_within_enclave>
   1d328:	85 c0                	test   %eax,%eax
   1d32a:	74 22                	je     1d34e <msync_validate+0x3e>
   1d32c:	4c 89 e6             	mov    %r12,%rsi
   1d32f:	48 89 ef             	mov    %rbp,%rdi
   1d332:	ba 01 00 00 00       	mov    $0x1,%edx
   1d337:	e8 34 1d 00 00       	call   1f070 <msync>
   1d33c:	85 c0                	test   %eax,%eax
   1d33e:	0f 95 c0             	setne  %al
   1d341:	48 83 c4 08          	add    $0x8,%rsp
   1d345:	0f b6 c0             	movzbl %al,%eax
   1d348:	5d                   	pop    %rbp
   1d349:	41 5c                	pop    %r12
   1d34b:	f7 d8                	neg    %eax
   1d34d:	c3                   	ret    
   1d34e:	e8 41 34 00 00       	call   20794 <abort>
   1d353:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d35a:	00 00 00 
   1d35d:	0f 1f 00             	nopl   (%rax)

000000000001d360 <access_fpreg>:
   1d360:	f3 0f 1e fa          	endbr64 
   1d364:	41 55                	push   %r13
   1d366:	89 f7                	mov    %esi,%edi
   1d368:	41 54                	push   %r12
   1d36a:	41 89 cc             	mov    %ecx,%r12d
   1d36d:	55                   	push   %rbp
   1d36e:	89 f5                	mov    %esi,%ebp
   1d370:	53                   	push   %rbx
   1d371:	48 89 d3             	mov    %rdx,%rbx
   1d374:	48 83 ec 08          	sub    $0x8,%rsp
   1d378:	4d 8b a8 d0 01 00 00 	mov    0x1d0(%r8),%r13
   1d37f:	e8 0c f7 ff ff       	call   1ca90 <_Ux86_64_is_fpreg>
   1d384:	85 c0                	test   %eax,%eax
   1d386:	74 40                	je     1d3c8 <access_fpreg+0x68>
   1d388:	89 ee                	mov    %ebp,%esi
   1d38a:	4c 89 ef             	mov    %r13,%rdi
   1d38d:	e8 be f7 ff ff       	call   1cb50 <_ULx86_64_r_uc_addr>
   1d392:	48 85 c0             	test   %rax,%rax
   1d395:	74 31                	je     1d3c8 <access_fpreg+0x68>
   1d397:	45 85 e4             	test   %r12d,%r12d
   1d39a:	75 14                	jne    1d3b0 <access_fpreg+0x50>
   1d39c:	db 28                	fldt   (%rax)
   1d39e:	31 c0                	xor    %eax,%eax
   1d3a0:	db 3b                	fstpt  (%rbx)
   1d3a2:	48 83 c4 08          	add    $0x8,%rsp
   1d3a6:	5b                   	pop    %rbx
   1d3a7:	5d                   	pop    %rbp
   1d3a8:	41 5c                	pop    %r12
   1d3aa:	41 5d                	pop    %r13
   1d3ac:	c3                   	ret    
   1d3ad:	0f 1f 00             	nopl   (%rax)
   1d3b0:	db 2b                	fldt   (%rbx)
   1d3b2:	db 38                	fstpt  (%rax)
   1d3b4:	48 83 c4 08          	add    $0x8,%rsp
   1d3b8:	31 c0                	xor    %eax,%eax
   1d3ba:	5b                   	pop    %rbx
   1d3bb:	5d                   	pop    %rbp
   1d3bc:	41 5c                	pop    %r12
   1d3be:	41 5d                	pop    %r13
   1d3c0:	c3                   	ret    
   1d3c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d3c8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1d3cd:	eb d3                	jmp    1d3a2 <access_fpreg+0x42>
   1d3cf:	90                   	nop

000000000001d3d0 <access_reg>:
   1d3d0:	f3 0f 1e fa          	endbr64 
   1d3d4:	41 56                	push   %r14
   1d3d6:	89 f7                	mov    %esi,%edi
   1d3d8:	41 55                	push   %r13
   1d3da:	41 89 cd             	mov    %ecx,%r13d
   1d3dd:	41 54                	push   %r12
   1d3df:	55                   	push   %rbp
   1d3e0:	89 f5                	mov    %esi,%ebp
   1d3e2:	53                   	push   %rbx
   1d3e3:	48 89 d3             	mov    %rdx,%rbx
   1d3e6:	4d 8b b0 d0 01 00 00 	mov    0x1d0(%r8),%r14
   1d3ed:	e8 9e f6 ff ff       	call   1ca90 <_Ux86_64_is_fpreg>
   1d3f2:	85 c0                	test   %eax,%eax
   1d3f4:	75 42                	jne    1d438 <access_reg+0x68>
   1d3f6:	89 ee                	mov    %ebp,%esi
   1d3f8:	4c 89 f7             	mov    %r14,%rdi
   1d3fb:	41 89 c4             	mov    %eax,%r12d
   1d3fe:	e8 4d f7 ff ff       	call   1cb50 <_ULx86_64_r_uc_addr>
   1d403:	48 85 c0             	test   %rax,%rax
   1d406:	74 30                	je     1d438 <access_reg+0x68>
   1d408:	45 85 ed             	test   %r13d,%r13d
   1d40b:	75 13                	jne    1d420 <access_reg+0x50>
   1d40d:	48 8b 00             	mov    (%rax),%rax
   1d410:	48 89 03             	mov    %rax,(%rbx)
   1d413:	5b                   	pop    %rbx
   1d414:	44 89 e0             	mov    %r12d,%eax
   1d417:	5d                   	pop    %rbp
   1d418:	41 5c                	pop    %r12
   1d41a:	41 5d                	pop    %r13
   1d41c:	41 5e                	pop    %r14
   1d41e:	c3                   	ret    
   1d41f:	90                   	nop
   1d420:	48 8b 13             	mov    (%rbx),%rdx
   1d423:	48 89 10             	mov    %rdx,(%rax)
   1d426:	44 89 e0             	mov    %r12d,%eax
   1d429:	5b                   	pop    %rbx
   1d42a:	5d                   	pop    %rbp
   1d42b:	41 5c                	pop    %r12
   1d42d:	41 5d                	pop    %r13
   1d42f:	41 5e                	pop    %r14
   1d431:	c3                   	ret    
   1d432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d438:	41 bc fd ff ff ff    	mov    $0xfffffffd,%r12d
   1d43e:	eb d3                	jmp    1d413 <access_reg+0x43>

000000000001d440 <access_mem>:
   1d440:	f3 0f 1e fa          	endbr64 
   1d444:	41 55                	push   %r13
   1d446:	41 54                	push   %r12
   1d448:	55                   	push   %rbp
   1d449:	48 89 d5             	mov    %rdx,%rbp
   1d44c:	53                   	push   %rbx
   1d44d:	48 89 f3             	mov    %rsi,%rbx
   1d450:	48 83 ec 08          	sub    $0x8,%rsp
   1d454:	85 c9                	test   %ecx,%ecx
   1d456:	75 28                	jne    1d480 <access_mem+0x40>
   1d458:	4d 85 c0             	test   %r8,%r8
   1d45b:	74 0b                	je     1d468 <access_mem+0x28>
   1d45d:	41 8b 80 c8 01 00 00 	mov    0x1c8(%r8),%eax
   1d464:	85 c0                	test   %eax,%eax
   1d466:	75 30                	jne    1d498 <access_mem+0x58>
   1d468:	48 8b 03             	mov    (%rbx),%rax
   1d46b:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1d46f:	31 c0                	xor    %eax,%eax
   1d471:	48 83 c4 08          	add    $0x8,%rsp
   1d475:	5b                   	pop    %rbx
   1d476:	5d                   	pop    %rbp
   1d477:	41 5c                	pop    %r12
   1d479:	41 5d                	pop    %r13
   1d47b:	c3                   	ret    
   1d47c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d480:	48 8b 02             	mov    (%rdx),%rax
   1d483:	48 89 06             	mov    %rax,(%rsi)
   1d486:	48 83 c4 08          	add    $0x8,%rsp
   1d48a:	31 c0                	xor    %eax,%eax
   1d48c:	5b                   	pop    %rbx
   1d48d:	5d                   	pop    %rbp
   1d48e:	41 5c                	pop    %r12
   1d490:	41 5d                	pop    %r13
   1d492:	c3                   	ret    
   1d493:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d498:	48 8d 46 07          	lea    0x7(%rsi),%rax
   1d49c:	49 89 dd             	mov    %rbx,%r13
   1d49f:	48 31 f0             	xor    %rsi,%rax
   1d4a2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1d4a8:	48 83 f8 01          	cmp    $0x1,%rax
   1d4ac:	48 19 f6             	sbb    %rsi,%rsi
   1d4af:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   1d4b6:	48 81 c6 00 20 00 00 	add    $0x2000,%rsi
   1d4bd:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
   1d4c4:	0f 84 87 00 00 00    	je     1d551 <access_mem+0x111>
   1d4ca:	4c 8d 25 8f 5c 01 00 	lea    0x15c8f(%rip),%r12        # 33160 <last_good_addr>
   1d4d1:	4c 89 e0             	mov    %r12,%rax
   1d4d4:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   1d4d9:	48 8b 10             	mov    (%rax),%rdx
   1d4dc:	48 85 d2             	test   %rdx,%rdx
   1d4df:	74 05                	je     1d4e6 <access_mem+0xa6>
   1d4e1:	49 39 d5             	cmp    %rdx,%r13
   1d4e4:	74 82                	je     1d468 <access_mem+0x28>
   1d4e6:	48 83 c0 08          	add    $0x8,%rax
   1d4ea:	48 39 c8             	cmp    %rcx,%rax
   1d4ed:	75 ea                	jne    1d4d9 <access_mem+0x99>
   1d4ef:	4c 89 ef             	mov    %r13,%rdi
   1d4f2:	ff 15 88 5c 01 00    	call   *0x15c88(%rip)        # 33180 <mem_validate_func>
   1d4f8:	83 f8 ff             	cmp    $0xffffffff,%eax
   1d4fb:	74 54                	je     1d551 <access_mem+0x111>
   1d4fd:	8b 05 41 5c 01 00    	mov    0x15c41(%rip),%eax        # 33144 <lga_victim>
   1d503:	b9 04 00 00 00       	mov    $0x4,%ecx
   1d508:	48 63 d0             	movslq %eax,%rdx
   1d50b:	49 83 3c d4 00       	cmpq   $0x0,(%r12,%rdx,8)
   1d510:	74 36                	je     1d548 <access_mem+0x108>
   1d512:	83 c0 01             	add    $0x1,%eax
   1d515:	99                   	cltd   
   1d516:	c1 ea 1e             	shr    $0x1e,%edx
   1d519:	01 d0                	add    %edx,%eax
   1d51b:	83 e0 03             	and    $0x3,%eax
   1d51e:	29 d0                	sub    %edx,%eax
   1d520:	83 e9 01             	sub    $0x1,%ecx
   1d523:	75 e3                	jne    1d508 <access_mem+0xc8>
   1d525:	48 63 d0             	movslq %eax,%rdx
   1d528:	83 c0 01             	add    $0x1,%eax
   1d52b:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   1d52f:	99                   	cltd   
   1d530:	c1 ea 1e             	shr    $0x1e,%edx
   1d533:	01 d0                	add    %edx,%eax
   1d535:	83 e0 03             	and    $0x3,%eax
   1d538:	29 d0                	sub    %edx,%eax
   1d53a:	89 05 04 5c 01 00    	mov    %eax,0x15c04(%rip)        # 33144 <lga_victim>
   1d540:	e9 23 ff ff ff       	jmp    1d468 <access_mem+0x28>
   1d545:	0f 1f 00             	nopl   (%rax)
   1d548:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   1d54c:	e9 17 ff ff ff       	jmp    1d468 <access_mem+0x28>
   1d551:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d556:	e9 16 ff ff ff       	jmp    1d471 <access_mem+0x31>
   1d55b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d560 <get_dyn_info_list_addr>:
   1d560:	f3 0f 1e fa          	endbr64 
   1d564:	53                   	push   %rbx
   1d565:	48 89 f3             	mov    %rsi,%rbx
   1d568:	e8 73 1c 00 00       	call   1f1e0 <_U_dyn_info_list_addr>
   1d56d:	48 89 03             	mov    %rax,(%rbx)
   1d570:	31 c0                	xor    %eax,%eax
   1d572:	5b                   	pop    %rbx
   1d573:	c3                   	ret    
   1d574:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d57b:	00 00 00 
   1d57e:	66 90                	xchg   %ax,%ax

000000000001d580 <_ULx86_64_init_mem_validate>:
   1d580:	f3 0f 1e fa          	endbr64 
   1d584:	48 8d 05 85 fd ff ff 	lea    -0x27b(%rip),%rax        # 1d310 <msync_validate>
   1d58b:	48 89 05 ee 5b 01 00 	mov    %rax,0x15bee(%rip)        # 33180 <mem_validate_func>
   1d592:	c3                   	ret    
   1d593:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d59a:	00 00 00 
   1d59d:	0f 1f 00             	nopl   (%rax)

000000000001d5a0 <_ULx86_64_local_addr_space_init>:
   1d5a0:	f3 0f 1e fa          	endbr64 
   1d5a4:	48 83 ec 08          	sub    $0x8,%rsp
   1d5a8:	48 8d 3d f1 5b 01 00 	lea    0x15bf1(%rip),%rdi        # 331a0 <local_addr_space>
   1d5af:	ba 90 66 00 00       	mov    $0x6690,%edx
   1d5b4:	31 f6                	xor    %esi,%esi
   1d5b6:	e8 d5 13 ff ff       	call   e990 <memset>
   1d5bb:	31 d2                	xor    %edx,%edx
   1d5bd:	31 f6                	xor    %esi,%esi
   1d5bf:	c7 05 17 5c 01 00 01 	movl   $0x1,0x15c17(%rip)        # 331e0 <local_addr_space+0x40>
   1d5c6:	00 00 00 
   1d5c9:	48 89 c7             	mov    %rax,%rdi
   1d5cc:	48 8d 05 dd 18 00 00 	lea    0x18dd(%rip),%rax        # 1eeb0 <_ULx86_64_dwarf_find_proc_info>
   1d5d3:	48 89 05 c6 5b 01 00 	mov    %rax,0x15bc6(%rip)        # 331a0 <local_addr_space>
   1d5da:	48 8d 05 0f fd ff ff 	lea    -0x2f1(%rip),%rax        # 1d2f0 <put_unwind_info>
   1d5e1:	48 89 05 c0 5b 01 00 	mov    %rax,0x15bc0(%rip)        # 331a8 <local_addr_space+0x8>
   1d5e8:	48 8d 05 71 ff ff ff 	lea    -0x8f(%rip),%rax        # 1d560 <get_dyn_info_list_addr>
   1d5ef:	48 89 05 ba 5b 01 00 	mov    %rax,0x15bba(%rip)        # 331b0 <local_addr_space+0x10>
   1d5f6:	48 8d 05 43 fe ff ff 	lea    -0x1bd(%rip),%rax        # 1d440 <access_mem>
   1d5fd:	48 89 05 b4 5b 01 00 	mov    %rax,0x15bb4(%rip)        # 331b8 <local_addr_space+0x18>
   1d604:	48 8d 05 c5 fd ff ff 	lea    -0x23b(%rip),%rax        # 1d3d0 <access_reg>
   1d60b:	48 89 05 ae 5b 01 00 	mov    %rax,0x15bae(%rip)        # 331c0 <local_addr_space+0x20>
   1d612:	48 8d 05 47 fd ff ff 	lea    -0x2b9(%rip),%rax        # 1d360 <access_fpreg>
   1d619:	48 89 05 a8 5b 01 00 	mov    %rax,0x15ba8(%rip)        # 331c8 <local_addr_space+0x28>
   1d620:	48 8d 05 f9 b3 ff ff 	lea    -0x4c07(%rip),%rax        # 18a20 <_ULx86_64_local_resume>
   1d627:	48 89 05 a2 5b 01 00 	mov    %rax,0x15ba2(%rip)        # 331d0 <local_addr_space+0x30>
   1d62e:	48 8d 05 cb fc ff ff 	lea    -0x335(%rip),%rax        # 1d300 <get_static_proc_name>
   1d635:	48 89 05 9c 5b 01 00 	mov    %rax,0x15b9c(%rip)        # 331d8 <local_addr_space+0x38>
   1d63c:	e8 3f 1b 00 00       	call   1f180 <_Ux86_64_flush_cache>
   1d641:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d645:	c7 05 f5 5a 01 00 00 	movl   $0x0,0x15af5(%rip)        # 33144 <lga_victim>
   1d64c:	00 00 00 
   1d64f:	0f 29 05 0a 5b 01 00 	movaps %xmm0,0x15b0a(%rip)        # 33160 <last_good_addr>
   1d656:	0f 29 05 13 5b 01 00 	movaps %xmm0,0x15b13(%rip)        # 33170 <last_good_addr+0x10>
   1d65d:	48 83 c4 08          	add    $0x8,%rsp
   1d661:	c3                   	ret    
   1d662:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d669:	00 00 00 
   1d66c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d670 <_ULx86_64_access_reg>:
   1d670:	f3 0f 1e fa          	endbr64 
   1d674:	48 83 ec 18          	sub    $0x18,%rsp
   1d678:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d67f:	00 00 
   1d681:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d686:	31 c0                	xor    %eax,%eax
   1d688:	83 fe 11             	cmp    $0x11,%esi
   1d68b:	0f 87 c4 4b fe ff    	ja     2255 <_ULx86_64_access_reg.cold>
   1d691:	4c 8d 05 ec 4e 00 00 	lea    0x4eec(%rip),%r8        # 22584 <_ULx86_64_dwarf_to_unw_regnum_map+0x14>
   1d698:	41 89 c9             	mov    %ecx,%r9d
   1d69b:	89 f1                	mov    %esi,%ecx
   1d69d:	49 63 04 88          	movslq (%r8,%rcx,4),%rax
   1d6a1:	4c 01 c0             	add    %r8,%rax
   1d6a4:	3e ff e0             	notrack jmp *%rax
   1d6a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d6ae:	00 00 
   1d6b0:	45 85 c9             	test   %r9d,%r9d
   1d6b3:	0f 85 7d 02 00 00    	jne    1d936 <_ULx86_64_access_reg+0x2c6>
   1d6b9:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d6bd:	48 89 02             	mov    %rax,(%rdx)
   1d6c0:	31 c0                	xor    %eax,%eax
   1d6c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d6c8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1d6cd:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1d6d4:	00 00 
   1d6d6:	0f 85 64 02 00 00    	jne    1d940 <_ULx86_64_access_reg+0x2d0>
   1d6dc:	48 83 c4 18          	add    $0x18,%rsp
   1d6e0:	c3                   	ret    
   1d6e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d6e8:	89 f1                	mov    %esi,%ecx
   1d6ea:	b8 01 00 00 00       	mov    $0x1,%eax
   1d6ef:	d3 e0                	shl    %cl,%eax
   1d6f1:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1d6f4:	45 85 c9             	test   %r9d,%r9d
   1d6f7:	0f 85 fb 01 00 00    	jne    1d8f8 <_ULx86_64_access_reg+0x288>
   1d6fd:	85 c1                	test   %eax,%ecx
   1d6ff:	0f 85 0b 02 00 00    	jne    1d910 <_ULx86_64_access_reg+0x2a0>
   1d705:	48 63 c6             	movslq %esi,%rax
   1d708:	48 83 c0 04          	add    $0x4,%rax
   1d70c:	48 c1 e0 04          	shl    $0x4,%rax
   1d710:	48 01 f8             	add    %rdi,%rax
   1d713:	48 8b 30             	mov    (%rax),%rsi
   1d716:	48 8b 40 08          	mov    0x8(%rax),%rax
   1d71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d720:	48 85 f6             	test   %rsi,%rsi
   1d723:	0f 84 03 02 00 00    	je     1d92c <_ULx86_64_access_reg+0x2bc>
   1d729:	a8 02                	test   $0x2,%al
   1d72b:	0f 85 97 01 00 00    	jne    1d8c8 <_ULx86_64_access_reg+0x258>
   1d731:	48 85 c0             	test   %rax,%rax
   1d734:	0f 84 a6 01 00 00    	je     1d8e0 <_ULx86_64_access_reg+0x270>
   1d73a:	48 89 32             	mov    %rsi,(%rdx)
   1d73d:	31 c0                	xor    %eax,%eax
   1d73f:	eb 87                	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d741:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d748:	48 8b 77 60          	mov    0x60(%rdi),%rsi
   1d74c:	48 8b 47 68          	mov    0x68(%rdi),%rax
   1d750:	45 85 c9             	test   %r9d,%r9d
   1d753:	74 cb                	je     1d720 <_ULx86_64_access_reg+0xb0>
   1d755:	48 8b 12             	mov    (%rdx),%rdx
   1d758:	48 89 14 24          	mov    %rdx,(%rsp)
   1d75c:	48 85 f6             	test   %rsi,%rsi
   1d75f:	0f 84 bd 01 00 00    	je     1d922 <_ULx86_64_access_reg+0x2b2>
   1d765:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
   1d769:	4c 8b 07             	mov    (%rdi),%r8
   1d76c:	48 89 e2             	mov    %rsp,%rdx
   1d76f:	b9 01 00 00 00       	mov    $0x1,%ecx
   1d774:	4c 89 cf             	mov    %r9,%rdi
   1d777:	a8 02                	test   $0x2,%al
   1d779:	0f 84 39 01 00 00    	je     1d8b8 <_ULx86_64_access_reg+0x248>
   1d77f:	41 ff 51 20          	call   *0x20(%r9)
   1d783:	e9 40 ff ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d78f:	00 
   1d790:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
   1d797:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
   1d79e:	eb b0                	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d7a0:	45 85 c9             	test   %r9d,%r9d
   1d7a3:	74 07                	je     1d7ac <_ULx86_64_access_reg+0x13c>
   1d7a5:	48 8b 02             	mov    (%rdx),%rax
   1d7a8:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1d7ac:	48 8b b7 40 01 00 00 	mov    0x140(%rdi),%rsi
   1d7b3:	48 8b 87 48 01 00 00 	mov    0x148(%rdi),%rax
   1d7ba:	eb 94                	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d7bc:	0f 1f 40 00          	nopl   0x0(%rax)
   1d7c0:	48 8b b7 30 01 00 00 	mov    0x130(%rdi),%rsi
   1d7c7:	48 8b 87 38 01 00 00 	mov    0x138(%rdi),%rax
   1d7ce:	eb 80                	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d7d0:	48 8b b7 80 00 00 00 	mov    0x80(%rdi),%rsi
   1d7d7:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   1d7de:	e9 6d ff ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d7e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d7e8:	48 8b b7 90 00 00 00 	mov    0x90(%rdi),%rsi
   1d7ef:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   1d7f6:	e9 55 ff ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d7fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d800:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   1d804:	48 8b 47 78          	mov    0x78(%rdi),%rax
   1d808:	e9 43 ff ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d80d:	0f 1f 00             	nopl   (%rax)
   1d810:	48 8b b7 c0 00 00 00 	mov    0xc0(%rdi),%rsi
   1d817:	48 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%rax
   1d81e:	e9 2d ff ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d823:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d828:	48 8b b7 d0 00 00 00 	mov    0xd0(%rdi),%rsi
   1d82f:	48 8b 87 d8 00 00 00 	mov    0xd8(%rdi),%rax
   1d836:	e9 15 ff ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d83b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d840:	48 8b b7 e0 00 00 00 	mov    0xe0(%rdi),%rsi
   1d847:	48 8b 87 e8 00 00 00 	mov    0xe8(%rdi),%rax
   1d84e:	e9 fd fe ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d853:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d858:	48 8b b7 f0 00 00 00 	mov    0xf0(%rdi),%rsi
   1d85f:	48 8b 87 f8 00 00 00 	mov    0xf8(%rdi),%rax
   1d866:	e9 e5 fe ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d870:	48 8b b7 00 01 00 00 	mov    0x100(%rdi),%rsi
   1d877:	48 8b 87 08 01 00 00 	mov    0x108(%rdi),%rax
   1d87e:	e9 cd fe ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d888:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
   1d88f:	48 8b 87 18 01 00 00 	mov    0x118(%rdi),%rax
   1d896:	e9 b5 fe ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d89b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d8a0:	48 8b b7 20 01 00 00 	mov    0x120(%rdi),%rsi
   1d8a7:	48 8b 87 28 01 00 00 	mov    0x128(%rdi),%rax
   1d8ae:	e9 9d fe ff ff       	jmp    1d750 <_ULx86_64_access_reg+0xe0>
   1d8b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d8b8:	41 ff 51 18          	call   *0x18(%r9)
   1d8bc:	e9 07 fe ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d8c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d8c8:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d8cc:	4c 8b 07             	mov    (%rdi),%r8
   1d8cf:	31 c9                	xor    %ecx,%ecx
   1d8d1:	48 89 c7             	mov    %rax,%rdi
   1d8d4:	ff 50 20             	call   *0x20(%rax)
   1d8d7:	e9 ec fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d8dc:	0f 1f 40 00          	nopl   0x0(%rax)
   1d8e0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d8e4:	4c 8b 07             	mov    (%rdi),%r8
   1d8e7:	31 c9                	xor    %ecx,%ecx
   1d8e9:	48 89 c7             	mov    %rax,%rdi
   1d8ec:	ff 50 18             	call   *0x18(%rax)
   1d8ef:	e9 d4 fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d8f4:	0f 1f 40 00          	nopl   0x0(%rax)
   1d8f8:	48 8b 12             	mov    (%rdx),%rdx
   1d8fb:	09 c8                	or     %ecx,%eax
   1d8fd:	48 63 f6             	movslq %esi,%rsi
   1d900:	48 89 54 f7 28       	mov    %rdx,0x28(%rdi,%rsi,8)
   1d905:	89 47 38             	mov    %eax,0x38(%rdi)
   1d908:	31 c0                	xor    %eax,%eax
   1d90a:	e9 b9 fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d90f:	90                   	nop
   1d910:	48 63 f6             	movslq %esi,%rsi
   1d913:	48 8b 44 f7 28       	mov    0x28(%rdi,%rsi,8),%rax
   1d918:	48 89 02             	mov    %rax,(%rdx)
   1d91b:	31 c0                	xor    %eax,%eax
   1d91d:	e9 a6 fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d922:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1d927:	e9 9c fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d92c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1d931:	e9 92 fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d936:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1d93b:	e9 88 fd ff ff       	jmp    1d6c8 <_ULx86_64_access_reg+0x58>
   1d940:	e8 0b 12 ff ff       	call   eb50 <__stack_chk_fail>
   1d945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d94c:	00 00 00 
   1d94f:	90                   	nop

000000000001d950 <_ULx86_64_access_fpreg>:
   1d950:	f3 0f 1e fa          	endbr64 
   1d954:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1d959:	c3                   	ret    
   1d95a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d960 <_ULx86_64_stash_frame>:
   1d960:	f3 0f 1e fa          	endbr64 
   1d964:	41 57                	push   %r15
   1d966:	41 56                	push   %r14
   1d968:	41 55                	push   %r13
   1d96a:	41 54                	push   %r12
   1d96c:	55                   	push   %rbp
   1d96d:	48 89 fd             	mov    %rdi,%rbp
   1d970:	53                   	push   %rbx
   1d971:	48 89 f3             	mov    %rsi,%rbx
   1d974:	48 83 ec 18          	sub    $0x18,%rsp
   1d978:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d97f:	00 00 
   1d981:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d986:	31 c0                	xor    %eax,%eax
   1d988:	80 7e 19 04          	cmpb   $0x4,0x19(%rsi)
   1d98c:	0f 84 6e 01 00 00    	je     1db00 <_ULx86_64_stash_frame+0x1a0>
   1d992:	f6 85 b0 01 00 00 07 	testb  $0x7,0x1b0(%rbp)
   1d999:	74 25                	je     1d9c0 <_ULx86_64_stash_frame+0x60>
   1d99b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d9a0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1d9a7:	00 00 
   1d9a9:	0f 85 5d 02 00 00    	jne    1dc0c <_ULx86_64_stash_frame+0x2ac>
   1d9af:	48 83 c4 18          	add    $0x18,%rsp
   1d9b3:	5b                   	pop    %rbx
   1d9b4:	5d                   	pop    %rbp
   1d9b5:	41 5c                	pop    %r12
   1d9b7:	41 5d                	pop    %r13
   1d9b9:	41 5e                	pop    %r14
   1d9bb:	41 5f                	pop    %r15
   1d9bd:	c3                   	ret    
   1d9be:	66 90                	xchg   %ax,%ax
   1d9c0:	80 7b 19 03          	cmpb   $0x3,0x19(%rbx)
   1d9c4:	75 d5                	jne    1d99b <_ULx86_64_stash_frame+0x3b>
   1d9c6:	4c 8b a3 a8 00 00 00 	mov    0xa8(%rbx),%r12
   1d9cd:	49 8d 44 24 fa       	lea    -0x6(%r12),%rax
   1d9d2:	48 83 f8 01          	cmp    $0x1,%rax
   1d9d6:	77 c3                	ja     1d99b <_ULx86_64_stash_frame+0x3b>
   1d9d8:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
   1d9df:	4c 89 ef             	mov    %r13,%rdi
   1d9e2:	e8 99 23 00 00       	call   1fd80 <labs>
   1d9e7:	48 3d ff ff ff 0f    	cmp    $0xfffffff,%rax
   1d9ed:	7f ac                	jg     1d99b <_ULx86_64_stash_frame+0x3b>
   1d9ef:	48 8b 13             	mov    (%rbx),%rdx
   1d9f2:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1d9f6:	48 c1 e2 04          	shl    $0x4,%rdx
   1d9fa:	48 83 e8 08          	sub    $0x8,%rax
   1d9fe:	48 39 44 2a 40       	cmp    %rax,0x40(%rdx,%rbp,1)
   1da03:	75 96                	jne    1d99b <_ULx86_64_stash_frame+0x3b>
   1da05:	44 0f b6 73 0e       	movzbl 0xe(%rbx),%r14d
   1da0a:	41 80 fe 01          	cmp    $0x1,%r14b
   1da0e:	0f 86 4a 01 00 00    	jbe    1db5e <_ULx86_64_stash_frame+0x1fe>
   1da14:	41 80 fe 02          	cmp    $0x2,%r14b
   1da18:	75 81                	jne    1d99b <_ULx86_64_stash_frame+0x3b>
   1da1a:	4c 8b 7b 50          	mov    0x50(%rbx),%r15
   1da1e:	4c 89 ff             	mov    %r15,%rdi
   1da21:	e8 5a 23 00 00       	call   1fd80 <labs>
   1da26:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   1da2c:	0f 8f 69 ff ff ff    	jg     1d99b <_ULx86_64_stash_frame+0x3b>
   1da32:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   1da36:	0f 84 5f ff ff ff    	je     1d99b <_ULx86_64_stash_frame+0x3b>
   1da3c:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   1da40:	3c 01                	cmp    $0x1,%al
   1da42:	0f 86 67 01 00 00    	jbe    1dbaf <_ULx86_64_stash_frame+0x24f>
   1da48:	3c 02                	cmp    $0x2,%al
   1da4a:	0f 85 4b ff ff ff    	jne    1d99b <_ULx86_64_stash_frame+0x3b>
   1da50:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   1da54:	4c 89 ff             	mov    %r15,%rdi
   1da57:	e8 24 23 00 00       	call   1fd80 <labs>
   1da5c:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   1da62:	0f 8f 33 ff ff ff    	jg     1d99b <_ULx86_64_stash_frame+0x3b>
   1da68:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   1da6c:	0f 84 29 ff ff ff    	je     1d99b <_ULx86_64_stash_frame+0x3b>
   1da72:	31 c0                	xor    %eax,%eax
   1da74:	49 83 fc 07          	cmp    $0x7,%r12
   1da78:	4c 89 ea             	mov    %r13,%rdx
   1da7b:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   1da80:	0f 94 c0             	sete   %al
   1da83:	48 c1 e2 05          	shl    $0x5,%rdx
   1da87:	48 c1 e0 04          	shl    $0x4,%rax
   1da8b:	48 c1 e1 05          	shl    $0x5,%rcx
   1da8f:	48 21 ca             	and    %rcx,%rdx
   1da92:	48 83 c8 06          	or     $0x6,%rax
   1da96:	48 09 d0             	or     %rdx,%rax
   1da99:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1daa0:	ff ff ff 
   1daa3:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1daaa:	48 09 d0             	or     %rdx,%rax
   1daad:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1dab4:	41 80 fe 02          	cmp    $0x2,%r14b
   1dab8:	75 26                	jne    1dae0 <_ULx86_64_stash_frame+0x180>
   1daba:	8b 43 50             	mov    0x50(%rbx),%eax
   1dabd:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1dac2:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
   1dac9:	8b 85 b4 01 00 00    	mov    0x1b4(%rbp),%eax
   1dacf:	25 03 00 fe ff       	and    $0xfffe0003,%eax
   1dad4:	09 d0                	or     %edx,%eax
   1dad6:	89 85 b4 01 00 00    	mov    %eax,0x1b4(%rbp)
   1dadc:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   1dae0:	0f b7 85 b6 01 00 00 	movzwl 0x1b6(%rbp),%eax
   1dae7:	45 01 ff             	add    %r15d,%r15d
   1daea:	83 e0 01             	and    $0x1,%eax
   1daed:	44 09 f8             	or     %r15d,%eax
   1daf0:	66 89 85 b6 01 00 00 	mov    %ax,0x1b6(%rbp)
   1daf7:	e9 9f fe ff ff       	jmp    1d99b <_ULx86_64_stash_frame+0x3b>
   1dafc:	0f 1f 40 00          	nopl   0x0(%rax)
   1db00:	80 7e 0e 04          	cmpb   $0x4,0xe(%rsi)
   1db04:	0f 85 91 fe ff ff    	jne    1d99b <_ULx86_64_stash_frame+0x3b>
   1db0a:	48 8b 56 50          	mov    0x50(%rsi),%rdx
   1db0e:	48 8b b6 a8 00 00 00 	mov    0xa8(%rsi),%rsi
   1db15:	48 89 e1             	mov    %rsp,%rcx
   1db18:	e8 03 01 00 00       	call   1dc20 <_ULx86_64_dwarf_stack_aligned>
   1db1d:	85 c0                	test   %eax,%eax
   1db1f:	0f 84 6d fe ff ff    	je     1d992 <_ULx86_64_stash_frame+0x32>
   1db25:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   1db2c:	00 00 00 
   1db2f:	48 8b 04 24          	mov    (%rsp),%rax
   1db33:	48 c1 e0 05          	shl    $0x5,%rax
   1db37:	48 21 d0             	and    %rdx,%rax
   1db3a:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1db41:	ff ff ff 
   1db44:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1db4b:	48 83 c8 05          	or     $0x5,%rax
   1db4f:	48 09 d0             	or     %rdx,%rax
   1db52:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1db59:	e9 34 fe ff ff       	jmp    1d992 <_ULx86_64_stash_frame+0x32>
   1db5e:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   1db62:	3c 01                	cmp    $0x1,%al
   1db64:	0f 87 de fe ff ff    	ja     1da48 <_ULx86_64_stash_frame+0xe8>
   1db6a:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   1db71:	00 00 00 
   1db74:	31 c0                	xor    %eax,%eax
   1db76:	49 83 fc 07          	cmp    $0x7,%r12
   1db7a:	0f 94 c0             	sete   %al
   1db7d:	49 c1 e5 05          	shl    $0x5,%r13
   1db81:	48 c1 e0 04          	shl    $0x4,%rax
   1db85:	49 21 d5             	and    %rdx,%r13
   1db88:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1db8f:	ff ff ff 
   1db92:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1db99:	48 83 c8 06          	or     $0x6,%rax
   1db9d:	4c 09 e8             	or     %r13,%rax
   1dba0:	48 09 d0             	or     %rdx,%rax
   1dba3:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1dbaa:	e9 ec fd ff ff       	jmp    1d99b <_ULx86_64_stash_frame+0x3b>
   1dbaf:	31 c0                	xor    %eax,%eax
   1dbb1:	49 83 fc 07          	cmp    $0x7,%r12
   1dbb5:	4c 89 ea             	mov    %r13,%rdx
   1dbb8:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   1dbbd:	0f 94 c0             	sete   %al
   1dbc0:	48 c1 e1 05          	shl    $0x5,%rcx
   1dbc4:	48 c1 e0 04          	shl    $0x4,%rax
   1dbc8:	48 c1 e2 05          	shl    $0x5,%rdx
   1dbcc:	48 21 ca             	and    %rcx,%rdx
   1dbcf:	48 83 c8 06          	or     $0x6,%rax
   1dbd3:	b9 ff 7f 00 00       	mov    $0x7fff,%ecx
   1dbd8:	48 09 d0             	or     %rdx,%rax
   1dbdb:	4c 89 fa             	mov    %r15,%rdx
   1dbde:	48 c1 e1 22          	shl    $0x22,%rcx
   1dbe2:	48 c1 e2 22          	shl    $0x22,%rdx
   1dbe6:	48 21 ca             	and    %rcx,%rdx
   1dbe9:	48 09 d0             	or     %rdx,%rax
   1dbec:	48 ba 08 00 00 00 00 	movabs $0xfffe000000000008,%rdx
   1dbf3:	00 fe ff 
   1dbf6:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1dbfd:	48 09 d0             	or     %rdx,%rax
   1dc00:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1dc07:	e9 8f fd ff ff       	jmp    1d99b <_ULx86_64_stash_frame+0x3b>
   1dc0c:	e8 3f 0f ff ff       	call   eb50 <__stack_chk_fail>
   1dc11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dc18:	00 00 00 
   1dc1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001dc20 <_ULx86_64_dwarf_stack_aligned>:
   1dc20:	f3 0f 1e fa          	endbr64 
   1dc24:	41 54                	push   %r12
   1dc26:	49 89 f4             	mov    %rsi,%r12
   1dc29:	55                   	push   %rbp
   1dc2a:	48 89 cd             	mov    %rcx,%rbp
   1dc2d:	53                   	push   %rbx
   1dc2e:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1dc32:	48 89 d3             	mov    %rdx,%rbx
   1dc35:	e8 06 f1 ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1dc3a:	31 c9                	xor    %ecx,%ecx
   1dc3c:	31 ff                	xor    %edi,%edi
   1dc3e:	66 90                	xchg   %ax,%ax
   1dc40:	0f b6 13             	movzbl (%rbx),%edx
   1dc43:	49 89 d8             	mov    %rbx,%r8
   1dc46:	48 83 c3 01          	add    $0x1,%rbx
   1dc4a:	48 89 d0             	mov    %rdx,%rax
   1dc4d:	83 e0 7f             	and    $0x7f,%eax
   1dc50:	48 d3 e0             	shl    %cl,%rax
   1dc53:	48 83 c1 07          	add    $0x7,%rcx
   1dc57:	48 09 c7             	or     %rax,%rdi
   1dc5a:	84 d2                	test   %dl,%dl
   1dc5c:	78 e2                	js     1dc40 <_ULx86_64_dwarf_stack_aligned+0x20>
   1dc5e:	31 c0                	xor    %eax,%eax
   1dc60:	48 83 ff 02          	cmp    $0x2,%rdi
   1dc64:	75 05                	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dc66:	80 3b 76             	cmpb   $0x76,(%rbx)
   1dc69:	74 05                	je     1dc70 <_ULx86_64_dwarf_stack_aligned+0x50>
   1dc6b:	5b                   	pop    %rbx
   1dc6c:	5d                   	pop    %rbp
   1dc6d:	41 5c                	pop    %r12
   1dc6f:	c3                   	ret    
   1dc70:	49 83 c0 02          	add    $0x2,%r8
   1dc74:	31 c9                	xor    %ecx,%ecx
   1dc76:	45 31 c9             	xor    %r9d,%r9d
   1dc79:	41 0f b6 10          	movzbl (%r8),%edx
   1dc7d:	49 83 c0 01          	add    $0x1,%r8
   1dc81:	48 89 d0             	mov    %rdx,%rax
   1dc84:	83 e0 7f             	and    $0x7f,%eax
   1dc87:	48 d3 e0             	shl    %cl,%rax
   1dc8a:	48 83 c1 07          	add    $0x7,%rcx
   1dc8e:	49 09 c1             	or     %rax,%r9
   1dc91:	84 d2                	test   %dl,%dl
   1dc93:	78 e4                	js     1dc79 <_ULx86_64_dwarf_stack_aligned+0x59>
   1dc95:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1dc99:	77 07                	ja     1dca2 <_ULx86_64_dwarf_stack_aligned+0x82>
   1dc9b:	31 c0                	xor    %eax,%eax
   1dc9d:	83 e2 40             	and    $0x40,%edx
   1dca0:	75 c9                	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dca2:	31 c0                	xor    %eax,%eax
   1dca4:	4d 85 c9             	test   %r9,%r9
   1dca7:	75 c2                	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dca9:	31 c9                	xor    %ecx,%ecx
   1dcab:	31 f6                	xor    %esi,%esi
   1dcad:	0f 1f 00             	nopl   (%rax)
   1dcb0:	41 0f b6 14 24       	movzbl (%r12),%edx
   1dcb5:	4c 89 e7             	mov    %r12,%rdi
   1dcb8:	49 83 c4 01          	add    $0x1,%r12
   1dcbc:	48 89 d0             	mov    %rdx,%rax
   1dcbf:	83 e0 7f             	and    $0x7f,%eax
   1dcc2:	48 d3 e0             	shl    %cl,%rax
   1dcc5:	48 83 c1 07          	add    $0x7,%rcx
   1dcc9:	48 09 c6             	or     %rax,%rsi
   1dccc:	84 d2                	test   %dl,%dl
   1dcce:	78 e0                	js     1dcb0 <_ULx86_64_dwarf_stack_aligned+0x90>
   1dcd0:	31 c0                	xor    %eax,%eax
   1dcd2:	48 83 fe 03          	cmp    $0x3,%rsi
   1dcd6:	75 93                	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dcd8:	41 80 3c 24 76       	cmpb   $0x76,(%r12)
   1dcdd:	75 8c                	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dcdf:	48 83 c7 02          	add    $0x2,%rdi
   1dce3:	31 c9                	xor    %ecx,%ecx
   1dce5:	0f b6 07             	movzbl (%rdi),%eax
   1dce8:	48 83 c7 01          	add    $0x1,%rdi
   1dcec:	48 89 c2             	mov    %rax,%rdx
   1dcef:	83 e2 7f             	and    $0x7f,%edx
   1dcf2:	48 d3 e2             	shl    %cl,%rdx
   1dcf5:	48 83 c1 07          	add    $0x7,%rcx
   1dcf9:	49 09 d1             	or     %rdx,%r9
   1dcfc:	84 c0                	test   %al,%al
   1dcfe:	78 e5                	js     1dce5 <_ULx86_64_dwarf_stack_aligned+0xc5>
   1dd00:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1dd04:	77 0e                	ja     1dd14 <_ULx86_64_dwarf_stack_aligned+0xf4>
   1dd06:	a8 40                	test   $0x40,%al
   1dd08:	74 0a                	je     1dd14 <_ULx86_64_dwarf_stack_aligned+0xf4>
   1dd0a:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   1dd0e:	48 d3 e0             	shl    %cl,%rax
   1dd11:	49 09 c1             	or     %rax,%r9
   1dd14:	31 c0                	xor    %eax,%eax
   1dd16:	80 3f 06             	cmpb   $0x6,(%rdi)
   1dd19:	0f 85 4c ff ff ff    	jne    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dd1f:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
   1dd23:	b8 01 00 00 00       	mov    $0x1,%eax
   1dd28:	e9 3e ff ff ff       	jmp    1dc6b <_ULx86_64_dwarf_stack_aligned+0x4b>
   1dd2d:	0f 1f 00             	nopl   (%rax)

000000000001dd30 <_ULx86_64_dwarf_eval_expr>:
   1dd30:	f3 0f 1e fa          	endbr64 
   1dd34:	41 57                	push   %r15
   1dd36:	49 89 ff             	mov    %rdi,%r15
   1dd39:	41 56                	push   %r14
   1dd3b:	4d 89 c6             	mov    %r8,%r14
   1dd3e:	41 55                	push   %r13
   1dd40:	41 54                	push   %r12
   1dd42:	49 89 f4             	mov    %rsi,%r12
   1dd45:	55                   	push   %rbp
   1dd46:	53                   	push   %rbx
   1dd47:	48 89 d3             	mov    %rdx,%rbx
   1dd4a:	48 81 ec 58 02 00 00 	sub    $0x258,%rsp
   1dd51:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1dd56:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1dd5a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1dd5f:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   1dd64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dd6b:	00 00 
   1dd6d:	48 89 84 24 48 02 00 	mov    %rax,0x248(%rsp)
   1dd74:	00 
   1dd75:	31 c0                	xor    %eax,%eax
   1dd77:	e8 c4 ef ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1dd7c:	49 8b 0c 24          	mov    (%r12),%rcx
   1dd80:	49 8b 47 10          	mov    0x10(%r15),%rax
   1dd84:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
   1dd8b:	4c 8d 1c 19          	lea    (%rcx,%rbx,1),%r11
   1dd8f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1dd94:	4c 39 d9             	cmp    %r11,%rcx
   1dd97:	0f 83 19 01 00 00    	jae    1deb6 <_ULx86_64_dwarf_eval_expr+0x186>
   1dd9d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1dda4:	00 00 
   1dda6:	31 ed                	xor    %ebp,%ebp
   1dda8:	bb 01 00 00 00       	mov    $0x1,%ebx
   1ddad:	4c 8d 05 ac 4a 00 00 	lea    0x4aac(%rip),%r8        # 22860 <operands>
   1ddb4:	4c 8d 35 79 4a 00 00 	lea    0x4a79(%rip),%r14        # 22834 <_ULx86_64_dwarf_to_unw_regnum_map+0x2c4>
   1ddbb:	4c 8d 2d 5a 4a 00 00 	lea    0x4a5a(%rip),%r13        # 2281c <_ULx86_64_dwarf_to_unw_regnum_map+0x2ac>
   1ddc2:	4c 8d 3d 03 48 00 00 	lea    0x4803(%rip),%r15        # 225cc <_ULx86_64_dwarf_to_unw_regnum_map+0x5c>
   1ddc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ddd0:	0f b6 39             	movzbl (%rcx),%edi
   1ddd3:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   1ddd7:	49 89 34 24          	mov    %rsi,(%r12)
   1dddb:	40 0f b6 d7          	movzbl %dil,%edx
   1dddf:	89 f8                	mov    %edi,%eax
   1dde1:	41 0f b6 14 10       	movzbl (%r8,%rdx,1),%edx
   1dde6:	41 89 d1             	mov    %edx,%r9d
   1dde9:	41 c0 e9 06          	shr    $0x6,%r9b
   1dded:	0f 85 d5 00 00 00    	jne    1dec8 <_ULx86_64_dwarf_eval_expr+0x198>
   1ddf3:	83 e8 03             	sub    $0x3,%eax
   1ddf6:	3c 93                	cmp    $0x93,%al
   1ddf8:	77 4b                	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1ddfa:	0f b6 c0             	movzbl %al,%eax
   1ddfd:	49 63 04 87          	movslq (%r15,%rax,4),%rax
   1de01:	4c 01 f8             	add    %r15,%rax
   1de04:	3e ff e0             	notrack jmp *%rax
   1de07:	31 f6                	xor    %esi,%esi
   1de09:	48 83 fd 10          	cmp    $0x10,%rbp
   1de0d:	77 0b                	ja     1de1a <_ULx86_64_dwarf_eval_expr+0xea>
   1de0f:	48 8d 05 5a 47 00 00 	lea    0x475a(%rip),%rax        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1de16:	0f b6 34 28          	movzbl (%rax,%rbp,1),%esi
   1de1a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1de1f:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1de24:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1de29:	e8 62 ef ff ff       	call   1cd90 <_ULx86_64_get_reg>
   1de2e:	85 c0                	test   %eax,%eax
   1de30:	78 18                	js     1de4a <_ULx86_64_dwarf_eval_expr+0x11a>
   1de32:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1de37:	48 03 54 24 38       	add    0x38(%rsp),%rdx
   1de3c:	83 fb 3f             	cmp    $0x3f,%ebx
   1de3f:	0f 86 88 02 00 00    	jbe    1e0cd <_ULx86_64_dwarf_eval_expr+0x39d>
   1de45:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1de4a:	48 8b bc 24 48 02 00 	mov    0x248(%rsp),%rdi
   1de51:	00 
   1de52:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1de59:	00 00 
   1de5b:	0f 85 4b 0a 00 00    	jne    1e8ac <_ULx86_64_dwarf_eval_expr+0xb7c>
   1de61:	48 81 c4 58 02 00 00 	add    $0x258,%rsp
   1de68:	5b                   	pop    %rbx
   1de69:	5d                   	pop    %rbp
   1de6a:	41 5c                	pop    %r12
   1de6c:	41 5d                	pop    %r13
   1de6e:	41 5e                	pop    %r14
   1de70:	41 5f                	pop    %r15
   1de72:	c3                   	ret    
   1de73:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1de76:	83 f8 3f             	cmp    $0x3f,%eax
   1de79:	77 ca                	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1de7b:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1de80:	48 85 d2             	test   %rdx,%rdx
   1de83:	79 03                	jns    1de88 <_ULx86_64_dwarf_eval_expr+0x158>
   1de85:	48 f7 da             	neg    %rdx
   1de88:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1de8d:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1de92:	49 8b 0c 24          	mov    (%r12),%rcx
   1de96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1de9d:	00 00 00 
   1dea0:	4c 39 d9             	cmp    %r11,%rcx
   1dea3:	0f 82 27 ff ff ff    	jb     1ddd0 <_ULx86_64_dwarf_eval_expr+0xa0>
   1dea9:	83 eb 01             	sub    $0x1,%ebx
   1deac:	83 fb 3f             	cmp    $0x3f,%ebx
   1deaf:	77 94                	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1deb1:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1deb6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1debb:	48 89 07             	mov    %rax,(%rdi)
   1debe:	31 c0                	xor    %eax,%eax
   1dec0:	eb 88                	jmp    1de4a <_ULx86_64_dwarf_eval_expr+0x11a>
   1dec2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1dec8:	41 89 d2             	mov    %edx,%r10d
   1decb:	41 c0 ea 03          	shr    $0x3,%r10b
   1decf:	41 83 e2 07          	and    $0x7,%r10d
   1ded3:	41 80 fa 07          	cmp    $0x7,%r10b
   1ded7:	0f 84 b6 00 00 00    	je     1df93 <_ULx86_64_dwarf_eval_expr+0x263>
   1dedd:	41 80 fa 05          	cmp    $0x5,%r10b
   1dee1:	0f 87 5e ff ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1dee7:	45 0f b6 d2          	movzbl %r10b,%r10d
   1deeb:	4f 63 54 95 00       	movslq 0x0(%r13,%r10,4),%r10
   1def0:	4d 01 ea             	add    %r13,%r10
   1def3:	3e 41 ff e2          	notrack jmp *%r10
   1def7:	31 c9                	xor    %ecx,%ecx
   1def9:	31 ed                	xor    %ebp,%ebp
   1defb:	44 0f b6 16          	movzbl (%rsi),%r10d
   1deff:	48 83 c6 01          	add    $0x1,%rsi
   1df03:	49 89 34 24          	mov    %rsi,(%r12)
   1df07:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   1df0c:	41 83 e2 7f          	and    $0x7f,%r10d
   1df10:	49 d3 e2             	shl    %cl,%r10
   1df13:	48 83 c1 07          	add    $0x7,%rcx
   1df17:	4c 09 d5             	or     %r10,%rbp
   1df1a:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1df1f:	78 da                	js     1defb <_ULx86_64_dwarf_eval_expr+0x1cb>
   1df21:	41 83 e1 02          	and    $0x2,%r9d
   1df25:	0f 84 c8 fe ff ff    	je     1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1df2b:	83 e2 07             	and    $0x7,%edx
   1df2e:	80 fa 07             	cmp    $0x7,%dl
   1df31:	0f 84 a5 00 00 00    	je     1dfdc <_ULx86_64_dwarf_eval_expr+0x2ac>
   1df37:	80 fa 05             	cmp    $0x5,%dl
   1df3a:	0f 87 05 ff ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1df40:	0f b6 d2             	movzbl %dl,%edx
   1df43:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
   1df47:	4c 01 f2             	add    %r14,%rdx
   1df4a:	3e ff e2             	notrack jmp *%rdx
   1df4d:	31 c9                	xor    %ecx,%ecx
   1df4f:	31 ed                	xor    %ebp,%ebp
   1df51:	44 0f b6 16          	movzbl (%rsi),%r10d
   1df55:	48 83 c6 01          	add    $0x1,%rsi
   1df59:	49 89 34 24          	mov    %rsi,(%r12)
   1df5d:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   1df62:	41 83 e2 7f          	and    $0x7f,%r10d
   1df66:	49 d3 e2             	shl    %cl,%r10
   1df69:	48 83 c1 07          	add    $0x7,%rcx
   1df6d:	4c 09 d5             	or     %r10,%rbp
   1df70:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1df75:	78 da                	js     1df51 <_ULx86_64_dwarf_eval_expr+0x221>
   1df77:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1df7b:	77 a4                	ja     1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1df7d:	f6 44 24 18 40       	testb  $0x40,0x18(%rsp)
   1df82:	74 9d                	je     1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1df84:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   1df8b:	48 d3 e6             	shl    %cl,%rsi
   1df8e:	48 09 f5             	or     %rsi,%rbp
   1df91:	eb 8e                	jmp    1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1df93:	48 83 c1 09          	add    $0x9,%rcx
   1df97:	41 83 e1 02          	and    $0x2,%r9d
   1df9b:	48 8b 2e             	mov    (%rsi),%rbp
   1df9e:	49 89 0c 24          	mov    %rcx,(%r12)
   1dfa2:	0f 84 4b fe ff ff    	je     1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1dfa8:	eb 81                	jmp    1df2b <_ULx86_64_dwarf_eval_expr+0x1fb>
   1dfaa:	f7 c5 00 00 00 80    	test   $0x80000000,%ebp
   1dfb0:	74 0e                	je     1dfc0 <_ULx86_64_dwarf_eval_expr+0x290>
   1dfb2:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   1dfb9:	ff ff ff 
   1dfbc:	48 09 c5             	or     %rax,%rbp
   1dfbf:	90                   	nop
   1dfc0:	83 fb 3f             	cmp    $0x3f,%ebx
   1dfc3:	0f 87 7c fe ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1dfc9:	89 d8                	mov    %ebx,%eax
   1dfcb:	49 8b 0c 24          	mov    (%r12),%rcx
   1dfcf:	83 c3 01             	add    $0x1,%ebx
   1dfd2:	48 89 6c c4 40       	mov    %rbp,0x40(%rsp,%rax,8)
   1dfd7:	e9 c4 fe ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1dfdc:	49 8b 14 24          	mov    (%r12),%rdx
   1dfe0:	48 8b 32             	mov    (%rdx),%rsi
   1dfe3:	48 83 c2 08          	add    $0x8,%rdx
   1dfe7:	49 89 14 24          	mov    %rdx,(%r12)
   1dfeb:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1dff0:	e9 fe fd ff ff       	jmp    1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1dff5:	48 83 c1 02          	add    $0x2,%rcx
   1dff9:	0f b6 2e             	movzbl (%rsi),%ebp
   1dffc:	49 89 0c 24          	mov    %rcx,(%r12)
   1e000:	e9 1c ff ff ff       	jmp    1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1e005:	48 83 c1 03          	add    $0x3,%rcx
   1e009:	0f b7 2e             	movzwl (%rsi),%ebp
   1e00c:	49 89 0c 24          	mov    %rcx,(%r12)
   1e010:	e9 0c ff ff ff       	jmp    1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1e015:	48 83 c1 05          	add    $0x5,%rcx
   1e019:	8b 2e                	mov    (%rsi),%ebp
   1e01b:	49 89 0c 24          	mov    %rcx,(%r12)
   1e01f:	e9 fd fe ff ff       	jmp    1df21 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1e024:	0f 1f 40 00          	nopl   0x0(%rax)
   1e028:	83 ef 30             	sub    $0x30,%edi
   1e02b:	48 63 ff             	movslq %edi,%rdi
   1e02e:	83 fb 3f             	cmp    $0x3f,%ebx
   1e031:	0f 87 0e fe ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e037:	89 d8                	mov    %ebx,%eax
   1e039:	49 8b 0c 24          	mov    (%r12),%rcx
   1e03d:	83 c3 01             	add    $0x1,%ebx
   1e040:	48 89 7c c4 40       	mov    %rdi,0x40(%rsp,%rax,8)
   1e045:	e9 56 fe ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e04a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e050:	83 ef 50             	sub    $0x50,%edi
   1e053:	31 c0                	xor    %eax,%eax
   1e055:	83 ff 10             	cmp    $0x10,%edi
   1e058:	7f 0e                	jg     1e068 <_ULx86_64_dwarf_eval_expr+0x338>
   1e05a:	48 63 ff             	movslq %edi,%rdi
   1e05d:	48 8d 05 0c 45 00 00 	lea    0x450c(%rip),%rax        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1e064:	0f b6 04 38          	movzbl (%rax,%rdi,1),%eax
   1e068:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e06d:	48 89 07             	mov    %rax,(%rdi)
   1e070:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1e075:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1e07b:	31 c0                	xor    %eax,%eax
   1e07d:	e9 c8 fd ff ff       	jmp    1de4a <_ULx86_64_dwarf_eval_expr+0x11a>
   1e082:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e088:	83 ef 70             	sub    $0x70,%edi
   1e08b:	31 f6                	xor    %esi,%esi
   1e08d:	83 ff 10             	cmp    $0x10,%edi
   1e090:	7f 0e                	jg     1e0a0 <_ULx86_64_dwarf_eval_expr+0x370>
   1e092:	48 63 ff             	movslq %edi,%rdi
   1e095:	48 8d 05 d4 44 00 00 	lea    0x44d4(%rip),%rax        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1e09c:	0f b6 34 38          	movzbl (%rax,%rdi,1),%esi
   1e0a0:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1e0a5:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1e0aa:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1e0af:	e8 dc ec ff ff       	call   1cd90 <_ULx86_64_get_reg>
   1e0b4:	85 c0                	test   %eax,%eax
   1e0b6:	0f 88 8e fd ff ff    	js     1de4a <_ULx86_64_dwarf_eval_expr+0x11a>
   1e0bc:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1e0c1:	48 01 ea             	add    %rbp,%rdx
   1e0c4:	83 fb 3f             	cmp    $0x3f,%ebx
   1e0c7:	0f 87 78 fd ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e0cd:	89 d8                	mov    %ebx,%eax
   1e0cf:	49 8b 0c 24          	mov    (%r12),%rcx
   1e0d3:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1e0d8:	83 c3 01             	add    $0x1,%ebx
   1e0db:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1e0e0:	4c 8d 05 79 47 00 00 	lea    0x4779(%rip),%r8        # 22860 <operands>
   1e0e7:	e9 b4 fd ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e0ec:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e0ef:	83 f8 3f             	cmp    $0x3f,%eax
   1e0f2:	0f 87 4d fd ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e0f8:	89 c6                	mov    %eax,%esi
   1e0fa:	48 8b 44 f4 40       	mov    0x40(%rsp,%rsi,8),%rax
   1e0ff:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e104:	48 83 fd 04          	cmp    $0x4,%rbp
   1e108:	0f 87 5a 06 00 00    	ja     1e768 <_ULx86_64_dwarf_eval_expr+0xa38>
   1e10e:	48 83 fd 02          	cmp    $0x2,%rbp
   1e112:	0f 87 74 07 00 00    	ja     1e88c <_ULx86_64_dwarf_eval_expr+0xb5c>
   1e118:	48 83 fd 01          	cmp    $0x1,%rbp
   1e11c:	0f 84 59 07 00 00    	je     1e87b <_ULx86_64_dwarf_eval_expr+0xb4b>
   1e122:	48 83 fd 02          	cmp    $0x2,%rbp
   1e126:	0f 85 19 fd ff ff    	jne    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e12c:	0f b7 10             	movzwl (%rax),%edx
   1e12f:	48 83 c0 02          	add    $0x2,%rax
   1e133:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e138:	48 89 54 f4 40       	mov    %rdx,0x40(%rsp,%rsi,8)
   1e13d:	49 8b 0c 24          	mov    (%r12),%rcx
   1e141:	e9 5a fd ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e146:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e149:	83 f8 3f             	cmp    $0x3f,%eax
   1e14c:	0f 87 f3 fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e152:	89 c2                	mov    %eax,%edx
   1e154:	8d 43 fe             	lea    -0x2(%rbx),%eax
   1e157:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   1e15c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1e161:	83 f8 3f             	cmp    $0x3f,%eax
   1e164:	0f 87 db fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e16a:	89 c1                	mov    %eax,%ecx
   1e16c:	8d 43 fd             	lea    -0x3(%rbx),%eax
   1e16f:	48 8b 7c cc 40       	mov    0x40(%rsp,%rcx,8),%rdi
   1e174:	83 f8 3f             	cmp    $0x3f,%eax
   1e177:	0f 87 c8 fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e17d:	4c 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%r9
   1e182:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   1e187:	4c 89 4c cc 40       	mov    %r9,0x40(%rsp,%rcx,8)
   1e18c:	49 8b 0c 24          	mov    (%r12),%rcx
   1e190:	48 89 7c d4 40       	mov    %rdi,0x40(%rsp,%rdx,8)
   1e195:	e9 06 fd ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e19a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e19d:	83 f8 3f             	cmp    $0x3f,%eax
   1e1a0:	0f 87 9f fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e1a6:	89 c2                	mov    %eax,%edx
   1e1a8:	83 eb 02             	sub    $0x2,%ebx
   1e1ab:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1e1b0:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e1b5:	83 fb 3f             	cmp    $0x3f,%ebx
   1e1b8:	0f 87 87 fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e1be:	48 21 54 dc 40       	and    %rdx,0x40(%rsp,%rbx,8)
   1e1c3:	49 8b 0c 24          	mov    (%r12),%rcx
   1e1c7:	89 c3                	mov    %eax,%ebx
   1e1c9:	e9 d2 fc ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e1ce:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e1d1:	83 f8 3f             	cmp    $0x3f,%eax
   1e1d4:	0f 87 6b fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e1da:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1e1df:	83 fb 40             	cmp    $0x40,%ebx
   1e1e2:	0f 84 5d fc ff ff    	je     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e1e8:	89 d8                	mov    %ebx,%eax
   1e1ea:	49 8b 0c 24          	mov    (%r12),%rcx
   1e1ee:	83 c3 01             	add    $0x1,%ebx
   1e1f1:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1e1f6:	e9 a5 fc ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e1fb:	83 eb 01             	sub    $0x1,%ebx
   1e1fe:	83 fb 3f             	cmp    $0x3f,%ebx
   1e201:	0f 86 8b fc ff ff    	jbe    1de92 <_ULx86_64_dwarf_eval_expr+0x162>
   1e207:	e9 39 fc ff ff       	jmp    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e20c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e210:	8d 43 fe             	lea    -0x2(%rbx),%eax
   1e213:	83 f8 3f             	cmp    $0x3f,%eax
   1e216:	0f 87 29 fc ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e21c:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1e221:	83 fb 3f             	cmp    $0x3f,%ebx
   1e224:	76 c2                	jbe    1e1e8 <_ULx86_64_dwarf_eval_expr+0x4b8>
   1e226:	e9 1a fc ff ff       	jmp    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e22b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e230:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e233:	29 e8                	sub    %ebp,%eax
   1e235:	83 f8 3f             	cmp    $0x3f,%eax
   1e238:	76 e2                	jbe    1e21c <_ULx86_64_dwarf_eval_expr+0x4ec>
   1e23a:	e9 06 fc ff ff       	jmp    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e23f:	90                   	nop
   1e240:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e243:	83 f8 3f             	cmp    $0x3f,%eax
   1e246:	0f 87 f9 fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e24c:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   1e251:	8d 53 fe             	lea    -0x2(%rbx),%edx
   1e254:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1e259:	83 fa 3f             	cmp    $0x3f,%edx
   1e25c:	0f 87 e3 fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e262:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   1e267:	48 89 4c d4 40       	mov    %rcx,0x40(%rsp,%rdx,8)
   1e26c:	49 8b 0c 24          	mov    (%r12),%rcx
   1e270:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   1e275:	e9 26 fc ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e27a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e27d:	83 f8 3f             	cmp    $0x3f,%eax
   1e280:	0f 87 bf fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e286:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1e28b:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e290:	48 8b 0a             	mov    (%rdx),%rcx
   1e293:	48 83 c2 08          	add    $0x8,%rdx
   1e297:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e29c:	48 89 4c c4 40       	mov    %rcx,0x40(%rsp,%rax,8)
   1e2a1:	49 8b 0c 24          	mov    (%r12),%rcx
   1e2a5:	e9 f6 fb ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e2aa:	31 c0                	xor    %eax,%eax
   1e2ac:	48 83 fd 10          	cmp    $0x10,%rbp
   1e2b0:	0f 87 b2 fd ff ff    	ja     1e068 <_ULx86_64_dwarf_eval_expr+0x338>
   1e2b6:	48 8d 05 b3 42 00 00 	lea    0x42b3(%rip),%rax        # 22570 <_ULx86_64_dwarf_to_unw_regnum_map>
   1e2bd:	0f b6 04 28          	movzbl (%rax,%rbp,1),%eax
   1e2c1:	e9 a2 fd ff ff       	jmp    1e068 <_ULx86_64_dwarf_eval_expr+0x338>
   1e2c6:	8d 73 ff             	lea    -0x1(%rbx),%esi
   1e2c9:	83 fe 3f             	cmp    $0x3f,%esi
   1e2cc:	0f 87 73 fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e2d2:	89 f0                	mov    %esi,%eax
   1e2d4:	83 eb 02             	sub    $0x2,%ebx
   1e2d7:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   1e2dc:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1e2e1:	83 fb 3f             	cmp    $0x3f,%ebx
   1e2e4:	0f 87 5b fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e2ea:	48 85 c9             	test   %rcx,%rcx
   1e2ed:	74 12                	je     1e301 <_ULx86_64_dwarf_eval_expr+0x5d1>
   1e2ef:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1e2f4:	48 99                	cqto   
   1e2f6:	48 f7 f9             	idiv   %rcx
   1e2f9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e2fe:	48 89 c1             	mov    %rax,%rcx
   1e301:	48 89 4c dc 40       	mov    %rcx,0x40(%rsp,%rbx,8)
   1e306:	49 8b 0c 24          	mov    (%r12),%rcx
   1e30a:	89 f3                	mov    %esi,%ebx
   1e30c:	e9 8f fb ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e311:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e314:	83 fa 3f             	cmp    $0x3f,%edx
   1e317:	0f 87 28 fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e31d:	89 d0                	mov    %edx,%eax
   1e31f:	83 eb 02             	sub    $0x2,%ebx
   1e322:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e327:	83 fb 3f             	cmp    $0x3f,%ebx
   1e32a:	0f 87 15 fb ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e330:	48 8b 7c dc 40       	mov    0x40(%rsp,%rbx,8),%rdi
   1e335:	49 8b 0c 24          	mov    (%r12),%rcx
   1e339:	48 29 c7             	sub    %rax,%rdi
   1e33c:	48 89 7c dc 40       	mov    %rdi,0x40(%rsp,%rbx,8)
   1e341:	89 d3                	mov    %edx,%ebx
   1e343:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   1e348:	e9 53 fb ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e34d:	8d 73 ff             	lea    -0x1(%rbx),%esi
   1e350:	83 fe 3f             	cmp    $0x3f,%esi
   1e353:	0f 87 ec fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e359:	89 f0                	mov    %esi,%eax
   1e35b:	83 eb 02             	sub    $0x2,%ebx
   1e35e:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1e363:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e368:	83 fb 3f             	cmp    $0x3f,%ebx
   1e36b:	0f 87 d4 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e371:	48 85 d2             	test   %rdx,%rdx
   1e374:	74 12                	je     1e388 <_ULx86_64_dwarf_eval_expr+0x658>
   1e376:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1e37b:	48 89 d7             	mov    %rdx,%rdi
   1e37e:	31 d2                	xor    %edx,%edx
   1e380:	48 f7 f7             	div    %rdi
   1e383:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e388:	48 89 54 dc 40       	mov    %rdx,0x40(%rsp,%rbx,8)
   1e38d:	49 8b 0c 24          	mov    (%r12),%rcx
   1e391:	89 f3                	mov    %esi,%ebx
   1e393:	e9 08 fb ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e398:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e39b:	83 fa 3f             	cmp    $0x3f,%edx
   1e39e:	0f 87 a1 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e3a4:	89 d0                	mov    %edx,%eax
   1e3a6:	83 eb 02             	sub    $0x2,%ebx
   1e3a9:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e3ae:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e3b3:	83 fb 3f             	cmp    $0x3f,%ebx
   1e3b6:	0f 87 89 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e3bc:	48 85 c0             	test   %rax,%rax
   1e3bf:	74 0b                	je     1e3cc <_ULx86_64_dwarf_eval_expr+0x69c>
   1e3c1:	48 0f af 44 dc 40    	imul   0x40(%rsp,%rbx,8),%rax
   1e3c7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e3cc:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e3d1:	49 8b 0c 24          	mov    (%r12),%rcx
   1e3d5:	89 d3                	mov    %edx,%ebx
   1e3d7:	e9 c4 fa ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e3dc:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e3df:	83 f8 3f             	cmp    $0x3f,%eax
   1e3e2:	0f 87 5d fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e3e8:	48 f7 5c c4 40       	negq   0x40(%rsp,%rax,8)
   1e3ed:	49 8b 0c 24          	mov    (%r12),%rcx
   1e3f1:	e9 aa fa ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e3f6:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e3f9:	83 f8 3f             	cmp    $0x3f,%eax
   1e3fc:	0f 87 43 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e402:	48 f7 54 c4 40       	notq   0x40(%rsp,%rax,8)
   1e407:	49 8b 0c 24          	mov    (%r12),%rcx
   1e40b:	e9 90 fa ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e410:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e413:	83 f8 3f             	cmp    $0x3f,%eax
   1e416:	0f 87 29 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e41c:	89 c2                	mov    %eax,%edx
   1e41e:	83 eb 02             	sub    $0x2,%ebx
   1e421:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1e426:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e42b:	83 fb 3f             	cmp    $0x3f,%ebx
   1e42e:	0f 87 11 fa ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e434:	48 09 54 dc 40       	or     %rdx,0x40(%rsp,%rbx,8)
   1e439:	49 8b 0c 24          	mov    (%r12),%rcx
   1e43d:	89 c3                	mov    %eax,%ebx
   1e43f:	e9 5c fa ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e444:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e447:	83 f8 3f             	cmp    $0x3f,%eax
   1e44a:	0f 87 f5 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e450:	89 c2                	mov    %eax,%edx
   1e452:	83 eb 02             	sub    $0x2,%ebx
   1e455:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1e45a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e45f:	83 fb 3f             	cmp    $0x3f,%ebx
   1e462:	0f 87 dd f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e468:	48 01 54 dc 40       	add    %rdx,0x40(%rsp,%rbx,8)
   1e46d:	49 8b 0c 24          	mov    (%r12),%rcx
   1e471:	89 c3                	mov    %eax,%ebx
   1e473:	e9 28 fa ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e478:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e47b:	83 f8 3f             	cmp    $0x3f,%eax
   1e47e:	0f 87 c1 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e484:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1e489:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e48e:	48 01 ea             	add    %rbp,%rdx
   1e491:	e9 f7 f9 ff ff       	jmp    1de8d <_ULx86_64_dwarf_eval_expr+0x15d>
   1e496:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e499:	83 f8 3f             	cmp    $0x3f,%eax
   1e49c:	0f 87 a3 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e4a2:	89 c2                	mov    %eax,%edx
   1e4a4:	83 eb 02             	sub    $0x2,%ebx
   1e4a7:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1e4ac:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1e4b1:	83 fb 3f             	cmp    $0x3f,%ebx
   1e4b4:	0f 87 8b f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e4ba:	48 d3 64 dc 40       	shlq   %cl,0x40(%rsp,%rbx,8)
   1e4bf:	49 8b 0c 24          	mov    (%r12),%rcx
   1e4c3:	89 c3                	mov    %eax,%ebx
   1e4c5:	e9 d6 f9 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e4ca:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e4cd:	83 f8 3f             	cmp    $0x3f,%eax
   1e4d0:	0f 87 6f f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e4d6:	89 c2                	mov    %eax,%edx
   1e4d8:	83 eb 02             	sub    $0x2,%ebx
   1e4db:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1e4e0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1e4e5:	83 fb 3f             	cmp    $0x3f,%ebx
   1e4e8:	0f 87 57 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e4ee:	48 d3 6c dc 40       	shrq   %cl,0x40(%rsp,%rbx,8)
   1e4f3:	49 8b 0c 24          	mov    (%r12),%rcx
   1e4f7:	89 c3                	mov    %eax,%ebx
   1e4f9:	e9 a2 f9 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e4fe:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e501:	83 f8 3f             	cmp    $0x3f,%eax
   1e504:	0f 87 3b f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e50a:	89 c2                	mov    %eax,%edx
   1e50c:	83 eb 02             	sub    $0x2,%ebx
   1e50f:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1e514:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1e519:	83 fb 3f             	cmp    $0x3f,%ebx
   1e51c:	0f 87 23 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e522:	48 d3 7c dc 40       	sarq   %cl,0x40(%rsp,%rbx,8)
   1e527:	49 8b 0c 24          	mov    (%r12),%rcx
   1e52b:	89 c3                	mov    %eax,%ebx
   1e52d:	e9 6e f9 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e532:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1e535:	83 f8 3f             	cmp    $0x3f,%eax
   1e538:	0f 87 07 f9 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e53e:	89 c2                	mov    %eax,%edx
   1e540:	83 eb 02             	sub    $0x2,%ebx
   1e543:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1e548:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1e54d:	83 fb 3f             	cmp    $0x3f,%ebx
   1e550:	0f 87 ef f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e556:	48 31 54 dc 40       	xor    %rdx,0x40(%rsp,%rbx,8)
   1e55b:	49 8b 0c 24          	mov    (%r12),%rcx
   1e55f:	89 c3                	mov    %eax,%ebx
   1e561:	e9 3a f9 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e566:	83 eb 01             	sub    $0x1,%ebx
   1e569:	83 fb 3f             	cmp    $0x3f,%ebx
   1e56c:	0f 87 d3 f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e572:	89 d8                	mov    %ebx,%eax
   1e574:	49 8b 0c 24          	mov    (%r12),%rcx
   1e578:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e57d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e582:	48 85 c0             	test   %rax,%rax
   1e585:	0f 84 15 f9 ff ff    	je     1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e58b:	48 0f bf c5          	movswq %bp,%rax
   1e58f:	48 01 c1             	add    %rax,%rcx
   1e592:	49 89 0c 24          	mov    %rcx,(%r12)
   1e596:	e9 05 f9 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e59b:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e59e:	83 fa 3f             	cmp    $0x3f,%edx
   1e5a1:	0f 87 9e f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e5a7:	89 d0                	mov    %edx,%eax
   1e5a9:	83 eb 02             	sub    $0x2,%ebx
   1e5ac:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e5b1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e5b6:	83 fb 3f             	cmp    $0x3f,%ebx
   1e5b9:	0f 87 86 f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e5bf:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   1e5c4:	49 8b 0c 24          	mov    (%r12),%rcx
   1e5c8:	0f 94 c0             	sete   %al
   1e5cb:	0f b6 c0             	movzbl %al,%eax
   1e5ce:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e5d3:	89 d3                	mov    %edx,%ebx
   1e5d5:	e9 c6 f8 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e5da:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e5dd:	83 fa 3f             	cmp    $0x3f,%edx
   1e5e0:	0f 87 5f f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e5e6:	89 d0                	mov    %edx,%eax
   1e5e8:	83 eb 02             	sub    $0x2,%ebx
   1e5eb:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e5f0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e5f5:	83 fb 3f             	cmp    $0x3f,%ebx
   1e5f8:	0f 87 47 f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e5fe:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1e603:	49 8b 0c 24          	mov    (%r12),%rcx
   1e607:	0f 9e c0             	setle  %al
   1e60a:	0f b6 c0             	movzbl %al,%eax
   1e60d:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e612:	89 d3                	mov    %edx,%ebx
   1e614:	e9 87 f8 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e619:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e61c:	83 fa 3f             	cmp    $0x3f,%edx
   1e61f:	0f 87 20 f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e625:	89 d0                	mov    %edx,%eax
   1e627:	83 eb 02             	sub    $0x2,%ebx
   1e62a:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e62f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e634:	83 fb 3f             	cmp    $0x3f,%ebx
   1e637:	0f 87 08 f8 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e63d:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1e642:	49 8b 0c 24          	mov    (%r12),%rcx
   1e646:	0f 9c c0             	setl   %al
   1e649:	0f b6 c0             	movzbl %al,%eax
   1e64c:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e651:	89 d3                	mov    %edx,%ebx
   1e653:	e9 48 f8 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e658:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e65b:	83 fa 3f             	cmp    $0x3f,%edx
   1e65e:	0f 87 e1 f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e664:	89 d0                	mov    %edx,%eax
   1e666:	83 eb 02             	sub    $0x2,%ebx
   1e669:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e66e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e673:	83 fb 3f             	cmp    $0x3f,%ebx
   1e676:	0f 87 c9 f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e67c:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1e681:	49 8b 0c 24          	mov    (%r12),%rcx
   1e685:	0f 9d c0             	setge  %al
   1e688:	0f b6 c0             	movzbl %al,%eax
   1e68b:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e690:	89 d3                	mov    %edx,%ebx
   1e692:	e9 09 f8 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e697:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e69a:	83 fa 3f             	cmp    $0x3f,%edx
   1e69d:	0f 87 a2 f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e6a3:	89 d0                	mov    %edx,%eax
   1e6a5:	83 eb 02             	sub    $0x2,%ebx
   1e6a8:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e6ad:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e6b2:	83 fb 3f             	cmp    $0x3f,%ebx
   1e6b5:	0f 87 8a f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e6bb:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1e6c0:	49 8b 0c 24          	mov    (%r12),%rcx
   1e6c4:	0f 9f c0             	setg   %al
   1e6c7:	0f b6 c0             	movzbl %al,%eax
   1e6ca:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1e6cf:	89 d3                	mov    %edx,%ebx
   1e6d1:	e9 ca f7 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e6d6:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1e6d9:	83 fa 3f             	cmp    $0x3f,%edx
   1e6dc:	0f 87 63 f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e6e2:	89 d0                	mov    %edx,%eax
   1e6e4:	83 eb 02             	sub    $0x2,%ebx
   1e6e7:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1e6ec:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e6f1:	83 fb 3f             	cmp    $0x3f,%ebx
   1e6f4:	0f 87 4b f7 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e6fa:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   1e6ff:	0f 95 c0             	setne  %al
   1e702:	0f b6 c0             	movzbl %al,%eax
   1e705:	e9 c2 fc ff ff       	jmp    1e3cc <_ULx86_64_dwarf_eval_expr+0x69c>
   1e70a:	48 0f bf cd          	movswq %bp,%rcx
   1e70e:	49 03 0c 24          	add    (%r12),%rcx
   1e712:	49 89 0c 24          	mov    %rcx,(%r12)
   1e716:	e9 85 f7 ff ff       	jmp    1dea0 <_ULx86_64_dwarf_eval_expr+0x170>
   1e71b:	48 89 e8             	mov    %rbp,%rax
   1e71e:	48 0d 00 ff ff ff    	or     $0xffffffffffffff00,%rax
   1e724:	40 f6 c5 80          	test   $0x80,%bpl
   1e728:	48 0f 45 e8          	cmovne %rax,%rbp
   1e72c:	83 fb 3f             	cmp    $0x3f,%ebx
   1e72f:	0f 86 94 f8 ff ff    	jbe    1dfc9 <_ULx86_64_dwarf_eval_expr+0x299>
   1e735:	e9 0b f7 ff ff       	jmp    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e740:	48 89 e8             	mov    %rbp,%rax
   1e743:	48 0d 00 00 ff ff    	or     $0xffffffffffff0000,%rax
   1e749:	f7 c5 00 80 00 00    	test   $0x8000,%ebp
   1e74f:	48 0f 45 e8          	cmovne %rax,%rbp
   1e753:	83 fb 3f             	cmp    $0x3f,%ebx
   1e756:	0f 86 6d f8 ff ff    	jbe    1dfc9 <_ULx86_64_dwarf_eval_expr+0x299>
   1e75c:	e9 e4 f6 ff ff       	jmp    1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e761:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e768:	48 8d 55 fb          	lea    -0x5(%rbp),%rdx
   1e76c:	48 83 fa 03          	cmp    $0x3,%rdx
   1e770:	0f 87 cf f6 ff ff    	ja     1de45 <_ULx86_64_dwarf_eval_expr+0x115>
   1e776:	48 8b 10             	mov    (%rax),%rdx
   1e779:	48 83 c0 08          	add    $0x8,%rax
   1e77d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e782:	48 83 fd 08          	cmp    $0x8,%rbp
   1e786:	0f 84 ac f9 ff ff    	je     1e138 <_ULx86_64_dwarf_eval_expr+0x408>
   1e78c:	8d 0c ed 00 00 00 00 	lea    0x0(,%rbp,8),%ecx
   1e793:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1e79a:	48 d3 e0             	shl    %cl,%rax
   1e79d:	48 21 c2             	and    %rax,%rdx
   1e7a0:	e9 93 f9 ff ff       	jmp    1e138 <_ULx86_64_dwarf_eval_expr+0x408>
   1e7a5:	49 8b 14 24          	mov    (%r12),%rdx
   1e7a9:	31 c9                	xor    %ecx,%ecx
   1e7ab:	45 31 d2             	xor    %r10d,%r10d
   1e7ae:	66 90                	xchg   %ax,%ax
   1e7b0:	44 0f b6 0a          	movzbl (%rdx),%r9d
   1e7b4:	48 83 c2 01          	add    $0x1,%rdx
   1e7b8:	49 89 14 24          	mov    %rdx,(%r12)
   1e7bc:	4c 89 ce             	mov    %r9,%rsi
   1e7bf:	83 e6 7f             	and    $0x7f,%esi
   1e7c2:	48 d3 e6             	shl    %cl,%rsi
   1e7c5:	48 83 c1 07          	add    $0x7,%rcx
   1e7c9:	49 09 f2             	or     %rsi,%r10
   1e7cc:	45 84 c9             	test   %r9b,%r9b
   1e7cf:	78 df                	js     1e7b0 <_ULx86_64_dwarf_eval_expr+0xa80>
   1e7d1:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1e7d6:	e9 18 f6 ff ff       	jmp    1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e7db:	49 8b 14 24          	mov    (%r12),%rdx
   1e7df:	31 c9                	xor    %ecx,%ecx
   1e7e1:	45 31 d2             	xor    %r10d,%r10d
   1e7e4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e7e8:	44 0f b6 0a          	movzbl (%rdx),%r9d
   1e7ec:	48 83 c2 01          	add    $0x1,%rdx
   1e7f0:	49 89 14 24          	mov    %rdx,(%r12)
   1e7f4:	4c 89 ce             	mov    %r9,%rsi
   1e7f7:	83 e6 7f             	and    $0x7f,%esi
   1e7fa:	48 d3 e6             	shl    %cl,%rsi
   1e7fd:	48 83 c1 07          	add    $0x7,%rcx
   1e801:	49 09 f2             	or     %rsi,%r10
   1e804:	45 84 c9             	test   %r9b,%r9b
   1e807:	78 df                	js     1e7e8 <_ULx86_64_dwarf_eval_expr+0xab8>
   1e809:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1e80e:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1e812:	0f 87 db f5 ff ff    	ja     1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e818:	41 83 e1 40          	and    $0x40,%r9d
   1e81c:	0f 84 d1 f5 ff ff    	je     1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e822:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1e829:	48 d3 e2             	shl    %cl,%rdx
   1e82c:	49 09 d2             	or     %rdx,%r10
   1e82f:	eb a0                	jmp    1e7d1 <_ULx86_64_dwarf_eval_expr+0xaa1>
   1e831:	49 8b 14 24          	mov    (%r12),%rdx
   1e835:	0f b7 32             	movzwl (%rdx),%esi
   1e838:	48 83 c2 02          	add    $0x2,%rdx
   1e83c:	49 89 14 24          	mov    %rdx,(%r12)
   1e840:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1e845:	e9 a9 f5 ff ff       	jmp    1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e84a:	49 8b 14 24          	mov    (%r12),%rdx
   1e84e:	0f b6 32             	movzbl (%rdx),%esi
   1e851:	48 83 c2 01          	add    $0x1,%rdx
   1e855:	49 89 14 24          	mov    %rdx,(%r12)
   1e859:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1e85e:	e9 90 f5 ff ff       	jmp    1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e863:	49 8b 14 24          	mov    (%r12),%rdx
   1e867:	8b 32                	mov    (%rdx),%esi
   1e869:	48 83 c2 04          	add    $0x4,%rdx
   1e86d:	49 89 14 24          	mov    %rdx,(%r12)
   1e871:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1e876:	e9 78 f5 ff ff       	jmp    1ddf3 <_ULx86_64_dwarf_eval_expr+0xc3>
   1e87b:	0f b6 10             	movzbl (%rax),%edx
   1e87e:	48 83 c0 01          	add    $0x1,%rax
   1e882:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e887:	e9 ac f8 ff ff       	jmp    1e138 <_ULx86_64_dwarf_eval_expr+0x408>
   1e88c:	8b 10                	mov    (%rax),%edx
   1e88e:	48 83 c0 04          	add    $0x4,%rax
   1e892:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e897:	89 d0                	mov    %edx,%eax
   1e899:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
   1e89f:	48 83 fd 03          	cmp    $0x3,%rbp
   1e8a3:	48 0f 45 d0          	cmovne %rax,%rdx
   1e8a7:	e9 8c f8 ff ff       	jmp    1e138 <_ULx86_64_dwarf_eval_expr+0x408>
   1e8ac:	e8 9f 02 ff ff       	call   eb50 <__stack_chk_fail>
   1e8b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e8b8:	00 00 00 
   1e8bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001e8c0 <_ULx86_64_dwarf_callback>:
   1e8c0:	f3 0f 1e fa          	endbr64 
   1e8c4:	41 57                	push   %r15
   1e8c6:	41 56                	push   %r14
   1e8c8:	41 55                	push   %r13
   1e8ca:	41 54                	push   %r12
   1e8cc:	55                   	push   %rbp
   1e8cd:	53                   	push   %rbx
   1e8ce:	48 83 ec 68          	sub    $0x68,%rsp
   1e8d2:	4c 8b 2a             	mov    (%rdx),%r13
   1e8d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e8dc:	00 00 
   1e8de:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1e8e3:	31 c0                	xor    %eax,%eax
   1e8e5:	48 83 fe 19          	cmp    $0x19,%rsi
   1e8e9:	0f 86 97 03 00 00    	jbe    1ec86 <_ULx86_64_dwarf_callback+0x3c6>
   1e8ef:	0f b7 4f 18          	movzwl 0x18(%rdi),%ecx
   1e8f3:	49 89 d6             	mov    %rdx,%r14
   1e8f6:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1e8fa:	48 89 fd             	mov    %rdi,%rbp
   1e8fd:	4c 8b 27             	mov    (%rdi),%r12
   1e900:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1e904:	48 85 c9             	test   %rcx,%rcx
   1e907:	0f 84 8b 02 00 00    	je     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1e90d:	31 db                	xor    %ebx,%ebx
   1e90f:	45 31 ff             	xor    %r15d,%r15d
   1e912:	31 f6                	xor    %esi,%esi
   1e914:	31 ff                	xor    %edi,%edi
   1e916:	eb 29                	jmp    1e941 <_ULx86_64_dwarf_callback+0x81>
   1e918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e91f:	00 
   1e920:	81 f9 50 e5 74 64    	cmp    $0x6474e550,%ecx
   1e926:	0f 84 94 02 00 00    	je     1ebc0 <_ULx86_64_dwarf_callback+0x300>
   1e92c:	83 f9 02             	cmp    $0x2,%ecx
   1e92f:	48 0f 44 f0          	cmove  %rax,%rsi
   1e933:	48 83 ea 01          	sub    $0x1,%rdx
   1e937:	48 83 c0 38          	add    $0x38,%rax
   1e93b:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1e93f:	74 3a                	je     1e97b <_ULx86_64_dwarf_callback+0xbb>
   1e941:	8b 08                	mov    (%rax),%ecx
   1e943:	83 f9 01             	cmp    $0x1,%ecx
   1e946:	75 d8                	jne    1e920 <_ULx86_64_dwarf_callback+0x60>
   1e948:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1e94c:	4c 01 e1             	add    %r12,%rcx
   1e94f:	49 39 cd             	cmp    %rcx,%r13
   1e952:	72 0e                	jb     1e962 <_ULx86_64_dwarf_callback+0xa2>
   1e954:	4c 8b 40 28          	mov    0x28(%rax),%r8
   1e958:	49 01 c8             	add    %rcx,%r8
   1e95b:	4d 39 e8             	cmp    %r13,%r8
   1e95e:	4c 0f 47 f8          	cmova  %rax,%r15
   1e962:	48 03 48 20          	add    0x20(%rax),%rcx
   1e966:	48 39 cb             	cmp    %rcx,%rbx
   1e969:	48 0f 42 d9          	cmovb  %rcx,%rbx
   1e96d:	48 83 ea 01          	sub    $0x1,%rdx
   1e971:	48 83 c0 38          	add    $0x38,%rax
   1e975:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1e979:	75 c6                	jne    1e941 <_ULx86_64_dwarf_callback+0x81>
   1e97b:	4d 85 ff             	test   %r15,%r15
   1e97e:	0f 84 14 02 00 00    	je     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1e984:	48 85 ff             	test   %rdi,%rdi
   1e987:	0f 84 55 03 00 00    	je     1ece2 <_ULx86_64_dwarf_callback+0x422>
   1e98d:	4d 89 e3             	mov    %r12,%r11
   1e990:	4c 03 5f 10          	add    0x10(%rdi),%r11
   1e994:	0f 84 fe 01 00 00    	je     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1e99a:	41 8b 46 10          	mov    0x10(%r14),%eax
   1e99e:	4d 8b 56 08          	mov    0x8(%r14),%r10
   1e9a2:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1e9a6:	48 85 f6             	test   %rsi,%rsi
   1e9a9:	0f 84 31 02 00 00    	je     1ebe0 <_ULx86_64_dwarf_callback+0x320>
   1e9af:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1e9b3:	4c 01 e0             	add    %r12,%rax
   1e9b6:	48 8b 10             	mov    (%rax),%rdx
   1e9b9:	48 85 d2             	test   %rdx,%rdx
   1e9bc:	75 1b                	jne    1e9d9 <_ULx86_64_dwarf_callback+0x119>
   1e9be:	e9 0d 02 00 00       	jmp    1ebd0 <_ULx86_64_dwarf_callback+0x310>
   1e9c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e9c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1e9cc:	48 83 c0 10          	add    $0x10,%rax
   1e9d0:	48 85 d2             	test   %rdx,%rdx
   1e9d3:	0f 84 f7 01 00 00    	je     1ebd0 <_ULx86_64_dwarf_callback+0x310>
   1e9d9:	48 83 fa 03          	cmp    $0x3,%rdx
   1e9dd:	75 e9                	jne    1e9c8 <_ULx86_64_dwarf_callback+0x108>
   1e9df:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e9e3:	49 89 46 38          	mov    %rax,0x38(%r14)
   1e9e7:	49 89 42 20          	mov    %rax,0x20(%r10)
   1e9eb:	41 80 3b 01          	cmpb   $0x1,(%r11)
   1e9ef:	0f 85 a3 01 00 00    	jne    1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1e9f5:	48 8b 3d 84 b8 00 00 	mov    0xb884(%rip),%rdi        # 2a280 <_ULx86_64_local_addr_space>
   1e9fc:	4c 89 1c 24          	mov    %r11,(%rsp)
   1ea00:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ea05:	e8 36 e3 ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1ea0a:	4c 8b 1c 24          	mov    (%rsp),%r11
   1ea0e:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1ea13:	48 83 ec 08          	sub    $0x8,%rsp
   1ea17:	48 89 c6             	mov    %rax,%rsi
   1ea1a:	48 8b 3d 5f b8 00 00 	mov    0xb85f(%rip),%rdi        # 2a280 <_ULx86_64_local_addr_space>
   1ea21:	49 8d 43 04          	lea    0x4(%r11),%rax
   1ea25:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1ea2a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1ea2f:	41 0f b6 4b 01       	movzbl 0x1(%r11),%ecx
   1ea34:	6a 00                	push   $0x0
   1ea36:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1ea3b:	4d 89 d0             	mov    %r10,%r8
   1ea3e:	4c 8d 4c 24 50       	lea    0x50(%rsp),%r9
   1ea43:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1ea48:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1ea4d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1ea52:	e8 f9 c1 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1ea57:	41 5b                	pop    %r11
   1ea59:	5a                   	pop    %rdx
   1ea5a:	85 c0                	test   %eax,%eax
   1ea5c:	0f 88 38 01 00 00    	js     1eb9a <_ULx86_64_dwarf_callback+0x2da>
   1ea62:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1ea67:	48 83 ec 08          	sub    $0x8,%rsp
   1ea6b:	48 8b 3d 0e b8 00 00 	mov    0xb80e(%rip),%rdi        # 2a280 <_ULx86_64_local_addr_space>
   1ea72:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   1ea77:	6a 00                	push   $0x0
   1ea79:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1ea7e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1ea83:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1ea88:	4c 8d 4c 24 58       	lea    0x58(%rsp),%r9
   1ea8d:	4d 89 d0             	mov    %r10,%r8
   1ea90:	e8 bb c1 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1ea95:	41 59                	pop    %r9
   1ea97:	41 5a                	pop    %r10
   1ea99:	85 c0                	test   %eax,%eax
   1ea9b:	0f 88 f9 00 00 00    	js     1eb9a <_ULx86_64_dwarf_callback+0x2da>
   1eaa1:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1eaa6:	41 80 7b 03 3b       	cmpb   $0x3b,0x3(%r11)
   1eaab:	0f 84 3e 01 00 00    	je     1ebef <_ULx86_64_dwarf_callback+0x32f>
   1eab1:	41 80 7b 02 ff       	cmpb   $0xff,0x2(%r11)
   1eab6:	41 0f b6 43 01       	movzbl 0x1(%r11),%eax
   1eabb:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1eac0:	0f 84 73 01 00 00    	je     1ec39 <_ULx86_64_dwarf_callback+0x379>
   1eac6:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1eacb:	3c ff                	cmp    $0xff,%al
   1eacd:	0f 84 0f 02 00 00    	je     1ece2 <_ULx86_64_dwarf_callback+0x422>
   1ead3:	4c 8b 25 a6 b7 00 00 	mov    0xb7a6(%rip),%r12        # 2a280 <_ULx86_64_local_addr_space>
   1eada:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   1eadf:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1eae4:	4c 89 e7             	mov    %r12,%rdi
   1eae7:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1eaec:	4c 89 04 24          	mov    %r8,(%rsp)
   1eaf0:	e8 4b e2 ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1eaf5:	4c 8b 04 24          	mov    (%rsp),%r8
   1eaf9:	4d 85 ff             	test   %r15,%r15
   1eafc:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1eb01:	48 89 c5             	mov    %rax,%rbp
   1eb04:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   1eb09:	0f 84 89 00 00 00    	je     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1eb0f:	45 31 ff             	xor    %r15d,%r15d
   1eb12:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1eb17:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1eb1c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1eb21:	4c 89 fb             	mov    %r15,%rbx
   1eb24:	4d 89 c5             	mov    %r8,%r13
   1eb27:	49 89 d7             	mov    %rdx,%r15
   1eb2a:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1eb2f:	4d 89 d6             	mov    %r10,%r14
   1eb32:	4c 89 04 24          	mov    %r8,(%rsp)
   1eb36:	eb 52                	jmp    1eb8a <_ULx86_64_dwarf_callback+0x2ca>
   1eb38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1eb3f:	00 
   1eb40:	6a 00                	push   $0x0
   1eb42:	4d 89 e8             	mov    %r13,%r8
   1eb45:	4c 89 e7             	mov    %r12,%rdi
   1eb48:	45 31 c9             	xor    %r9d,%r9d
   1eb4b:	6a 00                	push   $0x0
   1eb4d:	4c 89 f1             	mov    %r14,%rcx
   1eb50:	4c 89 fa             	mov    %r15,%rdx
   1eb53:	48 89 ee             	mov    %rbp,%rsi
   1eb56:	e8 45 07 00 00       	call   1f2a0 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1eb5b:	5f                   	pop    %rdi
   1eb5c:	41 58                	pop    %r8
   1eb5e:	85 c0                	test   %eax,%eax
   1eb60:	78 36                	js     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1eb62:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1eb67:	49 3b 06             	cmp    (%r14),%rax
   1eb6a:	72 0a                	jb     1eb76 <_ULx86_64_dwarf_callback+0x2b6>
   1eb6c:	49 3b 46 08          	cmp    0x8(%r14),%rax
   1eb70:	0f 82 1a 01 00 00    	jb     1ec90 <_ULx86_64_dwarf_callback+0x3d0>
   1eb76:	48 83 c3 01          	add    $0x1,%rbx
   1eb7a:	48 39 5c 24 20       	cmp    %rbx,0x20(%rsp)
   1eb7f:	76 17                	jbe    1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1eb81:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1eb86:	48 89 04 24          	mov    %rax,(%rsp)
   1eb8a:	48 8b 3c 24          	mov    (%rsp),%rdi
   1eb8e:	48 39 7c 24 10       	cmp    %rdi,0x10(%rsp)
   1eb93:	77 ab                	ja     1eb40 <_ULx86_64_dwarf_callback+0x280>
   1eb95:	0f 1f 00             	nopl   (%rax)
   1eb98:	31 c0                	xor    %eax,%eax
   1eb9a:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1eb9f:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1eba6:	00 00 
   1eba8:	0f 85 39 01 00 00    	jne    1ece7 <_ULx86_64_dwarf_callback+0x427>
   1ebae:	48 83 c4 68          	add    $0x68,%rsp
   1ebb2:	5b                   	pop    %rbx
   1ebb3:	5d                   	pop    %rbp
   1ebb4:	41 5c                	pop    %r12
   1ebb6:	41 5d                	pop    %r13
   1ebb8:	41 5e                	pop    %r14
   1ebba:	41 5f                	pop    %r15
   1ebbc:	c3                   	ret    
   1ebbd:	0f 1f 00             	nopl   (%rax)
   1ebc0:	48 89 c7             	mov    %rax,%rdi
   1ebc3:	e9 6b fd ff ff       	jmp    1e933 <_ULx86_64_dwarf_callback+0x73>
   1ebc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ebcf:	00 
   1ebd0:	49 8b 46 38          	mov    0x38(%r14),%rax
   1ebd4:	e9 0e fe ff ff       	jmp    1e9e7 <_ULx86_64_dwarf_callback+0x127>
   1ebd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ebe0:	49 c7 46 38 00 00 00 	movq   $0x0,0x38(%r14)
   1ebe7:	00 
   1ebe8:	31 c0                	xor    %eax,%eax
   1ebea:	e9 f8 fd ff ff       	jmp    1e9e7 <_ULx86_64_dwarf_callback+0x127>
   1ebef:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1ebf3:	4d 03 67 10          	add    0x10(%r15),%r12
   1ebf7:	41 c7 46 40 02 00 00 	movl   $0x2,0x40(%r14)
   1ebfe:	00 
   1ebff:	4d 89 66 28          	mov    %r12,0x28(%r14)
   1ec03:	4d 03 67 28          	add    0x28(%r15),%r12
   1ec07:	49 89 46 48          	mov    %rax,0x48(%r14)
   1ec0b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1ec10:	4d 89 66 30          	mov    %r12,0x30(%r14)
   1ec14:	49 89 46 60          	mov    %rax,0x60(%r14)
   1ec18:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1ec1f:	ff ff 1f 
   1ec22:	48 23 44 24 48       	and    0x48(%rsp),%rax
   1ec27:	49 89 46 58          	mov    %rax,0x58(%r14)
   1ec2b:	b8 01 00 00 00       	mov    $0x1,%eax
   1ec30:	4d 89 5e 50          	mov    %r11,0x50(%r14)
   1ec34:	e9 61 ff ff ff       	jmp    1eb9a <_ULx86_64_dwarf_callback+0x2da>
   1ec39:	48 c7 44 24 48 ff ff 	movq   $0xffffffffffffffff,0x48(%rsp)
   1ec40:	ff ff 
   1ec42:	3c ff                	cmp    $0xff,%al
   1ec44:	0f 84 98 00 00 00    	je     1ece2 <_ULx86_64_dwarf_callback+0x422>
   1ec4a:	4c 8b 25 2f b6 00 00 	mov    0xb62f(%rip),%r12        # 2a280 <_ULx86_64_local_addr_space>
   1ec51:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1ec56:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ec5b:	4c 89 e7             	mov    %r12,%rdi
   1ec5e:	4c 89 04 24          	mov    %r8,(%rsp)
   1ec62:	e8 d9 e0 ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1ec67:	4c 8b 04 24          	mov    (%rsp),%r8
   1ec6b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ec70:	48 c7 44 24 20 ff ff 	movq   $0xffffffffffffffff,0x20(%rsp)
   1ec77:	ff ff 
   1ec79:	48 89 c5             	mov    %rax,%rbp
   1ec7c:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   1ec81:	e9 89 fe ff ff       	jmp    1eb0f <_ULx86_64_dwarf_callback+0x24f>
   1ec86:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1ec8b:	e9 0a ff ff ff       	jmp    1eb9a <_ULx86_64_dwarf_callback+0x2da>
   1ec90:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1ec94:	4d 89 f2             	mov    %r14,%r10
   1ec97:	4d 89 e8             	mov    %r13,%r8
   1ec9a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   1ec9f:	4c 89 fa             	mov    %r15,%rdx
   1eca2:	85 f6                	test   %esi,%esi
   1eca4:	74 2a                	je     1ecd0 <_ULx86_64_dwarf_callback+0x410>
   1eca6:	48 8b 04 24          	mov    (%rsp),%rax
   1ecaa:	4c 89 d1             	mov    %r10,%rcx
   1ecad:	48 89 ee             	mov    %rbp,%rsi
   1ecb0:	4c 89 e7             	mov    %r12,%rdi
   1ecb3:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1ecb8:	6a 00                	push   $0x0
   1ecba:	6a 00                	push   $0x0
   1ecbc:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   1ecc1:	e8 da 05 00 00       	call   1f2a0 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1ecc6:	5a                   	pop    %rdx
   1ecc7:	59                   	pop    %rcx
   1ecc8:	85 c0                	test   %eax,%eax
   1ecca:	0f 88 c8 fe ff ff    	js     1eb98 <_ULx86_64_dwarf_callback+0x2d8>
   1ecd0:	41 c7 46 14 01 00 00 	movl   $0x1,0x14(%r14)
   1ecd7:	00 
   1ecd8:	b8 01 00 00 00       	mov    $0x1,%eax
   1ecdd:	e9 b8 fe ff ff       	jmp    1eb9a <_ULx86_64_dwarf_callback+0x2da>
   1ece2:	e8 ad 1a 00 00       	call   20794 <abort>
   1ece7:	e8 64 fe fe ff       	call   eb50 <__stack_chk_fail>
   1ecec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ecf0 <_ULx86_64_dwarf_search_unwind_table>:
   1ecf0:	f3 0f 1e fa          	endbr64 
   1ecf4:	41 57                	push   %r15
   1ecf6:	45 89 c2             	mov    %r8d,%r10d
   1ecf9:	41 56                	push   %r14
   1ecfb:	41 55                	push   %r13
   1ecfd:	49 89 cd             	mov    %rcx,%r13
   1ed00:	41 54                	push   %r12
   1ed02:	49 89 f4             	mov    %rsi,%r12
   1ed05:	55                   	push   %rbp
   1ed06:	48 89 d5             	mov    %rdx,%rbp
   1ed09:	53                   	push   %rbx
   1ed0a:	48 83 ec 38          	sub    $0x38,%rsp
   1ed0e:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1ed13:	4c 8b 4a 48          	mov    0x48(%rdx),%r9
   1ed17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ed1e:	00 00 
   1ed20:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ed25:	31 c0                	xor    %eax,%eax
   1ed27:	8b 42 28             	mov    0x28(%rdx),%eax
   1ed2a:	83 e8 02             	sub    $0x2,%eax
   1ed2d:	83 e0 fd             	and    $0xfffffffd,%eax
   1ed30:	0f 85 32 01 00 00    	jne    1ee68 <_ULx86_64_dwarf_search_unwind_table+0x178>
   1ed36:	48 8b 42 40          	mov    0x40(%rdx),%rax
   1ed3a:	49 89 fe             	mov    %rdi,%r14
   1ed3d:	45 31 c0             	xor    %r8d,%r8d
   1ed40:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   1ed47:	00 
   1ed48:	4c 89 f7             	mov    %r14,%rdi
   1ed4b:	44 89 54 24 14       	mov    %r10d,0x14(%rsp)
   1ed50:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1ed55:	4c 89 0c 24          	mov    %r9,(%rsp)
   1ed59:	e8 e2 df ff ff       	call   1cd40 <_Ux86_64_get_accessors>
   1ed5e:	4c 8b 7d 38          	mov    0x38(%rbp),%r15
   1ed62:	83 7d 28 04          	cmpl   $0x4,0x28(%rbp)
   1ed66:	48 89 c6             	mov    %rax,%rsi
   1ed69:	4c 8b 0c 24          	mov    (%rsp),%r9
   1ed6d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1ed72:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   1ed77:	4c 89 f8             	mov    %r15,%rax
   1ed7a:	75 04                	jne    1ed80 <_ULx86_64_dwarf_search_unwind_table+0x90>
   1ed7c:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1ed80:	44 89 e1             	mov    %r12d,%ecx
   1ed83:	48 c1 eb 03          	shr    $0x3,%rbx
   1ed87:	31 ff                	xor    %edi,%edi
   1ed89:	29 c1                	sub    %eax,%ecx
   1ed8b:	4c 39 35 ee b4 00 00 	cmp    %r14,0xb4ee(%rip)        # 2a280 <_ULx86_64_local_addr_space>
   1ed92:	89 c8                	mov    %ecx,%eax
   1ed94:	74 1e                	je     1edb4 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   1ed96:	e9 05 01 00 00       	jmp    1eea0 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1ed9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1eda0:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
   1eda4:	48 d1 ea             	shr    %rdx
   1eda7:	41 3b 04 d1          	cmp    (%r9,%rdx,8),%eax
   1edab:	0f 8d a7 00 00 00    	jge    1ee58 <_ULx86_64_dwarf_search_unwind_table+0x168>
   1edb1:	48 89 d3             	mov    %rdx,%rbx
   1edb4:	48 39 fb             	cmp    %rdi,%rbx
   1edb7:	77 e7                	ja     1eda0 <_ULx86_64_dwarf_search_unwind_table+0xb0>
   1edb9:	48 85 db             	test   %rbx,%rbx
   1edbc:	0f 84 de 00 00 00    	je     1eea0 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1edc2:	49 8d 44 d9 f8       	lea    -0x8(%r9,%rbx,8),%rax
   1edc7:	48 85 c0             	test   %rax,%rax
   1edca:	0f 84 d0 00 00 00    	je     1eea0 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1edd0:	48 63 40 04          	movslq 0x4(%rax),%rax
   1edd4:	4d 85 c0             	test   %r8,%r8
   1edd7:	0f 85 b3 00 00 00    	jne    1ee90 <_ULx86_64_dwarf_search_unwind_table+0x1a0>
   1eddd:	4c 01 f8             	add    %r15,%rax
   1ede0:	4d 89 f8             	mov    %r15,%r8
   1ede3:	31 ff                	xor    %edi,%edi
   1ede5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1edea:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1edef:	4c 89 e9             	mov    %r13,%rcx
   1edf2:	45 89 d1             	mov    %r10d,%r9d
   1edf5:	ff 74 24 18          	push   0x18(%rsp)
   1edf9:	57                   	push   %rdi
   1edfa:	4c 89 f7             	mov    %r14,%rdi
   1edfd:	e8 9e 04 00 00       	call   1f2a0 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1ee02:	5a                   	pop    %rdx
   1ee03:	59                   	pop    %rcx
   1ee04:	85 c0                	test   %eax,%eax
   1ee06:	78 2a                	js     1ee32 <_ULx86_64_dwarf_search_unwind_table+0x142>
   1ee08:	83 7d 28 01          	cmpl   $0x1,0x28(%rbp)
   1ee0c:	49 8b 45 00          	mov    0x0(%r13),%rax
   1ee10:	75 13                	jne    1ee25 <_ULx86_64_dwarf_search_unwind_table+0x135>
   1ee12:	4c 01 f8             	add    %r15,%rax
   1ee15:	4d 01 7d 08          	add    %r15,0x8(%r13)
   1ee19:	49 89 45 00          	mov    %rax,0x0(%r13)
   1ee1d:	49 c7 45 28 20 00 00 	movq   $0x20,0x28(%r13)
   1ee24:	00 
   1ee25:	49 39 c4             	cmp    %rax,%r12
   1ee28:	72 76                	jb     1eea0 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1ee2a:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   1ee2e:	76 70                	jbe    1eea0 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1ee30:	31 c0                	xor    %eax,%eax
   1ee32:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1ee37:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1ee3e:	00 00 
   1ee40:	75 65                	jne    1eea7 <_ULx86_64_dwarf_search_unwind_table+0x1b7>
   1ee42:	48 83 c4 38          	add    $0x38,%rsp
   1ee46:	5b                   	pop    %rbx
   1ee47:	5d                   	pop    %rbp
   1ee48:	41 5c                	pop    %r12
   1ee4a:	41 5d                	pop    %r13
   1ee4c:	41 5e                	pop    %r14
   1ee4e:	41 5f                	pop    %r15
   1ee50:	c3                   	ret    
   1ee51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ee58:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   1ee5c:	e9 53 ff ff ff       	jmp    1edb4 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   1ee61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ee68:	49 8b 41 28          	mov    0x28(%r9),%rax
   1ee6c:	4d 8b 41 10          	mov    0x10(%r9),%r8
   1ee70:	4c 8b 35 09 b4 00 00 	mov    0xb409(%rip),%r14        # 2a280 <_ULx86_64_local_addr_space>
   1ee77:	4d 8b 49 20          	mov    0x20(%r9),%r9
   1ee7b:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   1ee82:	00 
   1ee83:	e9 c0 fe ff ff       	jmp    1ed48 <_ULx86_64_dwarf_search_unwind_table+0x58>
   1ee88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ee8f:	00 
   1ee90:	4c 01 c0             	add    %r8,%rax
   1ee93:	bf 01 00 00 00       	mov    $0x1,%edi
   1ee98:	e9 48 ff ff ff       	jmp    1ede5 <_ULx86_64_dwarf_search_unwind_table+0xf5>
   1ee9d:	0f 1f 00             	nopl   (%rax)
   1eea0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1eea5:	eb 8b                	jmp    1ee32 <_ULx86_64_dwarf_search_unwind_table+0x142>
   1eea7:	e8 a4 fc fe ff       	call   eb50 <__stack_chk_fail>
   1eeac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001eeb0 <_ULx86_64_dwarf_find_proc_info>:
   1eeb0:	f3 0f 1e fa          	endbr64 
   1eeb4:	41 56                	push   %r14
   1eeb6:	4d 89 c6             	mov    %r8,%r14
   1eeb9:	41 55                	push   %r13
   1eebb:	49 89 fd             	mov    %rdi,%r13
   1eebe:	41 54                	push   %r12
   1eec0:	49 89 d4             	mov    %rdx,%r12
   1eec3:	55                   	push   %rbp
   1eec4:	48 89 f5             	mov    %rsi,%rbp
   1eec7:	53                   	push   %rbx
   1eec8:	89 cb                	mov    %ecx,%ebx
   1eeca:	b9 15 00 00 00       	mov    $0x15,%ecx
   1eecf:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1eed6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1eedd:	00 00 
   1eedf:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1eee6:	00 
   1eee7:	31 c0                	xor    %eax,%eax
   1eee9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1eeee:	48 89 e6             	mov    %rsp,%rsi
   1eef1:	48 89 2c 24          	mov    %rbp,(%rsp)
   1eef5:	48 89 d7             	mov    %rdx,%rdi
   1eef8:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   1eefd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ef00:	48 8d 3d b9 f9 ff ff 	lea    -0x647(%rip),%rdi        # 1e8c0 <_ULx86_64_dwarf_callback>
   1ef07:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
   1ef0b:	c7 44 24 40 ff ff ff 	movl   $0xffffffff,0x40(%rsp)
   1ef12:	ff 
   1ef13:	c7 84 24 90 00 00 00 	movl   $0xffffffff,0x90(%rsp)
   1ef1a:	ff ff ff ff 
   1ef1e:	e8 ad 00 00 00       	call   1efd0 <dl_iterate_phdr>
   1ef23:	85 c0                	test   %eax,%eax
   1ef25:	0f 8e 85 00 00 00    	jle    1efb0 <_ULx86_64_dwarf_find_proc_info+0x100>
   1ef2b:	8b 54 24 14          	mov    0x14(%rsp),%edx
   1ef2f:	31 c0                	xor    %eax,%eax
   1ef31:	85 d2                	test   %edx,%edx
   1ef33:	75 2a                	jne    1ef5f <_ULx86_64_dwarf_find_proc_info+0xaf>
   1ef35:	83 7c 24 40 ff       	cmpl   $0xffffffff,0x40(%rsp)
   1ef3a:	75 4c                	jne    1ef88 <_ULx86_64_dwarf_find_proc_info+0xd8>
   1ef3c:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   1ef43:	ff 
   1ef44:	74 6a                	je     1efb0 <_ULx86_64_dwarf_find_proc_info+0x100>
   1ef46:	48 8d 54 24 68       	lea    0x68(%rsp),%rdx
   1ef4b:	4d 89 f1             	mov    %r14,%r9
   1ef4e:	41 89 d8             	mov    %ebx,%r8d
   1ef51:	4c 89 e1             	mov    %r12,%rcx
   1ef54:	48 89 ee             	mov    %rbp,%rsi
   1ef57:	4c 89 ef             	mov    %r13,%rdi
   1ef5a:	e8 91 fd ff ff       	call   1ecf0 <_ULx86_64_dwarf_search_unwind_table>
   1ef5f:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
   1ef66:	00 
   1ef67:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1ef6e:	00 00 
   1ef70:	75 45                	jne    1efb7 <_ULx86_64_dwarf_find_proc_info+0x107>
   1ef72:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1ef79:	5b                   	pop    %rbx
   1ef7a:	5d                   	pop    %rbp
   1ef7b:	41 5c                	pop    %r12
   1ef7d:	41 5d                	pop    %r13
   1ef7f:	41 5e                	pop    %r14
   1ef81:	c3                   	ret    
   1ef82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ef88:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1ef8d:	4d 89 f1             	mov    %r14,%r9
   1ef90:	41 89 d8             	mov    %ebx,%r8d
   1ef93:	4c 89 e1             	mov    %r12,%rcx
   1ef96:	48 89 ee             	mov    %rbp,%rsi
   1ef99:	4c 89 ef             	mov    %r13,%rdi
   1ef9c:	e8 4f fd ff ff       	call   1ecf0 <_ULx86_64_dwarf_search_unwind_table>
   1efa1:	83 f8 f6             	cmp    $0xfffffff6,%eax
   1efa4:	75 b9                	jne    1ef5f <_ULx86_64_dwarf_find_proc_info+0xaf>
   1efa6:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   1efad:	ff 
   1efae:	75 96                	jne    1ef46 <_ULx86_64_dwarf_find_proc_info+0x96>
   1efb0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1efb5:	eb a8                	jmp    1ef5f <_ULx86_64_dwarf_find_proc_info+0xaf>
   1efb7:	e8 94 fb fe ff       	call   eb50 <__stack_chk_fail>
   1efbc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001efc0 <_ULx86_64_dwarf_put_unwind_info>:
   1efc0:	f3 0f 1e fa          	endbr64 
   1efc4:	c3                   	ret    
   1efc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1efcc:	00 00 00 
   1efcf:	90                   	nop

000000000001efd0 <dl_iterate_phdr>:
   1efd0:	f3 0f 1e fa          	endbr64 
   1efd4:	41 54                	push   %r12
   1efd6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1efda:	49 89 f4             	mov    %rsi,%r12
   1efdd:	55                   	push   %rbp
   1efde:	53                   	push   %rbx
   1efdf:	48 89 fb             	mov    %rdi,%rbx
   1efe2:	48 83 ec 50          	sub    $0x50,%rsp
   1efe6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1efed:	00 00 
   1efef:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1eff4:	31 c0                	xor    %eax,%eax
   1eff6:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1effa:	48 89 e5             	mov    %rsp,%rbp
   1effd:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1f002:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1f007:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1f00c:	e8 b1 13 00 00       	call   203c2 <get_enclave_base>
   1f011:	48 8d 0d 21 22 00 00 	lea    0x2221(%rip),%rcx        # 21239 <g_dyn_entry_table+0x239>
   1f018:	be 40 00 00 00       	mov    $0x40,%esi
   1f01d:	48 89 ef             	mov    %rbp,%rdi
   1f020:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1f024:	48 89 04 24          	mov    %rax,(%rsp)
   1f028:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1f02d:	48 01 c2             	add    %rax,%rdx
   1f030:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1f034:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f039:	4c 89 e2             	mov    %r12,%rdx
   1f03c:	66 89 44 24 18       	mov    %ax,0x18(%rsp)
   1f041:	ff d3                	call   *%rbx
   1f043:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1f048:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1f04f:	00 00 
   1f051:	75 09                	jne    1f05c <dl_iterate_phdr+0x8c>
   1f053:	48 83 c4 50          	add    $0x50,%rsp
   1f057:	5b                   	pop    %rbx
   1f058:	5d                   	pop    %rbp
   1f059:	41 5c                	pop    %r12
   1f05b:	c3                   	ret    
   1f05c:	e8 ef fa fe ff       	call   eb50 <__stack_chk_fail>
   1f061:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f068:	00 00 00 
   1f06b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f070 <msync>:
   1f070:	f3 0f 1e fa          	endbr64 
   1f074:	31 c0                	xor    %eax,%eax
   1f076:	c3                   	ret    
   1f077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f07e:	00 00 

000000000001f080 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   1f080:	f3 0f 1e fa          	endbr64 
   1f084:	48 39 f7             	cmp    %rsi,%rdi
   1f087:	74 5f                	je     1f0e8 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x68>
   1f089:	48 85 ff             	test   %rdi,%rdi
   1f08c:	74 42                	je     1f0d0 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x50>
   1f08e:	41 54                	push   %r12
   1f090:	31 c9                	xor    %ecx,%ecx
   1f092:	49 89 d4             	mov    %rdx,%r12
   1f095:	48 8d 15 8c ab 00 00 	lea    0xab8c(%rip),%rdx        # 29c28 <_ZTIN10__cxxabiv117__class_type_infoE>
   1f09c:	55                   	push   %rbp
   1f09d:	48 89 f5             	mov    %rsi,%rbp
   1f0a0:	48 8d 35 71 ab 00 00 	lea    0xab71(%rip),%rsi        # 29c18 <_ZTISt9type_info>
   1f0a7:	48 83 ec 08          	sub    $0x8,%rsp
   1f0ab:	e8 a0 00 00 00       	call   1f150 <__dynamic_cast>
   1f0b0:	48 89 c6             	mov    %rax,%rsi
   1f0b3:	48 85 c0             	test   %rax,%rax
   1f0b6:	74 20                	je     1f0d8 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x58>
   1f0b8:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1f0bc:	4c 89 e2             	mov    %r12,%rdx
   1f0bf:	48 89 ef             	mov    %rbp,%rdi
   1f0c2:	48 8b 40 28          	mov    0x28(%rax),%rax
   1f0c6:	48 83 c4 08          	add    $0x8,%rsp
   1f0ca:	5d                   	pop    %rbp
   1f0cb:	41 5c                	pop    %r12
   1f0cd:	ff e0                	jmp    *%rax
   1f0cf:	90                   	nop
   1f0d0:	31 c0                	xor    %eax,%eax
   1f0d2:	c3                   	ret    
   1f0d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f0d8:	48 83 c4 08          	add    $0x8,%rsp
   1f0dc:	31 c0                	xor    %eax,%eax
   1f0de:	5d                   	pop    %rbp
   1f0df:	41 5c                	pop    %r12
   1f0e1:	c3                   	ret    
   1f0e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f0e8:	b8 01 00 00 00       	mov    $0x1,%eax
   1f0ed:	c3                   	ret    
   1f0ee:	66 90                	xchg   %ax,%ax

000000000001f0f0 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_>:
   1f0f0:	f3 0f 1e fa          	endbr64 
   1f0f4:	48 39 fa             	cmp    %rdi,%rdx
   1f0f7:	b8 00 00 00 00       	mov    $0x0,%eax
   1f0fc:	48 0f 44 c6          	cmove  %rsi,%rax
   1f100:	c3                   	ret    
   1f101:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f108:	00 00 00 
   1f10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f110 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE>:
   1f110:	f3 0f 1e fa          	endbr64 
   1f114:	48 39 d7             	cmp    %rdx,%rdi
   1f117:	74 0f                	je     1f128 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE+0x18>
   1f119:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1f11d:	48 8b 07             	mov    (%rdi),%rax
   1f120:	ff 60 30             	jmp    *0x30(%rax)
   1f123:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f128:	48 89 f0             	mov    %rsi,%rax
   1f12b:	c3                   	ret    
   1f12c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f130 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv>:
   1f130:	f3 0f 1e fa          	endbr64 
   1f134:	48 39 f7             	cmp    %rsi,%rdi
   1f137:	74 0f                	je     1f148 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv+0x18>
   1f139:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1f13d:	48 8b 07             	mov    (%rdi),%rax
   1f140:	ff 60 28             	jmp    *0x28(%rax)
   1f143:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f148:	b8 01 00 00 00       	mov    $0x1,%eax
   1f14d:	c3                   	ret    
   1f14e:	66 90                	xchg   %ax,%ax

000000000001f150 <__dynamic_cast>:
   1f150:	f3 0f 1e fa          	endbr64 
   1f154:	48 8b 07             	mov    (%rdi),%rax
   1f157:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   1f15b:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
   1f15f:	49 8b 00             	mov    (%r8),%rax
   1f162:	48 01 fe             	add    %rdi,%rsi
   1f165:	4c 89 c7             	mov    %r8,%rdi
   1f168:	48 8b 40 30          	mov    0x30(%rax),%rax
   1f16c:	ff e0                	jmp    *%rax
   1f16e:	66 90                	xchg   %ax,%ax

000000000001f170 <_UIx86_64_mi_init>:
   1f170:	f3 0f 1e fa          	endbr64 
   1f174:	c3                   	ret    
   1f175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f17c:	00 00 00 
   1f17f:	90                   	nop

000000000001f180 <_Ux86_64_flush_cache>:
   1f180:	f3 0f 1e fa          	endbr64 
   1f184:	55                   	push   %rbp
   1f185:	48 89 fd             	mov    %rdi,%rbp
   1f188:	53                   	push   %rbx
   1f189:	48 83 ec 08          	sub    $0x8,%rsp
   1f18d:	48 8b 9f 88 66 00 00 	mov    0x6688(%rdi),%rbx
   1f194:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
   1f19b:	00 
   1f19c:	48 85 db             	test   %rbx,%rbx
   1f19f:	74 27                	je     1f1c8 <_Ux86_64_flush_cache+0x48>
   1f1a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f1a8:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1f1ac:	48 85 ff             	test   %rdi,%rdi
   1f1af:	74 05                	je     1f1b6 <_Ux86_64_flush_cache+0x36>
   1f1b1:	e8 ba df fe ff       	call   d170 <dlfree>
   1f1b6:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1f1ba:	e8 b1 df fe ff       	call   d170 <dlfree>
   1f1bf:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
   1f1c3:	48 85 db             	test   %rbx,%rbx
   1f1c6:	75 e0                	jne    1f1a8 <_Ux86_64_flush_cache+0x28>
   1f1c8:	48 c7 85 88 66 00 00 	movq   $0x0,0x6688(%rbp)
   1f1cf:	00 00 00 00 
   1f1d3:	f0 83 45 44 01       	lock addl $0x1,0x44(%rbp)
   1f1d8:	48 83 c4 08          	add    $0x8,%rsp
   1f1dc:	5b                   	pop    %rbx
   1f1dd:	5d                   	pop    %rbp
   1f1de:	c3                   	ret    
   1f1df:	90                   	nop

000000000001f1e0 <_U_dyn_info_list_addr>:
   1f1e0:	f3 0f 1e fa          	endbr64 
   1f1e4:	48 8d 05 85 a8 01 00 	lea    0x1a885(%rip),%rax        # 39a70 <_U_dyn_info_list>
   1f1eb:	c3                   	ret    
   1f1ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f1f0 <_ULx86_64_Iextract_dynamic_proc_info>:
   1f1f0:	f3 0f 1e fa          	endbr64 
   1f1f4:	48 8b 41 10          	mov    0x10(%rcx),%rax
   1f1f8:	49 89 d2             	mov    %rdx,%r10
   1f1fb:	48 89 ca             	mov    %rcx,%rdx
   1f1fe:	49 89 02             	mov    %rax,(%r10)
   1f201:	48 8b 41 18          	mov    0x18(%rcx),%rax
   1f205:	49 89 42 08          	mov    %rax,0x8(%r10)
   1f209:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1f20d:	49 89 42 20          	mov    %rax,0x20(%r10)
   1f211:	8b 41 28             	mov    0x28(%rcx),%eax
   1f214:	41 89 42 30          	mov    %eax,0x30(%r10)
   1f218:	85 c0                	test   %eax,%eax
   1f21a:	74 14                	je     1f230 <_ULx86_64_Iextract_dynamic_proc_info+0x40>
   1f21c:	83 e8 01             	sub    $0x1,%eax
   1f21f:	83 f8 03             	cmp    $0x3,%eax
   1f222:	77 3c                	ja     1f260 <_ULx86_64_Iextract_dynamic_proc_info+0x70>
   1f224:	4c 89 d1             	mov    %r10,%rcx
   1f227:	e9 c4 fa ff ff       	jmp    1ecf0 <_ULx86_64_dwarf_search_unwind_table>
   1f22c:	0f 1f 40 00          	nopl   0x0(%rax)
   1f230:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   1f234:	45 85 c0             	test   %r8d,%r8d
   1f237:	49 c7 42 10 00 00 00 	movq   $0x0,0x10(%r10)
   1f23e:	00 
   1f23f:	49 89 4a 18          	mov    %rcx,0x18(%r10)
   1f243:	8b 4a 40             	mov    0x40(%rdx),%ecx
   1f246:	41 c7 42 34 00 00 00 	movl   $0x0,0x34(%r10)
   1f24d:	00 
   1f24e:	49 89 4a 28          	mov    %rcx,0x28(%r10)
   1f252:	b9 00 00 00 00       	mov    $0x0,%ecx
   1f257:	48 0f 44 d1          	cmove  %rcx,%rdx
   1f25b:	49 89 52 38          	mov    %rdx,0x38(%r10)
   1f25f:	c3                   	ret    
   1f260:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1f265:	c3                   	ret    
   1f266:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f26d:	00 00 00 

000000000001f270 <_ULx86_64_set_reg>:
   1f270:	f3 0f 1e fa          	endbr64 
   1f274:	48 83 ec 18          	sub    $0x18,%rsp
   1f278:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f27d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1f282:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1f287:	e8 e4 e3 ff ff       	call   1d670 <_ULx86_64_access_reg>
   1f28c:	48 83 c4 18          	add    $0x18,%rsp
   1f290:	c3                   	ret    
   1f291:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f298:	00 00 00 
   1f29b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f2a0 <_ULx86_64_dwarf_extract_proc_info_from_fde>:
   1f2a0:	f3 0f 1e fa          	endbr64 
   1f2a4:	41 57                	push   %r15
   1f2a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1f2aa:	41 56                	push   %r14
   1f2ac:	49 89 fe             	mov    %rdi,%r14
   1f2af:	41 55                	push   %r13
   1f2b1:	49 89 f5             	mov    %rsi,%r13
   1f2b4:	41 54                	push   %r12
   1f2b6:	55                   	push   %rbp
   1f2b7:	48 89 cd             	mov    %rcx,%rbp
   1f2ba:	53                   	push   %rbx
   1f2bb:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1f2c2:	48 8b 0a             	mov    (%rdx),%rcx
   1f2c5:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   1f2ca:	8b b4 24 e0 00 00 00 	mov    0xe0(%rsp),%esi
   1f2d1:	4c 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%r15
   1f2d8:	00 
   1f2d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f2e0:	00 00 
   1f2e2:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1f2e9:	00 
   1f2ea:	31 c0                	xor    %eax,%eax
   1f2ec:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   1f2f1:	48 8d 41 04          	lea    0x4(%rcx),%rax
   1f2f5:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   1f2fc:	00 00 00 00 00 
   1f301:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   1f306:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   1f30b:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   1f310:	8b 19                	mov    (%rcx),%ebx
   1f312:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1f317:	83 fb ff             	cmp    $0xffffffff,%ebx
   1f31a:	0f 84 70 04 00 00    	je     1f790 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4f0>
   1f320:	85 db                	test   %ebx,%ebx
   1f322:	0f 84 e2 05 00 00    	je     1f90a <_ULx86_64_dwarf_extract_proc_info_from_fde+0x66a>
   1f328:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   1f32c:	48 83 c1 08          	add    $0x8,%rcx
   1f330:	48 89 3a             	mov    %rdi,(%rdx)
   1f333:	48 63 51 fc          	movslq -0x4(%rcx),%rdx
   1f337:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1f33c:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   1f341:	85 f6                	test   %esi,%esi
   1f343:	0f 85 17 02 00 00    	jne    1f560 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c0>
   1f349:	48 29 d0             	sub    %rdx,%rax
   1f34c:	49 89 c0             	mov    %rax,%r8
   1f34f:	48 85 d2             	test   %rdx,%rdx
   1f352:	0f 84 e4 03 00 00    	je     1f73c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   1f358:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   1f35f:	ff 
   1f360:	8b 00                	mov    (%rax),%eax
   1f362:	49 8d 48 04          	lea    0x4(%r8),%rcx
   1f366:	45 31 c9             	xor    %r9d,%r9d
   1f369:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   1f370:	00 00 
   1f372:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f377:	83 f8 ff             	cmp    $0xffffffff,%eax
   1f37a:	0f 84 19 02 00 00    	je     1f599 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2f9>
   1f380:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
   1f384:	8b 09                	mov    (%rcx),%ecx
   1f386:	49 8d 40 08          	lea    0x8(%r8),%rax
   1f38a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f38f:	44 39 c9             	cmp    %r9d,%ecx
   1f392:	0f 85 38 02 00 00    	jne    1f5d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   1f398:	0f b6 30             	movzbl (%rax),%esi
   1f39b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   1f3a0:	48 83 c0 01          	add    $0x1,%rax
   1f3a4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f3a9:	8d 56 fd             	lea    -0x3(%rsi),%edx
   1f3ac:	80 fa 01             	cmp    $0x1,%dl
   1f3af:	76 0a                	jbe    1f3bb <_ULx86_64_dwarf_extract_proc_info_from_fde+0x11b>
   1f3b1:	40 80 fe 01          	cmp    $0x1,%sil
   1f3b5:	0f 85 45 05 00 00    	jne    1f900 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x660>
   1f3bb:	c7 84 24 93 00 00 00 	movl   $0x0,0x93(%rsp)
   1f3c2:	00 00 00 00 
   1f3c6:	31 d2                	xor    %edx,%edx
   1f3c8:	4c 8d 84 24 92 00 00 	lea    0x92(%rsp),%r8
   1f3cf:	00 
   1f3d0:	c6 84 24 97 00 00 00 	movb   $0x0,0x97(%rsp)
   1f3d7:	00 
   1f3d8:	eb 10                	jmp    1f3ea <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   1f3da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f3e0:	48 83 fa 03          	cmp    $0x3,%rdx
   1f3e4:	0f 86 5e 03 00 00    	jbe    1f748 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4a8>
   1f3ea:	0f b6 08             	movzbl (%rax),%ecx
   1f3ed:	48 83 c0 01          	add    $0x1,%rax
   1f3f1:	84 c9                	test   %cl,%cl
   1f3f3:	75 eb                	jne    1f3e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x140>
   1f3f5:	31 c9                	xor    %ecx,%ecx
   1f3f7:	45 31 c0             	xor    %r8d,%r8d
   1f3fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f400:	0f b6 38             	movzbl (%rax),%edi
   1f403:	48 83 c0 01          	add    $0x1,%rax
   1f407:	48 89 fa             	mov    %rdi,%rdx
   1f40a:	83 e2 7f             	and    $0x7f,%edx
   1f40d:	48 d3 e2             	shl    %cl,%rdx
   1f410:	48 83 c1 07          	add    $0x7,%rcx
   1f414:	49 09 d0             	or     %rdx,%r8
   1f417:	40 84 ff             	test   %dil,%dil
   1f41a:	78 e4                	js     1f400 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x160>
   1f41c:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   1f421:	31 c9                	xor    %ecx,%ecx
   1f423:	45 31 c0             	xor    %r8d,%r8d
   1f426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f42d:	00 00 00 
   1f430:	44 0f b6 10          	movzbl (%rax),%r10d
   1f434:	49 89 c1             	mov    %rax,%r9
   1f437:	48 83 c0 01          	add    $0x1,%rax
   1f43b:	4c 89 d2             	mov    %r10,%rdx
   1f43e:	83 e2 7f             	and    $0x7f,%edx
   1f441:	48 d3 e2             	shl    %cl,%rdx
   1f444:	48 83 c1 07          	add    $0x7,%rcx
   1f448:	49 09 d0             	or     %rdx,%r8
   1f44b:	45 84 d2             	test   %r10b,%r10b
   1f44e:	78 e0                	js     1f430 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x190>
   1f450:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1f454:	77 0a                	ja     1f460 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   1f456:	41 83 e2 40          	and    $0x40,%r10d
   1f45a:	0f 85 d8 03 00 00    	jne    1f838 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x598>
   1f460:	4c 89 44 24 68       	mov    %r8,0x68(%rsp)
   1f465:	31 c9                	xor    %ecx,%ecx
   1f467:	45 31 c0             	xor    %r8d,%r8d
   1f46a:	40 80 fe 01          	cmp    $0x1,%sil
   1f46e:	0f 84 6c 03 00 00    	je     1f7e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x540>
   1f474:	0f 1f 40 00          	nopl   0x0(%rax)
   1f478:	0f b6 30             	movzbl (%rax),%esi
   1f47b:	48 83 c0 01          	add    $0x1,%rax
   1f47f:	48 89 f2             	mov    %rsi,%rdx
   1f482:	83 e2 7f             	and    $0x7f,%edx
   1f485:	48 d3 e2             	shl    %cl,%rdx
   1f488:	48 83 c1 07          	add    $0x7,%rcx
   1f48c:	49 09 d0             	or     %rdx,%r8
   1f48f:	40 84 f6             	test   %sil,%sil
   1f492:	78 e4                	js     1f478 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1d8>
   1f494:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f499:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   1f4a0:	00 
   1f4a1:	31 d2                	xor    %edx,%edx
   1f4a3:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   1f4a8:	3c 7a                	cmp    $0x7a,%al
   1f4aa:	0f 84 53 03 00 00    	je     1f803 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x563>
   1f4b0:	bb 04 00 00 00       	mov    $0x4,%ebx
   1f4b5:	4d 89 fa             	mov    %r15,%r10
   1f4b8:	49 89 ef             	mov    %rbp,%r15
   1f4bb:	4c 8d 9c 24 98 00 00 	lea    0x98(%rsp),%r11
   1f4c2:	00 
   1f4c3:	89 dd                	mov    %ebx,%ebp
   1f4c5:	4c 8d a4 14 93 00 00 	lea    0x93(%rsp,%rdx,1),%r12
   1f4cc:	00 
   1f4cd:	4c 8d 4c 24 78       	lea    0x78(%rsp),%r9
   1f4d2:	4c 89 db             	mov    %r11,%rbx
   1f4d5:	84 c0                	test   %al,%al
   1f4d7:	74 79                	je     1f552 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   1f4d9:	3c 52                	cmp    $0x52,%al
   1f4db:	0f 84 77 02 00 00    	je     1f758 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4b8>
   1f4e1:	0f 87 21 01 00 00    	ja     1f608 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x368>
   1f4e7:	3c 4c                	cmp    $0x4c,%al
   1f4e9:	0f 84 81 02 00 00    	je     1f770 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4d0>
   1f4ef:	3c 50                	cmp    $0x50,%al
   1f4f1:	0f 85 29 01 00 00    	jne    1f620 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   1f4f7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f4fc:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1f501:	4d 89 f8             	mov    %r15,%r8
   1f504:	4c 89 ee             	mov    %r13,%rsi
   1f507:	48 83 ec 08          	sub    $0x8,%rsp
   1f50b:	4c 89 f7             	mov    %r14,%rdi
   1f50e:	0f b6 08             	movzbl (%rax),%ecx
   1f511:	48 83 c0 01          	add    $0x1,%rax
   1f515:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1f51a:	41 52                	push   %r10
   1f51c:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1f521:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1f526:	e8 25 b7 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1f52b:	41 5a                	pop    %r10
   1f52d:	41 5b                	pop    %r11
   1f52f:	85 c0                	test   %eax,%eax
   1f531:	4c 8b 0c 24          	mov    (%rsp),%r9
   1f535:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1f53a:	0f 88 98 00 00 00    	js     1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f540:	49 83 c4 01          	add    $0x1,%r12
   1f544:	4c 39 e3             	cmp    %r12,%rbx
   1f547:	74 09                	je     1f552 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   1f549:	41 0f b6 04 24       	movzbl (%r12),%eax
   1f54e:	84 c0                	test   %al,%al
   1f550:	75 87                	jne    1f4d9 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x239>
   1f552:	89 eb                	mov    %ebp,%ebx
   1f554:	4c 89 fd             	mov    %r15,%rbp
   1f557:	4d 89 d7             	mov    %r10,%r15
   1f55a:	e9 d3 00 00 00       	jmp    1f632 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x392>
   1f55f:	90                   	nop
   1f560:	49 01 d0             	add    %rdx,%r8
   1f563:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1f567:	0f 84 cf 01 00 00    	je     1f73c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   1f56d:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   1f574:	ff 
   1f575:	41 8b 00             	mov    (%r8),%eax
   1f578:	49 8d 48 04          	lea    0x4(%r8),%rcx
   1f57c:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
   1f582:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   1f589:	00 00 
   1f58b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f590:	83 f8 ff             	cmp    $0xffffffff,%eax
   1f593:	0f 85 e7 fd ff ff    	jne    1f380 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xe0>
   1f599:	48 8b 11             	mov    (%rcx),%rdx
   1f59c:	49 8d 40 0c          	lea    0xc(%r8),%rax
   1f5a0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f5a5:	49 8b 48 0c          	mov    0xc(%r8),%rcx
   1f5a9:	48 01 c2             	add    %rax,%rdx
   1f5ac:	85 f6                	test   %esi,%esi
   1f5ae:	49 8d 40 14          	lea    0x14(%r8),%rax
   1f5b2:	40 0f 95 c6          	setne  %sil
   1f5b6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f5bb:	40 0f b6 f6          	movzbl %sil,%esi
   1f5bf:	48 01 f1             	add    %rsi,%rcx
   1f5c2:	0f 84 d0 fd ff ff    	je     1f398 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xf8>
   1f5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f5cf:	00 
   1f5d0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1f5d5:	0f 1f 00             	nopl   (%rax)
   1f5d8:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1f5df:	00 
   1f5e0:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1f5e7:	00 00 
   1f5e9:	0f 85 25 03 00 00    	jne    1f914 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x674>
   1f5ef:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1f5f6:	5b                   	pop    %rbx
   1f5f7:	5d                   	pop    %rbp
   1f5f8:	41 5c                	pop    %r12
   1f5fa:	41 5d                	pop    %r13
   1f5fc:	41 5e                	pop    %r14
   1f5fe:	41 5f                	pop    %r15
   1f600:	c3                   	ret    
   1f601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f608:	3c 53                	cmp    $0x53,%al
   1f60a:	75 14                	jne    1f620 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   1f60c:	80 8c 24 86 00 00 00 	orb    $0x6,0x86(%rsp)
   1f613:	06 
   1f614:	e9 27 ff ff ff       	jmp    1f540 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   1f619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f620:	89 eb                	mov    %ebp,%ebx
   1f622:	4c 89 fd             	mov    %r15,%rbp
   1f625:	4d 89 d7             	mov    %r10,%r15
   1f628:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   1f62f:	01 
   1f630:	74 9e                	je     1f5d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   1f632:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f637:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   1f63c:	49 89 e8             	mov    %rbp,%r8
   1f63f:	0f b6 cb             	movzbl %bl,%ecx
   1f642:	88 9c 24 84 00 00 00 	mov    %bl,0x84(%rsp)
   1f649:	48 83 ec 08          	sub    $0x8,%rsp
   1f64d:	4c 89 ee             	mov    %r13,%rsi
   1f650:	4c 89 f7             	mov    %r14,%rdi
   1f653:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1f658:	41 57                	push   %r15
   1f65a:	4c 8d 4c 24 38       	lea    0x38(%rsp),%r9
   1f65f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f664:	e8 e7 b5 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1f669:	41 58                	pop    %r8
   1f66b:	41 59                	pop    %r9
   1f66d:	85 c0                	test   %eax,%eax
   1f66f:	48 8b 14 24          	mov    (%rsp),%rdx
   1f673:	0f 88 5f ff ff ff    	js     1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f679:	48 83 ec 08          	sub    $0x8,%rsp
   1f67d:	89 d9                	mov    %ebx,%ecx
   1f67f:	4c 89 ee             	mov    %r13,%rsi
   1f682:	4c 89 f7             	mov    %r14,%rdi
   1f685:	41 57                	push   %r15
   1f687:	83 e1 0f             	and    $0xf,%ecx
   1f68a:	49 89 e8             	mov    %rbp,%r8
   1f68d:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   1f692:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f697:	e8 b4 b5 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1f69c:	5e                   	pop    %rsi
   1f69d:	5f                   	pop    %rdi
   1f69e:	85 c0                	test   %eax,%eax
   1f6a0:	0f 88 32 ff ff ff    	js     1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f6a6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1f6ab:	45 31 e4             	xor    %r12d,%r12d
   1f6ae:	48 8b 14 24          	mov    (%rsp),%rdx
   1f6b2:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1f6b6:	48 03 44 24 38       	add    0x38(%rsp),%rax
   1f6bb:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1f6bf:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1f6c4:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   1f6cb:	01 
   1f6cc:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1f6d0:	74 34                	je     1f706 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x466>
   1f6d2:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1f6d7:	31 c9                	xor    %ecx,%ecx
   1f6d9:	45 31 c0             	xor    %r8d,%r8d
   1f6dc:	0f 1f 40 00          	nopl   0x0(%rax)
   1f6e0:	41 0f b6 34 24       	movzbl (%r12),%esi
   1f6e5:	49 83 c4 01          	add    $0x1,%r12
   1f6e9:	48 89 f0             	mov    %rsi,%rax
   1f6ec:	83 e0 7f             	and    $0x7f,%eax
   1f6ef:	48 d3 e0             	shl    %cl,%rax
   1f6f2:	48 83 c1 07          	add    $0x7,%rcx
   1f6f6:	49 09 c0             	or     %rax,%r8
   1f6f9:	40 84 f6             	test   %sil,%sil
   1f6fc:	78 e2                	js     1f6e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x440>
   1f6fe:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1f703:	4d 01 c4             	add    %r8,%r12
   1f706:	48 83 ec 08          	sub    $0x8,%rsp
   1f70a:	4c 8d 4d 10          	lea    0x10(%rbp),%r9
   1f70e:	49 89 e8             	mov    %rbp,%r8
   1f711:	4c 89 ee             	mov    %r13,%rsi
   1f714:	0f b6 8c 24 8d 00 00 	movzbl 0x8d(%rsp),%ecx
   1f71b:	00 
   1f71c:	41 57                	push   %r15
   1f71e:	4c 89 f7             	mov    %r14,%rdi
   1f721:	e8 2a b5 ff ff       	call   1ac50 <_ULx86_64_dwarf_read_encoded_pointer>
   1f726:	5a                   	pop    %rdx
   1f727:	59                   	pop    %rcx
   1f728:	85 c0                	test   %eax,%eax
   1f72a:	0f 88 a8 fe ff ff    	js     1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f730:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1f734:	85 c0                	test   %eax,%eax
   1f736:	0f 85 14 01 00 00    	jne    1f850 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5b0>
   1f73c:	31 c0                	xor    %eax,%eax
   1f73e:	e9 95 fe ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f748:	48 83 c2 01          	add    $0x1,%rdx
   1f74c:	41 88 0c 10          	mov    %cl,(%r8,%rdx,1)
   1f750:	e9 95 fc ff ff       	jmp    1f3ea <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   1f755:	0f 1f 00             	nopl   (%rax)
   1f758:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f75d:	0f b6 28             	movzbl (%rax),%ebp
   1f760:	48 83 c0 01          	add    $0x1,%rax
   1f764:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f769:	e9 d2 fd ff ff       	jmp    1f540 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   1f76e:	66 90                	xchg   %ax,%ax
   1f770:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f775:	0f b6 10             	movzbl (%rax),%edx
   1f778:	48 83 c0 01          	add    $0x1,%rax
   1f77c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f781:	88 94 24 85 00 00 00 	mov    %dl,0x85(%rsp)
   1f788:	e9 b3 fd ff ff       	jmp    1f540 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   1f78d:	0f 1f 00             	nopl   (%rax)
   1f790:	48 8b 59 04          	mov    0x4(%rcx),%rbx
   1f794:	48 8d 41 0c          	lea    0xc(%rcx),%rax
   1f798:	48 83 c1 14          	add    $0x14,%rcx
   1f79c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1f7a1:	48 01 c3             	add    %rax,%rbx
   1f7a4:	48 89 1a             	mov    %rbx,(%rdx)
   1f7a7:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
   1f7ab:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1f7b0:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   1f7b5:	85 f6                	test   %esi,%esi
   1f7b7:	0f 84 8c fb ff ff    	je     1f349 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xa9>
   1f7bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1f7c2:	48 39 c2             	cmp    %rax,%rdx
   1f7c5:	0f 84 71 ff ff ff    	je     1f73c <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   1f7cb:	49 01 d0             	add    %rdx,%r8
   1f7ce:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1f7d2:	0f 85 95 fd ff ff    	jne    1f56d <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2cd>
   1f7d8:	31 c0                	xor    %eax,%eax
   1f7da:	e9 f9 fd ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f7df:	90                   	nop
   1f7e0:	0f b6 00             	movzbl (%rax),%eax
   1f7e3:	49 83 c1 02          	add    $0x2,%r9
   1f7e7:	31 d2                	xor    %edx,%edx
   1f7e9:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1f7ee:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   1f7f3:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   1f7fa:	00 
   1f7fb:	3c 7a                	cmp    $0x7a,%al
   1f7fd:	0f 85 ad fc ff ff    	jne    1f4b0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   1f803:	80 8c 24 86 00 00 00 	orb    $0x1,0x86(%rsp)
   1f80a:	01 
   1f80b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f810:	0f b6 10             	movzbl (%rax),%edx
   1f813:	48 83 c0 01          	add    $0x1,%rax
   1f817:	84 d2                	test   %dl,%dl
   1f819:	78 f5                	js     1f810 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x570>
   1f81b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f820:	ba 01 00 00 00       	mov    $0x1,%edx
   1f825:	0f b6 84 24 94 00 00 	movzbl 0x94(%rsp),%eax
   1f82c:	00 
   1f82d:	e9 7e fc ff ff       	jmp    1f4b0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   1f832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f838:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1f83f:	48 d3 e2             	shl    %cl,%rdx
   1f842:	49 09 d0             	or     %rdx,%r8
   1f845:	e9 16 fc ff ff       	jmp    1f460 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   1f84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f850:	48 b8 01 00 00 00 48 	movabs $0x4800000001,%rax
   1f857:	00 00 00 
   1f85a:	48 8d 3d 9f a1 01 00 	lea    0x1a19f(%rip),%rdi        # 39a00 <dwarf_cie_info_pool>
   1f861:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1f865:	e8 76 d1 ff ff       	call   1c9e0 <_UIx86_64__mempool_alloc>
   1f86a:	48 89 45 38          	mov    %rax,0x38(%rbp)
   1f86e:	48 85 c0             	test   %rax,%rax
   1f871:	0f 84 a2 00 00 00    	je     1f919 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x679>
   1f877:	0f b6 94 24 86 00 00 	movzbl 0x86(%rsp),%edx
   1f87e:	00 
   1f87f:	f6 c2 02             	test   $0x2,%dl
   1f882:	74 25                	je     1f8a9 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x609>
   1f884:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1f889:	0f b7 31             	movzwl (%rcx),%esi
   1f88c:	48 83 c1 04          	add    $0x4,%rcx
   1f890:	66 89 b4 24 80 00 00 	mov    %si,0x80(%rsp)
   1f897:	00 
   1f898:	0f b7 71 fe          	movzwl -0x2(%rcx),%esi
   1f89c:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   1f8a1:	66 89 b4 24 82 00 00 	mov    %si,0x82(%rsp)
   1f8a8:	00 
   1f8a9:	66 0f 6f 4c 24 40    	movdqa 0x40(%rsp),%xmm1
   1f8af:	83 e2 01             	and    $0x1,%edx
   1f8b2:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   1f8b7:	4c 0f 44 64 24 30    	cmove  0x30(%rsp),%r12
   1f8bd:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   1f8c2:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1f8c7:	0f 11 08             	movups %xmm1,(%rax)
   1f8ca:	66 0f 6f 54 24 50    	movdqa 0x50(%rsp),%xmm2
   1f8d0:	0f 11 50 10          	movups %xmm2,0x10(%rax)
   1f8d4:	66 0f 6f 5c 24 60    	movdqa 0x60(%rsp),%xmm3
   1f8da:	0f 11 58 20          	movups %xmm3,0x20(%rax)
   1f8de:	66 0f 6f 64 24 70    	movdqa 0x70(%rsp),%xmm4
   1f8e4:	0f 11 60 30          	movups %xmm4,0x30(%rax)
   1f8e8:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
   1f8ef:	00 
   1f8f0:	48 89 50 40          	mov    %rdx,0x40(%rax)
   1f8f4:	31 c0                	xor    %eax,%eax
   1f8f6:	e9 dd fc ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f900:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   1f905:	e9 ce fc ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f90a:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1f90f:	e9 c4 fc ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f914:	e8 37 f2 fe ff       	call   eb50 <__stack_chk_fail>
   1f919:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1f91e:	e9 b5 fc ff ff       	jmp    1f5d8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   1f923:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f92a:	00 00 00 
   1f92d:	0f 1f 00             	nopl   (%rax)

000000000001f930 <sgx_init_crypto_lib>:
   1f930:	f3 0f 1e fa          	endbr64 
   1f934:	e9 07 00 00 00       	jmp    1f940 <init_ipp_cpuid>
   1f939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001f940 <init_ipp_cpuid>:
   1f940:	f3 0f 1e fa          	endbr64 
   1f944:	48 83 3d a4 a6 00 00 	cmpq   $0x0,0xa6a4(%rip)        # 29ff0 <ippcpSetCpuFeatures>
   1f94b:	00 
   1f94c:	0f 84 0e 02 00 00    	je     1fb60 <init_ipp_cpuid+0x220>
   1f952:	48 89 f8             	mov    %rdi,%rax
   1f955:	f6 c4 02             	test   $0x2,%ah
   1f958:	0f 84 0a 02 00 00    	je     1fb68 <init_ipp_cpuid+0x228>
   1f95e:	48 89 fa             	mov    %rdi,%rdx
   1f961:	48 83 ec 08          	sub    $0x8,%rsp
   1f965:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   1f96c:	00 00 00 
   1f96f:	81 e2 00 08 00 00    	and    $0x800,%edx
   1f975:	48 83 fa 01          	cmp    $0x1,%rdx
   1f979:	48 19 ff             	sbb    %rdi,%rdi
   1f97c:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   1f980:	48 83 c7 7f          	add    $0x7f,%rdi
   1f984:	48 89 fa             	mov    %rdi,%rdx
   1f987:	80 ca 80             	or     $0x80,%dl
   1f98a:	f6 c4 04             	test   $0x4,%ah
   1f98d:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f991:	48 89 fa             	mov    %rdi,%rdx
   1f994:	80 ce 03             	or     $0x3,%dh
   1f997:	a9 00 00 01 00       	test   $0x10000,%eax
   1f99c:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9a0:	48 89 fa             	mov    %rdi,%rdx
   1f9a3:	80 ce 04             	or     $0x4,%dh
   1f9a6:	f6 c4 40             	test   $0x40,%ah
   1f9a9:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9ad:	48 89 fa             	mov    %rdi,%rdx
   1f9b0:	80 ce 08             	or     $0x8,%dh
   1f9b3:	f6 c4 20             	test   $0x20,%ah
   1f9b6:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9ba:	48 89 fa             	mov    %rdi,%rdx
   1f9bd:	80 ce 20             	or     $0x20,%dh
   1f9c0:	a9 00 00 02 00       	test   $0x20000,%eax
   1f9c5:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9c9:	48 89 fa             	mov    %rdi,%rdx
   1f9cc:	80 ce 40             	or     $0x40,%dh
   1f9cf:	f6 c4 80             	test   $0x80,%ah
   1f9d2:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9d6:	48 89 fa             	mov    %rdi,%rdx
   1f9d9:	80 ce 80             	or     $0x80,%dh
   1f9dc:	a9 00 00 80 00       	test   $0x800000,%eax
   1f9e1:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9e5:	48 89 fa             	mov    %rdi,%rdx
   1f9e8:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   1f9ef:	a9 00 00 00 10       	test   $0x10000000,%eax
   1f9f4:	48 0f 45 fa          	cmovne %rdx,%rdi
   1f9f8:	48 89 fa             	mov    %rdi,%rdx
   1f9fb:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   1fa02:	a9 00 00 00 20       	test   $0x20000000,%eax
   1fa07:	48 0f 45 fa          	cmovne %rdx,%rdi
   1fa0b:	48 89 fa             	mov    %rdi,%rdx
   1fa0e:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   1fa15:	48 85 c8             	test   %rcx,%rax
   1fa18:	48 0f 45 fa          	cmovne %rdx,%rdi
   1fa1c:	a9 00 00 00 08       	test   $0x8000000,%eax
   1fa21:	74 0d                	je     1fa30 <init_ipp_cpuid+0xf0>
   1fa23:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   1fa2a:	00 00 00 
   1fa2d:	48 09 d7             	or     %rdx,%rdi
   1fa30:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   1fa37:	00 00 00 
   1fa3a:	48 89 fa             	mov    %rdi,%rdx
   1fa3d:	48 be 00 00 00 00 04 	movabs $0x400000000,%rsi
   1fa44:	00 00 00 
   1fa47:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   1fa4e:	48 85 c8             	test   %rcx,%rax
   1fa51:	48 0f 45 fa          	cmovne %rdx,%rdi
   1fa55:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
   1fa5c:	00 00 00 
   1fa5f:	48 89 f9             	mov    %rdi,%rcx
   1fa62:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
   1fa69:	48 85 d0             	test   %rdx,%rax
   1fa6c:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fa70:	48 89 f9             	mov    %rdi,%rcx
   1fa73:	48 81 c9 00 00 20 00 	or     $0x200000,%rcx
   1fa7a:	48 85 f0             	test   %rsi,%rax
   1fa7d:	48 be 00 00 00 00 20 	movabs $0x2000000000,%rsi
   1fa84:	00 00 00 
   1fa87:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fa8b:	48 89 f9             	mov    %rdi,%rcx
   1fa8e:	48 81 c9 00 00 00 02 	or     $0x2000000,%rcx
   1fa95:	a9 00 00 00 01       	test   $0x1000000,%eax
   1fa9a:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fa9e:	48 89 f9             	mov    %rdi,%rcx
   1faa1:	48 81 c9 00 00 00 01 	or     $0x1000000,%rcx
   1faa8:	48 85 f0             	test   %rsi,%rax
   1faab:	48 be 00 00 00 00 40 	movabs $0x4000000000,%rsi
   1fab2:	00 00 00 
   1fab5:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fab9:	48 89 f9             	mov    %rdi,%rcx
   1fabc:	48 81 c9 00 00 00 04 	or     $0x4000000,%rcx
   1fac3:	48 85 f0             	test   %rsi,%rax
   1fac6:	48 be 00 00 00 00 80 	movabs $0x8000000000,%rsi
   1facd:	00 00 00 
   1fad0:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fad4:	48 89 f9             	mov    %rdi,%rcx
   1fad7:	48 81 c9 00 00 00 08 	or     $0x8000000,%rcx
   1fade:	48 85 f0             	test   %rsi,%rax
   1fae1:	48 be 00 00 00 00 00 	movabs $0x20000000000,%rsi
   1fae8:	02 00 00 
   1faeb:	48 0f 45 f9          	cmovne %rcx,%rdi
   1faef:	48 89 f9             	mov    %rdi,%rcx
   1faf2:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
   1faf9:	48 85 f0             	test   %rsi,%rax
   1fafc:	48 be 00 00 00 00 00 	movabs $0x10000000000,%rsi
   1fb03:	01 00 00 
   1fb06:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fb0a:	48 89 f9             	mov    %rdi,%rcx
   1fb0d:	48 81 c9 00 00 00 20 	or     $0x20000000,%rcx
   1fb14:	48 85 f0             	test   %rsi,%rax
   1fb17:	48 0f 45 f9          	cmovne %rcx,%rdi
   1fb1b:	a9 00 00 00 40       	test   $0x40000000,%eax
   1fb20:	75 1e                	jne    1fb40 <init_ipp_cpuid+0x200>
   1fb22:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   1fb27:	e8 ec 24 fe ff       	call   2018 <ippcpSetCpuFeatures@plt>
   1fb2c:	85 c0                	test   %eax,%eax
   1fb2e:	75 21                	jne    1fb51 <init_ipp_cpuid+0x211>
   1fb30:	31 c0                	xor    %eax,%eax
   1fb32:	48 83 c4 08          	add    $0x8,%rsp
   1fb36:	c3                   	ret    
   1fb37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fb3e:	00 00 
   1fb40:	48 09 d7             	or     %rdx,%rdi
   1fb43:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   1fb48:	e8 cb 24 fe ff       	call   2018 <ippcpSetCpuFeatures@plt>
   1fb4d:	85 c0                	test   %eax,%eax
   1fb4f:	74 df                	je     1fb30 <init_ipp_cpuid+0x1f0>
   1fb51:	b8 02 00 00 00       	mov    $0x2,%eax
   1fb56:	48 83 c4 08          	add    $0x8,%rsp
   1fb5a:	c3                   	ret    
   1fb5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fb60:	31 c0                	xor    %eax,%eax
   1fb62:	c3                   	ret    
   1fb63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fb68:	b8 02 00 00 00       	mov    $0x2,%eax
   1fb6d:	c3                   	ret    
   1fb6e:	66 90                	xchg   %ax,%ax

000000000001fb70 <sgx_create_report>:
   1fb70:	f3 0f 1e fa          	endbr64 
   1fb74:	55                   	push   %rbp
   1fb75:	48 89 e5             	mov    %rsp,%rbp
   1fb78:	41 57                	push   %r15
   1fb7a:	41 56                	push   %r14
   1fb7c:	41 55                	push   %r13
   1fb7e:	49 89 f5             	mov    %rsi,%r13
   1fb81:	31 f6                	xor    %esi,%esi
   1fb83:	41 54                	push   %r12
   1fb85:	53                   	push   %rbx
   1fb86:	48 89 d3             	mov    %rdx,%rbx
   1fb89:	ba 40 00 00 00       	mov    $0x40,%edx
   1fb8e:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   1fb95:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   1fb9c:	48 89 bc 24 78 01 00 	mov    %rdi,0x178(%rsp)
   1fba3:	00 
   1fba4:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   1fbab:	00 
   1fbac:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   1fbb3:	00 
   1fbb4:	4c 89 ff             	mov    %r15,%rdi
   1fbb7:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   1fbbe:	00 
   1fbbf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fbc6:	00 00 
   1fbc8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   1fbcf:	00 
   1fbd0:	31 c0                	xor    %eax,%eax
   1fbd2:	e8 69 3d ff ff       	call   13940 <__memset>
   1fbd7:	ba 00 02 00 00       	mov    $0x200,%edx
   1fbdc:	31 f6                	xor    %esi,%esi
   1fbde:	4c 89 f7             	mov    %r14,%rdi
   1fbe1:	e8 5a 3d ff ff       	call   13940 <__memset>
   1fbe6:	ba b0 01 00 00       	mov    $0x1b0,%edx
   1fbeb:	31 f6                	xor    %esi,%esi
   1fbed:	4c 89 e7             	mov    %r12,%rdi
   1fbf0:	e8 4b 3d ff ff       	call   13940 <__memset>
   1fbf5:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   1fbfc:	00 
   1fbfd:	4d 85 c0             	test   %r8,%r8
   1fc00:	74 2b                	je     1fc2d <sgx_create_report+0xbd>
   1fc02:	be 00 02 00 00       	mov    $0x200,%esi
   1fc07:	4c 89 c7             	mov    %r8,%rdi
   1fc0a:	e8 c1 82 fe ff       	call   7ed0 <sgx_is_within_enclave>
   1fc0f:	85 c0                	test   %eax,%eax
   1fc11:	0f 84 b9 00 00 00    	je     1fcd0 <sgx_create_report+0x160>
   1fc17:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   1fc1e:	00 
   1fc1f:	b9 40 00 00 00       	mov    $0x40,%ecx
   1fc24:	4c 89 f7             	mov    %r14,%rdi
   1fc27:	4c 89 c6             	mov    %r8,%rsi
   1fc2a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1fc2d:	4d 85 ed             	test   %r13,%r13
   1fc30:	74 4d                	je     1fc7f <sgx_create_report+0x10f>
   1fc32:	be 40 00 00 00       	mov    $0x40,%esi
   1fc37:	4c 89 ef             	mov    %r13,%rdi
   1fc3a:	e8 91 82 fe ff       	call   7ed0 <sgx_is_within_enclave>
   1fc3f:	85 c0                	test   %eax,%eax
   1fc41:	0f 84 89 00 00 00    	je     1fcd0 <sgx_create_report+0x160>
   1fc47:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
   1fc4d:	f3 41 0f 6f 4d 10    	movdqu 0x10(%r13),%xmm1
   1fc53:	f3 41 0f 6f 55 20    	movdqu 0x20(%r13),%xmm2
   1fc59:	f3 41 0f 6f 5d 30    	movdqu 0x30(%r13),%xmm3
   1fc5f:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   1fc66:	00 
   1fc67:	0f 29 8c 24 90 01 00 	movaps %xmm1,0x190(%rsp)
   1fc6e:	00 
   1fc6f:	0f 29 94 24 a0 01 00 	movaps %xmm2,0x1a0(%rsp)
   1fc76:	00 
   1fc77:	0f 29 9c 24 b0 01 00 	movaps %xmm3,0x1b0(%rsp)
   1fc7e:	00 
   1fc7f:	48 85 db             	test   %rbx,%rbx
   1fc82:	74 4c                	je     1fcd0 <sgx_create_report+0x160>
   1fc84:	be b0 01 00 00       	mov    $0x1b0,%esi
   1fc89:	48 89 df             	mov    %rbx,%rdi
   1fc8c:	e8 3f 82 fe ff       	call   7ed0 <sgx_is_within_enclave>
   1fc91:	85 c0                	test   %eax,%eax
   1fc93:	74 3b                	je     1fcd0 <sgx_create_report+0x160>
   1fc95:	4c 89 e2             	mov    %r12,%rdx
   1fc98:	4c 89 fe             	mov    %r15,%rsi
   1fc9b:	4c 89 f7             	mov    %r14,%rdi
   1fc9e:	e8 58 0a 00 00       	call   206fb <do_ereport>
   1fca3:	41 89 c0             	mov    %eax,%r8d
   1fca6:	b8 01 00 00 00       	mov    $0x1,%eax
   1fcab:	45 85 c0             	test   %r8d,%r8d
   1fcae:	75 25                	jne    1fcd5 <sgx_create_report+0x165>
   1fcb0:	31 c0                	xor    %eax,%eax
   1fcb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fcb8:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
   1fcbc:	48 89 14 c3          	mov    %rdx,(%rbx,%rax,8)
   1fcc0:	48 83 c0 01          	add    $0x1,%rax
   1fcc4:	48 83 f8 36          	cmp    $0x36,%rax
   1fcc8:	75 ee                	jne    1fcb8 <sgx_create_report+0x148>
   1fcca:	31 c0                	xor    %eax,%eax
   1fccc:	eb 07                	jmp    1fcd5 <sgx_create_report+0x165>
   1fcce:	66 90                	xchg   %ax,%ax
   1fcd0:	b8 02 00 00 00       	mov    $0x2,%eax
   1fcd5:	48 8b 8c 24 f8 07 00 	mov    0x7f8(%rsp),%rcx
   1fcdc:	00 
   1fcdd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1fce4:	00 00 
   1fce6:	75 0f                	jne    1fcf7 <sgx_create_report+0x187>
   1fce8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1fcec:	5b                   	pop    %rbx
   1fced:	41 5c                	pop    %r12
   1fcef:	41 5d                	pop    %r13
   1fcf1:	41 5e                	pop    %r14
   1fcf3:	41 5f                	pop    %r15
   1fcf5:	5d                   	pop    %rbp
   1fcf6:	c3                   	ret    
   1fcf7:	e8 54 ee fe ff       	call   eb50 <__stack_chk_fail>
   1fcfc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fd00 <sgx_self_report>:
   1fd00:	f3 0f 1e fa          	endbr64 
   1fd04:	48 83 3d 64 9b 01 00 	cmpq   $0x0,0x19b64(%rip)        # 39870 <_ZZ15sgx_self_reportE7_report+0x30>
   1fd0b:	00 
   1fd0c:	74 12                	je     1fd20 <sgx_self_report+0x20>
   1fd0e:	48 8d 05 2b 9b 01 00 	lea    0x19b2b(%rip),%rax        # 39840 <_ZZ15sgx_self_reportE7_report>
   1fd15:	c3                   	ret    
   1fd16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fd1d:	00 00 00 
   1fd20:	48 83 ec 08          	sub    $0x8,%rsp
   1fd24:	48 8d 3d 05 9b 01 00 	lea    0x19b05(%rip),%rdi        # 39830 <_ZZ15sgx_self_reportE11report_lock>
   1fd2b:	e8 20 b0 fe ff       	call   ad50 <sgx_spin_lock>
   1fd30:	48 83 3d 38 9b 01 00 	cmpq   $0x0,0x19b38(%rip)        # 39870 <_ZZ15sgx_self_reportE7_report+0x30>
   1fd37:	00 
   1fd38:	74 1e                	je     1fd58 <sgx_self_report+0x58>
   1fd3a:	48 8d 3d ef 9a 01 00 	lea    0x19aef(%rip),%rdi        # 39830 <_ZZ15sgx_self_reportE11report_lock>
   1fd41:	e8 7a b0 fe ff       	call   adc0 <sgx_spin_unlock>
   1fd46:	48 8d 05 f3 9a 01 00 	lea    0x19af3(%rip),%rax        # 39840 <_ZZ15sgx_self_reportE7_report>
   1fd4d:	48 83 c4 08          	add    $0x8,%rsp
   1fd51:	c3                   	ret    
   1fd52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fd58:	48 8d 15 e1 9a 01 00 	lea    0x19ae1(%rip),%rdx        # 39840 <_ZZ15sgx_self_reportE7_report>
   1fd5f:	31 f6                	xor    %esi,%esi
   1fd61:	31 ff                	xor    %edi,%edi
   1fd63:	e8 08 fe ff ff       	call   1fb70 <sgx_create_report>
   1fd68:	eb d0                	jmp    1fd3a <sgx_self_report+0x3a>
   1fd6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fd70 <getpagesize>:
   1fd70:	f3 0f 1e fa          	endbr64 
   1fd74:	b8 00 10 00 00       	mov    $0x1000,%eax
   1fd79:	c3                   	ret    
   1fd7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fd80 <labs>:
   1fd80:	f3 0f 1e fa          	endbr64 
   1fd84:	48 89 f8             	mov    %rdi,%rax
   1fd87:	48 99                	cqto   
   1fd89:	48 31 d0             	xor    %rdx,%rax
   1fd8c:	48 29 d0             	sub    %rdx,%rax
   1fd8f:	c3                   	ret    

Disassembly of section .nipx:

000000000001fd90 <init_enclave>:
   1fd90:	f3 0f 1e fa          	endbr64 
   1fd94:	41 55                	push   %r13
   1fd96:	41 54                	push   %r12
   1fd98:	55                   	push   %rbp
   1fd99:	53                   	push   %rbx
   1fd9a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   1fda1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fda8:	00 00 
   1fdaa:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1fdb1:	00 
   1fdb2:	31 c0                	xor    %eax,%eax
   1fdb4:	48 85 ff             	test   %rdi,%rdi
   1fdb7:	0f 84 c3 02 00 00    	je     20080 <init_enclave+0x2f0>
   1fdbd:	48 89 f3             	mov    %rsi,%rbx
   1fdc0:	48 85 f6             	test   %rsi,%rsi
   1fdc3:	0f 84 b7 02 00 00    	je     20080 <init_enclave+0x2f0>
   1fdc9:	48 83 3d 07 a2 00 00 	cmpq   $0x0,0xa207(%rip)        # 29fd8 <_Z9pcl_entryPvS_>
   1fdd0:	00 
   1fdd1:	49 89 fc             	mov    %rdi,%r12
   1fdd4:	74 10                	je     1fde6 <init_enclave+0x56>
   1fdd6:	0f ae e8             	lfence 
   1fdd9:	e8 32 22 fe ff       	call   2010 <_Z9pcl_entryPvS_@plt>
   1fdde:	85 c0                	test   %eax,%eax
   1fde0:	0f 85 9a 02 00 00    	jne    20080 <init_enclave+0x2f0>
   1fde6:	4c 89 e7             	mov    %r12,%rdi
   1fde9:	e8 42 a5 fe ff       	call   a330 <relocate_enclave>
   1fdee:	41 89 c4             	mov    %eax,%r12d
   1fdf1:	85 c0                	test   %eax,%eax
   1fdf3:	0f 85 87 02 00 00    	jne    20080 <init_enclave+0x2f0>
   1fdf9:	e8 c4 05 00 00       	call   203c2 <get_enclave_base>
   1fdfe:	48 8d 15 7b 2b 00 00 	lea    0x2b7b(%rip),%rdx        # 22980 <g_global_data>
   1fe05:	48 89 05 04 9f 00 00 	mov    %rax,0x9f04(%rip)        # 29d10 <g_enclave_base>
   1fe0c:	48 8b 8a 90 06 00 00 	mov    0x690(%rdx),%rcx
   1fe13:	48 89 0d ee 9e 00 00 	mov    %rcx,0x9eee(%rip)        # 29d08 <g_enclave_size>
   1fe1a:	48 8b 8a 80 06 00 00 	mov    0x680(%rdx),%rcx
   1fe21:	48 85 c9             	test   %rcx,%rcx
   1fe24:	74 1e                	je     1fe44 <init_enclave+0xb4>
   1fe26:	48 8b 8a 80 06 00 00 	mov    0x680(%rdx),%rcx
   1fe2d:	48 39 c8             	cmp    %rcx,%rax
   1fe30:	0f 85 54 02 00 00    	jne    2008a <init_enclave+0x2fa>
   1fe36:	48 8b 82 88 06 00 00 	mov    0x688(%rdx),%rax
   1fe3d:	48 89 05 cc 9e 00 00 	mov    %rax,0x9ecc(%rip)        # 29d10 <g_enclave_base>
   1fe44:	be b0 00 00 00       	mov    $0xb0,%esi
   1fe49:	48 89 df             	mov    %rbx,%rdi
   1fe4c:	e8 df 80 fe ff       	call   7f30 <sgx_is_outside_enclave>
   1fe51:	85 c0                	test   %eax,%eax
   1fe53:	0f 84 27 02 00 00    	je     20080 <init_enclave+0x2f0>
   1fe59:	0f ae e8             	lfence 
   1fe5c:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   1fe60:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   1fe65:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   1fe6a:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   1fe6f:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   1fe74:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1fe78:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   1fe7d:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   1fe82:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   1fe87:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   1fe8c:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   1fe93:	00 
   1fe94:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   1fe99:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1fea0:	00 
   1fea1:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   1fea8:	00 
   1fea9:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1feae:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   1feb3:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   1feb8:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1febd:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1fec2:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   1fec9:	00 
   1feca:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1fed1:	00 
   1fed2:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   1fed9:	00 
   1feda:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1fedf:	0f 85 3b 01 00 00    	jne    20020 <init_enclave+0x290>
   1fee5:	ba 14 00 00 00       	mov    $0x14,%edx
   1feea:	b9 9c 00 00 00       	mov    $0x9c,%ecx
   1feef:	31 c0                	xor    %eax,%eax
   1fef1:	48 01 e1             	add    %rsp,%rcx
   1fef4:	0f 1f 40 00          	nopl   0x0(%rax)
   1fef8:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
   1fefc:	48 83 c0 01          	add    $0x1,%rax
   1ff00:	48 39 d0             	cmp    %rdx,%rax
   1ff03:	72 f3                	jb     1fef8 <init_enclave+0x168>
   1ff05:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   1ff0c:	89 05 ee 9d 00 00    	mov    %eax,0x9dee(%rip)        # 29d00 <g_cpu_core_num>
   1ff12:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1ff16:	89 05 fc 9d 00 00    	mov    %eax,0x9dfc(%rip)        # 29d18 <g_sdk_version>
   1ff1c:	85 c0                	test   %eax,%eax
   1ff1e:	0f 85 2c 01 00 00    	jne    20050 <init_enclave+0x2c0>
   1ff24:	c7 05 ee 9d 00 00 00 	movl   $0x0,0x9dee(%rip)        # 29d1c <EDMM_supported>
   1ff2b:	00 00 00 
   1ff2e:	e8 1d 9b fe ff       	call   9a50 <get_heap_min_size>
   1ff33:	49 89 c5             	mov    %rax,%r13
   1ff36:	e8 a5 9a fe ff       	call   99e0 <get_heap_size>
   1ff3b:	48 89 c5             	mov    %rax,%rbp
   1ff3e:	e8 7d 9a fe ff       	call   99c0 <get_heap_base>
   1ff43:	44 89 e1             	mov    %r12d,%ecx
   1ff46:	4c 89 ea             	mov    %r13,%rdx
   1ff49:	48 89 ee             	mov    %rbp,%rsi
   1ff4c:	48 89 c7             	mov    %rax,%rdi
   1ff4f:	e8 2c ac fe ff       	call   ab80 <heap_init>
   1ff54:	85 c0                	test   %eax,%eax
   1ff56:	0f 85 24 01 00 00    	jne    20080 <init_enclave+0x2f0>
   1ff5c:	e8 cf a1 fe ff       	call   a130 <get_xfeature_state>
   1ff61:	48 8b 3c 24          	mov    (%rsp),%rdi
   1ff65:	48 89 c2             	mov    %rax,%rdx
   1ff68:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1ff6f:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1ff74:	48 0f 45 bc 24 a4 00 	cmovne 0xa4(%rsp),%rdi
   1ff7b:	00 00 
   1ff7d:	83 3d 94 9d 00 00 01 	cmpl   $0x1,0x9d94(%rip)        # 29d18 <g_sdk_version>
   1ff84:	7f 0f                	jg     1ff95 <init_enclave+0x205>
   1ff86:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1ff8d:	00 00 
   1ff8f:	0f 84 db 00 00 00    	je     20070 <init_enclave+0x2e0>
   1ff95:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   1ff9a:	e8 c1 7d fe ff       	call   7d60 <init_optimized_libs>
   1ff9f:	85 c0                	test   %eax,%eax
   1ffa1:	0f 85 d9 00 00 00    	jne    20080 <init_enclave+0x2f0>
   1ffa7:	e8 24 9b fe ff       	call   9ad0 <get_rsrv_size>
   1ffac:	48 85 c0             	test   %rax,%rax
   1ffaf:	74 2b                	je     1ffdc <init_enclave+0x24c>
   1ffb1:	e8 8a 9b fe ff       	call   9b40 <get_rsrv_min_size>
   1ffb6:	49 89 c4             	mov    %rax,%r12
   1ffb9:	e8 12 9b fe ff       	call   9ad0 <get_rsrv_size>
   1ffbe:	48 89 c5             	mov    %rax,%rbp
   1ffc1:	e8 ea 9a fe ff       	call   9ab0 <get_rsrv_base>
   1ffc6:	4c 89 e2             	mov    %r12,%rdx
   1ffc9:	48 89 ee             	mov    %rbp,%rsi
   1ffcc:	48 89 c7             	mov    %rax,%rdi
   1ffcf:	e8 fc f2 fe ff       	call   f2d0 <rsrv_mem_init>
   1ffd4:	85 c0                	test   %eax,%eax
   1ffd6:	0f 85 a4 00 00 00    	jne    20080 <init_enclave+0x2f0>
   1ffdc:	be 08 00 00 00       	mov    $0x8,%esi
   1ffe1:	48 8d 3d 10 9d 00 00 	lea    0x9d10(%rip),%rdi        # 29cf8 <__intel_security_cookie>
   1ffe8:	e8 e3 80 fe ff       	call   80d0 <sgx_read_rand>
   1ffed:	85 c0                	test   %eax,%eax
   1ffef:	0f 95 c0             	setne  %al
   1fff2:	0f b6 c0             	movzbl %al,%eax
   1fff5:	f7 d8                	neg    %eax
   1fff7:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   1fffe:	00 
   1ffff:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   20006:	00 00 
   20008:	0f 85 81 00 00 00    	jne    2008f <init_enclave+0x2ff>
   2000e:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   20015:	5b                   	pop    %rbx
   20016:	5d                   	pop    %rbp
   20017:	41 5c                	pop    %r12
   20019:	41 5d                	pop    %r13
   2001b:	c3                   	ret    
   2001c:	0f 1f 40 00          	nopl   0x0(%rax)
   20020:	ba b0 00 00 00       	mov    $0xb0,%edx
   20025:	48 81 bc 24 9c 00 00 	cmpq   $0xb0,0x9c(%rsp)
   2002c:	00 b0 00 00 00 
   20031:	48 89 d1             	mov    %rdx,%rcx
   20034:	48 0f 46 8c 24 9c 00 	cmovbe 0x9c(%rsp),%rcx
   2003b:	00 00 
   2003d:	48 29 ca             	sub    %rcx,%rdx
   20040:	0f 85 a9 fe ff ff    	jne    1feef <init_enclave+0x15f>
   20046:	e9 ba fe ff ff       	jmp    1ff05 <init_enclave+0x175>
   2004b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20050:	7e 2e                	jle    20080 <init_enclave+0x2f0>
   20052:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
   20057:	31 f6                	xor    %esi,%esi
   20059:	e8 62 9b fe ff       	call   9bc0 <feature_supported>
   2005e:	89 05 b8 9c 00 00    	mov    %eax,0x9cb8(%rip)        # 29d1c <EDMM_supported>
   20064:	41 89 c4             	mov    %eax,%r12d
   20067:	e9 c2 fe ff ff       	jmp    1ff2e <init_enclave+0x19e>
   2006c:	0f 1f 40 00          	nopl   0x0(%rax)
   20070:	31 f6                	xor    %esi,%esi
   20072:	e8 e9 7c fe ff       	call   7d60 <init_optimized_libs>
   20077:	85 c0                	test   %eax,%eax
   20079:	0f 84 28 ff ff ff    	je     1ffa7 <init_enclave+0x217>
   2007f:	90                   	nop
   20080:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20085:	e9 6d ff ff ff       	jmp    1fff7 <init_enclave+0x267>
   2008a:	e8 05 07 00 00       	call   20794 <abort>
   2008f:	e8 bc ea fe ff       	call   eb50 <__stack_chk_fail>
   20094:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   2009b:	00 00 00 00 
   2009f:	90                   	nop

00000000000200a0 <do_init_enclave>:
   200a0:	f3 0f 1e fa          	endbr64 
   200a4:	41 54                	push   %r12
   200a6:	49 89 f4             	mov    %rsi,%r12
   200a9:	55                   	push   %rbp
   200aa:	48 89 fd             	mov    %rdi,%rbp
   200ad:	53                   	push   %rbx
   200ae:	e8 0f 03 00 00       	call   203c2 <get_enclave_base>
   200b3:	48 89 c3             	mov    %rax,%rbx
   200b6:	e8 32 03 00 00       	call   203ed <lock_enclave>
   200bb:	85 c0                	test   %eax,%eax
   200bd:	74 11                	je     200d0 <do_init_enclave+0x30>
   200bf:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   200c5:	5b                   	pop    %rbx
   200c6:	5d                   	pop    %rbp
   200c7:	44 89 e0             	mov    %r12d,%eax
   200ca:	41 5c                	pop    %r12
   200cc:	c3                   	ret    
   200cd:	0f 1f 00             	nopl   (%rax)
   200d0:	48 89 ee             	mov    %rbp,%rsi
   200d3:	48 89 df             	mov    %rbx,%rdi
   200d6:	e8 b5 fc ff ff       	call   1fd90 <init_enclave>
   200db:	85 c0                	test   %eax,%eax
   200dd:	75 e0                	jne    200bf <do_init_enclave+0x1f>
   200df:	4c 89 e7             	mov    %r12,%rdi
   200e2:	be 01 00 00 00       	mov    $0x1,%esi
   200e7:	e8 d4 8f fe ff       	call   90c0 <do_init_thread>
   200ec:	41 89 c4             	mov    %eax,%r12d
   200ef:	85 c0                	test   %eax,%eax
   200f1:	75 cc                	jne    200bf <do_init_enclave+0x1f>
   200f3:	8b 05 23 9c 00 00    	mov    0x9c23(%rip),%eax        # 29d1c <EDMM_supported>
   200f9:	48 8d 2d 80 28 00 00 	lea    0x2880(%rip),%rbp        # 22980 <g_global_data>
   20100:	85 c0                	test   %eax,%eax
   20102:	74 5c                	je     20160 <do_init_enclave+0xc0>
   20104:	8b b5 38 01 00 00    	mov    0x138(%rbp),%esi
   2010a:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
   20111:	31 d2                	xor    %edx,%edx
   20113:	48 c1 e6 05          	shl    $0x5,%rsi
   20117:	48 01 fe             	add    %rdi,%rsi
   2011a:	e8 f1 86 fe ff       	call   8810 <_Z18accept_post_removePVK9_layout_tS1_m>
   2011f:	85 c0                	test   %eax,%eax
   20121:	75 9c                	jne    200bf <do_init_enclave+0x1f>
   20123:	e8 28 99 fe ff       	call   9a50 <get_heap_min_size>
   20128:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2012c:	31 d2                	xor    %edx,%edx
   2012e:	48 89 c6             	mov    %rax,%rsi
   20131:	48 89 c1             	mov    %rax,%rcx
   20134:	48 01 df             	add    %rbx,%rdi
   20137:	e8 64 e8 fe ff       	call   e9a0 <memset_s>
   2013c:	48 8d 05 05 9c 00 00 	lea    0x9c05(%rip),%rax        # 29d48 <rsrv_mem_min_size>
   20143:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   20147:	31 d2                	xor    %edx,%edx
   20149:	48 8b 30             	mov    (%rax),%rsi
   2014c:	48 01 df             	add    %rbx,%rdi
   2014f:	48 89 f1             	mov    %rsi,%rcx
   20152:	e8 49 e8 fe ff       	call   e9a0 <memset_s>
   20157:	eb 33                	jmp    2018c <do_init_enclave+0xec>
   20159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20160:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   20164:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   20168:	31 d2                	xor    %edx,%edx
   2016a:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   2016e:	48 01 df             	add    %rbx,%rdi
   20171:	e8 2a e8 fe ff       	call   e9a0 <memset_s>
   20176:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
   2017a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   2017e:	31 d2                	xor    %edx,%edx
   20180:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   20184:	48 01 df             	add    %rbx,%rdi
   20187:	e8 14 e8 fe ff       	call   e9a0 <memset_s>
   2018c:	c7 05 4a a1 00 00 02 	movl   $0x2,0xa14a(%rip)        # 2a2e0 <g_enclave_state>
   20193:	00 00 00 
   20196:	44 89 e0             	mov    %r12d,%eax
   20199:	5b                   	pop    %rbx
   2019a:	5d                   	pop    %rbp
   2019b:	41 5c                	pop    %r12
   2019d:	c3                   	ret    
   2019e:	66 90                	xchg   %ax,%ax

00000000000201a0 <sgx_is_enclave_crashed>:
   201a0:	f3 0f 1e fa          	endbr64 
   201a4:	48 83 ec 08          	sub    $0x8,%rsp
   201a8:	e8 21 02 00 00       	call   203ce <get_enclave_state>
   201ad:	83 f8 03             	cmp    $0x3,%eax
   201b0:	0f 94 c0             	sete   %al
   201b3:	48 83 c4 08          	add    $0x8,%rsp
   201b7:	0f b6 c0             	movzbl %al,%eax
   201ba:	c3                   	ret    
   201bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000201c0 <enter_enclave>:
   201c0:	f3 0f 1e fa          	endbr64 
   201c4:	41 55                	push   %r13
   201c6:	49 89 d5             	mov    %rdx,%r13
   201c9:	41 54                	push   %r12
   201cb:	49 89 f4             	mov    %rsi,%r12
   201ce:	55                   	push   %rbp
   201cf:	89 fd                	mov    %edi,%ebp
   201d1:	53                   	push   %rbx
   201d2:	89 cb                	mov    %ecx,%ebx
   201d4:	48 83 ec 18          	sub    $0x18,%rsp
   201d8:	e8 c3 ff ff ff       	call   201a0 <sgx_is_enclave_crashed>
   201dd:	85 c0                	test   %eax,%eax
   201df:	75 6f                	jne    20250 <enter_enclave+0x90>
   201e1:	83 fd ff             	cmp    $0xffffffff,%ebp
   201e4:	75 2a                	jne    20210 <enter_enclave+0x50>
   201e6:	85 db                	test   %ebx,%ebx
   201e8:	0f 84 2a 01 00 00    	je     20318 <enter_enclave+0x158>
   201ee:	bf 03 00 00 00       	mov    $0x3,%edi
   201f3:	e8 e7 01 00 00       	call   203df <set_enclave_state>
   201f8:	b8 01 00 00 00       	mov    $0x1,%eax
   201fd:	48 83 c4 18          	add    $0x18,%rsp
   20201:	5b                   	pop    %rbx
   20202:	5d                   	pop    %rbp
   20203:	41 5c                	pop    %r12
   20205:	41 5d                	pop    %r13
   20207:	c3                   	ret    
   20208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2020f:	00 
   20210:	e8 b9 01 00 00       	call   203ce <get_enclave_state>
   20215:	83 f8 02             	cmp    $0x2,%eax
   20218:	75 d4                	jne    201ee <enter_enclave+0x2e>
   2021a:	85 db                	test   %ebx,%ebx
   2021c:	0f 85 bb 00 00 00    	jne    202dd <enter_enclave+0x11d>
   20222:	85 ed                	test   %ebp,%ebp
   20224:	79 3a                	jns    20260 <enter_enclave+0xa0>
   20226:	83 fd fa             	cmp    $0xfffffffa,%ebp
   20229:	74 35                	je     20260 <enter_enclave+0xa0>
   2022b:	83 fd fe             	cmp    $0xfffffffe,%ebp
   2022e:	0f 84 fc 00 00 00    	je     20330 <enter_enclave+0x170>
   20234:	83 fd fc             	cmp    $0xfffffffc,%ebp
   20237:	0f 84 03 01 00 00    	je     20340 <enter_enclave+0x180>
   2023d:	83 fd fb             	cmp    $0xfffffffb,%ebp
   20240:	75 ac                	jne    201ee <enter_enclave+0x2e>
   20242:	4c 89 ef             	mov    %r13,%rdi
   20245:	e8 36 93 fe ff       	call   9580 <do_uninit_enclave>
   2024a:	89 c3                	mov    %eax,%ebx
   2024c:	eb 79                	jmp    202c7 <enter_enclave+0x107>
   2024e:	66 90                	xchg   %ax,%ax
   20250:	48 83 c4 18          	add    $0x18,%rsp
   20254:	b8 06 10 00 00       	mov    $0x1006,%eax
   20259:	5b                   	pop    %rbx
   2025a:	5d                   	pop    %rbp
   2025b:	41 5c                	pop    %r12
   2025d:	41 5d                	pop    %r13
   2025f:	c3                   	ret    
   20260:	e8 a8 01 00 00       	call   2040d <get_thread_data>
   20265:	48 85 c0             	test   %rax,%rax
   20268:	0f 84 e2 00 00 00    	je     20350 <enter_enclave+0x190>
   2026e:	48 8b 58 08          	mov    0x8(%rax),%rbx
   20272:	48 39 58 10          	cmp    %rbx,0x10(%rax)
   20276:	75 40                	jne    202b8 <enter_enclave+0xf8>
   20278:	48 8d 05 01 27 00 00 	lea    0x2701(%rip),%rax        # 22980 <g_global_data>
   2027f:	48 8b 50 38          	mov    0x38(%rax),%rdx
   20283:	48 85 d2             	test   %rdx,%rdx
   20286:	74 30                	je     202b8 <enter_enclave+0xf8>
   20288:	48 8b 58 50          	mov    0x50(%rax),%rbx
   2028c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   20291:	be 08 00 00 00       	mov    $0x8,%esi
   20296:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2029d:	00 00 
   2029f:	4c 01 eb             	add    %r13,%rbx
   202a2:	e8 29 7e fe ff       	call   80d0 <sgx_read_rand>
   202a7:	85 c0                	test   %eax,%eax
   202a9:	0f 85 ad 00 00 00    	jne    2035c <enter_enclave+0x19c>
   202af:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   202b4:	48 89 43 28          	mov    %rax,0x28(%rbx)
   202b8:	4c 89 ea             	mov    %r13,%rdx
   202bb:	4c 89 e6             	mov    %r12,%rsi
   202be:	89 ef                	mov    %ebp,%edi
   202c0:	e8 db 8f fe ff       	call   92a0 <do_ecall>
   202c5:	89 c3                	mov    %eax,%ebx
   202c7:	89 d8                	mov    %ebx,%eax
   202c9:	83 fb 01             	cmp    $0x1,%ebx
   202cc:	0f 84 1c ff ff ff    	je     201ee <enter_enclave+0x2e>
   202d2:	48 83 c4 18          	add    $0x18,%rsp
   202d6:	5b                   	pop    %rbx
   202d7:	5d                   	pop    %rbp
   202d8:	41 5c                	pop    %r12
   202da:	41 5d                	pop    %r13
   202dc:	c3                   	ret    
   202dd:	83 fb 01             	cmp    $0x1,%ebx
   202e0:	0f 85 08 ff ff ff    	jne    201ee <enter_enclave+0x2e>
   202e6:	83 fd fd             	cmp    $0xfffffffd,%ebp
   202e9:	0f 85 ff fe ff ff    	jne    201ee <enter_enclave+0x2e>
   202ef:	4c 89 ef             	mov    %r13,%rdi
   202f2:	e8 49 9b fe ff       	call   9e40 <trts_handle_exception>
   202f7:	4c 89 ef             	mov    %r13,%rdi
   202fa:	89 c3                	mov    %eax,%ebx
   202fc:	e8 ff 7e fe ff       	call   8200 <check_static_stack_canary>
   20301:	41 89 c0             	mov    %eax,%r8d
   20304:	b8 09 10 00 00       	mov    $0x1009,%eax
   20309:	45 85 c0             	test   %r8d,%r8d
   2030c:	0f 85 eb fe ff ff    	jne    201fd <enter_enclave+0x3d>
   20312:	eb b3                	jmp    202c7 <enter_enclave+0x107>
   20314:	0f 1f 40 00          	nopl   0x0(%rax)
   20318:	4c 89 ee             	mov    %r13,%rsi
   2031b:	4c 89 e7             	mov    %r12,%rdi
   2031e:	e8 7d fd ff ff       	call   200a0 <do_init_enclave>
   20323:	89 c3                	mov    %eax,%ebx
   20325:	eb a0                	jmp    202c7 <enter_enclave+0x107>
   20327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2032e:	00 00 
   20330:	4c 89 e7             	mov    %r12,%rdi
   20333:	e8 28 95 fe ff       	call   9860 <do_oret>
   20338:	89 c3                	mov    %eax,%ebx
   2033a:	eb 8b                	jmp    202c7 <enter_enclave+0x107>
   2033c:	0f 1f 40 00          	nopl   0x0(%rax)
   20340:	4c 89 e7             	mov    %r12,%rdi
   20343:	e8 48 91 fe ff       	call   9490 <do_ecall_add_thread>
   20348:	89 c3                	mov    %eax,%ebx
   2034a:	e9 78 ff ff ff       	jmp    202c7 <enter_enclave+0x107>
   2034f:	90                   	nop
   20350:	48 8d 05 29 26 00 00 	lea    0x2629(%rip),%rax        # 22980 <g_global_data>
   20357:	e9 2c ff ff ff       	jmp    20288 <enter_enclave+0xc8>
   2035c:	e8 33 04 00 00       	call   20794 <abort>

0000000000020361 <restore_xregs>:
   20361:	f3 0f 1e fa          	endbr64 
   20365:	48 89 f9             	mov    %rdi,%rcx
   20368:	48 8d 05 75 9f 00 00 	lea    0x9f75(%rip),%rax        # 2a2e4 <g_xsave_enabled>
   2036f:	8b 00                	mov    (%rax),%eax
   20371:	83 f8 00             	cmp    $0x0,%eax
   20374:	74 16                	je     2038c <restore_xregs+0x2b>
   20376:	48 31 c0             	xor    %rax,%rax
   20379:	48 31 d2             	xor    %rdx,%rdx
   2037c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20381:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   20386:	48 0f ae 29          	xrstor64 (%rcx)
   2038a:	eb 04                	jmp    20390 <restore_xregs+0x2f>
   2038c:	48 0f ae 09          	fxrstor64 (%rcx)
   20390:	c3                   	ret    

0000000000020391 <save_xregs>:
   20391:	f3 0f 1e fa          	endbr64 
   20395:	48 89 f9             	mov    %rdi,%rcx
   20398:	48 8d 05 45 9f 00 00 	lea    0x9f45(%rip),%rax        # 2a2e4 <g_xsave_enabled>
   2039f:	9b                   	fwait
   203a0:	8b 00                	mov    (%rax),%eax
   203a2:	83 f8 00             	cmp    $0x0,%eax
   203a5:	74 16                	je     203bd <save_xregs+0x2c>
   203a7:	48 31 c0             	xor    %rax,%rax
   203aa:	48 31 d2             	xor    %rdx,%rdx
   203ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   203b2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   203b7:	48 0f c7 21          	xsavec64 (%rcx)
   203bb:	eb 04                	jmp    203c1 <save_xregs+0x30>
   203bd:	48 0f ae 01          	fxsave64 (%rcx)
   203c1:	c3                   	ret    

00000000000203c2 <get_enclave_base>:
   203c2:	f3 0f 1e fa          	endbr64 
   203c6:	48 8d 05 33 fc fd ff 	lea    -0x203cd(%rip),%rax        # 0 <enclave.so>
   203cd:	c3                   	ret    

00000000000203ce <get_enclave_state>:
   203ce:	f3 0f 1e fa          	endbr64 
   203d2:	48 8d 0d 07 9f 00 00 	lea    0x9f07(%rip),%rcx        # 2a2e0 <g_enclave_state>
   203d9:	48 31 c0             	xor    %rax,%rax
   203dc:	8b 01                	mov    (%rcx),%eax
   203de:	c3                   	ret    

00000000000203df <set_enclave_state>:
   203df:	f3 0f 1e fa          	endbr64 
   203e3:	48 8d 05 f6 9e 00 00 	lea    0x9ef6(%rip),%rax        # 2a2e0 <g_enclave_state>
   203ea:	89 38                	mov    %edi,(%rax)
   203ec:	c3                   	ret    

00000000000203ed <lock_enclave>:
   203ed:	f3 0f 1e fa          	endbr64 
   203f1:	48 8d 15 e8 9e 00 00 	lea    0x9ee8(%rip),%rdx        # 2a2e0 <g_enclave_state>
   203f8:	48 31 c0             	xor    %rax,%rax
   203fb:	b8 00 00 00 00       	mov    $0x0,%eax
   20400:	48 31 c9             	xor    %rcx,%rcx
   20403:	b9 01 00 00 00       	mov    $0x1,%ecx
   20408:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   2040c:	c3                   	ret    

000000000002040d <get_thread_data>:
   2040d:	f3 0f 1e fa          	endbr64 
   20411:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   20418:	00 00 
   2041a:	c3                   	ret    

000000000002041b <get_stack_guard>:
   2041b:	f3 0f 1e fa          	endbr64 
   2041f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   20426:	00 00 
   20428:	c3                   	ret    

0000000000020429 <enclave_entry>:
   20429:	f3 0f 1e fa          	endbr64 
   2042d:	48 31 d2             	xor    %rdx,%rdx
   20430:	48 01 d2             	add    %rdx,%rdx
   20433:	fc                   	cld    
   20434:	4d 31 c0             	xor    %r8,%r8
   20437:	4d 31 c9             	xor    %r9,%r9
   2043a:	4d 31 d2             	xor    %r10,%r10
   2043d:	4d 31 db             	xor    %r11,%r11
   20440:	4d 31 e4             	xor    %r12,%r12
   20443:	4d 31 ed             	xor    %r13,%r13
   20446:	4d 31 f6             	xor    %r14,%r14
   20449:	4d 31 ff             	xor    %r15,%r15
   2044c:	48 83 f8 00          	cmp    $0x0,%rax
   20450:	0f 85 d1 00 00 00    	jne    20527 <enclave_entry+0xfe>
   20456:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   2045d:	00 00 
   2045f:	48 83 f8 00          	cmp    $0x0,%rax
   20463:	75 0f                	jne    20474 <enclave_entry+0x4b>
   20465:	48 89 d8             	mov    %rbx,%rax
   20468:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   2046e:	48 2d b0 02 00 00    	sub    $0x2b0,%rax
   20474:	48 94                	xchg   %rax,%rsp
   20476:	51                   	push   %rcx
   20477:	55                   	push   %rbp
   20478:	48 89 e5             	mov    %rsp,%rbp
   2047b:	9c                   	pushf  
   2047c:	48 f7 14 24          	notq   (%rsp)
   20480:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   20487:	00 
   20488:	48 f7 14 24          	notq   (%rsp)
   2048c:	9d                   	popf   
   2048d:	48 83 ec 30          	sub    $0x30,%rsp
   20491:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   20495:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   20499:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   2049d:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   204a1:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   204a5:	48 83 ec 20          	sub    $0x20,%rsp
   204a9:	48 8d 3d 90 2b 00 00 	lea    0x2b90(%rip),%rdi        # 23040 <SYNTHETIC_STATE>
   204b0:	e8 ac fe ff ff       	call   20361 <restore_xregs>
   204b5:	0f ae e8             	lfence 
   204b8:	48 83 c4 20          	add    $0x20,%rsp
   204bc:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   204c0:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   204c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   204c8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   204cc:	e8 ef fc ff ff       	call   201c0 <enter_enclave>
   204d1:	48 89 c3             	mov    %rax,%rbx
   204d4:	48 8d 3d 65 2b 00 00 	lea    0x2b65(%rip),%rdi        # 23040 <SYNTHETIC_STATE>
   204db:	e8 81 fe ff ff       	call   20361 <restore_xregs>
   204e0:	0f ae e8             	lfence 
   204e3:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   204ea:	48 89 de             	mov    %rbx,%rsi
   204ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   204f1:	48 89 ec             	mov    %rbp,%rsp
   204f4:	5d                   	pop    %rbp
   204f5:	5b                   	pop    %rbx
   204f6:	48 89 d4             	mov    %rdx,%rsp
   204f9:	48 31 c9             	xor    %rcx,%rcx
   204fc:	48 31 d2             	xor    %rdx,%rdx
   204ff:	4d 31 c0             	xor    %r8,%r8
   20502:	4d 31 c9             	xor    %r9,%r9
   20505:	4d 31 d2             	xor    %r10,%r10
   20508:	4d 31 db             	xor    %r11,%r11
   2050b:	4d 31 e4             	xor    %r12,%r12
   2050e:	4d 31 ed             	xor    %r13,%r13
   20511:	4d 31 f6             	xor    %r14,%r14
   20514:	4d 31 ff             	xor    %r15,%r15
   20517:	48 01 d2             	add    %rdx,%rdx
   2051a:	fc                   	cld    
   2051b:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   20522:	0f 01 d7             	enclu  
   20525:	0f 0b                	ud2    
   20527:	48 89 c2             	mov    %rax,%rdx
   2052a:	48 89 d8             	mov    %rbx,%rax
   2052d:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   20533:	e9 3c ff ff ff       	jmp    20474 <enclave_entry+0x4b>
   20538:	0f 0b                	ud2    

000000000002053a <do_ocall>:
   2053a:	f3 0f 1e fa          	endbr64 
   2053e:	55                   	push   %rbp
   2053f:	48 89 e5             	mov    %rsp,%rbp
   20542:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   20546:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   2054a:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   20551:	00 00 
   20553:	48 29 c4             	sub    %rax,%rsp
   20556:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   2055d:	48 f7 d0             	not    %rax
   20560:	48 21 c4             	and    %rax,%rsp
   20563:	48 89 e1             	mov    %rsp,%rcx
   20566:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   2056d:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   20574:	00 
   20575:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   2057a:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   2057f:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   20584:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   20589:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   2058e:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   20593:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   20598:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   2059d:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   205a4:	00 
   205a5:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   205ac:	00 00 
   205ae:	48 89 c1             	mov    %rax,%rcx
   205b1:	48 c1 e9 02          	shr    $0x2,%rcx
   205b5:	48 31 c0             	xor    %rax,%rax
   205b8:	fc                   	cld    
   205b9:	f3 ab                	rep stos %eax,%es:(%rdi)
   205bb:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   205c2:	00 
   205c3:	48 89 3c 24          	mov    %rdi,(%rsp)
   205c7:	e8 c5 fd ff ff       	call   20391 <save_xregs>
   205cc:	48 8d 3d 6d 2a 00 00 	lea    0x2a6d(%rip),%rdi        # 23040 <SYNTHETIC_STATE>
   205d3:	48 89 3c 24          	mov    %rdi,(%rsp)
   205d7:	e8 85 fd ff ff       	call   20361 <restore_xregs>
   205dc:	0f ae e8             	lfence 
   205df:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   205e4:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   205e9:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   205f0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   205f5:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   205fa:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   20601:	00 00 
   20603:	48 89 c3             	mov    %rax,%rbx
   20606:	48 89 e7             	mov    %rsp,%rdi
   20609:	e8 12 92 fe ff       	call   9820 <update_ocall_lastsp>
   2060e:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   20613:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   20618:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   2061c:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   20623:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   2062a:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   2062e:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   20635:	48 31 c9             	xor    %rcx,%rcx
   20638:	48 31 d2             	xor    %rdx,%rdx
   2063b:	4d 31 c0             	xor    %r8,%r8
   2063e:	4d 31 c9             	xor    %r9,%r9
   20641:	4d 31 d2             	xor    %r10,%r10
   20644:	4d 31 db             	xor    %r11,%r11
   20647:	4d 31 e4             	xor    %r12,%r12
   2064a:	4d 31 ed             	xor    %r13,%r13
   2064d:	4d 31 f6             	xor    %r14,%r14
   20650:	4d 31 ff             	xor    %r15,%r15
   20653:	48 01 d2             	add    %rdx,%rdx
   20656:	fc                   	cld    
   20657:	0f 01 d7             	enclu  

000000000002065a <__morestack>:
   2065a:	f3 0f 1e fa          	endbr64 
   2065e:	55                   	push   %rbp
   2065f:	48 89 e5             	mov    %rsp,%rbp
   20662:	48 83 ec 20          	sub    $0x20,%rsp
   20666:	e8 cf fe ff ff       	call   2053a <do_ocall>
   2066b:	c9                   	leave  
   2066c:	c3                   	ret    

000000000002066d <asm_oret>:
   2066d:	f3 0f 1e fa          	endbr64 
   20671:	48 89 e3             	mov    %rsp,%rbx
   20674:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20679:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2067e:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   20682:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   20689:	00 
   2068a:	e8 d2 fc ff ff       	call   20361 <restore_xregs>
   2068f:	0f ae e8             	lfence 
   20692:	48 31 c0             	xor    %rax,%rax
   20695:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2069a:	48 29 f9             	sub    %rdi,%rcx
   2069d:	48 83 e9 08          	sub    $0x8,%rcx
   206a1:	48 c1 e9 02          	shr    $0x2,%rcx
   206a5:	fc                   	cld    
   206a6:	f3 ab                	rep stos %eax,%es:(%rdi)
   206a8:	48 8b 43 10          	mov    0x10(%rbx),%rax
   206ac:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   206b1:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   206b6:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   206bb:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   206c0:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   206c5:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   206ca:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   206cf:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   206d4:	48 89 ec             	mov    %rbp,%rsp
   206d7:	5d                   	pop    %rbp
   206d8:	c3                   	ret    
   206d9:	0f 0b                	ud2    

00000000000206db <do_egetkey>:
   206db:	f3 0f 1e fa          	endbr64 
   206df:	53                   	push   %rbx
   206e0:	51                   	push   %rcx
   206e1:	52                   	push   %rdx
   206e2:	48 89 fb             	mov    %rdi,%rbx
   206e5:	48 89 f1             	mov    %rsi,%rcx
   206e8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   206ef:	0f 01 d7             	enclu  
   206f2:	74 03                	je     206f7 <do_egetkey+0x1c>
   206f4:	48 31 c0             	xor    %rax,%rax
   206f7:	5a                   	pop    %rdx
   206f8:	59                   	pop    %rcx
   206f9:	5b                   	pop    %rbx
   206fa:	c3                   	ret    

00000000000206fb <do_ereport>:
   206fb:	f3 0f 1e fa          	endbr64 
   206ff:	53                   	push   %rbx
   20700:	51                   	push   %rcx
   20701:	52                   	push   %rdx
   20702:	48 89 fb             	mov    %rdi,%rbx
   20705:	48 89 f1             	mov    %rsi,%rcx
   20708:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   2070f:	f8                   	clc    

0000000000020710 <Lereport_inst>:
   20710:	0f 01 d7             	enclu  
   20713:	0f 92 c0             	setb   %al
   20716:	5a                   	pop    %rdx
   20717:	59                   	pop    %rcx
   20718:	5b                   	pop    %rbx
   20719:	c3                   	ret    

000000000002071a <do_everifyreport2>:
   2071a:	f3 0f 1e fa          	endbr64 
   2071e:	53                   	push   %rbx
   2071f:	51                   	push   %rcx
   20720:	52                   	push   %rdx
   20721:	48 89 fb             	mov    %rdi,%rbx
   20724:	48 89 f1             	mov    %rsi,%rcx
   20727:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

000000000002072e <Leverifyreport2_inst>:
   2072e:	0f 01 d7             	enclu  
   20731:	74 03                	je     20736 <Leverifyreport2_inst+0x8>
   20733:	48 31 c0             	xor    %rax,%rax
   20736:	5a                   	pop    %rdx
   20737:	59                   	pop    %rcx
   20738:	5b                   	pop    %rbx
   20739:	c3                   	ret    

000000000002073a <do_eaccept>:
   2073a:	f3 0f 1e fa          	endbr64 
   2073e:	53                   	push   %rbx
   2073f:	51                   	push   %rcx
   20740:	52                   	push   %rdx
   20741:	48 89 fb             	mov    %rdi,%rbx
   20744:	48 89 f1             	mov    %rsi,%rcx
   20747:	b8 05 00 00 00       	mov    $0x5,%eax
   2074c:	0f 01 d7             	enclu  
   2074f:	83 f8 00             	cmp    $0x0,%eax
   20752:	75 40                	jne    20794 <abort>
   20754:	5a                   	pop    %rdx
   20755:	59                   	pop    %rcx
   20756:	5b                   	pop    %rbx
   20757:	c3                   	ret    

0000000000020758 <do_emodpe>:
   20758:	f3 0f 1e fa          	endbr64 
   2075c:	53                   	push   %rbx
   2075d:	51                   	push   %rcx
   2075e:	52                   	push   %rdx
   2075f:	48 89 fb             	mov    %rdi,%rbx
   20762:	48 89 f1             	mov    %rsi,%rcx
   20765:	b8 06 00 00 00       	mov    $0x6,%eax
   2076a:	0f 01 d7             	enclu  
   2076d:	5a                   	pop    %rdx
   2076e:	59                   	pop    %rcx
   2076f:	5b                   	pop    %rbx
   20770:	c3                   	ret    

0000000000020771 <do_rdrand>:
   20771:	f3 0f 1e fa          	endbr64 
   20775:	b9 0a 00 00 00       	mov    $0xa,%ecx
   2077a:	0f c7 f0             	rdrand %eax
   2077d:	72 08                	jb     20787 <do_rdrand+0x16>
   2077f:	ff c9                	dec    %ecx
   20781:	75 f7                	jne    2077a <do_rdrand+0x9>
   20783:	48 31 c0             	xor    %rax,%rax
   20786:	c3                   	ret    
   20787:	48 89 f9             	mov    %rdi,%rcx
   2078a:	89 01                	mov    %eax,(%rcx)
   2078c:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   20793:	c3                   	ret    

0000000000020794 <abort>:
   20794:	f3 0f 1e fa          	endbr64 
   20798:	48 8d 05 41 9b 00 00 	lea    0x9b41(%rip),%rax        # 2a2e0 <g_enclave_state>
   2079f:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   207a5:	0f 0b                	ud2    

00000000000207a7 <continue_execution>:
   207a7:	f3 0f 1e fa          	endbr64 
   207ab:	48 89 f9             	mov    %rdi,%rcx
   207ae:	48 8b 01             	mov    (%rcx),%rax
   207b1:	50                   	push   %rax
   207b2:	48 8b 41 08          	mov    0x8(%rcx),%rax
   207b6:	50                   	push   %rax
   207b7:	48 8b 41 20          	mov    0x20(%rcx),%rax
   207bb:	48 2d 88 00 00 00    	sub    $0x88,%rax
   207c1:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   207c5:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   207c9:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   207cd:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   207d1:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   207d5:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   207d9:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   207dd:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   207e1:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   207e5:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   207e9:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   207ed:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   207f1:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   207f5:	ff b1 80 00 00 00    	push   0x80(%rcx)
   207fb:	9d                   	popf   
   207fc:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   20803:	48 89 08             	mov    %rcx,(%rax)
   20806:	59                   	pop    %rcx
   20807:	5c                   	pop    %rsp
   20808:	48 94                	xchg   %rax,%rsp
   2080a:	c2 80 00             	ret    $0x80

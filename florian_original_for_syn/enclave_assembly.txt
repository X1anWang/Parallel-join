
enclave.signed.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000002000 <.plt>:
    2000:	ff 35 02 a0 02 00    	push   0x2a002(%rip)        # 2c008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2006:	ff 25 04 a0 02 00    	jmp    *0x2a004(%rip)        # 2c010 <_GLOBAL_OFFSET_TABLE_+0x10>
    200c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000002010 <_Z9pcl_entryPvS_@plt>:
    2010:	ff 25 c2 9f 02 00    	jmp    *0x29fc2(%rip)        # 2bfd8 <_Z9pcl_entryPvS_>
    2016:	66 90                	xchg   %ax,%ax

0000000000002018 <ippcpSetCpuFeatures@plt>:
    2018:	ff 25 d2 9f 02 00    	jmp    *0x29fd2(%rip)        # 2bff0 <ippcpSetCpuFeatures>
    201e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002020 <_ZSt10unexpectedv.cold>:
    2020:	48 8d 3d b1 b0 02 00 	lea    0x2b0b1(%rip),%rdi        # 2d0d8 <_ZGVZSt10unexpectedvE4info>
    2027:	e8 d4 ae 01 00       	call   1cf00 <__cxa_guard_abort>
    202c:	48 89 ef             	mov    %rbp,%rdi
    202f:	e8 cc 73 01 00       	call   19400 <_Unwind_Resume>

0000000000002034 <__cxa_call_unexpected>:
    2034:	f3 0f 1e fa          	endbr64 
    2038:	50                   	push   %rax
    2039:	58                   	pop    %rax
    203a:	50                   	push   %rax
    203b:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
    2042:	55 4e 47 
    2045:	48 39 07             	cmp    %rax,(%rdi)
    2048:	75 10                	jne    205a <__cxa_call_unexpected+0x26>
    204a:	48 8b 47 b8          	mov    -0x48(%rdi),%rax
    204e:	48 85 c0             	test   %rax,%rax
    2051:	74 07                	je     205a <__cxa_call_unexpected+0x26>
    2053:	ff d0                	call   *%rax
    2055:	e8 aa f5 01 00       	call   21604 <abort>
    205a:	e8 b1 a3 01 00       	call   1c410 <_ZSt10unexpectedv>
    205f:	e8 a0 f5 01 00       	call   21604 <abort>

0000000000002064 <__cxa_begin_catch.cold>:
    2064:	48 83 c0 01          	add    $0x1,%rax
    2068:	75 05                	jne    206f <__cxa_begin_catch.cold+0xb>
    206a:	e8 c5 ff ff ff       	call   2034 <__cxa_call_unexpected>
    206f:	e8 8c 73 01 00       	call   19400 <_Unwind_Resume>

0000000000002074 <_ZSt9terminatev.cold>:
    2074:	48 8d 3d 6d b0 02 00 	lea    0x2b06d(%rip),%rdi        # 2d0e8 <_ZGVZSt9terminatevE4info>
    207b:	e8 80 ae 01 00       	call   1cf00 <__cxa_guard_abort>
    2080:	48 89 ef             	mov    %rbp,%rdi
    2083:	e8 78 73 01 00       	call   19400 <_Unwind_Resume>
    2088:	e8 03 a4 01 00       	call   1c490 <__cxa_begin_catch>
    208d:	e8 72 f5 01 00       	call   21604 <abort>
    2092:	e8 f9 a3 01 00       	call   1c490 <__cxa_begin_catch>
    2097:	e8 68 f5 01 00       	call   21604 <abort>
    209c:	f3 0f 1e fa          	endbr64 
    20a0:	48 89 c5             	mov    %rax,%rbp
    20a3:	e8 b8 a5 01 00       	call   1c660 <__cxa_end_catch>
    20a8:	48 89 ef             	mov    %rbp,%rdi
    20ab:	e8 50 73 01 00       	call   19400 <_Unwind_Resume>
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	48 89 c5             	mov    %rax,%rbp
    20b7:	e8 a4 a5 01 00       	call   1c660 <__cxa_end_catch>
    20bc:	48 89 ef             	mov    %rbp,%rdi
    20bf:	e8 3c 73 01 00       	call   19400 <_Unwind_Resume>

00000000000020c4 <__cxa_free_exception.cold>:
    20c4:	e8 c7 a3 01 00       	call   1c490 <__cxa_begin_catch>
    20c9:	e8 42 a4 01 00       	call   1c510 <_ZSt9terminatev>
    20ce:	f3 0f 1e fa          	endbr64 
    20d2:	48 89 c5             	mov    %rax,%rbp
    20d5:	e8 86 a5 01 00       	call   1c660 <__cxa_end_catch>
    20da:	48 89 ef             	mov    %rbp,%rdi
    20dd:	e8 1e 73 01 00       	call   19400 <_Unwind_Resume>

00000000000020e2 <_Znwm.cold>:
    20e2:	bf 08 00 00 00       	mov    $0x8,%edi
    20e7:	e8 04 a7 01 00       	call   1c7f0 <__cxa_allocate_exception>
    20ec:	48 89 c7             	mov    %rax,%rdi
    20ef:	48 89 c5             	mov    %rax,%rbp
    20f2:	e8 99 ae 01 00       	call   1cf90 <_ZNSt9bad_allocC1Ev>
    20f7:	48 8d 15 42 ae 01 00 	lea    0x1ae42(%rip),%rdx        # 1cf40 <_ZNSt9bad_allocD1Ev>
    20fe:	48 8d 35 6b 9c 02 00 	lea    0x29c6b(%rip),%rsi        # 2bd70 <_ZTISt9bad_alloc>
    2105:	48 89 ef             	mov    %rbp,%rdi
    2108:	e8 e3 a7 01 00       	call   1c8f0 <__cxa_throw>
    210d:	90                   	nop

000000000000210e <_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv>:
    210e:	f3 0f 1e fa          	endbr64 
    2112:	41 54                	push   %r12
    2114:	bf 10 00 00 00       	mov    $0x10,%edi
    2119:	55                   	push   %rbp
    211a:	50                   	push   %rax
    211b:	e8 d0 a6 01 00       	call   1c7f0 <__cxa_allocate_exception>
    2120:	48 8d 35 be 13 02 00 	lea    0x213be(%rip),%rsi        # 234e5 <_ZTSN10__cxxabiv120__si_class_type_infoE+0x25>
    2127:	48 89 c7             	mov    %rax,%rdi
    212a:	48 89 c5             	mov    %rax,%rbp
    212d:	e8 5e b2 01 00       	call   1d390 <_ZNSt11logic_errorC1EPKc>
    2132:	48 8d 15 77 b0 01 00 	lea    0x1b077(%rip),%rdx        # 1d1b0 <_ZNSt12length_errorD1Ev>
    2139:	48 8d 05 78 9b 02 00 	lea    0x29b78(%rip),%rax        # 2bcb8 <_ZTVSt12length_error+0x10>
    2140:	48 8d 35 01 9d 02 00 	lea    0x29d01(%rip),%rsi        # 2be48 <_ZTISt12length_error>
    2147:	48 89 ef             	mov    %rbp,%rdi
    214a:	48 89 45 00          	mov    %rax,0x0(%rbp)
    214e:	e8 9d a7 01 00       	call   1c8f0 <__cxa_throw>
    2153:	f3 0f 1e fa          	endbr64 
    2157:	49 89 c4             	mov    %rax,%r12
    215a:	48 89 ef             	mov    %rbp,%rdi
    215d:	e8 3e a4 01 00       	call   1c5a0 <__cxa_free_exception>
    2162:	4c 89 e7             	mov    %r12,%rdi
    2165:	e8 96 72 01 00       	call   19400 <_Unwind_Resume>

000000000000216a <_ZNSt11logic_errorC2EPKc.cold>:
    216a:	4c 89 e7             	mov    %r12,%rdi
    216d:	e8 ae ad 01 00       	call   1cf20 <_ZNSt9exceptionD1Ev>
    2172:	48 89 ef             	mov    %rbp,%rdi
    2175:	e8 86 72 01 00       	call   19400 <_Unwind_Resume>

000000000000217a <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>:
    217a:	4c 89 e7             	mov    %r12,%rdi
    217d:	e8 9e ad 01 00       	call   1cf20 <_ZNSt9exceptionD1Ev>
    2182:	48 89 ef             	mov    %rbp,%rdi
    2185:	e8 76 72 01 00       	call   19400 <_Unwind_Resume>

000000000000218a <_ZNSt13runtime_errorC2EPKc.cold>:
    218a:	4c 89 e7             	mov    %r12,%rdi
    218d:	e8 8e ad 01 00       	call   1cf20 <_ZNSt9exceptionD1Ev>
    2192:	48 89 ef             	mov    %rbp,%rdi
    2195:	e8 66 72 01 00       	call   19400 <_Unwind_Resume>

000000000000219a <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>:
    219a:	f3 0f 1e fa          	endbr64 
    219e:	41 54                	push   %r12
    21a0:	bf 10 00 00 00       	mov    $0x10,%edi
    21a5:	55                   	push   %rbp
    21a6:	50                   	push   %rax
    21a7:	e8 44 a6 01 00       	call   1c7f0 <__cxa_allocate_exception>
    21ac:	48 8d 35 9e 13 02 00 	lea    0x2139e(%rip),%rsi        # 23551 <_ZTSSt12out_of_range+0x11>
    21b3:	48 89 c7             	mov    %rax,%rdi
    21b6:	48 89 c5             	mov    %rax,%rbp
    21b9:	e8 d2 b1 01 00       	call   1d390 <_ZNSt11logic_errorC1EPKc>
    21be:	48 8d 15 eb af 01 00 	lea    0x1afeb(%rip),%rdx        # 1d1b0 <_ZNSt12length_errorD1Ev>
    21c5:	48 8d 05 ec 9a 02 00 	lea    0x29aec(%rip),%rax        # 2bcb8 <_ZTVSt12length_error+0x10>
    21cc:	48 8d 35 75 9c 02 00 	lea    0x29c75(%rip),%rsi        # 2be48 <_ZTISt12length_error>
    21d3:	48 89 ef             	mov    %rbp,%rdi
    21d6:	48 89 45 00          	mov    %rax,0x0(%rbp)
    21da:	e8 11 a7 01 00       	call   1c8f0 <__cxa_throw>
    21df:	f3 0f 1e fa          	endbr64 
    21e3:	49 89 c4             	mov    %rax,%r12
    21e6:	48 89 ef             	mov    %rbp,%rdi
    21e9:	e8 b2 a3 01 00       	call   1c5a0 <__cxa_free_exception>
    21ee:	4c 89 e7             	mov    %r12,%rdi
    21f1:	e8 0a 72 01 00       	call   19400 <_Unwind_Resume>

00000000000021f6 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>:
    21f6:	f3 0f 1e fa          	endbr64 
    21fa:	41 54                	push   %r12
    21fc:	bf 10 00 00 00       	mov    $0x10,%edi
    2201:	55                   	push   %rbp
    2202:	50                   	push   %rax
    2203:	e8 e8 a5 01 00       	call   1c7f0 <__cxa_allocate_exception>
    2208:	48 8d 35 42 13 02 00 	lea    0x21342(%rip),%rsi        # 23551 <_ZTSSt12out_of_range+0x11>
    220f:	48 89 c7             	mov    %rax,%rdi
    2212:	48 89 c5             	mov    %rax,%rbp
    2215:	e8 76 b1 01 00       	call   1d390 <_ZNSt11logic_errorC1EPKc>
    221a:	48 8d 15 df af 01 00 	lea    0x1afdf(%rip),%rdx        # 1d200 <_ZNSt12out_of_rangeD1Ev>
    2221:	48 8d 05 b8 9a 02 00 	lea    0x29ab8(%rip),%rax        # 2bce0 <_ZTVSt12out_of_range+0x10>
    2228:	48 8d 35 31 9c 02 00 	lea    0x29c31(%rip),%rsi        # 2be60 <_ZTISt12out_of_range>
    222f:	48 89 ef             	mov    %rbp,%rdi
    2232:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2236:	e8 b5 a6 01 00       	call   1c8f0 <__cxa_throw>
    223b:	f3 0f 1e fa          	endbr64 
    223f:	49 89 c4             	mov    %rax,%r12
    2242:	48 89 ef             	mov    %rbp,%rdi
    2245:	e8 56 a3 01 00       	call   1c5a0 <__cxa_free_exception>
    224a:	4c 89 e7             	mov    %r12,%rdi
    224d:	e8 ae 71 01 00       	call   19400 <_Unwind_Resume>

0000000000002252 <_ULx86_64_r_uc_addr.cold>:
    2252:	31 c0                	xor    %eax,%eax
    2254:	c3                   	ret    

0000000000002255 <_ULx86_64_access_reg.cold>:
    2255:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    225a:	e9 d9 c2 01 00       	jmp    1e538 <_ULx86_64_access_reg+0x58>
    225f:	90                   	nop

0000000000002260 <trts_access_version_dummy1>:
    2260:	f3 0f 1e fa          	endbr64 
    2264:	48 8d 05 55 9f 02 00 	lea    0x29f55(%rip),%rax        # 2c1c0 <sgx_trts_version>
    226b:	c6 00 73             	movb   $0x73,(%rax)
    226e:	c3                   	ret    
    226f:	90                   	nop

0000000000002270 <tstdc_access_version_dummy1>:
    2270:	f3 0f 1e fa          	endbr64 
    2274:	c6 05 75 9f 02 00 73 	movb   $0x73,0x29f75(%rip)        # 2c1f0 <sgx_tstdc_version>
    227b:	48 8d 05 6e 9f 02 00 	lea    0x29f6e(%rip),%rax        # 2c1f0 <sgx_tstdc_version>
    2282:	c3                   	ret    
    2283:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228a:	00 00 00 
    228d:	0f 1f 00             	nopl   (%rax)

0000000000002290 <tcxx_access_version_dummy1>:
    2290:	f3 0f 1e fa          	endbr64 
    2294:	c6 05 c5 9f 02 00 73 	movb   $0x73,0x29fc5(%rip)        # 2c260 <sgx_tcxx_version>
    229b:	48 8d 05 be 9f 02 00 	lea    0x29fbe(%rip),%rax        # 2c260 <sgx_tcxx_version>
    22a2:	c3                   	ret    
    22a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22aa:	00 00 00 
    22ad:	0f 1f 00             	nopl   (%rax)

00000000000022b0 <tcxx_access_version_dummy3>:
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	c6 05 a5 9f 02 00 73 	movb   $0x73,0x29fa5(%rip)        # 2c260 <sgx_tcxx_version>
    22bb:	48 8d 05 9e 9f 02 00 	lea    0x29f9e(%rip),%rax        # 2c260 <sgx_tcxx_version>
    22c2:	c3                   	ret    
    22c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ca:	00 00 00 
    22cd:	0f 1f 00             	nopl   (%rax)

00000000000022d0 <tcxx_access_version_dummy5>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	c6 05 85 9f 02 00 73 	movb   $0x73,0x29f85(%rip)        # 2c260 <sgx_tcxx_version>
    22db:	48 8d 05 7e 9f 02 00 	lea    0x29f7e(%rip),%rax        # 2c260 <sgx_tcxx_version>
    22e2:	c3                   	ret    
    22e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ea:	00 00 00 
    22ed:	0f 1f 00             	nopl   (%rax)

00000000000022f0 <tcxx_access_version_dummy4>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	c6 05 65 9f 02 00 73 	movb   $0x73,0x29f65(%rip)        # 2c260 <sgx_tcxx_version>
    22fb:	48 8d 05 5e 9f 02 00 	lea    0x29f5e(%rip),%rax        # 2c260 <sgx_tcxx_version>
    2302:	c3                   	ret    
    2303:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230a:	00 00 00 
    230d:	0f 1f 00             	nopl   (%rax)

0000000000002310 <tcrypto_access_version_dummy1>:
    2310:	f3 0f 1e fa          	endbr64 
    2314:	c6 05 75 9f 02 00 73 	movb   $0x73,0x29f75(%rip)        # 2c290 <sgx_tcrypto_version>
    231b:	48 8d 05 6e 9f 02 00 	lea    0x29f6e(%rip),%rax        # 2c290 <sgx_tcrypto_version>
    2322:	c3                   	ret    
    2323:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232a:	00 00 00 
    232d:	0f 1f 00             	nopl   (%rax)

0000000000002330 <tservice_access_version_dummy1>:
    2330:	f3 0f 1e fa          	endbr64 
    2334:	c6 05 85 9f 02 00 73 	movb   $0x73,0x29f85(%rip)        # 2c2c0 <sgx_tservice_version>
    233b:	48 8d 05 7e 9f 02 00 	lea    0x29f7e(%rip),%rax        # 2c2c0 <sgx_tservice_version>
    2342:	c3                   	ret    
    2343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    234a:	00 00 00 
    234d:	0f 1f 00             	nopl   (%rax)

0000000000002350 <sgx_ecall_consumer>:
    2350:	48 85 ff             	test   %rdi,%rdi
    2353:	74 0b                	je     2360 <sgx_ecall_consumer+0x10>
    2355:	b8 02 00 00 00       	mov    $0x2,%eax
    235a:	c3                   	ret    
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2360:	48 83 ec 08          	sub    $0x8,%rsp
    2364:	e8 c7 5d 00 00       	call   8130 <ecall_consumer>
    2369:	31 c0                	xor    %eax,%eax
    236b:	48 83 c4 08          	add    $0x8,%rsp
    236f:	c3                   	ret    

0000000000002370 <sgx_ecall_producer>:
    2370:	48 85 ff             	test   %rdi,%rdi
    2373:	74 0b                	je     2380 <sgx_ecall_producer+0x10>
    2375:	b8 02 00 00 00       	mov    $0x2,%eax
    237a:	c3                   	ret    
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2380:	48 83 ec 08          	sub    $0x8,%rsp
    2384:	e8 f7 5c 00 00       	call   8080 <ecall_producer>
    2389:	31 c0                	xor    %eax,%eax
    238b:	48 83 c4 08          	add    $0x8,%rsp
    238f:	c3                   	ret    

0000000000002390 <sgx_ecall_map>:
    2390:	48 85 ff             	test   %rdi,%rdi
    2393:	74 0b                	je     23a0 <sgx_ecall_map+0x10>
    2395:	b8 02 00 00 00       	mov    $0x2,%eax
    239a:	c3                   	ret    
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23a0:	48 83 ec 08          	sub    $0x8,%rsp
    23a4:	e8 67 62 00 00       	call   8610 <ecall_map>
    23a9:	31 c0                	xor    %eax,%eax
    23ab:	48 83 c4 08          	add    $0x8,%rsp
    23af:	c3                   	ret    

00000000000023b0 <sgx_ecall_exception>:
    23b0:	48 85 ff             	test   %rdi,%rdi
    23b3:	74 0b                	je     23c0 <sgx_ecall_exception+0x10>
    23b5:	b8 02 00 00 00       	mov    $0x2,%eax
    23ba:	c3                   	ret    
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23c0:	48 83 ec 08          	sub    $0x8,%rsp
    23c4:	e8 c7 64 00 00       	call   8890 <ecall_exception>
    23c9:	31 c0                	xor    %eax,%eax
    23cb:	48 83 c4 08          	add    $0x8,%rsp
    23cf:	c3                   	ret    

00000000000023d0 <sgx_ecall_malloc_free>:
    23d0:	48 85 ff             	test   %rdi,%rdi
    23d3:	74 0b                	je     23e0 <sgx_ecall_malloc_free+0x10>
    23d5:	b8 02 00 00 00       	mov    $0x2,%eax
    23da:	c3                   	ret    
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    23e0:	48 83 ec 08          	sub    $0x8,%rsp
    23e4:	e8 67 67 00 00       	call   8b50 <ecall_malloc_free>
    23e9:	31 c0                	xor    %eax,%eax
    23eb:	48 83 c4 08          	add    $0x8,%rsp
    23ef:	c3                   	ret    

00000000000023f0 <sgx_ecall_function_public>:
    23f0:	48 85 ff             	test   %rdi,%rdi
    23f3:	74 0b                	je     2400 <sgx_ecall_function_public+0x10>
    23f5:	b8 02 00 00 00       	mov    $0x2,%eax
    23fa:	c3                   	ret    
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2400:	48 83 ec 08          	sub    $0x8,%rsp
    2404:	e8 e7 5b 00 00       	call   7ff0 <ecall_function_public>
    2409:	31 c0                	xor    %eax,%eax
    240b:	48 83 c4 08          	add    $0x8,%rsp
    240f:	c3                   	ret    

0000000000002410 <sgx_ecall_function_calling_convs>:
    2410:	48 85 ff             	test   %rdi,%rdi
    2413:	74 0b                	je     2420 <sgx_ecall_function_calling_convs+0x10>
    2415:	b8 02 00 00 00       	mov    $0x2,%eax
    241a:	c3                   	ret    
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2420:	48 83 ec 08          	sub    $0x8,%rsp
    2424:	e8 87 5a 00 00       	call   7eb0 <ecall_function_calling_convs>
    2429:	31 c0                	xor    %eax,%eax
    242b:	48 83 c4 08          	add    $0x8,%rsp
    242f:	c3                   	ret    

0000000000002430 <sgx_ocall_pointer_attr>:
    2430:	48 85 ff             	test   %rdi,%rdi
    2433:	74 0b                	je     2440 <sgx_ocall_pointer_attr+0x10>
    2435:	b8 02 00 00 00       	mov    $0x2,%eax
    243a:	c3                   	ret    
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2440:	48 83 ec 08          	sub    $0x8,%rsp
    2444:	e8 d7 56 00 00       	call   7b20 <ocall_pointer_attr>
    2449:	31 c0                	xor    %eax,%eax
    244b:	48 83 c4 08          	add    $0x8,%rsp
    244f:	c3                   	ret    

0000000000002450 <sgx_ecall_increase_counter>:
    2450:	53                   	push   %rbx
    2451:	48 83 ec 20          	sub    $0x20,%rsp
    2455:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    245c:	00 00 
    245e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2463:	31 c0                	xor    %eax,%eax
    2465:	48 85 ff             	test   %rdi,%rdi
    2468:	74 11                	je     247b <sgx_ecall_increase_counter+0x2b>
    246a:	be 08 00 00 00       	mov    $0x8,%esi
    246f:	48 89 fb             	mov    %rdi,%rbx
    2472:	e8 29 69 00 00       	call   8da0 <sgx_is_outside_enclave>
    2477:	85 c0                	test   %eax,%eax
    2479:	75 25                	jne    24a0 <sgx_ecall_increase_counter+0x50>
    247b:	b8 02 00 00 00       	mov    $0x2,%eax
    2480:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2485:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    248c:	00 00 
    248e:	75 5e                	jne    24ee <sgx_ecall_increase_counter+0x9e>
    2490:	48 83 c4 20          	add    $0x20,%rsp
    2494:	5b                   	pop    %rbx
    2495:	c3                   	ret    
    2496:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249d:	00 00 00 
    24a0:	48 89 da             	mov    %rbx,%rdx
    24a3:	48 89 e7             	mov    %rsp,%rdi
    24a6:	b9 08 00 00 00       	mov    $0x8,%ecx
    24ab:	be 08 00 00 00       	mov    $0x8,%esi
    24b0:	0f ae e8             	lfence 
    24b3:	e8 48 da 00 00       	call   ff00 <memcpy_s>
    24b8:	89 c2                	mov    %eax,%edx
    24ba:	b8 01 00 00 00       	mov    $0x1,%eax
    24bf:	85 d2                	test   %edx,%edx
    24c1:	75 bd                	jne    2480 <sgx_ecall_increase_counter+0x30>
    24c3:	e8 58 5b 00 00       	call   8020 <ecall_increase_counter>
    24c8:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    24cd:	b9 08 00 00 00       	mov    $0x8,%ecx
    24d2:	be 08 00 00 00       	mov    $0x8,%esi
    24d7:	48 89 df             	mov    %rbx,%rdi
    24da:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    24df:	e8 9c da 00 00       	call   ff80 <memcpy_verw_s>
    24e4:	85 c0                	test   %eax,%eax
    24e6:	0f 95 c0             	setne  %al
    24e9:	0f b6 c0             	movzbl %al,%eax
    24ec:	eb 92                	jmp    2480 <sgx_ecall_increase_counter+0x30>
    24ee:	e8 cd d4 00 00       	call   f9c0 <__stack_chk_fail>
    24f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24fa:	00 00 00 
    24fd:	0f 1f 00             	nopl   (%rax)

0000000000002500 <sgx_ecall_sgx_cpuid>:
    2500:	55                   	push   %rbp
    2501:	53                   	push   %rbx
    2502:	48 83 ec 38          	sub    $0x38,%rsp
    2506:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    250d:	00 00 
    250f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2514:	31 c0                	xor    %eax,%eax
    2516:	48 85 ff             	test   %rdi,%rdi
    2519:	74 11                	je     252c <sgx_ecall_sgx_cpuid+0x2c>
    251b:	be 10 00 00 00       	mov    $0x10,%esi
    2520:	48 89 fb             	mov    %rdi,%rbx
    2523:	e8 78 68 00 00       	call   8da0 <sgx_is_outside_enclave>
    2528:	85 c0                	test   %eax,%eax
    252a:	75 24                	jne    2550 <sgx_ecall_sgx_cpuid+0x50>
    252c:	b8 02 00 00 00       	mov    $0x2,%eax
    2531:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    2536:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    253d:	00 00 
    253f:	0f 85 c9 00 00 00    	jne    260e <sgx_ecall_sgx_cpuid+0x10e>
    2545:	48 83 c4 38          	add    $0x38,%rsp
    2549:	5b                   	pop    %rbx
    254a:	5d                   	pop    %rbp
    254b:	c3                   	ret    
    254c:	0f 1f 40 00          	nopl   0x0(%rax)
    2550:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2555:	48 89 da             	mov    %rbx,%rdx
    2558:	b9 10 00 00 00       	mov    $0x10,%ecx
    255d:	be 10 00 00 00       	mov    $0x10,%esi
    2562:	0f ae e8             	lfence 
    2565:	e8 96 d9 00 00       	call   ff00 <memcpy_s>
    256a:	89 c2                	mov    %eax,%edx
    256c:	b8 01 00 00 00       	mov    $0x1,%eax
    2571:	85 d2                	test   %edx,%edx
    2573:	75 bc                	jne    2531 <sgx_ecall_sgx_cpuid+0x31>
    2575:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    257a:	48 85 db             	test   %rbx,%rbx
    257d:	74 70                	je     25ef <sgx_ecall_sgx_cpuid+0xef>
    257f:	be 10 00 00 00       	mov    $0x10,%esi
    2584:	48 89 df             	mov    %rbx,%rdi
    2587:	e8 14 68 00 00       	call   8da0 <sgx_is_outside_enclave>
    258c:	89 c2                	mov    %eax,%edx
    258e:	b8 02 00 00 00       	mov    $0x2,%eax
    2593:	85 d2                	test   %edx,%edx
    2595:	74 9a                	je     2531 <sgx_ecall_sgx_cpuid+0x31>
    2597:	be 01 00 00 00       	mov    $0x1,%esi
    259c:	bf 10 00 00 00       	mov    $0x10,%edi
    25a1:	0f ae e8             	lfence 
    25a4:	e8 47 c4 00 00       	call   e9f0 <calloc>
    25a9:	48 85 c0             	test   %rax,%rax
    25ac:	48 89 c5             	mov    %rax,%rbp
    25af:	74 53                	je     2604 <sgx_ecall_sgx_cpuid+0x104>
    25b1:	8b 74 24 18          	mov    0x18(%rsp),%esi
    25b5:	48 89 ef             	mov    %rbp,%rdi
    25b8:	e8 f3 65 00 00       	call   8bb0 <ecall_sgx_cpuid>
    25bd:	b9 10 00 00 00       	mov    $0x10,%ecx
    25c2:	48 89 ea             	mov    %rbp,%rdx
    25c5:	be 10 00 00 00       	mov    $0x10,%esi
    25ca:	48 89 df             	mov    %rbx,%rdi
    25cd:	e8 ae d9 00 00       	call   ff80 <memcpy_verw_s>
    25d2:	85 c0                	test   %eax,%eax
    25d4:	48 89 ef             	mov    %rbp,%rdi
    25d7:	0f 95 c0             	setne  %al
    25da:	0f b6 c0             	movzbl %al,%eax
    25dd:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    25e1:	e8 fa b9 00 00       	call   dfe0 <dlfree>
    25e6:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    25ea:	e9 42 ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    25ef:	0f ae e8             	lfence 
    25f2:	8b 74 24 18          	mov    0x18(%rsp),%esi
    25f6:	31 ff                	xor    %edi,%edi
    25f8:	e8 b3 65 00 00       	call   8bb0 <ecall_sgx_cpuid>
    25fd:	31 c0                	xor    %eax,%eax
    25ff:	e9 2d ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    2604:	b8 03 00 00 00       	mov    $0x3,%eax
    2609:	e9 23 ff ff ff       	jmp    2531 <sgx_ecall_sgx_cpuid+0x31>
    260e:	e8 ad d3 00 00       	call   f9c0 <__stack_chk_fail>
    2613:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    261a:	00 00 00 
    261d:	0f 1f 00             	nopl   (%rax)

0000000000002620 <sgx_ecall_function_private>:
    2620:	53                   	push   %rbx
    2621:	48 83 ec 10          	sub    $0x10,%rsp
    2625:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    262c:	00 00 
    262e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2633:	31 c0                	xor    %eax,%eax
    2635:	48 85 ff             	test   %rdi,%rdi
    2638:	74 11                	je     264b <sgx_ecall_function_private+0x2b>
    263a:	be 04 00 00 00       	mov    $0x4,%esi
    263f:	48 89 fb             	mov    %rdi,%rbx
    2642:	e8 59 67 00 00       	call   8da0 <sgx_is_outside_enclave>
    2647:	85 c0                	test   %eax,%eax
    2649:	75 25                	jne    2670 <sgx_ecall_function_private+0x50>
    264b:	b8 02 00 00 00       	mov    $0x2,%eax
    2650:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2655:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    265c:	00 00 
    265e:	75 5d                	jne    26bd <sgx_ecall_function_private+0x9d>
    2660:	48 83 c4 10          	add    $0x10,%rsp
    2664:	5b                   	pop    %rbx
    2665:	c3                   	ret    
    2666:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    266d:	00 00 00 
    2670:	48 89 da             	mov    %rbx,%rdx
    2673:	48 89 e7             	mov    %rsp,%rdi
    2676:	b9 04 00 00 00       	mov    $0x4,%ecx
    267b:	be 04 00 00 00       	mov    $0x4,%esi
    2680:	0f ae e8             	lfence 
    2683:	e8 78 d8 00 00       	call   ff00 <memcpy_s>
    2688:	89 c2                	mov    %eax,%edx
    268a:	b8 01 00 00 00       	mov    $0x1,%eax
    268f:	85 d2                	test   %edx,%edx
    2691:	75 bd                	jne    2650 <sgx_ecall_function_private+0x30>
    2693:	e8 78 59 00 00       	call   8010 <ecall_function_private>
    2698:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    269d:	b9 04 00 00 00       	mov    $0x4,%ecx
    26a2:	be 04 00 00 00       	mov    $0x4,%esi
    26a7:	48 89 df             	mov    %rbx,%rdi
    26aa:	89 44 24 04          	mov    %eax,0x4(%rsp)
    26ae:	e8 cd d8 00 00       	call   ff80 <memcpy_verw_s>
    26b3:	85 c0                	test   %eax,%eax
    26b5:	0f 95 c0             	setne  %al
    26b8:	0f b6 c0             	movzbl %al,%eax
    26bb:	eb 93                	jmp    2650 <sgx_ecall_function_private+0x30>
    26bd:	e8 fe d2 00 00       	call   f9c0 <__stack_chk_fail>
    26c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c9:	00 00 00 
    26cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000026d0 <sgx_ecall_array_isary>:
    26d0:	53                   	push   %rbx
    26d1:	48 83 ec 10          	sub    $0x10,%rsp
    26d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    26dc:	00 00 
    26de:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    26e3:	31 c0                	xor    %eax,%eax
    26e5:	48 85 ff             	test   %rdi,%rdi
    26e8:	74 11                	je     26fb <sgx_ecall_array_isary+0x2b>
    26ea:	be 08 00 00 00       	mov    $0x8,%esi
    26ef:	48 89 fb             	mov    %rdi,%rbx
    26f2:	e8 a9 66 00 00       	call   8da0 <sgx_is_outside_enclave>
    26f7:	85 c0                	test   %eax,%eax
    26f9:	75 25                	jne    2720 <sgx_ecall_array_isary+0x50>
    26fb:	b8 02 00 00 00       	mov    $0x2,%eax
    2700:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2705:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    270c:	00 00 
    270e:	75 40                	jne    2750 <sgx_ecall_array_isary+0x80>
    2710:	48 83 c4 10          	add    $0x10,%rsp
    2714:	5b                   	pop    %rbx
    2715:	c3                   	ret    
    2716:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271d:	00 00 00 
    2720:	48 89 da             	mov    %rbx,%rdx
    2723:	48 89 e7             	mov    %rsp,%rdi
    2726:	b9 08 00 00 00       	mov    $0x8,%ecx
    272b:	be 08 00 00 00       	mov    $0x8,%esi
    2730:	0f ae e8             	lfence 
    2733:	e8 c8 d7 00 00       	call   ff00 <memcpy_s>
    2738:	89 c2                	mov    %eax,%edx
    273a:	b8 01 00 00 00       	mov    $0x1,%eax
    273f:	85 d2                	test   %edx,%edx
    2741:	75 bd                	jne    2700 <sgx_ecall_array_isary+0x30>
    2743:	48 8b 3c 24          	mov    (%rsp),%rdi
    2747:	e8 f4 56 00 00       	call   7e40 <ecall_array_isary>
    274c:	31 c0                	xor    %eax,%eax
    274e:	eb b0                	jmp    2700 <sgx_ecall_array_isary+0x30>
    2750:	e8 6b d2 00 00       	call   f9c0 <__stack_chk_fail>
    2755:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    275c:	00 00 00 
    275f:	90                   	nop

0000000000002760 <sgx_ecall_array_in_out>:
    2760:	41 54                	push   %r12
    2762:	55                   	push   %rbp
    2763:	53                   	push   %rbx
    2764:	48 83 ec 10          	sub    $0x10,%rsp
    2768:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    276f:	00 00 
    2771:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2776:	31 c0                	xor    %eax,%eax
    2778:	48 85 ff             	test   %rdi,%rdi
    277b:	74 11                	je     278e <sgx_ecall_array_in_out+0x2e>
    277d:	be 08 00 00 00       	mov    $0x8,%esi
    2782:	48 89 fb             	mov    %rdi,%rbx
    2785:	e8 16 66 00 00       	call   8da0 <sgx_is_outside_enclave>
    278a:	85 c0                	test   %eax,%eax
    278c:	75 22                	jne    27b0 <sgx_ecall_array_in_out+0x50>
    278e:	b8 02 00 00 00       	mov    $0x2,%eax
    2793:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2798:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    279f:	00 00 
    27a1:	0f 85 ce 00 00 00    	jne    2875 <sgx_ecall_array_in_out+0x115>
    27a7:	48 83 c4 10          	add    $0x10,%rsp
    27ab:	5b                   	pop    %rbx
    27ac:	5d                   	pop    %rbp
    27ad:	41 5c                	pop    %r12
    27af:	c3                   	ret    
    27b0:	48 89 da             	mov    %rbx,%rdx
    27b3:	48 89 e7             	mov    %rsp,%rdi
    27b6:	b9 08 00 00 00       	mov    $0x8,%ecx
    27bb:	be 08 00 00 00       	mov    $0x8,%esi
    27c0:	0f ae e8             	lfence 
    27c3:	e8 38 d7 00 00       	call   ff00 <memcpy_s>
    27c8:	89 c2                	mov    %eax,%edx
    27ca:	b8 01 00 00 00       	mov    $0x1,%eax
    27cf:	85 d2                	test   %edx,%edx
    27d1:	75 c0                	jne    2793 <sgx_ecall_array_in_out+0x33>
    27d3:	48 8b 2c 24          	mov    (%rsp),%rbp
    27d7:	48 85 ed             	test   %rbp,%rbp
    27da:	74 7e                	je     285a <sgx_ecall_array_in_out+0xfa>
    27dc:	be 10 00 00 00       	mov    $0x10,%esi
    27e1:	48 89 ef             	mov    %rbp,%rdi
    27e4:	e8 b7 65 00 00       	call   8da0 <sgx_is_outside_enclave>
    27e9:	89 c2                	mov    %eax,%edx
    27eb:	b8 02 00 00 00       	mov    $0x2,%eax
    27f0:	85 d2                	test   %edx,%edx
    27f2:	74 9f                	je     2793 <sgx_ecall_array_in_out+0x33>
    27f4:	bf 10 00 00 00       	mov    $0x10,%edi
    27f9:	0f ae e8             	lfence 
    27fc:	e8 6f 9d 00 00       	call   c570 <dlmalloc>
    2801:	48 85 c0             	test   %rax,%rax
    2804:	49 89 c4             	mov    %rax,%r12
    2807:	74 62                	je     286b <sgx_ecall_array_in_out+0x10b>
    2809:	b9 10 00 00 00       	mov    $0x10,%ecx
    280e:	48 89 ea             	mov    %rbp,%rdx
    2811:	be 10 00 00 00       	mov    $0x10,%esi
    2816:	4c 89 e7             	mov    %r12,%rdi
    2819:	bb 01 00 00 00       	mov    $0x1,%ebx
    281e:	e8 dd d6 00 00       	call   ff00 <memcpy_s>
    2823:	85 c0                	test   %eax,%eax
    2825:	75 24                	jne    284b <sgx_ecall_array_in_out+0xeb>
    2827:	4c 89 e7             	mov    %r12,%rdi
    282a:	31 db                	xor    %ebx,%ebx
    282c:	e8 bf 55 00 00       	call   7df0 <ecall_array_in_out>
    2831:	b9 10 00 00 00       	mov    $0x10,%ecx
    2836:	4c 89 e2             	mov    %r12,%rdx
    2839:	be 10 00 00 00       	mov    $0x10,%esi
    283e:	48 89 ef             	mov    %rbp,%rdi
    2841:	e8 3a d7 00 00       	call   ff80 <memcpy_verw_s>
    2846:	85 c0                	test   %eax,%eax
    2848:	0f 95 c3             	setne  %bl
    284b:	4c 89 e7             	mov    %r12,%rdi
    284e:	e8 8d b7 00 00       	call   dfe0 <dlfree>
    2853:	89 d8                	mov    %ebx,%eax
    2855:	e9 39 ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    285a:	31 ff                	xor    %edi,%edi
    285c:	0f ae e8             	lfence 
    285f:	e8 8c 55 00 00       	call   7df0 <ecall_array_in_out>
    2864:	31 c0                	xor    %eax,%eax
    2866:	e9 28 ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    286b:	b8 03 00 00 00       	mov    $0x3,%eax
    2870:	e9 1e ff ff ff       	jmp    2793 <sgx_ecall_array_in_out+0x33>
    2875:	e8 46 d1 00 00       	call   f9c0 <__stack_chk_fail>
    287a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002880 <sgx_ecall_array_out>:
    2880:	55                   	push   %rbp
    2881:	53                   	push   %rbx
    2882:	48 83 ec 28          	sub    $0x28,%rsp
    2886:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    288d:	00 00 
    288f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2894:	31 c0                	xor    %eax,%eax
    2896:	48 85 ff             	test   %rdi,%rdi
    2899:	74 11                	je     28ac <sgx_ecall_array_out+0x2c>
    289b:	be 08 00 00 00       	mov    $0x8,%esi
    28a0:	48 89 fb             	mov    %rdi,%rbx
    28a3:	e8 f8 64 00 00       	call   8da0 <sgx_is_outside_enclave>
    28a8:	85 c0                	test   %eax,%eax
    28aa:	75 24                	jne    28d0 <sgx_ecall_array_out+0x50>
    28ac:	b8 02 00 00 00       	mov    $0x2,%eax
    28b1:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    28b6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    28bd:	00 00 
    28bf:	0f 85 c1 00 00 00    	jne    2986 <sgx_ecall_array_out+0x106>
    28c5:	48 83 c4 28          	add    $0x28,%rsp
    28c9:	5b                   	pop    %rbx
    28ca:	5d                   	pop    %rbp
    28cb:	c3                   	ret    
    28cc:	0f 1f 40 00          	nopl   0x0(%rax)
    28d0:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    28d5:	48 89 da             	mov    %rbx,%rdx
    28d8:	b9 08 00 00 00       	mov    $0x8,%ecx
    28dd:	be 08 00 00 00       	mov    $0x8,%esi
    28e2:	0f ae e8             	lfence 
    28e5:	e8 16 d6 00 00       	call   ff00 <memcpy_s>
    28ea:	89 c2                	mov    %eax,%edx
    28ec:	b8 01 00 00 00       	mov    $0x1,%eax
    28f1:	85 d2                	test   %edx,%edx
    28f3:	75 bc                	jne    28b1 <sgx_ecall_array_out+0x31>
    28f5:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    28fa:	48 85 db             	test   %rbx,%rbx
    28fd:	74 6c                	je     296b <sgx_ecall_array_out+0xeb>
    28ff:	be 10 00 00 00       	mov    $0x10,%esi
    2904:	48 89 df             	mov    %rbx,%rdi
    2907:	e8 94 64 00 00       	call   8da0 <sgx_is_outside_enclave>
    290c:	89 c2                	mov    %eax,%edx
    290e:	b8 02 00 00 00       	mov    $0x2,%eax
    2913:	85 d2                	test   %edx,%edx
    2915:	74 9a                	je     28b1 <sgx_ecall_array_out+0x31>
    2917:	be 01 00 00 00       	mov    $0x1,%esi
    291c:	bf 10 00 00 00       	mov    $0x10,%edi
    2921:	0f ae e8             	lfence 
    2924:	e8 c7 c0 00 00       	call   e9f0 <calloc>
    2929:	48 85 c0             	test   %rax,%rax
    292c:	48 89 c5             	mov    %rax,%rbp
    292f:	74 4b                	je     297c <sgx_ecall_array_out+0xfc>
    2931:	48 89 ef             	mov    %rbp,%rdi
    2934:	e8 57 54 00 00       	call   7d90 <ecall_array_out>
    2939:	b9 10 00 00 00       	mov    $0x10,%ecx
    293e:	48 89 ea             	mov    %rbp,%rdx
    2941:	be 10 00 00 00       	mov    $0x10,%esi
    2946:	48 89 df             	mov    %rbx,%rdi
    2949:	e8 32 d6 00 00       	call   ff80 <memcpy_verw_s>
    294e:	85 c0                	test   %eax,%eax
    2950:	48 89 ef             	mov    %rbp,%rdi
    2953:	0f 95 c0             	setne  %al
    2956:	0f b6 c0             	movzbl %al,%eax
    2959:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    295d:	e8 7e b6 00 00       	call   dfe0 <dlfree>
    2962:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    2966:	e9 46 ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    296b:	31 ff                	xor    %edi,%edi
    296d:	0f ae e8             	lfence 
    2970:	e8 1b 54 00 00       	call   7d90 <ecall_array_out>
    2975:	31 c0                	xor    %eax,%eax
    2977:	e9 35 ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    297c:	b8 03 00 00 00       	mov    $0x3,%eax
    2981:	e9 2b ff ff ff       	jmp    28b1 <sgx_ecall_array_out+0x31>
    2986:	e8 35 d0 00 00       	call   f9c0 <__stack_chk_fail>
    298b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002990 <sgx_ecall_array_in>:
    2990:	55                   	push   %rbp
    2991:	53                   	push   %rbx
    2992:	48 83 ec 18          	sub    $0x18,%rsp
    2996:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    299d:	00 00 
    299f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    29a4:	31 c0                	xor    %eax,%eax
    29a6:	48 85 ff             	test   %rdi,%rdi
    29a9:	74 11                	je     29bc <sgx_ecall_array_in+0x2c>
    29ab:	be 08 00 00 00       	mov    $0x8,%esi
    29b0:	48 89 fb             	mov    %rdi,%rbx
    29b3:	e8 e8 63 00 00       	call   8da0 <sgx_is_outside_enclave>
    29b8:	85 c0                	test   %eax,%eax
    29ba:	75 24                	jne    29e0 <sgx_ecall_array_in+0x50>
    29bc:	b8 02 00 00 00       	mov    $0x2,%eax
    29c1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    29c6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    29cd:	00 00 
    29cf:	0f 85 b3 00 00 00    	jne    2a88 <sgx_ecall_array_in+0xf8>
    29d5:	48 83 c4 18          	add    $0x18,%rsp
    29d9:	5b                   	pop    %rbx
    29da:	5d                   	pop    %rbp
    29db:	c3                   	ret    
    29dc:	0f 1f 40 00          	nopl   0x0(%rax)
    29e0:	48 89 da             	mov    %rbx,%rdx
    29e3:	48 89 e7             	mov    %rsp,%rdi
    29e6:	b9 08 00 00 00       	mov    $0x8,%ecx
    29eb:	be 08 00 00 00       	mov    $0x8,%esi
    29f0:	0f ae e8             	lfence 
    29f3:	e8 08 d5 00 00       	call   ff00 <memcpy_s>
    29f8:	89 c2                	mov    %eax,%edx
    29fa:	b8 01 00 00 00       	mov    $0x1,%eax
    29ff:	85 d2                	test   %edx,%edx
    2a01:	75 be                	jne    29c1 <sgx_ecall_array_in+0x31>
    2a03:	48 8b 1c 24          	mov    (%rsp),%rbx
    2a07:	48 85 db             	test   %rbx,%rbx
    2a0a:	74 5f                	je     2a6b <sgx_ecall_array_in+0xdb>
    2a0c:	be 10 00 00 00       	mov    $0x10,%esi
    2a11:	48 89 df             	mov    %rbx,%rdi
    2a14:	e8 87 63 00 00       	call   8da0 <sgx_is_outside_enclave>
    2a19:	89 c2                	mov    %eax,%edx
    2a1b:	b8 02 00 00 00       	mov    $0x2,%eax
    2a20:	85 d2                	test   %edx,%edx
    2a22:	74 9d                	je     29c1 <sgx_ecall_array_in+0x31>
    2a24:	bf 10 00 00 00       	mov    $0x10,%edi
    2a29:	0f ae e8             	lfence 
    2a2c:	e8 3f 9b 00 00       	call   c570 <dlmalloc>
    2a31:	48 89 c5             	mov    %rax,%rbp
    2a34:	b8 03 00 00 00       	mov    $0x3,%eax
    2a39:	48 85 ed             	test   %rbp,%rbp
    2a3c:	74 83                	je     29c1 <sgx_ecall_array_in+0x31>
    2a3e:	b9 10 00 00 00       	mov    $0x10,%ecx
    2a43:	48 89 da             	mov    %rbx,%rdx
    2a46:	be 10 00 00 00       	mov    $0x10,%esi
    2a4b:	48 89 ef             	mov    %rbp,%rdi
    2a4e:	e8 ad d4 00 00       	call   ff00 <memcpy_s>
    2a53:	85 c0                	test   %eax,%eax
    2a55:	74 25                	je     2a7c <sgx_ecall_array_in+0xec>
    2a57:	bb 01 00 00 00       	mov    $0x1,%ebx
    2a5c:	48 89 ef             	mov    %rbp,%rdi
    2a5f:	e8 7c b5 00 00       	call   dfe0 <dlfree>
    2a64:	89 d8                	mov    %ebx,%eax
    2a66:	e9 56 ff ff ff       	jmp    29c1 <sgx_ecall_array_in+0x31>
    2a6b:	31 ff                	xor    %edi,%edi
    2a6d:	0f ae e8             	lfence 
    2a70:	e8 cb 52 00 00       	call   7d40 <ecall_array_in>
    2a75:	31 c0                	xor    %eax,%eax
    2a77:	e9 45 ff ff ff       	jmp    29c1 <sgx_ecall_array_in+0x31>
    2a7c:	48 89 ef             	mov    %rbp,%rdi
    2a7f:	31 db                	xor    %ebx,%ebx
    2a81:	e8 ba 52 00 00       	call   7d40 <ecall_array_in>
    2a86:	eb d4                	jmp    2a5c <sgx_ecall_array_in+0xcc>
    2a88:	e8 33 cf 00 00       	call   f9c0 <__stack_chk_fail>
    2a8d:	0f 1f 00             	nopl   (%rax)

0000000000002a90 <sgx_ecall_array_user_check>:
    2a90:	53                   	push   %rbx
    2a91:	48 83 ec 10          	sub    $0x10,%rsp
    2a95:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2a9c:	00 00 
    2a9e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2aa3:	31 c0                	xor    %eax,%eax
    2aa5:	48 85 ff             	test   %rdi,%rdi
    2aa8:	74 11                	je     2abb <sgx_ecall_array_user_check+0x2b>
    2aaa:	be 08 00 00 00       	mov    $0x8,%esi
    2aaf:	48 89 fb             	mov    %rdi,%rbx
    2ab2:	e8 e9 62 00 00       	call   8da0 <sgx_is_outside_enclave>
    2ab7:	85 c0                	test   %eax,%eax
    2ab9:	75 25                	jne    2ae0 <sgx_ecall_array_user_check+0x50>
    2abb:	b8 02 00 00 00       	mov    $0x2,%eax
    2ac0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2ac5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2acc:	00 00 
    2ace:	75 40                	jne    2b10 <sgx_ecall_array_user_check+0x80>
    2ad0:	48 83 c4 10          	add    $0x10,%rsp
    2ad4:	5b                   	pop    %rbx
    2ad5:	c3                   	ret    
    2ad6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2add:	00 00 00 
    2ae0:	48 89 da             	mov    %rbx,%rdx
    2ae3:	48 89 e7             	mov    %rsp,%rdi
    2ae6:	b9 08 00 00 00       	mov    $0x8,%ecx
    2aeb:	be 08 00 00 00       	mov    $0x8,%esi
    2af0:	0f ae e8             	lfence 
    2af3:	e8 08 d4 00 00       	call   ff00 <memcpy_s>
    2af8:	89 c2                	mov    %eax,%edx
    2afa:	b8 01 00 00 00       	mov    $0x1,%eax
    2aff:	85 d2                	test   %edx,%edx
    2b01:	75 bd                	jne    2ac0 <sgx_ecall_array_user_check+0x30>
    2b03:	48 8b 3c 24          	mov    (%rsp),%rdi
    2b07:	e8 d4 51 00 00       	call   7ce0 <ecall_array_user_check>
    2b0c:	31 c0                	xor    %eax,%eax
    2b0e:	eb b0                	jmp    2ac0 <sgx_ecall_array_user_check+0x30>
    2b10:	e8 ab ce 00 00       	call   f9c0 <__stack_chk_fail>
    2b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1c:	00 00 00 
    2b1f:	90                   	nop

0000000000002b20 <sgx_ecall_pointer_isptr_readonly>:
    2b20:	41 54                	push   %r12
    2b22:	55                   	push   %rbp
    2b23:	53                   	push   %rbx
    2b24:	48 83 ec 20          	sub    $0x20,%rsp
    2b28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2b2f:	00 00 
    2b31:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2b36:	31 c0                	xor    %eax,%eax
    2b38:	48 85 ff             	test   %rdi,%rdi
    2b3b:	74 11                	je     2b4e <sgx_ecall_pointer_isptr_readonly+0x2e>
    2b3d:	be 10 00 00 00       	mov    $0x10,%esi
    2b42:	48 89 fb             	mov    %rdi,%rbx
    2b45:	e8 56 62 00 00       	call   8da0 <sgx_is_outside_enclave>
    2b4a:	85 c0                	test   %eax,%eax
    2b4c:	75 22                	jne    2b70 <sgx_ecall_pointer_isptr_readonly+0x50>
    2b4e:	b8 02 00 00 00       	mov    $0x2,%eax
    2b53:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2b58:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2b5f:	00 00 
    2b61:	0f 85 cd 00 00 00    	jne    2c34 <sgx_ecall_pointer_isptr_readonly+0x114>
    2b67:	48 83 c4 20          	add    $0x20,%rsp
    2b6b:	5b                   	pop    %rbx
    2b6c:	5d                   	pop    %rbp
    2b6d:	41 5c                	pop    %r12
    2b6f:	c3                   	ret    
    2b70:	48 89 da             	mov    %rbx,%rdx
    2b73:	48 89 e7             	mov    %rsp,%rdi
    2b76:	b9 10 00 00 00       	mov    $0x10,%ecx
    2b7b:	be 10 00 00 00       	mov    $0x10,%esi
    2b80:	0f ae e8             	lfence 
    2b83:	e8 78 d3 00 00       	call   ff00 <memcpy_s>
    2b88:	89 c2                	mov    %eax,%edx
    2b8a:	b8 01 00 00 00       	mov    $0x1,%eax
    2b8f:	85 d2                	test   %edx,%edx
    2b91:	75 c0                	jne    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2b93:	48 8b 1c 24          	mov    (%rsp),%rbx
    2b97:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2b9c:	48 85 db             	test   %rbx,%rbx
    2b9f:	74 60                	je     2c01 <sgx_ecall_pointer_isptr_readonly+0xe1>
    2ba1:	48 89 ee             	mov    %rbp,%rsi
    2ba4:	48 89 df             	mov    %rbx,%rdi
    2ba7:	e8 f4 61 00 00       	call   8da0 <sgx_is_outside_enclave>
    2bac:	89 c2                	mov    %eax,%edx
    2bae:	b8 02 00 00 00       	mov    $0x2,%eax
    2bb3:	85 d2                	test   %edx,%edx
    2bb5:	74 9c                	je     2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2bb7:	48 85 ed             	test   %rbp,%rbp
    2bba:	0f ae e8             	lfence 
    2bbd:	74 65                	je     2c24 <sgx_ecall_pointer_isptr_readonly+0x104>
    2bbf:	48 89 ef             	mov    %rbp,%rdi
    2bc2:	e8 a9 99 00 00       	call   c570 <dlmalloc>
    2bc7:	49 89 c4             	mov    %rax,%r12
    2bca:	b8 03 00 00 00       	mov    $0x3,%eax
    2bcf:	4d 85 e4             	test   %r12,%r12
    2bd2:	0f 84 7b ff ff ff    	je     2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2bd8:	48 89 e9             	mov    %rbp,%rcx
    2bdb:	48 89 da             	mov    %rbx,%rdx
    2bde:	48 89 ee             	mov    %rbp,%rsi
    2be1:	4c 89 e7             	mov    %r12,%rdi
    2be4:	e8 17 d3 00 00       	call   ff00 <memcpy_s>
    2be9:	85 c0                	test   %eax,%eax
    2beb:	74 28                	je     2c15 <sgx_ecall_pointer_isptr_readonly+0xf5>
    2bed:	bb 01 00 00 00       	mov    $0x1,%ebx
    2bf2:	4c 89 e7             	mov    %r12,%rdi
    2bf5:	e8 e6 b3 00 00       	call   dfe0 <dlfree>
    2bfa:	89 d8                	mov    %ebx,%eax
    2bfc:	e9 52 ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c01:	48 89 ee             	mov    %rbp,%rsi
    2c04:	31 ff                	xor    %edi,%edi
    2c06:	0f ae e8             	lfence 
    2c09:	e8 b2 50 00 00       	call   7cc0 <ecall_pointer_isptr_readonly>
    2c0e:	31 c0                	xor    %eax,%eax
    2c10:	e9 3e ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c15:	48 89 ee             	mov    %rbp,%rsi
    2c18:	4c 89 e7             	mov    %r12,%rdi
    2c1b:	31 db                	xor    %ebx,%ebx
    2c1d:	e8 9e 50 00 00       	call   7cc0 <ecall_pointer_isptr_readonly>
    2c22:	eb ce                	jmp    2bf2 <sgx_ecall_pointer_isptr_readonly+0xd2>
    2c24:	31 f6                	xor    %esi,%esi
    2c26:	31 ff                	xor    %edi,%edi
    2c28:	e8 93 50 00 00       	call   7cc0 <ecall_pointer_isptr_readonly>
    2c2d:	31 c0                	xor    %eax,%eax
    2c2f:	e9 1f ff ff ff       	jmp    2b53 <sgx_ecall_pointer_isptr_readonly+0x33>
    2c34:	e8 87 cd 00 00       	call   f9c0 <__stack_chk_fail>
    2c39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002c40 <sgx_ecall_pointer_count>:
    2c40:	41 56                	push   %r14
    2c42:	41 55                	push   %r13
    2c44:	41 54                	push   %r12
    2c46:	55                   	push   %rbp
    2c47:	53                   	push   %rbx
    2c48:	48 83 ec 20          	sub    $0x20,%rsp
    2c4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c53:	00 00 
    2c55:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2c5a:	31 c0                	xor    %eax,%eax
    2c5c:	48 85 ff             	test   %rdi,%rdi
    2c5f:	74 11                	je     2c72 <sgx_ecall_pointer_count+0x32>
    2c61:	be 10 00 00 00       	mov    $0x10,%esi
    2c66:	48 89 fb             	mov    %rdi,%rbx
    2c69:	e8 32 61 00 00       	call   8da0 <sgx_is_outside_enclave>
    2c6e:	85 c0                	test   %eax,%eax
    2c70:	75 2e                	jne    2ca0 <sgx_ecall_pointer_count+0x60>
    2c72:	b8 02 00 00 00       	mov    $0x2,%eax
    2c77:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2c7c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2c83:	00 00 
    2c85:	0f 85 e2 00 00 00    	jne    2d6d <sgx_ecall_pointer_count+0x12d>
    2c8b:	48 83 c4 20          	add    $0x20,%rsp
    2c8f:	5b                   	pop    %rbx
    2c90:	5d                   	pop    %rbp
    2c91:	41 5c                	pop    %r12
    2c93:	41 5d                	pop    %r13
    2c95:	41 5e                	pop    %r14
    2c97:	c3                   	ret    
    2c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    2c9f:	00 
    2ca0:	48 89 da             	mov    %rbx,%rdx
    2ca3:	48 89 e7             	mov    %rsp,%rdi
    2ca6:	b9 10 00 00 00       	mov    $0x10,%ecx
    2cab:	be 10 00 00 00       	mov    $0x10,%esi
    2cb0:	0f ae e8             	lfence 
    2cb3:	e8 48 d2 00 00       	call   ff00 <memcpy_s>
    2cb8:	89 c2                	mov    %eax,%edx
    2cba:	b8 01 00 00 00       	mov    $0x1,%eax
    2cbf:	85 d2                	test   %edx,%edx
    2cc1:	75 b4                	jne    2c77 <sgx_ecall_pointer_count+0x37>
    2cc3:	8b 6c 24 08          	mov    0x8(%rsp),%ebp
    2cc7:	85 ed                	test   %ebp,%ebp
    2cc9:	78 a7                	js     2c72 <sgx_ecall_pointer_count+0x32>
    2ccb:	4c 8b 2c 24          	mov    (%rsp),%r13
    2ccf:	4d 85 ed             	test   %r13,%r13
    2cd2:	0f 84 82 00 00 00    	je     2d5a <sgx_ecall_pointer_count+0x11a>
    2cd8:	4c 63 e5             	movslq %ebp,%r12
    2cdb:	4c 89 ef             	mov    %r13,%rdi
    2cde:	49 c1 e4 02          	shl    $0x2,%r12
    2ce2:	4c 89 e6             	mov    %r12,%rsi
    2ce5:	e8 b6 60 00 00       	call   8da0 <sgx_is_outside_enclave>
    2cea:	85 c0                	test   %eax,%eax
    2cec:	74 84                	je     2c72 <sgx_ecall_pointer_count+0x32>
    2cee:	4d 85 e4             	test   %r12,%r12
    2cf1:	0f ae e8             	lfence 
    2cf4:	74 67                	je     2d5d <sgx_ecall_pointer_count+0x11d>
    2cf6:	4c 89 e7             	mov    %r12,%rdi
    2cf9:	e8 72 98 00 00       	call   c570 <dlmalloc>
    2cfe:	49 89 c6             	mov    %rax,%r14
    2d01:	b8 03 00 00 00       	mov    $0x3,%eax
    2d06:	4d 85 f6             	test   %r14,%r14
    2d09:	0f 84 68 ff ff ff    	je     2c77 <sgx_ecall_pointer_count+0x37>
    2d0f:	4c 89 e1             	mov    %r12,%rcx
    2d12:	4c 89 ea             	mov    %r13,%rdx
    2d15:	4c 89 e6             	mov    %r12,%rsi
    2d18:	4c 89 f7             	mov    %r14,%rdi
    2d1b:	bb 01 00 00 00       	mov    $0x1,%ebx
    2d20:	e8 db d1 00 00       	call   ff00 <memcpy_s>
    2d25:	85 c0                	test   %eax,%eax
    2d27:	75 22                	jne    2d4b <sgx_ecall_pointer_count+0x10b>
    2d29:	89 ee                	mov    %ebp,%esi
    2d2b:	4c 89 f7             	mov    %r14,%rdi
    2d2e:	31 db                	xor    %ebx,%ebx
    2d30:	e8 6b 4f 00 00       	call   7ca0 <ecall_pointer_count>
    2d35:	4c 89 e1             	mov    %r12,%rcx
    2d38:	4c 89 f2             	mov    %r14,%rdx
    2d3b:	4c 89 e6             	mov    %r12,%rsi
    2d3e:	4c 89 ef             	mov    %r13,%rdi
    2d41:	e8 3a d2 00 00       	call   ff80 <memcpy_verw_s>
    2d46:	85 c0                	test   %eax,%eax
    2d48:	0f 95 c3             	setne  %bl
    2d4b:	4c 89 f7             	mov    %r14,%rdi
    2d4e:	e8 8d b2 00 00       	call   dfe0 <dlfree>
    2d53:	89 d8                	mov    %ebx,%eax
    2d55:	e9 1d ff ff ff       	jmp    2c77 <sgx_ecall_pointer_count+0x37>
    2d5a:	0f ae e8             	lfence 
    2d5d:	89 ee                	mov    %ebp,%esi
    2d5f:	31 ff                	xor    %edi,%edi
    2d61:	e8 3a 4f 00 00       	call   7ca0 <ecall_pointer_count>
    2d66:	31 c0                	xor    %eax,%eax
    2d68:	e9 0a ff ff ff       	jmp    2c77 <sgx_ecall_pointer_count+0x37>
    2d6d:	e8 4e cc 00 00       	call   f9c0 <__stack_chk_fail>
    2d72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d79:	00 00 00 
    2d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002d80 <sgx_ecall_pointer_size>:
    2d80:	41 55                	push   %r13
    2d82:	41 54                	push   %r12
    2d84:	55                   	push   %rbp
    2d85:	53                   	push   %rbx
    2d86:	48 83 ec 28          	sub    $0x28,%rsp
    2d8a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2d91:	00 00 
    2d93:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2d98:	31 c0                	xor    %eax,%eax
    2d9a:	48 85 ff             	test   %rdi,%rdi
    2d9d:	74 11                	je     2db0 <sgx_ecall_pointer_size+0x30>
    2d9f:	be 10 00 00 00       	mov    $0x10,%esi
    2da4:	48 89 fb             	mov    %rdi,%rbx
    2da7:	e8 f4 5f 00 00       	call   8da0 <sgx_is_outside_enclave>
    2dac:	85 c0                	test   %eax,%eax
    2dae:	75 28                	jne    2dd8 <sgx_ecall_pointer_size+0x58>
    2db0:	b8 02 00 00 00       	mov    $0x2,%eax
    2db5:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2dba:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2dc1:	00 00 
    2dc3:	0f 85 db 00 00 00    	jne    2ea4 <sgx_ecall_pointer_size+0x124>
    2dc9:	48 83 c4 28          	add    $0x28,%rsp
    2dcd:	5b                   	pop    %rbx
    2dce:	5d                   	pop    %rbp
    2dcf:	41 5c                	pop    %r12
    2dd1:	41 5d                	pop    %r13
    2dd3:	c3                   	ret    
    2dd4:	0f 1f 40 00          	nopl   0x0(%rax)
    2dd8:	48 89 da             	mov    %rbx,%rdx
    2ddb:	48 89 e7             	mov    %rsp,%rdi
    2dde:	b9 10 00 00 00       	mov    $0x10,%ecx
    2de3:	be 10 00 00 00       	mov    $0x10,%esi
    2de8:	0f ae e8             	lfence 
    2deb:	e8 10 d1 00 00       	call   ff00 <memcpy_s>
    2df0:	89 c2                	mov    %eax,%edx
    2df2:	b8 01 00 00 00       	mov    $0x1,%eax
    2df7:	85 d2                	test   %edx,%edx
    2df9:	75 ba                	jne    2db5 <sgx_ecall_pointer_size+0x35>
    2dfb:	4c 8b 24 24          	mov    (%rsp),%r12
    2dff:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2e04:	4d 85 e4             	test   %r12,%r12
    2e07:	0f 84 83 00 00 00    	je     2e90 <sgx_ecall_pointer_size+0x110>
    2e0d:	48 89 ee             	mov    %rbp,%rsi
    2e10:	4c 89 e7             	mov    %r12,%rdi
    2e13:	e8 88 5f 00 00       	call   8da0 <sgx_is_outside_enclave>
    2e18:	89 c2                	mov    %eax,%edx
    2e1a:	b8 02 00 00 00       	mov    $0x2,%eax
    2e1f:	85 d2                	test   %edx,%edx
    2e21:	74 92                	je     2db5 <sgx_ecall_pointer_size+0x35>
    2e23:	48 85 ed             	test   %rbp,%rbp
    2e26:	0f ae e8             	lfence 
    2e29:	74 68                	je     2e93 <sgx_ecall_pointer_size+0x113>
    2e2b:	48 89 ef             	mov    %rbp,%rdi
    2e2e:	e8 3d 97 00 00       	call   c570 <dlmalloc>
    2e33:	49 89 c5             	mov    %rax,%r13
    2e36:	b8 03 00 00 00       	mov    $0x3,%eax
    2e3b:	4d 85 ed             	test   %r13,%r13
    2e3e:	0f 84 71 ff ff ff    	je     2db5 <sgx_ecall_pointer_size+0x35>
    2e44:	48 89 e9             	mov    %rbp,%rcx
    2e47:	4c 89 e2             	mov    %r12,%rdx
    2e4a:	48 89 ee             	mov    %rbp,%rsi
    2e4d:	4c 89 ef             	mov    %r13,%rdi
    2e50:	bb 01 00 00 00       	mov    $0x1,%ebx
    2e55:	e8 a6 d0 00 00       	call   ff00 <memcpy_s>
    2e5a:	85 c0                	test   %eax,%eax
    2e5c:	75 23                	jne    2e81 <sgx_ecall_pointer_size+0x101>
    2e5e:	48 89 ee             	mov    %rbp,%rsi
    2e61:	4c 89 ef             	mov    %r13,%rdi
    2e64:	31 db                	xor    %ebx,%ebx
    2e66:	e8 65 4e 00 00       	call   7cd0 <ecall_pointer_size>
    2e6b:	48 89 e9             	mov    %rbp,%rcx
    2e6e:	4c 89 ea             	mov    %r13,%rdx
    2e71:	48 89 ee             	mov    %rbp,%rsi
    2e74:	4c 89 e7             	mov    %r12,%rdi
    2e77:	e8 04 d1 00 00       	call   ff80 <memcpy_verw_s>
    2e7c:	85 c0                	test   %eax,%eax
    2e7e:	0f 95 c3             	setne  %bl
    2e81:	4c 89 ef             	mov    %r13,%rdi
    2e84:	e8 57 b1 00 00       	call   dfe0 <dlfree>
    2e89:	89 d8                	mov    %ebx,%eax
    2e8b:	e9 25 ff ff ff       	jmp    2db5 <sgx_ecall_pointer_size+0x35>
    2e90:	0f ae e8             	lfence 
    2e93:	48 89 ee             	mov    %rbp,%rsi
    2e96:	31 ff                	xor    %edi,%edi
    2e98:	e8 33 4e 00 00       	call   7cd0 <ecall_pointer_size>
    2e9d:	31 c0                	xor    %eax,%eax
    2e9f:	e9 11 ff ff ff       	jmp    2db5 <sgx_ecall_pointer_size+0x35>
    2ea4:	e8 17 cb 00 00       	call   f9c0 <__stack_chk_fail>
    2ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002eb0 <sgx_ecall_pointer_string_const>:
    2eb0:	41 54                	push   %r12
    2eb2:	55                   	push   %rbp
    2eb3:	53                   	push   %rbx
    2eb4:	48 83 ec 20          	sub    $0x20,%rsp
    2eb8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2ebf:	00 00 
    2ec1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2ec6:	31 c0                	xor    %eax,%eax
    2ec8:	48 85 ff             	test   %rdi,%rdi
    2ecb:	74 11                	je     2ede <sgx_ecall_pointer_string_const+0x2e>
    2ecd:	be 10 00 00 00       	mov    $0x10,%esi
    2ed2:	48 89 fb             	mov    %rdi,%rbx
    2ed5:	e8 c6 5e 00 00       	call   8da0 <sgx_is_outside_enclave>
    2eda:	85 c0                	test   %eax,%eax
    2edc:	75 22                	jne    2f00 <sgx_ecall_pointer_string_const+0x50>
    2ede:	b8 02 00 00 00       	mov    $0x2,%eax
    2ee3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    2ee8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2eef:	00 00 
    2ef1:	0f 85 17 01 00 00    	jne    300e <sgx_ecall_pointer_string_const+0x15e>
    2ef7:	48 83 c4 20          	add    $0x20,%rsp
    2efb:	5b                   	pop    %rbx
    2efc:	5d                   	pop    %rbp
    2efd:	41 5c                	pop    %r12
    2eff:	c3                   	ret    
    2f00:	48 89 da             	mov    %rbx,%rdx
    2f03:	48 89 e7             	mov    %rsp,%rdi
    2f06:	b9 10 00 00 00       	mov    $0x10,%ecx
    2f0b:	be 10 00 00 00       	mov    $0x10,%esi
    2f10:	0f ae e8             	lfence 
    2f13:	e8 e8 cf 00 00       	call   ff00 <memcpy_s>
    2f18:	89 c2                	mov    %eax,%edx
    2f1a:	b8 01 00 00 00       	mov    $0x1,%eax
    2f1f:	85 d2                	test   %edx,%edx
    2f21:	75 c0                	jne    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f23:	48 8b 1c 24          	mov    (%rsp),%rbx
    2f27:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    2f2c:	48 85 db             	test   %rbx,%rbx
    2f2f:	0f 84 ae 00 00 00    	je     2fe3 <sgx_ecall_pointer_string_const+0x133>
    2f35:	48 89 ee             	mov    %rbp,%rsi
    2f38:	48 89 df             	mov    %rbx,%rdi
    2f3b:	e8 60 5e 00 00       	call   8da0 <sgx_is_outside_enclave>
    2f40:	89 c2                	mov    %eax,%edx
    2f42:	b8 02 00 00 00       	mov    $0x2,%eax
    2f47:	85 d2                	test   %edx,%edx
    2f49:	74 98                	je     2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f4b:	48 85 ed             	test   %rbp,%rbp
    2f4e:	0f ae e8             	lfence 
    2f51:	0f 84 9d 00 00 00    	je     2ff4 <sgx_ecall_pointer_string_const+0x144>
    2f57:	48 89 ef             	mov    %rbp,%rdi
    2f5a:	e8 11 96 00 00       	call   c570 <dlmalloc>
    2f5f:	49 89 c4             	mov    %rax,%r12
    2f62:	b8 03 00 00 00       	mov    $0x3,%eax
    2f67:	4d 85 e4             	test   %r12,%r12
    2f6a:	0f 84 73 ff ff ff    	je     2ee3 <sgx_ecall_pointer_string_const+0x33>
    2f70:	48 89 e9             	mov    %rbp,%rcx
    2f73:	48 89 da             	mov    %rbx,%rdx
    2f76:	48 89 ee             	mov    %rbp,%rsi
    2f79:	4c 89 e7             	mov    %r12,%rdi
    2f7c:	e8 7f cf 00 00       	call   ff00 <memcpy_s>
    2f81:	85 c0                	test   %eax,%eax
    2f83:	75 4a                	jne    2fcf <sgx_ecall_pointer_string_const+0x11f>
    2f85:	41 c6 44 2c ff 00    	movb   $0x0,-0x1(%r12,%rbp,1)
    2f8b:	4c 89 e2             	mov    %r12,%rdx
    2f8e:	8b 0a                	mov    (%rdx),%ecx
    2f90:	48 83 c2 04          	add    $0x4,%rdx
    2f94:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    2f9a:	f7 d1                	not    %ecx
    2f9c:	21 c8                	and    %ecx,%eax
    2f9e:	25 80 80 80 80       	and    $0x80808080,%eax
    2fa3:	74 e9                	je     2f8e <sgx_ecall_pointer_string_const+0xde>
    2fa5:	89 c1                	mov    %eax,%ecx
    2fa7:	c1 e9 10             	shr    $0x10,%ecx
    2faa:	a9 80 80 00 00       	test   $0x8080,%eax
    2faf:	0f 44 c1             	cmove  %ecx,%eax
    2fb2:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    2fb6:	89 c6                	mov    %eax,%esi
    2fb8:	48 0f 44 d1          	cmove  %rcx,%rdx
    2fbc:	40 00 c6             	add    %al,%sil
    2fbf:	48 83 da 03          	sbb    $0x3,%rdx
    2fc3:	4c 29 e2             	sub    %r12,%rdx
    2fc6:	48 83 c2 01          	add    $0x1,%rdx
    2fca:	48 39 d5             	cmp    %rdx,%rbp
    2fcd:	74 33                	je     3002 <sgx_ecall_pointer_string_const+0x152>
    2fcf:	bb 01 00 00 00       	mov    $0x1,%ebx
    2fd4:	4c 89 e7             	mov    %r12,%rdi
    2fd7:	e8 04 b0 00 00       	call   dfe0 <dlfree>
    2fdc:	89 d8                	mov    %ebx,%eax
    2fde:	e9 00 ff ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2fe3:	31 ff                	xor    %edi,%edi
    2fe5:	0f ae e8             	lfence 
    2fe8:	e8 73 4c 00 00       	call   7c60 <ecall_pointer_string_const>
    2fed:	31 c0                	xor    %eax,%eax
    2fef:	e9 ef fe ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    2ff4:	31 ff                	xor    %edi,%edi
    2ff6:	e8 65 4c 00 00       	call   7c60 <ecall_pointer_string_const>
    2ffb:	31 c0                	xor    %eax,%eax
    2ffd:	e9 e1 fe ff ff       	jmp    2ee3 <sgx_ecall_pointer_string_const+0x33>
    3002:	4c 89 e7             	mov    %r12,%rdi
    3005:	31 db                	xor    %ebx,%ebx
    3007:	e8 54 4c 00 00       	call   7c60 <ecall_pointer_string_const>
    300c:	eb c6                	jmp    2fd4 <sgx_ecall_pointer_string_const+0x124>
    300e:	e8 ad c9 00 00       	call   f9c0 <__stack_chk_fail>
    3013:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    301a:	00 00 00 
    301d:	0f 1f 00             	nopl   (%rax)

0000000000003020 <sgx_ecall_pointer_string>:
    3020:	41 55                	push   %r13
    3022:	41 54                	push   %r12
    3024:	55                   	push   %rbp
    3025:	53                   	push   %rbx
    3026:	48 83 ec 28          	sub    $0x28,%rsp
    302a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3031:	00 00 
    3033:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3038:	31 c0                	xor    %eax,%eax
    303a:	48 85 ff             	test   %rdi,%rdi
    303d:	74 11                	je     3050 <sgx_ecall_pointer_string+0x30>
    303f:	be 10 00 00 00       	mov    $0x10,%esi
    3044:	48 89 fb             	mov    %rdi,%rbx
    3047:	e8 54 5d 00 00       	call   8da0 <sgx_is_outside_enclave>
    304c:	85 c0                	test   %eax,%eax
    304e:	75 28                	jne    3078 <sgx_ecall_pointer_string+0x58>
    3050:	b8 02 00 00 00       	mov    $0x2,%eax
    3055:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    305a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3061:	00 00 
    3063:	0f 85 6d 01 00 00    	jne    31d6 <sgx_ecall_pointer_string+0x1b6>
    3069:	48 83 c4 28          	add    $0x28,%rsp
    306d:	5b                   	pop    %rbx
    306e:	5d                   	pop    %rbp
    306f:	41 5c                	pop    %r12
    3071:	41 5d                	pop    %r13
    3073:	c3                   	ret    
    3074:	0f 1f 40 00          	nopl   0x0(%rax)
    3078:	48 89 da             	mov    %rbx,%rdx
    307b:	48 89 e7             	mov    %rsp,%rdi
    307e:	b9 10 00 00 00       	mov    $0x10,%ecx
    3083:	be 10 00 00 00       	mov    $0x10,%esi
    3088:	0f ae e8             	lfence 
    308b:	e8 70 ce 00 00       	call   ff00 <memcpy_s>
    3090:	89 c2                	mov    %eax,%edx
    3092:	b8 01 00 00 00       	mov    $0x1,%eax
    3097:	85 d2                	test   %edx,%edx
    3099:	75 ba                	jne    3055 <sgx_ecall_pointer_string+0x35>
    309b:	48 8b 1c 24          	mov    (%rsp),%rbx
    309f:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    30a4:	48 85 db             	test   %rbx,%rbx
    30a7:	0f 84 b2 00 00 00    	je     315f <sgx_ecall_pointer_string+0x13f>
    30ad:	48 89 ee             	mov    %rbp,%rsi
    30b0:	48 89 df             	mov    %rbx,%rdi
    30b3:	e8 e8 5c 00 00       	call   8da0 <sgx_is_outside_enclave>
    30b8:	89 c2                	mov    %eax,%edx
    30ba:	b8 02 00 00 00       	mov    $0x2,%eax
    30bf:	85 d2                	test   %edx,%edx
    30c1:	74 92                	je     3055 <sgx_ecall_pointer_string+0x35>
    30c3:	48 85 ed             	test   %rbp,%rbp
    30c6:	0f ae e8             	lfence 
    30c9:	0f 84 93 00 00 00    	je     3162 <sgx_ecall_pointer_string+0x142>
    30cf:	48 89 ef             	mov    %rbp,%rdi
    30d2:	e8 99 94 00 00       	call   c570 <dlmalloc>
    30d7:	49 89 c4             	mov    %rax,%r12
    30da:	b8 03 00 00 00       	mov    $0x3,%eax
    30df:	4d 85 e4             	test   %r12,%r12
    30e2:	0f 84 6d ff ff ff    	je     3055 <sgx_ecall_pointer_string+0x35>
    30e8:	48 89 e9             	mov    %rbp,%rcx
    30eb:	48 89 da             	mov    %rbx,%rdx
    30ee:	48 89 ee             	mov    %rbp,%rsi
    30f1:	4c 89 e7             	mov    %r12,%rdi
    30f4:	e8 07 ce 00 00       	call   ff00 <memcpy_s>
    30f9:	85 c0                	test   %eax,%eax
    30fb:	75 4e                	jne    314b <sgx_ecall_pointer_string+0x12b>
    30fd:	4d 8d 6c 2c ff       	lea    -0x1(%r12,%rbp,1),%r13
    3102:	4c 89 e2             	mov    %r12,%rdx
    3105:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
    310a:	8b 0a                	mov    (%rdx),%ecx
    310c:	48 83 c2 04          	add    $0x4,%rdx
    3110:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    3116:	f7 d1                	not    %ecx
    3118:	21 c8                	and    %ecx,%eax
    311a:	25 80 80 80 80       	and    $0x80808080,%eax
    311f:	74 e9                	je     310a <sgx_ecall_pointer_string+0xea>
    3121:	89 c1                	mov    %eax,%ecx
    3123:	c1 e9 10             	shr    $0x10,%ecx
    3126:	a9 80 80 00 00       	test   $0x8080,%eax
    312b:	0f 44 c1             	cmove  %ecx,%eax
    312e:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    3132:	89 c6                	mov    %eax,%esi
    3134:	48 0f 44 d1          	cmove  %rcx,%rdx
    3138:	40 00 c6             	add    %al,%sil
    313b:	48 83 da 03          	sbb    $0x3,%rdx
    313f:	4c 29 e2             	sub    %r12,%rdx
    3142:	48 83 c2 01          	add    $0x1,%rdx
    3146:	48 39 d5             	cmp    %rdx,%rbp
    3149:	74 25                	je     3170 <sgx_ecall_pointer_string+0x150>
    314b:	bb 01 00 00 00       	mov    $0x1,%ebx
    3150:	4c 89 e7             	mov    %r12,%rdi
    3153:	e8 88 ae 00 00       	call   dfe0 <dlfree>
    3158:	89 d8                	mov    %ebx,%eax
    315a:	e9 f6 fe ff ff       	jmp    3055 <sgx_ecall_pointer_string+0x35>
    315f:	0f ae e8             	lfence 
    3162:	31 ff                	xor    %edi,%edi
    3164:	e8 d7 4a 00 00       	call   7c40 <ecall_pointer_string>
    3169:	31 c0                	xor    %eax,%eax
    316b:	e9 e5 fe ff ff       	jmp    3055 <sgx_ecall_pointer_string+0x35>
    3170:	4c 89 e7             	mov    %r12,%rdi
    3173:	e8 c8 4a 00 00       	call   7c40 <ecall_pointer_string>
    3178:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
    317d:	4c 89 e2             	mov    %r12,%rdx
    3180:	8b 0a                	mov    (%rdx),%ecx
    3182:	48 83 c2 04          	add    $0x4,%rdx
    3186:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    318c:	f7 d1                	not    %ecx
    318e:	21 c8                	and    %ecx,%eax
    3190:	25 80 80 80 80       	and    $0x80808080,%eax
    3195:	74 e9                	je     3180 <sgx_ecall_pointer_string+0x160>
    3197:	89 c1                	mov    %eax,%ecx
    3199:	48 89 df             	mov    %rbx,%rdi
    319c:	c1 e9 10             	shr    $0x10,%ecx
    319f:	a9 80 80 00 00       	test   $0x8080,%eax
    31a4:	0f 44 c1             	cmove  %ecx,%eax
    31a7:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    31ab:	89 c6                	mov    %eax,%esi
    31ad:	48 0f 44 d1          	cmove  %rcx,%rdx
    31b1:	40 00 c6             	add    %al,%sil
    31b4:	48 83 da 03          	sbb    $0x3,%rdx
    31b8:	31 db                	xor    %ebx,%ebx
    31ba:	4c 29 e2             	sub    %r12,%rdx
    31bd:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    31c1:	4c 89 e2             	mov    %r12,%rdx
    31c4:	48 89 f1             	mov    %rsi,%rcx
    31c7:	e8 b4 cd 00 00       	call   ff80 <memcpy_verw_s>
    31cc:	85 c0                	test   %eax,%eax
    31ce:	0f 95 c3             	setne  %bl
    31d1:	e9 7a ff ff ff       	jmp    3150 <sgx_ecall_pointer_string+0x130>
    31d6:	e8 e5 c7 00 00       	call   f9c0 <__stack_chk_fail>
    31db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000031e0 <sgx_ecall_pointer_in_out>:
    31e0:	41 54                	push   %r12
    31e2:	55                   	push   %rbp
    31e3:	53                   	push   %rbx
    31e4:	48 83 ec 10          	sub    $0x10,%rsp
    31e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    31ef:	00 00 
    31f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    31f6:	31 c0                	xor    %eax,%eax
    31f8:	48 85 ff             	test   %rdi,%rdi
    31fb:	74 11                	je     320e <sgx_ecall_pointer_in_out+0x2e>
    31fd:	be 08 00 00 00       	mov    $0x8,%esi
    3202:	48 89 fb             	mov    %rdi,%rbx
    3205:	e8 96 5b 00 00       	call   8da0 <sgx_is_outside_enclave>
    320a:	85 c0                	test   %eax,%eax
    320c:	75 22                	jne    3230 <sgx_ecall_pointer_in_out+0x50>
    320e:	b8 02 00 00 00       	mov    $0x2,%eax
    3213:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3218:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    321f:	00 00 
    3221:	0f 85 ce 00 00 00    	jne    32f5 <sgx_ecall_pointer_in_out+0x115>
    3227:	48 83 c4 10          	add    $0x10,%rsp
    322b:	5b                   	pop    %rbx
    322c:	5d                   	pop    %rbp
    322d:	41 5c                	pop    %r12
    322f:	c3                   	ret    
    3230:	48 89 da             	mov    %rbx,%rdx
    3233:	48 89 e7             	mov    %rsp,%rdi
    3236:	b9 08 00 00 00       	mov    $0x8,%ecx
    323b:	be 08 00 00 00       	mov    $0x8,%esi
    3240:	0f ae e8             	lfence 
    3243:	e8 b8 cc 00 00       	call   ff00 <memcpy_s>
    3248:	89 c2                	mov    %eax,%edx
    324a:	b8 01 00 00 00       	mov    $0x1,%eax
    324f:	85 d2                	test   %edx,%edx
    3251:	75 c0                	jne    3213 <sgx_ecall_pointer_in_out+0x33>
    3253:	48 8b 2c 24          	mov    (%rsp),%rbp
    3257:	48 85 ed             	test   %rbp,%rbp
    325a:	74 7e                	je     32da <sgx_ecall_pointer_in_out+0xfa>
    325c:	be 04 00 00 00       	mov    $0x4,%esi
    3261:	48 89 ef             	mov    %rbp,%rdi
    3264:	e8 37 5b 00 00       	call   8da0 <sgx_is_outside_enclave>
    3269:	89 c2                	mov    %eax,%edx
    326b:	b8 02 00 00 00       	mov    $0x2,%eax
    3270:	85 d2                	test   %edx,%edx
    3272:	74 9f                	je     3213 <sgx_ecall_pointer_in_out+0x33>
    3274:	bf 04 00 00 00       	mov    $0x4,%edi
    3279:	0f ae e8             	lfence 
    327c:	e8 ef 92 00 00       	call   c570 <dlmalloc>
    3281:	48 85 c0             	test   %rax,%rax
    3284:	49 89 c4             	mov    %rax,%r12
    3287:	74 62                	je     32eb <sgx_ecall_pointer_in_out+0x10b>
    3289:	b9 04 00 00 00       	mov    $0x4,%ecx
    328e:	48 89 ea             	mov    %rbp,%rdx
    3291:	be 04 00 00 00       	mov    $0x4,%esi
    3296:	4c 89 e7             	mov    %r12,%rdi
    3299:	bb 01 00 00 00       	mov    $0x1,%ebx
    329e:	e8 5d cc 00 00       	call   ff00 <memcpy_s>
    32a3:	85 c0                	test   %eax,%eax
    32a5:	75 24                	jne    32cb <sgx_ecall_pointer_in_out+0xeb>
    32a7:	4c 89 e7             	mov    %r12,%rdi
    32aa:	31 db                	xor    %ebx,%ebx
    32ac:	e8 3f 48 00 00       	call   7af0 <ecall_pointer_in_out>
    32b1:	b9 04 00 00 00       	mov    $0x4,%ecx
    32b6:	4c 89 e2             	mov    %r12,%rdx
    32b9:	be 04 00 00 00       	mov    $0x4,%esi
    32be:	48 89 ef             	mov    %rbp,%rdi
    32c1:	e8 ba cc 00 00       	call   ff80 <memcpy_verw_s>
    32c6:	85 c0                	test   %eax,%eax
    32c8:	0f 95 c3             	setne  %bl
    32cb:	4c 89 e7             	mov    %r12,%rdi
    32ce:	e8 0d ad 00 00       	call   dfe0 <dlfree>
    32d3:	89 d8                	mov    %ebx,%eax
    32d5:	e9 39 ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32da:	31 ff                	xor    %edi,%edi
    32dc:	0f ae e8             	lfence 
    32df:	e8 0c 48 00 00       	call   7af0 <ecall_pointer_in_out>
    32e4:	31 c0                	xor    %eax,%eax
    32e6:	e9 28 ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32eb:	b8 03 00 00 00       	mov    $0x3,%eax
    32f0:	e9 1e ff ff ff       	jmp    3213 <sgx_ecall_pointer_in_out+0x33>
    32f5:	e8 c6 c6 00 00       	call   f9c0 <__stack_chk_fail>
    32fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003300 <sgx_ecall_pointer_out>:
    3300:	55                   	push   %rbp
    3301:	53                   	push   %rbx
    3302:	48 83 ec 28          	sub    $0x28,%rsp
    3306:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    330d:	00 00 
    330f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3314:	31 c0                	xor    %eax,%eax
    3316:	48 85 ff             	test   %rdi,%rdi
    3319:	74 11                	je     332c <sgx_ecall_pointer_out+0x2c>
    331b:	be 08 00 00 00       	mov    $0x8,%esi
    3320:	48 89 fb             	mov    %rdi,%rbx
    3323:	e8 78 5a 00 00       	call   8da0 <sgx_is_outside_enclave>
    3328:	85 c0                	test   %eax,%eax
    332a:	75 24                	jne    3350 <sgx_ecall_pointer_out+0x50>
    332c:	b8 02 00 00 00       	mov    $0x2,%eax
    3331:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3336:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    333d:	00 00 
    333f:	0f 85 c1 00 00 00    	jne    3406 <sgx_ecall_pointer_out+0x106>
    3345:	48 83 c4 28          	add    $0x28,%rsp
    3349:	5b                   	pop    %rbx
    334a:	5d                   	pop    %rbp
    334b:	c3                   	ret    
    334c:	0f 1f 40 00          	nopl   0x0(%rax)
    3350:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    3355:	48 89 da             	mov    %rbx,%rdx
    3358:	b9 08 00 00 00       	mov    $0x8,%ecx
    335d:	be 08 00 00 00       	mov    $0x8,%esi
    3362:	0f ae e8             	lfence 
    3365:	e8 96 cb 00 00       	call   ff00 <memcpy_s>
    336a:	89 c2                	mov    %eax,%edx
    336c:	b8 01 00 00 00       	mov    $0x1,%eax
    3371:	85 d2                	test   %edx,%edx
    3373:	75 bc                	jne    3331 <sgx_ecall_pointer_out+0x31>
    3375:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    337a:	48 85 db             	test   %rbx,%rbx
    337d:	74 6c                	je     33eb <sgx_ecall_pointer_out+0xeb>
    337f:	be 04 00 00 00       	mov    $0x4,%esi
    3384:	48 89 df             	mov    %rbx,%rdi
    3387:	e8 14 5a 00 00       	call   8da0 <sgx_is_outside_enclave>
    338c:	89 c2                	mov    %eax,%edx
    338e:	b8 02 00 00 00       	mov    $0x2,%eax
    3393:	85 d2                	test   %edx,%edx
    3395:	74 9a                	je     3331 <sgx_ecall_pointer_out+0x31>
    3397:	be 01 00 00 00       	mov    $0x1,%esi
    339c:	bf 04 00 00 00       	mov    $0x4,%edi
    33a1:	0f ae e8             	lfence 
    33a4:	e8 47 b6 00 00       	call   e9f0 <calloc>
    33a9:	48 85 c0             	test   %rax,%rax
    33ac:	48 89 c5             	mov    %rax,%rbp
    33af:	74 4b                	je     33fc <sgx_ecall_pointer_out+0xfc>
    33b1:	48 89 ef             	mov    %rbp,%rdi
    33b4:	e8 e7 46 00 00       	call   7aa0 <ecall_pointer_out>
    33b9:	b9 04 00 00 00       	mov    $0x4,%ecx
    33be:	48 89 ea             	mov    %rbp,%rdx
    33c1:	be 04 00 00 00       	mov    $0x4,%esi
    33c6:	48 89 df             	mov    %rbx,%rdi
    33c9:	e8 b2 cb 00 00       	call   ff80 <memcpy_verw_s>
    33ce:	85 c0                	test   %eax,%eax
    33d0:	48 89 ef             	mov    %rbp,%rdi
    33d3:	0f 95 c0             	setne  %al
    33d6:	0f b6 c0             	movzbl %al,%eax
    33d9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    33dd:	e8 fe ab 00 00       	call   dfe0 <dlfree>
    33e2:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    33e6:	e9 46 ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    33eb:	31 ff                	xor    %edi,%edi
    33ed:	0f ae e8             	lfence 
    33f0:	e8 ab 46 00 00       	call   7aa0 <ecall_pointer_out>
    33f5:	31 c0                	xor    %eax,%eax
    33f7:	e9 35 ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    33fc:	b8 03 00 00 00       	mov    $0x3,%eax
    3401:	e9 2b ff ff ff       	jmp    3331 <sgx_ecall_pointer_out+0x31>
    3406:	e8 b5 c5 00 00       	call   f9c0 <__stack_chk_fail>
    340b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003410 <sgx_ecall_pointer_in>:
    3410:	55                   	push   %rbp
    3411:	53                   	push   %rbx
    3412:	48 83 ec 18          	sub    $0x18,%rsp
    3416:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    341d:	00 00 
    341f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3424:	31 c0                	xor    %eax,%eax
    3426:	48 85 ff             	test   %rdi,%rdi
    3429:	74 11                	je     343c <sgx_ecall_pointer_in+0x2c>
    342b:	be 08 00 00 00       	mov    $0x8,%esi
    3430:	48 89 fb             	mov    %rdi,%rbx
    3433:	e8 68 59 00 00       	call   8da0 <sgx_is_outside_enclave>
    3438:	85 c0                	test   %eax,%eax
    343a:	75 24                	jne    3460 <sgx_ecall_pointer_in+0x50>
    343c:	b8 02 00 00 00       	mov    $0x2,%eax
    3441:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3446:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    344d:	00 00 
    344f:	0f 85 b3 00 00 00    	jne    3508 <sgx_ecall_pointer_in+0xf8>
    3455:	48 83 c4 18          	add    $0x18,%rsp
    3459:	5b                   	pop    %rbx
    345a:	5d                   	pop    %rbp
    345b:	c3                   	ret    
    345c:	0f 1f 40 00          	nopl   0x0(%rax)
    3460:	48 89 da             	mov    %rbx,%rdx
    3463:	48 89 e7             	mov    %rsp,%rdi
    3466:	b9 08 00 00 00       	mov    $0x8,%ecx
    346b:	be 08 00 00 00       	mov    $0x8,%esi
    3470:	0f ae e8             	lfence 
    3473:	e8 88 ca 00 00       	call   ff00 <memcpy_s>
    3478:	89 c2                	mov    %eax,%edx
    347a:	b8 01 00 00 00       	mov    $0x1,%eax
    347f:	85 d2                	test   %edx,%edx
    3481:	75 be                	jne    3441 <sgx_ecall_pointer_in+0x31>
    3483:	48 8b 1c 24          	mov    (%rsp),%rbx
    3487:	48 85 db             	test   %rbx,%rbx
    348a:	74 5f                	je     34eb <sgx_ecall_pointer_in+0xdb>
    348c:	be 04 00 00 00       	mov    $0x4,%esi
    3491:	48 89 df             	mov    %rbx,%rdi
    3494:	e8 07 59 00 00       	call   8da0 <sgx_is_outside_enclave>
    3499:	89 c2                	mov    %eax,%edx
    349b:	b8 02 00 00 00       	mov    $0x2,%eax
    34a0:	85 d2                	test   %edx,%edx
    34a2:	74 9d                	je     3441 <sgx_ecall_pointer_in+0x31>
    34a4:	bf 04 00 00 00       	mov    $0x4,%edi
    34a9:	0f ae e8             	lfence 
    34ac:	e8 bf 90 00 00       	call   c570 <dlmalloc>
    34b1:	48 89 c5             	mov    %rax,%rbp
    34b4:	b8 03 00 00 00       	mov    $0x3,%eax
    34b9:	48 85 ed             	test   %rbp,%rbp
    34bc:	74 83                	je     3441 <sgx_ecall_pointer_in+0x31>
    34be:	b9 04 00 00 00       	mov    $0x4,%ecx
    34c3:	48 89 da             	mov    %rbx,%rdx
    34c6:	be 04 00 00 00       	mov    $0x4,%esi
    34cb:	48 89 ef             	mov    %rbp,%rdi
    34ce:	e8 2d ca 00 00       	call   ff00 <memcpy_s>
    34d3:	85 c0                	test   %eax,%eax
    34d5:	74 25                	je     34fc <sgx_ecall_pointer_in+0xec>
    34d7:	bb 01 00 00 00       	mov    $0x1,%ebx
    34dc:	48 89 ef             	mov    %rbp,%rdi
    34df:	e8 fc aa 00 00       	call   dfe0 <dlfree>
    34e4:	89 d8                	mov    %ebx,%eax
    34e6:	e9 56 ff ff ff       	jmp    3441 <sgx_ecall_pointer_in+0x31>
    34eb:	31 ff                	xor    %edi,%edi
    34ed:	0f ae e8             	lfence 
    34f0:	e8 1b 46 00 00       	call   7b10 <ecall_pointer_in>
    34f5:	31 c0                	xor    %eax,%eax
    34f7:	e9 45 ff ff ff       	jmp    3441 <sgx_ecall_pointer_in+0x31>
    34fc:	48 89 ef             	mov    %rbp,%rdi
    34ff:	31 db                	xor    %ebx,%ebx
    3501:	e8 0a 46 00 00       	call   7b10 <ecall_pointer_in>
    3506:	eb d4                	jmp    34dc <sgx_ecall_pointer_in+0xcc>
    3508:	e8 b3 c4 00 00       	call   f9c0 <__stack_chk_fail>
    350d:	0f 1f 00             	nopl   (%rax)

0000000000003510 <sgx_ecall_pointer_user_check>:
    3510:	53                   	push   %rbx
    3511:	48 83 ec 30          	sub    $0x30,%rsp
    3515:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    351c:	00 00 
    351e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3523:	31 c0                	xor    %eax,%eax
    3525:	48 85 ff             	test   %rdi,%rdi
    3528:	74 11                	je     353b <sgx_ecall_pointer_user_check+0x2b>
    352a:	be 18 00 00 00       	mov    $0x18,%esi
    352f:	48 89 fb             	mov    %rdi,%rbx
    3532:	e8 69 58 00 00       	call   8da0 <sgx_is_outside_enclave>
    3537:	85 c0                	test   %eax,%eax
    3539:	75 25                	jne    3560 <sgx_ecall_pointer_user_check+0x50>
    353b:	b8 02 00 00 00       	mov    $0x2,%eax
    3540:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3545:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    354c:	00 00 
    354e:	75 6a                	jne    35ba <sgx_ecall_pointer_user_check+0xaa>
    3550:	48 83 c4 30          	add    $0x30,%rsp
    3554:	5b                   	pop    %rbx
    3555:	c3                   	ret    
    3556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    355d:	00 00 00 
    3560:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    3565:	48 89 da             	mov    %rbx,%rdx
    3568:	b9 18 00 00 00       	mov    $0x18,%ecx
    356d:	be 18 00 00 00       	mov    $0x18,%esi
    3572:	0f ae e8             	lfence 
    3575:	e8 86 c9 00 00       	call   ff00 <memcpy_s>
    357a:	89 c2                	mov    %eax,%edx
    357c:	b8 01 00 00 00       	mov    $0x1,%eax
    3581:	85 d2                	test   %edx,%edx
    3583:	75 bb                	jne    3540 <sgx_ecall_pointer_user_check+0x30>
    3585:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    358a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    358f:	e8 3c 43 00 00       	call   78d0 <ecall_pointer_user_check>
    3594:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3599:	b9 08 00 00 00       	mov    $0x8,%ecx
    359e:	be 08 00 00 00       	mov    $0x8,%esi
    35a3:	48 89 df             	mov    %rbx,%rdi
    35a6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    35ab:	e8 d0 c9 00 00       	call   ff80 <memcpy_verw_s>
    35b0:	85 c0                	test   %eax,%eax
    35b2:	0f 95 c0             	setne  %al
    35b5:	0f b6 c0             	movzbl %al,%eax
    35b8:	eb 86                	jmp    3540 <sgx_ecall_pointer_user_check+0x30>
    35ba:	e8 01 c4 00 00       	call   f9c0 <__stack_chk_fail>
    35bf:	90                   	nop

00000000000035c0 <sgx_ecall_type_enum_union>:
    35c0:	53                   	push   %rbx
    35c1:	48 83 ec 20          	sub    $0x20,%rsp
    35c5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    35cc:	00 00 
    35ce:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    35d3:	31 c0                	xor    %eax,%eax
    35d5:	48 85 ff             	test   %rdi,%rdi
    35d8:	74 11                	je     35eb <sgx_ecall_type_enum_union+0x2b>
    35da:	be 10 00 00 00       	mov    $0x10,%esi
    35df:	48 89 fb             	mov    %rdi,%rbx
    35e2:	e8 b9 57 00 00       	call   8da0 <sgx_is_outside_enclave>
    35e7:	85 c0                	test   %eax,%eax
    35e9:	75 25                	jne    3610 <sgx_ecall_type_enum_union+0x50>
    35eb:	b8 02 00 00 00       	mov    $0x2,%eax
    35f0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    35f5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    35fc:	00 00 
    35fe:	75 44                	jne    3644 <sgx_ecall_type_enum_union+0x84>
    3600:	48 83 c4 20          	add    $0x20,%rsp
    3604:	5b                   	pop    %rbx
    3605:	c3                   	ret    
    3606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    360d:	00 00 00 
    3610:	48 89 da             	mov    %rbx,%rdx
    3613:	48 89 e7             	mov    %rsp,%rdi
    3616:	b9 10 00 00 00       	mov    $0x10,%ecx
    361b:	be 10 00 00 00       	mov    $0x10,%esi
    3620:	0f ae e8             	lfence 
    3623:	e8 d8 c8 00 00       	call   ff00 <memcpy_s>
    3628:	89 c2                	mov    %eax,%edx
    362a:	b8 01 00 00 00       	mov    $0x1,%eax
    362f:	85 d2                	test   %edx,%edx
    3631:	75 bd                	jne    35f0 <sgx_ecall_type_enum_union+0x30>
    3633:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3638:	8b 3c 24             	mov    (%rsp),%edi
    363b:	e8 30 42 00 00       	call   7870 <ecall_type_enum_union>
    3640:	31 c0                	xor    %eax,%eax
    3642:	eb ac                	jmp    35f0 <sgx_ecall_type_enum_union+0x30>
    3644:	e8 77 c3 00 00       	call   f9c0 <__stack_chk_fail>
    3649:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003650 <sgx_ecall_type_struct>:
    3650:	53                   	push   %rbx
    3651:	48 83 ec 20          	sub    $0x20,%rsp
    3655:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    365c:	00 00 
    365e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3663:	31 c0                	xor    %eax,%eax
    3665:	48 85 ff             	test   %rdi,%rdi
    3668:	74 11                	je     367b <sgx_ecall_type_struct+0x2b>
    366a:	be 10 00 00 00       	mov    $0x10,%esi
    366f:	48 89 fb             	mov    %rdi,%rbx
    3672:	e8 29 57 00 00       	call   8da0 <sgx_is_outside_enclave>
    3677:	85 c0                	test   %eax,%eax
    3679:	75 25                	jne    36a0 <sgx_ecall_type_struct+0x50>
    367b:	b8 02 00 00 00       	mov    $0x2,%eax
    3680:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3685:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    368c:	00 00 
    368e:	75 44                	jne    36d4 <sgx_ecall_type_struct+0x84>
    3690:	48 83 c4 20          	add    $0x20,%rsp
    3694:	5b                   	pop    %rbx
    3695:	c3                   	ret    
    3696:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    369d:	00 00 00 
    36a0:	48 89 da             	mov    %rbx,%rdx
    36a3:	48 89 e7             	mov    %rsp,%rdi
    36a6:	b9 10 00 00 00       	mov    $0x10,%ecx
    36ab:	be 10 00 00 00       	mov    $0x10,%esi
    36b0:	0f ae e8             	lfence 
    36b3:	e8 48 c8 00 00       	call   ff00 <memcpy_s>
    36b8:	89 c2                	mov    %eax,%edx
    36ba:	b8 01 00 00 00       	mov    $0x1,%eax
    36bf:	85 d2                	test   %edx,%edx
    36c1:	75 bd                	jne    3680 <sgx_ecall_type_struct+0x30>
    36c3:	8b 3c 24             	mov    (%rsp),%edi
    36c6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    36cb:	e8 40 41 00 00       	call   7810 <ecall_type_struct>
    36d0:	31 c0                	xor    %eax,%eax
    36d2:	eb ac                	jmp    3680 <sgx_ecall_type_struct+0x30>
    36d4:	e8 e7 c2 00 00       	call   f9c0 <__stack_chk_fail>
    36d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036e0 <sgx_ecall_type_wchar_t>:
    36e0:	53                   	push   %rbx
    36e1:	48 83 ec 10          	sub    $0x10,%rsp
    36e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    36ec:	00 00 
    36ee:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    36f3:	31 c0                	xor    %eax,%eax
    36f5:	48 85 ff             	test   %rdi,%rdi
    36f8:	74 11                	je     370b <sgx_ecall_type_wchar_t+0x2b>
    36fa:	be 04 00 00 00       	mov    $0x4,%esi
    36ff:	48 89 fb             	mov    %rdi,%rbx
    3702:	e8 99 56 00 00       	call   8da0 <sgx_is_outside_enclave>
    3707:	85 c0                	test   %eax,%eax
    3709:	75 25                	jne    3730 <sgx_ecall_type_wchar_t+0x50>
    370b:	b8 02 00 00 00       	mov    $0x2,%eax
    3710:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3715:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    371c:	00 00 
    371e:	75 3f                	jne    375f <sgx_ecall_type_wchar_t+0x7f>
    3720:	48 83 c4 10          	add    $0x10,%rsp
    3724:	5b                   	pop    %rbx
    3725:	c3                   	ret    
    3726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    372d:	00 00 00 
    3730:	48 89 da             	mov    %rbx,%rdx
    3733:	48 89 e7             	mov    %rsp,%rdi
    3736:	b9 04 00 00 00       	mov    $0x4,%ecx
    373b:	be 04 00 00 00       	mov    $0x4,%esi
    3740:	0f ae e8             	lfence 
    3743:	e8 b8 c7 00 00       	call   ff00 <memcpy_s>
    3748:	89 c2                	mov    %eax,%edx
    374a:	b8 01 00 00 00       	mov    $0x1,%eax
    374f:	85 d2                	test   %edx,%edx
    3751:	75 bd                	jne    3710 <sgx_ecall_type_wchar_t+0x30>
    3753:	8b 3c 24             	mov    (%rsp),%edi
    3756:	e8 75 40 00 00       	call   77d0 <ecall_type_wchar_t>
    375b:	31 c0                	xor    %eax,%eax
    375d:	eb b1                	jmp    3710 <sgx_ecall_type_wchar_t+0x30>
    375f:	e8 5c c2 00 00       	call   f9c0 <__stack_chk_fail>
    3764:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    376b:	00 00 00 
    376e:	66 90                	xchg   %ax,%ax

0000000000003770 <sgx_ecall_type_size_t>:
    3770:	53                   	push   %rbx
    3771:	48 83 ec 10          	sub    $0x10,%rsp
    3775:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    377c:	00 00 
    377e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3783:	31 c0                	xor    %eax,%eax
    3785:	48 85 ff             	test   %rdi,%rdi
    3788:	74 11                	je     379b <sgx_ecall_type_size_t+0x2b>
    378a:	be 08 00 00 00       	mov    $0x8,%esi
    378f:	48 89 fb             	mov    %rdi,%rbx
    3792:	e8 09 56 00 00       	call   8da0 <sgx_is_outside_enclave>
    3797:	85 c0                	test   %eax,%eax
    3799:	75 25                	jne    37c0 <sgx_ecall_type_size_t+0x50>
    379b:	b8 02 00 00 00       	mov    $0x2,%eax
    37a0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    37a5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    37ac:	00 00 
    37ae:	75 40                	jne    37f0 <sgx_ecall_type_size_t+0x80>
    37b0:	48 83 c4 10          	add    $0x10,%rsp
    37b4:	5b                   	pop    %rbx
    37b5:	c3                   	ret    
    37b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    37bd:	00 00 00 
    37c0:	48 89 da             	mov    %rbx,%rdx
    37c3:	48 89 e7             	mov    %rsp,%rdi
    37c6:	b9 08 00 00 00       	mov    $0x8,%ecx
    37cb:	be 08 00 00 00       	mov    $0x8,%esi
    37d0:	0f ae e8             	lfence 
    37d3:	e8 28 c7 00 00       	call   ff00 <memcpy_s>
    37d8:	89 c2                	mov    %eax,%edx
    37da:	b8 01 00 00 00       	mov    $0x1,%eax
    37df:	85 d2                	test   %edx,%edx
    37e1:	75 bd                	jne    37a0 <sgx_ecall_type_size_t+0x30>
    37e3:	48 8b 3c 24          	mov    (%rsp),%rdi
    37e7:	e8 a4 3f 00 00       	call   7790 <ecall_type_size_t>
    37ec:	31 c0                	xor    %eax,%eax
    37ee:	eb b0                	jmp    37a0 <sgx_ecall_type_size_t+0x30>
    37f0:	e8 cb c1 00 00       	call   f9c0 <__stack_chk_fail>
    37f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    37fc:	00 00 00 
    37ff:	90                   	nop

0000000000003800 <sgx_ecall_type_double>:
    3800:	53                   	push   %rbx
    3801:	48 83 ec 10          	sub    $0x10,%rsp
    3805:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    380c:	00 00 
    380e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3813:	31 c0                	xor    %eax,%eax
    3815:	48 85 ff             	test   %rdi,%rdi
    3818:	74 11                	je     382b <sgx_ecall_type_double+0x2b>
    381a:	be 08 00 00 00       	mov    $0x8,%esi
    381f:	48 89 fb             	mov    %rdi,%rbx
    3822:	e8 79 55 00 00       	call   8da0 <sgx_is_outside_enclave>
    3827:	85 c0                	test   %eax,%eax
    3829:	75 25                	jne    3850 <sgx_ecall_type_double+0x50>
    382b:	b8 02 00 00 00       	mov    $0x2,%eax
    3830:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3835:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    383c:	00 00 
    383e:	75 41                	jne    3881 <sgx_ecall_type_double+0x81>
    3840:	48 83 c4 10          	add    $0x10,%rsp
    3844:	5b                   	pop    %rbx
    3845:	c3                   	ret    
    3846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    384d:	00 00 00 
    3850:	48 89 da             	mov    %rbx,%rdx
    3853:	48 89 e7             	mov    %rsp,%rdi
    3856:	b9 08 00 00 00       	mov    $0x8,%ecx
    385b:	be 08 00 00 00       	mov    $0x8,%esi
    3860:	0f ae e8             	lfence 
    3863:	e8 98 c6 00 00       	call   ff00 <memcpy_s>
    3868:	89 c2                	mov    %eax,%edx
    386a:	b8 01 00 00 00       	mov    $0x1,%eax
    386f:	85 d2                	test   %edx,%edx
    3871:	75 bd                	jne    3830 <sgx_ecall_type_double+0x30>
    3873:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3878:	e8 b3 3e 00 00       	call   7730 <ecall_type_double>
    387d:	31 c0                	xor    %eax,%eax
    387f:	eb af                	jmp    3830 <sgx_ecall_type_double+0x30>
    3881:	e8 3a c1 00 00       	call   f9c0 <__stack_chk_fail>
    3886:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    388d:	00 00 00 

0000000000003890 <sgx_ecall_type_float>:
    3890:	53                   	push   %rbx
    3891:	48 83 ec 10          	sub    $0x10,%rsp
    3895:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    389c:	00 00 
    389e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    38a3:	31 c0                	xor    %eax,%eax
    38a5:	48 85 ff             	test   %rdi,%rdi
    38a8:	74 11                	je     38bb <sgx_ecall_type_float+0x2b>
    38aa:	be 04 00 00 00       	mov    $0x4,%esi
    38af:	48 89 fb             	mov    %rdi,%rbx
    38b2:	e8 e9 54 00 00       	call   8da0 <sgx_is_outside_enclave>
    38b7:	85 c0                	test   %eax,%eax
    38b9:	75 25                	jne    38e0 <sgx_ecall_type_float+0x50>
    38bb:	b8 02 00 00 00       	mov    $0x2,%eax
    38c0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    38c5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    38cc:	00 00 
    38ce:	75 41                	jne    3911 <sgx_ecall_type_float+0x81>
    38d0:	48 83 c4 10          	add    $0x10,%rsp
    38d4:	5b                   	pop    %rbx
    38d5:	c3                   	ret    
    38d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    38dd:	00 00 00 
    38e0:	48 89 da             	mov    %rbx,%rdx
    38e3:	48 89 e7             	mov    %rsp,%rdi
    38e6:	b9 04 00 00 00       	mov    $0x4,%ecx
    38eb:	be 04 00 00 00       	mov    $0x4,%esi
    38f0:	0f ae e8             	lfence 
    38f3:	e8 08 c6 00 00       	call   ff00 <memcpy_s>
    38f8:	89 c2                	mov    %eax,%edx
    38fa:	b8 01 00 00 00       	mov    $0x1,%eax
    38ff:	85 d2                	test   %edx,%edx
    3901:	75 bd                	jne    38c0 <sgx_ecall_type_float+0x30>
    3903:	f3 0f 10 04 24       	movss  (%rsp),%xmm0
    3908:	e8 c3 3d 00 00       	call   76d0 <ecall_type_float>
    390d:	31 c0                	xor    %eax,%eax
    390f:	eb af                	jmp    38c0 <sgx_ecall_type_float+0x30>
    3911:	e8 aa c0 00 00       	call   f9c0 <__stack_chk_fail>
    3916:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    391d:	00 00 00 

0000000000003920 <sgx_ecall_type_int>:
    3920:	53                   	push   %rbx
    3921:	48 83 ec 10          	sub    $0x10,%rsp
    3925:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    392c:	00 00 
    392e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3933:	31 c0                	xor    %eax,%eax
    3935:	48 85 ff             	test   %rdi,%rdi
    3938:	74 11                	je     394b <sgx_ecall_type_int+0x2b>
    393a:	be 04 00 00 00       	mov    $0x4,%esi
    393f:	48 89 fb             	mov    %rdi,%rbx
    3942:	e8 59 54 00 00       	call   8da0 <sgx_is_outside_enclave>
    3947:	85 c0                	test   %eax,%eax
    3949:	75 25                	jne    3970 <sgx_ecall_type_int+0x50>
    394b:	b8 02 00 00 00       	mov    $0x2,%eax
    3950:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3955:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    395c:	00 00 
    395e:	75 3f                	jne    399f <sgx_ecall_type_int+0x7f>
    3960:	48 83 c4 10          	add    $0x10,%rsp
    3964:	5b                   	pop    %rbx
    3965:	c3                   	ret    
    3966:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    396d:	00 00 00 
    3970:	48 89 da             	mov    %rbx,%rdx
    3973:	48 89 e7             	mov    %rsp,%rdi
    3976:	b9 04 00 00 00       	mov    $0x4,%ecx
    397b:	be 04 00 00 00       	mov    $0x4,%esi
    3980:	0f ae e8             	lfence 
    3983:	e8 78 c5 00 00       	call   ff00 <memcpy_s>
    3988:	89 c2                	mov    %eax,%edx
    398a:	b8 01 00 00 00       	mov    $0x1,%eax
    398f:	85 d2                	test   %edx,%edx
    3991:	75 bd                	jne    3950 <sgx_ecall_type_int+0x30>
    3993:	8b 3c 24             	mov    (%rsp),%edi
    3996:	e8 f5 3c 00 00       	call   7690 <ecall_type_int>
    399b:	31 c0                	xor    %eax,%eax
    399d:	eb b1                	jmp    3950 <sgx_ecall_type_int+0x30>
    399f:	e8 1c c0 00 00       	call   f9c0 <__stack_chk_fail>
    39a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    39ab:	00 00 00 
    39ae:	66 90                	xchg   %ax,%ax

00000000000039b0 <sgx_ecall_type_char>:
    39b0:	53                   	push   %rbx
    39b1:	48 83 ec 10          	sub    $0x10,%rsp
    39b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    39bc:	00 00 
    39be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    39c3:	31 c0                	xor    %eax,%eax
    39c5:	48 85 ff             	test   %rdi,%rdi
    39c8:	74 11                	je     39db <sgx_ecall_type_char+0x2b>
    39ca:	be 01 00 00 00       	mov    $0x1,%esi
    39cf:	48 89 fb             	mov    %rdi,%rbx
    39d2:	e8 c9 53 00 00       	call   8da0 <sgx_is_outside_enclave>
    39d7:	85 c0                	test   %eax,%eax
    39d9:	75 25                	jne    3a00 <sgx_ecall_type_char+0x50>
    39db:	b8 02 00 00 00       	mov    $0x2,%eax
    39e0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    39e5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    39ec:	00 00 
    39ee:	75 43                	jne    3a33 <sgx_ecall_type_char+0x83>
    39f0:	48 83 c4 10          	add    $0x10,%rsp
    39f4:	5b                   	pop    %rbx
    39f5:	c3                   	ret    
    39f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    39fd:	00 00 00 
    3a00:	48 8d 7c 24 07       	lea    0x7(%rsp),%rdi
    3a05:	48 89 da             	mov    %rbx,%rdx
    3a08:	b9 01 00 00 00       	mov    $0x1,%ecx
    3a0d:	be 01 00 00 00       	mov    $0x1,%esi
    3a12:	0f ae e8             	lfence 
    3a15:	e8 e6 c4 00 00       	call   ff00 <memcpy_s>
    3a1a:	89 c2                	mov    %eax,%edx
    3a1c:	b8 01 00 00 00       	mov    $0x1,%eax
    3a21:	85 d2                	test   %edx,%edx
    3a23:	75 bb                	jne    39e0 <sgx_ecall_type_char+0x30>
    3a25:	0f be 7c 24 07       	movsbl 0x7(%rsp),%edi
    3a2a:	e8 31 3c 00 00       	call   7660 <ecall_type_char>
    3a2f:	31 c0                	xor    %eax,%eax
    3a31:	eb ad                	jmp    39e0 <sgx_ecall_type_char+0x30>
    3a33:	e8 88 bf 00 00       	call   f9c0 <__stack_chk_fail>
    3a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3a3f:	00 

0000000000003a40 <sgx_process_input>:
    3a40:	41 55                	push   %r13
    3a42:	41 54                	push   %r12
    3a44:	55                   	push   %rbp
    3a45:	53                   	push   %rbx
    3a46:	48 83 ec 28          	sub    $0x28,%rsp
    3a4a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3a51:	00 00 
    3a53:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3a58:	31 c0                	xor    %eax,%eax
    3a5a:	48 85 ff             	test   %rdi,%rdi
    3a5d:	74 11                	je     3a70 <sgx_process_input+0x30>
    3a5f:	be 10 00 00 00       	mov    $0x10,%esi
    3a64:	48 89 fb             	mov    %rdi,%rbx
    3a67:	e8 34 53 00 00       	call   8da0 <sgx_is_outside_enclave>
    3a6c:	85 c0                	test   %eax,%eax
    3a6e:	75 28                	jne    3a98 <sgx_process_input+0x58>
    3a70:	b8 02 00 00 00       	mov    $0x2,%eax
    3a75:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    3a7a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3a81:	00 00 
    3a83:	0f 85 db 00 00 00    	jne    3b64 <sgx_process_input+0x124>
    3a89:	48 83 c4 28          	add    $0x28,%rsp
    3a8d:	5b                   	pop    %rbx
    3a8e:	5d                   	pop    %rbp
    3a8f:	41 5c                	pop    %r12
    3a91:	41 5d                	pop    %r13
    3a93:	c3                   	ret    
    3a94:	0f 1f 40 00          	nopl   0x0(%rax)
    3a98:	48 89 da             	mov    %rbx,%rdx
    3a9b:	48 89 e7             	mov    %rsp,%rdi
    3a9e:	b9 10 00 00 00       	mov    $0x10,%ecx
    3aa3:	be 10 00 00 00       	mov    $0x10,%esi
    3aa8:	0f ae e8             	lfence 
    3aab:	e8 50 c4 00 00       	call   ff00 <memcpy_s>
    3ab0:	89 c2                	mov    %eax,%edx
    3ab2:	b8 01 00 00 00       	mov    $0x1,%eax
    3ab7:	85 d2                	test   %edx,%edx
    3ab9:	75 ba                	jne    3a75 <sgx_process_input+0x35>
    3abb:	4c 8b 24 24          	mov    (%rsp),%r12
    3abf:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
    3ac4:	4d 85 e4             	test   %r12,%r12
    3ac7:	0f 84 83 00 00 00    	je     3b50 <sgx_process_input+0x110>
    3acd:	48 89 ee             	mov    %rbp,%rsi
    3ad0:	4c 89 e7             	mov    %r12,%rdi
    3ad3:	e8 c8 52 00 00       	call   8da0 <sgx_is_outside_enclave>
    3ad8:	89 c2                	mov    %eax,%edx
    3ada:	b8 02 00 00 00       	mov    $0x2,%eax
    3adf:	85 d2                	test   %edx,%edx
    3ae1:	74 92                	je     3a75 <sgx_process_input+0x35>
    3ae3:	48 85 ed             	test   %rbp,%rbp
    3ae6:	0f ae e8             	lfence 
    3ae9:	74 68                	je     3b53 <sgx_process_input+0x113>
    3aeb:	48 89 ef             	mov    %rbp,%rdi
    3aee:	e8 7d 8a 00 00       	call   c570 <dlmalloc>
    3af3:	49 89 c5             	mov    %rax,%r13
    3af6:	b8 03 00 00 00       	mov    $0x3,%eax
    3afb:	4d 85 ed             	test   %r13,%r13
    3afe:	0f 84 71 ff ff ff    	je     3a75 <sgx_process_input+0x35>
    3b04:	48 89 e9             	mov    %rbp,%rcx
    3b07:	4c 89 e2             	mov    %r12,%rdx
    3b0a:	48 89 ee             	mov    %rbp,%rsi
    3b0d:	4c 89 ef             	mov    %r13,%rdi
    3b10:	bb 01 00 00 00       	mov    $0x1,%ebx
    3b15:	e8 e6 c3 00 00       	call   ff00 <memcpy_s>
    3b1a:	85 c0                	test   %eax,%eax
    3b1c:	75 23                	jne    3b41 <sgx_process_input+0x101>
    3b1e:	48 89 ee             	mov    %rbp,%rsi
    3b21:	4c 89 ef             	mov    %r13,%rdi
    3b24:	31 db                	xor    %ebx,%ebx
    3b26:	e8 c5 36 00 00       	call   71f0 <process_input>
    3b2b:	48 89 e9             	mov    %rbp,%rcx
    3b2e:	4c 89 ea             	mov    %r13,%rdx
    3b31:	48 89 ee             	mov    %rbp,%rsi
    3b34:	4c 89 e7             	mov    %r12,%rdi
    3b37:	e8 44 c4 00 00       	call   ff80 <memcpy_verw_s>
    3b3c:	85 c0                	test   %eax,%eax
    3b3e:	0f 95 c3             	setne  %bl
    3b41:	4c 89 ef             	mov    %r13,%rdi
    3b44:	e8 97 a4 00 00       	call   dfe0 <dlfree>
    3b49:	89 d8                	mov    %ebx,%eax
    3b4b:	e9 25 ff ff ff       	jmp    3a75 <sgx_process_input+0x35>
    3b50:	0f ae e8             	lfence 
    3b53:	48 89 ee             	mov    %rbp,%rsi
    3b56:	31 ff                	xor    %edi,%edi
    3b58:	e8 93 36 00 00       	call   71f0 <process_input>
    3b5d:	31 c0                	xor    %eax,%eax
    3b5f:	e9 11 ff ff ff       	jmp    3a75 <sgx_process_input+0x35>
    3b64:	e8 57 be 00 00       	call   f9c0 <__stack_chk_fail>
    3b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003b70 <ocall_print_string>:
    3b70:	41 54                	push   %r12
    3b72:	55                   	push   %rbp
    3b73:	53                   	push   %rbx
    3b74:	48 83 ec 10          	sub    $0x10,%rsp
    3b78:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3b7f:	00 00 
    3b81:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3b86:	31 c0                	xor    %eax,%eax
    3b88:	48 85 ff             	test   %rdi,%rdi
    3b8b:	0f 84 a7 00 00 00    	je     3c38 <ocall_print_string+0xc8>
    3b91:	48 89 fb             	mov    %rdi,%rbx
    3b94:	e8 e7 bc 00 00       	call   f880 <strlen>
    3b99:	4c 8d 60 01          	lea    0x1(%rax),%r12
    3b9d:	48 89 df             	mov    %rbx,%rdi
    3ba0:	48 89 c5             	mov    %rax,%rbp
    3ba3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3baa:	00 
    3bab:	4c 89 e6             	mov    %r12,%rsi
    3bae:	e8 8d 51 00 00       	call   8d40 <sgx_is_within_enclave>
    3bb3:	85 c0                	test   %eax,%eax
    3bb5:	ba 02 00 00 00       	mov    $0x2,%edx
    3bba:	75 24                	jne    3be0 <ocall_print_string+0x70>
    3bbc:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3bc1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3bc8:	00 00 
    3bca:	89 d0                	mov    %edx,%eax
    3bcc:	0f 85 c6 00 00 00    	jne    3c98 <ocall_print_string+0x128>
    3bd2:	48 83 c4 10          	add    $0x10,%rsp
    3bd6:	5b                   	pop    %rbx
    3bd7:	5d                   	pop    %rbp
    3bd8:	41 5c                	pop    %r12
    3bda:	c3                   	ret    
    3bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3be0:	48 8d 7d 09          	lea    0x9(%rbp),%rdi
    3be4:	49 39 fc             	cmp    %rdi,%r12
    3be7:	77 d3                	ja     3bbc <ocall_print_string+0x4c>
    3be9:	e8 02 52 00 00       	call   8df0 <sgx_ocalloc>
    3bee:	48 85 c0             	test   %rax,%rax
    3bf1:	48 89 c5             	mov    %rax,%rbp
    3bf4:	74 5c                	je     3c52 <ocall_print_string+0xe2>
    3bf6:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3bfa:	48 89 e2             	mov    %rsp,%rdx
    3bfd:	b9 08 00 00 00       	mov    $0x8,%ecx
    3c02:	be 08 00 00 00       	mov    $0x8,%esi
    3c07:	48 89 ef             	mov    %rbp,%rdi
    3c0a:	48 89 04 24          	mov    %rax,(%rsp)
    3c0e:	e8 6d c3 00 00       	call   ff80 <memcpy_verw_s>
    3c13:	85 c0                	test   %eax,%eax
    3c15:	75 43                	jne    3c5a <ocall_print_string+0xea>
    3c17:	48 8b 3c 24          	mov    (%rsp),%rdi
    3c1b:	4c 89 e1             	mov    %r12,%rcx
    3c1e:	48 89 da             	mov    %rbx,%rdx
    3c21:	4c 89 e6             	mov    %r12,%rsi
    3c24:	e8 57 c3 00 00       	call   ff80 <memcpy_verw_s>
    3c29:	85 c0                	test   %eax,%eax
    3c2b:	75 2d                	jne    3c5a <ocall_print_string+0xea>
    3c2d:	4c 01 24 24          	add    %r12,(%rsp)
    3c31:	eb 4d                	jmp    3c80 <ocall_print_string+0x110>
    3c33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3c38:	bf 08 00 00 00       	mov    $0x8,%edi
    3c3d:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3c44:	00 
    3c45:	e8 a6 51 00 00       	call   8df0 <sgx_ocalloc>
    3c4a:	48 85 c0             	test   %rax,%rax
    3c4d:	48 89 c5             	mov    %rax,%rbp
    3c50:	75 1e                	jne    3c70 <ocall_print_string+0x100>
    3c52:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3c59:	00 
    3c5a:	e8 81 52 00 00       	call   8ee0 <sgx_ocfree>
    3c5f:	ba 01 00 00 00       	mov    $0x1,%edx
    3c64:	e9 53 ff ff ff       	jmp    3bbc <ocall_print_string+0x4c>
    3c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c70:	48 8d 40 08          	lea    0x8(%rax),%rax
    3c74:	48 89 04 24          	mov    %rax,(%rsp)
    3c78:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    3c7f:	00 
    3c80:	48 89 ee             	mov    %rbp,%rsi
    3c83:	31 ff                	xor    %edi,%edi
    3c85:	e8 d6 69 00 00       	call   a660 <sgx_ocall>
    3c8a:	89 c3                	mov    %eax,%ebx
    3c8c:	e8 4f 52 00 00       	call   8ee0 <sgx_ocfree>
    3c91:	89 da                	mov    %ebx,%edx
    3c93:	e9 24 ff ff ff       	jmp    3bbc <ocall_print_string+0x4c>
    3c98:	e8 23 bd 00 00       	call   f9c0 <__stack_chk_fail>
    3c9d:	0f 1f 00             	nopl   (%rax)

0000000000003ca0 <init_time>:
    3ca0:	31 f6                	xor    %esi,%esi
    3ca2:	bf 01 00 00 00       	mov    $0x1,%edi
    3ca7:	e9 b4 69 00 00       	jmp    a660 <sgx_ocall>
    3cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003cb0 <ocall_pointer_user_check>:
    3cb0:	53                   	push   %rbx
    3cb1:	48 83 ec 10          	sub    $0x10,%rsp
    3cb5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    3cba:	bf 08 00 00 00       	mov    $0x8,%edi
    3cbf:	e8 2c 51 00 00       	call   8df0 <sgx_ocalloc>
    3cc4:	48 85 c0             	test   %rax,%rax
    3cc7:	74 3f                	je     3d08 <ocall_pointer_user_check+0x58>
    3cc9:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3cce:	b9 08 00 00 00       	mov    $0x8,%ecx
    3cd3:	be 08 00 00 00       	mov    $0x8,%esi
    3cd8:	48 89 c7             	mov    %rax,%rdi
    3cdb:	48 89 c3             	mov    %rax,%rbx
    3cde:	e8 9d c2 00 00       	call   ff80 <memcpy_verw_s>
    3ce3:	85 c0                	test   %eax,%eax
    3ce5:	75 21                	jne    3d08 <ocall_pointer_user_check+0x58>
    3ce7:	48 89 de             	mov    %rbx,%rsi
    3cea:	bf 03 00 00 00       	mov    $0x3,%edi
    3cef:	e8 6c 69 00 00       	call   a660 <sgx_ocall>
    3cf4:	89 c3                	mov    %eax,%ebx
    3cf6:	e8 e5 51 00 00       	call   8ee0 <sgx_ocfree>
    3cfb:	48 83 c4 10          	add    $0x10,%rsp
    3cff:	89 d8                	mov    %ebx,%eax
    3d01:	5b                   	pop    %rbx
    3d02:	c3                   	ret    
    3d03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3d08:	e8 d3 51 00 00       	call   8ee0 <sgx_ocfree>
    3d0d:	48 83 c4 10          	add    $0x10,%rsp
    3d11:	b8 01 00 00 00       	mov    $0x1,%eax
    3d16:	5b                   	pop    %rbx
    3d17:	c3                   	ret    
    3d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3d1f:	00 

0000000000003d20 <ocall_pointer_in>:
    3d20:	55                   	push   %rbp
    3d21:	53                   	push   %rbx
    3d22:	48 83 ec 18          	sub    $0x18,%rsp
    3d26:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3d2d:	00 00 
    3d2f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3d34:	31 c0                	xor    %eax,%eax
    3d36:	48 85 ff             	test   %rdi,%rdi
    3d39:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3d40:	00 
    3d41:	0f 84 a9 00 00 00    	je     3df0 <ocall_pointer_in+0xd0>
    3d47:	be 04 00 00 00       	mov    $0x4,%esi
    3d4c:	48 89 fb             	mov    %rdi,%rbx
    3d4f:	e8 ec 4f 00 00       	call   8d40 <sgx_is_within_enclave>
    3d54:	85 c0                	test   %eax,%eax
    3d56:	ba 02 00 00 00       	mov    $0x2,%edx
    3d5b:	75 23                	jne    3d80 <ocall_pointer_in+0x60>
    3d5d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3d62:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3d69:	00 00 
    3d6b:	89 d0                	mov    %edx,%eax
    3d6d:	0f 85 bf 00 00 00    	jne    3e32 <ocall_pointer_in+0x112>
    3d73:	48 83 c4 18          	add    $0x18,%rsp
    3d77:	5b                   	pop    %rbx
    3d78:	5d                   	pop    %rbp
    3d79:	c3                   	ret    
    3d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3d80:	bf 0c 00 00 00       	mov    $0xc,%edi
    3d85:	e8 66 50 00 00       	call   8df0 <sgx_ocalloc>
    3d8a:	48 85 c0             	test   %rax,%rax
    3d8d:	48 89 c5             	mov    %rax,%rbp
    3d90:	74 70                	je     3e02 <ocall_pointer_in+0xe2>
    3d92:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3d96:	48 89 e2             	mov    %rsp,%rdx
    3d99:	b9 08 00 00 00       	mov    $0x8,%ecx
    3d9e:	be 08 00 00 00       	mov    $0x8,%esi
    3da3:	48 89 ef             	mov    %rbp,%rdi
    3da6:	48 89 04 24          	mov    %rax,(%rsp)
    3daa:	e8 d1 c1 00 00       	call   ff80 <memcpy_verw_s>
    3daf:	85 c0                	test   %eax,%eax
    3db1:	75 57                	jne    3e0a <ocall_pointer_in+0xea>
    3db3:	48 8b 3c 24          	mov    (%rsp),%rdi
    3db7:	b9 04 00 00 00       	mov    $0x4,%ecx
    3dbc:	48 89 da             	mov    %rbx,%rdx
    3dbf:	be 04 00 00 00       	mov    $0x4,%esi
    3dc4:	e8 b7 c1 00 00       	call   ff80 <memcpy_verw_s>
    3dc9:	85 c0                	test   %eax,%eax
    3dcb:	75 3d                	jne    3e0a <ocall_pointer_in+0xea>
    3dcd:	48 83 04 24 04       	addq   $0x4,(%rsp)
    3dd2:	48 89 ee             	mov    %rbp,%rsi
    3dd5:	bf 04 00 00 00       	mov    $0x4,%edi
    3dda:	e8 81 68 00 00       	call   a660 <sgx_ocall>
    3ddf:	89 c3                	mov    %eax,%ebx
    3de1:	e8 fa 50 00 00       	call   8ee0 <sgx_ocfree>
    3de6:	89 da                	mov    %ebx,%edx
    3de8:	e9 70 ff ff ff       	jmp    3d5d <ocall_pointer_in+0x3d>
    3ded:	0f 1f 00             	nopl   (%rax)
    3df0:	bf 08 00 00 00       	mov    $0x8,%edi
    3df5:	e8 f6 4f 00 00       	call   8df0 <sgx_ocalloc>
    3dfa:	48 85 c0             	test   %rax,%rax
    3dfd:	48 89 c5             	mov    %rax,%rbp
    3e00:	75 1e                	jne    3e20 <ocall_pointer_in+0x100>
    3e02:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3e09:	00 
    3e0a:	e8 d1 50 00 00       	call   8ee0 <sgx_ocfree>
    3e0f:	ba 01 00 00 00       	mov    $0x1,%edx
    3e14:	e9 44 ff ff ff       	jmp    3d5d <ocall_pointer_in+0x3d>
    3e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3e20:	48 8d 45 08          	lea    0x8(%rbp),%rax
    3e24:	48 89 04 24          	mov    %rax,(%rsp)
    3e28:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    3e2f:	00 
    3e30:	eb a0                	jmp    3dd2 <ocall_pointer_in+0xb2>
    3e32:	e8 89 bb 00 00       	call   f9c0 <__stack_chk_fail>
    3e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3e3e:	00 00 

0000000000003e40 <ocall_pointer_out>:
    3e40:	41 54                	push   %r12
    3e42:	55                   	push   %rbp
    3e43:	53                   	push   %rbx
    3e44:	48 83 ec 10          	sub    $0x10,%rsp
    3e48:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3e4f:	00 00 
    3e51:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3e56:	31 c0                	xor    %eax,%eax
    3e58:	48 85 ff             	test   %rdi,%rdi
    3e5b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3e62:	00 
    3e63:	0f 84 c7 00 00 00    	je     3f30 <ocall_pointer_out+0xf0>
    3e69:	be 04 00 00 00       	mov    $0x4,%esi
    3e6e:	48 89 fd             	mov    %rdi,%rbp
    3e71:	e8 ca 4e 00 00       	call   8d40 <sgx_is_within_enclave>
    3e76:	85 c0                	test   %eax,%eax
    3e78:	ba 02 00 00 00       	mov    $0x2,%edx
    3e7d:	75 21                	jne    3ea0 <ocall_pointer_out+0x60>
    3e7f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3e84:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3e8b:	00 00 
    3e8d:	89 d0                	mov    %edx,%eax
    3e8f:	0f 85 f5 00 00 00    	jne    3f8a <ocall_pointer_out+0x14a>
    3e95:	48 83 c4 10          	add    $0x10,%rsp
    3e99:	5b                   	pop    %rbx
    3e9a:	5d                   	pop    %rbp
    3e9b:	41 5c                	pop    %r12
    3e9d:	c3                   	ret    
    3e9e:	66 90                	xchg   %ax,%ax
    3ea0:	bf 0c 00 00 00       	mov    $0xc,%edi
    3ea5:	e8 46 4f 00 00       	call   8df0 <sgx_ocalloc>
    3eaa:	48 85 c0             	test   %rax,%rax
    3ead:	48 89 c3             	mov    %rax,%rbx
    3eb0:	0f 84 89 00 00 00    	je     3f3f <ocall_pointer_out+0xff>
    3eb6:	48 8d 43 08          	lea    0x8(%rbx),%rax
    3eba:	48 89 e2             	mov    %rsp,%rdx
    3ebd:	b9 08 00 00 00       	mov    $0x8,%ecx
    3ec2:	be 08 00 00 00       	mov    $0x8,%esi
    3ec7:	48 89 df             	mov    %rbx,%rdi
    3eca:	48 89 04 24          	mov    %rax,(%rsp)
    3ece:	e8 ad c0 00 00       	call   ff80 <memcpy_verw_s>
    3ed3:	85 c0                	test   %eax,%eax
    3ed5:	75 70                	jne    3f47 <ocall_pointer_out+0x107>
    3ed7:	4c 8b 24 24          	mov    (%rsp),%r12
    3edb:	31 f6                	xor    %esi,%esi
    3edd:	ba 04 00 00 00       	mov    $0x4,%edx
    3ee2:	4c 89 e7             	mov    %r12,%rdi
    3ee5:	e8 16 b8 00 00       	call   f700 <memset_verw>
    3eea:	48 89 de             	mov    %rbx,%rsi
    3eed:	bf 05 00 00 00       	mov    $0x5,%edi
    3ef2:	48 83 04 24 04       	addq   $0x4,(%rsp)
    3ef7:	e8 64 67 00 00       	call   a660 <sgx_ocall>
    3efc:	85 c0                	test   %eax,%eax
    3efe:	89 c3                	mov    %eax,%ebx
    3f00:	75 19                	jne    3f1b <ocall_pointer_out+0xdb>
    3f02:	b9 04 00 00 00       	mov    $0x4,%ecx
    3f07:	4c 89 e2             	mov    %r12,%rdx
    3f0a:	be 04 00 00 00       	mov    $0x4,%esi
    3f0f:	48 89 ef             	mov    %rbp,%rdi
    3f12:	e8 e9 bf 00 00       	call   ff00 <memcpy_s>
    3f17:	85 c0                	test   %eax,%eax
    3f19:	75 2c                	jne    3f47 <ocall_pointer_out+0x107>
    3f1b:	e8 c0 4f 00 00       	call   8ee0 <sgx_ocfree>
    3f20:	89 da                	mov    %ebx,%edx
    3f22:	e9 58 ff ff ff       	jmp    3e7f <ocall_pointer_out+0x3f>
    3f27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3f2e:	00 00 
    3f30:	bf 08 00 00 00       	mov    $0x8,%edi
    3f35:	e8 b6 4e 00 00       	call   8df0 <sgx_ocalloc>
    3f3a:	48 85 c0             	test   %rax,%rax
    3f3d:	75 21                	jne    3f60 <ocall_pointer_out+0x120>
    3f3f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3f46:	00 
    3f47:	e8 94 4f 00 00       	call   8ee0 <sgx_ocfree>
    3f4c:	ba 01 00 00 00       	mov    $0x1,%edx
    3f51:	e9 29 ff ff ff       	jmp    3e7f <ocall_pointer_out+0x3f>
    3f56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3f5d:	00 00 00 
    3f60:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3f64:	48 89 c6             	mov    %rax,%rsi
    3f67:	bf 05 00 00 00       	mov    $0x5,%edi
    3f6c:	48 89 14 24          	mov    %rdx,(%rsp)
    3f70:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3f77:	e8 e4 66 00 00       	call   a660 <sgx_ocall>
    3f7c:	89 c3                	mov    %eax,%ebx
    3f7e:	e8 5d 4f 00 00       	call   8ee0 <sgx_ocfree>
    3f83:	89 da                	mov    %ebx,%edx
    3f85:	e9 f5 fe ff ff       	jmp    3e7f <ocall_pointer_out+0x3f>
    3f8a:	e8 31 ba 00 00       	call   f9c0 <__stack_chk_fail>
    3f8f:	90                   	nop

0000000000003f90 <ocall_pointer_in_out>:
    3f90:	41 54                	push   %r12
    3f92:	55                   	push   %rbp
    3f93:	53                   	push   %rbx
    3f94:	48 83 ec 10          	sub    $0x10,%rsp
    3f98:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3f9f:	00 00 
    3fa1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3fa6:	31 c0                	xor    %eax,%eax
    3fa8:	48 85 ff             	test   %rdi,%rdi
    3fab:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3fb2:	00 
    3fb3:	0f 84 cf 00 00 00    	je     4088 <ocall_pointer_in_out+0xf8>
    3fb9:	be 04 00 00 00       	mov    $0x4,%esi
    3fbe:	48 89 fb             	mov    %rdi,%rbx
    3fc1:	e8 7a 4d 00 00       	call   8d40 <sgx_is_within_enclave>
    3fc6:	85 c0                	test   %eax,%eax
    3fc8:	ba 02 00 00 00       	mov    $0x2,%edx
    3fcd:	75 21                	jne    3ff0 <ocall_pointer_in_out+0x60>
    3fcf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3fd4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3fdb:	00 00 
    3fdd:	89 d0                	mov    %edx,%eax
    3fdf:	0f 85 eb 00 00 00    	jne    40d0 <ocall_pointer_in_out+0x140>
    3fe5:	48 83 c4 10          	add    $0x10,%rsp
    3fe9:	5b                   	pop    %rbx
    3fea:	5d                   	pop    %rbp
    3feb:	41 5c                	pop    %r12
    3fed:	c3                   	ret    
    3fee:	66 90                	xchg   %ax,%ax
    3ff0:	bf 0c 00 00 00       	mov    $0xc,%edi
    3ff5:	e8 f6 4d 00 00       	call   8df0 <sgx_ocalloc>
    3ffa:	48 85 c0             	test   %rax,%rax
    3ffd:	48 89 c5             	mov    %rax,%rbp
    4000:	0f 84 91 00 00 00    	je     4097 <ocall_pointer_in_out+0x107>
    4006:	48 8d 45 08          	lea    0x8(%rbp),%rax
    400a:	48 89 e2             	mov    %rsp,%rdx
    400d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4012:	be 08 00 00 00       	mov    $0x8,%esi
    4017:	48 89 ef             	mov    %rbp,%rdi
    401a:	48 89 04 24          	mov    %rax,(%rsp)
    401e:	e8 5d bf 00 00       	call   ff80 <memcpy_verw_s>
    4023:	85 c0                	test   %eax,%eax
    4025:	75 78                	jne    409f <ocall_pointer_in_out+0x10f>
    4027:	4c 8b 24 24          	mov    (%rsp),%r12
    402b:	b9 04 00 00 00       	mov    $0x4,%ecx
    4030:	48 89 da             	mov    %rbx,%rdx
    4033:	be 04 00 00 00       	mov    $0x4,%esi
    4038:	4c 89 e7             	mov    %r12,%rdi
    403b:	e8 40 bf 00 00       	call   ff80 <memcpy_verw_s>
    4040:	85 c0                	test   %eax,%eax
    4042:	75 5b                	jne    409f <ocall_pointer_in_out+0x10f>
    4044:	48 89 ee             	mov    %rbp,%rsi
    4047:	bf 06 00 00 00       	mov    $0x6,%edi
    404c:	48 83 04 24 04       	addq   $0x4,(%rsp)
    4051:	e8 0a 66 00 00       	call   a660 <sgx_ocall>
    4056:	85 c0                	test   %eax,%eax
    4058:	89 c5                	mov    %eax,%ebp
    405a:	75 19                	jne    4075 <ocall_pointer_in_out+0xe5>
    405c:	b9 04 00 00 00       	mov    $0x4,%ecx
    4061:	4c 89 e2             	mov    %r12,%rdx
    4064:	be 04 00 00 00       	mov    $0x4,%esi
    4069:	48 89 df             	mov    %rbx,%rdi
    406c:	e8 8f be 00 00       	call   ff00 <memcpy_s>
    4071:	85 c0                	test   %eax,%eax
    4073:	75 2a                	jne    409f <ocall_pointer_in_out+0x10f>
    4075:	e8 66 4e 00 00       	call   8ee0 <sgx_ocfree>
    407a:	89 ea                	mov    %ebp,%edx
    407c:	e9 4e ff ff ff       	jmp    3fcf <ocall_pointer_in_out+0x3f>
    4081:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4088:	bf 08 00 00 00       	mov    $0x8,%edi
    408d:	e8 5e 4d 00 00       	call   8df0 <sgx_ocalloc>
    4092:	48 85 c0             	test   %rax,%rax
    4095:	75 19                	jne    40b0 <ocall_pointer_in_out+0x120>
    4097:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    409e:	00 
    409f:	e8 3c 4e 00 00       	call   8ee0 <sgx_ocfree>
    40a4:	ba 01 00 00 00       	mov    $0x1,%edx
    40a9:	e9 21 ff ff ff       	jmp    3fcf <ocall_pointer_in_out+0x3f>
    40ae:	66 90                	xchg   %ax,%ax
    40b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    40b4:	48 89 c6             	mov    %rax,%rsi
    40b7:	bf 06 00 00 00       	mov    $0x6,%edi
    40bc:	48 89 14 24          	mov    %rdx,(%rsp)
    40c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    40c7:	e8 94 65 00 00       	call   a660 <sgx_ocall>
    40cc:	89 c5                	mov    %eax,%ebp
    40ce:	eb a5                	jmp    4075 <ocall_pointer_in_out+0xe5>
    40d0:	e8 eb b8 00 00       	call   f9c0 <__stack_chk_fail>
    40d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    40dc:	00 00 00 
    40df:	90                   	nop

00000000000040e0 <memccpy>:
    40e0:	41 57                	push   %r15
    40e2:	41 56                	push   %r14
    40e4:	41 55                	push   %r13
    40e6:	41 54                	push   %r12
    40e8:	49 89 fd             	mov    %rdi,%r13
    40eb:	55                   	push   %rbp
    40ec:	53                   	push   %rbx
    40ed:	48 89 f5             	mov    %rsi,%rbp
    40f0:	49 89 d4             	mov    %rdx,%r12
    40f3:	4c 89 c3             	mov    %r8,%rbx
    40f6:	48 83 ec 38          	sub    $0x38,%rsp
    40fa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4101:	00 00 
    4103:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4108:	31 c0                	xor    %eax,%eax
    410a:	48 85 f6             	test   %rsi,%rsi
    410d:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    4111:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    4116:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    411d:	00 00 
    411f:	0f 84 b3 01 00 00    	je     42d8 <memccpy+0x1f8>
    4125:	4c 89 c6             	mov    %r8,%rsi
    4128:	48 89 ef             	mov    %rbp,%rdi
    412b:	e8 10 4c 00 00       	call   8d40 <sgx_is_within_enclave>
    4130:	85 c0                	test   %eax,%eax
    4132:	75 2c                	jne    4160 <memccpy+0x80>
    4134:	b8 02 00 00 00       	mov    $0x2,%eax
    4139:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    413e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4145:	00 00 
    4147:	0f 85 2d 02 00 00    	jne    437a <memccpy+0x29a>
    414d:	48 83 c4 38          	add    $0x38,%rsp
    4151:	5b                   	pop    %rbx
    4152:	5d                   	pop    %rbp
    4153:	41 5c                	pop    %r12
    4155:	41 5d                	pop    %r13
    4157:	41 5e                	pop    %r14
    4159:	41 5f                	pop    %r15
    415b:	c3                   	ret    
    415c:	0f 1f 40 00          	nopl   0x0(%rax)
    4160:	4d 85 e4             	test   %r12,%r12
    4163:	0f 85 af 01 00 00    	jne    4318 <memccpy+0x238>
    4169:	4c 8d 73 28          	lea    0x28(%rbx),%r14
    416d:	4c 39 f3             	cmp    %r14,%rbx
    4170:	77 c2                	ja     4134 <memccpy+0x54>
    4172:	4c 89 f7             	mov    %r14,%rdi
    4175:	e8 76 4c 00 00       	call   8df0 <sgx_ocalloc>
    417a:	48 85 c0             	test   %rax,%rax
    417d:	49 89 c7             	mov    %rax,%r15
    4180:	0f 84 b4 01 00 00    	je     433a <memccpy+0x25a>
    4186:	48 8d 40 28          	lea    0x28(%rax),%rax
    418a:	49 83 ee 28          	sub    $0x28,%r14
    418e:	48 85 ed             	test   %rbp,%rbp
    4191:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4196:	0f 84 bb 01 00 00    	je     4357 <memccpy+0x277>
    419c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    41a1:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    41a5:	b9 08 00 00 00       	mov    $0x8,%ecx
    41aa:	be 08 00 00 00       	mov    $0x8,%esi
    41af:	e8 cc bd 00 00       	call   ff80 <memcpy_verw_s>
    41b4:	85 c0                	test   %eax,%eax
    41b6:	0f 85 8c 01 00 00    	jne    4348 <memccpy+0x268>
    41bc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    41c1:	48 89 d9             	mov    %rbx,%rcx
    41c4:	48 89 ea             	mov    %rbp,%rdx
    41c7:	4c 89 f6             	mov    %r14,%rsi
    41ca:	48 89 c7             	mov    %rax,%rdi
    41cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    41d2:	e8 a9 bd 00 00       	call   ff80 <memcpy_verw_s>
    41d7:	85 c0                	test   %eax,%eax
    41d9:	0f 85 69 01 00 00    	jne    4348 <memccpy+0x268>
    41df:	48 01 5c 24 20       	add    %rbx,0x20(%rsp)
    41e4:	49 29 de             	sub    %rbx,%r14
    41e7:	4d 85 e4             	test   %r12,%r12
    41ea:	0f 84 7d 01 00 00    	je     436d <memccpy+0x28d>
    41f0:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    41f5:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    41f9:	b9 08 00 00 00       	mov    $0x8,%ecx
    41fe:	be 08 00 00 00       	mov    $0x8,%esi
    4203:	e8 78 bd 00 00       	call   ff80 <memcpy_verw_s>
    4208:	85 c0                	test   %eax,%eax
    420a:	0f 85 38 01 00 00    	jne    4348 <memccpy+0x268>
    4210:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    4215:	48 89 d9             	mov    %rbx,%rcx
    4218:	4c 89 e2             	mov    %r12,%rdx
    421b:	4c 89 f6             	mov    %r14,%rsi
    421e:	e8 5d bd 00 00       	call   ff80 <memcpy_verw_s>
    4223:	85 c0                	test   %eax,%eax
    4225:	0f 85 1d 01 00 00    	jne    4348 <memccpy+0x268>
    422b:	48 01 5c 24 20       	add    %rbx,0x20(%rsp)
    4230:	48 8d 54 24 1c       	lea    0x1c(%rsp),%rdx
    4235:	49 8d 7f 18          	lea    0x18(%r15),%rdi
    4239:	b9 04 00 00 00       	mov    $0x4,%ecx
    423e:	be 04 00 00 00       	mov    $0x4,%esi
    4243:	e8 38 bd 00 00       	call   ff80 <memcpy_verw_s>
    4248:	85 c0                	test   %eax,%eax
    424a:	0f 85 f8 00 00 00    	jne    4348 <memccpy+0x268>
    4250:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    4255:	49 8d 7f 20          	lea    0x20(%r15),%rdi
    4259:	b9 08 00 00 00       	mov    $0x8,%ecx
    425e:	be 08 00 00 00       	mov    $0x8,%esi
    4263:	e8 18 bd 00 00       	call   ff80 <memcpy_verw_s>
    4268:	85 c0                	test   %eax,%eax
    426a:	0f 85 d8 00 00 00    	jne    4348 <memccpy+0x268>
    4270:	4c 89 fe             	mov    %r15,%rsi
    4273:	bf 07 00 00 00       	mov    $0x7,%edi
    4278:	e8 e3 63 00 00       	call   a660 <sgx_ocall>
    427d:	85 c0                	test   %eax,%eax
    427f:	41 89 c4             	mov    %eax,%r12d
    4282:	75 42                	jne    42c6 <memccpy+0x1e6>
    4284:	4d 85 ed             	test   %r13,%r13
    4287:	74 1d                	je     42a6 <memccpy+0x1c6>
    4289:	b9 08 00 00 00       	mov    $0x8,%ecx
    428e:	4c 89 fa             	mov    %r15,%rdx
    4291:	be 08 00 00 00       	mov    $0x8,%esi
    4296:	4c 89 ef             	mov    %r13,%rdi
    4299:	e8 62 bc 00 00       	call   ff00 <memcpy_s>
    429e:	85 c0                	test   %eax,%eax
    42a0:	0f 85 a2 00 00 00    	jne    4348 <memccpy+0x268>
    42a6:	48 85 ed             	test   %rbp,%rbp
    42a9:	74 1b                	je     42c6 <memccpy+0x1e6>
    42ab:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    42b0:	48 89 d9             	mov    %rbx,%rcx
    42b3:	48 89 de             	mov    %rbx,%rsi
    42b6:	48 89 ef             	mov    %rbp,%rdi
    42b9:	e8 42 bc 00 00       	call   ff00 <memcpy_s>
    42be:	85 c0                	test   %eax,%eax
    42c0:	0f 85 82 00 00 00    	jne    4348 <memccpy+0x268>
    42c6:	e8 15 4c 00 00       	call   8ee0 <sgx_ocfree>
    42cb:	44 89 e0             	mov    %r12d,%eax
    42ce:	e9 66 fe ff ff       	jmp    4139 <memccpy+0x59>
    42d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    42d8:	48 85 d2             	test   %rdx,%rdx
    42db:	41 be 28 00 00 00    	mov    $0x28,%r14d
    42e1:	0f 84 8b fe ff ff    	je     4172 <memccpy+0x92>
    42e7:	4c 89 c6             	mov    %r8,%rsi
    42ea:	48 89 d7             	mov    %rdx,%rdi
    42ed:	e8 4e 4a 00 00       	call   8d40 <sgx_is_within_enclave>
    42f2:	85 c0                	test   %eax,%eax
    42f4:	0f 84 3a fe ff ff    	je     4134 <memccpy+0x54>
    42fa:	bf 28 00 00 00       	mov    $0x28,%edi
    42ff:	90                   	nop
    4300:	48 01 df             	add    %rbx,%rdi
    4303:	49 89 fe             	mov    %rdi,%r14
    4306:	0f 82 28 fe ff ff    	jb     4134 <memccpy+0x54>
    430c:	e9 61 fe ff ff       	jmp    4172 <memccpy+0x92>
    4311:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4318:	48 89 de             	mov    %rbx,%rsi
    431b:	4c 89 e7             	mov    %r12,%rdi
    431e:	e8 1d 4a 00 00       	call   8d40 <sgx_is_within_enclave>
    4323:	85 c0                	test   %eax,%eax
    4325:	0f 84 09 fe ff ff    	je     4134 <memccpy+0x54>
    432b:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    432f:	48 39 fb             	cmp    %rdi,%rbx
    4332:	0f 87 fc fd ff ff    	ja     4134 <memccpy+0x54>
    4338:	eb c6                	jmp    4300 <memccpy+0x220>
    433a:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    4341:	00 00 
    4343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4348:	e8 93 4b 00 00       	call   8ee0 <sgx_ocfree>
    434d:	b8 01 00 00 00       	mov    $0x1,%eax
    4352:	e9 e2 fd ff ff       	jmp    4139 <memccpy+0x59>
    4357:	49 c7 47 08 00 00 00 	movq   $0x0,0x8(%r15)
    435e:	00 
    435f:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    4366:	00 00 
    4368:	e9 7a fe ff ff       	jmp    41e7 <memccpy+0x107>
    436d:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
    4374:	00 
    4375:	e9 b6 fe ff ff       	jmp    4230 <memccpy+0x150>
    437a:	e8 41 b6 00 00       	call   f9c0 <__stack_chk_fail>
    437f:	90                   	nop

0000000000004380 <ocall_function_allow>:
    4380:	31 f6                	xor    %esi,%esi
    4382:	bf 08 00 00 00       	mov    $0x8,%edi
    4387:	e9 d4 62 00 00       	jmp    a660 <sgx_ocall>
    438c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004390 <sgx_oc_cpuidex>:
    4390:	41 54                	push   %r12
    4392:	55                   	push   %rbp
    4393:	53                   	push   %rbx
    4394:	48 89 fb             	mov    %rdi,%rbx
    4397:	48 83 ec 20          	sub    $0x20,%rsp
    439b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    43a2:	00 00 
    43a4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    43a9:	31 c0                	xor    %eax,%eax
    43ab:	48 85 ff             	test   %rdi,%rdi
    43ae:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    43b2:	89 54 24 08          	mov    %edx,0x8(%rsp)
    43b6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    43bd:	00 00 
    43bf:	74 5f                	je     4420 <sgx_oc_cpuidex+0x90>
    43c1:	be 10 00 00 00       	mov    $0x10,%esi
    43c6:	e8 75 49 00 00       	call   8d40 <sgx_is_within_enclave>
    43cb:	85 c0                	test   %eax,%eax
    43cd:	ba 02 00 00 00       	mov    $0x2,%edx
    43d2:	75 24                	jne    43f8 <sgx_oc_cpuidex+0x68>
    43d4:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    43d9:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    43e0:	00 00 
    43e2:	89 d0                	mov    %edx,%eax
    43e4:	0f 85 3f 01 00 00    	jne    4529 <sgx_oc_cpuidex+0x199>
    43ea:	48 83 c4 20          	add    $0x20,%rsp
    43ee:	5b                   	pop    %rbx
    43ef:	5d                   	pop    %rbp
    43f0:	41 5c                	pop    %r12
    43f2:	c3                   	ret    
    43f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    43f8:	bf 20 00 00 00       	mov    $0x20,%edi
    43fd:	e8 ee 49 00 00       	call   8df0 <sgx_ocalloc>
    4402:	48 85 c0             	test   %rax,%rax
    4405:	48 89 c5             	mov    %rax,%rbp
    4408:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    440d:	75 39                	jne    4448 <sgx_oc_cpuidex+0xb8>
    440f:	e8 cc 4a 00 00       	call   8ee0 <sgx_ocfree>
    4414:	ba 01 00 00 00       	mov    $0x1,%edx
    4419:	eb b9                	jmp    43d4 <sgx_oc_cpuidex+0x44>
    441b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4420:	bf 10 00 00 00       	mov    $0x10,%edi
    4425:	e8 c6 49 00 00       	call   8df0 <sgx_ocalloc>
    442a:	48 85 c0             	test   %rax,%rax
    442d:	48 89 c5             	mov    %rax,%rbp
    4430:	0f 85 da 00 00 00    	jne    4510 <sgx_oc_cpuidex+0x180>
    4436:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    443d:	00 00 
    443f:	eb ce                	jmp    440f <sgx_oc_cpuidex+0x7f>
    4441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4448:	48 8d 40 10          	lea    0x10(%rax),%rax
    444c:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    4451:	b9 08 00 00 00       	mov    $0x8,%ecx
    4456:	be 08 00 00 00       	mov    $0x8,%esi
    445b:	48 89 ef             	mov    %rbp,%rdi
    445e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4463:	e8 18 bb 00 00       	call   ff80 <memcpy_verw_s>
    4468:	85 c0                	test   %eax,%eax
    446a:	75 a3                	jne    440f <sgx_oc_cpuidex+0x7f>
    446c:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    4471:	ba 10 00 00 00       	mov    $0x10,%edx
    4476:	31 f6                	xor    %esi,%esi
    4478:	4c 89 e7             	mov    %r12,%rdi
    447b:	e8 80 b2 00 00       	call   f700 <memset_verw>
    4480:	48 83 44 24 10 10    	addq   $0x10,0x10(%rsp)
    4486:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    448b:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    448f:	b9 04 00 00 00       	mov    $0x4,%ecx
    4494:	be 04 00 00 00       	mov    $0x4,%esi
    4499:	e8 e2 ba 00 00       	call   ff80 <memcpy_verw_s>
    449e:	85 c0                	test   %eax,%eax
    44a0:	0f 85 69 ff ff ff    	jne    440f <sgx_oc_cpuidex+0x7f>
    44a6:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    44ab:	48 8d 7d 0c          	lea    0xc(%rbp),%rdi
    44af:	b9 04 00 00 00       	mov    $0x4,%ecx
    44b4:	be 04 00 00 00       	mov    $0x4,%esi
    44b9:	e8 c2 ba 00 00       	call   ff80 <memcpy_verw_s>
    44be:	85 c0                	test   %eax,%eax
    44c0:	0f 85 49 ff ff ff    	jne    440f <sgx_oc_cpuidex+0x7f>
    44c6:	48 89 ee             	mov    %rbp,%rsi
    44c9:	bf 09 00 00 00       	mov    $0x9,%edi
    44ce:	e8 8d 61 00 00       	call   a660 <sgx_ocall>
    44d3:	85 c0                	test   %eax,%eax
    44d5:	89 c5                	mov    %eax,%ebp
    44d7:	75 22                	jne    44fb <sgx_oc_cpuidex+0x16b>
    44d9:	48 85 db             	test   %rbx,%rbx
    44dc:	74 1d                	je     44fb <sgx_oc_cpuidex+0x16b>
    44de:	b9 10 00 00 00       	mov    $0x10,%ecx
    44e3:	4c 89 e2             	mov    %r12,%rdx
    44e6:	be 10 00 00 00       	mov    $0x10,%esi
    44eb:	48 89 df             	mov    %rbx,%rdi
    44ee:	e8 0d ba 00 00       	call   ff00 <memcpy_s>
    44f3:	85 c0                	test   %eax,%eax
    44f5:	0f 85 14 ff ff ff    	jne    440f <sgx_oc_cpuidex+0x7f>
    44fb:	e8 e0 49 00 00       	call   8ee0 <sgx_ocfree>
    4500:	89 ea                	mov    %ebp,%edx
    4502:	e9 cd fe ff ff       	jmp    43d4 <sgx_oc_cpuidex+0x44>
    4507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    450e:	00 00 
    4510:	48 8d 40 10          	lea    0x10(%rax),%rax
    4514:	45 31 e4             	xor    %r12d,%r12d
    4517:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    451c:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    4523:	00 
    4524:	e9 5d ff ff ff       	jmp    4486 <sgx_oc_cpuidex+0xf6>
    4529:	e8 92 b4 00 00       	call   f9c0 <__stack_chk_fail>
    452e:	66 90                	xchg   %ax,%ax

0000000000004530 <sgx_thread_wait_untrusted_event_ocall>:
    4530:	41 54                	push   %r12
    4532:	55                   	push   %rbp
    4533:	49 89 fc             	mov    %rdi,%r12
    4536:	53                   	push   %rbx
    4537:	bf 10 00 00 00       	mov    $0x10,%edi
    453c:	48 83 ec 10          	sub    $0x10,%rsp
    4540:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    4545:	e8 a6 48 00 00       	call   8df0 <sgx_ocalloc>
    454a:	48 85 c0             	test   %rax,%rax
    454d:	74 61                	je     45b0 <sgx_thread_wait_untrusted_event_ocall+0x80>
    454f:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4554:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4558:	b9 08 00 00 00       	mov    $0x8,%ecx
    455d:	be 08 00 00 00       	mov    $0x8,%esi
    4562:	48 89 c3             	mov    %rax,%rbx
    4565:	e8 16 ba 00 00       	call   ff80 <memcpy_verw_s>
    456a:	85 c0                	test   %eax,%eax
    456c:	75 42                	jne    45b0 <sgx_thread_wait_untrusted_event_ocall+0x80>
    456e:	48 89 de             	mov    %rbx,%rsi
    4571:	bf 0a 00 00 00       	mov    $0xa,%edi
    4576:	e8 e5 60 00 00       	call   a660 <sgx_ocall>
    457b:	4d 85 e4             	test   %r12,%r12
    457e:	89 c5                	mov    %eax,%ebp
    4580:	74 1d                	je     459f <sgx_thread_wait_untrusted_event_ocall+0x6f>
    4582:	85 c0                	test   %eax,%eax
    4584:	75 19                	jne    459f <sgx_thread_wait_untrusted_event_ocall+0x6f>
    4586:	b9 04 00 00 00       	mov    $0x4,%ecx
    458b:	48 89 da             	mov    %rbx,%rdx
    458e:	be 04 00 00 00       	mov    $0x4,%esi
    4593:	4c 89 e7             	mov    %r12,%rdi
    4596:	e8 65 b9 00 00       	call   ff00 <memcpy_s>
    459b:	85 c0                	test   %eax,%eax
    459d:	75 11                	jne    45b0 <sgx_thread_wait_untrusted_event_ocall+0x80>
    459f:	e8 3c 49 00 00       	call   8ee0 <sgx_ocfree>
    45a4:	48 83 c4 10          	add    $0x10,%rsp
    45a8:	89 e8                	mov    %ebp,%eax
    45aa:	5b                   	pop    %rbx
    45ab:	5d                   	pop    %rbp
    45ac:	41 5c                	pop    %r12
    45ae:	c3                   	ret    
    45af:	90                   	nop
    45b0:	e8 2b 49 00 00       	call   8ee0 <sgx_ocfree>
    45b5:	48 83 c4 10          	add    $0x10,%rsp
    45b9:	b8 01 00 00 00       	mov    $0x1,%eax
    45be:	5b                   	pop    %rbx
    45bf:	5d                   	pop    %rbp
    45c0:	41 5c                	pop    %r12
    45c2:	c3                   	ret    
    45c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    45ca:	00 00 00 
    45cd:	0f 1f 00             	nopl   (%rax)

00000000000045d0 <sgx_thread_set_untrusted_event_ocall>:
    45d0:	41 54                	push   %r12
    45d2:	55                   	push   %rbp
    45d3:	49 89 fc             	mov    %rdi,%r12
    45d6:	53                   	push   %rbx
    45d7:	bf 10 00 00 00       	mov    $0x10,%edi
    45dc:	48 83 ec 10          	sub    $0x10,%rsp
    45e0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    45e5:	e8 06 48 00 00       	call   8df0 <sgx_ocalloc>
    45ea:	48 85 c0             	test   %rax,%rax
    45ed:	74 61                	je     4650 <sgx_thread_set_untrusted_event_ocall+0x80>
    45ef:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    45f4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    45f8:	b9 08 00 00 00       	mov    $0x8,%ecx
    45fd:	be 08 00 00 00       	mov    $0x8,%esi
    4602:	48 89 c3             	mov    %rax,%rbx
    4605:	e8 76 b9 00 00       	call   ff80 <memcpy_verw_s>
    460a:	85 c0                	test   %eax,%eax
    460c:	75 42                	jne    4650 <sgx_thread_set_untrusted_event_ocall+0x80>
    460e:	48 89 de             	mov    %rbx,%rsi
    4611:	bf 0b 00 00 00       	mov    $0xb,%edi
    4616:	e8 45 60 00 00       	call   a660 <sgx_ocall>
    461b:	4d 85 e4             	test   %r12,%r12
    461e:	89 c5                	mov    %eax,%ebp
    4620:	74 1d                	je     463f <sgx_thread_set_untrusted_event_ocall+0x6f>
    4622:	85 c0                	test   %eax,%eax
    4624:	75 19                	jne    463f <sgx_thread_set_untrusted_event_ocall+0x6f>
    4626:	b9 04 00 00 00       	mov    $0x4,%ecx
    462b:	48 89 da             	mov    %rbx,%rdx
    462e:	be 04 00 00 00       	mov    $0x4,%esi
    4633:	4c 89 e7             	mov    %r12,%rdi
    4636:	e8 c5 b8 00 00       	call   ff00 <memcpy_s>
    463b:	85 c0                	test   %eax,%eax
    463d:	75 11                	jne    4650 <sgx_thread_set_untrusted_event_ocall+0x80>
    463f:	e8 9c 48 00 00       	call   8ee0 <sgx_ocfree>
    4644:	48 83 c4 10          	add    $0x10,%rsp
    4648:	89 e8                	mov    %ebp,%eax
    464a:	5b                   	pop    %rbx
    464b:	5d                   	pop    %rbp
    464c:	41 5c                	pop    %r12
    464e:	c3                   	ret    
    464f:	90                   	nop
    4650:	e8 8b 48 00 00       	call   8ee0 <sgx_ocfree>
    4655:	48 83 c4 10          	add    $0x10,%rsp
    4659:	b8 01 00 00 00       	mov    $0x1,%eax
    465e:	5b                   	pop    %rbx
    465f:	5d                   	pop    %rbp
    4660:	41 5c                	pop    %r12
    4662:	c3                   	ret    
    4663:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    466a:	00 00 00 
    466d:	0f 1f 00             	nopl   (%rax)

0000000000004670 <sgx_thread_setwait_untrusted_events_ocall>:
    4670:	41 54                	push   %r12
    4672:	55                   	push   %rbp
    4673:	49 89 fc             	mov    %rdi,%r12
    4676:	53                   	push   %rbx
    4677:	bf 18 00 00 00       	mov    $0x18,%edi
    467c:	48 83 ec 10          	sub    $0x10,%rsp
    4680:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    4685:	48 89 14 24          	mov    %rdx,(%rsp)
    4689:	e8 62 47 00 00       	call   8df0 <sgx_ocalloc>
    468e:	48 85 c0             	test   %rax,%rax
    4691:	74 7d                	je     4710 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    4693:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    4698:	48 8d 78 08          	lea    0x8(%rax),%rdi
    469c:	b9 08 00 00 00       	mov    $0x8,%ecx
    46a1:	be 08 00 00 00       	mov    $0x8,%esi
    46a6:	48 89 c3             	mov    %rax,%rbx
    46a9:	e8 d2 b8 00 00       	call   ff80 <memcpy_verw_s>
    46ae:	85 c0                	test   %eax,%eax
    46b0:	75 5e                	jne    4710 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    46b2:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    46b6:	48 89 e2             	mov    %rsp,%rdx
    46b9:	b9 08 00 00 00       	mov    $0x8,%ecx
    46be:	be 08 00 00 00       	mov    $0x8,%esi
    46c3:	e8 b8 b8 00 00       	call   ff80 <memcpy_verw_s>
    46c8:	85 c0                	test   %eax,%eax
    46ca:	75 44                	jne    4710 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    46cc:	48 89 de             	mov    %rbx,%rsi
    46cf:	bf 0c 00 00 00       	mov    $0xc,%edi
    46d4:	e8 87 5f 00 00       	call   a660 <sgx_ocall>
    46d9:	4d 85 e4             	test   %r12,%r12
    46dc:	89 c5                	mov    %eax,%ebp
    46de:	74 1d                	je     46fd <sgx_thread_setwait_untrusted_events_ocall+0x8d>
    46e0:	85 c0                	test   %eax,%eax
    46e2:	75 19                	jne    46fd <sgx_thread_setwait_untrusted_events_ocall+0x8d>
    46e4:	b9 04 00 00 00       	mov    $0x4,%ecx
    46e9:	48 89 da             	mov    %rbx,%rdx
    46ec:	be 04 00 00 00       	mov    $0x4,%esi
    46f1:	4c 89 e7             	mov    %r12,%rdi
    46f4:	e8 07 b8 00 00       	call   ff00 <memcpy_s>
    46f9:	85 c0                	test   %eax,%eax
    46fb:	75 13                	jne    4710 <sgx_thread_setwait_untrusted_events_ocall+0xa0>
    46fd:	e8 de 47 00 00       	call   8ee0 <sgx_ocfree>
    4702:	48 83 c4 10          	add    $0x10,%rsp
    4706:	89 e8                	mov    %ebp,%eax
    4708:	5b                   	pop    %rbx
    4709:	5d                   	pop    %rbp
    470a:	41 5c                	pop    %r12
    470c:	c3                   	ret    
    470d:	0f 1f 00             	nopl   (%rax)
    4710:	e8 cb 47 00 00       	call   8ee0 <sgx_ocfree>
    4715:	48 83 c4 10          	add    $0x10,%rsp
    4719:	b8 01 00 00 00       	mov    $0x1,%eax
    471e:	5b                   	pop    %rbx
    471f:	5d                   	pop    %rbp
    4720:	41 5c                	pop    %r12
    4722:	c3                   	ret    
    4723:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    472a:	00 00 00 
    472d:	0f 1f 00             	nopl   (%rax)

0000000000004730 <_Z17write_block_sizesiR5Table>:
    4730:	41 57                	push   %r15
    4732:	41 56                	push   %r14
    4734:	41 55                	push   %r13
    4736:	41 54                	push   %r12
    4738:	55                   	push   %rbp
    4739:	53                   	push   %rbx
    473a:	48 83 ec 48          	sub    $0x48,%rsp
    473e:	85 ff                	test   %edi,%edi
    4740:	0f 8e 7a 04 00 00    	jle    4bc0 <_Z17write_block_sizesiR5Table+0x490>
    4746:	89 f8                	mov    %edi,%eax
    4748:	49 89 f7             	mov    %rsi,%r15
    474b:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    474f:	83 e8 01             	sub    $0x1,%eax
    4752:	31 db                	xor    %ebx,%ebx
    4754:	c7 44 24 18 00 00 00 	movl   $0x80000000,0x18(%rsp)
    475b:	80 
    475c:	89 44 24 38          	mov    %eax,0x38(%rsp)
    4760:	48 83 c0 01          	add    $0x1,%rax
    4764:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    476b:	00 
    476c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    4771:	e9 be 00 00 00       	jmp    4834 <_Z17write_block_sizesiR5Table+0x104>
    4776:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    477d:	00 00 00 
    4780:	41 83 fc 01          	cmp    $0x1,%r12d
    4784:	75 1a                	jne    47a0 <_Z17write_block_sizesiR5Table+0x70>
    4786:	8b 74 24 18          	mov    0x18(%rsp),%esi
    478a:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    478e:	b8 00 00 00 00       	mov    $0x0,%eax
    4793:	39 f5                	cmp    %esi,%ebp
    4795:	0f 44 c7             	cmove  %edi,%eax
    4798:	89 44 24 10          	mov    %eax,0x10(%rsp)
    479c:	0f 1f 40 00          	nopl   0x0(%rax)
    47a0:	45 85 ed             	test   %r13d,%r13d
    47a3:	78 06                	js     47ab <_Z17write_block_sizesiR5Table+0x7b>
    47a5:	45 39 6f 2c          	cmp    %r13d,0x2c(%r15)
    47a9:	7f 56                	jg     4801 <_Z17write_block_sizesiR5Table+0xd1>
    47ab:	48 8d 0d 36 da 01 00 	lea    0x1da36(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    47b2:	48 8d 15 41 db 01 00 	lea    0x1db41(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    47b9:	48 8d 3d 3b da 01 00 	lea    0x1da3b(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    47c0:	be 48 00 00 00       	mov    $0x48,%esi
    47c5:	44 89 5c 24 28       	mov    %r11d,0x28(%rsp)
    47ca:	89 44 24 24          	mov    %eax,0x24(%rsp)
    47ce:	44 89 4c 24 20       	mov    %r9d,0x20(%rsp)
    47d3:	44 89 44 24 1c       	mov    %r8d,0x1c(%rsp)
    47d8:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
    47dd:	e8 fe 71 00 00       	call   b9e0 <__assert>
    47e2:	49 8b 0f             	mov    (%r15),%rcx
    47e5:	44 8b 5c 24 28       	mov    0x28(%rsp),%r11d
    47ea:	8b 44 24 24          	mov    0x24(%rsp),%eax
    47ee:	44 8b 4c 24 20       	mov    0x20(%rsp),%r9d
    47f3:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
    47f8:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
    47fd:	4a 8d 14 31          	lea    (%rcx,%r14,1),%rdx
    4801:	48 83 c3 01          	add    $0x1,%rbx
    4805:	48 3b 5c 24 30       	cmp    0x30(%rsp),%rbx
    480a:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    480e:	44 89 62 04          	mov    %r12d,0x4(%rdx)
    4812:	89 6a 08             	mov    %ebp,0x8(%rdx)
    4815:	44 89 5a 0c          	mov    %r11d,0xc(%rdx)
    4819:	89 42 10             	mov    %eax,0x10(%rdx)
    481c:	89 3a                	mov    %edi,(%rdx)
    481e:	44 89 52 14          	mov    %r10d,0x14(%rdx)
    4822:	44 89 4a 18          	mov    %r9d,0x18(%rdx)
    4826:	44 89 42 1c          	mov    %r8d,0x1c(%rdx)
    482a:	89 6c 24 18          	mov    %ebp,0x18(%rsp)
    482e:	0f 84 84 00 00 00    	je     48b8 <_Z17write_block_sizesiR5Table+0x188>
    4834:	85 db                	test   %ebx,%ebx
    4836:	41 89 dd             	mov    %ebx,%r13d
    4839:	78 06                	js     4841 <_Z17write_block_sizesiR5Table+0x111>
    483b:	41 39 5f 2c          	cmp    %ebx,0x2c(%r15)
    483f:	7f 1f                	jg     4860 <_Z17write_block_sizesiR5Table+0x130>
    4841:	48 8d 0d a0 d9 01 00 	lea    0x1d9a0(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4848:	48 8d 15 b1 da 01 00 	lea    0x1dab1(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    484f:	48 8d 3d a5 d9 01 00 	lea    0x1d9a5(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4856:	be 3b 00 00 00       	mov    $0x3b,%esi
    485b:	e8 80 71 00 00       	call   b9e0 <__assert>
    4860:	49 8b 0f             	mov    (%r15),%rcx
    4863:	49 89 de             	mov    %rbx,%r14
    4866:	49 c1 e6 05          	shl    $0x5,%r14
    486a:	4a 8d 14 31          	lea    (%rcx,%r14,1),%rdx
    486e:	44 8b 62 04          	mov    0x4(%rdx),%r12d
    4872:	8b 02                	mov    (%rdx),%eax
    4874:	8b 6a 08             	mov    0x8(%rdx),%ebp
    4877:	44 8b 5a 0c          	mov    0xc(%rdx),%r11d
    487b:	44 8b 52 14          	mov    0x14(%rdx),%r10d
    487f:	44 8b 4a 18          	mov    0x18(%rdx),%r9d
    4883:	45 85 e4             	test   %r12d,%r12d
    4886:	89 44 24 08          	mov    %eax,0x8(%rsp)
    488a:	44 8b 42 1c          	mov    0x1c(%rdx),%r8d
    488e:	8b 42 10             	mov    0x10(%rdx),%eax
    4891:	0f 85 e9 fe ff ff    	jne    4780 <_Z17write_block_sizesiR5Table+0x50>
    4897:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    489b:	be 01 00 00 00       	mov    $0x1,%esi
    48a0:	83 c7 01             	add    $0x1,%edi
    48a3:	3b 6c 24 18          	cmp    0x18(%rsp),%ebp
    48a7:	0f 44 f7             	cmove  %edi,%esi
    48aa:	89 74 24 10          	mov    %esi,0x10(%rsp)
    48ae:	e9 ed fe ff ff       	jmp    47a0 <_Z17write_block_sizesiR5Table+0x70>
    48b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    48b8:	4c 63 5c 24 38       	movslq 0x38(%rsp),%r11
    48bd:	41 be 00 00 00 80    	mov    $0x80000000,%r14d
    48c3:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    48c8:	45 31 e4             	xor    %r12d,%r12d
    48cb:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
    48d2:	00 
    48d3:	45 89 f7             	mov    %r14d,%r15d
    48d6:	44 89 dd             	mov    %r11d,%ebp
    48d9:	49 c1 e3 05          	shl    $0x5,%r11
    48dd:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    48e2:	e9 bf 00 00 00       	jmp    49a6 <_Z17write_block_sizesiR5Table+0x276>
    48e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    48ee:	00 00 
    48f0:	41 83 fe 01          	cmp    $0x1,%r14d
    48f4:	75 1a                	jne    4910 <_Z17write_block_sizesiR5Table+0x1e0>
    48f6:	44 39 fb             	cmp    %r15d,%ebx
    48f9:	0f 84 e1 02 00 00    	je     4be0 <_Z17write_block_sizesiR5Table+0x4b0>
    48ff:	44 89 6c 24 18       	mov    %r13d,0x18(%rsp)
    4904:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    490a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4910:	39 f5                	cmp    %esi,%ebp
    4912:	7c 60                	jl     4974 <_Z17write_block_sizesiR5Table+0x244>
    4914:	48 8d 0d cd d8 01 00 	lea    0x1d8cd(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    491b:	48 8d 15 d8 d9 01 00 	lea    0x1d9d8(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    4922:	48 8d 3d d2 d8 01 00 	lea    0x1d8d2(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4929:	be 48 00 00 00       	mov    $0x48,%esi
    492e:	89 44 24 30          	mov    %eax,0x30(%rsp)
    4932:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
    4937:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
    493c:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
    4941:	44 89 5c 24 1c       	mov    %r11d,0x1c(%rsp)
    4946:	e8 95 70 00 00       	call   b9e0 <__assert>
    494b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4950:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
    4955:	44 8b 4c 24 24       	mov    0x24(%rsp),%r9d
    495a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    495f:	44 8b 5c 24 1c       	mov    0x1c(%rsp),%r11d
    4964:	48 8b 08             	mov    (%rax),%rcx
    4967:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    496c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4970:	8b 44 24 30          	mov    0x30(%rsp),%eax
    4974:	83 ed 01             	sub    $0x1,%ebp
    4977:	48 83 6c 24 08 20    	subq   $0x20,0x8(%rsp)
    497d:	44 89 1a             	mov    %r11d,(%rdx)
    4980:	83 fd ff             	cmp    $0xffffffff,%ebp
    4983:	44 89 72 04          	mov    %r14d,0x4(%rdx)
    4987:	89 5a 08             	mov    %ebx,0x8(%rdx)
    498a:	89 42 0c             	mov    %eax,0xc(%rdx)
    498d:	44 89 6a 10          	mov    %r13d,0x10(%rdx)
    4991:	41 89 df             	mov    %ebx,%r15d
    4994:	44 89 42 14          	mov    %r8d,0x14(%rdx)
    4998:	44 89 52 18          	mov    %r10d,0x18(%rdx)
    499c:	44 89 4a 1c          	mov    %r9d,0x1c(%rdx)
    49a0:	0f 84 8a 00 00 00    	je     4a30 <_Z17write_block_sizesiR5Table+0x300>
    49a6:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    49ab:	8b 73 2c             	mov    0x2c(%rbx),%esi
    49ae:	39 ee                	cmp    %ebp,%esi
    49b0:	7f 25                	jg     49d7 <_Z17write_block_sizesiR5Table+0x2a7>
    49b2:	48 8d 0d 2f d8 01 00 	lea    0x1d82f(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    49b9:	48 8d 15 40 d9 01 00 	lea    0x1d940(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    49c0:	48 8d 3d 34 d8 01 00 	lea    0x1d834(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    49c7:	be 3b 00 00 00       	mov    $0x3b,%esi
    49cc:	e8 0f 70 00 00       	call   b9e0 <__assert>
    49d1:	8b 73 2c             	mov    0x2c(%rbx),%esi
    49d4:	48 8b 0b             	mov    (%rbx),%rcx
    49d7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    49dc:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    49e0:	44 8b 72 04          	mov    0x4(%rdx),%r14d
    49e4:	44 8b 1a             	mov    (%rdx),%r11d
    49e7:	8b 5a 08             	mov    0x8(%rdx),%ebx
    49ea:	8b 42 0c             	mov    0xc(%rdx),%eax
    49ed:	44 8b 6a 10          	mov    0x10(%rdx),%r13d
    49f1:	44 8b 42 14          	mov    0x14(%rdx),%r8d
    49f5:	45 85 f6             	test   %r14d,%r14d
    49f8:	44 8b 52 18          	mov    0x18(%rdx),%r10d
    49fc:	44 8b 4a 1c          	mov    0x1c(%rdx),%r9d
    4a00:	0f 85 ea fe ff ff    	jne    48f0 <_Z17write_block_sizesiR5Table+0x1c0>
    4a06:	44 39 fb             	cmp    %r15d,%ebx
    4a09:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    4a0f:	44 0f 44 6c 24 18    	cmove  0x18(%rsp),%r13d
    4a15:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    4a1b:	45 0f 44 c4          	cmove  %r12d,%r8d
    4a1f:	45 89 c4             	mov    %r8d,%r12d
    4a22:	44 89 6c 24 18       	mov    %r13d,0x18(%rsp)
    4a27:	e9 e4 fe ff ff       	jmp    4910 <_Z17write_block_sizesiR5Table+0x1e0>
    4a2c:	0f 1f 40 00          	nopl   0x0(%rax)
    4a30:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    4a34:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    4a39:	85 c0                	test   %eax,%eax
    4a3b:	0f 8e 7f 01 00 00    	jle    4bc0 <_Z17write_block_sizesiR5Table+0x490>
    4a41:	8b 44 24 38          	mov    0x38(%rsp),%eax
    4a45:	31 db                	xor    %ebx,%ebx
    4a47:	c7 44 24 18 00 00 00 	movl   $0x80000000,0x18(%rsp)
    4a4e:	80 
    4a4f:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
    4a56:	00 
    4a57:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
    4a5e:	00 
    4a5f:	48 83 c0 01          	add    $0x1,%rax
    4a63:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4a68:	e9 bb 00 00 00       	jmp    4b28 <_Z17write_block_sizesiR5Table+0x3f8>
    4a6d:	0f 1f 00             	nopl   (%rax)
    4a70:	41 83 fd 01          	cmp    $0x1,%r13d
    4a74:	75 1a                	jne    4a90 <_Z17write_block_sizesiR5Table+0x360>
    4a76:	8b 74 24 18          	mov    0x18(%rsp),%esi
    4a7a:	8b 7c 24 30          	mov    0x30(%rsp),%edi
    4a7e:	bd 00 00 00 00       	mov    $0x0,%ebp
    4a83:	41 39 f4             	cmp    %esi,%r12d
    4a86:	0f 44 ef             	cmove  %edi,%ebp
    4a89:	89 6c 24 30          	mov    %ebp,0x30(%rsp)
    4a8d:	0f 1f 00             	nopl   (%rax)
    4a90:	45 85 f6             	test   %r14d,%r14d
    4a93:	78 06                	js     4a9b <_Z17write_block_sizesiR5Table+0x36b>
    4a95:	45 39 77 2c          	cmp    %r14d,0x2c(%r15)
    4a99:	7f 58                	jg     4af3 <_Z17write_block_sizesiR5Table+0x3c3>
    4a9b:	48 8d 0d 46 d7 01 00 	lea    0x1d746(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4aa2:	48 8d 15 51 d8 01 00 	lea    0x1d851(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    4aa9:	48 8d 3d 4b d7 01 00 	lea    0x1d74b(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4ab0:	be 48 00 00 00       	mov    $0x48,%esi
    4ab5:	44 89 4c 24 24       	mov    %r9d,0x24(%rsp)
    4aba:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
    4abf:	44 89 44 24 1c       	mov    %r8d,0x1c(%rsp)
    4ac4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4ac9:	44 89 5c 24 18       	mov    %r11d,0x18(%rsp)
    4ace:	e8 0d 6f 00 00       	call   b9e0 <__assert>
    4ad3:	49 8b 0f             	mov    (%r15),%rcx
    4ad6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4adb:	44 8b 4c 24 24       	mov    0x24(%rsp),%r9d
    4ae0:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
    4ae5:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
    4aea:	44 8b 5c 24 18       	mov    0x18(%rsp),%r11d
    4aef:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4af3:	48 83 c3 01          	add    $0x1,%rbx
    4af7:	48 3b 5c 24 28       	cmp    0x28(%rsp),%rbx
    4afc:	8b 44 24 08          	mov    0x8(%rsp),%eax
    4b00:	44 89 6a 04          	mov    %r13d,0x4(%rdx)
    4b04:	44 89 62 08          	mov    %r12d,0x8(%rdx)
    4b08:	44 89 5a 0c          	mov    %r11d,0xc(%rdx)
    4b0c:	44 89 42 10          	mov    %r8d,0x10(%rdx)
    4b10:	89 02                	mov    %eax,(%rdx)
    4b12:	89 6a 14             	mov    %ebp,0x14(%rdx)
    4b15:	44 89 52 18          	mov    %r10d,0x18(%rdx)
    4b19:	44 89 4a 1c          	mov    %r9d,0x1c(%rdx)
    4b1d:	44 89 64 24 18       	mov    %r12d,0x18(%rsp)
    4b22:	0f 84 a0 00 00 00    	je     4bc8 <_Z17write_block_sizesiR5Table+0x498>
    4b28:	85 db                	test   %ebx,%ebx
    4b2a:	41 89 de             	mov    %ebx,%r14d
    4b2d:	78 06                	js     4b35 <_Z17write_block_sizesiR5Table+0x405>
    4b2f:	41 39 5f 2c          	cmp    %ebx,0x2c(%r15)
    4b33:	7f 22                	jg     4b57 <_Z17write_block_sizesiR5Table+0x427>
    4b35:	48 8d 0d ac d6 01 00 	lea    0x1d6ac(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4b3c:	48 8d 15 bd d7 01 00 	lea    0x1d7bd(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4b43:	48 8d 3d b1 d6 01 00 	lea    0x1d6b1(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4b4a:	be 3b 00 00 00       	mov    $0x3b,%esi
    4b4f:	e8 8c 6e 00 00       	call   b9e0 <__assert>
    4b54:	49 8b 0f             	mov    (%r15),%rcx
    4b57:	48 89 d8             	mov    %rbx,%rax
    4b5a:	48 c1 e0 05          	shl    $0x5,%rax
    4b5e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4b62:	44 8b 6a 04          	mov    0x4(%rdx),%r13d
    4b66:	8b 3a                	mov    (%rdx),%edi
    4b68:	44 8b 62 08          	mov    0x8(%rdx),%r12d
    4b6c:	44 8b 5a 0c          	mov    0xc(%rdx),%r11d
    4b70:	44 8b 42 10          	mov    0x10(%rdx),%r8d
    4b74:	8b 6a 14             	mov    0x14(%rdx),%ebp
    4b77:	45 85 ed             	test   %r13d,%r13d
    4b7a:	89 7c 24 08          	mov    %edi,0x8(%rsp)
    4b7e:	44 8b 52 18          	mov    0x18(%rdx),%r10d
    4b82:	44 8b 4a 1c          	mov    0x1c(%rdx),%r9d
    4b86:	0f 85 e4 fe ff ff    	jne    4a70 <_Z17write_block_sizesiR5Table+0x340>
    4b8c:	44 3b 64 24 18       	cmp    0x18(%rsp),%r12d
    4b91:	74 1d                	je     4bb0 <_Z17write_block_sizesiR5Table+0x480>
    4b93:	89 ee                	mov    %ebp,%esi
    4b95:	89 6c 24 30          	mov    %ebp,0x30(%rsp)
    4b99:	41 0f af f0          	imul   %r8d,%esi
    4b9d:	01 74 24 38          	add    %esi,0x38(%rsp)
    4ba1:	e9 ea fe ff ff       	jmp    4a90 <_Z17write_block_sizesiR5Table+0x360>
    4ba6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4bad:	00 00 00 
    4bb0:	89 6c 24 30          	mov    %ebp,0x30(%rsp)
    4bb4:	e9 d7 fe ff ff       	jmp    4a90 <_Z17write_block_sizesiR5Table+0x360>
    4bb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4bc0:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
    4bc7:	00 
    4bc8:	8b 44 24 38          	mov    0x38(%rsp),%eax
    4bcc:	48 83 c4 48          	add    $0x48,%rsp
    4bd0:	5b                   	pop    %rbx
    4bd1:	5d                   	pop    %rbp
    4bd2:	41 5c                	pop    %r12
    4bd4:	41 5d                	pop    %r13
    4bd6:	41 5e                	pop    %r14
    4bd8:	41 5f                	pop    %r15
    4bda:	c3                   	ret    
    4bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4be0:	44 89 e7             	mov    %r12d,%edi
    4be3:	44 89 6c 24 18       	mov    %r13d,0x18(%rsp)
    4be8:	83 c7 01             	add    $0x1,%edi
    4beb:	41 89 fc             	mov    %edi,%r12d
    4bee:	e9 1d fd ff ff       	jmp    4910 <_Z17write_block_sizesiR5Table+0x1e0>
    4bf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4bfa:	00 00 00 
    4bfd:	0f 1f 00             	nopl   (%rax)

0000000000004c00 <_Z7reversePc>:
    4c00:	53                   	push   %rbx
    4c01:	48 89 fb             	mov    %rdi,%rbx
    4c04:	e8 77 ac 00 00       	call   f880 <strlen>
    4c09:	41 89 c0             	mov    %eax,%r8d
    4c0c:	83 e8 01             	sub    $0x1,%eax
    4c0f:	85 c0                	test   %eax,%eax
    4c11:	7e 30                	jle    4c43 <_Z7reversePc+0x43>
    4c13:	48 98                	cltq   
    4c15:	48 89 df             	mov    %rbx,%rdi
    4c18:	31 d2                	xor    %edx,%edx
    4c1a:	48 01 d8             	add    %rbx,%rax
    4c1d:	0f 1f 00             	nopl   (%rax)
    4c20:	0f b6 0f             	movzbl (%rdi),%ecx
    4c23:	0f b6 30             	movzbl (%rax),%esi
    4c26:	83 c2 01             	add    $0x1,%edx
    4c29:	48 83 c7 01          	add    $0x1,%rdi
    4c2d:	48 83 e8 01          	sub    $0x1,%rax
    4c31:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
    4c35:	88 48 01             	mov    %cl,0x1(%rax)
    4c38:	89 d1                	mov    %edx,%ecx
    4c3a:	f7 d1                	not    %ecx
    4c3c:	44 01 c1             	add    %r8d,%ecx
    4c3f:	39 ca                	cmp    %ecx,%edx
    4c41:	7c dd                	jl     4c20 <_Z7reversePc+0x20>
    4c43:	5b                   	pop    %rbx
    4c44:	c3                   	ret    
    4c45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4c4c:	00 00 00 
    4c4f:	90                   	nop

0000000000004c50 <_Z4itoaiPcPi>:
    4c50:	89 f8                	mov    %edi,%eax
    4c52:	53                   	push   %rbx
    4c53:	49 89 f0             	mov    %rsi,%r8
    4c56:	c1 f8 1f             	sar    $0x1f,%eax
    4c59:	48 89 d3             	mov    %rdx,%rbx
    4c5c:	45 31 d2             	xor    %r10d,%r10d
    4c5f:	89 c1                	mov    %eax,%ecx
    4c61:	41 bb 67 66 66 66    	mov    $0x66666667,%r11d
    4c67:	31 f9                	xor    %edi,%ecx
    4c69:	29 c1                	sub    %eax,%ecx
    4c6b:	eb 06                	jmp    4c73 <_Z4itoaiPcPi+0x23>
    4c6d:	0f 1f 00             	nopl   (%rax)
    4c70:	45 89 ca             	mov    %r9d,%r10d
    4c73:	89 c8                	mov    %ecx,%eax
    4c75:	49 83 c0 01          	add    $0x1,%r8
    4c79:	45 8d 4a 01          	lea    0x1(%r10),%r9d
    4c7d:	41 f7 eb             	imul   %r11d
    4c80:	89 c8                	mov    %ecx,%eax
    4c82:	c1 f8 1f             	sar    $0x1f,%eax
    4c85:	c1 fa 02             	sar    $0x2,%edx
    4c88:	29 c2                	sub    %eax,%edx
    4c8a:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
    4c8d:	01 c0                	add    %eax,%eax
    4c8f:	29 c1                	sub    %eax,%ecx
    4c91:	83 c1 30             	add    $0x30,%ecx
    4c94:	41 88 48 ff          	mov    %cl,-0x1(%r8)
    4c98:	85 d2                	test   %edx,%edx
    4c9a:	89 d1                	mov    %edx,%ecx
    4c9c:	75 d2                	jne    4c70 <_Z4itoaiPcPi+0x20>
    4c9e:	85 ff                	test   %edi,%edi
    4ca0:	79 0c                	jns    4cae <_Z4itoaiPcPi+0x5e>
    4ca2:	4d 63 c9             	movslq %r9d,%r9
    4ca5:	42 c6 04 0e 2d       	movb   $0x2d,(%rsi,%r9,1)
    4caa:	45 8d 4a 02          	lea    0x2(%r10),%r9d
    4cae:	49 63 c1             	movslq %r9d,%rax
    4cb1:	48 89 f7             	mov    %rsi,%rdi
    4cb4:	c6 04 06 00          	movb   $0x0,(%rsi,%rax,1)
    4cb8:	44 89 0b             	mov    %r9d,(%rbx)
    4cbb:	5b                   	pop    %rbx
    4cbc:	e9 3f ff ff ff       	jmp    4c00 <_Z7reversePc>
    4cc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4cc8:	00 00 00 
    4ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004cd0 <_Z11parseTablesPcRiS0_>:
    4cd0:	41 57                	push   %r15
    4cd2:	41 56                	push   %r14
    4cd4:	49 89 cf             	mov    %rcx,%r15
    4cd7:	41 55                	push   %r13
    4cd9:	41 54                	push   %r12
    4cdb:	49 89 fc             	mov    %rdi,%r12
    4cde:	55                   	push   %rbp
    4cdf:	53                   	push   %rbx
    4ce0:	48 89 f7             	mov    %rsi,%rdi
    4ce3:	48 8d 35 25 d5 01 00 	lea    0x1d525(%rip),%rsi        # 2220f <g_dyn_entry_table+0x20f>
    4cea:	49 89 d5             	mov    %rdx,%r13
    4ced:	48 83 ec 28          	sub    $0x28,%rsp
    4cf1:	e8 ba ac 00 00       	call   f9b0 <strtok>
    4cf6:	48 89 c7             	mov    %rax,%rdi
    4cf9:	e8 22 70 00 00       	call   bd20 <atoi>
    4cfe:	48 8d 35 b9 d5 01 00 	lea    0x1d5b9(%rip),%rsi        # 222be <g_dyn_entry_table+0x2be>
    4d05:	31 ff                	xor    %edi,%edi
    4d07:	41 89 45 00          	mov    %eax,0x0(%r13)
    4d0b:	e8 a0 ac 00 00       	call   f9b0 <strtok>
    4d10:	48 89 c7             	mov    %rax,%rdi
    4d13:	e8 08 70 00 00       	call   bd20 <atoi>
    4d18:	41 89 07             	mov    %eax,(%r15)
    4d1b:	41 03 45 00          	add    0x0(%r13),%eax
    4d1f:	be 20 00 00 00       	mov    $0x20,%esi
    4d24:	8b 15 d6 75 02 00    	mov    0x275d6(%rip),%edx        # 2c300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    4d2a:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    4d31:	00 00 
    4d33:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    4d3a:	00 00 
    4d3c:	49 c7 44 24 18 00 00 	movq   $0x0,0x18(%r12)
    4d43:	00 00 
    4d45:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    4d4c:	00 00 
    4d4e:	8d 4a 01             	lea    0x1(%rdx),%ecx
    4d51:	41 89 54 24 28       	mov    %edx,0x28(%r12)
    4d56:	41 89 44 24 2c       	mov    %eax,0x2c(%r12)
    4d5b:	48 63 f8             	movslq %eax,%rdi
    4d5e:	89 0d 9c 75 02 00    	mov    %ecx,0x2759c(%rip)        # 2c300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    4d64:	e8 87 9c 00 00       	call   e9f0 <calloc>
    4d69:	49 89 04 24          	mov    %rax,(%r12)
    4d6d:	41 8b 07             	mov    (%r15),%eax
    4d70:	41 03 45 00          	add    0x0(%r13),%eax
    4d74:	85 c0                	test   %eax,%eax
    4d76:	0f 8e 54 01 00 00    	jle    4ed0 <_Z11parseTablesPcRiS0_+0x200>
    4d7c:	31 ed                	xor    %ebp,%ebp
    4d7e:	31 db                	xor    %ebx,%ebx
    4d80:	e9 cd 00 00 00       	jmp    4e52 <_Z11parseTablesPcRiS0_+0x182>
    4d85:	0f 1f 00             	nopl   (%rax)
    4d88:	48 8d 0d 59 d4 01 00 	lea    0x1d459(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4d8f:	48 8d 15 6a d5 01 00 	lea    0x1d56a(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4d96:	48 8d 3d 5e d4 01 00 	lea    0x1d45e(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4d9d:	be 3b 00 00 00       	mov    $0x3b,%esi
    4da2:	e8 39 6c 00 00       	call   b9e0 <__assert>
    4da7:	48 89 e8             	mov    %rbp,%rax
    4daa:	49 03 04 24          	add    (%r12),%rax
    4dae:	8b 50 14             	mov    0x14(%rax),%edx
    4db1:	8b 70 10             	mov    0x10(%rax),%esi
    4db4:	8b 78 18             	mov    0x18(%rax),%edi
    4db7:	89 54 24 14          	mov    %edx,0x14(%rsp)
    4dbb:	31 d2                	xor    %edx,%edx
    4dbd:	41 39 5d 00          	cmp    %ebx,0x0(%r13)
    4dc1:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    4dc5:	8b 70 1c             	mov    0x1c(%rax),%esi
    4dc8:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    4dcc:	0f 9e c2             	setle  %dl
    4dcf:	85 db                	test   %ebx,%ebx
    4dd1:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    4dd5:	89 54 24 10          	mov    %edx,0x10(%rsp)
    4dd9:	78 07                	js     4de2 <_Z11parseTablesPcRiS0_+0x112>
    4ddb:	41 39 5c 24 2c       	cmp    %ebx,0x2c(%r12)
    4de0:	7f 26                	jg     4e08 <_Z11parseTablesPcRiS0_+0x138>
    4de2:	48 8d 0d ff d3 01 00 	lea    0x1d3ff(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4de9:	48 8d 15 0a d5 01 00 	lea    0x1d50a(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    4df0:	48 8d 3d 04 d4 01 00 	lea    0x1d404(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4df7:	be 48 00 00 00       	mov    $0x48,%esi
    4dfc:	e8 df 6b 00 00       	call   b9e0 <__assert>
    4e01:	48 89 e8             	mov    %rbp,%rax
    4e04:	49 03 04 24          	add    (%r12),%rax
    4e08:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    4e0c:	8b 54 24 08          	mov    0x8(%rsp),%edx
    4e10:	83 c3 01             	add    $0x1,%ebx
    4e13:	8b 74 24 14          	mov    0x14(%rsp),%esi
    4e17:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    4e1d:	48 83 c5 20          	add    $0x20,%rbp
    4e21:	44 89 70 0c          	mov    %r14d,0xc(%rax)
    4e25:	89 48 04             	mov    %ecx,0x4(%rax)
    4e28:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    4e2c:	89 50 08             	mov    %edx,0x8(%rax)
    4e2f:	8b 54 24 18          	mov    0x18(%rsp),%edx
    4e33:	89 70 14             	mov    %esi,0x14(%rax)
    4e36:	89 48 10             	mov    %ecx,0x10(%rax)
    4e39:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    4e3d:	89 50 18             	mov    %edx,0x18(%rax)
    4e40:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4e43:	41 8b 07             	mov    (%r15),%eax
    4e46:	41 03 45 00          	add    0x0(%r13),%eax
    4e4a:	39 d8                	cmp    %ebx,%eax
    4e4c:	0f 8e 7e 00 00 00    	jle    4ed0 <_Z11parseTablesPcRiS0_+0x200>
    4e52:	48 8d 35 b6 d3 01 00 	lea    0x1d3b6(%rip),%rsi        # 2220f <g_dyn_entry_table+0x20f>
    4e59:	31 ff                	xor    %edi,%edi
    4e5b:	e8 50 ab 00 00       	call   f9b0 <strtok>
    4e60:	48 89 c7             	mov    %rax,%rdi
    4e63:	e8 b8 6e 00 00       	call   bd20 <atoi>
    4e68:	48 8d 35 4f d4 01 00 	lea    0x1d44f(%rip),%rsi        # 222be <g_dyn_entry_table+0x2be>
    4e6f:	31 ff                	xor    %edi,%edi
    4e71:	89 44 24 08          	mov    %eax,0x8(%rsp)
    4e75:	e8 36 ab 00 00       	call   f9b0 <strtok>
    4e7a:	48 89 c7             	mov    %rax,%rdi
    4e7d:	e8 9e 6e 00 00       	call   bd20 <atoi>
    4e82:	85 db                	test   %ebx,%ebx
    4e84:	41 89 c6             	mov    %eax,%r14d
    4e87:	0f 88 fb fe ff ff    	js     4d88 <_Z11parseTablesPcRiS0_+0xb8>
    4e8d:	41 39 5c 24 2c       	cmp    %ebx,0x2c(%r12)
    4e92:	0f 8e f0 fe ff ff    	jle    4d88 <_Z11parseTablesPcRiS0_+0xb8>
    4e98:	48 89 e8             	mov    %rbp,%rax
    4e9b:	49 03 04 24          	add    (%r12),%rax
    4e9f:	8b 48 14             	mov    0x14(%rax),%ecx
    4ea2:	8b 78 10             	mov    0x10(%rax),%edi
    4ea5:	8b 70 1c             	mov    0x1c(%rax),%esi
    4ea8:	89 4c 24 14          	mov    %ecx,0x14(%rsp)
    4eac:	31 c9                	xor    %ecx,%ecx
    4eae:	41 39 5d 00          	cmp    %ebx,0x0(%r13)
    4eb2:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    4eb6:	8b 78 18             	mov    0x18(%rax),%edi
    4eb9:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    4ebd:	0f 9e c1             	setle  %cl
    4ec0:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    4ec4:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    4ec8:	e9 3b ff ff ff       	jmp    4e08 <_Z11parseTablesPcRiS0_+0x138>
    4ecd:	0f 1f 00             	nopl   (%rax)
    4ed0:	48 83 c4 28          	add    $0x28,%rsp
    4ed4:	4c 89 e0             	mov    %r12,%rax
    4ed7:	5b                   	pop    %rbx
    4ed8:	5d                   	pop    %rbp
    4ed9:	41 5c                	pop    %r12
    4edb:	41 5d                	pop    %r13
    4edd:	41 5e                	pop    %r14
    4edf:	41 5f                	pop    %r15
    4ee1:	c3                   	ret    
    4ee2:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
    4ee7:	48 89 c3             	mov    %rax,%rbx
    4eea:	48 85 ff             	test   %rdi,%rdi
    4eed:	74 25                	je     4f14 <_Z11parseTablesPcRiS0_+0x244>
    4eef:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    4ef4:	48 39 c7             	cmp    %rax,%rdi
    4ef7:	74 16                	je     4f0f <_Z11parseTablesPcRiS0_+0x23f>
    4ef9:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    4efd:	48 29 fa             	sub    %rdi,%rdx
    4f00:	48 f7 d2             	not    %rdx
    4f03:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    4f07:	48 01 c2             	add    %rax,%rdx
    4f0a:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
    4f0f:	e8 0c 81 01 00       	call   1d020 <_ZdlPv>
    4f14:	48 89 df             	mov    %rbx,%rdi
    4f17:	e8 e4 44 01 00       	call   19400 <_Unwind_Resume>
    4f1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004f20 <_Z8toStringPc5TableS0_>:
    4f20:	41 57                	push   %r15
    4f22:	41 56                	push   %r14
    4f24:	41 55                	push   %r13
    4f26:	41 54                	push   %r12
    4f28:	55                   	push   %rbp
    4f29:	53                   	push   %rbx
    4f2a:	48 89 fb             	mov    %rdi,%rbx
    4f2d:	48 83 ec 68          	sub    $0x68,%rsp
    4f31:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4f38:	00 00 
    4f3a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    4f3f:	31 c0                	xor    %eax,%eax
    4f41:	8b 46 2c             	mov    0x2c(%rsi),%eax
    4f44:	85 c0                	test   %eax,%eax
    4f46:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4f4a:	0f 8e 30 01 00 00    	jle    5080 <_Z8toStringPc5TableS0_+0x160>
    4f50:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    4f55:	49 89 f5             	mov    %rsi,%r13
    4f58:	49 89 d7             	mov    %rdx,%r15
    4f5b:	31 ed                	xor    %ebp,%ebp
    4f5d:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    4f62:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4f67:	48 8d 44 24 2c       	lea    0x2c(%rsp),%rax
    4f6c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4f71:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    4f76:	48 89 04 24          	mov    %rax,(%rsp)
    4f7a:	e9 d7 00 00 00       	jmp    5056 <_Z8toStringPc5TableS0_+0x136>
    4f7f:	90                   	nop
    4f80:	48 8d 15 79 d3 01 00 	lea    0x1d379(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4f87:	48 8d 0d 5a d2 01 00 	lea    0x1d25a(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4f8e:	48 8d 3d 66 d2 01 00 	lea    0x1d266(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4f95:	be 3b 00 00 00       	mov    $0x3b,%esi
    4f9a:	89 6c 24 08          	mov    %ebp,0x8(%rsp)
    4f9e:	49 89 ee             	mov    %rbp,%r14
    4fa1:	e8 3a 6a 00 00       	call   b9e0 <__assert>
    4fa6:	49 8b 55 00          	mov    0x0(%r13),%rdx
    4faa:	49 c1 e6 05          	shl    $0x5,%r14
    4fae:	8b 44 24 08          	mov    0x8(%rsp),%eax
    4fb2:	46 8b 4c 32 0c       	mov    0xc(%rdx,%r14,1),%r9d
    4fb7:	41 39 47 2c          	cmp    %eax,0x2c(%r15)
    4fbb:	7f 29                	jg     4fe6 <_Z8toStringPc5TableS0_+0xc6>
    4fbd:	48 8d 0d 24 d2 01 00 	lea    0x1d224(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    4fc4:	48 8d 15 35 d3 01 00 	lea    0x1d335(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    4fcb:	48 8d 3d 29 d2 01 00 	lea    0x1d229(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    4fd2:	be 3b 00 00 00       	mov    $0x3b,%esi
    4fd7:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    4fdc:	e8 ff 69 00 00       	call   b9e0 <__assert>
    4fe1:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    4fe6:	49 8b 07             	mov    (%r15),%rax
    4fe9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4fee:	44 89 cf             	mov    %r9d,%edi
    4ff1:	4c 89 e6             	mov    %r12,%rsi
    4ff4:	48 83 c5 01          	add    $0x1,%rbp
    4ff8:	46 8b 74 30 0c       	mov    0xc(%rax,%r14,1),%r14d
    4ffd:	e8 4e fc ff ff       	call   4c50 <_Z4itoaiPcPi>
    5002:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    5007:	48 8b 34 24          	mov    (%rsp),%rsi
    500b:	44 89 f7             	mov    %r14d,%edi
    500e:	e8 3d fc ff ff       	call   4c50 <_Z4itoaiPcPi>
    5013:	4c 63 74 24 28       	movslq 0x28(%rsp),%r14
    5018:	48 89 df             	mov    %rbx,%rdi
    501b:	4c 89 e6             	mov    %r12,%rsi
    501e:	4c 89 f2             	mov    %r14,%rdx
    5021:	4c 01 f3             	add    %r14,%rbx
    5024:	e8 67 a8 00 00       	call   f890 <strncpy>
    5029:	4c 63 74 24 2c       	movslq 0x2c(%rsp),%r14
    502e:	48 8b 34 24          	mov    (%rsp),%rsi
    5032:	48 83 c3 01          	add    $0x1,%rbx
    5036:	c6 43 ff 20          	movb   $0x20,-0x1(%rbx)
    503a:	48 89 df             	mov    %rbx,%rdi
    503d:	4c 89 f2             	mov    %r14,%rdx
    5040:	4c 01 f3             	add    %r14,%rbx
    5043:	e8 48 a8 00 00       	call   f890 <strncpy>
    5048:	48 83 c3 01          	add    $0x1,%rbx
    504c:	c6 43 ff 0a          	movb   $0xa,-0x1(%rbx)
    5050:	39 6c 24 0c          	cmp    %ebp,0xc(%rsp)
    5054:	7e 2a                	jle    5080 <_Z8toStringPc5TableS0_+0x160>
    5056:	41 39 6d 2c          	cmp    %ebp,0x2c(%r13)
    505a:	89 e8                	mov    %ebp,%eax
    505c:	0f 8e 1e ff ff ff    	jle    4f80 <_Z8toStringPc5TableS0_+0x60>
    5062:	49 8b 55 00          	mov    0x0(%r13),%rdx
    5066:	49 89 ee             	mov    %rbp,%r14
    5069:	49 c1 e6 05          	shl    $0x5,%r14
    506d:	46 8b 4c 32 0c       	mov    0xc(%rdx,%r14,1),%r9d
    5072:	e9 40 ff ff ff       	jmp    4fb7 <_Z8toStringPc5TableS0_+0x97>
    5077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    507e:	00 00 
    5080:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    5085:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    508c:	00 00 
    508e:	c6 03 00             	movb   $0x0,(%rbx)
    5091:	75 0f                	jne    50a2 <_Z8toStringPc5TableS0_+0x182>
    5093:	48 83 c4 68          	add    $0x68,%rsp
    5097:	5b                   	pop    %rbx
    5098:	5d                   	pop    %rbp
    5099:	41 5c                	pop    %r12
    509b:	41 5d                	pop    %r13
    509d:	41 5e                	pop    %r14
    509f:	41 5f                	pop    %r15
    50a1:	c3                   	ret    
    50a2:	e8 19 a9 00 00       	call   f9c0 <__stack_chk_fail>
    50a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    50ae:	00 00 

00000000000050b0 <printf>:
    50b0:	53                   	push   %rbx
    50b1:	49 89 fa             	mov    %rdi,%r10
    50b4:	48 81 ec e0 20 00 00 	sub    $0x20e0,%rsp
    50bb:	84 c0                	test   %al,%al
    50bd:	48 89 b4 24 38 20 00 	mov    %rsi,0x2038(%rsp)
    50c4:	00 
    50c5:	48 89 94 24 40 20 00 	mov    %rdx,0x2040(%rsp)
    50cc:	00 
    50cd:	48 89 8c 24 48 20 00 	mov    %rcx,0x2048(%rsp)
    50d4:	00 
    50d5:	4c 89 84 24 50 20 00 	mov    %r8,0x2050(%rsp)
    50dc:	00 
    50dd:	4c 89 8c 24 58 20 00 	mov    %r9,0x2058(%rsp)
    50e4:	00 
    50e5:	74 40                	je     5127 <printf+0x77>
    50e7:	0f 29 84 24 60 20 00 	movaps %xmm0,0x2060(%rsp)
    50ee:	00 
    50ef:	0f 29 8c 24 70 20 00 	movaps %xmm1,0x2070(%rsp)
    50f6:	00 
    50f7:	0f 29 94 24 80 20 00 	movaps %xmm2,0x2080(%rsp)
    50fe:	00 
    50ff:	0f 29 9c 24 90 20 00 	movaps %xmm3,0x2090(%rsp)
    5106:	00 
    5107:	0f 29 a4 24 a0 20 00 	movaps %xmm4,0x20a0(%rsp)
    510e:	00 
    510f:	0f 29 ac 24 b0 20 00 	movaps %xmm5,0x20b0(%rsp)
    5116:	00 
    5117:	0f 29 b4 24 c0 20 00 	movaps %xmm6,0x20c0(%rsp)
    511e:	00 
    511f:	0f 29 bc 24 d0 20 00 	movaps %xmm7,0x20d0(%rsp)
    5126:	00 
    5127:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    512e:	00 00 
    5130:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    5137:	00 
    5138:	31 c0                	xor    %eax,%eax
    513a:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    513f:	b9 00 04 00 00       	mov    $0x400,%ecx
    5144:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    5149:	4c 89 d2             	mov    %r10,%rdx
    514c:	be 00 20 00 00       	mov    $0x2000,%esi
    5151:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5154:	48 8d 84 24 f0 20 00 	lea    0x20f0(%rsp),%rax
    515b:	00 
    515c:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    5161:	48 89 df             	mov    %rbx,%rdi
    5164:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
    516b:	00 
    516c:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
    5173:	00 
    5174:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5179:	48 8d 84 24 30 20 00 	lea    0x2030(%rsp),%rax
    5180:	00 
    5181:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5186:	e8 b5 6a 00 00       	call   bc40 <vsnprintf>
    518b:	48 89 df             	mov    %rbx,%rdi
    518e:	e8 dd e9 ff ff       	call   3b70 <ocall_print_string>
    5193:	48 8b 84 24 28 20 00 	mov    0x2028(%rsp),%rax
    519a:	00 
    519b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    51a2:	00 00 
    51a4:	75 09                	jne    51af <printf+0xff>
    51a6:	48 81 c4 e0 20 00 00 	add    $0x20e0,%rsp
    51ad:	5b                   	pop    %rbx
    51ae:	c3                   	ret    
    51af:	e8 0c a8 00 00       	call   f9c0 <__stack_chk_fail>
    51b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    51bb:	00 00 00 
    51be:	66 90                	xchg   %ax,%ax

00000000000051c0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>:
    51c0:	41 54                	push   %r12
    51c2:	55                   	push   %rbp
    51c3:	53                   	push   %rbx
    51c4:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    51cb:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    51d2:	00 
    51d3:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
    51d7:	48 2b 1e             	sub    (%rsi),%rbx
    51da:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    51e1:	00 
    51e2:	48 89 d8             	mov    %rbx,%rax
    51e5:	48 c1 f8 03          	sar    $0x3,%rax
    51e9:	48 85 c0             	test   %rax,%rax
    51ec:	75 0a                	jne    51f8 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x38>
    51ee:	5b                   	pop    %rbx
    51ef:	5d                   	pop    %rbp
    51f0:	41 5c                	pop    %r12
    51f2:	c3                   	ret    
    51f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    51f8:	48 ba ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rdx
    51ff:	ff ff 1f 
    5202:	49 89 f4             	mov    %rsi,%r12
    5205:	48 89 fd             	mov    %rdi,%rbp
    5208:	48 39 d0             	cmp    %rdx,%rax
    520b:	77 43                	ja     5250 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x90>
    520d:	48 89 df             	mov    %rbx,%rdi
    5210:	e8 3b 7e 01 00       	call   1d050 <_Znwm>
    5215:	48 01 c3             	add    %rax,%rbx
    5218:	48 89 45 08          	mov    %rax,0x8(%rbp)
    521c:	48 89 45 00          	mov    %rax,0x0(%rbp)
    5220:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    5224:	49 8b 34 24          	mov    (%r12),%rsi
    5228:	48 89 c1             	mov    %rax,%rcx
    522b:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
    5230:	48 29 f3             	sub    %rsi,%rbx
    5233:	48 83 fb 07          	cmp    $0x7,%rbx
    5237:	7e b5                	jle    51ee <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0x2e>
    5239:	48 89 da             	mov    %rbx,%rdx
    523c:	48 89 cf             	mov    %rcx,%rdi
    523f:	e8 ec a3 00 00       	call   f630 <memcpy>
    5244:	48 01 c3             	add    %rax,%rbx
    5247:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    524b:	5b                   	pop    %rbx
    524c:	5d                   	pop    %rbp
    524d:	41 5c                	pop    %r12
    524f:	c3                   	ret    
    5250:	e8 b9 ce ff ff       	call   210e <_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv>
    5255:	bf 08 00 00 00       	mov    $0x8,%edi
    525a:	e8 91 75 01 00       	call   1c7f0 <__cxa_allocate_exception>
    525f:	48 89 c7             	mov    %rax,%rdi
    5262:	48 89 c3             	mov    %rax,%rbx
    5265:	e8 26 7d 01 00       	call   1cf90 <_ZNSt9bad_allocC1Ev>
    526a:	48 8d 15 cf 7c 01 00 	lea    0x17ccf(%rip),%rdx        # 1cf40 <_ZNSt9bad_allocD1Ev>
    5271:	48 8d 35 f8 6a 02 00 	lea    0x26af8(%rip),%rsi        # 2bd70 <_ZTISt9bad_alloc>
    5278:	48 89 df             	mov    %rbx,%rdi
    527b:	e8 70 76 01 00       	call   1c8f0 <__cxa_throw>
    5280:	48 89 c3             	mov    %rax,%rbx
    5283:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    5287:	48 85 ff             	test   %rdi,%rdi
    528a:	74 18                	je     52a4 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xe4>
    528c:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5290:	48 39 d7             	cmp    %rdx,%rdi
    5293:	74 0a                	je     529f <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xdf>
    5295:	48 83 ea 08          	sub    $0x8,%rdx
    5299:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    529d:	eb ed                	jmp    528c <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_+0xcc>
    529f:	e8 7c 7d 01 00       	call   1d020 <_ZdlPv>
    52a4:	48 89 df             	mov    %rbx,%rdi
    52a7:	e8 54 41 01 00       	call   19400 <_Unwind_Resume>
    52ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000052b0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    52b0:	41 57                	push   %r15
    52b2:	41 56                	push   %r14
    52b4:	49 89 ff             	mov    %rdi,%r15
    52b7:	41 55                	push   %r13
    52b9:	41 54                	push   %r12
    52bb:	41 89 d3             	mov    %edx,%r11d
    52be:	55                   	push   %rbp
    52bf:	53                   	push   %rbx
    52c0:	41 89 cc             	mov    %ecx,%r12d
    52c3:	48 83 ec 48          	sub    $0x48,%rsp
    52c7:	85 d2                	test   %edx,%edx
    52c9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    52cd:	78 05                	js     52d4 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x24>
    52cf:	3b 57 2c             	cmp    0x2c(%rdi),%edx
    52d2:	7c 29                	jl     52fd <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x4d>
    52d4:	48 8d 0d 0d cf 01 00 	lea    0x1cf0d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    52db:	48 8d 15 1e d0 01 00 	lea    0x1d01e(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    52e2:	48 8d 3d 12 cf 01 00 	lea    0x1cf12(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    52e9:	be 3b 00 00 00       	mov    $0x3b,%esi
    52ee:	44 89 5c 24 04       	mov    %r11d,0x4(%rsp)
    52f3:	e8 e8 66 00 00       	call   b9e0 <__assert>
    52f8:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
    52fd:	49 8b 0f             	mov    (%r15),%rcx
    5300:	49 63 db             	movslq %r11d,%rbx
    5303:	48 c1 e3 05          	shl    $0x5,%rbx
    5307:	45 85 e4             	test   %r12d,%r12d
    530a:	48 8d 14 19          	lea    (%rcx,%rbx,1),%rdx
    530e:	8b 02                	mov    (%rdx),%eax
    5310:	44 8b 6a 08          	mov    0x8(%rdx),%r13d
    5314:	89 44 24 10          	mov    %eax,0x10(%rsp)
    5318:	8b 42 04             	mov    0x4(%rdx),%eax
    531b:	89 44 24 04          	mov    %eax,0x4(%rsp)
    531f:	8b 42 0c             	mov    0xc(%rdx),%eax
    5322:	89 44 24 38          	mov    %eax,0x38(%rsp)
    5326:	8b 42 10             	mov    0x10(%rdx),%eax
    5329:	89 44 24 34          	mov    %eax,0x34(%rsp)
    532d:	8b 42 14             	mov    0x14(%rdx),%eax
    5330:	89 44 24 30          	mov    %eax,0x30(%rsp)
    5334:	8b 42 18             	mov    0x18(%rdx),%eax
    5337:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    533b:	8b 42 1c             	mov    0x1c(%rdx),%eax
    533e:	89 44 24 28          	mov    %eax,0x28(%rsp)
    5342:	78 06                	js     534a <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x9a>
    5344:	45 3b 67 2c          	cmp    0x2c(%r15),%r12d
    5348:	7c 2c                	jl     5376 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0xc6>
    534a:	48 8d 0d 97 ce 01 00 	lea    0x1ce97(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5351:	48 8d 15 a8 cf 01 00 	lea    0x1cfa8(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5358:	48 8d 3d 9c ce 01 00 	lea    0x1ce9c(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    535f:	be 3b 00 00 00       	mov    $0x3b,%esi
    5364:	44 89 5c 24 08       	mov    %r11d,0x8(%rsp)
    5369:	e8 72 66 00 00       	call   b9e0 <__assert>
    536e:	49 8b 0f             	mov    (%r15),%rcx
    5371:	44 8b 5c 24 08       	mov    0x8(%rsp),%r11d
    5376:	49 63 ec             	movslq %r12d,%rbp
    5379:	48 c1 e5 05          	shl    $0x5,%rbp
    537d:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
    5381:	8b 02                	mov    (%rdx),%eax
    5383:	44 8b 72 08          	mov    0x8(%rdx),%r14d
    5387:	89 44 24 24          	mov    %eax,0x24(%rsp)
    538b:	8b 42 04             	mov    0x4(%rdx),%eax
    538e:	45 39 f5             	cmp    %r14d,%r13d
    5391:	89 44 24 08          	mov    %eax,0x8(%rsp)
    5395:	8b 42 0c             	mov    0xc(%rdx),%eax
    5398:	89 44 24 14          	mov    %eax,0x14(%rsp)
    539c:	8b 42 10             	mov    0x10(%rdx),%eax
    539f:	89 44 24 18          	mov    %eax,0x18(%rsp)
    53a3:	8b 42 14             	mov    0x14(%rdx),%eax
    53a6:	89 44 24 20          	mov    %eax,0x20(%rsp)
    53aa:	8b 42 18             	mov    0x18(%rdx),%eax
    53ad:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    53b1:	8b 42 1c             	mov    0x1c(%rdx),%eax
    53b4:	0f 9c c2             	setl   %dl
    53b7:	45 39 f5             	cmp    %r14d,%r13d
    53ba:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    53be:	0f 84 ec 00 00 00    	je     54b0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x200>
    53c4:	83 f2 01             	xor    $0x1,%edx
    53c7:	3a 54 24 0c          	cmp    0xc(%rsp),%dl
    53cb:	0f 84 f7 00 00 00    	je     54c8 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x218>
    53d1:	45 85 db             	test   %r11d,%r11d
    53d4:	78 06                	js     53dc <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x12c>
    53d6:	45 3b 5f 2c          	cmp    0x2c(%r15),%r11d
    53da:	7c 22                	jl     53fe <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x14e>
    53dc:	48 8d 0d 05 ce 01 00 	lea    0x1ce05(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    53e3:	48 8d 15 10 cf 01 00 	lea    0x1cf10(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    53ea:	48 8d 3d 0a ce 01 00 	lea    0x1ce0a(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    53f1:	be 48 00 00 00       	mov    $0x48,%esi
    53f6:	e8 e5 65 00 00       	call   b9e0 <__assert>
    53fb:	49 8b 0f             	mov    (%r15),%rcx
    53fe:	8b 44 24 10          	mov    0x10(%rsp),%eax
    5402:	48 01 cb             	add    %rcx,%rbx
    5405:	45 85 e4             	test   %r12d,%r12d
    5408:	44 89 6b 08          	mov    %r13d,0x8(%rbx)
    540c:	89 03                	mov    %eax,(%rbx)
    540e:	8b 44 24 04          	mov    0x4(%rsp),%eax
    5412:	89 43 04             	mov    %eax,0x4(%rbx)
    5415:	8b 44 24 38          	mov    0x38(%rsp),%eax
    5419:	89 43 0c             	mov    %eax,0xc(%rbx)
    541c:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5420:	89 43 10             	mov    %eax,0x10(%rbx)
    5423:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5427:	89 43 14             	mov    %eax,0x14(%rbx)
    542a:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    542e:	89 43 18             	mov    %eax,0x18(%rbx)
    5431:	8b 44 24 28          	mov    0x28(%rsp),%eax
    5435:	89 43 1c             	mov    %eax,0x1c(%rbx)
    5438:	78 06                	js     5440 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x190>
    543a:	45 3b 67 2c          	cmp    0x2c(%r15),%r12d
    543e:	7c 22                	jl     5462 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x1b2>
    5440:	48 8d 0d a1 cd 01 00 	lea    0x1cda1(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5447:	48 8d 15 ac ce 01 00 	lea    0x1ceac(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    544e:	48 8d 3d a6 cd 01 00 	lea    0x1cda6(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5455:	be 48 00 00 00       	mov    $0x48,%esi
    545a:	e8 81 65 00 00       	call   b9e0 <__assert>
    545f:	49 8b 0f             	mov    (%r15),%rcx
    5462:	8b 44 24 24          	mov    0x24(%rsp),%eax
    5466:	48 01 cd             	add    %rcx,%rbp
    5469:	44 89 75 08          	mov    %r14d,0x8(%rbp)
    546d:	89 45 00             	mov    %eax,0x0(%rbp)
    5470:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5474:	89 45 04             	mov    %eax,0x4(%rbp)
    5477:	8b 44 24 14          	mov    0x14(%rsp),%eax
    547b:	89 45 0c             	mov    %eax,0xc(%rbp)
    547e:	8b 44 24 18          	mov    0x18(%rsp),%eax
    5482:	89 45 10             	mov    %eax,0x10(%rbp)
    5485:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5489:	89 45 14             	mov    %eax,0x14(%rbp)
    548c:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    5490:	89 45 18             	mov    %eax,0x18(%rbp)
    5493:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5497:	89 45 1c             	mov    %eax,0x1c(%rbp)
    549a:	48 83 c4 48          	add    $0x48,%rsp
    549e:	5b                   	pop    %rbx
    549f:	5d                   	pop    %rbp
    54a0:	41 5c                	pop    %r12
    54a2:	41 5d                	pop    %r13
    54a4:	41 5e                	pop    %r14
    54a6:	41 5f                	pop    %r15
    54a8:	c3                   	ret    
    54a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    54b0:	8b 74 24 08          	mov    0x8(%rsp),%esi
    54b4:	39 74 24 04          	cmp    %esi,0x4(%rsp)
    54b8:	0f 9c c2             	setl   %dl
    54bb:	83 f2 01             	xor    $0x1,%edx
    54be:	3a 54 24 0c          	cmp    0xc(%rsp),%dl
    54c2:	0f 85 09 ff ff ff    	jne    53d1 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x121>
    54c8:	45 85 db             	test   %r11d,%r11d
    54cb:	78 06                	js     54d3 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x223>
    54cd:	45 3b 5f 2c          	cmp    0x2c(%r15),%r11d
    54d1:	7c 22                	jl     54f5 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x245>
    54d3:	48 8d 0d 0e cd 01 00 	lea    0x1cd0e(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    54da:	48 8d 15 19 ce 01 00 	lea    0x1ce19(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    54e1:	48 8d 3d 13 cd 01 00 	lea    0x1cd13(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    54e8:	be 48 00 00 00       	mov    $0x48,%esi
    54ed:	e8 ee 64 00 00       	call   b9e0 <__assert>
    54f2:	49 8b 0f             	mov    (%r15),%rcx
    54f5:	8b 44 24 24          	mov    0x24(%rsp),%eax
    54f9:	48 01 cb             	add    %rcx,%rbx
    54fc:	45 85 e4             	test   %r12d,%r12d
    54ff:	44 89 73 08          	mov    %r14d,0x8(%rbx)
    5503:	89 03                	mov    %eax,(%rbx)
    5505:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5509:	89 43 04             	mov    %eax,0x4(%rbx)
    550c:	8b 44 24 14          	mov    0x14(%rsp),%eax
    5510:	89 43 0c             	mov    %eax,0xc(%rbx)
    5513:	8b 44 24 18          	mov    0x18(%rsp),%eax
    5517:	89 43 10             	mov    %eax,0x10(%rbx)
    551a:	8b 44 24 20          	mov    0x20(%rsp),%eax
    551e:	89 43 14             	mov    %eax,0x14(%rbx)
    5521:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    5525:	89 43 18             	mov    %eax,0x18(%rbx)
    5528:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    552c:	89 43 1c             	mov    %eax,0x1c(%rbx)
    552f:	78 06                	js     5537 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x287>
    5531:	45 39 67 2c          	cmp    %r12d,0x2c(%r15)
    5535:	7f 22                	jg     5559 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x2a9>
    5537:	48 8d 0d aa cc 01 00 	lea    0x1ccaa(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    553e:	48 8d 15 b5 cd 01 00 	lea    0x1cdb5(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5545:	48 8d 3d af cc 01 00 	lea    0x1ccaf(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    554c:	be 48 00 00 00       	mov    $0x48,%esi
    5551:	e8 8a 64 00 00       	call   b9e0 <__assert>
    5556:	49 8b 0f             	mov    (%r15),%rcx
    5559:	8b 44 24 10          	mov    0x10(%rsp),%eax
    555d:	48 01 cd             	add    %rcx,%rbp
    5560:	44 89 6d 08          	mov    %r13d,0x8(%rbp)
    5564:	89 45 00             	mov    %eax,0x0(%rbp)
    5567:	8b 44 24 04          	mov    0x4(%rsp),%eax
    556b:	89 45 04             	mov    %eax,0x4(%rbp)
    556e:	8b 44 24 38          	mov    0x38(%rsp),%eax
    5572:	89 45 0c             	mov    %eax,0xc(%rbp)
    5575:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5579:	89 45 10             	mov    %eax,0x10(%rbp)
    557c:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5580:	89 45 14             	mov    %eax,0x14(%rbp)
    5583:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    5587:	89 45 18             	mov    %eax,0x18(%rbp)
    558a:	8b 44 24 28          	mov    0x28(%rsp),%eax
    558e:	89 45 1c             	mov    %eax,0x1c(%rbp)
    5591:	48 83 c4 48          	add    $0x48,%rsp
    5595:	5b                   	pop    %rbx
    5596:	5d                   	pop    %rbp
    5597:	41 5c                	pop    %r12
    5599:	41 5d                	pop    %r13
    559b:	41 5e                	pop    %r14
    559d:	41 5f                	pop    %r15
    559f:	c3                   	ret    

00000000000055a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9>:
    55a0:	41 57                	push   %r15
    55a2:	89 c8                	mov    %ecx,%eax
    55a4:	41 56                	push   %r14
    55a6:	41 55                	push   %r13
    55a8:	41 54                	push   %r12
    55aa:	29 d0                	sub    %edx,%eax
    55ac:	55                   	push   %rbp
    55ad:	53                   	push   %rbx
    55ae:	48 89 fd             	mov    %rdi,%rbp
    55b1:	41 89 d6             	mov    %edx,%r14d
    55b4:	48 83 ec 18          	sub    $0x18,%rsp
    55b8:	83 f8 01             	cmp    $0x1,%eax
    55bb:	89 74 24 08          	mov    %esi,0x8(%rsp)
    55bf:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    55c3:	0f 8e 9e 00 00 00    	jle    5667 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0xc7>
    55c9:	bb 01 00 00 00       	mov    $0x1,%ebx
    55ce:	66 90                	xchg   %ax,%ax
    55d0:	01 db                	add    %ebx,%ebx
    55d2:	39 d8                	cmp    %ebx,%eax
    55d4:	7f fa                	jg     55d0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0x30>
    55d6:	d1 fb                	sar    %ebx
    55d8:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    55dd:	44 0f b6 6c 24 08    	movzbl 0x8(%rsp),%r13d
    55e3:	45 89 f7             	mov    %r14d,%r15d
    55e6:	41 29 dc             	sub    %ebx,%r12d
    55e9:	45 39 e6             	cmp    %r12d,%r14d
    55ec:	7d 1d                	jge    560b <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0x6b>
    55ee:	66 90                	xchg   %ax,%ax
    55f0:	42 8d 0c 3b          	lea    (%rbx,%r15,1),%ecx
    55f4:	44 89 fa             	mov    %r15d,%edx
    55f7:	44 89 ee             	mov    %r13d,%esi
    55fa:	48 89 ef             	mov    %rbp,%rdi
    55fd:	41 83 c7 01          	add    $0x1,%r15d
    5601:	e8 aa fc ff ff       	call   52b0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5606:	45 39 e7             	cmp    %r12d,%r15d
    5609:	75 e5                	jne    55f0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0x50>
    560b:	41 8d 46 01          	lea    0x1(%r14),%eax
    560f:	44 01 f3             	add    %r14d,%ebx
    5612:	39 c3                	cmp    %eax,%ebx
    5614:	7e 12                	jle    5628 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0x88>
    5616:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    561b:	89 d9                	mov    %ebx,%ecx
    561d:	44 89 f2             	mov    %r14d,%edx
    5620:	48 89 ef             	mov    %rbp,%rdi
    5623:	e8 78 ff ff ff       	call   55a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9>
    5628:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    562c:	8d 43 01             	lea    0x1(%rbx),%eax
    562f:	39 c2                	cmp    %eax,%edx
    5631:	7e 25                	jle    5658 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0xb8>
    5633:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    5638:	48 83 c4 18          	add    $0x18,%rsp
    563c:	89 d1                	mov    %edx,%ecx
    563e:	48 89 ef             	mov    %rbp,%rdi
    5641:	89 da                	mov    %ebx,%edx
    5643:	5b                   	pop    %rbx
    5644:	5d                   	pop    %rbp
    5645:	41 5c                	pop    %r12
    5647:	41 5d                	pop    %r13
    5649:	41 5e                	pop    %r14
    564b:	41 5f                	pop    %r15
    564d:	e9 4e ff ff ff       	jmp    55a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9>
    5652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5658:	48 83 c4 18          	add    $0x18,%rsp
    565c:	5b                   	pop    %rbx
    565d:	5d                   	pop    %rbp
    565e:	41 5c                	pop    %r12
    5660:	41 5d                	pop    %r13
    5662:	41 5e                	pop    %r14
    5664:	41 5f                	pop    %r15
    5666:	c3                   	ret    
    5667:	31 db                	xor    %ebx,%ebx
    5669:	e9 6a ff ff ff       	jmp    55d8 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9+0x38>
    566e:	66 90                	xchg   %ax,%ax

0000000000005670 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    5670:	83 f9 ff             	cmp    $0xffffffff,%ecx
    5673:	41 56                	push   %r14
    5675:	41 89 f6             	mov    %esi,%r14d
    5678:	41 55                	push   %r13
    567a:	41 89 cd             	mov    %ecx,%r13d
    567d:	41 54                	push   %r12
    567f:	49 89 fc             	mov    %rdi,%r12
    5682:	55                   	push   %rbp
    5683:	89 d5                	mov    %edx,%ebp
    5685:	53                   	push   %rbx
    5686:	74 78                	je     5700 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x90>
    5688:	44 89 e8             	mov    %r13d,%eax
    568b:	29 e8                	sub    %ebp,%eax
    568d:	89 c3                	mov    %eax,%ebx
    568f:	c1 eb 1f             	shr    $0x1f,%ebx
    5692:	01 d8                	add    %ebx,%eax
    5694:	d1 f8                	sar    %eax
    5696:	8d 1c 28             	lea    (%rax,%rbp,1),%ebx
    5699:	39 dd                	cmp    %ebx,%ebp
    569b:	74 32                	je     56cf <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x5f>
    569d:	44 89 f6             	mov    %r14d,%esi
    56a0:	89 d9                	mov    %ebx,%ecx
    56a2:	89 ea                	mov    %ebp,%edx
    56a4:	83 f6 01             	xor    $0x1,%esi
    56a7:	4c 89 e7             	mov    %r12,%rdi
    56aa:	45 0f b6 f6          	movzbl %r14b,%r14d
    56ae:	40 0f b6 f6          	movzbl %sil,%esi
    56b2:	e8 b9 ff ff ff       	call   5670 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>
    56b7:	44 89 e9             	mov    %r13d,%ecx
    56ba:	89 da                	mov    %ebx,%edx
    56bc:	44 89 f6             	mov    %r14d,%esi
    56bf:	4c 89 e7             	mov    %r12,%rdi
    56c2:	e8 a9 ff ff ff       	call   5670 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>
    56c7:	8d 45 01             	lea    0x1(%rbp),%eax
    56ca:	41 39 c5             	cmp    %eax,%r13d
    56cd:	7f 11                	jg     56e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x70>
    56cf:	5b                   	pop    %rbx
    56d0:	5d                   	pop    %rbp
    56d1:	41 5c                	pop    %r12
    56d3:	41 5d                	pop    %r13
    56d5:	41 5e                	pop    %r14
    56d7:	c3                   	ret    
    56d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56df:	00 
    56e0:	5b                   	pop    %rbx
    56e1:	44 89 e9             	mov    %r13d,%ecx
    56e4:	89 ea                	mov    %ebp,%edx
    56e6:	44 89 f6             	mov    %r14d,%esi
    56e9:	5d                   	pop    %rbp
    56ea:	4c 89 e7             	mov    %r12,%rdi
    56ed:	41 5c                	pop    %r12
    56ef:	41 5d                	pop    %r13
    56f1:	41 5e                	pop    %r14
    56f3:	e9 a8 fe ff ff       	jmp    55a0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii.part.9>
    56f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    56ff:	00 
    5700:	44 8b 6f 2c          	mov    0x2c(%rdi),%r13d
    5704:	eb 82                	jmp    5688 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii+0x18>
    5706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    570d:	00 00 00 

0000000000005710 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    5710:	41 57                	push   %r15
    5712:	41 56                	push   %r14
    5714:	41 89 d0             	mov    %edx,%r8d
    5717:	41 55                	push   %r13
    5719:	41 54                	push   %r12
    571b:	41 89 cd             	mov    %ecx,%r13d
    571e:	55                   	push   %rbp
    571f:	53                   	push   %rbx
    5720:	49 89 fc             	mov    %rdi,%r12
    5723:	48 83 ec 48          	sub    $0x48,%rsp
    5727:	85 d2                	test   %edx,%edx
    5729:	89 74 24 14          	mov    %esi,0x14(%rsp)
    572d:	78 05                	js     5734 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x24>
    572f:	3b 57 2c             	cmp    0x2c(%rdi),%edx
    5732:	7c 29                	jl     575d <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x4d>
    5734:	48 8d 0d ad ca 01 00 	lea    0x1caad(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    573b:	48 8d 15 be cb 01 00 	lea    0x1cbbe(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5742:	48 8d 3d b2 ca 01 00 	lea    0x1cab2(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5749:	be 3b 00 00 00       	mov    $0x3b,%esi
    574e:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    5753:	e8 88 62 00 00       	call   b9e0 <__assert>
    5758:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
    575d:	49 8b 0c 24          	mov    (%r12),%rcx
    5761:	49 63 d8             	movslq %r8d,%rbx
    5764:	48 c1 e3 05          	shl    $0x5,%rbx
    5768:	45 85 ed             	test   %r13d,%r13d
    576b:	48 8d 14 19          	lea    (%rcx,%rbx,1),%rdx
    576f:	8b 02                	mov    (%rdx),%eax
    5771:	44 8b 7a 04          	mov    0x4(%rdx),%r15d
    5775:	89 44 24 18          	mov    %eax,0x18(%rsp)
    5779:	8b 42 08             	mov    0x8(%rdx),%eax
    577c:	89 44 24 08          	mov    %eax,0x8(%rsp)
    5780:	8b 42 0c             	mov    0xc(%rdx),%eax
    5783:	89 44 24 10          	mov    %eax,0x10(%rsp)
    5787:	8b 42 10             	mov    0x10(%rdx),%eax
    578a:	89 44 24 38          	mov    %eax,0x38(%rsp)
    578e:	8b 42 14             	mov    0x14(%rdx),%eax
    5791:	89 44 24 34          	mov    %eax,0x34(%rsp)
    5795:	8b 42 18             	mov    0x18(%rdx),%eax
    5798:	89 44 24 30          	mov    %eax,0x30(%rsp)
    579c:	8b 42 1c             	mov    0x1c(%rdx),%eax
    579f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    57a3:	78 07                	js     57ac <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x9c>
    57a5:	45 3b 6c 24 2c       	cmp    0x2c(%r12),%r13d
    57aa:	7c 2d                	jl     57d9 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0xc9>
    57ac:	48 8d 0d 35 ca 01 00 	lea    0x1ca35(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    57b3:	48 8d 15 46 cb 01 00 	lea    0x1cb46(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    57ba:	48 8d 3d 3a ca 01 00 	lea    0x1ca3a(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    57c1:	be 3b 00 00 00       	mov    $0x3b,%esi
    57c6:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    57cb:	e8 10 62 00 00       	call   b9e0 <__assert>
    57d0:	49 8b 0c 24          	mov    (%r12),%rcx
    57d4:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    57d9:	49 63 ed             	movslq %r13d,%rbp
    57dc:	48 c1 e5 05          	shl    $0x5,%rbp
    57e0:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
    57e4:	8b 72 0c             	mov    0xc(%rdx),%esi
    57e7:	8b 7a 10             	mov    0x10(%rdx),%edi
    57ea:	44 8b 72 04          	mov    0x4(%rdx),%r14d
    57ee:	8b 02                	mov    (%rdx),%eax
    57f0:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    57f4:	8b 72 14             	mov    0x14(%rdx),%esi
    57f7:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    57fb:	8b 7a 18             	mov    0x18(%rdx),%edi
    57fe:	45 39 f7             	cmp    %r14d,%r15d
    5801:	89 44 24 28          	mov    %eax,0x28(%rsp)
    5805:	8b 42 08             	mov    0x8(%rdx),%eax
    5808:	89 74 24 24          	mov    %esi,0x24(%rsp)
    580c:	8b 72 1c             	mov    0x1c(%rdx),%esi
    580f:	0f 9c c2             	setl   %dl
    5812:	45 39 f7             	cmp    %r14d,%r15d
    5815:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    5819:	89 74 24 20          	mov    %esi,0x20(%rsp)
    581d:	0f 84 fd 00 00 00    	je     5920 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x210>
    5823:	83 f2 01             	xor    $0x1,%edx
    5826:	3a 54 24 14          	cmp    0x14(%rsp),%dl
    582a:	0f 84 18 01 00 00    	je     5948 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x238>
    5830:	45 85 c0             	test   %r8d,%r8d
    5833:	78 07                	js     583c <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x12c>
    5835:	45 3b 44 24 2c       	cmp    0x2c(%r12),%r8d
    583a:	7c 2b                	jl     5867 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x157>
    583c:	48 8d 0d a5 c9 01 00 	lea    0x1c9a5(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5843:	48 8d 15 b0 ca 01 00 	lea    0x1cab0(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    584a:	48 8d 3d aa c9 01 00 	lea    0x1c9aa(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5851:	be 48 00 00 00       	mov    $0x48,%esi
    5856:	89 44 24 14          	mov    %eax,0x14(%rsp)
    585a:	e8 81 61 00 00       	call   b9e0 <__assert>
    585f:	49 8b 0c 24          	mov    (%r12),%rcx
    5863:	8b 44 24 14          	mov    0x14(%rsp),%eax
    5867:	8b 7c 24 18          	mov    0x18(%rsp),%edi
    586b:	48 01 cb             	add    %rcx,%rbx
    586e:	8b 74 24 10          	mov    0x10(%rsp),%esi
    5872:	45 85 ed             	test   %r13d,%r13d
    5875:	44 89 7b 04          	mov    %r15d,0x4(%rbx)
    5879:	89 3b                	mov    %edi,(%rbx)
    587b:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    587f:	89 73 0c             	mov    %esi,0xc(%rbx)
    5882:	8b 74 24 34          	mov    0x34(%rsp),%esi
    5886:	89 7b 08             	mov    %edi,0x8(%rbx)
    5889:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    588d:	89 73 14             	mov    %esi,0x14(%rbx)
    5890:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
    5894:	89 7b 10             	mov    %edi,0x10(%rbx)
    5897:	8b 7c 24 30          	mov    0x30(%rsp),%edi
    589b:	89 73 1c             	mov    %esi,0x1c(%rbx)
    589e:	89 7b 18             	mov    %edi,0x18(%rbx)
    58a1:	78 07                	js     58aa <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x19a>
    58a3:	45 3b 6c 24 2c       	cmp    0x2c(%r12),%r13d
    58a8:	7c 2b                	jl     58d5 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x1c5>
    58aa:	48 8d 0d 37 c9 01 00 	lea    0x1c937(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    58b1:	48 8d 15 42 ca 01 00 	lea    0x1ca42(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    58b8:	48 8d 3d 3c c9 01 00 	lea    0x1c93c(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    58bf:	be 48 00 00 00       	mov    $0x48,%esi
    58c4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    58c8:	e8 13 61 00 00       	call   b9e0 <__assert>
    58cd:	49 8b 0c 24          	mov    (%r12),%rcx
    58d1:	8b 44 24 08          	mov    0x8(%rsp),%eax
    58d5:	48 01 cd             	add    %rcx,%rbp
    58d8:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    58dc:	89 45 08             	mov    %eax,0x8(%rbp)
    58df:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    58e3:	44 89 75 04          	mov    %r14d,0x4(%rbp)
    58e7:	89 4d 00             	mov    %ecx,0x0(%rbp)
    58ea:	89 45 0c             	mov    %eax,0xc(%rbp)
    58ed:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    58f1:	89 45 10             	mov    %eax,0x10(%rbp)
    58f4:	8b 44 24 24          	mov    0x24(%rsp),%eax
    58f8:	89 45 14             	mov    %eax,0x14(%rbp)
    58fb:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    58ff:	89 45 18             	mov    %eax,0x18(%rbp)
    5902:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5906:	89 45 1c             	mov    %eax,0x1c(%rbp)
    5909:	48 83 c4 48          	add    $0x48,%rsp
    590d:	5b                   	pop    %rbx
    590e:	5d                   	pop    %rbp
    590f:	41 5c                	pop    %r12
    5911:	41 5d                	pop    %r13
    5913:	41 5e                	pop    %r14
    5915:	41 5f                	pop    %r15
    5917:	c3                   	ret    
    5918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    591f:	00 
    5920:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    5924:	39 c7                	cmp    %eax,%edi
    5926:	0f 9c c2             	setl   %dl
    5929:	39 c7                	cmp    %eax,%edi
    592b:	0f 85 f2 fe ff ff    	jne    5823 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x113>
    5931:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    5935:	39 7c 24 0c          	cmp    %edi,0xc(%rsp)
    5939:	0f 9f c2             	setg   %dl
    593c:	e9 e2 fe ff ff       	jmp    5823 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x113>
    5941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5948:	45 85 c0             	test   %r8d,%r8d
    594b:	78 07                	js     5954 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x244>
    594d:	45 3b 44 24 2c       	cmp    0x2c(%r12),%r8d
    5952:	7c 2b                	jl     597f <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x26f>
    5954:	48 8d 0d 8d c8 01 00 	lea    0x1c88d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    595b:	48 8d 15 98 c9 01 00 	lea    0x1c998(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5962:	48 8d 3d 92 c8 01 00 	lea    0x1c892(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5969:	be 48 00 00 00       	mov    $0x48,%esi
    596e:	89 44 24 14          	mov    %eax,0x14(%rsp)
    5972:	e8 69 60 00 00       	call   b9e0 <__assert>
    5977:	49 8b 0c 24          	mov    (%r12),%rcx
    597b:	8b 44 24 14          	mov    0x14(%rsp),%eax
    597f:	48 01 cb             	add    %rcx,%rbx
    5982:	8b 74 24 28          	mov    0x28(%rsp),%esi
    5986:	45 85 ed             	test   %r13d,%r13d
    5989:	89 43 08             	mov    %eax,0x8(%rbx)
    598c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    5990:	44 89 73 04          	mov    %r14d,0x4(%rbx)
    5994:	89 33                	mov    %esi,(%rbx)
    5996:	89 43 0c             	mov    %eax,0xc(%rbx)
    5999:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    599d:	89 43 10             	mov    %eax,0x10(%rbx)
    59a0:	8b 44 24 24          	mov    0x24(%rsp),%eax
    59a4:	89 43 14             	mov    %eax,0x14(%rbx)
    59a7:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    59ab:	89 43 18             	mov    %eax,0x18(%rbx)
    59ae:	8b 44 24 20          	mov    0x20(%rsp),%eax
    59b2:	89 43 1c             	mov    %eax,0x1c(%rbx)
    59b5:	78 07                	js     59be <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x2ae>
    59b7:	45 39 6c 24 2c       	cmp    %r13d,0x2c(%r12)
    59bc:	7f 23                	jg     59e1 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x2d1>
    59be:	48 8d 0d 23 c8 01 00 	lea    0x1c823(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    59c5:	48 8d 15 2e c9 01 00 	lea    0x1c92e(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    59cc:	48 8d 3d 28 c8 01 00 	lea    0x1c828(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    59d3:	be 48 00 00 00       	mov    $0x48,%esi
    59d8:	e8 03 60 00 00       	call   b9e0 <__assert>
    59dd:	49 8b 0c 24          	mov    (%r12),%rcx
    59e1:	8b 44 24 18          	mov    0x18(%rsp),%eax
    59e5:	48 01 cd             	add    %rcx,%rbp
    59e8:	44 89 7d 04          	mov    %r15d,0x4(%rbp)
    59ec:	89 45 00             	mov    %eax,0x0(%rbp)
    59ef:	8b 44 24 08          	mov    0x8(%rsp),%eax
    59f3:	89 45 08             	mov    %eax,0x8(%rbp)
    59f6:	8b 44 24 10          	mov    0x10(%rsp),%eax
    59fa:	89 45 0c             	mov    %eax,0xc(%rbp)
    59fd:	8b 44 24 38          	mov    0x38(%rsp),%eax
    5a01:	89 45 10             	mov    %eax,0x10(%rbp)
    5a04:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5a08:	89 45 14             	mov    %eax,0x14(%rbp)
    5a0b:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5a0f:	89 45 18             	mov    %eax,0x18(%rbp)
    5a12:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    5a16:	89 45 1c             	mov    %eax,0x1c(%rbp)
    5a19:	48 83 c4 48          	add    $0x48,%rsp
    5a1d:	5b                   	pop    %rbx
    5a1e:	5d                   	pop    %rbp
    5a1f:	41 5c                	pop    %r12
    5a21:	41 5d                	pop    %r13
    5a23:	41 5e                	pop    %r14
    5a25:	41 5f                	pop    %r15
    5a27:	c3                   	ret    
    5a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5a2f:	00 

0000000000005a30 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10>:
    5a30:	41 57                	push   %r15
    5a32:	89 c8                	mov    %ecx,%eax
    5a34:	41 56                	push   %r14
    5a36:	41 55                	push   %r13
    5a38:	41 54                	push   %r12
    5a3a:	29 d0                	sub    %edx,%eax
    5a3c:	55                   	push   %rbp
    5a3d:	53                   	push   %rbx
    5a3e:	48 89 fd             	mov    %rdi,%rbp
    5a41:	41 89 d6             	mov    %edx,%r14d
    5a44:	48 83 ec 18          	sub    $0x18,%rsp
    5a48:	83 f8 01             	cmp    $0x1,%eax
    5a4b:	89 74 24 08          	mov    %esi,0x8(%rsp)
    5a4f:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    5a53:	0f 8e 9e 00 00 00    	jle    5af7 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0xc7>
    5a59:	bb 01 00 00 00       	mov    $0x1,%ebx
    5a5e:	66 90                	xchg   %ax,%ax
    5a60:	01 db                	add    %ebx,%ebx
    5a62:	39 d8                	cmp    %ebx,%eax
    5a64:	7f fa                	jg     5a60 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0x30>
    5a66:	d1 fb                	sar    %ebx
    5a68:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    5a6d:	44 0f b6 6c 24 08    	movzbl 0x8(%rsp),%r13d
    5a73:	45 89 f7             	mov    %r14d,%r15d
    5a76:	41 29 dc             	sub    %ebx,%r12d
    5a79:	45 39 e6             	cmp    %r12d,%r14d
    5a7c:	7d 1d                	jge    5a9b <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0x6b>
    5a7e:	66 90                	xchg   %ax,%ax
    5a80:	42 8d 0c 3b          	lea    (%rbx,%r15,1),%ecx
    5a84:	44 89 fa             	mov    %r15d,%edx
    5a87:	44 89 ee             	mov    %r13d,%esi
    5a8a:	48 89 ef             	mov    %rbp,%rdi
    5a8d:	41 83 c7 01          	add    $0x1,%r15d
    5a91:	e8 7a fc ff ff       	call   5710 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5a96:	45 39 e7             	cmp    %r12d,%r15d
    5a99:	75 e5                	jne    5a80 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0x50>
    5a9b:	41 8d 46 01          	lea    0x1(%r14),%eax
    5a9f:	44 01 f3             	add    %r14d,%ebx
    5aa2:	39 c3                	cmp    %eax,%ebx
    5aa4:	7e 12                	jle    5ab8 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0x88>
    5aa6:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    5aab:	89 d9                	mov    %ebx,%ecx
    5aad:	44 89 f2             	mov    %r14d,%edx
    5ab0:	48 89 ef             	mov    %rbp,%rdi
    5ab3:	e8 78 ff ff ff       	call   5a30 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10>
    5ab8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    5abc:	8d 43 01             	lea    0x1(%rbx),%eax
    5abf:	39 c2                	cmp    %eax,%edx
    5ac1:	7e 25                	jle    5ae8 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0xb8>
    5ac3:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    5ac8:	48 83 c4 18          	add    $0x18,%rsp
    5acc:	89 d1                	mov    %edx,%ecx
    5ace:	48 89 ef             	mov    %rbp,%rdi
    5ad1:	89 da                	mov    %ebx,%edx
    5ad3:	5b                   	pop    %rbx
    5ad4:	5d                   	pop    %rbp
    5ad5:	41 5c                	pop    %r12
    5ad7:	41 5d                	pop    %r13
    5ad9:	41 5e                	pop    %r14
    5adb:	41 5f                	pop    %r15
    5add:	e9 4e ff ff ff       	jmp    5a30 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10>
    5ae2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5ae8:	48 83 c4 18          	add    $0x18,%rsp
    5aec:	5b                   	pop    %rbx
    5aed:	5d                   	pop    %rbp
    5aee:	41 5c                	pop    %r12
    5af0:	41 5d                	pop    %r13
    5af2:	41 5e                	pop    %r14
    5af4:	41 5f                	pop    %r15
    5af6:	c3                   	ret    
    5af7:	31 db                	xor    %ebx,%ebx
    5af9:	e9 6a ff ff ff       	jmp    5a68 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10+0x38>
    5afe:	66 90                	xchg   %ax,%ax

0000000000005b00 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    5b00:	83 f9 ff             	cmp    $0xffffffff,%ecx
    5b03:	41 56                	push   %r14
    5b05:	41 89 f6             	mov    %esi,%r14d
    5b08:	41 55                	push   %r13
    5b0a:	41 89 cd             	mov    %ecx,%r13d
    5b0d:	41 54                	push   %r12
    5b0f:	49 89 fc             	mov    %rdi,%r12
    5b12:	55                   	push   %rbp
    5b13:	89 d5                	mov    %edx,%ebp
    5b15:	53                   	push   %rbx
    5b16:	74 78                	je     5b90 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x90>
    5b18:	44 89 e8             	mov    %r13d,%eax
    5b1b:	29 e8                	sub    %ebp,%eax
    5b1d:	89 c3                	mov    %eax,%ebx
    5b1f:	c1 eb 1f             	shr    $0x1f,%ebx
    5b22:	01 d8                	add    %ebx,%eax
    5b24:	d1 f8                	sar    %eax
    5b26:	8d 1c 28             	lea    (%rax,%rbp,1),%ebx
    5b29:	39 dd                	cmp    %ebx,%ebp
    5b2b:	74 32                	je     5b5f <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x5f>
    5b2d:	44 89 f6             	mov    %r14d,%esi
    5b30:	89 d9                	mov    %ebx,%ecx
    5b32:	89 ea                	mov    %ebp,%edx
    5b34:	83 f6 01             	xor    $0x1,%esi
    5b37:	4c 89 e7             	mov    %r12,%rdi
    5b3a:	45 0f b6 f6          	movzbl %r14b,%r14d
    5b3e:	40 0f b6 f6          	movzbl %sil,%esi
    5b42:	e8 b9 ff ff ff       	call   5b00 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5b47:	44 89 e9             	mov    %r13d,%ecx
    5b4a:	89 da                	mov    %ebx,%edx
    5b4c:	44 89 f6             	mov    %r14d,%esi
    5b4f:	4c 89 e7             	mov    %r12,%rdi
    5b52:	e8 a9 ff ff ff       	call   5b00 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5b57:	8d 45 01             	lea    0x1(%rbp),%eax
    5b5a:	41 39 c5             	cmp    %eax,%r13d
    5b5d:	7f 11                	jg     5b70 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x70>
    5b5f:	5b                   	pop    %rbx
    5b60:	5d                   	pop    %rbp
    5b61:	41 5c                	pop    %r12
    5b63:	41 5d                	pop    %r13
    5b65:	41 5e                	pop    %r14
    5b67:	c3                   	ret    
    5b68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b6f:	00 
    5b70:	5b                   	pop    %rbx
    5b71:	44 89 e9             	mov    %r13d,%ecx
    5b74:	89 ea                	mov    %ebp,%edx
    5b76:	44 89 f6             	mov    %r14d,%esi
    5b79:	5d                   	pop    %rbp
    5b7a:	4c 89 e7             	mov    %r12,%rdi
    5b7d:	41 5c                	pop    %r12
    5b7f:	41 5d                	pop    %r13
    5b81:	41 5e                	pop    %r14
    5b83:	e9 a8 fe ff ff       	jmp    5a30 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii.part.10>
    5b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5b8f:	00 
    5b90:	44 8b 6f 2c          	mov    0x2c(%rdi),%r13d
    5b94:	eb 82                	jmp    5b18 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii+0x18>
    5b96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b9d:	00 00 00 

0000000000005ba0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    5ba0:	41 57                	push   %r15
    5ba2:	41 56                	push   %r14
    5ba4:	41 89 d3             	mov    %edx,%r11d
    5ba7:	41 55                	push   %r13
    5ba9:	41 54                	push   %r12
    5bab:	49 89 fe             	mov    %rdi,%r14
    5bae:	55                   	push   %rbp
    5baf:	53                   	push   %rbx
    5bb0:	41 89 cf             	mov    %ecx,%r15d
    5bb3:	48 83 ec 48          	sub    $0x48,%rsp
    5bb7:	85 d2                	test   %edx,%edx
    5bb9:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    5bbd:	78 05                	js     5bc4 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x24>
    5bbf:	3b 57 2c             	cmp    0x2c(%rdi),%edx
    5bc2:	7c 29                	jl     5bed <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x4d>
    5bc4:	48 8d 0d 1d c6 01 00 	lea    0x1c61d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5bcb:	48 8d 15 2e c7 01 00 	lea    0x1c72e(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5bd2:	48 8d 3d 22 c6 01 00 	lea    0x1c622(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5bd9:	be 3b 00 00 00       	mov    $0x3b,%esi
    5bde:	44 89 5c 24 04       	mov    %r11d,0x4(%rsp)
    5be3:	e8 f8 5d 00 00       	call   b9e0 <__assert>
    5be8:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
    5bed:	49 8b 0e             	mov    (%r14),%rcx
    5bf0:	49 63 db             	movslq %r11d,%rbx
    5bf3:	48 c1 e3 05          	shl    $0x5,%rbx
    5bf7:	45 85 ff             	test   %r15d,%r15d
    5bfa:	48 8d 14 19          	lea    (%rcx,%rbx,1),%rdx
    5bfe:	8b 02                	mov    (%rdx),%eax
    5c00:	44 8b 62 08          	mov    0x8(%rdx),%r12d
    5c04:	89 44 24 14          	mov    %eax,0x14(%rsp)
    5c08:	8b 42 04             	mov    0x4(%rdx),%eax
    5c0b:	89 44 24 10          	mov    %eax,0x10(%rsp)
    5c0f:	8b 42 0c             	mov    0xc(%rdx),%eax
    5c12:	89 44 24 38          	mov    %eax,0x38(%rsp)
    5c16:	8b 42 10             	mov    0x10(%rdx),%eax
    5c19:	89 44 24 34          	mov    %eax,0x34(%rsp)
    5c1d:	8b 42 14             	mov    0x14(%rdx),%eax
    5c20:	89 44 24 30          	mov    %eax,0x30(%rsp)
    5c24:	8b 42 18             	mov    0x18(%rdx),%eax
    5c27:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    5c2b:	8b 42 1c             	mov    0x1c(%rdx),%eax
    5c2e:	89 44 24 08          	mov    %eax,0x8(%rsp)
    5c32:	78 06                	js     5c3a <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x9a>
    5c34:	45 3b 7e 2c          	cmp    0x2c(%r14),%r15d
    5c38:	7c 2c                	jl     5c66 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0xc6>
    5c3a:	48 8d 0d a7 c5 01 00 	lea    0x1c5a7(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5c41:	48 8d 15 b8 c6 01 00 	lea    0x1c6b8(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    5c48:	48 8d 3d ac c5 01 00 	lea    0x1c5ac(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5c4f:	be 3b 00 00 00       	mov    $0x3b,%esi
    5c54:	44 89 5c 24 04       	mov    %r11d,0x4(%rsp)
    5c59:	e8 82 5d 00 00       	call   b9e0 <__assert>
    5c5e:	49 8b 0e             	mov    (%r14),%rcx
    5c61:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
    5c66:	49 63 ef             	movslq %r15d,%rbp
    5c69:	48 c1 e5 05          	shl    $0x5,%rbp
    5c6d:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
    5c71:	8b 02                	mov    (%rdx),%eax
    5c73:	44 8b 6a 08          	mov    0x8(%rdx),%r13d
    5c77:	89 44 24 28          	mov    %eax,0x28(%rsp)
    5c7b:	8b 42 04             	mov    0x4(%rdx),%eax
    5c7e:	45 39 ec             	cmp    %r13d,%r12d
    5c81:	89 44 24 24          	mov    %eax,0x24(%rsp)
    5c85:	8b 42 0c             	mov    0xc(%rdx),%eax
    5c88:	89 44 24 18          	mov    %eax,0x18(%rsp)
    5c8c:	8b 42 10             	mov    0x10(%rdx),%eax
    5c8f:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    5c93:	8b 42 14             	mov    0x14(%rdx),%eax
    5c96:	89 44 24 20          	mov    %eax,0x20(%rsp)
    5c9a:	8b 42 18             	mov    0x18(%rdx),%eax
    5c9d:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    5ca1:	8b 42 1c             	mov    0x1c(%rdx),%eax
    5ca4:	0f 9c c2             	setl   %dl
    5ca7:	45 39 ec             	cmp    %r13d,%r12d
    5caa:	89 44 24 04          	mov    %eax,0x4(%rsp)
    5cae:	0f 84 ec 00 00 00    	je     5da0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x200>
    5cb4:	83 f2 01             	xor    $0x1,%edx
    5cb7:	3a 54 24 0c          	cmp    0xc(%rsp),%dl
    5cbb:	0f 84 f5 00 00 00    	je     5db6 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x216>
    5cc1:	45 85 db             	test   %r11d,%r11d
    5cc4:	78 06                	js     5ccc <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x12c>
    5cc6:	45 3b 5e 2c          	cmp    0x2c(%r14),%r11d
    5cca:	7c 22                	jl     5cee <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x14e>
    5ccc:	48 8d 0d 15 c5 01 00 	lea    0x1c515(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5cd3:	48 8d 15 20 c6 01 00 	lea    0x1c620(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5cda:	48 8d 3d 1a c5 01 00 	lea    0x1c51a(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5ce1:	be 48 00 00 00       	mov    $0x48,%esi
    5ce6:	e8 f5 5c 00 00       	call   b9e0 <__assert>
    5ceb:	49 8b 0e             	mov    (%r14),%rcx
    5cee:	8b 44 24 14          	mov    0x14(%rsp),%eax
    5cf2:	48 01 cb             	add    %rcx,%rbx
    5cf5:	45 85 ff             	test   %r15d,%r15d
    5cf8:	44 89 63 08          	mov    %r12d,0x8(%rbx)
    5cfc:	89 03                	mov    %eax,(%rbx)
    5cfe:	8b 44 24 10          	mov    0x10(%rsp),%eax
    5d02:	89 43 04             	mov    %eax,0x4(%rbx)
    5d05:	8b 44 24 38          	mov    0x38(%rsp),%eax
    5d09:	89 43 0c             	mov    %eax,0xc(%rbx)
    5d0c:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5d10:	89 43 10             	mov    %eax,0x10(%rbx)
    5d13:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5d17:	89 43 14             	mov    %eax,0x14(%rbx)
    5d1a:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    5d1e:	89 43 18             	mov    %eax,0x18(%rbx)
    5d21:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5d25:	89 43 1c             	mov    %eax,0x1c(%rbx)
    5d28:	78 06                	js     5d30 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x190>
    5d2a:	45 3b 7e 2c          	cmp    0x2c(%r14),%r15d
    5d2e:	7c 22                	jl     5d52 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x1b2>
    5d30:	48 8d 0d b1 c4 01 00 	lea    0x1c4b1(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5d37:	48 8d 15 bc c5 01 00 	lea    0x1c5bc(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5d3e:	48 8d 3d b6 c4 01 00 	lea    0x1c4b6(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5d45:	be 48 00 00 00       	mov    $0x48,%esi
    5d4a:	e8 91 5c 00 00       	call   b9e0 <__assert>
    5d4f:	49 8b 0e             	mov    (%r14),%rcx
    5d52:	8b 44 24 28          	mov    0x28(%rsp),%eax
    5d56:	48 01 cd             	add    %rcx,%rbp
    5d59:	44 89 6d 08          	mov    %r13d,0x8(%rbp)
    5d5d:	89 45 00             	mov    %eax,0x0(%rbp)
    5d60:	8b 44 24 24          	mov    0x24(%rsp),%eax
    5d64:	89 45 04             	mov    %eax,0x4(%rbp)
    5d67:	8b 44 24 18          	mov    0x18(%rsp),%eax
    5d6b:	89 45 0c             	mov    %eax,0xc(%rbp)
    5d6e:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5d72:	89 45 10             	mov    %eax,0x10(%rbp)
    5d75:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5d79:	89 45 14             	mov    %eax,0x14(%rbp)
    5d7c:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    5d80:	89 45 18             	mov    %eax,0x18(%rbp)
    5d83:	8b 44 24 04          	mov    0x4(%rsp),%eax
    5d87:	89 45 1c             	mov    %eax,0x1c(%rbp)
    5d8a:	48 83 c4 48          	add    $0x48,%rsp
    5d8e:	5b                   	pop    %rbx
    5d8f:	5d                   	pop    %rbp
    5d90:	41 5c                	pop    %r12
    5d92:	41 5d                	pop    %r13
    5d94:	41 5e                	pop    %r14
    5d96:	41 5f                	pop    %r15
    5d98:	c3                   	ret    
    5d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5da0:	8b 74 24 08          	mov    0x8(%rsp),%esi
    5da4:	39 f0                	cmp    %esi,%eax
    5da6:	0f 9f c2             	setg   %dl
    5da9:	83 f2 01             	xor    $0x1,%edx
    5dac:	3a 54 24 0c          	cmp    0xc(%rsp),%dl
    5db0:	0f 85 0b ff ff ff    	jne    5cc1 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x121>
    5db6:	45 85 db             	test   %r11d,%r11d
    5db9:	78 06                	js     5dc1 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x221>
    5dbb:	45 3b 5e 2c          	cmp    0x2c(%r14),%r11d
    5dbf:	7c 22                	jl     5de3 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x243>
    5dc1:	48 8d 0d 20 c4 01 00 	lea    0x1c420(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5dc8:	48 8d 15 2b c5 01 00 	lea    0x1c52b(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5dcf:	48 8d 3d 25 c4 01 00 	lea    0x1c425(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5dd6:	be 48 00 00 00       	mov    $0x48,%esi
    5ddb:	e8 00 5c 00 00       	call   b9e0 <__assert>
    5de0:	49 8b 0e             	mov    (%r14),%rcx
    5de3:	8b 44 24 28          	mov    0x28(%rsp),%eax
    5de7:	48 01 cb             	add    %rcx,%rbx
    5dea:	45 85 ff             	test   %r15d,%r15d
    5ded:	44 89 6b 08          	mov    %r13d,0x8(%rbx)
    5df1:	89 03                	mov    %eax,(%rbx)
    5df3:	8b 44 24 24          	mov    0x24(%rsp),%eax
    5df7:	89 43 04             	mov    %eax,0x4(%rbx)
    5dfa:	8b 44 24 18          	mov    0x18(%rsp),%eax
    5dfe:	89 43 0c             	mov    %eax,0xc(%rbx)
    5e01:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    5e05:	89 43 10             	mov    %eax,0x10(%rbx)
    5e08:	8b 44 24 20          	mov    0x20(%rsp),%eax
    5e0c:	89 43 14             	mov    %eax,0x14(%rbx)
    5e0f:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    5e13:	89 43 18             	mov    %eax,0x18(%rbx)
    5e16:	8b 44 24 04          	mov    0x4(%rsp),%eax
    5e1a:	89 43 1c             	mov    %eax,0x1c(%rbx)
    5e1d:	78 06                	js     5e25 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x285>
    5e1f:	45 39 7e 2c          	cmp    %r15d,0x2c(%r14)
    5e23:	7f 22                	jg     5e47 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x2a7>
    5e25:	48 8d 0d bc c3 01 00 	lea    0x1c3bc(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    5e2c:	48 8d 15 c7 c4 01 00 	lea    0x1c4c7(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    5e33:	48 8d 3d c1 c3 01 00 	lea    0x1c3c1(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    5e3a:	be 48 00 00 00       	mov    $0x48,%esi
    5e3f:	e8 9c 5b 00 00       	call   b9e0 <__assert>
    5e44:	49 8b 0e             	mov    (%r14),%rcx
    5e47:	8b 44 24 14          	mov    0x14(%rsp),%eax
    5e4b:	48 01 cd             	add    %rcx,%rbp
    5e4e:	44 89 65 08          	mov    %r12d,0x8(%rbp)
    5e52:	89 45 00             	mov    %eax,0x0(%rbp)
    5e55:	8b 44 24 10          	mov    0x10(%rsp),%eax
    5e59:	89 45 04             	mov    %eax,0x4(%rbp)
    5e5c:	8b 44 24 38          	mov    0x38(%rsp),%eax
    5e60:	89 45 0c             	mov    %eax,0xc(%rbp)
    5e63:	8b 44 24 34          	mov    0x34(%rsp),%eax
    5e67:	89 45 10             	mov    %eax,0x10(%rbp)
    5e6a:	8b 44 24 30          	mov    0x30(%rsp),%eax
    5e6e:	89 45 14             	mov    %eax,0x14(%rbp)
    5e71:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    5e75:	89 45 18             	mov    %eax,0x18(%rbp)
    5e78:	8b 44 24 08          	mov    0x8(%rsp),%eax
    5e7c:	89 45 1c             	mov    %eax,0x1c(%rbp)
    5e7f:	48 83 c4 48          	add    $0x48,%rsp
    5e83:	5b                   	pop    %rbx
    5e84:	5d                   	pop    %rbp
    5e85:	41 5c                	pop    %r12
    5e87:	41 5d                	pop    %r13
    5e89:	41 5e                	pop    %r14
    5e8b:	41 5f                	pop    %r15
    5e8d:	c3                   	ret    
    5e8e:	66 90                	xchg   %ax,%ax

0000000000005e90 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13>:
    5e90:	41 57                	push   %r15
    5e92:	89 c8                	mov    %ecx,%eax
    5e94:	41 56                	push   %r14
    5e96:	41 55                	push   %r13
    5e98:	41 54                	push   %r12
    5e9a:	29 d0                	sub    %edx,%eax
    5e9c:	55                   	push   %rbp
    5e9d:	53                   	push   %rbx
    5e9e:	48 89 fd             	mov    %rdi,%rbp
    5ea1:	41 89 d6             	mov    %edx,%r14d
    5ea4:	48 83 ec 18          	sub    $0x18,%rsp
    5ea8:	83 f8 01             	cmp    $0x1,%eax
    5eab:	89 74 24 08          	mov    %esi,0x8(%rsp)
    5eaf:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    5eb3:	0f 8e 9e 00 00 00    	jle    5f57 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0xc7>
    5eb9:	bb 01 00 00 00       	mov    $0x1,%ebx
    5ebe:	66 90                	xchg   %ax,%ax
    5ec0:	01 db                	add    %ebx,%ebx
    5ec2:	39 d8                	cmp    %ebx,%eax
    5ec4:	7f fa                	jg     5ec0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0x30>
    5ec6:	d1 fb                	sar    %ebx
    5ec8:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    5ecd:	44 0f b6 6c 24 08    	movzbl 0x8(%rsp),%r13d
    5ed3:	45 89 f7             	mov    %r14d,%r15d
    5ed6:	41 29 dc             	sub    %ebx,%r12d
    5ed9:	45 39 e6             	cmp    %r12d,%r14d
    5edc:	7d 1d                	jge    5efb <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0x6b>
    5ede:	66 90                	xchg   %ax,%ax
    5ee0:	42 8d 0c 3b          	lea    (%rbx,%r15,1),%ecx
    5ee4:	44 89 fa             	mov    %r15d,%edx
    5ee7:	44 89 ee             	mov    %r13d,%esi
    5eea:	48 89 ef             	mov    %rbp,%rdi
    5eed:	41 83 c7 01          	add    $0x1,%r15d
    5ef1:	e8 aa fc ff ff       	call   5ba0 <_Z15bitonic_compareIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5ef6:	45 39 e7             	cmp    %r12d,%r15d
    5ef9:	75 e5                	jne    5ee0 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0x50>
    5efb:	41 8d 46 01          	lea    0x1(%r14),%eax
    5eff:	44 01 f3             	add    %r14d,%ebx
    5f02:	39 c3                	cmp    %eax,%ebx
    5f04:	7e 12                	jle    5f18 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0x88>
    5f06:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    5f0b:	89 d9                	mov    %ebx,%ecx
    5f0d:	44 89 f2             	mov    %r14d,%edx
    5f10:	48 89 ef             	mov    %rbp,%rdi
    5f13:	e8 78 ff ff ff       	call   5e90 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13>
    5f18:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    5f1c:	8d 43 01             	lea    0x1(%rbx),%eax
    5f1f:	39 c2                	cmp    %eax,%edx
    5f21:	7e 25                	jle    5f48 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0xb8>
    5f23:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    5f28:	48 83 c4 18          	add    $0x18,%rsp
    5f2c:	89 d1                	mov    %edx,%ecx
    5f2e:	48 89 ef             	mov    %rbp,%rdi
    5f31:	89 da                	mov    %ebx,%edx
    5f33:	5b                   	pop    %rbx
    5f34:	5d                   	pop    %rbp
    5f35:	41 5c                	pop    %r12
    5f37:	41 5d                	pop    %r13
    5f39:	41 5e                	pop    %r14
    5f3b:	41 5f                	pop    %r15
    5f3d:	e9 4e ff ff ff       	jmp    5e90 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13>
    5f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5f48:	48 83 c4 18          	add    $0x18,%rsp
    5f4c:	5b                   	pop    %rbx
    5f4d:	5d                   	pop    %rbp
    5f4e:	41 5c                	pop    %r12
    5f50:	41 5d                	pop    %r13
    5f52:	41 5e                	pop    %r14
    5f54:	41 5f                	pop    %r15
    5f56:	c3                   	ret    
    5f57:	31 db                	xor    %ebx,%ebx
    5f59:	e9 6a ff ff ff       	jmp    5ec8 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13+0x38>
    5f5e:	66 90                	xchg   %ax,%ax

0000000000005f60 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>:
    5f60:	83 f9 ff             	cmp    $0xffffffff,%ecx
    5f63:	41 56                	push   %r14
    5f65:	41 89 f6             	mov    %esi,%r14d
    5f68:	41 55                	push   %r13
    5f6a:	41 89 cd             	mov    %ecx,%r13d
    5f6d:	41 54                	push   %r12
    5f6f:	49 89 fc             	mov    %rdi,%r12
    5f72:	55                   	push   %rbp
    5f73:	89 d5                	mov    %edx,%ebp
    5f75:	53                   	push   %rbx
    5f76:	74 78                	je     5ff0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x90>
    5f78:	44 89 e8             	mov    %r13d,%eax
    5f7b:	29 e8                	sub    %ebp,%eax
    5f7d:	89 c3                	mov    %eax,%ebx
    5f7f:	c1 eb 1f             	shr    $0x1f,%ebx
    5f82:	01 d8                	add    %ebx,%eax
    5f84:	d1 f8                	sar    %eax
    5f86:	8d 1c 28             	lea    (%rax,%rbp,1),%ebx
    5f89:	39 dd                	cmp    %ebx,%ebp
    5f8b:	74 32                	je     5fbf <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x5f>
    5f8d:	44 89 f6             	mov    %r14d,%esi
    5f90:	89 d9                	mov    %ebx,%ecx
    5f92:	89 ea                	mov    %ebp,%edx
    5f94:	83 f6 01             	xor    $0x1,%esi
    5f97:	4c 89 e7             	mov    %r12,%rdi
    5f9a:	45 0f b6 f6          	movzbl %r14b,%r14d
    5f9e:	40 0f b6 f6          	movzbl %sil,%esi
    5fa2:	e8 b9 ff ff ff       	call   5f60 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5fa7:	44 89 e9             	mov    %r13d,%ecx
    5faa:	89 da                	mov    %ebx,%edx
    5fac:	44 89 f6             	mov    %r14d,%esi
    5faf:	4c 89 e7             	mov    %r12,%rdi
    5fb2:	e8 a9 ff ff ff       	call   5f60 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>
    5fb7:	8d 45 01             	lea    0x1(%rbp),%eax
    5fba:	41 39 c5             	cmp    %eax,%r13d
    5fbd:	7f 11                	jg     5fd0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x70>
    5fbf:	5b                   	pop    %rbx
    5fc0:	5d                   	pop    %rbp
    5fc1:	41 5c                	pop    %r12
    5fc3:	41 5d                	pop    %r13
    5fc5:	41 5e                	pop    %r14
    5fc7:	c3                   	ret    
    5fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5fcf:	00 
    5fd0:	5b                   	pop    %rbx
    5fd1:	44 89 e9             	mov    %r13d,%ecx
    5fd4:	89 ea                	mov    %ebp,%edx
    5fd6:	44 89 f6             	mov    %r14d,%esi
    5fd9:	5d                   	pop    %rbp
    5fda:	4c 89 e7             	mov    %r12,%rdi
    5fdd:	41 5c                	pop    %r12
    5fdf:	41 5d                	pop    %r13
    5fe1:	41 5e                	pop    %r14
    5fe3:	e9 a8 fe ff ff       	jmp    5e90 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii.part.13>
    5fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5fef:	00 
    5ff0:	44 8b 6f 2c          	mov    0x2c(%rdi),%r13d
    5ff4:	eb 82                	jmp    5f78 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii+0x18>
    5ff6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5ffd:	00 00 00 

0000000000006000 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>:
    6000:	41 57                	push   %r15
    6002:	41 56                	push   %r14
    6004:	41 89 d0             	mov    %edx,%r8d
    6007:	41 55                	push   %r13
    6009:	41 54                	push   %r12
    600b:	41 89 cf             	mov    %ecx,%r15d
    600e:	55                   	push   %rbp
    600f:	53                   	push   %rbx
    6010:	49 89 fc             	mov    %rdi,%r12
    6013:	48 83 ec 48          	sub    $0x48,%rsp
    6017:	85 d2                	test   %edx,%edx
    6019:	89 74 24 08          	mov    %esi,0x8(%rsp)
    601d:	78 05                	js     6024 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x24>
    601f:	3b 57 2c             	cmp    0x2c(%rdi),%edx
    6022:	7c 29                	jl     604d <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x4d>
    6024:	48 8d 0d bd c1 01 00 	lea    0x1c1bd(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    602b:	48 8d 15 ce c2 01 00 	lea    0x1c2ce(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6032:	48 8d 3d c2 c1 01 00 	lea    0x1c1c2(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6039:	be 3b 00 00 00       	mov    $0x3b,%esi
    603e:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    6043:	e8 98 59 00 00       	call   b9e0 <__assert>
    6048:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    604d:	49 8b 0c 24          	mov    (%r12),%rcx
    6051:	49 63 d8             	movslq %r8d,%rbx
    6054:	48 c1 e3 05          	shl    $0x5,%rbx
    6058:	45 85 ff             	test   %r15d,%r15d
    605b:	48 8d 14 19          	lea    (%rcx,%rbx,1),%rdx
    605f:	8b 42 04             	mov    0x4(%rdx),%eax
    6062:	44 8b 32             	mov    (%rdx),%r14d
    6065:	44 8b 6a 18          	mov    0x18(%rdx),%r13d
    6069:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    606d:	8b 42 08             	mov    0x8(%rdx),%eax
    6070:	89 44 24 30          	mov    %eax,0x30(%rsp)
    6074:	8b 42 0c             	mov    0xc(%rdx),%eax
    6077:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    607b:	8b 42 10             	mov    0x10(%rdx),%eax
    607e:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6082:	8b 42 14             	mov    0x14(%rdx),%eax
    6085:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6089:	8b 42 1c             	mov    0x1c(%rdx),%eax
    608c:	89 44 24 20          	mov    %eax,0x20(%rsp)
    6090:	78 07                	js     6099 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x99>
    6092:	45 3b 7c 24 2c       	cmp    0x2c(%r12),%r15d
    6097:	7c 2d                	jl     60c6 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0xc6>
    6099:	48 8d 0d 48 c1 01 00 	lea    0x1c148(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    60a0:	48 8d 15 59 c2 01 00 	lea    0x1c259(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    60a7:	48 8d 3d 4d c1 01 00 	lea    0x1c14d(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    60ae:	be 3b 00 00 00       	mov    $0x3b,%esi
    60b3:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    60b8:	e8 23 59 00 00       	call   b9e0 <__assert>
    60bd:	49 8b 0c 24          	mov    (%r12),%rcx
    60c1:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
    60c6:	49 63 ef             	movslq %r15d,%rbp
    60c9:	48 c1 e5 05          	shl    $0x5,%rbp
    60cd:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    60d1:	48 8d 14 29          	lea    (%rcx,%rbp,1),%rdx
    60d5:	8b 02                	mov    (%rdx),%eax
    60d7:	8b 72 1c             	mov    0x1c(%rdx),%esi
    60da:	89 c7                	mov    %eax,%edi
    60dc:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    60e0:	8b 42 04             	mov    0x4(%rdx),%eax
    60e3:	89 74 24 38          	mov    %esi,0x38(%rsp)
    60e7:	89 44 24 18          	mov    %eax,0x18(%rsp)
    60eb:	8b 42 08             	mov    0x8(%rdx),%eax
    60ee:	89 44 24 34          	mov    %eax,0x34(%rsp)
    60f2:	8b 42 0c             	mov    0xc(%rdx),%eax
    60f5:	89 44 24 10          	mov    %eax,0x10(%rsp)
    60f9:	8b 42 10             	mov    0x10(%rdx),%eax
    60fc:	89 44 24 14          	mov    %eax,0x14(%rsp)
    6100:	8b 42 14             	mov    0x14(%rdx),%eax
    6103:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    6107:	8b 42 18             	mov    0x18(%rdx),%eax
    610a:	0f 84 f8 01 00 00    	je     6308 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x308>
    6110:	45 85 f6             	test   %r14d,%r14d
    6113:	0f 84 ef 01 00 00    	je     6308 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x308>
    6119:	85 ff                	test   %edi,%edi
    611b:	40 0f 94 c6          	sete   %sil
    611f:	83 f8 ff             	cmp    $0xffffffff,%eax
    6122:	0f 94 c2             	sete   %dl
    6125:	40 08 f2             	or     %sil,%dl
    6128:	75 06                	jne    6130 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x130>
    612a:	41 39 c5             	cmp    %eax,%r13d
    612d:	0f 9c c2             	setl   %dl
    6130:	83 f2 01             	xor    $0x1,%edx
    6133:	3a 54 24 08          	cmp    0x8(%rsp),%dl
    6137:	0f 84 eb 00 00 00    	je     6228 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x228>
    613d:	45 85 c0             	test   %r8d,%r8d
    6140:	78 07                	js     6149 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x149>
    6142:	45 3b 44 24 2c       	cmp    0x2c(%r12),%r8d
    6147:	7c 2b                	jl     6174 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x174>
    6149:	48 8d 0d 98 c0 01 00 	lea    0x1c098(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6150:	48 8d 15 a3 c1 01 00 	lea    0x1c1a3(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6157:	48 8d 3d 9d c0 01 00 	lea    0x1c09d(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    615e:	be 48 00 00 00       	mov    $0x48,%esi
    6163:	89 44 24 08          	mov    %eax,0x8(%rsp)
    6167:	e8 74 58 00 00       	call   b9e0 <__assert>
    616c:	49 8b 0c 24          	mov    (%r12),%rcx
    6170:	8b 44 24 08          	mov    0x8(%rsp),%eax
    6174:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    6178:	8b 7c 24 30          	mov    0x30(%rsp),%edi
    617c:	48 01 cb             	add    %rcx,%rbx
    617f:	45 85 ff             	test   %r15d,%r15d
    6182:	44 89 33             	mov    %r14d,(%rbx)
    6185:	44 89 6b 18          	mov    %r13d,0x18(%rbx)
    6189:	89 73 04             	mov    %esi,0x4(%rbx)
    618c:	89 7b 08             	mov    %edi,0x8(%rbx)
    618f:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
    6193:	8b 7c 24 28          	mov    0x28(%rsp),%edi
    6197:	89 73 0c             	mov    %esi,0xc(%rbx)
    619a:	89 7b 10             	mov    %edi,0x10(%rbx)
    619d:	8b 74 24 24          	mov    0x24(%rsp),%esi
    61a1:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    61a5:	89 73 14             	mov    %esi,0x14(%rbx)
    61a8:	89 7b 1c             	mov    %edi,0x1c(%rbx)
    61ab:	78 07                	js     61b4 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x1b4>
    61ad:	45 3b 7c 24 2c       	cmp    0x2c(%r12),%r15d
    61b2:	7c 2b                	jl     61df <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x1df>
    61b4:	48 8d 0d 2d c0 01 00 	lea    0x1c02d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    61bb:	48 8d 15 38 c1 01 00 	lea    0x1c138(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    61c2:	48 8d 3d 32 c0 01 00 	lea    0x1c032(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    61c9:	be 48 00 00 00       	mov    $0x48,%esi
    61ce:	89 44 24 08          	mov    %eax,0x8(%rsp)
    61d2:	e8 09 58 00 00       	call   b9e0 <__assert>
    61d7:	49 8b 0c 24          	mov    (%r12),%rcx
    61db:	8b 44 24 08          	mov    0x8(%rsp),%eax
    61df:	48 01 cd             	add    %rcx,%rbp
    61e2:	8b 74 24 18          	mov    0x18(%rsp),%esi
    61e6:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    61ea:	8b 7c 24 34          	mov    0x34(%rsp),%edi
    61ee:	89 45 18             	mov    %eax,0x18(%rbp)
    61f1:	8b 44 24 38          	mov    0x38(%rsp),%eax
    61f5:	89 4d 00             	mov    %ecx,0x0(%rbp)
    61f8:	89 75 04             	mov    %esi,0x4(%rbp)
    61fb:	89 7d 08             	mov    %edi,0x8(%rbp)
    61fe:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    6202:	8b 74 24 14          	mov    0x14(%rsp),%esi
    6206:	8b 7c 24 3c          	mov    0x3c(%rsp),%edi
    620a:	89 45 1c             	mov    %eax,0x1c(%rbp)
    620d:	89 4d 0c             	mov    %ecx,0xc(%rbp)
    6210:	89 75 10             	mov    %esi,0x10(%rbp)
    6213:	89 7d 14             	mov    %edi,0x14(%rbp)
    6216:	48 83 c4 48          	add    $0x48,%rsp
    621a:	5b                   	pop    %rbx
    621b:	5d                   	pop    %rbp
    621c:	41 5c                	pop    %r12
    621e:	41 5d                	pop    %r13
    6220:	41 5e                	pop    %r14
    6222:	41 5f                	pop    %r15
    6224:	c3                   	ret    
    6225:	0f 1f 00             	nopl   (%rax)
    6228:	45 85 c0             	test   %r8d,%r8d
    622b:	78 07                	js     6234 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x234>
    622d:	45 3b 44 24 2c       	cmp    0x2c(%r12),%r8d
    6232:	7c 2b                	jl     625f <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x25f>
    6234:	48 8d 0d ad bf 01 00 	lea    0x1bfad(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    623b:	48 8d 15 b8 c0 01 00 	lea    0x1c0b8(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6242:	48 8d 3d b2 bf 01 00 	lea    0x1bfb2(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6249:	be 48 00 00 00       	mov    $0x48,%esi
    624e:	89 44 24 08          	mov    %eax,0x8(%rsp)
    6252:	e8 89 57 00 00       	call   b9e0 <__assert>
    6257:	49 8b 0c 24          	mov    (%r12),%rcx
    625b:	8b 44 24 08          	mov    0x8(%rsp),%eax
    625f:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    6263:	8b 7c 24 18          	mov    0x18(%rsp),%edi
    6267:	48 01 cb             	add    %rcx,%rbx
    626a:	89 43 18             	mov    %eax,0x18(%rbx)
    626d:	8b 44 24 38          	mov    0x38(%rsp),%eax
    6271:	45 85 ff             	test   %r15d,%r15d
    6274:	89 33                	mov    %esi,(%rbx)
    6276:	89 7b 04             	mov    %edi,0x4(%rbx)
    6279:	8b 74 24 34          	mov    0x34(%rsp),%esi
    627d:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    6281:	89 43 1c             	mov    %eax,0x1c(%rbx)
    6284:	89 73 08             	mov    %esi,0x8(%rbx)
    6287:	89 7b 0c             	mov    %edi,0xc(%rbx)
    628a:	8b 74 24 14          	mov    0x14(%rsp),%esi
    628e:	8b 7c 24 3c          	mov    0x3c(%rsp),%edi
    6292:	89 73 10             	mov    %esi,0x10(%rbx)
    6295:	89 7b 14             	mov    %edi,0x14(%rbx)
    6298:	78 07                	js     62a1 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x2a1>
    629a:	45 39 7c 24 2c       	cmp    %r15d,0x2c(%r12)
    629f:	7f 23                	jg     62c4 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x2c4>
    62a1:	48 8d 0d 40 bf 01 00 	lea    0x1bf40(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    62a8:	48 8d 15 4b c0 01 00 	lea    0x1c04b(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    62af:	48 8d 3d 45 bf 01 00 	lea    0x1bf45(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    62b6:	be 48 00 00 00       	mov    $0x48,%esi
    62bb:	e8 20 57 00 00       	call   b9e0 <__assert>
    62c0:	49 8b 0c 24          	mov    (%r12),%rcx
    62c4:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    62c8:	48 01 cd             	add    %rcx,%rbp
    62cb:	44 89 75 00          	mov    %r14d,0x0(%rbp)
    62cf:	44 89 6d 18          	mov    %r13d,0x18(%rbp)
    62d3:	89 45 04             	mov    %eax,0x4(%rbp)
    62d6:	8b 44 24 30          	mov    0x30(%rsp),%eax
    62da:	89 45 08             	mov    %eax,0x8(%rbp)
    62dd:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    62e1:	89 45 0c             	mov    %eax,0xc(%rbp)
    62e4:	8b 44 24 28          	mov    0x28(%rsp),%eax
    62e8:	89 45 10             	mov    %eax,0x10(%rbp)
    62eb:	8b 44 24 24          	mov    0x24(%rsp),%eax
    62ef:	89 45 14             	mov    %eax,0x14(%rbp)
    62f2:	8b 44 24 20          	mov    0x20(%rsp),%eax
    62f6:	89 45 1c             	mov    %eax,0x1c(%rbp)
    62f9:	48 83 c4 48          	add    $0x48,%rsp
    62fd:	5b                   	pop    %rbx
    62fe:	5d                   	pop    %rbp
    62ff:	41 5c                	pop    %r12
    6301:	41 5d                	pop    %r13
    6303:	41 5e                	pop    %r14
    6305:	41 5f                	pop    %r15
    6307:	c3                   	ret    
    6308:	31 d2                	xor    %edx,%edx
    630a:	e9 21 fe ff ff       	jmp    6130 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x130>
    630f:	90                   	nop

0000000000006310 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17>:
    6310:	41 57                	push   %r15
    6312:	89 c8                	mov    %ecx,%eax
    6314:	41 56                	push   %r14
    6316:	41 55                	push   %r13
    6318:	41 54                	push   %r12
    631a:	29 d0                	sub    %edx,%eax
    631c:	55                   	push   %rbp
    631d:	53                   	push   %rbx
    631e:	48 89 fd             	mov    %rdi,%rbp
    6321:	41 89 d6             	mov    %edx,%r14d
    6324:	48 83 ec 18          	sub    $0x18,%rsp
    6328:	83 f8 01             	cmp    $0x1,%eax
    632b:	89 74 24 08          	mov    %esi,0x8(%rsp)
    632f:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    6333:	0f 8e 9e 00 00 00    	jle    63d7 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0xc7>
    6339:	bb 01 00 00 00       	mov    $0x1,%ebx
    633e:	66 90                	xchg   %ax,%ax
    6340:	01 db                	add    %ebx,%ebx
    6342:	39 d8                	cmp    %ebx,%eax
    6344:	7f fa                	jg     6340 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0x30>
    6346:	d1 fb                	sar    %ebx
    6348:	44 8b 64 24 0c       	mov    0xc(%rsp),%r12d
    634d:	44 0f b6 6c 24 08    	movzbl 0x8(%rsp),%r13d
    6353:	45 89 f7             	mov    %r14d,%r15d
    6356:	41 29 dc             	sub    %ebx,%r12d
    6359:	45 39 e6             	cmp    %r12d,%r14d
    635c:	7d 1d                	jge    637b <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0x6b>
    635e:	66 90                	xchg   %ax,%ax
    6360:	42 8d 0c 3b          	lea    (%rbx,%r15,1),%ecx
    6364:	44 89 fa             	mov    %r15d,%edx
    6367:	44 89 ee             	mov    %r13d,%esi
    636a:	48 89 ef             	mov    %rbp,%rdi
    636d:	41 83 c7 01          	add    $0x1,%r15d
    6371:	e8 8a fc ff ff       	call   6000 <_Z15bitonic_compareIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    6376:	45 39 e7             	cmp    %r12d,%r15d
    6379:	75 e5                	jne    6360 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0x50>
    637b:	41 8d 46 01          	lea    0x1(%r14),%eax
    637f:	44 01 f3             	add    %r14d,%ebx
    6382:	39 c3                	cmp    %eax,%ebx
    6384:	7e 12                	jle    6398 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0x88>
    6386:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    638b:	89 d9                	mov    %ebx,%ecx
    638d:	44 89 f2             	mov    %r14d,%edx
    6390:	48 89 ef             	mov    %rbp,%rdi
    6393:	e8 78 ff ff ff       	call   6310 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17>
    6398:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    639c:	8d 43 01             	lea    0x1(%rbx),%eax
    639f:	39 c2                	cmp    %eax,%edx
    63a1:	7e 25                	jle    63c8 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0xb8>
    63a3:	0f b6 74 24 08       	movzbl 0x8(%rsp),%esi
    63a8:	48 83 c4 18          	add    $0x18,%rsp
    63ac:	89 d1                	mov    %edx,%ecx
    63ae:	48 89 ef             	mov    %rbp,%rdi
    63b1:	89 da                	mov    %ebx,%edx
    63b3:	5b                   	pop    %rbx
    63b4:	5d                   	pop    %rbp
    63b5:	41 5c                	pop    %r12
    63b7:	41 5d                	pop    %r13
    63b9:	41 5e                	pop    %r14
    63bb:	41 5f                	pop    %r15
    63bd:	e9 4e ff ff ff       	jmp    6310 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17>
    63c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    63c8:	48 83 c4 18          	add    $0x18,%rsp
    63cc:	5b                   	pop    %rbx
    63cd:	5d                   	pop    %rbp
    63ce:	41 5c                	pop    %r12
    63d0:	41 5d                	pop    %r13
    63d2:	41 5e                	pop    %r14
    63d4:	41 5f                	pop    %r15
    63d6:	c3                   	ret    
    63d7:	31 db                	xor    %ebx,%ebx
    63d9:	e9 6a ff ff ff       	jmp    6348 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17+0x38>
    63de:	66 90                	xchg   %ax,%ax

00000000000063e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>:
    63e0:	83 f9 ff             	cmp    $0xffffffff,%ecx
    63e3:	41 56                	push   %r14
    63e5:	41 89 f6             	mov    %esi,%r14d
    63e8:	41 55                	push   %r13
    63ea:	41 89 cd             	mov    %ecx,%r13d
    63ed:	41 54                	push   %r12
    63ef:	49 89 fc             	mov    %rdi,%r12
    63f2:	55                   	push   %rbp
    63f3:	89 d5                	mov    %edx,%ebp
    63f5:	53                   	push   %rbx
    63f6:	74 78                	je     6470 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x90>
    63f8:	44 89 e8             	mov    %r13d,%eax
    63fb:	29 e8                	sub    %ebp,%eax
    63fd:	89 c3                	mov    %eax,%ebx
    63ff:	c1 eb 1f             	shr    $0x1f,%ebx
    6402:	01 d8                	add    %ebx,%eax
    6404:	d1 f8                	sar    %eax
    6406:	8d 1c 28             	lea    (%rax,%rbp,1),%ebx
    6409:	39 dd                	cmp    %ebx,%ebp
    640b:	74 32                	je     643f <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x5f>
    640d:	44 89 f6             	mov    %r14d,%esi
    6410:	89 d9                	mov    %ebx,%ecx
    6412:	89 ea                	mov    %ebp,%edx
    6414:	83 f6 01             	xor    $0x1,%esi
    6417:	4c 89 e7             	mov    %r12,%rdi
    641a:	45 0f b6 f6          	movzbl %r14b,%r14d
    641e:	40 0f b6 f6          	movzbl %sil,%esi
    6422:	e8 b9 ff ff ff       	call   63e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    6427:	44 89 e9             	mov    %r13d,%ecx
    642a:	89 da                	mov    %ebx,%edx
    642c:	44 89 f6             	mov    %r14d,%esi
    642f:	4c 89 e7             	mov    %r12,%rdi
    6432:	e8 a9 ff ff ff       	call   63e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    6437:	8d 45 01             	lea    0x1(%rbp),%eax
    643a:	41 39 c5             	cmp    %eax,%r13d
    643d:	7f 11                	jg     6450 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x70>
    643f:	5b                   	pop    %rbx
    6440:	5d                   	pop    %rbp
    6441:	41 5c                	pop    %r12
    6443:	41 5d                	pop    %r13
    6445:	41 5e                	pop    %r14
    6447:	c3                   	ret    
    6448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    644f:	00 
    6450:	5b                   	pop    %rbx
    6451:	44 89 e9             	mov    %r13d,%ecx
    6454:	89 ea                	mov    %ebp,%edx
    6456:	44 89 f6             	mov    %r14d,%esi
    6459:	5d                   	pop    %rbp
    645a:	4c 89 e7             	mov    %r12,%rdi
    645d:	41 5c                	pop    %r12
    645f:	41 5d                	pop    %r13
    6461:	41 5e                	pop    %r14
    6463:	e9 a8 fe ff ff       	jmp    6310 <_Z13bitonic_mergeIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii.part.17>
    6468:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    646f:	00 
    6470:	44 8b 6f 2c          	mov    0x2c(%rdi),%r13d
    6474:	eb 82                	jmp    63f8 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii+0x18>
    6476:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    647d:	00 00 00 

0000000000006480 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>:
    6480:	41 57                	push   %r15
    6482:	41 56                	push   %r14
    6484:	49 89 ff             	mov    %rdi,%r15
    6487:	41 55                	push   %r13
    6489:	41 54                	push   %r12
    648b:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    6490:	55                   	push   %rbp
    6491:	53                   	push   %rbx
    6492:	31 d2                	xor    %edx,%edx
    6494:	89 f3                	mov    %esi,%ebx
    6496:	48 83 ec 58          	sub    $0x58,%rsp
    649a:	89 74 24 4c          	mov    %esi,0x4c(%rsp)
    649e:	be 01 00 00 00       	mov    $0x1,%esi
    64a3:	e8 38 ff ff ff       	call   63e0 <_Z12bitonic_sortIN5Table10TableEntryEXadL_Z13ind_func_compIS1_XadL_ZNS0_9entry_indES1_EEEbT_S3_EEEvP8TraceMemIS3_Ebii>
    64a8:	49 8b 3f             	mov    (%r15),%rdi
    64ab:	48 63 f3             	movslq %ebx,%rsi
    64ae:	48 c1 e6 05          	shl    $0x5,%rsi
    64b2:	e8 b9 85 00 00       	call   ea70 <dlrealloc>
    64b7:	49 63 4f 2c          	movslq 0x2c(%r15),%rcx
    64bb:	49 89 07             	mov    %rax,(%r15)
    64be:	39 cb                	cmp    %ecx,%ebx
    64c0:	7e 1c                	jle    64de <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x5e>
    64c2:	8b 54 24 4c          	mov    0x4c(%rsp),%edx
    64c6:	31 f6                	xor    %esi,%esi
    64c8:	29 ca                	sub    %ecx,%edx
    64ca:	48 c1 e1 05          	shl    $0x5,%rcx
    64ce:	48 63 d2             	movslq %edx,%rdx
    64d1:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
    64d5:	48 c1 e2 05          	shl    $0x5,%rdx
    64d9:	e8 22 93 00 00       	call   f800 <memset>
    64de:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    64e2:	b8 01 00 00 00       	mov    $0x1,%eax
    64e7:	83 fb 01             	cmp    $0x1,%ebx
    64ea:	41 89 5f 2c          	mov    %ebx,0x2c(%r15)
    64ee:	0f 8e 7a 03 00 00    	jle    686e <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x3ee>
    64f4:	89 da                	mov    %ebx,%edx
    64f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    64fd:	00 00 00 
    6500:	01 c0                	add    %eax,%eax
    6502:	39 c2                	cmp    %eax,%edx
    6504:	7f fa                	jg     6500 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x80>
    6506:	d1 f8                	sar    %eax
    6508:	4d 89 fe             	mov    %r15,%r14
    650b:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
    650f:	90                   	nop
    6510:	8b 44 24 4c          	mov    0x4c(%rsp),%eax
    6514:	2b 44 24 3c          	sub    0x3c(%rsp),%eax
    6518:	83 e8 01             	sub    $0x1,%eax
    651b:	41 89 c5             	mov    %eax,%r13d
    651e:	0f 88 40 03 00 00    	js     6864 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x3e4>
    6524:	48 98                	cltq   
    6526:	48 c1 e0 05          	shl    $0x5,%rax
    652a:	49 89 c7             	mov    %rax,%r15
    652d:	48 63 44 24 3c       	movslq 0x3c(%rsp),%rax
    6532:	48 c1 e0 05          	shl    $0x5,%rax
    6536:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    653b:	e9 1e 01 00 00       	jmp    665e <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x1de>
    6540:	45 85 d2             	test   %r10d,%r10d
    6543:	74 2f                	je     6574 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xf4>
    6545:	83 3c 24 ff          	cmpl   $0xffffffff,(%rsp)
    6549:	74 29                	je     6574 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xf4>
    654b:	48 8d 0d d9 bc 01 00 	lea    0x1bcd9(%rip),%rcx        # 2222b <g_dyn_entry_table+0x22b>
    6552:	48 8d 15 77 bd 01 00 	lea    0x1bd77(%rip),%rdx        # 222d0 <_ZZ16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_EiE8__func__>
    6559:	48 8d 3d bc bc 01 00 	lea    0x1bcbc(%rip),%rdi        # 2221c <g_dyn_entry_table+0x21c>
    6560:	be 70 00 00 00       	mov    $0x70,%esi
    6565:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    656a:	e8 71 54 00 00       	call   b9e0 <__assert>
    656f:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
    6574:	45 39 6e 2c          	cmp    %r13d,0x2c(%r14)
    6578:	7f 29                	jg     65a3 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x123>
    657a:	48 8d 0d 67 bc 01 00 	lea    0x1bc67(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6581:	48 8d 15 72 bd 01 00 	lea    0x1bd72(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6588:	48 8d 3d 6c bc 01 00 	lea    0x1bc6c(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    658f:	be 48 00 00 00       	mov    $0x48,%esi
    6594:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    6599:	e8 42 54 00 00       	call   b9e0 <__assert>
    659e:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
    65a3:	49 8b 06             	mov    (%r14),%rax
    65a6:	8b 7c 24 18          	mov    0x18(%rsp),%edi
    65aa:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    65ae:	8b 74 24 10          	mov    0x10(%rsp),%esi
    65b2:	4a 8d 14 38          	lea    (%rax,%r15,1),%rdx
    65b6:	89 7a 04             	mov    %edi,0x4(%rdx)
    65b9:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    65bd:	89 4a 08             	mov    %ecx,0x8(%rdx)
    65c0:	89 72 0c             	mov    %esi,0xc(%rdx)
    65c3:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    65c7:	8b 34 24             	mov    (%rsp),%esi
    65ca:	89 7a 10             	mov    %edi,0x10(%rdx)
    65cd:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    65d1:	44 89 12             	mov    %r10d,(%rdx)
    65d4:	89 4a 14             	mov    %ecx,0x14(%rdx)
    65d7:	89 72 18             	mov    %esi,0x18(%rdx)
    65da:	89 7a 1c             	mov    %edi,0x1c(%rdx)
    65dd:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)
    65e1:	7f 22                	jg     6605 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x185>
    65e3:	48 8d 0d fe bb 01 00 	lea    0x1bbfe(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    65ea:	48 8d 15 09 bd 01 00 	lea    0x1bd09(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    65f1:	48 8d 3d 03 bc 01 00 	lea    0x1bc03(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    65f8:	be 48 00 00 00       	mov    $0x48,%esi
    65fd:	e8 de 53 00 00       	call   b9e0 <__assert>
    6602:	49 8b 06             	mov    (%r14),%rax
    6605:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    660a:	41 83 ed 01          	sub    $0x1,%r13d
    660e:	49 83 ef 20          	sub    $0x20,%r15
    6612:	49 01 c4             	add    %rax,%r12
    6615:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6619:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    661d:	41 89 2c 24          	mov    %ebp,(%r12)
    6621:	41 89 5c 24 18       	mov    %ebx,0x18(%r12)
    6626:	41 89 44 24 04       	mov    %eax,0x4(%r12)
    662b:	8b 44 24 24          	mov    0x24(%rsp),%eax
    662f:	41 89 44 24 08       	mov    %eax,0x8(%r12)
    6634:	8b 44 24 08          	mov    0x8(%rsp),%eax
    6638:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    663d:	8b 44 24 04          	mov    0x4(%rsp),%eax
    6641:	41 89 44 24 10       	mov    %eax,0x10(%r12)
    6646:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    664a:	41 89 44 24 14       	mov    %eax,0x14(%r12)
    664f:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6653:	41 89 44 24 1c       	mov    %eax,0x1c(%r12)
    6658:	0f 84 06 02 00 00    	je     6864 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x3e4>
    665e:	45 39 6e 2c          	cmp    %r13d,0x2c(%r14)
    6662:	7f 1f                	jg     6683 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x203>
    6664:	48 8d 0d 7d bb 01 00 	lea    0x1bb7d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    666b:	48 8d 15 8e bc 01 00 	lea    0x1bc8e(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6672:	48 8d 3d 82 bb 01 00 	lea    0x1bb82(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6679:	be 3b 00 00 00       	mov    $0x3b,%esi
    667e:	e8 5d 53 00 00       	call   b9e0 <__assert>
    6683:	4c 89 f8             	mov    %r15,%rax
    6686:	49 03 06             	add    (%r14),%rax
    6689:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
    668f:	8b 58 04             	mov    0x4(%rax),%ebx
    6692:	8b 28                	mov    (%rax),%ebp
    6694:	8b 78 08             	mov    0x8(%rax),%edi
    6697:	8b 48 0c             	mov    0xc(%rax),%ecx
    669a:	8b 70 10             	mov    0x10(%rax),%esi
    669d:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
    66a1:	8b 58 14             	mov    0x14(%rax),%ebx
    66a4:	85 ed                	test   %ebp,%ebp
    66a6:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    66aa:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    66ae:	89 74 24 04          	mov    %esi,0x4(%rsp)
    66b2:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
    66b6:	8b 58 18             	mov    0x18(%rax),%ebx
    66b9:	8b 40 1c             	mov    0x1c(%rax),%eax
    66bc:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    66c0:	74 2b                	je     66ed <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x26d>
    66c2:	3b 5c 24 4c          	cmp    0x4c(%rsp),%ebx
    66c6:	41 89 db             	mov    %ebx,%r11d
    66c9:	7c 22                	jl     66ed <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x26d>
    66cb:	48 8d 0d 3f bb 01 00 	lea    0x1bb3f(%rip),%rcx        # 22211 <g_dyn_entry_table+0x211>
    66d2:	48 8d 15 f7 bb 01 00 	lea    0x1bbf7(%rip),%rdx        # 222d0 <_ZZ16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_EiE8__func__>
    66d9:	48 8d 3d 3c bb 01 00 	lea    0x1bb3c(%rip),%rdi        # 2221c <g_dyn_entry_table+0x21c>
    66e0:	be 6d 00 00 00       	mov    $0x6d,%esi
    66e5:	e8 f6 52 00 00       	call   b9e0 <__assert>
    66ea:	41 89 db             	mov    %ebx,%r11d
    66ed:	8b 44 24 3c          	mov    0x3c(%rsp),%eax
    66f1:	46 8d 24 28          	lea    (%rax,%r13,1),%r12d
    66f5:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)
    66f9:	7f 27                	jg     6722 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x2a2>
    66fb:	48 8d 0d e6 ba 01 00 	lea    0x1bae6(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6702:	48 8d 15 f7 bb 01 00 	lea    0x1bbf7(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6709:	48 8d 3d eb ba 01 00 	lea    0x1baeb(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6710:	be 3b 00 00 00       	mov    $0x3b,%esi
    6715:	44 89 1c 24          	mov    %r11d,(%rsp)
    6719:	e8 c2 52 00 00       	call   b9e0 <__assert>
    671e:	44 8b 1c 24          	mov    (%rsp),%r11d
    6722:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    6727:	49 8b 16             	mov    (%r14),%rdx
    672a:	4c 01 f8             	add    %r15,%rax
    672d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    6732:	48 01 d0             	add    %rdx,%rax
    6735:	45 39 e3             	cmp    %r12d,%r11d
    6738:	8b 78 04             	mov    0x4(%rax),%edi
    673b:	8b 48 08             	mov    0x8(%rax),%ecx
    673e:	8b 70 0c             	mov    0xc(%rax),%esi
    6741:	44 8b 10             	mov    (%rax),%r10d
    6744:	89 7c 24 18          	mov    %edi,0x18(%rsp)
    6748:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    674c:	8b 78 10             	mov    0x10(%rax),%edi
    674f:	8b 48 14             	mov    0x14(%rax),%ecx
    6752:	89 74 24 10          	mov    %esi,0x10(%rsp)
    6756:	8b 70 18             	mov    0x18(%rax),%esi
    6759:	8b 40 1c             	mov    0x1c(%rax),%eax
    675c:	89 7c 24 14          	mov    %edi,0x14(%rsp)
    6760:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    6764:	89 34 24             	mov    %esi,(%rsp)
    6767:	89 44 24 38          	mov    %eax,0x38(%rsp)
    676b:	0f 8d cf fd ff ff    	jge    6540 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0xc0>
    6771:	45 39 6e 2c          	cmp    %r13d,0x2c(%r14)
    6775:	7f 2c                	jg     67a3 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x323>
    6777:	48 8d 15 7c bb 01 00 	lea    0x1bb7c(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    677e:	48 8d 0d 63 ba 01 00 	lea    0x1ba63(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6785:	48 8d 3d 6f ba 01 00 	lea    0x1ba6f(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    678c:	be 48 00 00 00       	mov    $0x48,%esi
    6791:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    6796:	e8 45 52 00 00       	call   b9e0 <__assert>
    679b:	49 8b 16             	mov    (%r14),%rdx
    679e:	44 8b 54 24 48       	mov    0x48(%rsp),%r10d
    67a3:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    67a7:	4a 8d 04 3a          	lea    (%rdx,%r15,1),%rax
    67ab:	8b 74 24 24          	mov    0x24(%rsp),%esi
    67af:	89 58 18             	mov    %ebx,0x18(%rax)
    67b2:	8b 5c 24 2c          	mov    0x2c(%rsp),%ebx
    67b6:	89 48 04             	mov    %ecx,0x4(%rax)
    67b9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    67bd:	89 70 08             	mov    %esi,0x8(%rax)
    67c0:	8b 74 24 04          	mov    0x4(%rsp),%esi
    67c4:	89 28                	mov    %ebp,(%rax)
    67c6:	89 58 1c             	mov    %ebx,0x1c(%rax)
    67c9:	89 48 0c             	mov    %ecx,0xc(%rax)
    67cc:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    67d0:	89 70 10             	mov    %esi,0x10(%rax)
    67d3:	89 48 14             	mov    %ecx,0x14(%rax)
    67d6:	45 39 66 2c          	cmp    %r12d,0x2c(%r14)
    67da:	7f 2c                	jg     6808 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x388>
    67dc:	48 8d 15 17 bb 01 00 	lea    0x1bb17(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    67e3:	48 8d 0d fe b9 01 00 	lea    0x1b9fe(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    67ea:	48 8d 3d 0a ba 01 00 	lea    0x1ba0a(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    67f1:	be 48 00 00 00       	mov    $0x48,%esi
    67f6:	44 89 54 24 04       	mov    %r10d,0x4(%rsp)
    67fb:	e8 e0 51 00 00       	call   b9e0 <__assert>
    6800:	49 8b 16             	mov    (%r14),%rdx
    6803:	44 8b 54 24 04       	mov    0x4(%rsp),%r10d
    6808:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    680d:	8b 44 24 18          	mov    0x18(%rsp),%eax
    6811:	41 83 ed 01          	sub    $0x1,%r13d
    6815:	49 83 ef 20          	sub    $0x20,%r15
    6819:	49 01 d4             	add    %rdx,%r12
    681c:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    6820:	41 89 44 24 04       	mov    %eax,0x4(%r12)
    6825:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    6829:	45 89 14 24          	mov    %r10d,(%r12)
    682d:	41 89 44 24 08       	mov    %eax,0x8(%r12)
    6832:	8b 44 24 10          	mov    0x10(%rsp),%eax
    6836:	41 89 44 24 0c       	mov    %eax,0xc(%r12)
    683b:	8b 44 24 14          	mov    0x14(%rsp),%eax
    683f:	41 89 44 24 10       	mov    %eax,0x10(%r12)
    6844:	8b 44 24 20          	mov    0x20(%rsp),%eax
    6848:	41 89 44 24 14       	mov    %eax,0x14(%r12)
    684d:	8b 04 24             	mov    (%rsp),%eax
    6850:	41 89 44 24 18       	mov    %eax,0x18(%r12)
    6855:	8b 44 24 38          	mov    0x38(%rsp),%eax
    6859:	41 89 44 24 1c       	mov    %eax,0x1c(%r12)
    685e:	0f 85 fa fd ff ff    	jne    665e <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x1de>
    6864:	d1 7c 24 3c          	sarl   0x3c(%rsp)
    6868:	0f 85 a2 fc ff ff    	jne    6510 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei+0x90>
    686e:	48 83 c4 58          	add    $0x58,%rsp
    6872:	5b                   	pop    %rbx
    6873:	5d                   	pop    %rbp
    6874:	41 5c                	pop    %r12
    6876:	41 5d                	pop    %r13
    6878:	41 5e                	pop    %r14
    687a:	41 5f                	pop    %r15
    687c:	c3                   	ret    
    687d:	0f 1f 00             	nopl   (%rax)

0000000000006880 <_Z4joinR5TableS0_S0_>:
    6880:	41 57                	push   %r15
    6882:	41 56                	push   %r14
    6884:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    6889:	41 55                	push   %r13
    688b:	41 54                	push   %r12
    688d:	49 89 fd             	mov    %rdi,%r13
    6890:	55                   	push   %rbp
    6891:	53                   	push   %rbx
    6892:	31 ed                	xor    %ebp,%ebp
    6894:	48 83 ec 78          	sub    $0x78,%rsp
    6898:	8b 46 2c             	mov    0x2c(%rsi),%eax
    689b:	8b 5a 2c             	mov    0x2c(%rdx),%ebx
    689e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    68a3:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    68a8:	31 d2                	xor    %edx,%edx
    68aa:	89 de                	mov    %ebx,%esi
    68ac:	89 5c 24 58          	mov    %ebx,0x58(%rsp)
    68b0:	89 c3                	mov    %eax,%ebx
    68b2:	01 f3                	add    %esi,%ebx
    68b4:	be 01 00 00 00       	mov    $0x1,%esi
    68b9:	41 89 c7             	mov    %eax,%r15d
    68bc:	89 44 24 60          	mov    %eax,0x60(%rsp)
    68c0:	e8 ab ed ff ff       	call   5670 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_9attr_compES1_S1_EEEvP8TraceMemIT_Ebii>
    68c5:	89 df                	mov    %ebx,%edi
    68c7:	4c 89 ee             	mov    %r13,%rsi
    68ca:	31 db                	xor    %ebx,%ebx
    68cc:	e8 5f de ff ff       	call   4730 <_Z17write_block_sizesiR5Table>
    68d1:	31 d2                	xor    %edx,%edx
    68d3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    68d8:	be 01 00 00 00       	mov    $0x1,%esi
    68dd:	4c 89 ef             	mov    %r13,%rdi
    68e0:	89 44 24 64          	mov    %eax,0x64(%rsp)
    68e4:	e8 17 f2 ff ff       	call   5b00 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_8tid_compES1_S1_EEEvP8TraceMemIT_Ebii>
    68e9:	45 85 ff             	test   %r15d,%r15d
    68ec:	0f 8f e7 00 00 00    	jg     69d9 <_Z4joinR5TableS0_S0_+0x159>
    68f2:	e9 39 01 00 00       	jmp    6a30 <_Z4joinR5TableS0_S0_+0x1b0>
    68f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    68fe:	00 00 
    6900:	41 39 5d 2c          	cmp    %ebx,0x2c(%r13)
    6904:	7f 1f                	jg     6925 <_Z4joinR5TableS0_S0_+0xa5>
    6906:	48 8d 0d db b8 01 00 	lea    0x1b8db(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    690d:	48 8d 15 ec b9 01 00 	lea    0x1b9ec(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6914:	48 8d 3d e0 b8 01 00 	lea    0x1b8e0(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    691b:	be 3b 00 00 00       	mov    $0x3b,%esi
    6920:	e8 bb 50 00 00       	call   b9e0 <__assert>
    6925:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    692a:	48 89 ea             	mov    %rbp,%rdx
    692d:	49 03 55 00          	add    0x0(%r13),%rdx
    6931:	39 5f 2c             	cmp    %ebx,0x2c(%rdi)
    6934:	44 8b 1a             	mov    (%rdx),%r11d
    6937:	44 8b 52 04          	mov    0x4(%rdx),%r10d
    693b:	44 8b 4a 08          	mov    0x8(%rdx),%r9d
    693f:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    6943:	8b 42 10             	mov    0x10(%rdx),%eax
    6946:	44 8b 7a 14          	mov    0x14(%rdx),%r15d
    694a:	44 8b 72 18          	mov    0x18(%rdx),%r14d
    694e:	44 8b 62 1c          	mov    0x1c(%rdx),%r12d
    6952:	7f 4f                	jg     69a3 <_Z4joinR5TableS0_S0_+0x123>
    6954:	48 8d 0d 8d b8 01 00 	lea    0x1b88d(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    695b:	48 8d 15 98 b9 01 00 	lea    0x1b998(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6962:	48 8d 3d 92 b8 01 00 	lea    0x1b892(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6969:	be 48 00 00 00       	mov    $0x48,%esi
    696e:	44 89 5c 24 54       	mov    %r11d,0x54(%rsp)
    6973:	44 89 54 24 50       	mov    %r10d,0x50(%rsp)
    6978:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
    697d:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
    6982:	89 44 24 04          	mov    %eax,0x4(%rsp)
    6986:	e8 55 50 00 00       	call   b9e0 <__assert>
    698b:	44 8b 5c 24 54       	mov    0x54(%rsp),%r11d
    6990:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
    6995:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    699a:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    699f:	8b 44 24 04          	mov    0x4(%rsp),%eax
    69a3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    69a8:	48 89 ea             	mov    %rbp,%rdx
    69ab:	83 c3 01             	add    $0x1,%ebx
    69ae:	48 83 c5 20          	add    $0x20,%rbp
    69b2:	48 03 17             	add    (%rdi),%rdx
    69b5:	39 5c 24 60          	cmp    %ebx,0x60(%rsp)
    69b9:	44 89 1a             	mov    %r11d,(%rdx)
    69bc:	44 89 52 04          	mov    %r10d,0x4(%rdx)
    69c0:	44 89 4a 08          	mov    %r9d,0x8(%rdx)
    69c4:	44 89 42 0c          	mov    %r8d,0xc(%rdx)
    69c8:	89 42 10             	mov    %eax,0x10(%rdx)
    69cb:	44 89 7a 14          	mov    %r15d,0x14(%rdx)
    69cf:	44 89 72 18          	mov    %r14d,0x18(%rdx)
    69d3:	44 89 62 1c          	mov    %r12d,0x1c(%rdx)
    69d7:	74 57                	je     6a30 <_Z4joinR5TableS0_S0_+0x1b0>
    69d9:	85 db                	test   %ebx,%ebx
    69db:	0f 89 1f ff ff ff    	jns    6900 <_Z4joinR5TableS0_S0_+0x80>
    69e1:	48 8d 15 18 b9 01 00 	lea    0x1b918(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    69e8:	48 8d 0d f9 b7 01 00 	lea    0x1b7f9(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    69ef:	48 8d 3d 05 b8 01 00 	lea    0x1b805(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    69f6:	be 3b 00 00 00       	mov    $0x3b,%esi
    69fb:	e8 e0 4f 00 00       	call   b9e0 <__assert>
    6a00:	48 89 ea             	mov    %rbp,%rdx
    6a03:	49 03 55 00          	add    0x0(%r13),%rdx
    6a07:	44 8b 1a             	mov    (%rdx),%r11d
    6a0a:	44 8b 52 04          	mov    0x4(%rdx),%r10d
    6a0e:	44 8b 4a 08          	mov    0x8(%rdx),%r9d
    6a12:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    6a16:	8b 42 10             	mov    0x10(%rdx),%eax
    6a19:	44 8b 7a 14          	mov    0x14(%rdx),%r15d
    6a1d:	44 8b 72 18          	mov    0x18(%rdx),%r14d
    6a21:	44 8b 62 1c          	mov    0x1c(%rdx),%r12d
    6a25:	e9 2a ff ff ff       	jmp    6954 <_Z4joinR5TableS0_S0_+0xd4>
    6a2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a30:	8b 44 24 58          	mov    0x58(%rsp),%eax
    6a34:	85 c0                	test   %eax,%eax
    6a36:	0f 8e 17 01 00 00    	jle    6b53 <_Z4joinR5TableS0_S0_+0x2d3>
    6a3c:	48 63 44 24 60       	movslq 0x60(%rsp),%rax
    6a41:	31 ed                	xor    %ebp,%ebp
    6a43:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
    6a48:	48 89 c3             	mov    %rax,%rbx
    6a4b:	48 c1 e0 05          	shl    $0x5,%rax
    6a4f:	49 89 c4             	mov    %rax,%r12
    6a52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6a58:	85 db                	test   %ebx,%ebx
    6a5a:	41 89 eb             	mov    %ebp,%r11d
    6a5d:	78 0a                	js     6a69 <_Z4joinR5TableS0_S0_+0x1e9>
    6a5f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    6a64:	3b 58 2c             	cmp    0x2c(%rax),%ebx
    6a67:	7c 29                	jl     6a92 <_Z4joinR5TableS0_S0_+0x212>
    6a69:	48 8d 0d 78 b7 01 00 	lea    0x1b778(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6a70:	48 8d 15 89 b8 01 00 	lea    0x1b889(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6a77:	48 8d 3d 7d b7 01 00 	lea    0x1b77d(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6a7e:	be 3b 00 00 00       	mov    $0x3b,%esi
    6a83:	44 89 5c 24 04       	mov    %r11d,0x4(%rsp)
    6a88:	e8 53 4f 00 00       	call   b9e0 <__assert>
    6a8d:	44 8b 5c 24 04       	mov    0x4(%rsp),%r11d
    6a92:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    6a97:	4c 89 e2             	mov    %r12,%rdx
    6a9a:	48 03 10             	add    (%rax),%rdx
    6a9d:	8b 7a 1c             	mov    0x1c(%rdx),%edi
    6aa0:	44 8b 12             	mov    (%rdx),%r10d
    6aa3:	44 8b 4a 04          	mov    0x4(%rdx),%r9d
    6aa7:	44 8b 42 08          	mov    0x8(%rdx),%r8d
    6aab:	8b 42 0c             	mov    0xc(%rdx),%eax
    6aae:	44 8b 7a 10          	mov    0x10(%rdx),%r15d
    6ab2:	89 7c 24 04          	mov    %edi,0x4(%rsp)
    6ab6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6abb:	44 8b 72 14          	mov    0x14(%rdx),%r14d
    6abf:	44 8b 6a 18          	mov    0x18(%rdx),%r13d
    6ac3:	44 39 5f 2c          	cmp    %r11d,0x2c(%rdi)
    6ac7:	7f 45                	jg     6b0e <_Z4joinR5TableS0_S0_+0x28e>
    6ac9:	48 8d 0d 18 b7 01 00 	lea    0x1b718(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6ad0:	48 8d 15 23 b8 01 00 	lea    0x1b823(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6ad7:	48 8d 3d 1d b7 01 00 	lea    0x1b71d(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6ade:	be 48 00 00 00       	mov    $0x48,%esi
    6ae3:	44 89 44 24 60       	mov    %r8d,0x60(%rsp)
    6ae8:	89 44 24 54          	mov    %eax,0x54(%rsp)
    6aec:	44 89 54 24 50       	mov    %r10d,0x50(%rsp)
    6af1:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
    6af6:	e8 e5 4e 00 00       	call   b9e0 <__assert>
    6afb:	44 8b 44 24 60       	mov    0x60(%rsp),%r8d
    6b00:	8b 44 24 54          	mov    0x54(%rsp),%eax
    6b04:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
    6b09:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    6b0e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6b13:	48 89 ea             	mov    %rbp,%rdx
    6b16:	83 c3 01             	add    $0x1,%ebx
    6b19:	48 c1 e2 05          	shl    $0x5,%rdx
    6b1d:	48 83 c5 01          	add    $0x1,%rbp
    6b21:	49 83 c4 20          	add    $0x20,%r12
    6b25:	48 03 16             	add    (%rsi),%rdx
    6b28:	39 6c 24 58          	cmp    %ebp,0x58(%rsp)
    6b2c:	89 42 0c             	mov    %eax,0xc(%rdx)
    6b2f:	8b 44 24 04          	mov    0x4(%rsp),%eax
    6b33:	44 89 12             	mov    %r10d,(%rdx)
    6b36:	44 89 4a 04          	mov    %r9d,0x4(%rdx)
    6b3a:	44 89 42 08          	mov    %r8d,0x8(%rdx)
    6b3e:	44 89 7a 10          	mov    %r15d,0x10(%rdx)
    6b42:	44 89 72 14          	mov    %r14d,0x14(%rdx)
    6b46:	44 89 6a 18          	mov    %r13d,0x18(%rdx)
    6b4a:	89 42 1c             	mov    %eax,0x1c(%rdx)
    6b4d:	0f 8f 05 ff ff ff    	jg     6a58 <_Z4joinR5TableS0_S0_+0x1d8>
    6b53:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6b58:	8b 48 2c             	mov    0x2c(%rax),%ecx
    6b5b:	85 c9                	test   %ecx,%ecx
    6b5d:	0f 8e a5 02 00 00    	jle    6e08 <_Z4joinR5TableS0_S0_+0x588>
    6b63:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6b68:	31 db                	xor    %ebx,%ebx
    6b6a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6b71:	00 
    6b72:	4c 8b 00             	mov    (%rax),%r8
    6b75:	49 89 c1             	mov    %rax,%r9
    6b78:	eb 0e                	jmp    6b88 <_Z4joinR5TableS0_S0_+0x308>
    6b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b80:	41 8b 49 2c          	mov    0x2c(%r9),%ecx
    6b84:	48 83 c3 01          	add    $0x1,%rbx
    6b88:	49 89 de             	mov    %rbx,%r14
    6b8b:	45 31 ff             	xor    %r15d,%r15d
    6b8e:	89 de                	mov    %ebx,%esi
    6b90:	49 c1 e6 05          	shl    $0x5,%r14
    6b94:	4b 8d 14 30          	lea    (%r8,%r14,1),%rdx
    6b98:	8b 42 0c             	mov    0xc(%rdx),%eax
    6b9b:	8b 2a                	mov    (%rdx),%ebp
    6b9d:	44 8b 5a 04          	mov    0x4(%rdx),%r11d
    6ba1:	44 8b 52 08          	mov    0x8(%rdx),%r10d
    6ba5:	44 8b 62 14          	mov    0x14(%rdx),%r12d
    6ba9:	44 8b 6a 18          	mov    0x18(%rdx),%r13d
    6bad:	89 44 24 20          	mov    %eax,0x20(%rsp)
    6bb1:	8b 42 10             	mov    0x10(%rdx),%eax
    6bb4:	85 ed                	test   %ebp,%ebp
    6bb6:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6bba:	8b 42 1c             	mov    0x1c(%rdx),%eax
    6bbd:	74 14                	je     6bd3 <_Z4joinR5TableS0_S0_+0x353>
    6bbf:	45 85 e4             	test   %r12d,%r12d
    6bc2:	44 0f 45 6c 24 04    	cmovne 0x4(%rsp),%r13d
    6bc8:	bf 00 00 00 00       	mov    $0x0,%edi
    6bcd:	45 89 e7             	mov    %r12d,%r15d
    6bd0:	0f 44 ef             	cmove  %edi,%ebp
    6bd3:	39 f1                	cmp    %esi,%ecx
    6bd5:	7f 50                	jg     6c27 <_Z4joinR5TableS0_S0_+0x3a7>
    6bd7:	48 8d 0d 0a b6 01 00 	lea    0x1b60a(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6bde:	48 8d 15 15 b7 01 00 	lea    0x1b715(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6be5:	48 8d 3d 0f b6 01 00 	lea    0x1b60f(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6bec:	be 48 00 00 00       	mov    $0x48,%esi
    6bf1:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
    6bf6:	89 44 24 60          	mov    %eax,0x60(%rsp)
    6bfa:	44 89 54 24 54       	mov    %r10d,0x54(%rsp)
    6bff:	44 89 5c 24 50       	mov    %r11d,0x50(%rsp)
    6c04:	e8 d7 4d 00 00       	call   b9e0 <__assert>
    6c09:	4c 8b 4c 24 58       	mov    0x58(%rsp),%r9
    6c0e:	8b 44 24 60          	mov    0x60(%rsp),%eax
    6c12:	44 8b 54 24 54       	mov    0x54(%rsp),%r10d
    6c17:	44 8b 5c 24 50       	mov    0x50(%rsp),%r11d
    6c1c:	4d 8b 01             	mov    (%r9),%r8
    6c1f:	41 8b 49 2c          	mov    0x2c(%r9),%ecx
    6c23:	4b 8d 14 30          	lea    (%r8,%r14,1),%rdx
    6c27:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6c2b:	8b 74 24 28          	mov    0x28(%rsp),%esi
    6c2f:	89 42 1c             	mov    %eax,0x1c(%rdx)
    6c32:	8d 43 01             	lea    0x1(%rbx),%eax
    6c35:	44 01 7c 24 04       	add    %r15d,0x4(%rsp)
    6c3a:	89 2a                	mov    %ebp,(%rdx)
    6c3c:	44 89 5a 04          	mov    %r11d,0x4(%rdx)
    6c40:	39 c8                	cmp    %ecx,%eax
    6c42:	44 89 52 08          	mov    %r10d,0x8(%rdx)
    6c46:	89 7a 0c             	mov    %edi,0xc(%rdx)
    6c49:	89 72 10             	mov    %esi,0x10(%rdx)
    6c4c:	44 89 62 14          	mov    %r12d,0x14(%rdx)
    6c50:	44 89 6a 18          	mov    %r13d,0x18(%rdx)
    6c54:	0f 8c 26 ff ff ff    	jl     6b80 <_Z4joinR5TableS0_S0_+0x300>
    6c5a:	8b 5c 24 04          	mov    0x4(%rsp),%ebx
    6c5e:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
    6c63:	89 de                	mov    %ebx,%esi
    6c65:	4c 89 ef             	mov    %r13,%rdi
    6c68:	e8 13 f8 ff ff       	call   6480 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    6c6d:	85 db                	test   %ebx,%ebx
    6c6f:	0f 8e a3 01 00 00    	jle    6e18 <_Z4joinR5TableS0_S0_+0x598>
    6c75:	45 31 e4             	xor    %r12d,%r12d
    6c78:	45 31 f6             	xor    %r14d,%r14d
    6c7b:	31 db                	xor    %ebx,%ebx
    6c7d:	44 89 64 24 20       	mov    %r12d,0x20(%rsp)
    6c82:	44 8b 7c 24 6c       	mov    0x6c(%rsp),%r15d
    6c87:	4c 89 ed             	mov    %r13,%rbp
    6c8a:	e9 da 00 00 00       	jmp    6d69 <_Z4joinR5TableS0_S0_+0x4e9>
    6c8f:	90                   	nop
    6c90:	8b 48 04             	mov    0x4(%rax),%ecx
    6c93:	8b 78 08             	mov    0x8(%rax),%edi
    6c96:	39 7c 24 2c          	cmp    %edi,0x2c(%rsp)
    6c9a:	44 8b 78 10          	mov    0x10(%rax),%r15d
    6c9e:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
    6ca2:	8b 48 0c             	mov    0xc(%rax),%ecx
    6ca5:	89 4c 24 4c          	mov    %ecx,0x4c(%rsp)
    6ca9:	8b 48 14             	mov    0x14(%rax),%ecx
    6cac:	8b 40 18             	mov    0x18(%rax),%eax
    6caf:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    6cb3:	89 44 24 48          	mov    %eax,0x48(%rsp)
    6cb7:	0f 84 23 01 00 00    	je     6de0 <_Z4joinR5TableS0_S0_+0x560>
    6cbd:	45 85 db             	test   %r11d,%r11d
    6cc0:	0f 84 1a 01 00 00    	je     6de0 <_Z4joinR5TableS0_S0_+0x560>
    6cc6:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
    6cca:	89 74 24 20          	mov    %esi,0x20(%rsp)
    6cce:	bb 01 00 00 00       	mov    $0x1,%ebx
    6cd3:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6cd9:	31 c9                	xor    %ecx,%ecx
    6cdb:	31 c0                	xor    %eax,%eax
    6cdd:	45 31 d2             	xor    %r10d,%r10d
    6ce0:	99                   	cltd   
    6ce1:	44 03 54 24 48       	add    0x48(%rsp),%r10d
    6ce6:	41 f7 ff             	idiv   %r15d
    6ce9:	01 c8                	add    %ecx,%eax
    6ceb:	44 39 5d 2c          	cmp    %r11d,0x2c(%rbp)
    6cef:	7f 31                	jg     6d22 <_Z4joinR5TableS0_S0_+0x4a2>
    6cf1:	48 8d 0d f0 b4 01 00 	lea    0x1b4f0(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6cf8:	48 8d 15 fb b5 01 00 	lea    0x1b5fb(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6cff:	48 8d 3d f5 b4 01 00 	lea    0x1b4f5(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6d06:	be 48 00 00 00       	mov    $0x48,%esi
    6d0b:	89 44 24 50          	mov    %eax,0x50(%rsp)
    6d0f:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
    6d14:	e8 c7 4c 00 00       	call   b9e0 <__assert>
    6d19:	8b 44 24 50          	mov    0x50(%rsp),%eax
    6d1d:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
    6d22:	4c 03 6d 00          	add    0x0(%rbp),%r13
    6d26:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    6d2a:	49 83 c6 01          	add    $0x1,%r14
    6d2e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    6d32:	44 39 74 24 04       	cmp    %r14d,0x4(%rsp)
    6d37:	8b 7c 24 4c          	mov    0x4c(%rsp),%edi
    6d3b:	41 89 4d 00          	mov    %ecx,0x0(%r13)
    6d3f:	41 89 75 04          	mov    %esi,0x4(%r13)
    6d43:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    6d47:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    6d4b:	41 89 7d 0c          	mov    %edi,0xc(%r13)
    6d4f:	45 89 7d 10          	mov    %r15d,0x10(%r13)
    6d53:	45 89 55 18          	mov    %r10d,0x18(%r13)
    6d57:	41 89 45 1c          	mov    %eax,0x1c(%r13)
    6d5b:	41 89 4d 08          	mov    %ecx,0x8(%r13)
    6d5f:	41 89 75 14          	mov    %esi,0x14(%r13)
    6d63:	0f 8e af 00 00 00    	jle    6e18 <_Z4joinR5TableS0_S0_+0x598>
    6d69:	44 39 75 2c          	cmp    %r14d,0x2c(%rbp)
    6d6d:	45 89 f3             	mov    %r14d,%r11d
    6d70:	7f 29                	jg     6d9b <_Z4joinR5TableS0_S0_+0x51b>
    6d72:	48 8d 0d 6f b4 01 00 	lea    0x1b46f(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6d79:	48 8d 15 80 b5 01 00 	lea    0x1b580(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    6d80:	48 8d 3d 74 b4 01 00 	lea    0x1b474(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6d87:	be 3b 00 00 00       	mov    $0x3b,%esi
    6d8c:	44 89 74 24 28       	mov    %r14d,0x28(%rsp)
    6d91:	e8 4a 4c 00 00       	call   b9e0 <__assert>
    6d96:	44 8b 5c 24 28       	mov    0x28(%rsp),%r11d
    6d9b:	4d 89 f5             	mov    %r14,%r13
    6d9e:	49 c1 e5 05          	shl    $0x5,%r13
    6da2:	4c 89 e8             	mov    %r13,%rax
    6da5:	48 03 45 00          	add    0x0(%rbp),%rax
    6da9:	8b 30                	mov    (%rax),%esi
    6dab:	85 f6                	test   %esi,%esi
    6dad:	0f 85 dd fe ff ff    	jne    6c90 <_Z4joinR5TableS0_S0_+0x410>
    6db3:	4d 85 f6             	test   %r14,%r14
    6db6:	0f 84 a2 03 00 00    	je     715e <_Z4joinR5TableS0_S0_+0x8de>
    6dbc:	89 d8                	mov    %ebx,%eax
    6dbe:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    6dc2:	45 89 e2             	mov    %r12d,%r10d
    6dc5:	99                   	cltd   
    6dc6:	41 83 c4 01          	add    $0x1,%r12d
    6dca:	41 f7 ff             	idiv   %r15d
    6dcd:	89 d8                	mov    %ebx,%eax
    6dcf:	83 c3 01             	add    $0x1,%ebx
    6dd2:	0f af ca             	imul   %edx,%ecx
    6dd5:	e9 06 ff ff ff       	jmp    6ce0 <_Z4joinR5TableS0_S0_+0x460>
    6dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6de0:	89 d8                	mov    %ebx,%eax
    6de2:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    6de6:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
    6dea:	99                   	cltd   
    6deb:	89 74 24 20          	mov    %esi,0x20(%rsp)
    6def:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6df5:	41 f7 ff             	idiv   %r15d
    6df8:	45 31 d2             	xor    %r10d,%r10d
    6dfb:	89 d8                	mov    %ebx,%eax
    6dfd:	83 c3 01             	add    $0x1,%ebx
    6e00:	0f af ca             	imul   %edx,%ecx
    6e03:	e9 d8 fe ff ff       	jmp    6ce0 <_Z4joinR5TableS0_S0_+0x460>
    6e08:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6e0d:	31 f6                	xor    %esi,%esi
    6e0f:	e8 6c f6 ff ff       	call   6480 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    6e14:	0f 1f 40 00          	nopl   0x0(%rax)
    6e18:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    6e1d:	8b 48 2c             	mov    0x2c(%rax),%ecx
    6e20:	85 c9                	test   %ecx,%ecx
    6e22:	0f 8e a8 02 00 00    	jle    70d0 <_Z4joinR5TableS0_S0_+0x850>
    6e28:	4c 8b 00             	mov    (%rax),%r8
    6e2b:	31 db                	xor    %ebx,%ebx
    6e2d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    6e34:	00 
    6e35:	4c 89 c2             	mov    %r8,%rdx
    6e38:	49 89 c0             	mov    %rax,%r8
    6e3b:	eb 0b                	jmp    6e48 <_Z4joinR5TableS0_S0_+0x5c8>
    6e3d:	0f 1f 00             	nopl   (%rax)
    6e40:	41 8b 48 2c          	mov    0x2c(%r8),%ecx
    6e44:	48 83 c3 01          	add    $0x1,%rbx
    6e48:	49 89 de             	mov    %rbx,%r14
    6e4b:	45 31 ff             	xor    %r15d,%r15d
    6e4e:	89 de                	mov    %ebx,%esi
    6e50:	49 c1 e6 05          	shl    $0x5,%r14
    6e54:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
    6e58:	8b 78 04             	mov    0x4(%rax),%edi
    6e5b:	8b 28                	mov    (%rax),%ebp
    6e5d:	44 8b 58 08          	mov    0x8(%rax),%r11d
    6e61:	44 8b 50 0c          	mov    0xc(%rax),%r10d
    6e65:	44 8b 60 10          	mov    0x10(%rax),%r12d
    6e69:	44 8b 48 14          	mov    0x14(%rax),%r9d
    6e6d:	89 7c 24 1c          	mov    %edi,0x1c(%rsp)
    6e71:	8b 78 1c             	mov    0x1c(%rax),%edi
    6e74:	85 ed                	test   %ebp,%ebp
    6e76:	44 8b 68 18          	mov    0x18(%rax),%r13d
    6e7a:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6e7e:	74 14                	je     6e94 <_Z4joinR5TableS0_S0_+0x614>
    6e80:	45 85 e4             	test   %r12d,%r12d
    6e83:	44 0f 45 6c 24 04    	cmovne 0x4(%rsp),%r13d
    6e89:	bf 00 00 00 00       	mov    $0x0,%edi
    6e8e:	45 89 e7             	mov    %r12d,%r15d
    6e91:	0f 44 ef             	cmove  %edi,%ebp
    6e94:	39 f1                	cmp    %esi,%ecx
    6e96:	7f 52                	jg     6eea <_Z4joinR5TableS0_S0_+0x66a>
    6e98:	48 8d 0d 49 b3 01 00 	lea    0x1b349(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6e9f:	48 8d 15 54 b4 01 00 	lea    0x1b454(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6ea6:	48 8d 3d 4e b3 01 00 	lea    0x1b34e(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6ead:	be 48 00 00 00       	mov    $0x48,%esi
    6eb2:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    6eb7:	44 89 4c 24 48       	mov    %r9d,0x48(%rsp)
    6ebc:	44 89 54 24 2c       	mov    %r10d,0x2c(%rsp)
    6ec1:	44 89 5c 24 28       	mov    %r11d,0x28(%rsp)
    6ec6:	e8 15 4b 00 00       	call   b9e0 <__assert>
    6ecb:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    6ed0:	44 8b 4c 24 48       	mov    0x48(%rsp),%r9d
    6ed5:	44 8b 54 24 2c       	mov    0x2c(%rsp),%r10d
    6eda:	44 8b 5c 24 28       	mov    0x28(%rsp),%r11d
    6edf:	49 8b 10             	mov    (%r8),%rdx
    6ee2:	41 8b 48 2c          	mov    0x2c(%r8),%ecx
    6ee6:	4a 8d 04 32          	lea    (%rdx,%r14,1),%rax
    6eea:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    6eee:	89 28                	mov    %ebp,(%rax)
    6ef0:	44 89 58 08          	mov    %r11d,0x8(%rax)
    6ef4:	44 89 50 0c          	mov    %r10d,0xc(%rax)
    6ef8:	44 89 60 10          	mov    %r12d,0x10(%rax)
    6efc:	44 89 48 14          	mov    %r9d,0x14(%rax)
    6f00:	89 70 04             	mov    %esi,0x4(%rax)
    6f03:	8b 74 24 20          	mov    0x20(%rsp),%esi
    6f07:	44 89 68 18          	mov    %r13d,0x18(%rax)
    6f0b:	44 01 7c 24 04       	add    %r15d,0x4(%rsp)
    6f10:	89 70 1c             	mov    %esi,0x1c(%rax)
    6f13:	8d 43 01             	lea    0x1(%rbx),%eax
    6f16:	39 c8                	cmp    %ecx,%eax
    6f18:	0f 8c 22 ff ff ff    	jl     6e40 <_Z4joinR5TableS0_S0_+0x5c0>
    6f1e:	8b 5c 24 04          	mov    0x4(%rsp),%ebx
    6f22:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
    6f27:	89 de                	mov    %ebx,%esi
    6f29:	4c 89 ef             	mov    %r13,%rdi
    6f2c:	e8 4f f5 ff ff       	call   6480 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    6f31:	85 db                	test   %ebx,%ebx
    6f33:	0f 8e a7 01 00 00    	jle    70e0 <_Z4joinR5TableS0_S0_+0x860>
    6f39:	45 31 e4             	xor    %r12d,%r12d
    6f3c:	45 31 f6             	xor    %r14d,%r14d
    6f3f:	31 db                	xor    %ebx,%ebx
    6f41:	44 8b 7c 24 68       	mov    0x68(%rsp),%r15d
    6f46:	44 89 64 24 1c       	mov    %r12d,0x1c(%rsp)
    6f4b:	4c 89 ed             	mov    %r13,%rbp
    6f4e:	e9 de 00 00 00       	jmp    7031 <_Z4joinR5TableS0_S0_+0x7b1>
    6f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f58:	8b 78 04             	mov    0x4(%rax),%edi
    6f5b:	8b 48 0c             	mov    0xc(%rax),%ecx
    6f5e:	44 8b 78 10          	mov    0x10(%rax),%r15d
    6f62:	89 7c 24 38          	mov    %edi,0x38(%rsp)
    6f66:	8b 78 08             	mov    0x8(%rax),%edi
    6f69:	39 7c 24 30          	cmp    %edi,0x30(%rsp)
    6f6d:	89 4c 24 3c          	mov    %ecx,0x3c(%rsp)
    6f71:	8b 48 14             	mov    0x14(%rax),%ecx
    6f74:	8b 40 18             	mov    0x18(%rax),%eax
    6f77:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
    6f7b:	89 44 24 34          	mov    %eax,0x34(%rsp)
    6f7f:	0f 84 23 01 00 00    	je     70a8 <_Z4joinR5TableS0_S0_+0x828>
    6f85:	45 85 db             	test   %r11d,%r11d
    6f88:	0f 84 1a 01 00 00    	je     70a8 <_Z4joinR5TableS0_S0_+0x828>
    6f8e:	89 7c 24 30          	mov    %edi,0x30(%rsp)
    6f92:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    6f96:	bb 01 00 00 00       	mov    $0x1,%ebx
    6f9b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6fa1:	31 c9                	xor    %ecx,%ecx
    6fa3:	31 c0                	xor    %eax,%eax
    6fa5:	45 31 d2             	xor    %r10d,%r10d
    6fa8:	99                   	cltd   
    6fa9:	44 03 54 24 34       	add    0x34(%rsp),%r10d
    6fae:	41 f7 ff             	idiv   %r15d
    6fb1:	01 c8                	add    %ecx,%eax
    6fb3:	44 39 5d 2c          	cmp    %r11d,0x2c(%rbp)
    6fb7:	7f 31                	jg     6fea <_Z4joinR5TableS0_S0_+0x76a>
    6fb9:	48 8d 0d 28 b2 01 00 	lea    0x1b228(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    6fc0:	48 8d 15 33 b3 01 00 	lea    0x1b333(%rip),%rdx        # 222fa <_ZZN8TraceMemIN5Table10TableEntryEE5writeEiS1_E8__func__>
    6fc7:	48 8d 3d 2d b2 01 00 	lea    0x1b22d(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    6fce:	be 48 00 00 00       	mov    $0x48,%esi
    6fd3:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6fd7:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
    6fdc:	e8 ff 49 00 00       	call   b9e0 <__assert>
    6fe1:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6fe5:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
    6fea:	4c 03 6d 00          	add    0x0(%rbp),%r13
    6fee:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    6ff2:	49 83 c6 01          	add    $0x1,%r14
    6ff6:	44 39 74 24 04       	cmp    %r14d,0x4(%rsp)
    6ffb:	8b 74 24 3c          	mov    0x3c(%rsp),%esi
    6fff:	41 89 4d 00          	mov    %ecx,0x0(%r13)
    7003:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
    7007:	41 89 75 0c          	mov    %esi,0xc(%r13)
    700b:	45 89 7d 10          	mov    %r15d,0x10(%r13)
    700f:	45 89 55 18          	mov    %r10d,0x18(%r13)
    7013:	41 89 45 1c          	mov    %eax,0x1c(%r13)
    7017:	41 89 4d 04          	mov    %ecx,0x4(%r13)
    701b:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    701f:	41 89 4d 08          	mov    %ecx,0x8(%r13)
    7023:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    7027:	41 89 4d 14          	mov    %ecx,0x14(%r13)
    702b:	0f 8e af 00 00 00    	jle    70e0 <_Z4joinR5TableS0_S0_+0x860>
    7031:	44 39 75 2c          	cmp    %r14d,0x2c(%rbp)
    7035:	45 89 f3             	mov    %r14d,%r11d
    7038:	7f 29                	jg     7063 <_Z4joinR5TableS0_S0_+0x7e3>
    703a:	48 8d 0d a7 b1 01 00 	lea    0x1b1a7(%rip),%rcx        # 221e8 <g_dyn_entry_table+0x1e8>
    7041:	48 8d 15 b8 b2 01 00 	lea    0x1b2b8(%rip),%rdx        # 22300 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__>
    7048:	48 8d 3d ac b1 01 00 	lea    0x1b1ac(%rip),%rdi        # 221fb <g_dyn_entry_table+0x1fb>
    704f:	be 3b 00 00 00       	mov    $0x3b,%esi
    7054:	44 89 74 24 20       	mov    %r14d,0x20(%rsp)
    7059:	e8 82 49 00 00       	call   b9e0 <__assert>
    705e:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
    7063:	4d 89 f5             	mov    %r14,%r13
    7066:	49 c1 e5 05          	shl    $0x5,%r13
    706a:	4c 89 e8             	mov    %r13,%rax
    706d:	48 03 45 00          	add    0x0(%rbp),%rax
    7071:	8b 30                	mov    (%rax),%esi
    7073:	85 f6                	test   %esi,%esi
    7075:	0f 85 dd fe ff ff    	jne    6f58 <_Z4joinR5TableS0_S0_+0x6d8>
    707b:	4d 85 f6             	test   %r14,%r14
    707e:	0f 84 21 01 00 00    	je     71a5 <_Z4joinR5TableS0_S0_+0x925>
    7084:	89 d8                	mov    %ebx,%eax
    7086:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    708a:	45 89 e2             	mov    %r12d,%r10d
    708d:	99                   	cltd   
    708e:	41 83 c4 01          	add    $0x1,%r12d
    7092:	41 f7 ff             	idiv   %r15d
    7095:	89 d8                	mov    %ebx,%eax
    7097:	83 c3 01             	add    $0x1,%ebx
    709a:	0f af ca             	imul   %edx,%ecx
    709d:	e9 06 ff ff ff       	jmp    6fa8 <_Z4joinR5TableS0_S0_+0x728>
    70a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    70a8:	89 d8                	mov    %ebx,%eax
    70aa:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    70ae:	89 7c 24 30          	mov    %edi,0x30(%rsp)
    70b2:	99                   	cltd   
    70b3:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
    70b7:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    70bd:	41 f7 ff             	idiv   %r15d
    70c0:	45 31 d2             	xor    %r10d,%r10d
    70c3:	89 d8                	mov    %ebx,%eax
    70c5:	83 c3 01             	add    $0x1,%ebx
    70c8:	0f af ca             	imul   %edx,%ecx
    70cb:	e9 d8 fe ff ff       	jmp    6fa8 <_Z4joinR5TableS0_S0_+0x728>
    70d0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    70d5:	31 f6                	xor    %esi,%esi
    70d7:	e8 a4 f3 ff ff       	call   6480 <_Z16obliv_distributeIN5Table10TableEntryEXadL_ZNS0_9entry_indES1_EEEvP8TraceMemIT_Ei>
    70dc:	0f 1f 40 00          	nopl   0x0(%rax)
    70e0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    70e5:	8b 5c 24 64          	mov    0x64(%rsp),%ebx
    70e9:	3b 58 2c             	cmp    0x2c(%rax),%ebx
    70ec:	74 1f                	je     710d <_Z4joinR5TableS0_S0_+0x88d>
    70ee:	48 8d 0d 68 b1 01 00 	lea    0x1b168(%rip),%rcx        # 2225d <g_dyn_entry_table+0x25d>
    70f5:	48 8d 15 f9 b1 01 00 	lea    0x1b1f9(%rip),%rdx        # 222f5 <_ZZ4joinR5TableS0_S0_E8__func__>
    70fc:	48 8d 3d 76 b1 01 00 	lea    0x1b176(%rip),%rdi        # 22279 <g_dyn_entry_table+0x279>
    7103:	be 30 00 00 00       	mov    $0x30,%esi
    7108:	e8 d3 48 00 00       	call   b9e0 <__assert>
    710d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7112:	8b 5c 24 64          	mov    0x64(%rsp),%ebx
    7116:	3b 58 2c             	cmp    0x2c(%rax),%ebx
    7119:	74 1f                	je     713a <_Z4joinR5TableS0_S0_+0x8ba>
    711b:	48 8d 0d 66 b1 01 00 	lea    0x1b166(%rip),%rcx        # 22288 <g_dyn_entry_table+0x288>
    7122:	48 8d 15 cc b1 01 00 	lea    0x1b1cc(%rip),%rdx        # 222f5 <_ZZ4joinR5TableS0_S0_E8__func__>
    7129:	48 8d 3d 49 b1 01 00 	lea    0x1b149(%rip),%rdi        # 22279 <g_dyn_entry_table+0x279>
    7130:	be 31 00 00 00       	mov    $0x31,%esi
    7135:	e8 a6 48 00 00       	call   b9e0 <__assert>
    713a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    713f:	48 83 c4 78          	add    $0x78,%rsp
    7143:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    7148:	5b                   	pop    %rbx
    7149:	5d                   	pop    %rbp
    714a:	41 5c                	pop    %r12
    714c:	41 5d                	pop    %r13
    714e:	41 5e                	pop    %r14
    7150:	41 5f                	pop    %r15
    7152:	31 d2                	xor    %edx,%edx
    7154:	be 01 00 00 00       	mov    $0x1,%esi
    7159:	e9 02 ee ff ff       	jmp    5f60 <_Z12bitonic_sortIN5Table10TableEntryEXadL_ZNS0_7t1_compES1_S1_EEEvP8TraceMemIT_Ebii>
    715e:	48 8d 0d d9 b0 01 00 	lea    0x1b0d9(%rip),%rcx        # 2223e <g_dyn_entry_table+0x23e>
    7165:	48 8d 15 7c b1 01 00 	lea    0x1b17c(%rip),%rdx        # 222e8 <_ZZ12obliv_expandIXadL_ZN5Table11entry_widthENS0_10TableEntryEEEEvP8TraceMemIS1_EE8__func__>
    716c:	48 8d 3d d2 b0 01 00 	lea    0x1b0d2(%rip),%rdi        # 22245 <g_dyn_entry_table+0x245>
    7173:	be 7d 00 00 00       	mov    $0x7d,%esi
    7178:	44 89 5c 24 28       	mov    %r11d,0x28(%rsp)
    717d:	e8 5e 48 00 00       	call   b9e0 <__assert>
    7182:	89 d8                	mov    %ebx,%eax
    7184:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    7188:	45 89 e2             	mov    %r12d,%r10d
    718b:	99                   	cltd   
    718c:	41 83 c4 01          	add    $0x1,%r12d
    7190:	44 8b 5c 24 28       	mov    0x28(%rsp),%r11d
    7195:	41 f7 ff             	idiv   %r15d
    7198:	89 d8                	mov    %ebx,%eax
    719a:	83 c3 01             	add    $0x1,%ebx
    719d:	0f af ca             	imul   %edx,%ecx
    71a0:	e9 3b fb ff ff       	jmp    6ce0 <_Z4joinR5TableS0_S0_+0x460>
    71a5:	48 8d 0d 92 b0 01 00 	lea    0x1b092(%rip),%rcx        # 2223e <g_dyn_entry_table+0x23e>
    71ac:	48 8d 15 0d b1 01 00 	lea    0x1b10d(%rip),%rdx        # 222c0 <_ZZ12obliv_expandIXadL_ZN5Table12entry_heightENS0_10TableEntryEEEEvP8TraceMemIS1_EE8__func__>
    71b3:	48 8d 3d 8b b0 01 00 	lea    0x1b08b(%rip),%rdi        # 22245 <g_dyn_entry_table+0x245>
    71ba:	be 7d 00 00 00       	mov    $0x7d,%esi
    71bf:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
    71c4:	e8 17 48 00 00       	call   b9e0 <__assert>
    71c9:	89 d8                	mov    %ebx,%eax
    71cb:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    71cf:	45 89 e2             	mov    %r12d,%r10d
    71d2:	99                   	cltd   
    71d3:	41 83 c4 01          	add    $0x1,%r12d
    71d7:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
    71dc:	41 f7 ff             	idiv   %r15d
    71df:	89 d8                	mov    %ebx,%eax
    71e1:	83 c3 01             	add    $0x1,%ebx
    71e4:	0f af ca             	imul   %edx,%ecx
    71e7:	e9 bc fd ff ff       	jmp    6fa8 <_Z4joinR5TableS0_S0_+0x728>
    71ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000071f0 <process_input>:
    71f0:	41 55                	push   %r13
    71f2:	41 54                	push   %r12
    71f4:	49 89 fc             	mov    %rdi,%r12
    71f7:	55                   	push   %rbp
    71f8:	53                   	push   %rbx
    71f9:	48 8d 3d a4 b0 01 00 	lea    0x1b0a4(%rip),%rdi        # 222a4 <g_dyn_entry_table+0x2a4>
    7200:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    7207:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    720e:	00 00 
    7210:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    7217:	00 
    7218:	31 c0                	xor    %eax,%eax
    721a:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
    721f:	e8 8c de ff ff       	call   50b0 <printf>
    7224:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
    7229:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    722e:	4c 89 e6             	mov    %r12,%rsi
    7231:	4c 89 ef             	mov    %r13,%rdi
    7234:	e8 97 da ff ff       	call   4cd0 <_Z11parseTablesPcRiS0_>
    7239:	e8 62 ca ff ff       	call   3ca0 <init_time>
    723e:	48 63 7c 24 08       	movslq 0x8(%rsp),%rdi
    7243:	8b 1d b7 50 02 00    	mov    0x250b7(%rip),%ebx        # 2c300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    7249:	be 20 00 00 00       	mov    $0x20,%esi
    724e:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    7255:	00 00 
    7257:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    725e:	00 00 
    7260:	48 8d 6c 24 70       	lea    0x70(%rsp),%rbp
    7265:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    726c:	00 00 
    726e:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    7275:	00 00 
    7277:	89 5c 24 68          	mov    %ebx,0x68(%rsp)
    727b:	89 7c 24 6c          	mov    %edi,0x6c(%rsp)
    727f:	e8 6c 77 00 00       	call   e9f0 <calloc>
    7284:	48 63 7c 24 0c       	movslq 0xc(%rsp),%rdi
    7289:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    728e:	8d 43 02             	lea    0x2(%rbx),%eax
    7291:	83 c3 01             	add    $0x1,%ebx
    7294:	be 20 00 00 00       	mov    $0x20,%esi
    7299:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    72a0:	00 00 
    72a2:	89 9c 24 98 00 00 00 	mov    %ebx,0x98(%rsp)
    72a9:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    72ae:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
    72b5:	00 00 00 00 00 
    72ba:	48 c7 84 24 88 00 00 	movq   $0x0,0x88(%rsp)
    72c1:	00 00 00 00 00 
    72c6:	48 c7 84 24 90 00 00 	movq   $0x0,0x90(%rsp)
    72cd:	00 00 00 00 00 
    72d2:	89 bc 24 9c 00 00 00 	mov    %edi,0x9c(%rsp)
    72d9:	89 05 21 50 02 00    	mov    %eax,0x25021(%rip)        # 2c300 <_ZN8TraceMemIN5Table10TableEntryEE5countE>
    72df:	e8 0c 77 00 00       	call   e9f0 <calloc>
    72e4:	48 89 ea             	mov    %rbp,%rdx
    72e7:	48 89 de             	mov    %rbx,%rsi
    72ea:	4c 89 ef             	mov    %r13,%rdi
    72ed:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    72f2:	e8 89 f5 ff ff       	call   6880 <_Z4joinR5TableS0_S0_>
    72f7:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    72fc:	48 8d 75 10          	lea    0x10(%rbp),%rsi
    7300:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
    7307:	00 
    7308:	48 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%rbp
    730f:	00 
    7310:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    7317:	00 
    7318:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    731d:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    7324:	00 
    7325:	e8 96 de ff ff       	call   51c0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>
    732a:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
    7331:	48 8d 73 10          	lea    0x10(%rbx),%rsi
    7335:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    733c:	00 
    733d:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    7341:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
    7348:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
    734f:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
    7356:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    735b:	48 89 84 24 a0 00 00 	mov    %rax,0xa0(%rsp)
    7362:	00 
    7363:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    7368:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    736f:	00 
    7370:	e8 4b de ff ff       	call   51c0 <_ZNSt3__16vectorIN8TraceMemIN5Table10TableEntryEE8LogEntryENS_9allocatorIS5_EEEC1ERKS8_>
    7375:	8b 44 24 68          	mov    0x68(%rsp),%eax
    7379:	48 89 ea             	mov    %rbp,%rdx
    737c:	48 89 de             	mov    %rbx,%rsi
    737f:	4c 89 e7             	mov    %r12,%rdi
    7382:	89 84 24 c8 00 00 00 	mov    %eax,0xc8(%rsp)
    7389:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
    738d:	89 84 24 cc 00 00 00 	mov    %eax,0xcc(%rsp)
    7394:	e8 87 db ff ff       	call   4f20 <_Z8toStringPc5TableS0_>
    7399:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    73a0:	00 
    73a1:	48 85 ff             	test   %rdi,%rdi
    73a4:	74 2b                	je     73d1 <process_input+0x1e1>
    73a6:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    73ad:	00 
    73ae:	48 39 d7             	cmp    %rdx,%rdi
    73b1:	74 19                	je     73cc <process_input+0x1dc>
    73b3:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    73b7:	48 29 f8             	sub    %rdi,%rax
    73ba:	48 f7 d0             	not    %rax
    73bd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    73c1:	48 01 d0             	add    %rdx,%rax
    73c4:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    73cb:	00 
    73cc:	e8 4f 5c 01 00       	call   1d020 <_ZdlPv>
    73d1:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
    73d8:	00 
    73d9:	48 85 ff             	test   %rdi,%rdi
    73dc:	74 2b                	je     7409 <process_input+0x219>
    73de:	48 8b 94 24 e8 00 00 	mov    0xe8(%rsp),%rdx
    73e5:	00 
    73e6:	48 39 d7             	cmp    %rdx,%rdi
    73e9:	74 19                	je     7404 <process_input+0x214>
    73eb:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    73ef:	48 29 f8             	sub    %rdi,%rax
    73f2:	48 f7 d0             	not    %rax
    73f5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    73f9:	48 01 d0             	add    %rdx,%rax
    73fc:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    7403:	00 
    7404:	e8 17 5c 01 00       	call   1d020 <_ZdlPv>
    7409:	48 8d 3d a3 ae 01 00 	lea    0x1aea3(%rip),%rdi        # 222b3 <g_dyn_entry_table+0x2b3>
    7410:	31 c0                	xor    %eax,%eax
    7412:	e8 99 dc ff ff       	call   50b0 <printf>
    7417:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    741e:	00 
    741f:	48 85 ff             	test   %rdi,%rdi
    7422:	74 2b                	je     744f <process_input+0x25f>
    7424:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    742b:	00 
    742c:	48 39 d7             	cmp    %rdx,%rdi
    742f:	74 19                	je     744a <process_input+0x25a>
    7431:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    7435:	48 29 f8             	sub    %rdi,%rax
    7438:	48 f7 d0             	not    %rax
    743b:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    743f:	48 01 d0             	add    %rdx,%rax
    7442:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    7449:	00 
    744a:	e8 d1 5b 01 00       	call   1d020 <_ZdlPv>
    744f:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    7454:	48 85 ff             	test   %rdi,%rdi
    7457:	74 25                	je     747e <process_input+0x28e>
    7459:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    745e:	48 39 d7             	cmp    %rdx,%rdi
    7461:	74 16                	je     7479 <process_input+0x289>
    7463:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    7467:	48 29 f8             	sub    %rdi,%rax
    746a:	48 f7 d0             	not    %rax
    746d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    7471:	48 01 d0             	add    %rdx,%rax
    7474:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    7479:	e8 a2 5b 01 00       	call   1d020 <_ZdlPv>
    747e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    7483:	48 85 ff             	test   %rdi,%rdi
    7486:	74 25                	je     74ad <process_input+0x2bd>
    7488:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    748d:	48 39 d7             	cmp    %rdx,%rdi
    7490:	74 16                	je     74a8 <process_input+0x2b8>
    7492:	48 8d 42 f8          	lea    -0x8(%rdx),%rax
    7496:	48 29 f8             	sub    %rdi,%rax
    7499:	48 f7 d0             	not    %rax
    749c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    74a0:	48 01 d0             	add    %rdx,%rax
    74a3:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    74a8:	e8 73 5b 01 00       	call   1d020 <_ZdlPv>
    74ad:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    74b4:	00 
    74b5:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    74bc:	00 00 
    74be:	75 3d                	jne    74fd <process_input+0x30d>
    74c0:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    74c7:	5b                   	pop    %rbx
    74c8:	5d                   	pop    %rbp
    74c9:	41 5c                	pop    %r12
    74cb:	41 5d                	pop    %r13
    74cd:	c3                   	ret    
    74ce:	48 89 c3             	mov    %rax,%rbx
    74d1:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    74d6:	48 85 ff             	test   %rdi,%rdi
    74d9:	0f 84 2f 01 00 00    	je     760e <process_input+0x41e>
    74df:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    74e4:	31 c9                	xor    %ecx,%ecx
    74e6:	48 89 c2             	mov    %rax,%rdx
    74e9:	48 39 d7             	cmp    %rdx,%rdi
    74ec:	0f 84 01 01 00 00    	je     75f3 <process_input+0x403>
    74f2:	48 83 ea 08          	sub    $0x8,%rdx
    74f6:	b9 01 00 00 00       	mov    $0x1,%ecx
    74fb:	eb ec                	jmp    74e9 <process_input+0x2f9>
    74fd:	e8 be 84 00 00       	call   f9c0 <__stack_chk_fail>
    7502:	48 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%rdi
    7509:	00 
    750a:	48 89 c3             	mov    %rax,%rbx
    750d:	48 85 ff             	test   %rdi,%rdi
    7510:	74 24                	je     7536 <process_input+0x346>
    7512:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    7519:	00 
    751a:	31 c9                	xor    %ecx,%ecx
    751c:	48 89 d0             	mov    %rdx,%rax
    751f:	48 39 c7             	cmp    %rax,%rdi
    7522:	0f 84 ee 00 00 00    	je     7616 <process_input+0x426>
    7528:	48 83 e8 08          	sub    $0x8,%rax
    752c:	b9 01 00 00 00       	mov    $0x1,%ecx
    7531:	eb ec                	jmp    751f <process_input+0x32f>
    7533:	48 89 c3             	mov    %rax,%rbx
    7536:	48 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%rdi
    753d:	00 
    753e:	48 85 ff             	test   %rdi,%rdi
    7541:	74 20                	je     7563 <process_input+0x373>
    7543:	48 8b 94 24 e8 00 00 	mov    0xe8(%rsp),%rdx
    754a:	00 
    754b:	31 c9                	xor    %ecx,%ecx
    754d:	48 89 d0             	mov    %rdx,%rax
    7550:	48 39 c7             	cmp    %rax,%rdi
    7553:	74 38                	je     758d <process_input+0x39d>
    7555:	48 83 e8 08          	sub    $0x8,%rax
    7559:	b9 01 00 00 00       	mov    $0x1,%ecx
    755e:	eb f0                	jmp    7550 <process_input+0x360>
    7560:	48 89 c3             	mov    %rax,%rbx
    7563:	48 8b bc 24 80 00 00 	mov    0x80(%rsp),%rdi
    756a:	00 
    756b:	48 85 ff             	test   %rdi,%rdi
    756e:	74 5b                	je     75cb <process_input+0x3db>
    7570:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    7577:	00 
    7578:	31 c9                	xor    %ecx,%ecx
    757a:	48 89 c2             	mov    %rax,%rdx
    757d:	48 39 d7             	cmp    %rdx,%rdi
    7580:	74 2b                	je     75ad <process_input+0x3bd>
    7582:	48 83 ea 08          	sub    $0x8,%rdx
    7586:	b9 01 00 00 00       	mov    $0x1,%ecx
    758b:	eb f0                	jmp    757d <process_input+0x38d>
    758d:	48 89 d0             	mov    %rdx,%rax
    7590:	48 29 f8             	sub    %rdi,%rax
    7593:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    7597:	48 29 c2             	sub    %rax,%rdx
    759a:	84 c9                	test   %cl,%cl
    759c:	74 08                	je     75a6 <process_input+0x3b6>
    759e:	48 89 94 24 e8 00 00 	mov    %rdx,0xe8(%rsp)
    75a5:	00 
    75a6:	e8 75 5a 01 00       	call   1d020 <_ZdlPv>
    75ab:	eb b6                	jmp    7563 <process_input+0x373>
    75ad:	48 89 c2             	mov    %rax,%rdx
    75b0:	48 29 fa             	sub    %rdi,%rdx
    75b3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    75b7:	48 29 d0             	sub    %rdx,%rax
    75ba:	84 c9                	test   %cl,%cl
    75bc:	74 08                	je     75c6 <process_input+0x3d6>
    75be:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    75c5:	00 
    75c6:	e8 55 5a 01 00       	call   1d020 <_ZdlPv>
    75cb:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    75d0:	48 85 ff             	test   %rdi,%rdi
    75d3:	0f 84 f8 fe ff ff    	je     74d1 <process_input+0x2e1>
    75d9:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    75de:	31 c9                	xor    %ecx,%ecx
    75e0:	48 89 c2             	mov    %rax,%rdx
    75e3:	48 39 d7             	cmp    %rdx,%rdi
    75e6:	74 51                	je     7639 <process_input+0x449>
    75e8:	48 83 ea 08          	sub    $0x8,%rdx
    75ec:	b9 01 00 00 00       	mov    $0x1,%ecx
    75f1:	eb f0                	jmp    75e3 <process_input+0x3f3>
    75f3:	48 89 c2             	mov    %rax,%rdx
    75f6:	48 29 fa             	sub    %rdi,%rdx
    75f9:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    75fd:	48 29 d0             	sub    %rdx,%rax
    7600:	84 c9                	test   %cl,%cl
    7602:	74 05                	je     7609 <process_input+0x419>
    7604:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7609:	e8 12 5a 01 00       	call   1d020 <_ZdlPv>
    760e:	48 89 df             	mov    %rbx,%rdi
    7611:	e8 ea 1d 01 00       	call   19400 <_Unwind_Resume>
    7616:	48 89 d0             	mov    %rdx,%rax
    7619:	48 29 f8             	sub    %rdi,%rax
    761c:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    7620:	48 29 c2             	sub    %rax,%rdx
    7623:	84 c9                	test   %cl,%cl
    7625:	74 08                	je     762f <process_input+0x43f>
    7627:	48 89 94 24 b8 00 00 	mov    %rdx,0xb8(%rsp)
    762e:	00 
    762f:	e8 ec 59 01 00       	call   1d020 <_ZdlPv>
    7634:	e9 fd fe ff ff       	jmp    7536 <process_input+0x346>
    7639:	48 89 c2             	mov    %rax,%rdx
    763c:	48 29 fa             	sub    %rdi,%rdx
    763f:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    7643:	48 29 d0             	sub    %rdx,%rax
    7646:	84 c9                	test   %cl,%cl
    7648:	74 05                	je     764f <process_input+0x45f>
    764a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    764f:	e8 cc 59 01 00       	call   1d020 <_ZdlPv>
    7654:	e9 78 fe ff ff       	jmp    74d1 <process_input+0x2e1>
    7659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007660 <ecall_type_char>:
    7660:	40 80 ff 12          	cmp    $0x12,%dil
    7664:	74 22                	je     7688 <ecall_type_char+0x28>
    7666:	48 8d 0d 98 ac 01 00 	lea    0x1ac98(%rip),%rcx        # 22305 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x5>
    766d:	48 8d 15 6c ae 01 00 	lea    0x1ae6c(%rip),%rdx        # 224e0 <_ZZ15ecall_type_charE8__func__>
    7674:	48 8d 3d 1d ad 01 00 	lea    0x1ad1d(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    767b:	be 43 00 00 00       	mov    $0x43,%esi
    7680:	e9 5b 43 00 00       	jmp    b9e0 <__assert>
    7685:	0f 1f 00             	nopl   (%rax)
    7688:	f3 c3                	repz ret 
    768a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007690 <ecall_type_int>:
    7690:	81 ff d2 04 00 00    	cmp    $0x4d2,%edi
    7696:	74 28                	je     76c0 <ecall_type_int+0x30>
    7698:	48 8d 0d 72 ac 01 00 	lea    0x1ac72(%rip),%rcx        # 22311 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    769f:	48 8d 15 22 ae 01 00 	lea    0x1ae22(%rip),%rdx        # 224c8 <_ZZ14ecall_type_intE8__func__>
    76a6:	48 8d 3d eb ac 01 00 	lea    0x1aceb(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    76ad:	be 4e 00 00 00       	mov    $0x4e,%esi
    76b2:	e9 29 43 00 00       	jmp    b9e0 <__assert>
    76b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    76be:	00 00 
    76c0:	f3 c3                	repz ret 
    76c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    76c9:	00 00 00 
    76cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000076d0 <ecall_type_float>:
    76d0:	0f 28 d0             	movaps %xmm0,%xmm2
    76d3:	f3 0f 10 1d 25 ae 01 	movss  0x1ae25(%rip),%xmm3        # 22500 <_ZZ15ecall_type_charE8__func__+0x20>
    76da:	00 
    76db:	f3 0f 10 0d 41 ae 01 	movss  0x1ae41(%rip),%xmm1        # 22524 <_ZZ15ecall_type_charE8__func__+0x44>
    76e2:	00 
    76e3:	f3 0f 5c d1          	subss  %xmm1,%xmm2
    76e7:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    76eb:	f3 0f 10 05 2d ae 01 	movss  0x1ae2d(%rip),%xmm0        # 22520 <_ZZ15ecall_type_charE8__func__+0x40>
    76f2:	00 
    76f3:	0f 54 d3             	andps  %xmm3,%xmm2
    76f6:	0f 54 cb             	andps  %xmm3,%xmm1
    76f9:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    76fd:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    7701:	0f 2e c2             	ucomiss %xmm2,%xmm0
    7704:	72 0a                	jb     7710 <ecall_type_float+0x40>
    7706:	f3 c3                	repz ret 
    7708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    770f:	00 
    7710:	48 8d 0d a1 ac 01 00 	lea    0x1aca1(%rip),%rcx        # 223b8 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0xb8>
    7717:	48 8d 15 92 ad 01 00 	lea    0x1ad92(%rip),%rdx        # 224b0 <_ZZ16ecall_type_floatE8__func__>
    771e:	48 8d 3d 73 ac 01 00 	lea    0x1ac73(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    7725:	be 59 00 00 00       	mov    $0x59,%esi
    772a:	e9 b1 42 00 00       	jmp    b9e0 <__assert>
    772f:	90                   	nop

0000000000007730 <ecall_type_double>:
    7730:	f2 0f 10 0d e0 ad 01 	movsd  0x1ade0(%rip),%xmm1        # 22518 <_ZZ15ecall_type_charE8__func__+0x38>
    7737:	00 
    7738:	66 0f 28 d0          	movapd %xmm0,%xmm2
    773c:	f2 0f 10 1d ac ad 01 	movsd  0x1adac(%rip),%xmm3        # 224f0 <_ZZ15ecall_type_charE8__func__+0x10>
    7743:	00 
    7744:	f2 0f 5c d1          	subsd  %xmm1,%xmm2
    7748:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    774c:	f2 0f 10 05 bc ad 01 	movsd  0x1adbc(%rip),%xmm0        # 22510 <_ZZ15ecall_type_charE8__func__+0x30>
    7753:	00 
    7754:	66 0f 54 d3          	andpd  %xmm3,%xmm2
    7758:	66 0f 54 cb          	andpd  %xmm3,%xmm1
    775c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    7760:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    7764:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
    7768:	72 06                	jb     7770 <ecall_type_double+0x40>
    776a:	f3 c3                	repz ret 
    776c:	0f 1f 40 00          	nopl   0x0(%rax)
    7770:	48 8d 0d 69 ac 01 00 	lea    0x1ac69(%rip),%rcx        # 223e0 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0xe0>
    7777:	48 8d 15 12 ad 01 00 	lea    0x1ad12(%rip),%rdx        # 22490 <_ZZ17ecall_type_doubleE8__func__>
    777e:	48 8d 3d 13 ac 01 00 	lea    0x1ac13(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    7785:	be 64 00 00 00       	mov    $0x64,%esi
    778a:	e9 51 42 00 00       	jmp    b9e0 <__assert>
    778f:	90                   	nop

0000000000007790 <ecall_type_size_t>:
    7790:	48 81 ff 4e 61 bc 00 	cmp    $0xbc614e,%rdi
    7797:	74 27                	je     77c0 <ecall_type_size_t+0x30>
    7799:	48 8d 0d 7d ab 01 00 	lea    0x1ab7d(%rip),%rcx        # 2231d <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x1d>
    77a0:	48 8d 15 c9 ac 01 00 	lea    0x1acc9(%rip),%rdx        # 22470 <_ZZ17ecall_type_size_tE8__func__>
    77a7:	48 8d 3d ea ab 01 00 	lea    0x1abea(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    77ae:	be 6f 00 00 00       	mov    $0x6f,%esi
    77b3:	e9 28 42 00 00       	jmp    b9e0 <__assert>
    77b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    77bf:	00 
    77c0:	f3 c3                	repz ret 
    77c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    77c9:	00 00 00 
    77cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000077d0 <ecall_type_wchar_t>:
    77d0:	81 ff 34 12 00 00    	cmp    $0x1234,%edi
    77d6:	74 28                	je     7800 <ecall_type_wchar_t+0x30>
    77d8:	48 8d 0d 56 ab 01 00 	lea    0x1ab56(%rip),%rcx        # 22335 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x35>
    77df:	48 8d 15 6a ac 01 00 	lea    0x1ac6a(%rip),%rdx        # 22450 <_ZZ18ecall_type_wchar_tE8__func__>
    77e6:	48 8d 3d ab ab 01 00 	lea    0x1abab(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    77ed:	be 7a 00 00 00       	mov    $0x7a,%esi
    77f2:	e9 e9 41 00 00       	jmp    b9e0 <__assert>
    77f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    77fe:	00 00 
    7800:	f3 c3                	repz ret 
    7802:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7809:	00 00 00 
    780c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007810 <ecall_type_struct>:
    7810:	81 ff d2 04 00 00    	cmp    $0x4d2,%edi
    7816:	53                   	push   %rbx
    7817:	48 89 f3             	mov    %rsi,%rbx
    781a:	74 1f                	je     783b <ecall_type_struct+0x2b>
    781c:	48 8d 0d 29 ab 01 00 	lea    0x1ab29(%rip),%rcx        # 2234c <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x4c>
    7823:	48 8d 15 06 ac 01 00 	lea    0x1ac06(%rip),%rdx        # 22430 <_ZZ17ecall_type_structE8__func__>
    782a:	48 8d 3d 67 ab 01 00 	lea    0x1ab67(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    7831:	be 85 00 00 00       	mov    $0x85,%esi
    7836:	e8 a5 41 00 00       	call   b9e0 <__assert>
    783b:	48 81 fb 2e 16 00 00 	cmp    $0x162e,%rbx
    7842:	74 24                	je     7868 <ecall_type_struct+0x58>
    7844:	5b                   	pop    %rbx
    7845:	48 8d 0d 19 ab 01 00 	lea    0x1ab19(%rip),%rcx        # 22365 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x65>
    784c:	48 8d 15 dd ab 01 00 	lea    0x1abdd(%rip),%rdx        # 22430 <_ZZ17ecall_type_structE8__func__>
    7853:	48 8d 3d 3e ab 01 00 	lea    0x1ab3e(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    785a:	be 86 00 00 00       	mov    $0x86,%esi
    785f:	e9 7c 41 00 00       	jmp    b9e0 <__assert>
    7864:	0f 1f 40 00          	nopl   0x0(%rax)
    7868:	5b                   	pop    %rbx
    7869:	c3                   	ret    
    786a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007870 <ecall_type_enum_union>:
    7870:	55                   	push   %rbp
    7871:	53                   	push   %rbx
    7872:	48 89 f3             	mov    %rsi,%rbx
    7875:	89 fd                	mov    %edi,%ebp
    7877:	be 08 00 00 00       	mov    $0x8,%esi
    787c:	48 89 df             	mov    %rbx,%rdi
    787f:	48 83 ec 08          	sub    $0x8,%rsp
    7883:	e8 18 15 00 00       	call   8da0 <sgx_is_outside_enclave>
    7888:	83 f8 01             	cmp    $0x1,%eax
    788b:	75 38                	jne    78c5 <ecall_type_enum_union+0x55>
    788d:	85 ed                	test   %ebp,%ebp
    788f:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    7895:	75 09                	jne    78a0 <ecall_type_enum_union+0x30>
    7897:	48 83 c4 08          	add    $0x8,%rsp
    789b:	5b                   	pop    %rbx
    789c:	5d                   	pop    %rbp
    789d:	c3                   	ret    
    789e:	66 90                	xchg   %ax,%ax
    78a0:	48 83 c4 08          	add    $0x8,%rsp
    78a4:	48 8d 0d d3 aa 01 00 	lea    0x1aad3(%rip),%rcx        # 2237e <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x7e>
    78ab:	48 8d 15 5e ab 01 00 	lea    0x1ab5e(%rip),%rdx        # 22410 <_ZZ21ecall_type_enum_unionE8__func__>
    78b2:	5b                   	pop    %rbx
    78b3:	5d                   	pop    %rbp
    78b4:	48 8d 3d dd aa 01 00 	lea    0x1aadd(%rip),%rdi        # 22398 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x98>
    78bb:	be 97 00 00 00       	mov    $0x97,%esi
    78c0:	e9 1b 41 00 00       	jmp    b9e0 <__assert>
    78c5:	e8 3a 9d 01 00       	call   21604 <abort>
    78ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000078d0 <ecall_pointer_user_check>:
    78d0:	55                   	push   %rbp
    78d1:	53                   	push   %rbx
    78d2:	48 89 fd             	mov    %rdi,%rbp
    78d5:	48 89 f3             	mov    %rsi,%rbx
    78d8:	48 83 ec 78          	sub    $0x78,%rsp
    78dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    78e3:	00 00 
    78e5:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    78ea:	31 c0                	xor    %eax,%eax
    78ec:	e8 af 14 00 00       	call   8da0 <sgx_is_outside_enclave>
    78f1:	83 f8 01             	cmp    $0x1,%eax
    78f4:	0f 85 90 01 00 00    	jne    7a8a <ecall_pointer_user_check+0x1ba>
    78fa:	31 c0                	xor    %eax,%eax
    78fc:	48 89 e7             	mov    %rsp,%rdi
    78ff:	b9 0c 00 00 00       	mov    $0xc,%ecx
    7904:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7907:	48 83 fb 64          	cmp    $0x64,%rbx
    790b:	b8 64 00 00 00       	mov    $0x64,%eax
    7910:	49 89 e0             	mov    %rsp,%r8
    7913:	48 0f 47 d8          	cmova  %rax,%rbx
    7917:	48 89 ee             	mov    %rbp,%rsi
    791a:	83 fb 08             	cmp    $0x8,%ebx
    791d:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    7923:	48 89 e7             	mov    %rsp,%rdi
    7926:	72 08                	jb     7930 <ecall_pointer_user_check+0x60>
    7928:	89 d9                	mov    %ebx,%ecx
    792a:	c1 e9 03             	shr    $0x3,%ecx
    792d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    7930:	31 c0                	xor    %eax,%eax
    7932:	f6 c3 04             	test   $0x4,%bl
    7935:	74 09                	je     7940 <ecall_pointer_user_check+0x70>
    7937:	8b 06                	mov    (%rsi),%eax
    7939:	89 07                	mov    %eax,(%rdi)
    793b:	b8 04 00 00 00       	mov    $0x4,%eax
    7940:	f6 c3 02             	test   $0x2,%bl
    7943:	74 0c                	je     7951 <ecall_pointer_user_check+0x81>
    7945:	0f b7 14 06          	movzwl (%rsi,%rax,1),%edx
    7949:	66 89 14 07          	mov    %dx,(%rdi,%rax,1)
    794d:	48 83 c0 02          	add    $0x2,%rax
    7951:	f6 c3 01             	test   $0x1,%bl
    7954:	74 07                	je     795d <ecall_pointer_user_check+0x8d>
    7956:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    795a:	88 14 07             	mov    %dl,(%rdi,%rax,1)
    795d:	48 83 fb 01          	cmp    $0x1,%rbx
    7961:	0f 86 08 01 00 00    	jbe    7a6f <ecall_pointer_user_check+0x19f>
    7967:	48 89 da             	mov    %rbx,%rdx
    796a:	31 c9                	xor    %ecx,%ecx
    796c:	4c 89 c0             	mov    %r8,%rax
    796f:	90                   	nop
    7970:	48 83 c0 02          	add    $0x2,%rax
    7974:	0f bf 78 fe          	movswl -0x2(%rax),%edi
    7978:	48 83 ea 02          	sub    $0x2,%rdx
    797c:	01 f9                	add    %edi,%ecx
    797e:	48 83 fa 01          	cmp    $0x1,%rdx
    7982:	77 ec                	ja     7970 <ecall_pointer_user_check+0xa0>
    7984:	48 8d 43 fe          	lea    -0x2(%rbx),%rax
    7988:	48 d1 e8             	shr    %rax
    798b:	4d 8d 44 40 02       	lea    0x2(%r8,%rax,2),%r8
    7990:	48 89 d8             	mov    %rbx,%rax
    7993:	83 e0 01             	and    $0x1,%eax
    7996:	48 85 c0             	test   %rax,%rax
    7999:	74 06                	je     79a1 <ecall_pointer_user_check+0xd1>
    799b:	41 0f be 00          	movsbl (%r8),%eax
    799f:	01 c1                	add    %eax,%ecx
    79a1:	48 8d 3d 80 ab 01 00 	lea    0x1ab80(%rip),%rdi        # 22528 <_ZZ15ecall_type_charE8__func__+0x48>
    79a8:	31 c0                	xor    %eax,%eax
    79aa:	48 89 da             	mov    %rbx,%rdx
    79ad:	f7 d1                	not    %ecx
    79af:	48 89 ee             	mov    %rbp,%rsi
    79b2:	e8 f9 d6 ff ff       	call   50b0 <printf>
    79b7:	48 83 fb 0c          	cmp    $0xc,%rbx
    79bb:	b8 0c 00 00 00       	mov    $0xc,%eax
    79c0:	48 8d 15 7d ab 01 00 	lea    0x1ab7d(%rip),%rdx        # 22544 <_ZZ15ecall_type_charE8__func__+0x64>
    79c7:	48 0f 46 c3          	cmovbe %rbx,%rax
    79cb:	83 f8 08             	cmp    $0x8,%eax
    79ce:	73 40                	jae    7a10 <ecall_pointer_user_check+0x140>
    79d0:	a8 04                	test   $0x4,%al
    79d2:	0f 85 7f 00 00 00    	jne    7a57 <ecall_pointer_user_check+0x187>
    79d8:	85 c0                	test   %eax,%eax
    79da:	74 12                	je     79ee <ecall_pointer_user_check+0x11e>
    79dc:	0f b6 0d 61 ab 01 00 	movzbl 0x1ab61(%rip),%ecx        # 22544 <_ZZ15ecall_type_charE8__func__+0x64>
    79e3:	a8 02                	test   $0x2,%al
    79e5:	88 4d 00             	mov    %cl,0x0(%rbp)
    79e8:	0f 85 8b 00 00 00    	jne    7a79 <ecall_pointer_user_check+0x1a9>
    79ee:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    79f3:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    79fa:	00 00 
    79fc:	48 89 d8             	mov    %rbx,%rax
    79ff:	0f 85 8a 00 00 00    	jne    7a8f <ecall_pointer_user_check+0x1bf>
    7a05:	48 83 c4 78          	add    $0x78,%rsp
    7a09:	5b                   	pop    %rbx
    7a0a:	5d                   	pop    %rbp
    7a0b:	c3                   	ret    
    7a0c:	0f 1f 40 00          	nopl   0x0(%rax)
    7a10:	48 8b 0d 2d ab 01 00 	mov    0x1ab2d(%rip),%rcx        # 22544 <_ZZ15ecall_type_charE8__func__+0x64>
    7a17:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    7a1b:	89 c1                	mov    %eax,%ecx
    7a1d:	48 8b 74 0a f8       	mov    -0x8(%rdx,%rcx,1),%rsi
    7a22:	48 89 74 0d f8       	mov    %rsi,-0x8(%rbp,%rcx,1)
    7a27:	48 8d 4d 08          	lea    0x8(%rbp),%rcx
    7a2b:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    7a2f:	48 29 cd             	sub    %rcx,%rbp
    7a32:	48 29 ea             	sub    %rbp,%rdx
    7a35:	01 c5                	add    %eax,%ebp
    7a37:	83 e5 f8             	and    $0xfffffff8,%ebp
    7a3a:	83 fd 08             	cmp    $0x8,%ebp
    7a3d:	72 af                	jb     79ee <ecall_pointer_user_check+0x11e>
    7a3f:	83 e5 f8             	and    $0xfffffff8,%ebp
    7a42:	31 c0                	xor    %eax,%eax
    7a44:	89 c6                	mov    %eax,%esi
    7a46:	83 c0 08             	add    $0x8,%eax
    7a49:	48 8b 3c 32          	mov    (%rdx,%rsi,1),%rdi
    7a4d:	39 e8                	cmp    %ebp,%eax
    7a4f:	48 89 3c 31          	mov    %rdi,(%rcx,%rsi,1)
    7a53:	72 ef                	jb     7a44 <ecall_pointer_user_check+0x174>
    7a55:	eb 97                	jmp    79ee <ecall_pointer_user_check+0x11e>
    7a57:	89 c0                	mov    %eax,%eax
    7a59:	8b 0d e5 aa 01 00    	mov    0x1aae5(%rip),%ecx        # 22544 <_ZZ15ecall_type_charE8__func__+0x64>
    7a5f:	8b 54 02 fc          	mov    -0x4(%rdx,%rax,1),%edx
    7a63:	89 4d 00             	mov    %ecx,0x0(%rbp)
    7a66:	89 54 05 fc          	mov    %edx,-0x4(%rbp,%rax,1)
    7a6a:	e9 7f ff ff ff       	jmp    79ee <ecall_pointer_user_check+0x11e>
    7a6f:	48 89 d8             	mov    %rbx,%rax
    7a72:	31 c9                	xor    %ecx,%ecx
    7a74:	e9 1d ff ff ff       	jmp    7996 <ecall_pointer_user_check+0xc6>
    7a79:	89 c0                	mov    %eax,%eax
    7a7b:	0f b7 54 02 fe       	movzwl -0x2(%rdx,%rax,1),%edx
    7a80:	66 89 54 05 fe       	mov    %dx,-0x2(%rbp,%rax,1)
    7a85:	e9 64 ff ff ff       	jmp    79ee <ecall_pointer_user_check+0x11e>
    7a8a:	e8 75 9b 01 00       	call   21604 <abort>
    7a8f:	e8 2c 7f 00 00       	call   f9c0 <__stack_chk_fail>
    7a94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7a9b:	00 00 00 
    7a9e:	66 90                	xchg   %ax,%ax

0000000000007aa0 <ecall_pointer_out>:
    7aa0:	53                   	push   %rbx
    7aa1:	be 04 00 00 00       	mov    $0x4,%esi
    7aa6:	48 89 fb             	mov    %rdi,%rbx
    7aa9:	e8 92 12 00 00       	call   8d40 <sgx_is_within_enclave>
    7aae:	83 f8 01             	cmp    $0x1,%eax
    7ab1:	75 2d                	jne    7ae0 <ecall_pointer_out+0x40>
    7ab3:	8b 03                	mov    (%rbx),%eax
    7ab5:	85 c0                	test   %eax,%eax
    7ab7:	74 1f                	je     7ad8 <ecall_pointer_out+0x38>
    7ab9:	48 8d 0d 90 aa 01 00 	lea    0x1aa90(%rip),%rcx        # 22550 <_ZZ15ecall_type_charE8__func__+0x70>
    7ac0:	48 8d 15 e9 aa 01 00 	lea    0x1aae9(%rip),%rdx        # 225b0 <_ZZ17ecall_pointer_outE8__func__>
    7ac7:	48 8d 3d 9a aa 01 00 	lea    0x1aa9a(%rip),%rdi        # 22568 <_ZZ15ecall_type_charE8__func__+0x88>
    7ace:	be 6b 00 00 00       	mov    $0x6b,%esi
    7ad3:	e8 08 3f 00 00       	call   b9e0 <__assert>
    7ad8:	c7 03 d2 04 00 00    	movl   $0x4d2,(%rbx)
    7ade:	5b                   	pop    %rbx
    7adf:	c3                   	ret    
    7ae0:	e8 1f 9b 01 00       	call   21604 <abort>
    7ae5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7aec:	00 00 00 
    7aef:	90                   	nop

0000000000007af0 <ecall_pointer_in_out>:
    7af0:	53                   	push   %rbx
    7af1:	be 04 00 00 00       	mov    $0x4,%esi
    7af6:	48 89 fb             	mov    %rdi,%rbx
    7af9:	e8 42 12 00 00       	call   8d40 <sgx_is_within_enclave>
    7afe:	83 f8 01             	cmp    $0x1,%eax
    7b01:	75 08                	jne    7b0b <ecall_pointer_in_out+0x1b>
    7b03:	c7 03 d2 04 00 00    	movl   $0x4d2,(%rbx)
    7b09:	5b                   	pop    %rbx
    7b0a:	c3                   	ret    
    7b0b:	e8 f4 9a 01 00       	call   21604 <abort>

0000000000007b10 <ecall_pointer_in>:
    7b10:	e9 db ff ff ff       	jmp    7af0 <ecall_pointer_in_out>
    7b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7b1c:	00 00 00 
    7b1f:	90                   	nop

0000000000007b20 <ocall_pointer_attr>:
    7b20:	53                   	push   %rbx
    7b21:	48 83 ec 10          	sub    $0x10,%rsp
    7b25:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    7b2a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    7b31:	00 
    7b32:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7b39:	00 00 
    7b3b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7b40:	31 c0                	xor    %eax,%eax
    7b42:	48 89 df             	mov    %rbx,%rdi
    7b45:	e8 66 c1 ff ff       	call   3cb0 <ocall_pointer_user_check>
    7b4a:	85 c0                	test   %eax,%eax
    7b4c:	0f 85 e2 00 00 00    	jne    7c34 <ocall_pointer_attr+0x114>
    7b52:	48 89 df             	mov    %rbx,%rdi
    7b55:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    7b5c:	00 
    7b5d:	e8 be c1 ff ff       	call   3d20 <ocall_pointer_in>
    7b62:	85 c0                	test   %eax,%eax
    7b64:	0f 85 ca 00 00 00    	jne    7c34 <ocall_pointer_attr+0x114>
    7b6a:	8b 44 24 04          	mov    0x4(%rsp),%eax
    7b6e:	85 c0                	test   %eax,%eax
    7b70:	0f 85 9a 00 00 00    	jne    7c10 <ocall_pointer_attr+0xf0>
    7b76:	48 89 df             	mov    %rbx,%rdi
    7b79:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    7b80:	00 
    7b81:	e8 ba c2 ff ff       	call   3e40 <ocall_pointer_out>
    7b86:	85 c0                	test   %eax,%eax
    7b88:	0f 85 a6 00 00 00    	jne    7c34 <ocall_pointer_attr+0x114>
    7b8e:	81 7c 24 04 d2 04 00 	cmpl   $0x4d2,0x4(%rsp)
    7b95:	00 
    7b96:	74 1f                	je     7bb7 <ocall_pointer_attr+0x97>
    7b98:	48 8d 0d 72 a7 01 00 	lea    0x1a772(%rip),%rcx        # 22311 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    7b9f:	48 8d 15 ea a9 01 00 	lea    0x1a9ea(%rip),%rdx        # 22590 <_ZZ18ocall_pointer_attrE8__func__>
    7ba6:	48 8d 3d bb a9 01 00 	lea    0x1a9bb(%rip),%rdi        # 22568 <_ZZ15ecall_type_charE8__func__+0x88>
    7bad:	be 8f 00 00 00       	mov    $0x8f,%esi
    7bb2:	e8 29 3e 00 00       	call   b9e0 <__assert>
    7bb7:	48 89 df             	mov    %rbx,%rdi
    7bba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    7bc1:	00 
    7bc2:	e8 c9 c3 ff ff       	call   3f90 <ocall_pointer_in_out>
    7bc7:	85 c0                	test   %eax,%eax
    7bc9:	75 69                	jne    7c34 <ocall_pointer_attr+0x114>
    7bcb:	81 7c 24 04 d2 04 00 	cmpl   $0x4d2,0x4(%rsp)
    7bd2:	00 
    7bd3:	74 1f                	je     7bf4 <ocall_pointer_attr+0xd4>
    7bd5:	48 8d 0d 35 a7 01 00 	lea    0x1a735(%rip),%rcx        # 22311 <_ZZN8TraceMemIN5Table10TableEntryEE4readEiE8__func__+0x11>
    7bdc:	48 8d 15 ad a9 01 00 	lea    0x1a9ad(%rip),%rdx        # 22590 <_ZZ18ocall_pointer_attrE8__func__>
    7be3:	48 8d 3d 7e a9 01 00 	lea    0x1a97e(%rip),%rdi        # 22568 <_ZZ15ecall_type_charE8__func__+0x88>
    7bea:	be 95 00 00 00       	mov    $0x95,%esi
    7bef:	e8 ec 3d 00 00       	call   b9e0 <__assert>
    7bf4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7bf9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7c00:	00 00 
    7c02:	75 35                	jne    7c39 <ocall_pointer_attr+0x119>
    7c04:	48 83 c4 10          	add    $0x10,%rsp
    7c08:	5b                   	pop    %rbx
    7c09:	c3                   	ret    
    7c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c10:	48 8d 0d 3a a9 01 00 	lea    0x1a93a(%rip),%rcx        # 22551 <_ZZ15ecall_type_charE8__func__+0x71>
    7c17:	48 8d 15 72 a9 01 00 	lea    0x1a972(%rip),%rdx        # 22590 <_ZZ18ocall_pointer_attrE8__func__>
    7c1e:	48 8d 3d 43 a9 01 00 	lea    0x1a943(%rip),%rdi        # 22568 <_ZZ15ecall_type_charE8__func__+0x88>
    7c25:	be 89 00 00 00       	mov    $0x89,%esi
    7c2a:	e8 b1 3d 00 00       	call   b9e0 <__assert>
    7c2f:	e9 42 ff ff ff       	jmp    7b76 <ocall_pointer_attr+0x56>
    7c34:	e8 cb 99 01 00       	call   21604 <abort>
    7c39:	e8 82 7d 00 00       	call   f9c0 <__stack_chk_fail>
    7c3e:	66 90                	xchg   %ax,%ax

0000000000007c40 <ecall_pointer_string>:
    7c40:	53                   	push   %rbx
    7c41:	48 89 fb             	mov    %rdi,%rbx
    7c44:	e8 37 7c 00 00       	call   f880 <strlen>
    7c49:	48 89 df             	mov    %rbx,%rdi
    7c4c:	48 8d 35 07 a9 01 00 	lea    0x1a907(%rip),%rsi        # 2255a <_ZZ15ecall_type_charE8__func__+0x7a>
    7c53:	48 89 c2             	mov    %rax,%rdx
    7c56:	5b                   	pop    %rbx
    7c57:	e9 34 7c 00 00       	jmp    f890 <strncpy>
    7c5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007c60 <ecall_pointer_string_const>:
    7c60:	55                   	push   %rbp
    7c61:	53                   	push   %rbx
    7c62:	48 89 fb             	mov    %rdi,%rbx
    7c65:	48 83 ec 08          	sub    $0x8,%rsp
    7c69:	e8 12 7c 00 00       	call   f880 <strlen>
    7c6e:	48 89 c7             	mov    %rax,%rdi
    7c71:	e8 2a 54 01 00       	call   1d0a0 <_Znam>
    7c76:	48 89 df             	mov    %rbx,%rdi
    7c79:	48 89 c5             	mov    %rax,%rbp
    7c7c:	e8 ff 7b 00 00       	call   f880 <strlen>
    7c81:	48 89 ef             	mov    %rbp,%rdi
    7c84:	48 89 de             	mov    %rbx,%rsi
    7c87:	48 89 c2             	mov    %rax,%rdx
    7c8a:	e8 01 7c 00 00       	call   f890 <strncpy>
    7c8f:	48 83 c4 08          	add    $0x8,%rsp
    7c93:	48 89 ef             	mov    %rbp,%rdi
    7c96:	5b                   	pop    %rbx
    7c97:	5d                   	pop    %rbp
    7c98:	e9 93 53 01 00       	jmp    1d030 <_ZdaPv>
    7c9d:	0f 1f 00             	nopl   (%rax)

0000000000007ca0 <ecall_pointer_count>:
    7ca0:	89 f0                	mov    %esi,%eax
    7ca2:	83 e8 01             	sub    $0x1,%eax
    7ca5:	78 16                	js     7cbd <ecall_pointer_count+0x1d>
    7ca7:	48 98                	cltq   
    7ca9:	48 8d 14 87          	lea    (%rdi,%rax,4),%rdx
    7cad:	31 c0                	xor    %eax,%eax
    7caf:	90                   	nop
    7cb0:	89 02                	mov    %eax,(%rdx)
    7cb2:	83 c0 01             	add    $0x1,%eax
    7cb5:	48 83 ea 04          	sub    $0x4,%rdx
    7cb9:	39 f0                	cmp    %esi,%eax
    7cbb:	75 f3                	jne    7cb0 <ecall_pointer_count+0x10>
    7cbd:	f3 c3                	repz ret 
    7cbf:	90                   	nop

0000000000007cc0 <ecall_pointer_isptr_readonly>:
    7cc0:	48 89 f2             	mov    %rsi,%rdx
    7cc3:	48 8d 35 90 a8 01 00 	lea    0x1a890(%rip),%rsi        # 2255a <_ZZ15ecall_type_charE8__func__+0x7a>
    7cca:	e9 c1 7b 00 00       	jmp    f890 <strncpy>
    7ccf:	90                   	nop

0000000000007cd0 <ecall_pointer_size>:
    7cd0:	e9 eb ff ff ff       	jmp    7cc0 <ecall_pointer_isptr_readonly>
    7cd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7cdc:	00 00 00 
    7cdf:	90                   	nop

0000000000007ce0 <ecall_array_user_check>:
    7ce0:	41 54                	push   %r12
    7ce2:	55                   	push   %rbp
    7ce3:	be 10 00 00 00       	mov    $0x10,%esi
    7ce8:	53                   	push   %rbx
    7ce9:	48 89 fd             	mov    %rdi,%rbp
    7cec:	e8 af 10 00 00       	call   8da0 <sgx_is_outside_enclave>
    7cf1:	83 f8 01             	cmp    $0x1,%eax
    7cf4:	75 45                	jne    7d3b <ecall_array_user_check+0x5b>
    7cf6:	31 db                	xor    %ebx,%ebx
    7cf8:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    7cfe:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    7d01:	74 1f                	je     7d22 <ecall_array_user_check+0x42>
    7d03:	48 8d 0d b8 a8 01 00 	lea    0x1a8b8(%rip),%rcx        # 225c2 <_ZZ17ecall_pointer_outE8__func__+0x12>
    7d0a:	48 8d 15 5f a9 01 00 	lea    0x1a95f(%rip),%rdx        # 22670 <_ZZ22ecall_array_user_checkE8__func__>
    7d11:	48 8d 3d c8 a8 01 00 	lea    0x1a8c8(%rip),%rdi        # 225e0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    7d18:	be 2f 00 00 00       	mov    $0x2f,%esi
    7d1d:	e8 be 3c 00 00       	call   b9e0 <__assert>
    7d22:	44 89 e0             	mov    %r12d,%eax
    7d25:	48 83 c5 04          	add    $0x4,%rbp
    7d29:	29 d8                	sub    %ebx,%eax
    7d2b:	83 c3 01             	add    $0x1,%ebx
    7d2e:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7d31:	83 fb 04             	cmp    $0x4,%ebx
    7d34:	75 c8                	jne    7cfe <ecall_array_user_check+0x1e>
    7d36:	5b                   	pop    %rbx
    7d37:	5d                   	pop    %rbp
    7d38:	41 5c                	pop    %r12
    7d3a:	c3                   	ret    
    7d3b:	e8 c4 98 01 00       	call   21604 <abort>

0000000000007d40 <ecall_array_in>:
    7d40:	41 54                	push   %r12
    7d42:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    7d48:	55                   	push   %rbp
    7d49:	48 89 fd             	mov    %rdi,%rbp
    7d4c:	53                   	push   %rbx
    7d4d:	31 db                	xor    %ebx,%ebx
    7d4f:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    7d52:	74 1f                	je     7d73 <ecall_array_in+0x33>
    7d54:	48 8d 0d 67 a8 01 00 	lea    0x1a867(%rip),%rcx        # 225c2 <_ZZ17ecall_pointer_outE8__func__+0x12>
    7d5b:	48 8d 15 fe a8 01 00 	lea    0x1a8fe(%rip),%rdx        # 22660 <_ZZ14ecall_array_inE8__func__>
    7d62:	48 8d 3d 77 a8 01 00 	lea    0x1a877(%rip),%rdi        # 225e0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    7d69:	be 3b 00 00 00       	mov    $0x3b,%esi
    7d6e:	e8 6d 3c 00 00       	call   b9e0 <__assert>
    7d73:	44 89 e0             	mov    %r12d,%eax
    7d76:	48 83 c5 04          	add    $0x4,%rbp
    7d7a:	29 d8                	sub    %ebx,%eax
    7d7c:	83 c3 01             	add    $0x1,%ebx
    7d7f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7d82:	83 fb 04             	cmp    $0x4,%ebx
    7d85:	75 c8                	jne    7d4f <ecall_array_in+0xf>
    7d87:	5b                   	pop    %rbx
    7d88:	5d                   	pop    %rbp
    7d89:	41 5c                	pop    %r12
    7d8b:	c3                   	ret    
    7d8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007d90 <ecall_array_out>:
    7d90:	55                   	push   %rbp
    7d91:	53                   	push   %rbx
    7d92:	48 89 fd             	mov    %rdi,%rbp
    7d95:	bb 03 00 00 00       	mov    $0x3,%ebx
    7d9a:	48 83 ec 08          	sub    $0x8,%rsp
    7d9e:	8b 45 00             	mov    0x0(%rbp),%eax
    7da1:	85 c0                	test   %eax,%eax
    7da3:	75 1b                	jne    7dc0 <ecall_array_out+0x30>
    7da5:	89 5d 00             	mov    %ebx,0x0(%rbp)
    7da8:	83 eb 01             	sub    $0x1,%ebx
    7dab:	48 83 c5 04          	add    $0x4,%rbp
    7daf:	83 fb ff             	cmp    $0xffffffff,%ebx
    7db2:	75 ea                	jne    7d9e <ecall_array_out+0xe>
    7db4:	48 83 c4 08          	add    $0x8,%rsp
    7db8:	5b                   	pop    %rbx
    7db9:	5d                   	pop    %rbp
    7dba:	c3                   	ret    
    7dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7dc0:	48 8d 0d 07 a8 01 00 	lea    0x1a807(%rip),%rcx        # 225ce <_ZZ17ecall_pointer_outE8__func__+0x1e>
    7dc7:	48 8d 15 82 a8 01 00 	lea    0x1a882(%rip),%rdx        # 22650 <_ZZ15ecall_array_outE8__func__>
    7dce:	48 8d 3d 0b a8 01 00 	lea    0x1a80b(%rip),%rdi        # 225e0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    7dd5:	be 48 00 00 00       	mov    $0x48,%esi
    7dda:	e8 01 3c 00 00       	call   b9e0 <__assert>
    7ddf:	eb c4                	jmp    7da5 <ecall_array_out+0x15>
    7de1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7de8:	00 00 00 
    7deb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007df0 <ecall_array_in_out>:
    7df0:	41 54                	push   %r12
    7df2:	41 bc 03 00 00 00    	mov    $0x3,%r12d
    7df8:	55                   	push   %rbp
    7df9:	48 89 fd             	mov    %rdi,%rbp
    7dfc:	53                   	push   %rbx
    7dfd:	31 db                	xor    %ebx,%ebx
    7dff:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    7e02:	74 1f                	je     7e23 <ecall_array_in_out+0x33>
    7e04:	48 8d 0d b7 a7 01 00 	lea    0x1a7b7(%rip),%rcx        # 225c2 <_ZZ17ecall_pointer_outE8__func__+0x12>
    7e0b:	48 8d 15 1e a8 01 00 	lea    0x1a81e(%rip),%rdx        # 22630 <_ZZ18ecall_array_in_outE8__func__>
    7e12:	48 8d 3d c7 a7 01 00 	lea    0x1a7c7(%rip),%rdi        # 225e0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    7e19:	be 54 00 00 00       	mov    $0x54,%esi
    7e1e:	e8 bd 3b 00 00       	call   b9e0 <__assert>
    7e23:	44 89 e0             	mov    %r12d,%eax
    7e26:	48 83 c5 04          	add    $0x4,%rbp
    7e2a:	29 d8                	sub    %ebx,%eax
    7e2c:	83 c3 01             	add    $0x1,%ebx
    7e2f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7e32:	83 fb 04             	cmp    $0x4,%ebx
    7e35:	75 c8                	jne    7dff <ecall_array_in_out+0xf>
    7e37:	5b                   	pop    %rbx
    7e38:	5d                   	pop    %rbp
    7e39:	41 5c                	pop    %r12
    7e3b:	c3                   	ret    
    7e3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007e40 <ecall_array_isary>:
    7e40:	41 54                	push   %r12
    7e42:	55                   	push   %rbp
    7e43:	be 28 00 00 00       	mov    $0x28,%esi
    7e48:	53                   	push   %rbx
    7e49:	48 89 fd             	mov    %rdi,%rbp
    7e4c:	e8 4f 0f 00 00       	call   8da0 <sgx_is_outside_enclave>
    7e51:	83 f8 01             	cmp    $0x1,%eax
    7e54:	75 47                	jne    7e9d <ecall_array_isary+0x5d>
    7e56:	31 db                	xor    %ebx,%ebx
    7e58:	41 bc 09 00 00 00    	mov    $0x9,%r12d
    7e5e:	66 90                	xchg   %ax,%ax
    7e60:	39 5d 00             	cmp    %ebx,0x0(%rbp)
    7e63:	74 1f                	je     7e84 <ecall_array_isary+0x44>
    7e65:	48 8d 0d 56 a7 01 00 	lea    0x1a756(%rip),%rcx        # 225c2 <_ZZ17ecall_pointer_outE8__func__+0x12>
    7e6c:	48 8d 15 9d a7 01 00 	lea    0x1a79d(%rip),%rdx        # 22610 <_ZZ17ecall_array_isaryE8__func__>
    7e73:	48 8d 3d 66 a7 01 00 	lea    0x1a766(%rip),%rdi        # 225e0 <_ZZ17ecall_pointer_outE8__func__+0x30>
    7e7a:	be 63 00 00 00       	mov    $0x63,%esi
    7e7f:	e8 5c 3b 00 00       	call   b9e0 <__assert>
    7e84:	44 89 e0             	mov    %r12d,%eax
    7e87:	48 83 c5 04          	add    $0x4,%rbp
    7e8b:	29 d8                	sub    %ebx,%eax
    7e8d:	83 c3 01             	add    $0x1,%ebx
    7e90:	89 45 fc             	mov    %eax,-0x4(%rbp)
    7e93:	83 fb 0a             	cmp    $0xa,%ebx
    7e96:	75 c8                	jne    7e60 <ecall_array_isary+0x20>
    7e98:	5b                   	pop    %rbx
    7e99:	5d                   	pop    %rbp
    7e9a:	41 5c                	pop    %r12
    7e9c:	c3                   	ret    
    7e9d:	e8 62 97 01 00       	call   21604 <abort>
    7ea2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7ea9:	00 00 00 
    7eac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007eb0 <ecall_function_calling_convs>:
    7eb0:	55                   	push   %rbp
    7eb1:	53                   	push   %rbx
    7eb2:	b9 00 04 00 00       	mov    $0x400,%ecx
    7eb7:	ba 32 31 00 00       	mov    $0x3132,%edx
    7ebc:	be 39 30 00 00       	mov    $0x3039,%esi
    7ec1:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
    7ec7:	48 81 ec 38 20 00 00 	sub    $0x2038,%rsp
    7ece:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7ed5:	00 00 
    7ed7:	48 89 84 24 28 20 00 	mov    %rax,0x2028(%rsp)
    7ede:	00 
    7edf:	31 c0                	xor    %eax,%eax
    7ee1:	48 b8 31 32 33 34 35 	movabs $0x3837363534333231,%rax
    7ee8:	36 37 38 
    7eeb:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    7ef0:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    7ef5:	48 89 04 24          	mov    %rax,(%rsp)
    7ef9:	b8 39 30 00 00       	mov    $0x3039,%eax
    7efe:	66 89 54 24 18       	mov    %dx,0x18(%rsp)
    7f03:	66 89 44 24 08       	mov    %ax,0x8(%rsp)
    7f08:	48 b8 30 39 38 37 36 	movabs $0x3334353637383930,%rax
    7f0f:	35 34 33 
    7f12:	48 89 ea             	mov    %rbp,%rdx
    7f15:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    7f1a:	31 c0                	xor    %eax,%eax
    7f1c:	c6 44 24 0a 00       	movb   $0x0,0xa(%rsp)
    7f21:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7f24:	48 b8 31 32 33 34 35 	movabs $0x3837363534333231,%rax
    7f2b:	36 37 38 
    7f2e:	66 89 74 24 28       	mov    %si,0x28(%rsp)
    7f33:	31 ff                	xor    %edi,%edi
    7f35:	48 89 e6             	mov    %rsp,%rsi
    7f38:	c6 44 24 1a 00       	movb   $0x0,0x1a(%rsp)
    7f3d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    7f42:	e8 99 c1 ff ff       	call   40e0 <memccpy>
    7f47:	85 c0                	test   %eax,%eax
    7f49:	0f 85 8e 00 00 00    	jne    7fdd <ecall_function_calling_convs+0x12d>
    7f4f:	48 89 e3             	mov    %rsp,%rbx
    7f52:	48 89 e2             	mov    %rsp,%rdx
    7f55:	8b 0a                	mov    (%rdx),%ecx
    7f57:	48 83 c2 04          	add    $0x4,%rdx
    7f5b:	8d 81 ff fe fe fe    	lea    -0x1010101(%rcx),%eax
    7f61:	f7 d1                	not    %ecx
    7f63:	21 c8                	and    %ecx,%eax
    7f65:	25 80 80 80 80       	and    $0x80808080,%eax
    7f6a:	74 e9                	je     7f55 <ecall_function_calling_convs+0xa5>
    7f6c:	89 c1                	mov    %eax,%ecx
    7f6e:	48 89 df             	mov    %rbx,%rdi
    7f71:	c1 e9 10             	shr    $0x10,%ecx
    7f74:	a9 80 80 00 00       	test   $0x8080,%eax
    7f79:	0f 44 c1             	cmove  %ecx,%eax
    7f7c:	48 8d 4a 02          	lea    0x2(%rdx),%rcx
    7f80:	89 c6                	mov    %eax,%esi
    7f82:	48 0f 44 d1          	cmove  %rcx,%rdx
    7f86:	40 00 c6             	add    %al,%sil
    7f89:	48 89 ee             	mov    %rbp,%rsi
    7f8c:	48 83 da 03          	sbb    $0x3,%rdx
    7f90:	48 29 da             	sub    %rbx,%rdx
    7f93:	e8 b8 73 00 00       	call   f350 <memcmp>
    7f98:	85 c0                	test   %eax,%eax
    7f9a:	74 1f                	je     7fbb <ecall_function_calling_convs+0x10b>
    7f9c:	48 8d 0d e5 a6 01 00 	lea    0x1a6e5(%rip),%rcx        # 22688 <_ZZ22ecall_array_user_checkE8__func__+0x18>
    7fa3:	48 8d 15 26 a7 01 00 	lea    0x1a726(%rip),%rdx        # 226d0 <_ZZ28ecall_function_calling_convsE8__func__>
    7faa:	48 8d 3d f7 a6 01 00 	lea    0x1a6f7(%rip),%rdi        # 226a8 <_ZZ22ecall_array_user_checkE8__func__+0x38>
    7fb1:	be 3a 00 00 00       	mov    $0x3a,%esi
    7fb6:	e8 25 3a 00 00       	call   b9e0 <__assert>
    7fbb:	48 8b 84 24 28 20 00 	mov    0x2028(%rsp),%rax
    7fc2:	00 
    7fc3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7fca:	00 00 
    7fcc:	75 0a                	jne    7fd8 <ecall_function_calling_convs+0x128>
    7fce:	48 81 c4 38 20 00 00 	add    $0x2038,%rsp
    7fd5:	5b                   	pop    %rbx
    7fd6:	5d                   	pop    %rbp
    7fd7:	c3                   	ret    
    7fd8:	e8 e3 79 00 00       	call   f9c0 <__stack_chk_fail>
    7fdd:	e8 22 96 01 00       	call   21604 <abort>
    7fe2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7fe9:	00 00 00 
    7fec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007ff0 <ecall_function_public>:
    7ff0:	48 83 ec 08          	sub    $0x8,%rsp
    7ff4:	e8 87 c3 ff ff       	call   4380 <ocall_function_allow>
    7ff9:	85 c0                	test   %eax,%eax
    7ffb:	75 05                	jne    8002 <ecall_function_public+0x12>
    7ffd:	48 83 c4 08          	add    $0x8,%rsp
    8001:	c3                   	ret    
    8002:	e8 fd 95 01 00       	call   21604 <abort>
    8007:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    800e:	00 00 

0000000000008010 <ecall_function_private>:
    8010:	b8 01 00 00 00       	mov    $0x1,%eax
    8015:	c3                   	ret    
    8016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    801d:	00 00 00 

0000000000008020 <ecall_increase_counter>:
    8020:	55                   	push   %rbp
    8021:	53                   	push   %rbx
    8022:	31 ed                	xor    %ebp,%ebp
    8024:	bb f4 01 00 00       	mov    $0x1f4,%ebx
    8029:	48 83 ec 08          	sub    $0x8,%rsp
    802d:	0f 1f 00             	nopl   (%rax)
    8030:	48 8d 3d 49 41 02 00 	lea    0x24149(%rip),%rdi        # 2c180 <_ZL12global_mutex>
    8037:	e8 e4 7b 00 00       	call   fc20 <sgx_thread_mutex_lock>
    803c:	48 8b 05 c5 42 02 00 	mov    0x242c5(%rip),%rax        # 2c308 <_ZL14global_counter>
    8043:	48 8d 3d 36 41 02 00 	lea    0x24136(%rip),%rdi        # 2c180 <_ZL12global_mutex>
    804a:	48 83 c0 01          	add    $0x1,%rax
    804e:	48 3d d0 07 00 00    	cmp    $0x7d0,%rax
    8054:	48 89 05 ad 42 02 00 	mov    %rax,0x242ad(%rip)        # 2c308 <_ZL14global_counter>
    805b:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    8060:	48 0f 44 e8          	cmove  %rax,%rbp
    8064:	e8 17 7e 00 00       	call   fe80 <sgx_thread_mutex_unlock>
    8069:	83 eb 01             	sub    $0x1,%ebx
    806c:	75 c2                	jne    8030 <ecall_increase_counter+0x10>
    806e:	48 83 c4 08          	add    $0x8,%rsp
    8072:	48 89 e8             	mov    %rbp,%rax
    8075:	5b                   	pop    %rbx
    8076:	5d                   	pop    %rbp
    8077:	c3                   	ret    
    8078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    807f:	00 

0000000000008080 <ecall_producer>:
    8080:	55                   	push   %rbp
    8081:	53                   	push   %rbx
    8082:	48 8d 2d b7 3f 02 00 	lea    0x23fb7(%rip),%rbp        # 2c040 <_ZL6buffer>
    8089:	bb d0 07 00 00       	mov    $0x7d0,%ebx
    808e:	48 83 ec 08          	sub    $0x8,%rsp
    8092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8098:	48 8d 3d 79 40 02 00 	lea    0x24079(%rip),%rdi        # 2c118 <_ZL6buffer+0xd8>
    809f:	e8 7c 7b 00 00       	call   fc20 <sgx_thread_mutex_lock>
    80a4:	8b 0d 5e 40 02 00    	mov    0x2405e(%rip),%ecx        # 2c108 <_ZL6buffer+0xc8>
    80aa:	83 f9 31             	cmp    $0x31,%ecx
    80ad:	7e 1f                	jle    80ce <ecall_producer+0x4e>
    80af:	90                   	nop
    80b0:	48 8d 35 61 40 02 00 	lea    0x24061(%rip),%rsi        # 2c118 <_ZL6buffer+0xd8>
    80b7:	48 8d 3d 9a 40 02 00 	lea    0x2409a(%rip),%rdi        # 2c158 <_ZL6buffer+0x118>
    80be:	e8 0d 79 00 00       	call   f9d0 <sgx_thread_cond_wait>
    80c3:	8b 0d 3f 40 02 00    	mov    0x2403f(%rip),%ecx        # 2c108 <_ZL6buffer+0xc8>
    80c9:	83 f9 31             	cmp    $0x31,%ecx
    80cc:	7f e2                	jg     80b0 <ecall_producer+0x30>
    80ce:	48 63 05 37 40 02 00 	movslq 0x24037(%rip),%rax        # 2c10c <_ZL6buffer+0xcc>
    80d5:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    80da:	48 8d 3d 5f 40 02 00 	lea    0x2405f(%rip),%rdi        # 2c140 <_ZL6buffer+0x100>
    80e1:	83 c1 01             	add    $0x1,%ecx
    80e4:	89 0d 1e 40 02 00    	mov    %ecx,0x2401e(%rip)        # 2c108 <_ZL6buffer+0xc8>
    80ea:	48 89 c6             	mov    %rax,%rsi
    80ed:	89 44 85 00          	mov    %eax,0x0(%rbp,%rax,4)
    80f1:	83 c6 01             	add    $0x1,%esi
    80f4:	89 f0                	mov    %esi,%eax
    80f6:	f7 ea                	imul   %edx
    80f8:	89 f0                	mov    %esi,%eax
    80fa:	c1 f8 1f             	sar    $0x1f,%eax
    80fd:	c1 fa 04             	sar    $0x4,%edx
    8100:	29 c2                	sub    %eax,%edx
    8102:	6b d2 32             	imul   $0x32,%edx,%edx
    8105:	29 d6                	sub    %edx,%esi
    8107:	89 35 ff 3f 02 00    	mov    %esi,0x23fff(%rip)        # 2c10c <_ZL6buffer+0xcc>
    810d:	e8 4e 7a 00 00       	call   fb60 <sgx_thread_cond_signal>
    8112:	48 8d 3d ff 3f 02 00 	lea    0x23fff(%rip),%rdi        # 2c118 <_ZL6buffer+0xd8>
    8119:	e8 62 7d 00 00       	call   fe80 <sgx_thread_mutex_unlock>
    811e:	83 eb 01             	sub    $0x1,%ebx
    8121:	0f 85 71 ff ff ff    	jne    8098 <ecall_producer+0x18>
    8127:	48 83 c4 08          	add    $0x8,%rsp
    812b:	5b                   	pop    %rbx
    812c:	5d                   	pop    %rbp
    812d:	c3                   	ret    
    812e:	66 90                	xchg   %ax,%ax

0000000000008130 <ecall_consumer>:
    8130:	55                   	push   %rbp
    8131:	53                   	push   %rbx
    8132:	48 8d 2d 07 3f 02 00 	lea    0x23f07(%rip),%rbp        # 2c040 <_ZL6buffer>
    8139:	bb f4 01 00 00       	mov    $0x1f4,%ebx
    813e:	48 83 ec 08          	sub    $0x8,%rsp
    8142:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8148:	48 8d 3d c9 3f 02 00 	lea    0x23fc9(%rip),%rdi        # 2c118 <_ZL6buffer+0xd8>
    814f:	e8 cc 7a 00 00       	call   fc20 <sgx_thread_mutex_lock>
    8154:	8b 0d ae 3f 02 00    	mov    0x23fae(%rip),%ecx        # 2c108 <_ZL6buffer+0xc8>
    815a:	85 c9                	test   %ecx,%ecx
    815c:	7f 1f                	jg     817d <ecall_consumer+0x4d>
    815e:	66 90                	xchg   %ax,%ax
    8160:	48 8d 35 b1 3f 02 00 	lea    0x23fb1(%rip),%rsi        # 2c118 <_ZL6buffer+0xd8>
    8167:	48 8d 3d d2 3f 02 00 	lea    0x23fd2(%rip),%rdi        # 2c140 <_ZL6buffer+0x100>
    816e:	e8 5d 78 00 00       	call   f9d0 <sgx_thread_cond_wait>
    8173:	8b 0d 8f 3f 02 00    	mov    0x23f8f(%rip),%ecx        # 2c108 <_ZL6buffer+0xc8>
    8179:	85 c9                	test   %ecx,%ecx
    817b:	7e e3                	jle    8160 <ecall_consumer+0x30>
    817d:	48 63 05 8c 3f 02 00 	movslq 0x23f8c(%rip),%rax        # 2c110 <_ZL6buffer+0xd0>
    8184:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
    8189:	48 8d 3d c8 3f 02 00 	lea    0x23fc8(%rip),%rdi        # 2c158 <_ZL6buffer+0x118>
    8190:	83 e9 01             	sub    $0x1,%ecx
    8193:	89 0d 6f 3f 02 00    	mov    %ecx,0x23f6f(%rip)        # 2c108 <_ZL6buffer+0xc8>
    8199:	48 89 c6             	mov    %rax,%rsi
    819c:	c7 44 85 00 00 00 00 	movl   $0x0,0x0(%rbp,%rax,4)
    81a3:	00 
    81a4:	83 c6 01             	add    $0x1,%esi
    81a7:	89 f0                	mov    %esi,%eax
    81a9:	f7 ea                	imul   %edx
    81ab:	89 f0                	mov    %esi,%eax
    81ad:	c1 f8 1f             	sar    $0x1f,%eax
    81b0:	c1 fa 04             	sar    $0x4,%edx
    81b3:	29 c2                	sub    %eax,%edx
    81b5:	6b d2 32             	imul   $0x32,%edx,%edx
    81b8:	29 d6                	sub    %edx,%esi
    81ba:	89 35 50 3f 02 00    	mov    %esi,0x23f50(%rip)        # 2c110 <_ZL6buffer+0xd0>
    81c0:	e8 9b 79 00 00       	call   fb60 <sgx_thread_cond_signal>
    81c5:	48 8d 3d 4c 3f 02 00 	lea    0x23f4c(%rip),%rdi        # 2c118 <_ZL6buffer+0xd8>
    81cc:	e8 af 7c 00 00       	call   fe80 <sgx_thread_mutex_unlock>
    81d1:	83 eb 01             	sub    $0x1,%ebx
    81d4:	0f 85 6e ff ff ff    	jne    8148 <ecall_consumer+0x18>
    81da:	48 83 c4 08          	add    $0x8,%rsp
    81de:	5b                   	pop    %rbx
    81df:	5d                   	pop    %rbp
    81e0:	c3                   	ret    
    81e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    81e8:	00 00 00 
    81eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000081f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>:
    81f0:	48 85 f6             	test   %rsi,%rsi
    81f3:	74 33                	je     8228 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x38>
    81f5:	55                   	push   %rbp
    81f6:	53                   	push   %rbx
    81f7:	48 89 f3             	mov    %rsi,%rbx
    81fa:	48 89 fd             	mov    %rdi,%rbp
    81fd:	48 83 ec 08          	sub    $0x8,%rsp
    8201:	48 8b 36             	mov    (%rsi),%rsi
    8204:	e8 e7 ff ff ff       	call   81f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    8209:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    820d:	48 89 ef             	mov    %rbp,%rdi
    8210:	e8 db ff ff ff       	call   81f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    8215:	48 83 c4 08          	add    $0x8,%rsp
    8219:	48 89 df             	mov    %rbx,%rdi
    821c:	5b                   	pop    %rbx
    821d:	5d                   	pop    %rbp
    821e:	e9 fd 4d 01 00       	jmp    1d020 <_ZdlPv>
    8223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8228:	f3 c3                	repz ret 
    822a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008230 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>:
    8230:	48 39 fe             	cmp    %rdi,%rsi
    8233:	0f 94 46 18          	sete   0x18(%rsi)
    8237:	74 47                	je     8280 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    8239:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    823d:	80 7a 18 00          	cmpb   $0x0,0x18(%rdx)
    8241:	75 3d                	jne    8280 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    8243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8248:	48 8b 42 10          	mov    0x10(%rdx),%rax
    824c:	48 8b 08             	mov    (%rax),%rcx
    824f:	48 39 d1             	cmp    %rdx,%rcx
    8252:	74 34                	je     8288 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x58>
    8254:	48 85 c9             	test   %rcx,%rcx
    8257:	74 5f                	je     82b8 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x88>
    8259:	80 79 18 00          	cmpb   $0x0,0x18(%rcx)
    825d:	75 59                	jne    82b8 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x88>
    825f:	48 39 c7             	cmp    %rax,%rdi
    8262:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    8266:	0f 94 40 18          	sete   0x18(%rax)
    826a:	c6 41 18 01          	movb   $0x1,0x18(%rcx)
    826e:	48 39 c7             	cmp    %rax,%rdi
    8271:	74 0d                	je     8280 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x50>
    8273:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8277:	48 89 c6             	mov    %rax,%rsi
    827a:	80 7a 18 00          	cmpb   $0x0,0x18(%rdx)
    827e:	74 c8                	je     8248 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x18>
    8280:	f3 c3                	repz ret 
    8282:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8288:	4c 8b 40 08          	mov    0x8(%rax),%r8
    828c:	4d 85 c0             	test   %r8,%r8
    828f:	0f 84 a6 00 00 00    	je     833b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x10b>
    8295:	41 80 78 18 00       	cmpb   $0x0,0x18(%r8)
    829a:	0f 85 9b 00 00 00    	jne    833b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x10b>
    82a0:	48 39 c7             	cmp    %rax,%rdi
    82a3:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    82a7:	0f 94 40 18          	sete   0x18(%rax)
    82ab:	41 c6 40 18 01       	movb   $0x1,0x18(%r8)
    82b0:	eb bc                	jmp    826e <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x3e>
    82b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    82b8:	48 8b 3a             	mov    (%rdx),%rdi
    82bb:	48 89 c1             	mov    %rax,%rcx
    82be:	48 39 fe             	cmp    %rdi,%rsi
    82c1:	74 3e                	je     8301 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xd1>
    82c3:	48 8b 41 08          	mov    0x8(%rcx),%rax
    82c7:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    82cb:	c6 41 18 00          	movb   $0x0,0x18(%rcx)
    82cf:	48 8b 10             	mov    (%rax),%rdx
    82d2:	48 85 d2             	test   %rdx,%rdx
    82d5:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    82d9:	74 04                	je     82df <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xaf>
    82db:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    82df:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    82e3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    82e7:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    82eb:	48 39 0a             	cmp    %rcx,(%rdx)
    82ee:	74 0c                	je     82fc <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xcc>
    82f0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    82f4:	48 89 08             	mov    %rcx,(%rax)
    82f7:	48 89 41 10          	mov    %rax,0x10(%rcx)
    82fb:	c3                   	ret    
    82fc:	48 89 02             	mov    %rax,(%rdx)
    82ff:	eb f3                	jmp    82f4 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xc4>
    8301:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    8305:	48 85 c9             	test   %rcx,%rcx
    8308:	48 89 0a             	mov    %rcx,(%rdx)
    830b:	74 08                	je     8315 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xe5>
    830d:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    8311:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8315:	48 89 47 10          	mov    %rax,0x10(%rdi)
    8319:	48 8b 42 10          	mov    0x10(%rdx),%rax
    831d:	48 39 10             	cmp    %rdx,(%rax)
    8320:	0f 84 92 00 00 00    	je     83b8 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x188>
    8326:	48 89 78 08          	mov    %rdi,0x8(%rax)
    832a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    832e:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    8332:	48 89 fa             	mov    %rdi,%rdx
    8335:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    8339:	eb 88                	jmp    82c3 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x93>
    833b:	48 3b 31             	cmp    (%rcx),%rsi
    833e:	74 6d                	je     83ad <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x17d>
    8340:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    8344:	48 8b 32             	mov    (%rdx),%rsi
    8347:	48 85 f6             	test   %rsi,%rsi
    834a:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    834e:	74 08                	je     8358 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x128>
    8350:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    8354:	48 8b 41 10          	mov    0x10(%rcx),%rax
    8358:	48 89 42 10          	mov    %rax,0x10(%rdx)
    835c:	48 8b 41 10          	mov    0x10(%rcx),%rax
    8360:	48 3b 08             	cmp    (%rax),%rcx
    8363:	74 5b                	je     83c0 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x190>
    8365:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8369:	48 89 0a             	mov    %rcx,(%rdx)
    836c:	48 89 51 10          	mov    %rdx,0x10(%rcx)
    8370:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8374:	c6 42 18 01          	movb   $0x1,0x18(%rdx)
    8378:	48 8b 10             	mov    (%rax),%rdx
    837b:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    837f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    8383:	48 85 c9             	test   %rcx,%rcx
    8386:	48 89 08             	mov    %rcx,(%rax)
    8389:	74 04                	je     838f <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x15f>
    838b:	48 89 41 10          	mov    %rax,0x10(%rcx)
    838f:	48 8b 48 10          	mov    0x10(%rax),%rcx
    8393:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    8397:	48 8b 48 10          	mov    0x10(%rax),%rcx
    839b:	48 3b 01             	cmp    (%rcx),%rax
    839e:	74 13                	je     83b3 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x183>
    83a0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    83a4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    83a8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    83ac:	c3                   	ret    
    83ad:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    83b1:	eb bd                	jmp    8370 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x140>
    83b3:	48 89 11             	mov    %rdx,(%rcx)
    83b6:	eb ec                	jmp    83a4 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x174>
    83b8:	48 89 38             	mov    %rdi,(%rax)
    83bb:	e9 6a ff ff ff       	jmp    832a <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0xfa>
    83c0:	48 89 10             	mov    %rdx,(%rax)
    83c3:	eb a4                	jmp    8369 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x139>
    83c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    83cc:	00 00 00 
    83cf:	90                   	nop

00000000000083d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    83d0:	41 55                	push   %r13
    83d2:	41 54                	push   %r12
    83d4:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
    83d8:	55                   	push   %rbp
    83d9:	53                   	push   %rbx
    83da:	48 83 ec 18          	sub    $0x18,%rsp
    83de:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    83e2:	48 85 db             	test   %rbx,%rbx
    83e5:	74 49                	je     8430 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x60>
    83e7:	0f b6 36             	movzbl (%rsi),%esi
    83ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    83f0:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    83f4:	7e 14                	jle    840a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x3a>
    83f6:	48 8b 03             	mov    (%rbx),%rax
    83f9:	48 85 c0             	test   %rax,%rax
    83fc:	74 35                	je     8433 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x63>
    83fe:	48 89 d9             	mov    %rbx,%rcx
    8401:	48 89 c3             	mov    %rax,%rbx
    8404:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    8408:	7f ec                	jg     83f6 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x26>
    840a:	0f 8d a0 00 00 00    	jge    84b0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xe0>
    8410:	48 8b 43 08          	mov    0x8(%rbx),%rax
    8414:	48 85 c0             	test   %rax,%rax
    8417:	0f 84 b3 00 00 00    	je     84d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x100>
    841d:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
    8421:	48 89 c3             	mov    %rax,%rbx
    8424:	eb ca                	jmp    83f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x20>
    8426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    842d:	00 00 00 
    8430:	48 89 cb             	mov    %rcx,%rbx
    8433:	48 89 dd             	mov    %rbx,%rbp
    8436:	49 89 d5             	mov    %rdx,%r13
    8439:	49 89 fc             	mov    %rdi,%r12
    843c:	bf 28 00 00 00       	mov    $0x28,%edi
    8441:	e8 0a 4c 01 00       	call   1d050 <_Znwm>
    8446:	49 8b 55 00          	mov    0x0(%r13),%rdx
    844a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8451:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8458:	00 
    8459:	48 89 58 10          	mov    %rbx,0x10(%rax)
    845d:	48 89 50 1c          	mov    %rdx,0x1c(%rax)
    8461:	48 89 45 00          	mov    %rax,0x0(%rbp)
    8465:	49 8b 14 24          	mov    (%r12),%rdx
    8469:	48 8b 12             	mov    (%rdx),%rdx
    846c:	48 85 d2             	test   %rdx,%rdx
    846f:	74 68                	je     84d9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x109>
    8471:	49 89 14 24          	mov    %rdx,(%r12)
    8475:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    8479:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    847e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8483:	e8 a8 fd ff ff       	call   8230 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    8488:	49 83 44 24 10 01    	addq   $0x1,0x10(%r12)
    848e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8493:	b9 01 00 00 00       	mov    $0x1,%ecx
    8498:	48 83 c4 18          	add    $0x18,%rsp
    849c:	31 d2                	xor    %edx,%edx
    849e:	5b                   	pop    %rbx
    849f:	88 ca                	mov    %cl,%dl
    84a1:	5d                   	pop    %rbp
    84a2:	41 5c                	pop    %r12
    84a4:	41 5d                	pop    %r13
    84a6:	c3                   	ret    
    84a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    84ae:	00 00 
    84b0:	48 8b 01             	mov    (%rcx),%rax
    84b3:	48 85 c0             	test   %rax,%rax
    84b6:	74 26                	je     84de <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x10e>
    84b8:	48 83 c4 18          	add    $0x18,%rsp
    84bc:	31 c9                	xor    %ecx,%ecx
    84be:	31 d2                	xor    %edx,%edx
    84c0:	5b                   	pop    %rbx
    84c1:	88 ca                	mov    %cl,%dl
    84c3:	5d                   	pop    %rbp
    84c4:	41 5c                	pop    %r12
    84c6:	41 5d                	pop    %r13
    84c8:	c3                   	ret    
    84c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    84d0:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
    84d4:	e9 5d ff ff ff       	jmp    8436 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    84d9:	48 89 c6             	mov    %rax,%rsi
    84dc:	eb 9b                	jmp    8479 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xa9>
    84de:	48 89 cd             	mov    %rcx,%rbp
    84e1:	e9 50 ff ff ff       	jmp    8436 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    84e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    84ed:	00 00 00 

00000000000084f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    84f0:	41 55                	push   %r13
    84f2:	41 54                	push   %r12
    84f4:	48 8d 57 08          	lea    0x8(%rdi),%rdx
    84f8:	55                   	push   %rbp
    84f9:	53                   	push   %rbx
    84fa:	48 83 ec 18          	sub    $0x18,%rsp
    84fe:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    8502:	48 85 db             	test   %rbx,%rbx
    8505:	74 49                	je     8550 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x60>
    8507:	0f b6 36             	movzbl (%rsi),%esi
    850a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8510:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    8514:	7e 14                	jle    852a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x3a>
    8516:	48 8b 03             	mov    (%rbx),%rax
    8519:	48 85 c0             	test   %rax,%rax
    851c:	74 35                	je     8553 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x63>
    851e:	48 89 da             	mov    %rbx,%rdx
    8521:	48 89 c3             	mov    %rax,%rbx
    8524:	40 38 73 1c          	cmp    %sil,0x1c(%rbx)
    8528:	7f ec                	jg     8516 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x26>
    852a:	0f 8d a0 00 00 00    	jge    85d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xe0>
    8530:	48 8b 43 08          	mov    0x8(%rbx),%rax
    8534:	48 85 c0             	test   %rax,%rax
    8537:	0f 84 b3 00 00 00    	je     85f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x100>
    853d:	48 8d 53 08          	lea    0x8(%rbx),%rdx
    8541:	48 89 c3             	mov    %rax,%rbx
    8544:	eb ca                	jmp    8510 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x20>
    8546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    854d:	00 00 00 
    8550:	48 89 d3             	mov    %rdx,%rbx
    8553:	48 89 dd             	mov    %rbx,%rbp
    8556:	49 89 cd             	mov    %rcx,%r13
    8559:	49 89 fc             	mov    %rdi,%r12
    855c:	bf 28 00 00 00       	mov    $0x28,%edi
    8561:	e8 ea 4a 01 00       	call   1d050 <_Znwm>
    8566:	49 8b 55 00          	mov    0x0(%r13),%rdx
    856a:	0f b6 12             	movzbl (%rdx),%edx
    856d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8574:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    857b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8582:	00 
    8583:	48 89 58 10          	mov    %rbx,0x10(%rax)
    8587:	88 50 1c             	mov    %dl,0x1c(%rax)
    858a:	48 89 45 00          	mov    %rax,0x0(%rbp)
    858e:	49 8b 14 24          	mov    (%r12),%rdx
    8592:	48 8b 12             	mov    (%rdx),%rdx
    8595:	48 85 d2             	test   %rdx,%rdx
    8598:	74 5f                	je     85f9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x109>
    859a:	49 89 14 24          	mov    %rdx,(%r12)
    859e:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    85a2:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    85a7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    85ac:	e8 7f fc ff ff       	call   8230 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    85b1:	49 83 44 24 10 01    	addq   $0x1,0x10(%r12)
    85b7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    85bc:	b9 01 00 00 00       	mov    $0x1,%ecx
    85c1:	48 83 c4 18          	add    $0x18,%rsp
    85c5:	31 d2                	xor    %edx,%edx
    85c7:	5b                   	pop    %rbx
    85c8:	88 ca                	mov    %cl,%dl
    85ca:	5d                   	pop    %rbp
    85cb:	41 5c                	pop    %r12
    85cd:	41 5d                	pop    %r13
    85cf:	c3                   	ret    
    85d0:	48 8b 02             	mov    (%rdx),%rax
    85d3:	48 85 c0             	test   %rax,%rax
    85d6:	74 26                	je     85fe <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x10e>
    85d8:	48 83 c4 18          	add    $0x18,%rsp
    85dc:	31 c9                	xor    %ecx,%ecx
    85de:	31 d2                	xor    %edx,%edx
    85e0:	5b                   	pop    %rbx
    85e1:	88 ca                	mov    %cl,%dl
    85e3:	5d                   	pop    %rbp
    85e4:	41 5c                	pop    %r12
    85e6:	41 5d                	pop    %r13
    85e8:	c3                   	ret    
    85e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    85f0:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
    85f4:	e9 5d ff ff ff       	jmp    8556 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    85f9:	48 89 c6             	mov    %rax,%rsi
    85fc:	eb a4                	jmp    85a2 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0xb2>
    85fe:	48 89 d5             	mov    %rdx,%rbp
    8601:	e9 50 ff ff ff       	jmp    8556 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x66>
    8606:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    860d:	00 00 00 

0000000000008610 <ecall_map>:
    8610:	41 54                	push   %r12
    8612:	55                   	push   %rbp
    8613:	53                   	push   %rbx
    8614:	48 83 ec 70          	sub    $0x70,%rsp
    8618:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
    861d:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    8622:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
    8629:	00 00 
    862b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8632:	00 00 
    8634:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8639:	31 c0                	xor    %eax,%eax
    863b:	48 8d 45 08          	lea    0x8(%rbp),%rax
    863f:	48 89 da             	mov    %rbx,%rdx
    8642:	48 89 de             	mov    %rbx,%rsi
    8645:	48 89 ef             	mov    %rbp,%rdi
    8648:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    864f:	00 00 
    8651:	c6 44 24 40 61       	movb   $0x61,0x40(%rsp)
    8656:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    865b:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
    8662:	00 
    8663:	e8 68 fd ff ff       	call   83d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    8668:	48 89 da             	mov    %rbx,%rdx
    866b:	48 89 de             	mov    %rbx,%rsi
    866e:	48 89 ef             	mov    %rbp,%rdi
    8671:	c6 44 24 40 62       	movb   $0x62,0x40(%rsp)
    8676:	c7 44 24 44 02 00 00 	movl   $0x2,0x44(%rsp)
    867d:	00 
    867e:	e8 4d fd ff ff       	call   83d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    8683:	48 89 da             	mov    %rbx,%rdx
    8686:	48 89 de             	mov    %rbx,%rsi
    8689:	48 89 ef             	mov    %rbp,%rdi
    868c:	c6 44 24 40 63       	movb   $0x63,0x40(%rsp)
    8691:	c7 44 24 44 03 00 00 	movl   $0x3,0x44(%rsp)
    8698:	00 
    8699:	e8 32 fd ff ff       	call   83d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    869e:	48 89 da             	mov    %rbx,%rdx
    86a1:	48 89 de             	mov    %rbx,%rsi
    86a4:	48 89 ef             	mov    %rbp,%rdi
    86a7:	c6 44 24 40 64       	movb   $0x64,0x40(%rsp)
    86ac:	c7 44 24 44 04 00 00 	movl   $0x4,0x44(%rsp)
    86b3:	00 
    86b4:	e8 17 fd ff ff       	call   83d0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcINS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    86b9:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    86be:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    86c3:	48 8d 15 36 a1 01 00 	lea    0x1a136(%rip),%rdx        # 22800 <_ZNSt3__1L19piecewise_constructE>
    86ca:	48 89 de             	mov    %rbx,%rsi
    86cd:	48 89 ef             	mov    %rbp,%rdi
    86d0:	c6 44 24 40 61       	movb   $0x61,0x40(%rsp)
    86d5:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    86da:	e8 11 fe ff ff       	call   84f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    86df:	83 78 20 01          	cmpl   $0x1,0x20(%rax)
    86e3:	74 1f                	je     8704 <ecall_map+0xf4>
    86e5:	48 8d 0d 01 a0 01 00 	lea    0x1a001(%rip),%rcx        # 226ed <_ZZ28ecall_function_calling_convsE8__func__+0x1d>
    86ec:	48 8d 15 dd a0 01 00 	lea    0x1a0dd(%rip),%rdx        # 227d0 <_ZZ9ecall_mapE8__func__>
    86f3:	48 8d 3d 7e a0 01 00 	lea    0x1a07e(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    86fa:	be 51 00 00 00       	mov    $0x51,%esi
    86ff:	e8 dc 32 00 00       	call   b9e0 <__assert>
    8704:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    8709:	4c 8d 44 24 0d       	lea    0xd(%rsp),%r8
    870e:	48 8d 15 eb a0 01 00 	lea    0x1a0eb(%rip),%rdx        # 22800 <_ZNSt3__1L19piecewise_constructE>
    8715:	48 89 de             	mov    %rbx,%rsi
    8718:	48 89 ef             	mov    %rbp,%rdi
    871b:	c6 44 24 40 62       	movb   $0x62,0x40(%rsp)
    8720:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    8725:	e8 c6 fd ff ff       	call   84f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    872a:	83 78 20 02          	cmpl   $0x2,0x20(%rax)
    872e:	74 1f                	je     874f <ecall_map+0x13f>
    8730:	48 8d 0d c2 9f 01 00 	lea    0x19fc2(%rip),%rcx        # 226f9 <_ZZ28ecall_function_calling_convsE8__func__+0x29>
    8737:	48 8d 15 92 a0 01 00 	lea    0x1a092(%rip),%rdx        # 227d0 <_ZZ9ecall_mapE8__func__>
    873e:	48 8d 3d 33 a0 01 00 	lea    0x1a033(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    8745:	be 52 00 00 00       	mov    $0x52,%esi
    874a:	e8 91 32 00 00       	call   b9e0 <__assert>
    874f:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
    8754:	4c 8d 44 24 0e       	lea    0xe(%rsp),%r8
    8759:	48 8d 15 a0 a0 01 00 	lea    0x1a0a0(%rip),%rdx        # 22800 <_ZNSt3__1L19piecewise_constructE>
    8760:	48 89 de             	mov    %rbx,%rsi
    8763:	48 89 ef             	mov    %rbp,%rdi
    8766:	c6 44 24 40 63       	movb   $0x63,0x40(%rsp)
    876b:	4c 89 e1             	mov    %r12,%rcx
    876e:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    8773:	e8 78 fd ff ff       	call   84f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    8778:	83 78 20 03          	cmpl   $0x3,0x20(%rax)
    877c:	74 1f                	je     879d <ecall_map+0x18d>
    877e:	48 8d 0d 80 9f 01 00 	lea    0x19f80(%rip),%rcx        # 22705 <_ZZ28ecall_function_calling_convsE8__func__+0x35>
    8785:	48 8d 15 44 a0 01 00 	lea    0x1a044(%rip),%rdx        # 227d0 <_ZZ9ecall_mapE8__func__>
    878c:	48 8d 3d e5 9f 01 00 	lea    0x19fe5(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    8793:	be 53 00 00 00       	mov    $0x53,%esi
    8798:	e8 43 32 00 00       	call   b9e0 <__assert>
    879d:	4c 8d 44 24 0f       	lea    0xf(%rsp),%r8
    87a2:	48 8d 15 57 a0 01 00 	lea    0x1a057(%rip),%rdx        # 22800 <_ZNSt3__1L19piecewise_constructE>
    87a9:	48 89 d9             	mov    %rbx,%rcx
    87ac:	4c 89 e6             	mov    %r12,%rsi
    87af:	48 89 ef             	mov    %rbp,%rdi
    87b2:	c6 44 24 30 64       	movb   $0x64,0x30(%rsp)
    87b7:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    87bc:	e8 2f fd ff ff       	call   84f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcIRKNS_21piecewise_construct_tENS_5tupleIIOcEEENSE_IIEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    87c1:	83 78 20 04          	cmpl   $0x4,0x20(%rax)
    87c5:	74 1f                	je     87e6 <ecall_map+0x1d6>
    87c7:	48 8d 0d 43 9f 01 00 	lea    0x19f43(%rip),%rcx        # 22711 <_ZZ28ecall_function_calling_convsE8__func__+0x41>
    87ce:	48 8d 15 fb 9f 01 00 	lea    0x19ffb(%rip),%rdx        # 227d0 <_ZZ9ecall_mapE8__func__>
    87d5:	48 8d 3d 9c 9f 01 00 	lea    0x19f9c(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    87dc:	be 54 00 00 00       	mov    $0x54,%esi
    87e1:	e8 fa 31 00 00       	call   b9e0 <__assert>
    87e6:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    87eb:	48 85 f6             	test   %rsi,%rsi
    87ee:	74 7e                	je     886e <ecall_map+0x25e>
    87f0:	48 89 f0             	mov    %rsi,%rax
    87f3:	48 8d 55 08          	lea    0x8(%rbp),%rdx
    87f7:	eb 12                	jmp    880b <ecall_map+0x1fb>
    87f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8800:	48 89 c2             	mov    %rax,%rdx
    8803:	48 8b 00             	mov    (%rax),%rax
    8806:	48 85 c0             	test   %rax,%rax
    8809:	74 0f                	je     881a <ecall_map+0x20a>
    880b:	80 78 1c 64          	cmpb   $0x64,0x1c(%rax)
    880f:	7f ef                	jg     8800 <ecall_map+0x1f0>
    8811:	48 8b 40 08          	mov    0x8(%rax),%rax
    8815:	48 85 c0             	test   %rax,%rax
    8818:	75 f1                	jne    880b <ecall_map+0x1fb>
    881a:	48 8d 45 08          	lea    0x8(%rbp),%rax
    881e:	48 39 c2             	cmp    %rax,%rdx
    8821:	74 2a                	je     884d <ecall_map+0x23d>
    8823:	80 7a 1c 65          	cmpb   $0x65,0x1c(%rdx)
    8827:	7f 24                	jg     884d <ecall_map+0x23d>
    8829:	48 8d 0d ed 9e 01 00 	lea    0x19eed(%rip),%rcx        # 2271d <_ZZ28ecall_function_calling_convsE8__func__+0x4d>
    8830:	48 8d 15 99 9f 01 00 	lea    0x19f99(%rip),%rdx        # 227d0 <_ZZ9ecall_mapE8__func__>
    8837:	48 8d 3d 3a 9f 01 00 	lea    0x19f3a(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    883e:	be 56 00 00 00       	mov    $0x56,%esi
    8843:	e8 98 31 00 00       	call   b9e0 <__assert>
    8848:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    884d:	48 89 ef             	mov    %rbp,%rdi
    8850:	e8 9b f9 ff ff       	call   81f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    8855:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    885a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8861:	00 00 
    8863:	75 0d                	jne    8872 <ecall_map+0x262>
    8865:	48 83 c4 70          	add    $0x70,%rsp
    8869:	5b                   	pop    %rbx
    886a:	5d                   	pop    %rbp
    886b:	41 5c                	pop    %r12
    886d:	c3                   	ret    
    886e:	31 f6                	xor    %esi,%esi
    8870:	eb db                	jmp    884d <ecall_map+0x23d>
    8872:	e8 49 71 00 00       	call   f9c0 <__stack_chk_fail>
    8877:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    887c:	48 89 c3             	mov    %rax,%rbx
    887f:	48 89 ef             	mov    %rbp,%rdi
    8882:	e8 69 f9 ff ff       	call   81f0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    8887:	48 89 df             	mov    %rbx,%rdi
    888a:	e8 71 0b 01 00       	call   19400 <_Unwind_Resume>
    888f:	90                   	nop

0000000000008890 <ecall_exception>:
    8890:	41 55                	push   %r13
    8892:	41 54                	push   %r12
    8894:	48 8d 35 99 9e 01 00 	lea    0x19e99(%rip),%rsi        # 22734 <_ZZ28ecall_function_calling_convsE8__func__+0x64>
    889b:	55                   	push   %rbp
    889c:	53                   	push   %rbx
    889d:	ba 03 00 00 00       	mov    $0x3,%edx
    88a2:	48 83 ec 38          	sub    $0x38,%rsp
    88a6:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    88ab:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    88b2:	00 00 
    88b4:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    88bb:	00 00 
    88bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    88c4:	00 00 
    88c6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    88cb:	31 c0                	xor    %eax,%eax
    88cd:	48 89 df             	mov    %rbx,%rdi
    88d0:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    88d7:	00 00 
    88d9:	e8 92 4d 01 00       	call   1d670 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>
    88de:	bf 10 00 00 00       	mov    $0x10,%edi
    88e3:	e8 08 3f 01 00       	call   1c7f0 <__cxa_allocate_exception>
    88e8:	48 89 de             	mov    %rbx,%rsi
    88eb:	48 89 c7             	mov    %rax,%rdi
    88ee:	48 89 c5             	mov    %rax,%rbp
    88f1:	e8 1a 4b 01 00       	call   1d410 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>
    88f6:	48 8d 15 63 48 01 00 	lea    0x14863(%rip),%rdx        # 1d160 <_ZNSt13runtime_errorD1Ev>
    88fd:	48 8d 35 2c 35 02 00 	lea    0x2352c(%rip),%rsi        # 2be30 <_ZTISt13runtime_error>
    8904:	48 89 ef             	mov    %rbp,%rdi
    8907:	e8 e4 3f 01 00       	call   1c8f0 <__cxa_throw>
    890c:	48 89 c7             	mov    %rax,%rdi
    890f:	48 83 ea 01          	sub    $0x1,%rdx
    8913:	0f 85 cd 01 00 00    	jne    8ae6 <ecall_exception+0x256>
    8919:	e8 72 3b 01 00       	call   1c490 <__cxa_begin_catch>
    891e:	48 89 c5             	mov    %rax,%rbp
    8921:	48 8b 00             	mov    (%rax),%rax
    8924:	48 89 ef             	mov    %rbp,%rdi
    8927:	ff 50 10             	call   *0x10(%rax)
    892a:	48 85 c0             	test   %rax,%rax
    892d:	49 89 c4             	mov    %rax,%r12
    8930:	75 1f                	jne    8951 <ecall_exception+0xc1>
    8932:	48 8d 0d ff 9d 01 00 	lea    0x19dff(%rip),%rcx        # 22738 <_ZZ28ecall_function_calling_convsE8__func__+0x68>
    8939:	48 8d 15 a0 9e 01 00 	lea    0x19ea0(%rip),%rdx        # 227e0 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    8940:	48 8d 3d 59 9e 01 00 	lea    0x19e59(%rip),%rdi        # 227a0 <_ZZ28ecall_function_calling_convsE8__func__+0xd0>
    8947:	be 0b 0f 00 00       	mov    $0xf0b,%esi
    894c:	e8 8f 30 00 00       	call   b9e0 <__assert>
    8951:	31 c0                	xor    %eax,%eax
    8953:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
    8957:	4c 89 e7             	mov    %r12,%rdi
    895a:	f2 ae                	repnz scas %es:(%rdi),%al
    895c:	48 89 c8             	mov    %rcx,%rax
    895f:	48 f7 d0             	not    %rax
    8962:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    8966:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
    896b:	a8 01                	test   $0x1,%al
    896d:	0f 84 65 01 00 00    	je     8ad8 <ecall_exception+0x248>
    8973:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    8978:	49 39 d0             	cmp    %rdx,%r8
    897b:	0f 84 39 01 00 00    	je     8aba <ecall_exception+0x22a>
    8981:	48 8d 0d c1 9d 01 00 	lea    0x19dc1(%rip),%rcx        # 22749 <_ZZ28ecall_function_calling_convsE8__func__+0x79>
    8988:	48 8d 15 61 9e 01 00 	lea    0x19e61(%rip),%rdx        # 227f0 <_ZZ15ecall_exceptionE8__func__>
    898f:	48 8d 3d e2 9d 01 00 	lea    0x19de2(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    8996:	be 33 00 00 00       	mov    $0x33,%esi
    899b:	e8 40 30 00 00       	call   b9e0 <__assert>
    89a0:	48 8d 35 18 99 01 00 	lea    0x19918(%rip),%rsi        # 222bf <g_dyn_entry_table+0x2bf>
    89a7:	48 89 e7             	mov    %rsp,%rdi
    89aa:	49 89 e4             	mov    %rsp,%r12
    89ad:	e8 ee 4a 01 00       	call   1d4a0 <_ZNSt13runtime_errorC1EPKc>
    89b2:	48 89 ee             	mov    %rbp,%rsi
    89b5:	48 89 e7             	mov    %rsp,%rdi
    89b8:	e8 63 4b 01 00       	call   1d520 <_ZNSt13runtime_erroraSERKS_>
    89bd:	48 89 e7             	mov    %rsp,%rdi
    89c0:	e8 3b 47 01 00       	call   1d100 <_ZNKSt13runtime_error4whatEv>
    89c5:	48 85 c0             	test   %rax,%rax
    89c8:	48 89 c5             	mov    %rax,%rbp
    89cb:	75 1f                	jne    89ec <ecall_exception+0x15c>
    89cd:	48 8d 0d 64 9d 01 00 	lea    0x19d64(%rip),%rcx        # 22738 <_ZZ28ecall_function_calling_convsE8__func__+0x68>
    89d4:	48 8d 15 05 9e 01 00 	lea    0x19e05(%rip),%rdx        # 227e0 <_ZZNSt3__1eqIcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EEPKS6_E8__func__>
    89db:	48 8d 3d be 9d 01 00 	lea    0x19dbe(%rip),%rdi        # 227a0 <_ZZ28ecall_function_calling_convsE8__func__+0xd0>
    89e2:	be 0b 0f 00 00       	mov    $0xf0b,%esi
    89e7:	e8 f4 2f 00 00       	call   b9e0 <__assert>
    89ec:	31 c0                	xor    %eax,%eax
    89ee:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
    89f2:	48 89 ef             	mov    %rbp,%rdi
    89f5:	f2 ae                	repnz scas %es:(%rdi),%al
    89f7:	48 89 c8             	mov    %rcx,%rax
    89fa:	48 f7 d0             	not    %rax
    89fd:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    8a01:	0f b6 44 24 10       	movzbl 0x10(%rsp),%eax
    8a06:	a8 01                	test   $0x1,%al
    8a08:	0f 84 9e 00 00 00    	je     8aac <ecall_exception+0x21c>
    8a0e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    8a13:	49 39 d0             	cmp    %rdx,%r8
    8a16:	74 79                	je     8a91 <ecall_exception+0x201>
    8a18:	48 8d 0d 3a 9d 01 00 	lea    0x19d3a(%rip),%rcx        # 22759 <_ZZ28ecall_function_calling_convsE8__func__+0x89>
    8a1f:	48 8d 15 ca 9d 01 00 	lea    0x19dca(%rip),%rdx        # 227f0 <_ZZ15ecall_exceptionE8__func__>
    8a26:	48 8d 3d 4b 9d 01 00 	lea    0x19d4b(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    8a2d:	be 36 00 00 00       	mov    $0x36,%esi
    8a32:	e8 a9 2f 00 00       	call   b9e0 <__assert>
    8a37:	4c 89 e7             	mov    %r12,%rdi
    8a3a:	e8 21 47 01 00       	call   1d160 <_ZNSt13runtime_errorD1Ev>
    8a3f:	e8 1c 3c 01 00       	call   1c660 <__cxa_end_catch>
    8a44:	48 89 df             	mov    %rbx,%rdi
    8a47:	e8 14 4b 01 00       	call   1d560 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    8a4c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    8a51:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8a58:	00 00 
    8a5a:	75 23                	jne    8a7f <ecall_exception+0x1ef>
    8a5c:	48 83 c4 38          	add    $0x38,%rsp
    8a60:	5b                   	pop    %rbx
    8a61:	5d                   	pop    %rbp
    8a62:	41 5c                	pop    %r12
    8a64:	41 5d                	pop    %r13
    8a66:	c3                   	ret    
    8a67:	48 89 c5             	mov    %rax,%rbp
    8a6a:	e8 f1 3b 01 00       	call   1c660 <__cxa_end_catch>
    8a6f:	48 89 df             	mov    %rbx,%rdi
    8a72:	e8 e9 4a 01 00       	call   1d560 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    8a77:	48 89 ef             	mov    %rbp,%rdi
    8a7a:	e8 81 09 01 00       	call   19400 <_Unwind_Resume>
    8a7f:	e8 3c 6f 00 00       	call   f9c0 <__stack_chk_fail>
    8a84:	4c 89 e7             	mov    %r12,%rdi
    8a87:	48 89 c5             	mov    %rax,%rbp
    8a8a:	e8 d1 46 01 00       	call   1d160 <_ZNSt13runtime_errorD1Ev>
    8a8f:	eb d9                	jmp    8a6a <ecall_exception+0x1da>
    8a91:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
    8a95:	31 f6                	xor    %esi,%esi
    8a97:	48 89 e9             	mov    %rbp,%rcx
    8a9a:	48 89 df             	mov    %rbx,%rdi
    8a9d:	e8 ee 4a 01 00       	call   1d590 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    8aa2:	85 c0                	test   %eax,%eax
    8aa4:	0f 85 6e ff ff ff    	jne    8a18 <ecall_exception+0x188>
    8aaa:	eb 8b                	jmp    8a37 <ecall_exception+0x1a7>
    8aac:	48 d1 e8             	shr    %rax
    8aaf:	83 e0 7f             	and    $0x7f,%eax
    8ab2:	49 89 c0             	mov    %rax,%r8
    8ab5:	e9 59 ff ff ff       	jmp    8a13 <ecall_exception+0x183>
    8aba:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
    8abe:	31 f6                	xor    %esi,%esi
    8ac0:	4c 89 e1             	mov    %r12,%rcx
    8ac3:	48 89 df             	mov    %rbx,%rdi
    8ac6:	e8 c5 4a 01 00       	call   1d590 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    8acb:	85 c0                	test   %eax,%eax
    8acd:	0f 85 ae fe ff ff    	jne    8981 <ecall_exception+0xf1>
    8ad3:	e9 c8 fe ff ff       	jmp    89a0 <ecall_exception+0x110>
    8ad8:	48 d1 e8             	shr    %rax
    8adb:	83 e0 7f             	and    $0x7f,%eax
    8ade:	49 89 c0             	mov    %rax,%r8
    8ae1:	e9 92 fe ff ff       	jmp    8978 <ecall_exception+0xe8>
    8ae6:	e8 a5 39 01 00       	call   1c490 <__cxa_begin_catch>
    8aeb:	48 8d 0d 7b 9c 01 00 	lea    0x19c7b(%rip),%rcx        # 2276d <_ZZ28ecall_function_calling_convsE8__func__+0x9d>
    8af2:	48 8d 15 f7 9c 01 00 	lea    0x19cf7(%rip),%rdx        # 227f0 <_ZZ15ecall_exceptionE8__func__>
    8af9:	48 8d 3d 78 9c 01 00 	lea    0x19c78(%rip),%rdi        # 22778 <_ZZ28ecall_function_calling_convsE8__func__+0xa8>
    8b00:	be 39 00 00 00       	mov    $0x39,%esi
    8b05:	e8 d6 2e 00 00       	call   b9e0 <__assert>
    8b0a:	e8 51 3b 01 00       	call   1c660 <__cxa_end_catch>
    8b0f:	e9 30 ff ff ff       	jmp    8a44 <ecall_exception+0x1b4>
    8b14:	49 89 c4             	mov    %rax,%r12
    8b17:	49 89 d5             	mov    %rdx,%r13
    8b1a:	48 89 ef             	mov    %rbp,%rdi
    8b1d:	e8 7e 3a 01 00       	call   1c5a0 <__cxa_free_exception>
    8b22:	4c 89 e7             	mov    %r12,%rdi
    8b25:	4c 89 ea             	mov    %r13,%rdx
    8b28:	e9 e2 fd ff ff       	jmp    890f <ecall_exception+0x7f>
    8b2d:	48 89 c5             	mov    %rax,%rbp
    8b30:	e9 3a ff ff ff       	jmp    8a6f <ecall_exception+0x1df>
    8b35:	48 89 c5             	mov    %rax,%rbp
    8b38:	e8 23 3b 01 00       	call   1c660 <__cxa_end_catch>
    8b3d:	e9 2d ff ff ff       	jmp    8a6f <ecall_exception+0x1df>
    8b42:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b49:	00 00 00 
    8b4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b50 <ecall_malloc_free>:
    8b50:	48 83 ec 18          	sub    $0x18,%rsp
    8b54:	bf 64 00 00 00       	mov    $0x64,%edi
    8b59:	e8 12 3a 00 00       	call   c570 <dlmalloc>
    8b5e:	48 85 c0             	test   %rax,%rax
    8b61:	74 0d                	je     8b70 <ecall_malloc_free+0x20>
    8b63:	48 89 c7             	mov    %rax,%rdi
    8b66:	48 83 c4 18          	add    $0x18,%rsp
    8b6a:	e9 71 54 00 00       	jmp    dfe0 <dlfree>
    8b6f:	90                   	nop
    8b70:	48 8d 3d 99 9c 01 00 	lea    0x19c99(%rip),%rdi        # 22810 <_ZNSt3__1L19piecewise_constructE+0x10>
    8b77:	48 8d 0d 83 9c 01 00 	lea    0x19c83(%rip),%rcx        # 22801 <_ZNSt3__1L19piecewise_constructE+0x1>
    8b7e:	48 8d 15 ab 9c 01 00 	lea    0x19cab(%rip),%rdx        # 22830 <_ZZ17ecall_malloc_freeE8__func__>
    8b85:	be 2e 00 00 00       	mov    $0x2e,%esi
    8b8a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8b8f:	e8 4c 2e 00 00       	call   b9e0 <__assert>
    8b94:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8b99:	48 83 c4 18          	add    $0x18,%rsp
    8b9d:	48 89 c7             	mov    %rax,%rdi
    8ba0:	e9 3b 54 00 00       	jmp    dfe0 <dlfree>
    8ba5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8bac:	00 00 00 
    8baf:	90                   	nop

0000000000008bb0 <ecall_sgx_cpuid>:
    8bb0:	48 83 ec 08          	sub    $0x8,%rsp
    8bb4:	e8 e7 2f 00 00       	call   bba0 <sgx_cpuid>
    8bb9:	85 c0                	test   %eax,%eax
    8bbb:	75 05                	jne    8bc2 <ecall_sgx_cpuid+0x12>
    8bbd:	48 83 c4 08          	add    $0x8,%rsp
    8bc1:	c3                   	ret    
    8bc2:	e8 3d 8a 01 00       	call   21604 <abort>
    8bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8bce:	00 00 

0000000000008bd0 <init_optimized_libs>:
    8bd0:	f3 0f 1e fa          	endbr64 
    8bd4:	48 8d 05 05 37 02 00 	lea    0x23705(%rip),%rax        # 2c2e0 <g_enclave_state>
    8bdb:	83 38 01             	cmpl   $0x1,(%rax)
    8bde:	0f 85 4c 01 00 00    	jne    8d30 <init_optimized_libs+0x160>
    8be4:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    8beb:	00 00 ff 
    8bee:	55                   	push   %rbp
    8bef:	48 89 f5             	mov    %rsi,%rbp
    8bf2:	53                   	push   %rbx
    8bf3:	48 83 ec 08          	sub    $0x8,%rsp
    8bf7:	48 85 c7             	test   %rax,%rdi
    8bfa:	0f 85 d0 00 00 00    	jne    8cd0 <init_optimized_libs+0x100>
    8c00:	48 f7 c7 00 fe ff ff 	test   $0xfffffffffffffe00,%rdi
    8c07:	0f 84 eb 00 00 00    	je     8cf8 <init_optimized_libs+0x128>
    8c0d:	40 f6 c7 20          	test   $0x20,%dil
    8c11:	74 10                	je     8c23 <init_optimized_libs+0x53>
    8c13:	48 89 f8             	mov    %rdi,%rax
    8c16:	83 e0 1f             	and    $0x1f,%eax
    8c19:	48 83 f8 1f          	cmp    $0x1f,%rax
    8c1d:	0f 85 d5 00 00 00    	jne    8cf8 <init_optimized_libs+0x128>
    8c23:	40 f6 c7 40          	test   $0x40,%dil
    8c27:	74 10                	je     8c39 <init_optimized_libs+0x69>
    8c29:	48 89 f8             	mov    %rdi,%rax
    8c2c:	83 e0 3f             	and    $0x3f,%eax
    8c2f:	48 83 f8 3f          	cmp    $0x3f,%rax
    8c33:	0f 85 bf 00 00 00    	jne    8cf8 <init_optimized_libs+0x128>
    8c39:	40 f6 c7 80          	test   $0x80,%dil
    8c3d:	74 10                	je     8c4f <init_optimized_libs+0x7f>
    8c3f:	48 89 f8             	mov    %rdi,%rax
    8c42:	83 e0 7f             	and    $0x7f,%eax
    8c45:	48 83 f8 7f          	cmp    $0x7f,%rax
    8c49:	0f 85 a9 00 00 00    	jne    8cf8 <init_optimized_libs+0x128>
    8c4f:	f7 c7 00 01 00 00    	test   $0x100,%edi
    8c55:	74 10                	je     8c67 <init_optimized_libs+0x97>
    8c57:	40 0f b6 c7          	movzbl %dil,%eax
    8c5b:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    8c61:	0f 85 91 00 00 00    	jne    8cf8 <init_optimized_libs+0x128>
    8c67:	f7 c7 00 02 00 00    	test   $0x200,%edi
    8c6d:	74 10                	je     8c7f <init_optimized_libs+0xaf>
    8c6f:	48 89 f8             	mov    %rdi,%rax
    8c72:	25 ff 01 00 00       	and    $0x1ff,%eax
    8c77:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    8c7d:	75 79                	jne    8cf8 <init_optimized_libs+0x128>
    8c7f:	f7 c7 00 04 00 00    	test   $0x400,%edi
    8c85:	75 61                	jne    8ce8 <init_optimized_libs+0x118>
    8c87:	48 89 d0             	mov    %rdx,%rax
    8c8a:	83 e0 06             	and    $0x6,%eax
    8c8d:	48 83 f8 06          	cmp    $0x6,%rax
    8c91:	74 75                	je     8d08 <init_optimized_libs+0x138>
    8c93:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    8c9a:	20 fe ff 
    8c9d:	48 21 c7             	and    %rax,%rdi
    8ca0:	48 8d 1d 79 30 02 00 	lea    0x23079(%rip),%rbx        # 2bd20 <g_cpu_feature_indicator>
    8ca7:	48 89 3b             	mov    %rdi,(%rbx)
    8caa:	e8 c1 6b 00 00       	call   f870 <sgx_init_string_lib>
    8caf:	85 c0                	test   %eax,%eax
    8cb1:	75 45                	jne    8cf8 <init_optimized_libs+0x128>
    8cb3:	48 8b 3b             	mov    (%rbx),%rdi
    8cb6:	48 89 ee             	mov    %rbp,%rsi
    8cb9:	e8 e2 7a 01 00       	call   207a0 <sgx_init_crypto_lib>
    8cbe:	85 c0                	test   %eax,%eax
    8cc0:	0f 95 c0             	setne  %al
    8cc3:	48 83 c4 08          	add    $0x8,%rsp
    8cc7:	0f b6 c0             	movzbl %al,%eax
    8cca:	5b                   	pop    %rbx
    8ccb:	5d                   	pop    %rbp
    8ccc:	f7 d8                	neg    %eax
    8cce:	c3                   	ret    
    8ccf:	90                   	nop
    8cd0:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    8cd7:	ff ff 00 
    8cda:	48 21 c7             	and    %rax,%rdi
    8cdd:	e9 1e ff ff ff       	jmp    8c00 <init_optimized_libs+0x30>
    8ce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8ce8:	48 89 f8             	mov    %rdi,%rax
    8ceb:	25 ff 03 00 00       	and    $0x3ff,%eax
    8cf0:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    8cf6:	74 8f                	je     8c87 <init_optimized_libs+0xb7>
    8cf8:	48 83 c4 08          	add    $0x8,%rsp
    8cfc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8d01:	5b                   	pop    %rbx
    8d02:	5d                   	pop    %rbp
    8d03:	c3                   	ret    
    8d04:	0f 1f 40 00          	nopl   0x0(%rax)
    8d08:	81 e2 e0 00 00 00    	and    $0xe0,%edx
    8d0e:	48 81 fa e0 00 00 00 	cmp    $0xe0,%rdx
    8d15:	74 89                	je     8ca0 <init_optimized_libs+0xd0>
    8d17:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    8d1e:	e0 fe ff 
    8d21:	48 21 c7             	and    %rax,%rdi
    8d24:	e9 77 ff ff ff       	jmp    8ca0 <init_optimized_libs+0xd0>
    8d29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8d35:	c3                   	ret    
    8d36:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d3d:	00 00 00 

0000000000008d40 <sgx_is_within_enclave>:
    8d40:	f3 0f 1e fa          	endbr64 
    8d44:	48 8d 05 c5 2f 02 00 	lea    0x22fc5(%rip),%rax        # 2bd10 <g_enclave_base>
    8d4b:	4c 8b 00             	mov    (%rax),%r8
    8d4e:	48 8d 05 b3 2f 02 00 	lea    0x22fb3(%rip),%rax        # 2bd08 <g_enclave_size>
    8d55:	48 8b 08             	mov    (%rax),%rcx
    8d58:	4c 01 c1             	add    %r8,%rcx
    8d5b:	48 83 e9 01          	sub    $0x1,%rcx
    8d5f:	48 85 f6             	test   %rsi,%rsi
    8d62:	74 24                	je     8d88 <sgx_is_within_enclave+0x48>
    8d64:	48 83 ee 01          	sub    $0x1,%rsi
    8d68:	48 01 fe             	add    %rdi,%rsi
    8d6b:	0f 93 c2             	setae  %dl
    8d6e:	4c 39 c7             	cmp    %r8,%rdi
    8d71:	0f 93 c0             	setae  %al
    8d74:	21 c2                	and    %eax,%edx
    8d76:	31 c0                	xor    %eax,%eax
    8d78:	48 39 ce             	cmp    %rcx,%rsi
    8d7b:	0f 96 c0             	setbe  %al
    8d7e:	21 d0                	and    %edx,%eax
    8d80:	c3                   	ret    
    8d81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d88:	48 89 fe             	mov    %rdi,%rsi
    8d8b:	ba 01 00 00 00       	mov    $0x1,%edx
    8d90:	eb dc                	jmp    8d6e <sgx_is_within_enclave+0x2e>
    8d92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d99:	00 00 00 
    8d9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008da0 <sgx_is_outside_enclave>:
    8da0:	f3 0f 1e fa          	endbr64 
    8da4:	48 8d 05 65 2f 02 00 	lea    0x22f65(%rip),%rax        # 2bd10 <g_enclave_base>
    8dab:	48 8b 10             	mov    (%rax),%rdx
    8dae:	48 8d 05 53 2f 02 00 	lea    0x22f53(%rip),%rax        # 2bd08 <g_enclave_size>
    8db5:	48 8b 00             	mov    (%rax),%rax
    8db8:	48 85 f6             	test   %rsi,%rsi
    8dbb:	74 13                	je     8dd0 <sgx_is_outside_enclave+0x30>
    8dbd:	48 83 ee 01          	sub    $0x1,%rsi
    8dc1:	48 01 fe             	add    %rdi,%rsi
    8dc4:	73 0d                	jae    8dd3 <sgx_is_outside_enclave+0x33>
    8dc6:	31 c0                	xor    %eax,%eax
    8dc8:	c3                   	ret    
    8dc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8dd0:	48 89 fe             	mov    %rdi,%rsi
    8dd3:	48 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%rax
    8dd8:	48 39 c7             	cmp    %rax,%rdi
    8ddb:	0f 97 c0             	seta   %al
    8dde:	48 39 f2             	cmp    %rsi,%rdx
    8de1:	0f 97 c2             	seta   %dl
    8de4:	09 d0                	or     %edx,%eax
    8de6:	0f b6 c0             	movzbl %al,%eax
    8de9:	c3                   	ret    
    8dea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008df0 <sgx_ocalloc>:
    8df0:	f3 0f 1e fa          	endbr64 
    8df4:	53                   	push   %rbx
    8df5:	48 89 fb             	mov    %rdi,%rbx
    8df8:	48 83 ec 10          	sub    $0x10,%rsp
    8dfc:	e8 7c 84 01 00       	call   2127d <get_thread_data>
    8e01:	48 8b 70 20          	mov    0x20(%rax),%rsi
    8e05:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    8e0c:	48 89 c7             	mov    %rax,%rdi
    8e0f:	48 83 c7 07          	add    $0x7,%rdi
    8e13:	72 28                	jb     8e3d <sgx_ocalloc+0x4d>
    8e15:	48 8d 15 f4 2e 02 00 	lea    0x22ef4(%rip),%rdx        # 2bd10 <g_enclave_base>
    8e1c:	48 8b 0a             	mov    (%rdx),%rcx
    8e1f:	48 8d 15 e2 2e 02 00 	lea    0x22ee2(%rip),%rdx        # 2bd08 <g_enclave_size>
    8e26:	4c 8b 0a             	mov    (%rdx),%r9
    8e29:	49 01 c9             	add    %rcx,%r9
    8e2c:	4c 89 ca             	mov    %r9,%rdx
    8e2f:	48 83 ea 01          	sub    $0x1,%rdx
    8e33:	48 39 f9             	cmp    %rdi,%rcx
    8e36:	77 10                	ja     8e48 <sgx_ocalloc+0x58>
    8e38:	48 39 d0             	cmp    %rdx,%rax
    8e3b:	77 0b                	ja     8e48 <sgx_ocalloc+0x58>
    8e3d:	e8 c2 87 01 00       	call   21604 <abort>
    8e42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8e48:	48 39 d8             	cmp    %rbx,%rax
    8e4b:	72 f0                	jb     8e3d <sgx_ocalloc+0x4d>
    8e4d:	48 89 c7             	mov    %rax,%rdi
    8e50:	48 29 df             	sub    %rbx,%rdi
    8e53:	49 89 f8             	mov    %rdi,%r8
    8e56:	49 83 e0 f0          	and    $0xfffffffffffffff0,%r8
    8e5a:	48 85 db             	test   %rbx,%rbx
    8e5d:	74 11                	je     8e70 <sgx_ocalloc+0x80>
    8e5f:	48 83 eb 01          	sub    $0x1,%rbx
    8e63:	4c 01 c3             	add    %r8,%rbx
    8e66:	72 d5                	jb     8e3d <sgx_ocalloc+0x4d>
    8e68:	eb 09                	jmp    8e73 <sgx_ocalloc+0x83>
    8e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8e70:	4c 89 c3             	mov    %r8,%rbx
    8e73:	48 39 d9             	cmp    %rbx,%rcx
    8e76:	77 05                	ja     8e7d <sgx_ocalloc+0x8d>
    8e78:	49 39 d0             	cmp    %rdx,%r8
    8e7b:	76 c0                	jbe    8e3d <sgx_ocalloc+0x4d>
    8e7d:	48 83 e8 01          	sub    $0x1,%rax
    8e81:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    8e87:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8e8e:	74 ad                	je     8e3d <sgx_ocalloc+0x4d>
    8e90:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8e95:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8e9a:	48 39 c7             	cmp    %rax,%rdi
    8e9d:	77 28                	ja     8ec7 <sgx_ocalloc+0xd7>
    8e9f:	90                   	nop
    8ea0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8ea5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8eaa:	c6 00 00             	movb   $0x0,(%rax)
    8ead:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8eb2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    8eb8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8ebd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8ec2:	48 39 f8             	cmp    %rdi,%rax
    8ec5:	73 d9                	jae    8ea0 <sgx_ocalloc+0xb0>
    8ec7:	4c 89 86 90 00 00 00 	mov    %r8,0x90(%rsi)
    8ece:	48 83 c4 10          	add    $0x10,%rsp
    8ed2:	4c 89 c0             	mov    %r8,%rax
    8ed5:	5b                   	pop    %rbx
    8ed6:	c3                   	ret    
    8ed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8ede:	00 00 

0000000000008ee0 <sgx_ocfree>:
    8ee0:	f3 0f 1e fa          	endbr64 
    8ee4:	48 83 ec 08          	sub    $0x8,%rsp
    8ee8:	e8 90 83 01 00       	call   2127d <get_thread_data>
    8eed:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8ef1:	48 8b 52 e8          	mov    -0x18(%rdx),%rdx
    8ef5:	48 89 d7             	mov    %rdx,%rdi
    8ef8:	48 83 c7 07          	add    $0x7,%rdi
    8efc:	72 28                	jb     8f26 <sgx_ocfree+0x46>
    8efe:	48 8d 0d 0b 2e 02 00 	lea    0x22e0b(%rip),%rcx        # 2bd10 <g_enclave_base>
    8f05:	48 8b 31             	mov    (%rcx),%rsi
    8f08:	48 8d 0d f9 2d 02 00 	lea    0x22df9(%rip),%rcx        # 2bd08 <g_enclave_size>
    8f0f:	4c 8b 01             	mov    (%rcx),%r8
    8f12:	49 01 f0             	add    %rsi,%r8
    8f15:	4c 89 c1             	mov    %r8,%rcx
    8f18:	48 83 e9 01          	sub    $0x1,%rcx
    8f1c:	48 39 ca             	cmp    %rcx,%rdx
    8f1f:	77 0f                	ja     8f30 <sgx_ocfree+0x50>
    8f21:	48 39 fe             	cmp    %rdi,%rsi
    8f24:	77 0a                	ja     8f30 <sgx_ocfree+0x50>
    8f26:	e8 d9 86 01 00       	call   21604 <abort>
    8f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f30:	48 8b 40 20          	mov    0x20(%rax),%rax
    8f34:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    8f3b:	48 83 c4 08          	add    $0x8,%rsp
    8f3f:	c3                   	ret    

0000000000008f40 <sgx_read_rand>:
    8f40:	f3 0f 1e fa          	endbr64 
    8f44:	41 56                	push   %r14
    8f46:	41 55                	push   %r13
    8f48:	41 54                	push   %r12
    8f4a:	55                   	push   %rbp
    8f4b:	53                   	push   %rbx
    8f4c:	48 83 ec 10          	sub    $0x10,%rsp
    8f50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8f57:	00 00 
    8f59:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8f5e:	31 c0                	xor    %eax,%eax
    8f60:	48 85 ff             	test   %rdi,%rdi
    8f63:	0f 84 e7 00 00 00    	je     9050 <sgx_read_rand+0x110>
    8f69:	48 89 f5             	mov    %rsi,%rbp
    8f6c:	48 85 f6             	test   %rsi,%rsi
    8f6f:	0f 84 db 00 00 00    	je     9050 <sgx_read_rand+0x110>
    8f75:	48 8d 05 94 2d 02 00 	lea    0x22d94(%rip),%rax        # 2bd10 <g_enclave_base>
    8f7c:	48 89 fb             	mov    %rdi,%rbx
    8f7f:	48 8b 08             	mov    (%rax),%rcx
    8f82:	48 8d 05 7f 2d 02 00 	lea    0x22d7f(%rip),%rax        # 2bd08 <g_enclave_size>
    8f89:	48 8b 10             	mov    (%rax),%rdx
    8f8c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    8f90:	31 f6                	xor    %esi,%esi
    8f92:	48 01 ca             	add    %rcx,%rdx
    8f95:	48 01 f8             	add    %rdi,%rax
    8f98:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
    8f9c:	40 0f 92 c6          	setb   %sil
    8fa0:	72 3e                	jb     8fe0 <sgx_read_rand+0xa0>
    8fa2:	48 39 cf             	cmp    %rcx,%rdi
    8fa5:	72 39                	jb     8fe0 <sgx_read_rand+0xa0>
    8fa7:	48 39 c2             	cmp    %rax,%rdx
    8faa:	73 44                	jae    8ff0 <sgx_read_rand+0xb0>
    8fac:	48 39 c1             	cmp    %rax,%rcx
    8faf:	77 3f                	ja     8ff0 <sgx_read_rand+0xb0>
    8fb1:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8fb7:	48 39 d3             	cmp    %rdx,%rbx
    8fba:	77 34                	ja     8ff0 <sgx_read_rand+0xb0>
    8fbc:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8fc1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8fc8:	00 00 
    8fca:	0f 85 9b 00 00 00    	jne    906b <sgx_read_rand+0x12b>
    8fd0:	48 83 c4 10          	add    $0x10,%rsp
    8fd4:	44 89 c0             	mov    %r8d,%eax
    8fd7:	5b                   	pop    %rbx
    8fd8:	5d                   	pop    %rbp
    8fd9:	41 5c                	pop    %r12
    8fdb:	41 5d                	pop    %r13
    8fdd:	41 5e                	pop    %r14
    8fdf:	c3                   	ret    
    8fe0:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    8fe6:	48 85 f6             	test   %rsi,%rsi
    8fe9:	75 d1                	jne    8fbc <sgx_read_rand+0x7c>
    8feb:	eb bf                	jmp    8fac <sgx_read_rand+0x6c>
    8fed:	0f 1f 00             	nopl   (%rax)
    8ff0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    8ff7:	00 
    8ff8:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    8ffd:	41 be 04 00 00 00    	mov    $0x4,%r14d
    9003:	4c 89 ef             	mov    %r13,%rdi
    9006:	e8 d6 85 01 00       	call   215e1 <do_rdrand>
    900b:	85 c0                	test   %eax,%eax
    900d:	74 51                	je     9060 <sgx_read_rand+0x120>
    900f:	48 83 fd 04          	cmp    $0x4,%rbp
    9013:	4d 89 f4             	mov    %r14,%r12
    9016:	48 89 df             	mov    %rbx,%rdi
    9019:	4c 89 ee             	mov    %r13,%rsi
    901c:	4c 0f 46 e5          	cmovbe %rbp,%r12
    9020:	4c 89 e2             	mov    %r12,%rdx
    9023:	4c 01 e3             	add    %r12,%rbx
    9026:	e8 05 66 00 00       	call   f630 <memcpy>
    902b:	4c 29 e5             	sub    %r12,%rbp
    902e:	75 d3                	jne    9003 <sgx_read_rand+0xc3>
    9030:	b9 04 00 00 00       	mov    $0x4,%ecx
    9035:	31 d2                	xor    %edx,%edx
    9037:	be 04 00 00 00       	mov    $0x4,%esi
    903c:	4c 89 ef             	mov    %r13,%rdi
    903f:	e8 cc 67 00 00       	call   f810 <memset_s>
    9044:	45 31 c0             	xor    %r8d,%r8d
    9047:	e9 70 ff ff ff       	jmp    8fbc <sgx_read_rand+0x7c>
    904c:	0f 1f 40 00          	nopl   0x0(%rax)
    9050:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    9056:	e9 61 ff ff ff       	jmp    8fbc <sgx_read_rand+0x7c>
    905b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9060:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    9066:	e9 51 ff ff ff       	jmp    8fbc <sgx_read_rand+0x7c>
    906b:	e8 50 69 00 00       	call   f9c0 <__stack_chk_fail>

0000000000009070 <check_static_stack_canary>:
    9070:	f3 0f 1e fa          	endbr64 
    9074:	48 8d 05 7d 2c 02 00 	lea    0x22c7d(%rip),%rax        # 2bcf8 <__intel_security_cookie>
    907b:	48 8b 00             	mov    (%rax),%rax
    907e:	48 39 87 58 fd fe ff 	cmp    %rax,-0x102a8(%rdi)
    9085:	0f 95 c0             	setne  %al
    9088:	0f b6 c0             	movzbl %al,%eax
    908b:	f7 d8                	neg    %eax
    908d:	c3                   	ret    
    908e:	66 90                	xchg   %ax,%ax

0000000000009090 <sgx_wrpkru>:
    9090:	f3 0f 1e fa          	endbr64 
    9094:	53                   	push   %rbx
    9095:	89 fb                	mov    %edi,%ebx
    9097:	e8 84 1a 00 00       	call   ab20 <is_pkru_enabled>
    909c:	45 31 c0             	xor    %r8d,%r8d
    909f:	84 c0                	test   %al,%al
    90a1:	74 11                	je     90b4 <sgx_wrpkru+0x24>
    90a3:	89 d8                	mov    %ebx,%eax
    90a5:	44 89 c1             	mov    %r8d,%ecx
    90a8:	44 89 c2             	mov    %r8d,%edx
    90ab:	0f 01 ef             	wrpkru 
    90ae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    90b4:	44 89 c0             	mov    %r8d,%eax
    90b7:	5b                   	pop    %rbx
    90b8:	c3                   	ret    
    90b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000090c0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>:
    90c0:	41 57                	push   %r15
    90c2:	31 c0                	xor    %eax,%eax
    90c4:	49 89 ff             	mov    %rdi,%r15
    90c7:	41 56                	push   %r14
    90c9:	41 55                	push   %r13
    90cb:	41 54                	push   %r12
    90cd:	49 89 cc             	mov    %rcx,%r12
    90d0:	55                   	push   %rbp
    90d1:	48 89 f5             	mov    %rsi,%rbp
    90d4:	53                   	push   %rbx
    90d5:	48 83 ec 18          	sub    $0x18,%rsp
    90d9:	4c 8d 2d e0 a8 01 00 	lea    0x1a8e0(%rip),%r13        # 239c0 <g_global_data>
    90e0:	41 8b 8d 38 01 00 00 	mov    0x138(%r13),%ecx
    90e7:	85 c9                	test   %ecx,%ecx
    90e9:	75 17                	jne    9102 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x42>
    90eb:	e9 98 00 00 00       	jmp    9188 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    90f0:	41 8b 8d 38 01 00 00 	mov    0x138(%r13),%ecx
    90f7:	83 c0 01             	add    $0x1,%eax
    90fa:	39 c1                	cmp    %eax,%ecx
    90fc:	0f 86 86 00 00 00    	jbe    9188 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    9102:	41 89 c6             	mov    %eax,%r14d
    9105:	49 8d 5e 0a          	lea    0xa(%r14),%rbx
    9109:	48 c1 e3 05          	shl    $0x5,%rbx
    910d:	4c 01 eb             	add    %r13,%rbx
    9110:	0f b7 0b             	movzwl (%rbx),%ecx
    9113:	66 39 ca             	cmp    %cx,%dx
    9116:	75 d8                	jne    90f0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0x30>
    9118:	48 85 db             	test   %rbx,%rbx
    911b:	74 6b                	je     9188 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    911d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9122:	e8 0b 81 01 00       	call   21232 <get_enclave_base>
    9127:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    912b:	8b 53 04             	mov    0x4(%rbx),%edx
    912e:	49 01 cc             	add    %rcx,%r12
    9131:	4c 01 e0             	add    %r12,%rax
    9134:	49 39 c7             	cmp    %rax,%r15
    9137:	72 4f                	jb     9188 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    9139:	48 c1 e5 0c          	shl    $0xc,%rbp
    913d:	48 c1 e2 0c          	shl    $0xc,%rdx
    9141:	49 01 ef             	add    %rbp,%r15
    9144:	48 01 d0             	add    %rdx,%rax
    9147:	49 39 c7             	cmp    %rax,%r15
    914a:	77 3c                	ja     9188 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xc8>
    914c:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9151:	31 c0                	xor    %eax,%eax
    9153:	4d 85 c0             	test   %r8,%r8
    9156:	74 1a                	je     9172 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes+0xb2>
    9158:	49 c1 e6 05          	shl    $0x5,%r14
    915c:	4d 01 f5             	add    %r14,%r13
    915f:	49 8b 95 58 01 00 00 	mov    0x158(%r13),%rdx
    9166:	49 89 10             	mov    %rdx,(%r8)
    9169:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    916d:	66 41 89 50 08       	mov    %dx,0x8(%r8)
    9172:	48 83 c4 18          	add    $0x18,%rsp
    9176:	5b                   	pop    %rbx
    9177:	5d                   	pop    %rbp
    9178:	41 5c                	pop    %r12
    917a:	41 5d                	pop    %r13
    917c:	41 5e                	pop    %r14
    917e:	41 5f                	pop    %r15
    9180:	c3                   	ret    
    9181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9188:	48 83 c4 18          	add    $0x18,%rsp
    918c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9191:	5b                   	pop    %rbx
    9192:	5d                   	pop    %rbp
    9193:	41 5c                	pop    %r12
    9195:	41 5d                	pop    %r13
    9197:	41 5e                	pop    %r14
    9199:	41 5f                	pop    %r15
    919b:	c3                   	ret    
    919c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000091a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    91a0:	41 57                	push   %r15
    91a2:	41 56                	push   %r14
    91a4:	41 55                	push   %r13
    91a6:	41 54                	push   %r12
    91a8:	49 89 f4             	mov    %rsi,%r12
    91ab:	55                   	push   %rbp
    91ac:	49 c1 e4 0c          	shl    $0xc,%r12
    91b0:	53                   	push   %rbx
    91b1:	4c 89 e0             	mov    %r12,%rax
    91b4:	48 f7 d0             	not    %rax
    91b7:	48 83 ec 28          	sub    $0x28,%rsp
    91bb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    91c0:	48 39 f8             	cmp    %rdi,%rax
    91c3:	0f 82 8f 01 00 00    	jb     9358 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b8>
    91c9:	49 89 fe             	mov    %rdi,%r14
    91cc:	48 89 f5             	mov    %rsi,%rbp
    91cf:	49 89 cd             	mov    %rcx,%r13
    91d2:	e8 59 16 00 00       	call   a830 <get_heap_base>
    91d7:	48 89 c3             	mov    %rax,%rbx
    91da:	e8 e1 16 00 00       	call   a8c0 <get_heap_min_size>
    91df:	48 01 c3             	add    %rax,%rbx
    91e2:	e8 69 16 00 00       	call   a850 <get_heap_size>
    91e7:	49 89 c7             	mov    %rax,%r15
    91ea:	e8 d1 16 00 00       	call   a8c0 <get_heap_min_size>
    91ef:	49 29 c7             	sub    %rax,%r15
    91f2:	49 39 de             	cmp    %rbx,%r14
    91f5:	72 39                	jb     9230 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    91f7:	4b 8d 04 34          	lea    (%r12,%r14,1),%rax
    91fb:	4c 01 fb             	add    %r15,%rbx
    91fe:	48 39 d8             	cmp    %rbx,%rax
    9201:	77 2d                	ja     9230 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    9203:	4d 85 ed             	test   %r13,%r13
    9206:	74 12                	je     921a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    9208:	b8 08 00 00 00       	mov    $0x8,%eax
    920d:	49 c7 45 00 03 02 00 	movq   $0x203,0x0(%r13)
    9214:	00 
    9215:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    921a:	31 c0                	xor    %eax,%eax
    921c:	48 83 c4 28          	add    $0x28,%rsp
    9220:	5b                   	pop    %rbx
    9221:	5d                   	pop    %rbp
    9222:	41 5c                	pop    %r12
    9224:	41 5d                	pop    %r13
    9226:	41 5e                	pop    %r14
    9228:	41 5f                	pop    %r15
    922a:	c3                   	ret    
    922b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9230:	31 c9                	xor    %ecx,%ecx
    9232:	4d 89 e8             	mov    %r13,%r8
    9235:	ba 07 00 00 00       	mov    $0x7,%edx
    923a:	48 89 ee             	mov    %rbp,%rsi
    923d:	4c 89 f7             	mov    %r14,%rdi
    9240:	e8 7b fe ff ff       	call   90c0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    9245:	85 c0                	test   %eax,%eax
    9247:	74 d1                	je     921a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    9249:	48 8d 15 00 2b 02 00 	lea    0x22b00(%rip),%rdx        # 2bd50 <rsrv_mem_size>
    9250:	48 8d 05 01 2b 02 00 	lea    0x22b01(%rip),%rax        # 2bd58 <rsrv_mem_base>
    9257:	48 8b 0a             	mov    (%rdx),%rcx
    925a:	48 8d 15 e7 2a 02 00 	lea    0x22ae7(%rip),%rdx        # 2bd48 <rsrv_mem_min_size>
    9261:	48 8b 00             	mov    (%rax),%rax
    9264:	48 8b 32             	mov    (%rdx),%rsi
    9267:	48 01 c6             	add    %rax,%rsi
    926a:	49 39 f6             	cmp    %rsi,%r14
    926d:	72 0b                	jb     927a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xda>
    926f:	4d 01 f4             	add    %r14,%r12
    9272:	48 01 c8             	add    %rcx,%rax
    9275:	49 39 c4             	cmp    %rax,%r12
    9278:	76 89                	jbe    9203 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x63>
    927a:	48 8d 15 3f a7 01 00 	lea    0x1a73f(%rip),%rdx        # 239c0 <g_global_data>
    9281:	8b 82 38 01 00 00    	mov    0x138(%rdx),%eax
    9287:	85 c0                	test   %eax,%eax
    9289:	0f 84 d3 00 00 00    	je     9362 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    928f:	31 c0                	xor    %eax,%eax
    9291:	eb 16                	jmp    92a9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x109>
    9293:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9298:	8b 8a 38 01 00 00    	mov    0x138(%rdx),%ecx
    929e:	83 c0 01             	add    $0x1,%eax
    92a1:	39 c1                	cmp    %eax,%ecx
    92a3:	0f 86 b9 00 00 00    	jbe    9362 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    92a9:	41 89 c1             	mov    %eax,%r9d
    92ac:	49 83 c1 0a          	add    $0xa,%r9
    92b0:	49 c1 e1 05          	shl    $0x5,%r9
    92b4:	49 01 d1             	add    %rdx,%r9
    92b7:	41 0f b7 09          	movzwl (%r9),%ecx
    92bb:	66 81 f9 13 10       	cmp    $0x1013,%cx
    92c0:	75 d6                	jne    9298 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xf8>
    92c2:	4d 85 c9             	test   %r9,%r9
    92c5:	0f 84 97 00 00 00    	je     9362 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c2>
    92cb:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    92d1:	4d 89 cf             	mov    %r9,%r15
    92d4:	41 8b 47 04          	mov    0x4(%r15),%eax
    92d8:	31 db                	xor    %ebx,%ebx
    92da:	83 f8 ff             	cmp    $0xffffffff,%eax
    92dd:	75 17                	jne    92f6 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x156>
    92df:	eb 69                	jmp    934a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1aa>
    92e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    92e8:	41 8b 47 04          	mov    0x4(%r15),%eax
    92ec:	83 c3 01             	add    $0x1,%ebx
    92ef:	83 c0 01             	add    $0x1,%eax
    92f2:	39 d8                	cmp    %ebx,%eax
    92f4:	76 54                	jbe    934a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1aa>
    92f6:	49 8b 4f 08          	mov    0x8(%r15),%rcx
    92fa:	89 d8                	mov    %ebx,%eax
    92fc:	49 8d 7f 08          	lea    0x8(%r15),%rdi
    9300:	4d 89 e8             	mov    %r13,%r8
    9303:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    9308:	44 89 e2             	mov    %r12d,%edx
    930b:	48 89 ee             	mov    %rbp,%rsi
    930e:	4c 89 f7             	mov    %r14,%rdi
    9311:	48 0f af c8          	imul   %rax,%rcx
    9315:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    931a:	e8 a1 fd ff ff       	call   90c0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    931f:	85 c0                	test   %eax,%eax
    9321:	75 c5                	jne    92e8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x148>
    9323:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    9328:	48 85 ff             	test   %rdi,%rdi
    932b:	0f 84 e9 fe ff ff    	je     921a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    9331:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    9336:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    933b:	48 8b 16             	mov    (%rsi),%rdx
    933e:	48 0f af da          	imul   %rdx,%rbx
    9342:	48 89 1f             	mov    %rbx,(%rdi)
    9345:	e9 d2 fe ff ff       	jmp    921c <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    934a:	41 83 c4 01          	add    $0x1,%r12d
    934e:	41 83 fc 13          	cmp    $0x13,%r12d
    9352:	75 80                	jne    92d4 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x134>
    9354:	0f 1f 40 00          	nopl   0x0(%rax)
    9358:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    935d:	e9 ba fe ff ff       	jmp    921c <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    9362:	bb 0e 00 00 00       	mov    $0xe,%ebx
    9367:	31 c9                	xor    %ecx,%ecx
    9369:	4d 89 e8             	mov    %r13,%r8
    936c:	89 da                	mov    %ebx,%edx
    936e:	48 89 ee             	mov    %rbp,%rsi
    9371:	4c 89 f7             	mov    %r14,%rdi
    9374:	e8 47 fd ff ff       	call   90c0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes>
    9379:	85 c0                	test   %eax,%eax
    937b:	74 0a                	je     9387 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1e7>
    937d:	83 c3 01             	add    $0x1,%ebx
    9380:	83 fb 13             	cmp    $0x13,%ebx
    9383:	75 e2                	jne    9367 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1c7>
    9385:	eb d1                	jmp    9358 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b8>
    9387:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    938c:	48 85 ff             	test   %rdi,%rdi
    938f:	0f 84 85 fe ff ff    	je     921a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7a>
    9395:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    939c:	e9 7b fe ff ff       	jmp    921c <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7c>
    93a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    93a8:	00 00 00 
    93ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000093b0 <_ZL19sgx_accept_backwardmmm>:
    93b0:	55                   	push   %rbp
    93b1:	48 89 e5             	mov    %rsp,%rbp
    93b4:	41 55                	push   %r13
    93b6:	41 54                	push   %r12
    93b8:	49 89 f4             	mov    %rsi,%r12
    93bb:	53                   	push   %rbx
    93bc:	48 89 d3             	mov    %rdx,%rbx
    93bf:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    93c3:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    93c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    93ce:	00 00 
    93d0:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    93d5:	31 c0                	xor    %eax,%eax
    93d7:	49 89 e5             	mov    %rsp,%r13
    93da:	48 89 3c 24          	mov    %rdi,(%rsp)
    93de:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    93e5:	00 00 
    93e7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    93ee:	00 00 
    93f0:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    93f7:	00 00 
    93f9:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9400:	00 00 
    9402:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9409:	00 00 
    940b:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    9412:	00 00 
    9414:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    941b:	00 00 
    941d:	eb 17                	jmp    9436 <_ZL19sgx_accept_backwardmmm+0x86>
    941f:	90                   	nop
    9420:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    9427:	4c 89 ef             	mov    %r13,%rdi
    942a:	48 89 de             	mov    %rbx,%rsi
    942d:	e8 78 81 01 00       	call   215aa <do_eaccept>
    9432:	85 c0                	test   %eax,%eax
    9434:	75 22                	jne    9458 <_ZL19sgx_accept_backwardmmm+0xa8>
    9436:	4c 39 e3             	cmp    %r12,%rbx
    9439:	77 e5                	ja     9420 <_ZL19sgx_accept_backwardmmm+0x70>
    943b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    9440:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9447:	00 00 
    9449:	75 12                	jne    945d <_ZL19sgx_accept_backwardmmm+0xad>
    944b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    944f:	31 c0                	xor    %eax,%eax
    9451:	5b                   	pop    %rbx
    9452:	41 5c                	pop    %r12
    9454:	41 5d                	pop    %r13
    9456:	5d                   	pop    %rbp
    9457:	c3                   	ret    
    9458:	e8 a7 81 01 00       	call   21604 <abort>
    945d:	e8 5e 65 00 00       	call   f9c0 <__stack_chk_fail>
    9462:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9469:	00 00 00 
    946c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009470 <is_dynamic_thread>:
    9470:	f3 0f 1e fa          	endbr64 
    9474:	48 83 ec 28          	sub    $0x28,%rsp
    9478:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    947f:	00 00 
    9481:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9486:	31 c0                	xor    %eax,%eax
    9488:	48 85 ff             	test   %rdi,%rdi
    948b:	74 13                	je     94a0 <is_dynamic_thread+0x30>
    948d:	31 d2                	xor    %edx,%edx
    948f:	48 89 e1             	mov    %rsp,%rcx
    9492:	be 01 00 00 00       	mov    $0x1,%esi
    9497:	e8 04 fd ff ff       	call   91a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    949c:	85 c0                	test   %eax,%eax
    949e:	74 20                	je     94c0 <is_dynamic_thread+0x50>
    94a0:	31 c0                	xor    %eax,%eax
    94a2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    94a7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    94ae:	00 00 
    94b0:	75 1d                	jne    94cf <is_dynamic_thread+0x5f>
    94b2:	48 83 c4 28          	add    $0x28,%rsp
    94b6:	c3                   	ret    
    94b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    94be:	00 00 
    94c0:	31 c0                	xor    %eax,%eax
    94c2:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    94c9:	00 
    94ca:	0f 94 c0             	sete   %al
    94cd:	eb d3                	jmp    94a2 <is_dynamic_thread+0x32>
    94cf:	e8 ec 64 00 00       	call   f9c0 <__stack_chk_fail>
    94d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    94db:	00 00 00 
    94de:	66 90                	xchg   %ax,%ax

00000000000094e0 <is_dynamic_thread_exist>:
    94e0:	f3 0f 1e fa          	endbr64 
    94e4:	48 8d 05 31 28 02 00 	lea    0x22831(%rip),%rax        # 2bd1c <EDMM_supported>
    94eb:	8b 00                	mov    (%rax),%eax
    94ed:	85 c0                	test   %eax,%eax
    94ef:	74 51                	je     9542 <is_dynamic_thread_exist+0x62>
    94f1:	48 8d 0d c8 a4 01 00 	lea    0x1a4c8(%rip),%rcx        # 239c0 <g_global_data>
    94f8:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    94fe:	85 c0                	test   %eax,%eax
    9500:	74 3e                	je     9540 <is_dynamic_thread_exist+0x60>
    9502:	31 d2                	xor    %edx,%edx
    9504:	eb 17                	jmp    951d <is_dynamic_thread_exist+0x3d>
    9506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    950d:	00 00 00 
    9510:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9516:	83 c2 01             	add    $0x1,%edx
    9519:	39 d0                	cmp    %edx,%eax
    951b:	76 23                	jbe    9540 <is_dynamic_thread_exist+0x60>
    951d:	89 d0                	mov    %edx,%eax
    951f:	48 83 c0 0a          	add    $0xa,%rax
    9523:	48 c1 e0 05          	shl    $0x5,%rax
    9527:	48 01 c8             	add    %rcx,%rax
    952a:	0f b7 30             	movzwl (%rax),%esi
    952d:	66 83 fe 12          	cmp    $0x12,%si
    9531:	75 dd                	jne    9510 <is_dynamic_thread_exist+0x30>
    9533:	48 85 c0             	test   %rax,%rax
    9536:	0f 95 c0             	setne  %al
    9539:	0f b6 c0             	movzbl %al,%eax
    953c:	c3                   	ret    
    953d:	0f 1f 00             	nopl   (%rax)
    9540:	31 c0                	xor    %eax,%eax
    9542:	c3                   	ret    
    9543:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    954a:	00 00 00 
    954d:	0f 1f 00             	nopl   (%rax)

0000000000009550 <get_dynamic_stack_max_page>:
    9550:	f3 0f 1e fa          	endbr64 
    9554:	48 8d 0d 65 a4 01 00 	lea    0x1a465(%rip),%rcx        # 239c0 <g_global_data>
    955b:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9561:	85 c0                	test   %eax,%eax
    9563:	74 3d                	je     95a2 <get_dynamic_stack_max_page+0x52>
    9565:	31 d2                	xor    %edx,%edx
    9567:	eb 14                	jmp    957d <get_dynamic_stack_max_page+0x2d>
    9569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9570:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    9576:	83 c2 01             	add    $0x1,%edx
    9579:	39 d0                	cmp    %edx,%eax
    957b:	76 23                	jbe    95a0 <get_dynamic_stack_max_page+0x50>
    957d:	89 d0                	mov    %edx,%eax
    957f:	48 83 c0 0a          	add    $0xa,%rax
    9583:	48 c1 e0 05          	shl    $0x5,%rax
    9587:	48 01 c8             	add    %rcx,%rax
    958a:	0f b7 30             	movzwl (%rax),%esi
    958d:	66 83 fe 07          	cmp    $0x7,%si
    9591:	75 dd                	jne    9570 <get_dynamic_stack_max_page+0x20>
    9593:	48 85 c0             	test   %rax,%rax
    9596:	74 08                	je     95a0 <get_dynamic_stack_max_page+0x50>
    9598:	8b 40 04             	mov    0x4(%rax),%eax
    959b:	c3                   	ret    
    959c:	0f 1f 40 00          	nopl   0x0(%rax)
    95a0:	31 c0                	xor    %eax,%eax
    95a2:	c3                   	ret    
    95a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    95aa:	00 00 00 
    95ad:	0f 1f 00             	nopl   (%rax)

00000000000095b0 <sgx_accept_forward>:
    95b0:	f3 0f 1e fa          	endbr64 
    95b4:	55                   	push   %rbp
    95b5:	48 89 e5             	mov    %rsp,%rbp
    95b8:	41 55                	push   %r13
    95ba:	41 54                	push   %r12
    95bc:	53                   	push   %rbx
    95bd:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    95c1:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    95c5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    95cc:	00 00 
    95ce:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    95d3:	31 c0                	xor    %eax,%eax
    95d5:	48 89 3c 24          	mov    %rdi,(%rsp)
    95d9:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    95e0:	00 00 
    95e2:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    95e9:	00 00 
    95eb:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    95f2:	00 00 
    95f4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    95fb:	00 00 
    95fd:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    9604:	00 00 
    9606:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    960d:	00 00 
    960f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    9616:	00 00 
    9618:	48 39 d6             	cmp    %rdx,%rsi
    961b:	73 2e                	jae    964b <sgx_accept_forward+0x9b>
    961d:	48 89 f3             	mov    %rsi,%rbx
    9620:	49 89 d4             	mov    %rdx,%r12
    9623:	49 89 e5             	mov    %rsp,%r13
    9626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    962d:	00 00 00 
    9630:	48 89 de             	mov    %rbx,%rsi
    9633:	4c 89 ef             	mov    %r13,%rdi
    9636:	e8 6f 7f 01 00       	call   215aa <do_eaccept>
    963b:	85 c0                	test   %eax,%eax
    963d:	75 29                	jne    9668 <sgx_accept_forward+0xb8>
    963f:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    9646:	49 39 dc             	cmp    %rbx,%r12
    9649:	77 e5                	ja     9630 <sgx_accept_forward+0x80>
    964b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    9650:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9657:	00 00 
    9659:	75 12                	jne    966d <sgx_accept_forward+0xbd>
    965b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    965f:	31 c0                	xor    %eax,%eax
    9661:	5b                   	pop    %rbx
    9662:	41 5c                	pop    %r12
    9664:	41 5d                	pop    %r13
    9666:	5d                   	pop    %rbp
    9667:	c3                   	ret    
    9668:	e8 97 7f 01 00       	call   21604 <abort>
    966d:	e8 4e 63 00 00       	call   f9c0 <__stack_chk_fail>
    9672:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9679:	00 00 00 
    967c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009680 <_Z18accept_post_removePVK9_layout_tS1_m>:
    9680:	f3 0f 1e fa          	endbr64 
    9684:	48 39 f7             	cmp    %rsi,%rdi
    9687:	0f 83 d3 00 00 00    	jae    9760 <_Z18accept_post_removePVK9_layout_tS1_m+0xe0>
    968d:	41 56                	push   %r14
    968f:	41 55                	push   %r13
    9691:	41 54                	push   %r12
    9693:	49 89 d4             	mov    %rdx,%r12
    9696:	55                   	push   %rbp
    9697:	48 89 f5             	mov    %rsi,%rbp
    969a:	53                   	push   %rbx
    969b:	48 89 fb             	mov    %rdi,%rbx
    969e:	eb 15                	jmp    96b5 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    96a0:	0f b7 03             	movzwl (%rbx),%eax
    96a3:	f6 c4 10             	test   $0x10,%ah
    96a6:	75 58                	jne    9700 <_Z18accept_post_removePVK9_layout_tS1_m+0x80>
    96a8:	48 83 c3 20          	add    $0x20,%rbx
    96ac:	48 39 dd             	cmp    %rbx,%rbp
    96af:	0f 86 97 00 00 00    	jbe    974c <_Z18accept_post_removePVK9_layout_tS1_m+0xcc>
    96b5:	0f b7 03             	movzwl (%rbx),%eax
    96b8:	f6 c4 10             	test   $0x10,%ah
    96bb:	75 e3                	jne    96a0 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    96bd:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    96c1:	a8 10                	test   $0x10,%al
    96c3:	74 db                	je     96a0 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    96c5:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    96c9:	4e 8d 2c 26          	lea    (%rsi,%r12,1),%r13
    96cd:	e8 60 7b 01 00       	call   21232 <get_enclave_base>
    96d2:	8b 53 04             	mov    0x4(%rbx),%edx
    96d5:	bf 10 04 00 00       	mov    $0x410,%edi
    96da:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    96de:	48 c1 e2 0c          	shl    $0xc,%rdx
    96e2:	48 01 f2             	add    %rsi,%rdx
    96e5:	e8 c6 fe ff ff       	call   95b0 <sgx_accept_forward>
    96ea:	85 c0                	test   %eax,%eax
    96ec:	74 ba                	je     96a8 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    96ee:	5b                   	pop    %rbx
    96ef:	5d                   	pop    %rbp
    96f0:	41 5c                	pop    %r12
    96f2:	41 5d                	pop    %r13
    96f4:	41 5e                	pop    %r14
    96f6:	c3                   	ret    
    96f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    96fe:	00 00 
    9700:	8b 43 04             	mov    0x4(%rbx),%eax
    9703:	85 c0                	test   %eax,%eax
    9705:	74 a1                	je     96a8 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    9707:	45 31 ed             	xor    %r13d,%r13d
    970a:	45 31 f6             	xor    %r14d,%r14d
    970d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9711:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    9715:	48 89 de             	mov    %rbx,%rsi
    9718:	f7 df                	neg    %edi
    971a:	49 01 c6             	add    %rax,%r14
    971d:	48 63 ff             	movslq %edi,%rdi
    9720:	4c 89 f2             	mov    %r14,%rdx
    9723:	48 c1 e7 05          	shl    $0x5,%rdi
    9727:	48 01 df             	add    %rbx,%rdi
    972a:	e8 51 ff ff ff       	call   9680 <_Z18accept_post_removePVK9_layout_tS1_m>
    972f:	85 c0                	test   %eax,%eax
    9731:	75 bb                	jne    96ee <_Z18accept_post_removePVK9_layout_tS1_m+0x6e>
    9733:	8b 43 04             	mov    0x4(%rbx),%eax
    9736:	41 83 c5 01          	add    $0x1,%r13d
    973a:	44 39 e8             	cmp    %r13d,%eax
    973d:	77 ce                	ja     970d <_Z18accept_post_removePVK9_layout_tS1_m+0x8d>
    973f:	48 83 c3 20          	add    $0x20,%rbx
    9743:	48 39 dd             	cmp    %rbx,%rbp
    9746:	0f 87 69 ff ff ff    	ja     96b5 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    974c:	5b                   	pop    %rbx
    974d:	31 c0                	xor    %eax,%eax
    974f:	5d                   	pop    %rbp
    9750:	41 5c                	pop    %r12
    9752:	41 5d                	pop    %r13
    9754:	41 5e                	pop    %r14
    9756:	c3                   	ret    
    9757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    975e:	00 00 
    9760:	31 c0                	xor    %eax,%eax
    9762:	c3                   	ret    
    9763:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    976a:	00 00 00 
    976d:	0f 1f 00             	nopl   (%rax)

0000000000009770 <apply_pages_within_exception>:
    9770:	f3 0f 1e fa          	endbr64 
    9774:	55                   	push   %rbp
    9775:	48 89 e5             	mov    %rsp,%rbp
    9778:	41 56                	push   %r14
    977a:	41 55                	push   %r13
    977c:	41 54                	push   %r12
    977e:	53                   	push   %rbx
    977f:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9783:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    9787:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    978e:	00 00 
    9790:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    9795:	31 c0                	xor    %eax,%eax
    9797:	48 85 ff             	test   %rdi,%rdi
    979a:	0f 84 b0 00 00 00    	je     9850 <apply_pages_within_exception+0xe0>
    97a0:	31 c9                	xor    %ecx,%ecx
    97a2:	31 d2                	xor    %edx,%edx
    97a4:	48 89 fb             	mov    %rdi,%rbx
    97a7:	49 89 f4             	mov    %rsi,%r12
    97aa:	e8 f1 f9 ff ff       	call   91a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    97af:	41 89 c5             	mov    %eax,%r13d
    97b2:	85 c0                	test   %eax,%eax
    97b4:	0f 85 96 00 00 00    	jne    9850 <apply_pages_within_exception+0xe0>
    97ba:	49 c1 e4 0c          	shl    $0xc,%r12
    97be:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    97c5:	00 
    97c6:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    97cd:	00 00 
    97cf:	49 01 dc             	add    %rbx,%r12
    97d2:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    97d9:	00 00 
    97db:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    97e2:	00 00 
    97e4:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    97eb:	00 00 
    97ed:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    97f4:	00 00 
    97f6:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    97fd:	00 00 
    97ff:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    9806:	00 00 
    9808:	4c 39 e3             	cmp    %r12,%rbx
    980b:	73 1e                	jae    982b <apply_pages_within_exception+0xbb>
    980d:	49 89 e6             	mov    %rsp,%r14
    9810:	48 89 de             	mov    %rbx,%rsi
    9813:	4c 89 f7             	mov    %r14,%rdi
    9816:	e8 8f 7d 01 00       	call   215aa <do_eaccept>
    981b:	85 c0                	test   %eax,%eax
    981d:	75 39                	jne    9858 <apply_pages_within_exception+0xe8>
    981f:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    9826:	49 39 dc             	cmp    %rbx,%r12
    9829:	77 e5                	ja     9810 <apply_pages_within_exception+0xa0>
    982b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    9830:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9837:	00 00 
    9839:	75 22                	jne    985d <apply_pages_within_exception+0xed>
    983b:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    983f:	44 89 e8             	mov    %r13d,%eax
    9842:	5b                   	pop    %rbx
    9843:	41 5c                	pop    %r12
    9845:	41 5d                	pop    %r13
    9847:	41 5e                	pop    %r14
    9849:	5d                   	pop    %rbp
    984a:	c3                   	ret    
    984b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9850:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    9856:	eb d3                	jmp    982b <apply_pages_within_exception+0xbb>
    9858:	e8 a7 7d 01 00       	call   21604 <abort>
    985d:	e8 5e 61 00 00       	call   f9c0 <__stack_chk_fail>
    9862:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9869:	00 00 00 
    986c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009870 <apply_EPC_pages>:
    9870:	f3 0f 1e fa          	endbr64 
    9874:	55                   	push   %rbp
    9875:	53                   	push   %rbx
    9876:	48 83 ec 28          	sub    $0x28,%rsp
    987a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9881:	00 00 
    9883:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9888:	31 c0                	xor    %eax,%eax
    988a:	48 85 ff             	test   %rdi,%rdi
    988d:	74 61                	je     98f0 <apply_EPC_pages+0x80>
    988f:	31 d2                	xor    %edx,%edx
    9891:	48 89 e1             	mov    %rsp,%rcx
    9894:	48 89 fd             	mov    %rdi,%rbp
    9897:	48 89 f3             	mov    %rsi,%rbx
    989a:	e8 01 f9 ff ff       	call   91a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    989f:	85 c0                	test   %eax,%eax
    98a1:	75 4d                	jne    98f0 <apply_EPC_pages+0x80>
    98a3:	48 c1 e3 0c          	shl    $0xc,%rbx
    98a7:	48 89 ee             	mov    %rbp,%rsi
    98aa:	bf 0b 02 00 00       	mov    $0x20b,%edi
    98af:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
    98b3:	f6 44 24 08 40       	testb  $0x40,0x8(%rsp)
    98b8:	75 26                	jne    98e0 <apply_EPC_pages+0x70>
    98ba:	e8 f1 fa ff ff       	call   93b0 <_ZL19sgx_accept_backwardmmm>
    98bf:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    98c4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    98cb:	00 00 
    98cd:	75 28                	jne    98f7 <apply_EPC_pages+0x87>
    98cf:	48 83 c4 28          	add    $0x28,%rsp
    98d3:	5b                   	pop    %rbx
    98d4:	5d                   	pop    %rbp
    98d5:	c3                   	ret    
    98d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    98dd:	00 00 00 
    98e0:	e8 cb fc ff ff       	call   95b0 <sgx_accept_forward>
    98e5:	eb d8                	jmp    98bf <apply_EPC_pages+0x4f>
    98e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    98ee:	00 00 
    98f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    98f5:	eb c8                	jmp    98bf <apply_EPC_pages+0x4f>
    98f7:	e8 c4 60 00 00       	call   f9c0 <__stack_chk_fail>
    98fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009900 <trim_EPC_pages>:
    9900:	f3 0f 1e fa          	endbr64 
    9904:	48 85 ff             	test   %rdi,%rdi
    9907:	74 69                	je     9972 <trim_EPC_pages+0x72>
    9909:	55                   	push   %rbp
    990a:	31 c9                	xor    %ecx,%ecx
    990c:	31 d2                	xor    %edx,%edx
    990e:	48 89 f5             	mov    %rsi,%rbp
    9911:	53                   	push   %rbx
    9912:	48 89 fb             	mov    %rdi,%rbx
    9915:	48 83 ec 08          	sub    $0x8,%rsp
    9919:	e8 82 f8 ff ff       	call   91a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    991e:	85 c0                	test   %eax,%eax
    9920:	75 49                	jne    996b <trim_EPC_pages+0x6b>
    9922:	48 c1 e5 0c          	shl    $0xc,%rbp
    9926:	48 89 df             	mov    %rbx,%rdi
    9929:	48 01 dd             	add    %rbx,%rbp
    992c:	48 89 ee             	mov    %rbp,%rsi
    992f:	e8 3c 0e 00 00       	call   a770 <trim_range_ocall>
    9934:	48 89 ea             	mov    %rbp,%rdx
    9937:	48 89 de             	mov    %rbx,%rsi
    993a:	bf 10 04 00 00       	mov    $0x410,%edi
    993f:	e8 6c fc ff ff       	call   95b0 <sgx_accept_forward>
    9944:	48 39 eb             	cmp    %rbp,%rbx
    9947:	73 1b                	jae    9964 <trim_EPC_pages+0x64>
    9949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9950:	48 89 df             	mov    %rbx,%rdi
    9953:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    995a:	e8 71 0e 00 00       	call   a7d0 <trim_range_commit_ocall>
    995f:	48 39 dd             	cmp    %rbx,%rbp
    9962:	77 ec                	ja     9950 <trim_EPC_pages+0x50>
    9964:	48 83 c4 08          	add    $0x8,%rsp
    9968:	5b                   	pop    %rbx
    9969:	5d                   	pop    %rbp
    996a:	c3                   	ret    
    996b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9970:	eb f2                	jmp    9964 <trim_EPC_pages+0x64>
    9972:	83 c8 ff             	or     $0xffffffff,%eax
    9975:	c3                   	ret    
    9976:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    997d:	00 00 00 

0000000000009980 <do_add_thread>:
    9980:	f3 0f 1e fa          	endbr64 
    9984:	41 55                	push   %r13
    9986:	41 54                	push   %r12
    9988:	55                   	push   %rbp
    9989:	48 89 fd             	mov    %rdi,%rbp
    998c:	53                   	push   %rbx
    998d:	48 83 ec 18          	sub    $0x18,%rsp
    9991:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9998:	00 00 
    999a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    999f:	31 c0                	xor    %eax,%eax
    99a1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    99a8:	00 
    99a9:	e8 84 78 01 00       	call   21232 <get_enclave_base>
    99ae:	31 c9                	xor    %ecx,%ecx
    99b0:	48 89 e2             	mov    %rsp,%rdx
    99b3:	be 01 00 00 00       	mov    $0x1,%esi
    99b8:	48 89 ef             	mov    %rbp,%rdi
    99bb:	48 89 c3             	mov    %rax,%rbx
    99be:	e8 dd f7 ff ff       	call   91a0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    99c3:	85 c0                	test   %eax,%eax
    99c5:	75 58                	jne    9a1f <do_add_thread+0x9f>
    99c7:	4c 8d 25 f2 9f 01 00 	lea    0x19ff2(%rip),%r12        # 239c0 <g_global_data>
    99ce:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    99d5:	00 
    99d6:	85 c0                	test   %eax,%eax
    99d8:	74 45                	je     9a1f <do_add_thread+0x9f>
    99da:	31 d2                	xor    %edx,%edx
    99dc:	eb 11                	jmp    99ef <do_add_thread+0x6f>
    99de:	66 90                	xchg   %ax,%ax
    99e0:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    99e7:	00 
    99e8:	83 c2 01             	add    $0x1,%edx
    99eb:	39 d0                	cmp    %edx,%eax
    99ed:	76 30                	jbe    9a1f <do_add_thread+0x9f>
    99ef:	89 d0                	mov    %edx,%eax
    99f1:	48 83 c0 0a          	add    $0xa,%rax
    99f5:	48 c1 e0 05          	shl    $0x5,%rax
    99f9:	4c 01 e0             	add    %r12,%rax
    99fc:	44 0f b7 28          	movzwl (%rax),%r13d
    9a00:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    9a05:	75 d9                	jne    99e0 <do_add_thread+0x60>
    9a07:	48 85 c0             	test   %rax,%rax
    9a0a:	74 13                	je     9a1f <do_add_thread+0x9f>
    9a0c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9a10:	48 8b 04 24          	mov    (%rsp),%rax
    9a14:	48 01 d8             	add    %rbx,%rax
    9a17:	48 01 d0             	add    %rdx,%rax
    9a1a:	48 39 e8             	cmp    %rbp,%rax
    9a1d:	74 46                	je     9a65 <do_add_thread+0xe5>
    9a1f:	b8 01 00 00 00       	mov    $0x1,%eax
    9a24:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    9a29:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    9a30:	00 00 
    9a32:	0f 85 fb 00 00 00    	jne    9b33 <do_add_thread+0x1b3>
    9a38:	48 83 c4 18          	add    $0x18,%rsp
    9a3c:	5b                   	pop    %rbx
    9a3d:	5d                   	pop    %rbp
    9a3e:	41 5c                	pop    %r12
    9a40:	41 5d                	pop    %r13
    9a42:	c3                   	ret    
    9a43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9a48:	48 85 c0             	test   %rax,%rax
    9a4b:	74 0d                	je     9a5a <do_add_thread+0xda>
    9a4d:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    9a51:	83 e2 20             	and    $0x20,%edx
    9a54:	0f 85 b6 00 00 00    	jne    9b10 <do_add_thread+0x190>
    9a5a:	41 83 c5 01          	add    $0x1,%r13d
    9a5e:	66 41 83 fd 13       	cmp    $0x13,%r13w
    9a63:	74 3b                	je     9aa0 <do_add_thread+0x120>
    9a65:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    9a6c:	00 
    9a6d:	31 d2                	xor    %edx,%edx
    9a6f:	85 c0                	test   %eax,%eax
    9a71:	75 14                	jne    9a87 <do_add_thread+0x107>
    9a73:	eb e5                	jmp    9a5a <do_add_thread+0xda>
    9a75:	0f 1f 00             	nopl   (%rax)
    9a78:	41 8b 84 24 38 01 00 	mov    0x138(%r12),%eax
    9a7f:	00 
    9a80:	83 c2 01             	add    $0x1,%edx
    9a83:	39 d0                	cmp    %edx,%eax
    9a85:	76 d3                	jbe    9a5a <do_add_thread+0xda>
    9a87:	89 d0                	mov    %edx,%eax
    9a89:	48 83 c0 0a          	add    $0xa,%rax
    9a8d:	48 c1 e0 05          	shl    $0x5,%rax
    9a91:	4c 01 e0             	add    %r12,%rax
    9a94:	0f b7 08             	movzwl (%rax),%ecx
    9a97:	66 44 39 e9          	cmp    %r13w,%cx
    9a9b:	75 db                	jne    9a78 <do_add_thread+0xf8>
    9a9d:	eb a9                	jmp    9a48 <do_add_thread+0xc8>
    9a9f:	90                   	nop
    9aa0:	49 8d b4 24 f0 00 00 	lea    0xf0(%r12),%rsi
    9aa7:	00 
    9aa8:	48 89 ef             	mov    %rbp,%rdi
    9aab:	ba 48 00 00 00       	mov    $0x48,%edx
    9ab0:	e8 7b 5b 00 00       	call   f630 <memcpy>
    9ab5:	48 89 e8             	mov    %rbp,%rax
    9ab8:	31 ff                	xor    %edi,%edi
    9aba:	48 89 ee             	mov    %rbp,%rsi
    9abd:	48 29 d8             	sub    %rbx,%rax
    9ac0:	48 01 45 10          	add    %rax,0x10(%rbp)
    9ac4:	48 89 e8             	mov    %rbp,%rax
    9ac7:	48 29 d8             	sub    %rbx,%rax
    9aca:	48 01 45 30          	add    %rax,0x30(%rbp)
    9ace:	48 89 e8             	mov    %rbp,%rax
    9ad1:	48 29 d8             	sub    %rbx,%rax
    9ad4:	48 01 45 38          	add    %rax,0x38(%rbp)
    9ad8:	e8 83 0b 00 00       	call   a660 <sgx_ocall>
    9add:	85 c0                	test   %eax,%eax
    9adf:	0f 85 3a ff ff ff    	jne    9a1f <do_add_thread+0x9f>
    9ae5:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    9aec:	48 89 ee             	mov    %rbp,%rsi
    9aef:	bf 10 01 00 00       	mov    $0x110,%edi
    9af4:	e8 b7 f8 ff ff       	call   93b0 <_ZL19sgx_accept_backwardmmm>
    9af9:	85 c0                	test   %eax,%eax
    9afb:	0f 95 c0             	setne  %al
    9afe:	0f b6 c0             	movzbl %al,%eax
    9b01:	e9 1e ff ff ff       	jmp    9a24 <do_add_thread+0xa4>
    9b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b0d:	00 00 00 
    9b10:	48 8b 3c 24          	mov    (%rsp),%rdi
    9b14:	8b 70 04             	mov    0x4(%rax),%esi
    9b17:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b1b:	48 01 df             	add    %rbx,%rdi
    9b1e:	48 01 c7             	add    %rax,%rdi
    9b21:	e8 4a fd ff ff       	call   9870 <apply_EPC_pages>
    9b26:	85 c0                	test   %eax,%eax
    9b28:	0f 84 2c ff ff ff    	je     9a5a <do_add_thread+0xda>
    9b2e:	e9 ec fe ff ff       	jmp    9a1f <do_add_thread+0x9f>
    9b33:	e8 88 5e 00 00       	call   f9c0 <__stack_chk_fail>
    9b38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9b3f:	00 

0000000000009b40 <_pthread_thread_run>:
    9b40:	f3 0f 1e fa          	endbr64 
    9b44:	31 c0                	xor    %eax,%eax
    9b46:	c3                   	ret    
    9b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9b4e:	00 00 

0000000000009b50 <_ZL11do_save_tcsPv>:
    9b50:	55                   	push   %rbp
    9b51:	53                   	push   %rbx
    9b52:	48 89 fb             	mov    %rdi,%rbx
    9b55:	48 83 ec 18          	sub    $0x18,%rsp
    9b59:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9b60:	00 00 
    9b62:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b67:	31 c0                	xor    %eax,%eax
    9b69:	48 83 3d a7 27 02 00 	cmpq   $0x0,0x227a7(%rip)        # 2c318 <_ZL12g_tcs_cookie>
    9b70:	00 
    9b71:	74 4d                	je     9bc0 <_ZL11do_save_tcsPv+0x70>
    9b73:	bf 10 00 00 00       	mov    $0x10,%edi
    9b78:	e8 f3 29 00 00       	call   c570 <dlmalloc>
    9b7d:	48 85 c0             	test   %rax,%rax
    9b80:	74 68                	je     9bea <_ZL11do_save_tcsPv+0x9a>
    9b82:	48 8b 15 97 27 02 00 	mov    0x22797(%rip),%rdx        # 2c320 <_ZL10g_tcs_node>
    9b89:	48 33 1d 88 27 02 00 	xor    0x22788(%rip),%rbx        # 2c318 <_ZL12g_tcs_cookie>
    9b90:	48 89 05 89 27 02 00 	mov    %rax,0x22789(%rip)        # 2c320 <_ZL10g_tcs_node>
    9b97:	48 89 18             	mov    %rbx,(%rax)
    9b9a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9b9e:	31 c0                	xor    %eax,%eax
    9ba0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    9ba5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    9bac:	00 00 
    9bae:	75 62                	jne    9c12 <_ZL11do_save_tcsPv+0xc2>
    9bb0:	48 83 c4 18          	add    $0x18,%rsp
    9bb4:	5b                   	pop    %rbx
    9bb5:	5d                   	pop    %rbp
    9bb6:	c3                   	ret    
    9bb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9bbe:	00 00 
    9bc0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9bc7:	00 
    9bc8:	48 89 e5             	mov    %rsp,%rbp
    9bcb:	eb 0c                	jmp    9bd9 <_ZL11do_save_tcsPv+0x89>
    9bcd:	0f 1f 00             	nopl   (%rax)
    9bd0:	48 8b 04 24          	mov    (%rsp),%rax
    9bd4:	48 85 c0             	test   %rax,%rax
    9bd7:	75 1f                	jne    9bf8 <_ZL11do_save_tcsPv+0xa8>
    9bd9:	be 08 00 00 00       	mov    $0x8,%esi
    9bde:	48 89 ef             	mov    %rbp,%rdi
    9be1:	e8 5a f3 ff ff       	call   8f40 <sgx_read_rand>
    9be6:	85 c0                	test   %eax,%eax
    9be8:	74 e6                	je     9bd0 <_ZL11do_save_tcsPv+0x80>
    9bea:	b8 01 00 00 00       	mov    $0x1,%eax
    9bef:	eb af                	jmp    9ba0 <_ZL11do_save_tcsPv+0x50>
    9bf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9bf8:	48 83 3d 18 27 02 00 	cmpq   $0x0,0x22718(%rip)        # 2c318 <_ZL12g_tcs_cookie>
    9bff:	00 
    9c00:	0f 85 6d ff ff ff    	jne    9b73 <_ZL11do_save_tcsPv+0x23>
    9c06:	48 89 05 0b 27 02 00 	mov    %rax,0x2270b(%rip)        # 2c318 <_ZL12g_tcs_cookie>
    9c0d:	e9 61 ff ff ff       	jmp    9b73 <_ZL11do_save_tcsPv+0x23>
    9c12:	e8 a9 5d 00 00       	call   f9c0 <__stack_chk_fail>
    9c17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9c1e:	00 00 

0000000000009c20 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    9c20:	48 39 f7             	cmp    %rsi,%rdi
    9c23:	0f 83 cf 00 00 00    	jae    9cf8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    9c29:	41 56                	push   %r14
    9c2b:	41 55                	push   %r13
    9c2d:	41 54                	push   %r12
    9c2f:	49 89 d4             	mov    %rdx,%r12
    9c32:	55                   	push   %rbp
    9c33:	48 89 f5             	mov    %rsi,%rbp
    9c36:	53                   	push   %rbx
    9c37:	48 89 fb             	mov    %rdi,%rbx
    9c3a:	eb 11                	jmp    9c4d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x2d>
    9c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    9c40:	48 83 c3 20          	add    $0x20,%rbx
    9c44:	48 39 dd             	cmp    %rbx,%rbp
    9c47:	0f 86 9b 00 00 00    	jbe    9ce8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xc8>
    9c4d:	0f b7 03             	movzwl (%rbx),%eax
    9c50:	f6 c4 10             	test   $0x10,%ah
    9c53:	75 13                	jne    9c68 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    9c55:	48 8b 43 18          	mov    0x18(%rbx),%rax
    9c59:	f6 c4 01             	test   $0x1,%ah
    9c5c:	74 0a                	je     9c68 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    9c5e:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    9c62:	66 83 f8 03          	cmp    $0x3,%ax
    9c66:	74 50                	je     9cb8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x98>
    9c68:	0f b7 03             	movzwl (%rbx),%eax
    9c6b:	f6 c4 10             	test   $0x10,%ah
    9c6e:	74 d0                	je     9c40 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    9c70:	8b 43 04             	mov    0x4(%rbx),%eax
    9c73:	85 c0                	test   %eax,%eax
    9c75:	74 c9                	je     9c40 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    9c77:	45 31 ed             	xor    %r13d,%r13d
    9c7a:	45 31 f6             	xor    %r14d,%r14d
    9c7d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9c81:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    9c85:	48 89 de             	mov    %rbx,%rsi
    9c88:	f7 df                	neg    %edi
    9c8a:	49 01 c6             	add    %rax,%r14
    9c8d:	48 63 ff             	movslq %edi,%rdi
    9c90:	4c 89 f2             	mov    %r14,%rdx
    9c93:	48 c1 e7 05          	shl    $0x5,%rdi
    9c97:	48 01 df             	add    %rbx,%rdi
    9c9a:	e8 81 ff ff ff       	call   9c20 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    9c9f:	85 c0                	test   %eax,%eax
    9ca1:	75 38                	jne    9cdb <_ZL18add_static_threadsPVK9_layout_tS1_m+0xbb>
    9ca3:	8b 43 04             	mov    0x4(%rbx),%eax
    9ca6:	41 83 c5 01          	add    $0x1,%r13d
    9caa:	44 39 e8             	cmp    %r13d,%eax
    9cad:	77 ce                	ja     9c7d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x5d>
    9caf:	eb 8f                	jmp    9c40 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    9cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9cb8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    9cbc:	4e 8d 2c 27          	lea    (%rdi,%r12,1),%r13
    9cc0:	e8 6d 75 01 00       	call   21232 <get_enclave_base>
    9cc5:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    9cc9:	e8 82 fe ff ff       	call   9b50 <_ZL11do_save_tcsPv>
    9cce:	85 c0                	test   %eax,%eax
    9cd0:	0f 84 6a ff ff ff    	je     9c40 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    9cd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9cdb:	5b                   	pop    %rbx
    9cdc:	5d                   	pop    %rbp
    9cdd:	41 5c                	pop    %r12
    9cdf:	41 5d                	pop    %r13
    9ce1:	41 5e                	pop    %r14
    9ce3:	c3                   	ret    
    9ce4:	0f 1f 40 00          	nopl   0x0(%rax)
    9ce8:	5b                   	pop    %rbx
    9ce9:	31 c0                	xor    %eax,%eax
    9ceb:	5d                   	pop    %rbp
    9cec:	41 5c                	pop    %r12
    9cee:	41 5d                	pop    %r13
    9cf0:	41 5e                	pop    %r14
    9cf2:	c3                   	ret    
    9cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9cf8:	31 c0                	xor    %eax,%eax
    9cfa:	c3                   	ret    
    9cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009d00 <_ZL10trts_ecalljPv>:
    9d00:	f3 0f 1e fa          	endbr64 
    9d04:	0f b6 05 a5 24 02 00 	movzbl 0x224a5(%rip),%eax        # 2c1b0 <_ZL16g_is_first_ecall>
    9d0b:	41 54                	push   %r12
    9d0d:	55                   	push   %rbp
    9d0e:	48 89 f5             	mov    %rsi,%rbp
    9d11:	53                   	push   %rbx
    9d12:	89 fb                	mov    %edi,%ebx
    9d14:	84 c0                	test   %al,%al
    9d16:	0f 85 c4 00 00 00    	jne    9de0 <_ZL10trts_ecalljPv+0xe0>
    9d1c:	83 fb fa             	cmp    $0xfffffffa,%ebx
    9d1f:	0f 84 8b 00 00 00    	je     9db0 <_ZL10trts_ecalljPv+0xb0>
    9d25:	4c 8d 25 74 1c 02 00 	lea    0x21c74(%rip),%r12        # 2b9a0 <g_ecall_table>
    9d2c:	49 3b 1c 24          	cmp    (%r12),%rbx
    9d30:	73 6e                	jae    9da0 <_ZL10trts_ecalljPv+0xa0>
    9d32:	e8 46 75 01 00       	call   2127d <get_thread_data>
    9d37:	0f ae e8             	lfence 
    9d3a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9d3e:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    9d42:	0f 84 b8 00 00 00    	je     9e00 <_ZL10trts_ecalljPv+0x100>
    9d48:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    9d4f:	4f 
    9d50:	0f 85 52 01 00 00    	jne    9ea8 <_ZL10trts_ecalljPv+0x1a8>
    9d56:	48 8d 05 a3 82 01 00 	lea    0x182a3(%rip),%rax        # 22000 <g_dyn_entry_table>
    9d5d:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    9d61:	48 3b 10             	cmp    (%rax),%rdx
    9d64:	73 3a                	jae    9da0 <_ZL10trts_ecalljPv+0xa0>
    9d66:	49 0f af 14 24       	imul   (%r12),%rdx
    9d6b:	48 01 d8             	add    %rbx,%rax
    9d6e:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    9d73:	74 7a                	je     9def <_ZL10trts_ecalljPv+0xef>
    9d75:	48 c1 e3 04          	shl    $0x4,%rbx
    9d79:	31 f6                	xor    %esi,%esi
    9d7b:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    9d80:	48 89 df             	mov    %rbx,%rdi
    9d83:	e8 b8 ef ff ff       	call   8d40 <sgx_is_within_enclave>
    9d88:	85 c0                	test   %eax,%eax
    9d8a:	74 3c                	je     9dc8 <_ZL10trts_ecalljPv+0xc8>
    9d8c:	0f ae e8             	lfence 
    9d8f:	48 89 d8             	mov    %rbx,%rax
    9d92:	48 89 ef             	mov    %rbp,%rdi
    9d95:	5b                   	pop    %rbx
    9d96:	5d                   	pop    %rbp
    9d97:	41 5c                	pop    %r12
    9d99:	ff e0                	jmp    *%rax
    9d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9da0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    9da6:	44 89 e0             	mov    %r12d,%eax
    9da9:	5b                   	pop    %rbx
    9daa:	5d                   	pop    %rbp
    9dab:	41 5c                	pop    %r12
    9dad:	c3                   	ret    
    9dae:	66 90                	xchg   %ax,%ax
    9db0:	0f ae e8             	lfence 
    9db3:	48 89 ef             	mov    %rbp,%rdi
    9db6:	5b                   	pop    %rbx
    9db7:	48 8d 05 82 fd ff ff 	lea    -0x27e(%rip),%rax        # 9b40 <_pthread_thread_run>
    9dbe:	5d                   	pop    %rbp
    9dbf:	41 5c                	pop    %r12
    9dc1:	ff e0                	jmp    *%rax
    9dc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9dc8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    9dce:	5b                   	pop    %rbx
    9dcf:	5d                   	pop    %rbp
    9dd0:	44 89 e0             	mov    %r12d,%eax
    9dd3:	41 5c                	pop    %r12
    9dd5:	c3                   	ret    
    9dd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ddd:	00 00 00 
    9de0:	e8 98 74 01 00       	call   2127d <get_thread_data>
    9de5:	48 8b 48 10          	mov    0x10(%rax),%rcx
    9de9:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    9ded:	74 29                	je     9e18 <_ZL10trts_ecalljPv+0x118>
    9def:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    9df5:	5b                   	pop    %rbx
    9df6:	5d                   	pop    %rbp
    9df7:	44 89 e0             	mov    %r12d,%eax
    9dfa:	41 5c                	pop    %r12
    9dfc:	c3                   	ret    
    9dfd:	0f 1f 00             	nopl   (%rax)
    9e00:	48 89 d8             	mov    %rbx,%rax
    9e03:	48 c1 e0 04          	shl    $0x4,%rax
    9e07:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    9e0d:	0f 84 62 ff ff ff    	je     9d75 <_ZL10trts_ecalljPv+0x75>
    9e13:	eb da                	jmp    9def <_ZL10trts_ecalljPv+0xef>
    9e15:	0f 1f 00             	nopl   (%rax)
    9e18:	48 8d 3d f5 24 02 00 	lea    0x224f5(%rip),%rdi        # 2c314 <_ZL10g_ife_lock>
    9e1f:	e8 9c 1d 00 00       	call   bbc0 <sgx_spin_lock>
    9e24:	0f b6 05 85 23 02 00 	movzbl 0x22385(%rip),%eax        # 2c1b0 <_ZL16g_is_first_ecall>
    9e2b:	84 c0                	test   %al,%al
    9e2d:	74 57                	je     9e86 <_ZL10trts_ecalljPv+0x186>
    9e2f:	48 8d 05 e6 1e 02 00 	lea    0x21ee6(%rip),%rax        # 2bd1c <EDMM_supported>
    9e36:	8b 00                	mov    (%rax),%eax
    9e38:	85 c0                	test   %eax,%eax
    9e3a:	74 3e                	je     9e7a <_ZL10trts_ecalljPv+0x17a>
    9e3c:	48 8d 05 7d 9b 01 00 	lea    0x19b7d(%rip),%rax        # 239c0 <g_global_data>
    9e43:	31 d2                	xor    %edx,%edx
    9e45:	8b b0 38 01 00 00    	mov    0x138(%rax),%esi
    9e4b:	48 8d b8 40 01 00 00 	lea    0x140(%rax),%rdi
    9e52:	48 c1 e6 05          	shl    $0x5,%rsi
    9e56:	48 01 fe             	add    %rdi,%rsi
    9e59:	e8 c2 fd ff ff       	call   9c20 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    9e5e:	85 c0                	test   %eax,%eax
    9e60:	0f 85 62 ff ff ff    	jne    9dc8 <_ZL10trts_ecalljPv+0xc8>
    9e66:	e8 c7 73 01 00       	call   21232 <get_enclave_base>
    9e6b:	48 89 c7             	mov    %rax,%rdi
    9e6e:	e8 9d 17 00 00       	call   b610 <change_protection>
    9e73:	41 89 c4             	mov    %eax,%r12d
    9e76:	85 c0                	test   %eax,%eax
    9e78:	75 1d                	jne    9e97 <_ZL10trts_ecalljPv+0x197>
    9e7a:	e8 d1 19 00 00       	call   b850 <init_global_object>
    9e7f:	c6 05 2a 23 02 00 00 	movb   $0x0,0x2232a(%rip)        # 2c1b0 <_ZL16g_is_first_ecall>
    9e86:	48 8d 3d 87 24 02 00 	lea    0x22487(%rip),%rdi        # 2c314 <_ZL10g_ife_lock>
    9e8d:	e8 9e 1d 00 00       	call   bc30 <sgx_spin_unlock>
    9e92:	e9 85 fe ff ff       	jmp    9d1c <_ZL10trts_ecalljPv+0x1c>
    9e97:	48 8d 3d 76 24 02 00 	lea    0x22476(%rip),%rdi        # 2c314 <_ZL10g_ife_lock>
    9e9e:	e8 8d 1d 00 00       	call   bc30 <sgx_spin_unlock>
    9ea3:	e9 fe fe ff ff       	jmp    9da6 <_ZL10trts_ecalljPv+0xa6>
    9ea8:	e8 57 77 01 00       	call   21604 <abort>
    9ead:	0f 1f 00             	nopl   (%rax)

0000000000009eb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>:
    9eb0:	e9 4b fe ff ff       	jmp    9d00 <_ZL10trts_ecalljPv>
    9eb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ebc:	00 00 00 
    9ebf:	90                   	nop

0000000000009ec0 <_Z16_pthread_enabledv>:
    9ec0:	f3 0f 1e fa          	endbr64 
    9ec4:	31 c0                	xor    %eax,%eax
    9ec6:	c3                   	ret    
    9ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9ece:	00 00 

0000000000009ed0 <_Z24_pthread_tls_store_state9_status_t>:
    9ed0:	f3 0f 1e fa          	endbr64 
    9ed4:	c3                   	ret    
    9ed5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9edc:	00 00 00 
    9edf:	90                   	nop

0000000000009ee0 <_Z22_pthread_tls_get_statev>:
    9ee0:	f3 0f 1e fa          	endbr64 
    9ee4:	31 c0                	xor    %eax,%eax
    9ee6:	c3                   	ret    
    9ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    9eee:	00 00 

0000000000009ef0 <_Z26_pthread_tls_store_contextPv>:
    9ef0:	f3 0f 1e fa          	endbr64 
    9ef4:	c3                   	ret    
    9ef5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9efc:	00 00 00 
    9eff:	90                   	nop

0000000000009f00 <_Z20_pthread_wakeup_joinPv>:
    9f00:	f3 0f 1e fa          	endbr64 
    9f04:	c3                   	ret    
    9f05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9f0c:	00 00 00 
    9f0f:	90                   	nop

0000000000009f10 <_Z24_pthread_tls_destructorsv>:
    9f10:	f3 0f 1e fa          	endbr64 
    9f14:	c3                   	ret    
    9f15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9f1c:	00 00 00 
    9f1f:	90                   	nop

0000000000009f20 <tc_set_idle>:
    9f20:	f3 0f 1e fa          	endbr64 
    9f24:	c3                   	ret    
    9f25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9f2c:	00 00 00 
    9f2f:	90                   	nop

0000000000009f30 <do_init_thread>:
    9f30:	f3 0f 1e fa          	endbr64 
    9f34:	41 57                	push   %r15
    9f36:	ba a0 00 00 00       	mov    $0xa0,%edx
    9f3b:	41 56                	push   %r14
    9f3d:	41 55                	push   %r13
    9f3f:	41 54                	push   %r12
    9f41:	41 89 f4             	mov    %esi,%r12d
    9f44:	55                   	push   %rbp
    9f45:	48 89 fd             	mov    %rdi,%rbp
    9f48:	53                   	push   %rbx
    9f49:	48 83 ec 28          	sub    $0x28,%rsp
    9f4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9f54:	00 00 
    9f56:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9f5b:	31 c0                	xor    %eax,%eax
    9f5d:	48 8d 05 5c 9a 01 00 	lea    0x19a5c(%rip),%rax        # 239c0 <g_global_data>
    9f64:	48 8d 70 50          	lea    0x50(%rax),%rsi
    9f68:	48 8b 58 50          	mov    0x50(%rax),%rbx
    9f6c:	48 01 fb             	add    %rdi,%rbx
    9f6f:	48 89 df             	mov    %rbx,%rdi
    9f72:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    9f76:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    9f7a:	4c 8b ab 98 00 00 00 	mov    0x98(%rbx),%r13
    9f81:	e8 aa 56 00 00       	call   f630 <memcpy>
    9f86:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    9f8d:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    9f91:	48 01 2b             	add    %rbp,(%rbx)
    9f94:	48 01 43 08          	add    %rax,0x8(%rbx)
    9f98:	48 01 43 10          	add    %rax,0x10(%rbx)
    9f9c:	48 8d 05 55 1d 02 00 	lea    0x21d55(%rip),%rax        # 2bcf8 <__intel_security_cookie>
    9fa3:	48 01 ea             	add    %rbp,%rdx
    9fa6:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    9faa:	48 8b 00             	mov    (%rax),%rax
    9fad:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    9fb1:	48 01 6b 50          	add    %rbp,0x50(%rbx)
    9fb5:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    9fb9:	48 89 93 98 00 00 00 	mov    %rdx,0x98(%rbx)
    9fc0:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    9fc4:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    9fc8:	48 89 85 58 fd fe ff 	mov    %rax,-0x102a8(%rbp)
    9fcf:	48 8d 05 46 1d 02 00 	lea    0x21d46(%rip),%rax        # 2bd1c <EDMM_supported>
    9fd6:	8b 00                	mov    (%rax),%eax
    9fd8:	85 c0                	test   %eax,%eax
    9fda:	0f 84 98 00 00 00    	je     a078 <do_init_thread+0x148>
    9fe0:	45 84 e4             	test   %r12b,%r12b
    9fe3:	0f 84 a7 00 00 00    	je     a090 <do_init_thread+0x160>
    9fe9:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    9ff0:	00 
    9ff1:	4d 85 ed             	test   %r13,%r13
    9ff4:	0f 85 83 00 00 00    	jne    a07d <do_init_thread+0x14d>
    9ffa:	e8 51 f5 ff ff       	call   9550 <get_dynamic_stack_max_page>
    9fff:	89 c0                	mov    %eax,%eax
    a001:	48 c1 e0 0c          	shl    $0xc,%rax
    a005:	48 01 83 98 00 00 00 	add    %rax,0x98(%rbx)
    a00c:	0f 1f 40 00          	nopl   0x0(%rax)
    a010:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    a017:	00 00 
    a019:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    a020:	00 00 
    a022:	e8 0b 72 01 00       	call   21232 <get_enclave_base>
    a027:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a02c:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    a031:	48 89 c7             	mov    %rax,%rdi
    a034:	e8 57 13 00 00       	call   b390 <elf_tls_info>
    a039:	41 89 c0             	mov    %eax,%r8d
    a03c:	b8 01 00 00 00       	mov    $0x1,%eax
    a041:	45 85 c0             	test   %r8d,%r8d
    a044:	75 0a                	jne    a050 <do_init_thread+0x120>
    a046:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    a04c:	75 62                	jne    a0b0 <do_init_thread+0x180>
    a04e:	31 c0                	xor    %eax,%eax
    a050:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    a055:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a05c:	00 00 
    a05e:	0f 85 99 00 00 00    	jne    a0fd <do_init_thread+0x1cd>
    a064:	48 83 c4 28          	add    $0x28,%rsp
    a068:	5b                   	pop    %rbx
    a069:	5d                   	pop    %rbp
    a06a:	41 5c                	pop    %r12
    a06c:	41 5d                	pop    %r13
    a06e:	41 5e                	pop    %r14
    a070:	41 5f                	pop    %r15
    a072:	c3                   	ret    
    a073:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a078:	4d 85 ed             	test   %r13,%r13
    a07b:	74 93                	je     a010 <do_init_thread+0xe0>
    a07d:	4c 89 ab 98 00 00 00 	mov    %r13,0x98(%rbx)
    a084:	eb 8a                	jmp    a010 <do_init_thread+0xe0>
    a086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a08d:	00 00 00 
    a090:	4d 85 ed             	test   %r13,%r13
    a093:	75 e8                	jne    a07d <do_init_thread+0x14d>
    a095:	48 89 ef             	mov    %rbp,%rdi
    a098:	e8 d3 f3 ff ff       	call   9470 <is_dynamic_thread>
    a09d:	85 c0                	test   %eax,%eax
    a09f:	0f 85 55 ff ff ff    	jne    9ffa <do_init_thread+0xca>
    a0a5:	e9 66 ff ff ff       	jmp    a010 <do_init_thread+0xe0>
    a0aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a0b0:	48 8b 03             	mov    (%rbx),%rax
    a0b3:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    a0b7:	31 f6                	xor    %esi,%esi
    a0b9:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    a0c0:	48 29 fa             	sub    %rdi,%rdx
    a0c3:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    a0ca:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    a0d1:	e8 2a 57 00 00       	call   f800 <memset>
    a0d6:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    a0da:	48 8b 03             	mov    (%rbx),%rax
    a0dd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    a0e2:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a0e7:	48 29 f8             	sub    %rdi,%rax
    a0ea:	48 39 c2             	cmp    %rax,%rdx
    a0ed:	0f 87 5b ff ff ff    	ja     a04e <do_init_thread+0x11e>
    a0f3:	e8 38 55 00 00       	call   f630 <memcpy>
    a0f8:	e9 51 ff ff ff       	jmp    a04e <do_init_thread+0x11e>
    a0fd:	e8 be 58 00 00       	call   f9c0 <__stack_chk_fail>
    a102:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a109:	00 00 00 
    a10c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a110 <do_ecall>:
    a110:	f3 0f 1e fa          	endbr64 
    a114:	55                   	push   %rbp
    a115:	48 89 d5             	mov    %rdx,%rbp
    a118:	48 83 ec 70          	sub    $0x70,%rsp
    a11c:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    a120:	48 89 34 24          	mov    %rsi,(%rsp)
    a124:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a12b:	00 00 
    a12d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    a132:	31 c0                	xor    %eax,%eax
    a134:	e8 05 71 01 00       	call   2123e <get_enclave_state>
    a139:	41 89 c0             	mov    %eax,%r8d
    a13c:	b8 01 00 00 00       	mov    $0x1,%eax
    a141:	41 83 f8 02          	cmp    $0x2,%r8d
    a145:	74 21                	je     a168 <do_ecall+0x58>
    a147:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    a14c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a153:	00 00 
    a155:	0f 85 9c 01 00 00    	jne    a2f7 <do_ecall+0x1e7>
    a15b:	48 83 c4 70          	add    $0x70,%rsp
    a15f:	5d                   	pop    %rbp
    a160:	c3                   	ret    
    a161:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a168:	e8 10 71 01 00       	call   2127d <get_thread_data>
    a16d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a172:	48 85 c0             	test   %rax,%rax
    a175:	0f 84 fd 00 00 00    	je     a278 <do_ecall+0x168>
    a17b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a180:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a184:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    a188:	0f 84 da 00 00 00    	je     a268 <do_ecall+0x158>
    a18e:	e8 ea 70 01 00       	call   2127d <get_thread_data>
    a193:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a198:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a19c:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    a1a0:	74 46                	je     a1e8 <do_ecall+0xd8>
    a1a2:	48 8b 34 24          	mov    (%rsp),%rsi
    a1a6:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    a1aa:	e8 51 fb ff ff       	call   9d00 <_ZL10trts_ecalljPv>
    a1af:	48 8d 15 0a 98 01 00 	lea    0x1980a(%rip),%rdx        # 239c0 <g_global_data>
    a1b6:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    a1ba:	48 85 d2             	test   %rdx,%rdx
    a1bd:	74 88                	je     a147 <do_ecall+0x37>
    a1bf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    a1c4:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    a1c8:	48 39 71 10          	cmp    %rsi,0x10(%rcx)
    a1cc:	0f 85 75 ff ff ff    	jne    a147 <do_ecall+0x37>
    a1d2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    a1d6:	e8 45 fd ff ff       	call   9f20 <tc_set_idle>
    a1db:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    a1df:	e9 63 ff ff ff       	jmp    a147 <do_ecall+0x37>
    a1e4:	0f 1f 40 00          	nopl   0x0(%rax)
    a1e8:	31 ff                	xor    %edi,%edi
    a1ea:	e8 a1 ee ff ff       	call   9090 <sgx_wrpkru>
    a1ef:	e8 cc fc ff ff       	call   9ec0 <_Z16_pthread_enabledv>
    a1f4:	84 c0                	test   %al,%al
    a1f6:	0f 84 c4 00 00 00    	je     a2c0 <do_ecall+0x1b0>
    a1fc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a200:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    a205:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    a20a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    a20f:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    a214:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    a219:	e8 dd 5d 00 00       	call   fffb <_setjmp>
    a21e:	f3 0f 1e fa          	endbr64 
    a222:	85 c0                	test   %eax,%eax
    a224:	74 6a                	je     a290 <do_ecall+0x180>
    a226:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    a22b:	48 8b 41 10          	mov    0x10(%rcx),%rax
    a22f:	48 89 41 08          	mov    %rax,0x8(%rcx)
    a233:	b8 09 00 00 00       	mov    $0x9,%eax
    a238:	bf 09 00 00 00       	mov    $0x9,%edi
    a23d:	89 44 24 18          	mov    %eax,0x18(%rsp)
    a241:	e8 8a fc ff ff       	call   9ed0 <_Z24_pthread_tls_store_state9_status_t>
    a246:	8b 44 24 18          	mov    0x18(%rsp),%eax
    a24a:	89 44 24 14          	mov    %eax,0x14(%rsp)
    a24e:	e8 bd fc ff ff       	call   9f10 <_Z24_pthread_tls_destructorsv>
    a253:	48 8b 3c 24          	mov    (%rsp),%rdi
    a257:	e8 a4 fc ff ff       	call   9f00 <_Z20_pthread_wakeup_joinPv>
    a25c:	8b 44 24 14          	mov    0x14(%rsp),%eax
    a260:	e9 4a ff ff ff       	jmp    a1af <do_ecall+0x9f>
    a265:	0f 1f 00             	nopl   (%rax)
    a268:	48 8d 05 51 97 01 00 	lea    0x19751(%rip),%rax        # 239c0 <g_global_data>
    a26f:	48 8b 40 38          	mov    0x38(%rax),%rax
    a273:	48 85 c0             	test   %rax,%rax
    a276:	74 68                	je     a2e0 <do_ecall+0x1d0>
    a278:	31 f6                	xor    %esi,%esi
    a27a:	48 89 ef             	mov    %rbp,%rdi
    a27d:	e8 ae fc ff ff       	call   9f30 <do_init_thread>
    a282:	85 c0                	test   %eax,%eax
    a284:	0f 84 04 ff ff ff    	je     a18e <do_ecall+0x7e>
    a28a:	e9 b8 fe ff ff       	jmp    a147 <do_ecall+0x37>
    a28f:	90                   	nop
    a290:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    a295:	e8 56 fc ff ff       	call   9ef0 <_Z26_pthread_tls_store_contextPv>
    a29a:	0f c7 f0             	rdrand %eax
    a29d:	73 fb                	jae    a29a <do_ecall+0x18a>
    a29f:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    a2a3:	48 8b 34 24          	mov    (%rsp),%rsi
    a2a7:	89 ef                	mov    %ebp,%edi
    a2a9:	e8 02 fc ff ff       	call   9eb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    a2ae:	83 fd fa             	cmp    $0xfffffffa,%ebp
    a2b1:	74 85                	je     a238 <do_ecall+0x128>
    a2b3:	83 f8 09             	cmp    $0x9,%eax
    a2b6:	75 92                	jne    a24a <do_ecall+0x13a>
    a2b8:	e9 7b ff ff ff       	jmp    a238 <do_ecall+0x128>
    a2bd:	0f 1f 00             	nopl   (%rax)
    a2c0:	0f c7 f0             	rdrand %eax
    a2c3:	73 fb                	jae    a2c0 <do_ecall+0x1b0>
    a2c5:	48 8b 34 24          	mov    (%rsp),%rsi
    a2c9:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    a2cd:	e8 de fb ff ff       	call   9eb0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    a2d2:	e9 d8 fe ff ff       	jmp    a1af <do_ecall+0x9f>
    a2d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a2de:	00 00 
    a2e0:	e8 fb fb ff ff       	call   9ee0 <_Z22_pthread_tls_get_statev>
    a2e5:	83 f8 09             	cmp    $0x9,%eax
    a2e8:	74 8e                	je     a278 <do_ecall+0x168>
    a2ea:	83 7c 24 10 fa       	cmpl   $0xfffffffa,0x10(%rsp)
    a2ef:	0f 85 99 fe ff ff    	jne    a18e <do_ecall+0x7e>
    a2f5:	eb 81                	jmp    a278 <do_ecall+0x168>
    a2f7:	e8 c4 56 00 00       	call   f9c0 <__stack_chk_fail>
    a2fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a300 <do_ecall_add_thread>:
    a300:	f3 0f 1e fa          	endbr64 
    a304:	41 54                	push   %r12
    a306:	53                   	push   %rbx
    a307:	48 89 fb             	mov    %rdi,%rbx
    a30a:	48 83 ec 08          	sub    $0x8,%rsp
    a30e:	e8 dd 07 00 00       	call   aaf0 <is_utility_thread>
    a313:	3c 01                	cmp    $0x1,%al
    a315:	0f 85 ad 00 00 00    	jne    a3c8 <do_ecall_add_thread+0xc8>
    a31b:	48 85 db             	test   %rbx,%rbx
    a31e:	0f 84 a4 00 00 00    	je     a3c8 <do_ecall_add_thread+0xc8>
    a324:	be 08 00 00 00       	mov    $0x8,%esi
    a329:	48 89 df             	mov    %rbx,%rdi
    a32c:	e8 6f ea ff ff       	call   8da0 <sgx_is_outside_enclave>
    a331:	85 c0                	test   %eax,%eax
    a333:	0f 84 8f 00 00 00    	je     a3c8 <do_ecall_add_thread+0xc8>
    a339:	0f ae e8             	lfence 
    a33c:	48 8b 1b             	mov    (%rbx),%rbx
    a33f:	48 85 db             	test   %rbx,%rbx
    a342:	0f 84 80 00 00 00    	je     a3c8 <do_ecall_add_thread+0xc8>
    a348:	0f ae e8             	lfence 
    a34b:	48 89 df             	mov    %rbx,%rdi
    a34e:	e8 fd f7 ff ff       	call   9b50 <_ZL11do_save_tcsPv>
    a353:	41 89 c4             	mov    %eax,%r12d
    a356:	85 c0                	test   %eax,%eax
    a358:	75 74                	jne    a3ce <do_ecall_add_thread+0xce>
    a35a:	48 89 df             	mov    %rbx,%rdi
    a35d:	e8 1e f6 ff ff       	call   9980 <do_add_thread>
    a362:	41 89 c4             	mov    %eax,%r12d
    a365:	85 c0                	test   %eax,%eax
    a367:	74 65                	je     a3ce <do_ecall_add_thread+0xce>
    a369:	e8 82 07 00 00       	call   aaf0 <is_utility_thread>
    a36e:	84 c0                	test   %al,%al
    a370:	74 5c                	je     a3ce <do_ecall_add_thread+0xce>
    a372:	4c 8b 05 a7 1f 02 00 	mov    0x21fa7(%rip),%r8        # 2c320 <_ZL10g_tcs_node>
    a379:	4d 85 c0             	test   %r8,%r8
    a37c:	74 50                	je     a3ce <do_ecall_add_thread+0xce>
    a37e:	48 8b 0d 93 1f 02 00 	mov    0x21f93(%rip),%rcx        # 2c318 <_ZL12g_tcs_cookie>
    a385:	49 8b 00             	mov    (%r8),%rax
    a388:	49 8b 78 08          	mov    0x8(%r8),%rdi
    a38c:	48 31 c8             	xor    %rcx,%rax
    a38f:	48 39 c3             	cmp    %rax,%rbx
    a392:	74 45                	je     a3d9 <do_ecall_add_thread+0xd9>
    a394:	48 85 ff             	test   %rdi,%rdi
    a397:	75 12                	jne    a3ab <do_ecall_add_thread+0xab>
    a399:	eb 33                	jmp    a3ce <do_ecall_add_thread+0xce>
    a39b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3a0:	49 89 f8             	mov    %rdi,%r8
    a3a3:	48 85 c0             	test   %rax,%rax
    a3a6:	74 26                	je     a3ce <do_ecall_add_thread+0xce>
    a3a8:	48 89 c7             	mov    %rax,%rdi
    a3ab:	48 8b 17             	mov    (%rdi),%rdx
    a3ae:	48 8b 47 08          	mov    0x8(%rdi),%rax
    a3b2:	48 31 ca             	xor    %rcx,%rdx
    a3b5:	48 39 d3             	cmp    %rdx,%rbx
    a3b8:	75 e6                	jne    a3a0 <do_ecall_add_thread+0xa0>
    a3ba:	49 89 40 08          	mov    %rax,0x8(%r8)
    a3be:	e8 1d 3c 00 00       	call   dfe0 <dlfree>
    a3c3:	eb 09                	jmp    a3ce <do_ecall_add_thread+0xce>
    a3c5:	0f 1f 00             	nopl   (%rax)
    a3c8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a3ce:	48 83 c4 08          	add    $0x8,%rsp
    a3d2:	44 89 e0             	mov    %r12d,%eax
    a3d5:	5b                   	pop    %rbx
    a3d6:	41 5c                	pop    %r12
    a3d8:	c3                   	ret    
    a3d9:	48 89 3d 40 1f 02 00 	mov    %rdi,0x21f40(%rip)        # 2c320 <_ZL10g_tcs_node>
    a3e0:	4c 89 c7             	mov    %r8,%rdi
    a3e3:	e8 f8 3b 00 00       	call   dfe0 <dlfree>
    a3e8:	eb e4                	jmp    a3ce <do_ecall_add_thread+0xce>
    a3ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a3f0 <do_uninit_enclave>:
    a3f0:	f3 0f 1e fa          	endbr64 
    a3f4:	48 8d 05 21 19 02 00 	lea    0x21921(%rip),%rax        # 2bd1c <EDMM_supported>
    a3fb:	41 54                	push   %r12
    a3fd:	55                   	push   %rbp
    a3fe:	53                   	push   %rbx
    a3ff:	8b 00                	mov    (%rax),%eax
    a401:	85 c0                	test   %eax,%eax
    a403:	0f 84 b4 00 00 00    	je     a4bd <do_uninit_enclave+0xcd>
    a409:	48 89 fb             	mov    %rdi,%rbx
    a40c:	e8 df 06 00 00       	call   aaf0 <is_utility_thread>
    a411:	84 c0                	test   %al,%al
    a413:	0f 84 97 00 00 00    	je     a4b0 <do_uninit_enclave+0xc0>
    a419:	f0 83 0d ef 1e 02 00 	lock orl $0x1,0x21eef(%rip)        # 2c310 <g_uninit_flag>
    a420:	01 
    a421:	48 8b 2d f8 1e 02 00 	mov    0x21ef8(%rip),%rbp        # 2c320 <_ZL10g_tcs_node>
    a428:	48 c7 05 ed 1e 02 00 	movq   $0x0,0x21eed(%rip)        # 2c320 <_ZL10g_tcs_node>
    a42f:	00 00 00 00 
    a433:	48 85 ed             	test   %rbp,%rbp
    a436:	74 41                	je     a479 <do_uninit_enclave+0x89>
    a438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a43f:	00 
    a440:	48 8b 75 00          	mov    0x0(%rbp),%rsi
    a444:	48 33 35 cd 1e 02 00 	xor    0x21ecd(%rip),%rsi        # 2c318 <_ZL12g_tcs_cookie>
    a44b:	48 39 f3             	cmp    %rsi,%rbx
    a44e:	74 15                	je     a465 <do_uninit_enclave+0x75>
    a450:	48 8d 96 00 10 00 00 	lea    0x1000(%rsi),%rdx
    a457:	bf 10 04 00 00       	mov    $0x410,%edi
    a45c:	e8 4f f1 ff ff       	call   95b0 <sgx_accept_forward>
    a461:	85 c0                	test   %eax,%eax
    a463:	75 58                	jne    a4bd <do_uninit_enclave+0xcd>
    a465:	4c 8b 65 08          	mov    0x8(%rbp),%r12
    a469:	48 89 ef             	mov    %rbp,%rdi
    a46c:	e8 6f 3b 00 00       	call   dfe0 <dlfree>
    a471:	4c 89 e5             	mov    %r12,%rbp
    a474:	48 85 ed             	test   %rbp,%rbp
    a477:	75 c7                	jne    a440 <do_uninit_enclave+0x50>
    a479:	48 8d 3d 94 1e 02 00 	lea    0x21e94(%rip),%rdi        # 2c314 <_ZL10g_ife_lock>
    a480:	e8 3b 17 00 00       	call   bbc0 <sgx_spin_lock>
    a485:	0f b6 05 24 1d 02 00 	movzbl 0x21d24(%rip),%eax        # 2c1b0 <_ZL16g_is_first_ecall>
    a48c:	84 c0                	test   %al,%al
    a48e:	74 48                	je     a4d8 <do_uninit_enclave+0xe8>
    a490:	48 8d 3d 7d 1e 02 00 	lea    0x21e7d(%rip),%rdi        # 2c314 <_ZL10g_ife_lock>
    a497:	e8 94 17 00 00       	call   bc30 <sgx_spin_unlock>
    a49c:	bf 03 00 00 00       	mov    $0x3,%edi
    a4a1:	e8 a9 6d 01 00       	call   2124f <set_enclave_state>
    a4a6:	5b                   	pop    %rbx
    a4a7:	31 c0                	xor    %eax,%eax
    a4a9:	5d                   	pop    %rbp
    a4aa:	41 5c                	pop    %r12
    a4ac:	c3                   	ret    
    a4ad:	0f 1f 00             	nopl   (%rax)
    a4b0:	e8 2b f0 ff ff       	call   94e0 <is_dynamic_thread_exist>
    a4b5:	85 c0                	test   %eax,%eax
    a4b7:	0f 84 5c ff ff ff    	je     a419 <do_uninit_enclave+0x29>
    a4bd:	bf 03 00 00 00       	mov    $0x3,%edi
    a4c2:	e8 88 6d 01 00       	call   2124f <set_enclave_state>
    a4c7:	5b                   	pop    %rbx
    a4c8:	b8 01 00 00 00       	mov    $0x1,%eax
    a4cd:	5d                   	pop    %rbp
    a4ce:	41 5c                	pop    %r12
    a4d0:	c3                   	ret    
    a4d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a4d8:	e8 13 14 00 00       	call   b8f0 <uninit_global_object>
    a4dd:	eb b1                	jmp    a490 <do_uninit_enclave+0xa0>
    a4df:	90                   	nop

000000000000a4e0 <trts_mprotect>:
    a4e0:	f3 0f 1e fa          	endbr64 
    a4e4:	55                   	push   %rbp
    a4e5:	48 89 e5             	mov    %rsp,%rbp
    a4e8:	41 56                	push   %r14
    a4ea:	41 55                	push   %r13
    a4ec:	41 54                	push   %r12
    a4ee:	53                   	push   %rbx
    a4ef:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a4f3:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a4f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a4fe:	00 00 
    a500:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a505:	31 c0                	xor    %eax,%eax
    a507:	b8 02 00 00 00       	mov    $0x2,%eax
    a50c:	48 85 f6             	test   %rsi,%rsi
    a50f:	0f 84 89 00 00 00    	je     a59e <trts_mprotect+0xbe>
    a515:	49 89 d5             	mov    %rdx,%r13
    a518:	48 89 fa             	mov    %rdi,%rdx
    a51b:	48 89 fb             	mov    %rdi,%rbx
    a51e:	49 89 f4             	mov    %rsi,%r12
    a521:	48 09 f2             	or     %rsi,%rdx
    a524:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx
    a52a:	75 72                	jne    a59e <trts_mprotect+0xbe>
    a52c:	48 8d 05 e5 17 02 00 	lea    0x217e5(%rip),%rax        # 2bd18 <g_sdk_version>
    a533:	83 38 01             	cmpl   $0x1,(%rax)
    a536:	0f 84 84 00 00 00    	je     a5c0 <trts_mprotect+0xe0>
    a53c:	4c 89 e8             	mov    %r13,%rax
    a53f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    a544:	ba 38 00 00 00       	mov    $0x38,%edx
    a549:	31 f6                	xor    %esi,%esi
    a54b:	48 0d 20 02 00 00    	or     $0x220,%rax
    a551:	49 01 dc             	add    %rbx,%r12
    a554:	41 83 e5 06          	and    $0x6,%r13d
    a558:	49 89 e6             	mov    %rsp,%r14
    a55b:	48 89 04 24          	mov    %rax,(%rsp)
    a55f:	e8 9c 52 00 00       	call   f800 <memset>
    a564:	4c 39 e3             	cmp    %r12,%rbx
    a567:	73 33                	jae    a59c <trts_mprotect+0xbc>
    a569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a570:	48 89 de             	mov    %rbx,%rsi
    a573:	4c 89 f7             	mov    %r14,%rdi
    a576:	e8 4d 70 01 00       	call   215c8 <do_emodpe>
    a57b:	49 83 fd 06          	cmp    $0x6,%r13
    a57f:	74 0f                	je     a590 <trts_mprotect+0xb0>
    a581:	48 89 de             	mov    %rbx,%rsi
    a584:	4c 89 f7             	mov    %r14,%rdi
    a587:	e8 1e 70 01 00       	call   215aa <do_eaccept>
    a58c:	85 c0                	test   %eax,%eax
    a58e:	75 0e                	jne    a59e <trts_mprotect+0xbe>
    a590:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a597:	4c 39 e3             	cmp    %r12,%rbx
    a59a:	72 d4                	jb     a570 <trts_mprotect+0x90>
    a59c:	31 c0                	xor    %eax,%eax
    a59e:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    a5a3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    a5aa:	00 00 
    a5ac:	75 29                	jne    a5d7 <trts_mprotect+0xf7>
    a5ae:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a5b2:	5b                   	pop    %rbx
    a5b3:	41 5c                	pop    %r12
    a5b5:	41 5d                	pop    %r13
    a5b7:	41 5e                	pop    %r14
    a5b9:	5d                   	pop    %rbp
    a5ba:	c3                   	ret    
    a5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a5c0:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
    a5c5:	4c 89 ea             	mov    %r13,%rdx
    a5c8:	e8 13 00 00 00       	call   a5e0 <change_permissions_ocall>
    a5cd:	85 c0                	test   %eax,%eax
    a5cf:	0f 84 67 ff ff ff    	je     a53c <trts_mprotect+0x5c>
    a5d5:	eb c7                	jmp    a59e <trts_mprotect+0xbe>
    a5d7:	e8 e4 53 00 00       	call   f9c0 <__stack_chk_fail>
    a5dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a5e0 <change_permissions_ocall>:
    a5e0:	f3 0f 1e fa          	endbr64 
    a5e4:	41 55                	push   %r13
    a5e6:	41 89 cd             	mov    %ecx,%r13d
    a5e9:	41 54                	push   %r12
    a5eb:	49 89 fc             	mov    %rdi,%r12
    a5ee:	bf 18 00 00 00       	mov    $0x18,%edi
    a5f3:	55                   	push   %rbp
    a5f4:	48 89 f5             	mov    %rsi,%rbp
    a5f7:	53                   	push   %rbx
    a5f8:	48 89 d3             	mov    %rdx,%rbx
    a5fb:	48 83 ec 08          	sub    $0x8,%rsp
    a5ff:	e8 ec e7 ff ff       	call   8df0 <sgx_ocalloc>
    a604:	48 85 c0             	test   %rax,%rax
    a607:	74 2f                	je     a638 <change_permissions_ocall+0x58>
    a609:	4c 89 20             	mov    %r12,(%rax)
    a60c:	44 89 ef             	mov    %r13d,%edi
    a60f:	48 89 c6             	mov    %rax,%rsi
    a612:	48 89 68 08          	mov    %rbp,0x8(%rax)
    a616:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a61a:	e8 41 00 00 00       	call   a660 <sgx_ocall>
    a61f:	41 89 c4             	mov    %eax,%r12d
    a622:	e8 b9 e8 ff ff       	call   8ee0 <sgx_ocfree>
    a627:	48 83 c4 08          	add    $0x8,%rsp
    a62b:	44 89 e0             	mov    %r12d,%eax
    a62e:	5b                   	pop    %rbx
    a62f:	5d                   	pop    %rbp
    a630:	41 5c                	pop    %r12
    a632:	41 5d                	pop    %r13
    a634:	c3                   	ret    
    a635:	0f 1f 00             	nopl   (%rax)
    a638:	e8 a3 e8 ff ff       	call   8ee0 <sgx_ocfree>
    a63d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a643:	48 83 c4 08          	add    $0x8,%rsp
    a647:	5b                   	pop    %rbx
    a648:	44 89 e0             	mov    %r12d,%eax
    a64b:	5d                   	pop    %rbp
    a64c:	41 5c                	pop    %r12
    a64e:	41 5d                	pop    %r13
    a650:	c3                   	ret    
    a651:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a658:	00 00 00 
    a65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a660 <sgx_ocall>:
    a660:	f3 0f 1e fa          	endbr64 
    a664:	8d 47 05             	lea    0x5(%rdi),%eax
    a667:	83 f8 03             	cmp    $0x3,%eax
    a66a:	76 12                	jbe    a67e <sgx_ocall+0x1e>
    a66c:	85 ff                	test   %edi,%edi
    a66e:	74 0e                	je     a67e <sgx_ocall+0x1e>
    a670:	48 8d 15 89 79 01 00 	lea    0x17989(%rip),%rdx        # 22000 <g_dyn_entry_table>
    a677:	89 f8                	mov    %edi,%eax
    a679:	48 3b 02             	cmp    (%rdx),%rax
    a67c:	73 0a                	jae    a688 <sgx_ocall+0x28>
    a67e:	e9 47 6e 01 00       	jmp    214ca <__morestack>
    a683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a688:	b8 01 10 00 00       	mov    $0x1001,%eax
    a68d:	c3                   	ret    
    a68e:	66 90                	xchg   %ax,%ax

000000000000a690 <update_ocall_lastsp>:
    a690:	f3 0f 1e fa          	endbr64 
    a694:	53                   	push   %rbx
    a695:	48 89 fb             	mov    %rdi,%rbx
    a698:	e8 e0 6b 01 00       	call   2127d <get_thread_data>
    a69d:	ba 01 00 00 00       	mov    $0x1,%edx
    a6a2:	4c 8b 40 08          	mov    0x8(%rax),%r8
    a6a6:	4c 89 43 30          	mov    %r8,0x30(%rbx)
    a6aa:	4c 39 40 10          	cmp    %r8,0x10(%rax)
    a6ae:	74 0b                	je     a6bb <update_ocall_lastsp+0x2b>
    a6b0:	49 8b 88 90 00 00 00 	mov    0x90(%r8),%rcx
    a6b7:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    a6bb:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
    a6c2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    a6c6:	4c 89 c0             	mov    %r8,%rax
    a6c9:	5b                   	pop    %rbx
    a6ca:	c3                   	ret    
    a6cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a6d0 <do_oret>:
    a6d0:	f3 0f 1e fa          	endbr64 
    a6d4:	55                   	push   %rbp
    a6d5:	48 89 fd             	mov    %rdi,%rbp
    a6d8:	48 83 ec 10          	sub    $0x10,%rsp
    a6dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a6e3:	00 00 
    a6e5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a6ea:	31 c0                	xor    %eax,%eax
    a6ec:	e8 8c 6b 01 00       	call   2127d <get_thread_data>
    a6f1:	48 8b 78 08          	mov    0x8(%rax),%rdi
    a6f5:	48 89 3c 24          	mov    %rdi,(%rsp)
    a6f9:	48 85 ff             	test   %rdi,%rdi
    a6fc:	74 22                	je     a720 <do_oret+0x50>
    a6fe:	48 89 e2             	mov    %rsp,%rdx
    a701:	48 39 fa             	cmp    %rdi,%rdx
    a704:	73 1a                	jae    a720 <do_oret+0x50>
    a706:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a70a:	48 8d 8a 10 ff ff ff 	lea    -0xf0(%rdx),%rcx
    a711:	48 39 f9             	cmp    %rdi,%rcx
    a714:	72 0a                	jb     a720 <do_oret+0x50>
    a716:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    a71d:	4f 
    a71e:	74 20                	je     a740 <do_oret+0x70>
    a720:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a725:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a72c:	00 00 
    a72e:	75 2c                	jne    a75c <do_oret+0x8c>
    a730:	48 83 c4 10          	add    $0x10,%rsp
    a734:	b8 01 00 00 00       	mov    $0x1,%eax
    a739:	5d                   	pop    %rbp
    a73a:	c3                   	ret    
    a73b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a740:	48 8b 4f 30          	mov    0x30(%rdi),%rcx
    a744:	48 39 ca             	cmp    %rcx,%rdx
    a747:	72 d7                	jb     a720 <do_oret+0x50>
    a749:	48 39 f9             	cmp    %rdi,%rcx
    a74c:	76 d2                	jbe    a720 <do_oret+0x50>
    a74e:	48 89 48 08          	mov    %rcx,0x8(%rax)
    a752:	48 89 ee             	mov    %rbp,%rsi
    a755:	e8 83 6d 01 00       	call   214dd <asm_oret>
    a75a:	eb c4                	jmp    a720 <do_oret+0x50>
    a75c:	e8 5f 52 00 00       	call   f9c0 <__stack_chk_fail>
    a761:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a768:	00 00 00 
    a76b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a770 <trim_range_ocall>:
    a770:	f3 0f 1e fa          	endbr64 
    a774:	41 54                	push   %r12
    a776:	55                   	push   %rbp
    a777:	48 89 fd             	mov    %rdi,%rbp
    a77a:	bf 10 00 00 00       	mov    $0x10,%edi
    a77f:	53                   	push   %rbx
    a780:	48 89 f3             	mov    %rsi,%rbx
    a783:	e8 68 e6 ff ff       	call   8df0 <sgx_ocalloc>
    a788:	48 85 c0             	test   %rax,%rax
    a78b:	74 2b                	je     a7b8 <trim_range_ocall+0x48>
    a78d:	48 89 28             	mov    %rbp,(%rax)
    a790:	48 89 c6             	mov    %rax,%rsi
    a793:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    a798:	48 89 58 08          	mov    %rbx,0x8(%rax)
    a79c:	e8 bf fe ff ff       	call   a660 <sgx_ocall>
    a7a1:	41 89 c4             	mov    %eax,%r12d
    a7a4:	e8 37 e7 ff ff       	call   8ee0 <sgx_ocfree>
    a7a9:	44 89 e0             	mov    %r12d,%eax
    a7ac:	5b                   	pop    %rbx
    a7ad:	5d                   	pop    %rbp
    a7ae:	41 5c                	pop    %r12
    a7b0:	c3                   	ret    
    a7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a7b8:	e8 23 e7 ff ff       	call   8ee0 <sgx_ocfree>
    a7bd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a7c3:	5b                   	pop    %rbx
    a7c4:	5d                   	pop    %rbp
    a7c5:	44 89 e0             	mov    %r12d,%eax
    a7c8:	41 5c                	pop    %r12
    a7ca:	c3                   	ret    
    a7cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a7d0 <trim_range_commit_ocall>:
    a7d0:	f3 0f 1e fa          	endbr64 
    a7d4:	41 54                	push   %r12
    a7d6:	53                   	push   %rbx
    a7d7:	48 89 fb             	mov    %rdi,%rbx
    a7da:	bf 08 00 00 00       	mov    $0x8,%edi
    a7df:	48 83 ec 08          	sub    $0x8,%rsp
    a7e3:	e8 08 e6 ff ff       	call   8df0 <sgx_ocalloc>
    a7e8:	48 85 c0             	test   %rax,%rax
    a7eb:	74 23                	je     a810 <trim_range_commit_ocall+0x40>
    a7ed:	48 89 18             	mov    %rbx,(%rax)
    a7f0:	48 89 c6             	mov    %rax,%rsi
    a7f3:	bf fd ff ff ff       	mov    $0xfffffffd,%edi
    a7f8:	e8 63 fe ff ff       	call   a660 <sgx_ocall>
    a7fd:	41 89 c4             	mov    %eax,%r12d
    a800:	e8 db e6 ff ff       	call   8ee0 <sgx_ocfree>
    a805:	48 83 c4 08          	add    $0x8,%rsp
    a809:	44 89 e0             	mov    %r12d,%eax
    a80c:	5b                   	pop    %rbx
    a80d:	41 5c                	pop    %r12
    a80f:	c3                   	ret    
    a810:	e8 cb e6 ff ff       	call   8ee0 <sgx_ocfree>
    a815:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a81b:	48 83 c4 08          	add    $0x8,%rsp
    a81f:	44 89 e0             	mov    %r12d,%eax
    a822:	5b                   	pop    %rbx
    a823:	41 5c                	pop    %r12
    a825:	c3                   	ret    
    a826:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a82d:	00 00 00 

000000000000a830 <get_heap_base>:
    a830:	f3 0f 1e fa          	endbr64 
    a834:	48 83 ec 08          	sub    $0x8,%rsp
    a838:	e8 f5 69 01 00       	call   21232 <get_enclave_base>
    a83d:	48 8d 15 7c 91 01 00 	lea    0x1917c(%rip),%rdx        # 239c0 <g_global_data>
    a844:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    a848:	48 83 c4 08          	add    $0x8,%rsp
    a84c:	48 01 d0             	add    %rdx,%rax
    a84f:	c3                   	ret    

000000000000a850 <get_heap_size>:
    a850:	f3 0f 1e fa          	endbr64 
    a854:	48 8d 05 c1 14 02 00 	lea    0x214c1(%rip),%rax        # 2bd1c <EDMM_supported>
    a85b:	48 8d 0d 5e 91 01 00 	lea    0x1915e(%rip),%rcx        # 239c0 <g_global_data>
    a862:	8b 00                	mov    (%rax),%eax
    a864:	4c 8b 41 18          	mov    0x18(%rcx),%r8
    a868:	85 c0                	test   %eax,%eax
    a86a:	74 41                	je     a8ad <get_heap_size+0x5d>
    a86c:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a872:	85 c0                	test   %eax,%eax
    a874:	74 37                	je     a8ad <get_heap_size+0x5d>
    a876:	31 d2                	xor    %edx,%edx
    a878:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a87f:	00 
    a880:	89 d0                	mov    %edx,%eax
    a882:	48 83 c0 0a          	add    $0xa,%rax
    a886:	48 c1 e0 05          	shl    $0x5,%rax
    a88a:	48 01 c8             	add    %rcx,%rax
    a88d:	0f b7 30             	movzwl (%rax),%esi
    a890:	66 83 fe 03          	cmp    $0x3,%si
    a894:	75 0a                	jne    a8a0 <get_heap_size+0x50>
    a896:	8b 40 04             	mov    0x4(%rax),%eax
    a899:	48 c1 e0 0c          	shl    $0xc,%rax
    a89d:	49 01 c0             	add    %rax,%r8
    a8a0:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a8a6:	83 c2 01             	add    $0x1,%edx
    a8a9:	39 d0                	cmp    %edx,%eax
    a8ab:	77 d3                	ja     a880 <get_heap_size+0x30>
    a8ad:	4c 89 c0             	mov    %r8,%rax
    a8b0:	c3                   	ret    
    a8b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a8b8:	00 00 00 
    a8bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a8c0 <get_heap_min_size>:
    a8c0:	f3 0f 1e fa          	endbr64 
    a8c4:	48 8d 0d f5 90 01 00 	lea    0x190f5(%rip),%rcx        # 239c0 <g_global_data>
    a8cb:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a8d1:	85 c0                	test   %eax,%eax
    a8d3:	74 3b                	je     a910 <get_heap_min_size+0x50>
    a8d5:	31 d2                	xor    %edx,%edx
    a8d7:	eb 14                	jmp    a8ed <get_heap_min_size+0x2d>
    a8d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a8e0:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a8e6:	83 c2 01             	add    $0x1,%edx
    a8e9:	39 d0                	cmp    %edx,%eax
    a8eb:	76 23                	jbe    a910 <get_heap_min_size+0x50>
    a8ed:	89 d0                	mov    %edx,%eax
    a8ef:	48 83 c0 0a          	add    $0xa,%rax
    a8f3:	48 c1 e0 05          	shl    $0x5,%rax
    a8f7:	48 01 c8             	add    %rcx,%rax
    a8fa:	0f b7 30             	movzwl (%rax),%esi
    a8fd:	66 83 fe 01          	cmp    $0x1,%si
    a901:	75 dd                	jne    a8e0 <get_heap_min_size+0x20>
    a903:	8b 40 04             	mov    0x4(%rax),%eax
    a906:	48 c1 e0 0c          	shl    $0xc,%rax
    a90a:	c3                   	ret    
    a90b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a910:	31 c0                	xor    %eax,%eax
    a912:	c3                   	ret    
    a913:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a91a:	00 00 00 
    a91d:	0f 1f 00             	nopl   (%rax)

000000000000a920 <get_rsrv_base>:
    a920:	f3 0f 1e fa          	endbr64 
    a924:	48 83 ec 08          	sub    $0x8,%rsp
    a928:	e8 05 69 01 00       	call   21232 <get_enclave_base>
    a92d:	48 8d 15 8c 90 01 00 	lea    0x1908c(%rip),%rdx        # 239c0 <g_global_data>
    a934:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    a938:	48 83 c4 08          	add    $0x8,%rsp
    a93c:	48 01 d0             	add    %rdx,%rax
    a93f:	c3                   	ret    

000000000000a940 <get_rsrv_size>:
    a940:	f3 0f 1e fa          	endbr64 
    a944:	48 8d 05 d1 13 02 00 	lea    0x213d1(%rip),%rax        # 2bd1c <EDMM_supported>
    a94b:	48 8d 0d 6e 90 01 00 	lea    0x1906e(%rip),%rcx        # 239c0 <g_global_data>
    a952:	8b 00                	mov    (%rax),%eax
    a954:	4c 8b 41 28          	mov    0x28(%rcx),%r8
    a958:	85 c0                	test   %eax,%eax
    a95a:	74 41                	je     a99d <get_rsrv_size+0x5d>
    a95c:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a962:	85 c0                	test   %eax,%eax
    a964:	74 37                	je     a99d <get_rsrv_size+0x5d>
    a966:	31 d2                	xor    %edx,%edx
    a968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a96f:	00 
    a970:	89 d0                	mov    %edx,%eax
    a972:	48 83 c0 0a          	add    $0xa,%rax
    a976:	48 c1 e0 05          	shl    $0x5,%rax
    a97a:	48 01 c8             	add    %rcx,%rax
    a97d:	0f b7 30             	movzwl (%rax),%esi
    a980:	66 83 fe 16          	cmp    $0x16,%si
    a984:	75 0a                	jne    a990 <get_rsrv_size+0x50>
    a986:	8b 40 04             	mov    0x4(%rax),%eax
    a989:	48 c1 e0 0c          	shl    $0xc,%rax
    a98d:	49 01 c0             	add    %rax,%r8
    a990:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a996:	83 c2 01             	add    $0x1,%edx
    a999:	39 d0                	cmp    %edx,%eax
    a99b:	77 d3                	ja     a970 <get_rsrv_size+0x30>
    a99d:	4c 89 c0             	mov    %r8,%rax
    a9a0:	c3                   	ret    
    a9a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a9a8:	00 00 00 
    a9ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a9b0 <get_rsrv_min_size>:
    a9b0:	f3 0f 1e fa          	endbr64 
    a9b4:	48 8d 0d 05 90 01 00 	lea    0x19005(%rip),%rcx        # 239c0 <g_global_data>
    a9bb:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a9c1:	85 c0                	test   %eax,%eax
    a9c3:	74 3b                	je     aa00 <get_rsrv_min_size+0x50>
    a9c5:	31 d2                	xor    %edx,%edx
    a9c7:	eb 14                	jmp    a9dd <get_rsrv_min_size+0x2d>
    a9c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a9d0:	8b 81 38 01 00 00    	mov    0x138(%rcx),%eax
    a9d6:	83 c2 01             	add    $0x1,%edx
    a9d9:	39 d0                	cmp    %edx,%eax
    a9db:	76 23                	jbe    aa00 <get_rsrv_min_size+0x50>
    a9dd:	89 d0                	mov    %edx,%eax
    a9df:	48 83 c0 0a          	add    $0xa,%rax
    a9e3:	48 c1 e0 05          	shl    $0x5,%rax
    a9e7:	48 01 c8             	add    %rcx,%rax
    a9ea:	0f b7 30             	movzwl (%rax),%esi
    a9ed:	66 83 fe 14          	cmp    $0x14,%si
    a9f1:	75 dd                	jne    a9d0 <get_rsrv_min_size+0x20>
    a9f3:	8b 40 04             	mov    0x4(%rax),%eax
    a9f6:	48 c1 e0 0c          	shl    $0xc,%rax
    a9fa:	c3                   	ret    
    a9fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    aa00:	31 c0                	xor    %eax,%eax
    aa02:	c3                   	ret    
    aa03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa0a:	00 00 00 
    aa0d:	0f 1f 00             	nopl   (%rax)

000000000000aa10 <get_errno_addr>:
    aa10:	f3 0f 1e fa          	endbr64 
    aa14:	48 83 ec 08          	sub    $0x8,%rsp
    aa18:	e8 60 68 01 00       	call   2127d <get_thread_data>
    aa1d:	48 83 c4 08          	add    $0x8,%rsp
    aa21:	48 83 c0 40          	add    $0x40,%rax
    aa25:	c3                   	ret    
    aa26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa2d:	00 00 00 

000000000000aa30 <feature_supported>:
    aa30:	f3 0f 1e fa          	endbr64 
    aa34:	48 85 ff             	test   %rdi,%rdi
    aa37:	74 37                	je     aa70 <feature_supported+0x40>
    aa39:	31 d2                	xor    %edx,%edx
    aa3b:	eb 08                	jmp    aa45 <feature_supported+0x15>
    aa3d:	0f 1f 00             	nopl   (%rax)
    aa40:	48 85 c0             	test   %rax,%rax
    aa43:	78 2b                	js     aa70 <feature_supported+0x40>
    aa45:	89 d0                	mov    %edx,%eax
    aa47:	83 c2 01             	add    $0x1,%edx
    aa4a:	41 89 d1             	mov    %edx,%r9d
    aa4d:	49 89 c0             	mov    %rax,%r8
    aa50:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    aa54:	41 c1 e1 06          	shl    $0x6,%r9d
    aa58:	44 39 ce             	cmp    %r9d,%esi
    aa5b:	73 e3                	jae    aa40 <feature_supported+0x10>
    aa5d:	41 c1 e0 06          	shl    $0x6,%r8d
    aa61:	44 29 c6             	sub    %r8d,%esi
    aa64:	89 f1                	mov    %esi,%ecx
    aa66:	48 d3 e8             	shr    %cl,%rax
    aa69:	83 e0 01             	and    $0x1,%eax
    aa6c:	c3                   	ret    
    aa6d:	0f 1f 00             	nopl   (%rax)
    aa70:	31 c0                	xor    %eax,%eax
    aa72:	c3                   	ret    
    aa73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aa7a:	00 00 00 
    aa7d:	0f 1f 00             	nopl   (%rax)

000000000000aa80 <is_stack_addr>:
    aa80:	f3 0f 1e fa          	endbr64 
    aa84:	55                   	push   %rbp
    aa85:	48 89 f5             	mov    %rsi,%rbp
    aa88:	53                   	push   %rbx
    aa89:	48 89 fb             	mov    %rdi,%rbx
    aa8c:	48 83 ec 08          	sub    $0x8,%rsp
    aa90:	e8 e8 67 01 00       	call   2127d <get_thread_data>
    aa95:	31 c9                	xor    %ecx,%ecx
    aa97:	48 01 dd             	add    %rbx,%rbp
    aa9a:	48 89 c2             	mov    %rax,%rdx
    aa9d:	0f 92 c1             	setb   %cl
    aaa0:	48 3b 68 10          	cmp    0x10(%rax),%rbp
    aaa4:	0f 96 c0             	setbe  %al
    aaa7:	48 39 5a 18          	cmp    %rbx,0x18(%rdx)
    aaab:	0f 96 c2             	setbe  %dl
    aaae:	21 d0                	and    %edx,%eax
    aab0:	48 85 c9             	test   %rcx,%rcx
    aab3:	0f 94 c2             	sete   %dl
    aab6:	48 83 c4 08          	add    $0x8,%rsp
    aaba:	21 d0                	and    %edx,%eax
    aabc:	5b                   	pop    %rbx
    aabd:	5d                   	pop    %rbp
    aabe:	c3                   	ret    
    aabf:	90                   	nop

000000000000aac0 <is_valid_sp>:
    aac0:	f3 0f 1e fa          	endbr64 
    aac4:	40 f6 c7 07          	test   $0x7,%dil
    aac8:	74 06                	je     aad0 <is_valid_sp+0x10>
    aaca:	31 c0                	xor    %eax,%eax
    aacc:	c3                   	ret    
    aacd:	0f 1f 00             	nopl   (%rax)
    aad0:	53                   	push   %rbx
    aad1:	48 89 fb             	mov    %rdi,%rbx
    aad4:	e8 a4 67 01 00       	call   2127d <get_thread_data>
    aad9:	48 89 c2             	mov    %rax,%rdx
    aadc:	48 3b 58 10          	cmp    0x10(%rax),%rbx
    aae0:	0f 96 c0             	setbe  %al
    aae3:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    aae7:	5b                   	pop    %rbx
    aae8:	0f 93 c2             	setae  %dl
    aaeb:	21 d0                	and    %edx,%eax
    aaed:	c3                   	ret    
    aaee:	66 90                	xchg   %ax,%ax

000000000000aaf0 <is_utility_thread>:
    aaf0:	f3 0f 1e fa          	endbr64 
    aaf4:	48 83 ec 08          	sub    $0x8,%rsp
    aaf8:	e8 80 67 01 00       	call   2127d <get_thread_data>
    aafd:	45 31 c0             	xor    %r8d,%r8d
    ab00:	48 85 c0             	test   %rax,%rax
    ab03:	74 08                	je     ab0d <is_utility_thread+0x1d>
    ab05:	4c 8b 40 30          	mov    0x30(%rax),%r8
    ab09:	41 83 e0 01          	and    $0x1,%r8d
    ab0d:	44 89 c0             	mov    %r8d,%eax
    ab10:	48 83 c4 08          	add    $0x8,%rsp
    ab14:	c3                   	ret    
    ab15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ab1c:	00 00 00 
    ab1f:	90                   	nop

000000000000ab20 <is_pkru_enabled>:
    ab20:	f3 0f 1e fa          	endbr64 
    ab24:	48 83 ec 08          	sub    $0x8,%rsp
    ab28:	e8 73 04 00 00       	call   afa0 <get_xfeature_state>
    ab2d:	48 83 c4 08          	add    $0x8,%rsp
    ab31:	48 c1 e8 09          	shr    $0x9,%rax
    ab35:	83 e0 01             	and    $0x1,%eax
    ab38:	c3                   	ret    
    ab39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ab40 <internal_handle_exception>:
    ab40:	f3 0f 1e fa          	endbr64 
    ab44:	55                   	push   %rbp
    ab45:	48 89 e5             	mov    %rsp,%rbp
    ab48:	41 56                	push   %r14
    ab4a:	41 55                	push   %r13
    ab4c:	41 54                	push   %r12
    ab4e:	49 89 fc             	mov    %rdi,%r12
    ab51:	53                   	push   %rbx
    ab52:	48 83 ec 10          	sub    $0x10,%rsp
    ab56:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ab5d:	00 00 
    ab5f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ab63:	31 c0                	xor    %eax,%eax
    ab65:	e8 13 67 01 00       	call   2127d <get_thread_data>
    ab6a:	49 89 c5             	mov    %rax,%r13
    ab6d:	48 8b 40 60          	mov    0x60(%rax),%rax
    ab71:	48 85 c0             	test   %rax,%rax
    ab74:	0f 88 d6 00 00 00    	js     ac50 <internal_handle_exception+0x110>
    ab7a:	48 83 c0 01          	add    $0x1,%rax
    ab7e:	48 8d 3d ab 17 02 00 	lea    0x217ab(%rip),%rdi        # 2c330 <_ZL14g_handler_lock>
    ab85:	49 89 45 60          	mov    %rax,0x60(%r13)
    ab89:	e8 32 10 00 00       	call   bbc0 <sgx_spin_lock>
    ab8e:	48 8b 05 a3 17 02 00 	mov    0x217a3(%rip),%rax        # 2c338 <_ZL12g_first_node>
    ab95:	48 85 c0             	test   %rax,%rax
    ab98:	0f 84 df 00 00 00    	je     ac7d <internal_handle_exception+0x13d>
    ab9e:	45 31 f6             	xor    %r14d,%r14d
    aba1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aba8:	48 8b 40 08          	mov    0x8(%rax),%rax
    abac:	49 83 c6 08          	add    $0x8,%r14
    abb0:	48 85 c0             	test   %rax,%rax
    abb3:	75 f3                	jne    aba8 <internal_handle_exception+0x68>
    abb5:	4d 85 f6             	test   %r14,%r14
    abb8:	0f 84 bf 00 00 00    	je     ac7d <internal_handle_exception+0x13d>
    abbe:	4c 89 f7             	mov    %r14,%rdi
    abc1:	e8 fa 0d 00 00       	call   b9c0 <alloca>
    abc6:	48 89 c3             	mov    %rax,%rbx
    abc9:	48 85 c0             	test   %rax,%rax
    abcc:	0f 84 cf 00 00 00    	je     aca1 <internal_handle_exception+0x161>
    abd2:	48 8b 05 5f 17 02 00 	mov    0x2175f(%rip),%rax        # 2c338 <_ZL12g_first_node>
    abd9:	48 85 c0             	test   %rax,%rax
    abdc:	74 1e                	je     abfc <internal_handle_exception+0xbc>
    abde:	48 89 da             	mov    %rbx,%rdx
    abe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    abe8:	48 8b 08             	mov    (%rax),%rcx
    abeb:	48 8b 40 08          	mov    0x8(%rax),%rax
    abef:	48 83 c2 08          	add    $0x8,%rdx
    abf3:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
    abf7:	48 85 c0             	test   %rax,%rax
    abfa:	75 ec                	jne    abe8 <internal_handle_exception+0xa8>
    abfc:	48 8d 3d 2d 17 02 00 	lea    0x2172d(%rip),%rdi        # 2c330 <_ZL14g_handler_lock>
    ac03:	e8 28 10 00 00       	call   bc30 <sgx_spin_unlock>
    ac08:	49 83 6d 60 01       	subq   $0x1,0x60(%r13)
    ac0d:	4d 85 f6             	test   %r14,%r14
    ac10:	74 4b                	je     ac5d <internal_handle_exception+0x11d>
    ac12:	49 01 de             	add    %rbx,%r14
    ac15:	eb 12                	jmp    ac29 <internal_handle_exception+0xe9>
    ac17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ac1e:	00 00 
    ac20:	48 83 c3 08          	add    $0x8,%rbx
    ac24:	4c 39 f3             	cmp    %r14,%rbx
    ac27:	74 34                	je     ac5d <internal_handle_exception+0x11d>
    ac29:	48 8b 03             	mov    (%rbx),%rax
    ac2c:	4c 89 e7             	mov    %r12,%rdi
    ac2f:	48 33 05 f2 16 02 00 	xor    0x216f2(%rip),%rax        # 2c328 <_ZL12g_veh_cookie>
    ac36:	ff d0                	call   *%rax
    ac38:	83 f8 ff             	cmp    $0xffffffff,%eax
    ac3b:	75 e3                	jne    ac20 <internal_handle_exception+0xe0>
    ac3d:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    ac42:	e8 79 fe ff ff       	call   aac0 <is_valid_sp>
    ac47:	84 c0                	test   %al,%al
    ac49:	75 28                	jne    ac73 <internal_handle_exception+0x133>
    ac4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ac50:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    ac57:	ff 
    ac58:	e8 a7 69 01 00       	call   21604 <abort>
    ac5d:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    ac62:	e8 59 fe ff ff       	call   aac0 <is_valid_sp>
    ac67:	84 c0                	test   %al,%al
    ac69:	74 e5                	je     ac50 <internal_handle_exception+0x110>
    ac6b:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    ac72:	ff 
    ac73:	4c 89 e7             	mov    %r12,%rdi
    ac76:	e8 9c 69 01 00       	call   21617 <continue_execution>
    ac7b:	eb d3                	jmp    ac50 <internal_handle_exception+0x110>
    ac7d:	48 8d 3d ac 16 02 00 	lea    0x216ac(%rip),%rdi        # 2c330 <_ZL14g_handler_lock>
    ac84:	45 31 f6             	xor    %r14d,%r14d
    ac87:	e8 a4 0f 00 00       	call   bc30 <sgx_spin_unlock>
    ac8c:	49 c7 45 60 ff ff ff 	movq   $0xffffffffffffffff,0x60(%r13)
    ac93:	ff 
    ac94:	4c 89 e7             	mov    %r12,%rdi
    ac97:	e8 7b 69 01 00       	call   21617 <continue_execution>
    ac9c:	e9 1d ff ff ff       	jmp    abbe <internal_handle_exception+0x7e>
    aca1:	48 8d 3d 88 16 02 00 	lea    0x21688(%rip),%rdi        # 2c330 <_ZL14g_handler_lock>
    aca8:	e8 83 0f 00 00       	call   bc30 <sgx_spin_unlock>
    acad:	eb a1                	jmp    ac50 <internal_handle_exception+0x110>
    acaf:	90                   	nop

000000000000acb0 <trts_handle_exception>:
    acb0:	f3 0f 1e fa          	endbr64 
    acb4:	41 55                	push   %r13
    acb6:	41 54                	push   %r12
    acb8:	55                   	push   %rbp
    acb9:	53                   	push   %rbx
    acba:	48 89 fb             	mov    %rdi,%rbx
    acbd:	48 83 ec 08          	sub    $0x8,%rsp
    acc1:	e8 b7 65 01 00       	call   2127d <get_thread_data>
    acc6:	48 85 c0             	test   %rax,%rax
    acc9:	0f 84 21 01 00 00    	je     adf0 <trts_handle_exception+0x140>
    accf:	48 85 db             	test   %rbx,%rbx
    acd2:	0f 84 18 01 00 00    	je     adf0 <trts_handle_exception+0x140>
    acd8:	48 89 df             	mov    %rbx,%rdi
    acdb:	48 89 c5             	mov    %rax,%rbp
    acde:	e8 8d e3 ff ff       	call   9070 <check_static_stack_canary>
    ace3:	85 c0                	test   %eax,%eax
    ace5:	0f 85 05 01 00 00    	jne    adf0 <trts_handle_exception+0x140>
    aceb:	e8 4e 65 01 00       	call   2123e <get_enclave_state>
    acf0:	83 f8 02             	cmp    $0x2,%eax
    acf3:	0f 85 f7 00 00 00    	jne    adf0 <trts_handle_exception+0x140>
    acf9:	48 83 7d 60 ff       	cmpq   $0xffffffffffffffff,0x60(%rbp)
    acfe:	0f 84 ec 00 00 00    	je     adf0 <trts_handle_exception+0x140>
    ad04:	48 8b 45 10          	mov    0x10(%rbp),%rax
    ad08:	48 05 b0 02 01 00    	add    $0x102b0,%rax
    ad0e:	48 39 c3             	cmp    %rax,%rbx
    ad11:	0f 85 d9 00 00 00    	jne    adf0 <trts_handle_exception+0x140>
    ad17:	4c 8b 65 20          	mov    0x20(%rbp),%r12
    ad1b:	4c 89 e0             	mov    %r12,%rax
    ad1e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    ad24:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    ad2a:	48 39 c3             	cmp    %rax,%rbx
    ad2d:	0f 85 bd 00 00 00    	jne    adf0 <trts_handle_exception+0x140>
    ad33:	4d 8b ac 24 90 00 00 	mov    0x90(%r12),%r13
    ad3a:	00 
    ad3b:	be 08 00 00 00       	mov    $0x8,%esi
    ad40:	4c 89 ef             	mov    %r13,%rdi
    ad43:	e8 58 e0 ff ff       	call   8da0 <sgx_is_outside_enclave>
    ad48:	85 c0                	test   %eax,%eax
    ad4a:	0f 84 c0 00 00 00    	je     ae10 <trts_handle_exception+0x160>
    ad50:	49 8b 5c 24 20       	mov    0x20(%r12),%rbx
    ad55:	49 39 dd             	cmp    %rbx,%r13
    ad58:	0f 84 b2 00 00 00    	je     ae10 <trts_handle_exception+0x160>
    ad5e:	31 f6                	xor    %esi,%esi
    ad60:	48 89 df             	mov    %rbx,%rdi
    ad63:	e8 18 fd ff ff       	call   aa80 <is_stack_addr>
    ad68:	84 c0                	test   %al,%al
    ad6a:	0f 84 a0 00 00 00    	je     ae10 <trts_handle_exception+0x160>
    ad70:	48 81 eb 18 01 00 00 	sub    $0x118,%rbx
    ad77:	be 18 01 00 00       	mov    $0x118,%esi
    ad7c:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    ad80:	48 89 df             	mov    %rbx,%rdi
    ad83:	e8 f8 fc ff ff       	call   aa80 <is_stack_addr>
    ad88:	84 c0                	test   %al,%al
    ad8a:	0f 84 80 00 00 00    	je     ae10 <trts_handle_exception+0x160>
    ad90:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
    ad94:	be 08 00 00 00       	mov    $0x8,%esi
    ad99:	4c 89 ef             	mov    %r13,%rdi
    ad9c:	e8 df fc ff ff       	call   aa80 <is_stack_addr>
    ada1:	84 c0                	test   %al,%al
    ada3:	74 6b                	je     ae10 <trts_handle_exception+0x160>
    ada5:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
    adac:	4c 39 ef             	cmp    %r13,%rdi
    adaf:	76 73                	jbe    ae24 <trts_handle_exception+0x174>
    adb1:	48 8d 9f ff 0f 00 00 	lea    0xfff(%rdi),%rbx
    adb8:	4c 29 eb             	sub    %r13,%rbx
    adbb:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    adc2:	48 39 df             	cmp    %rbx,%rdi
    adc5:	76 49                	jbe    ae10 <trts_handle_exception+0x160>
    adc7:	48 29 df             	sub    %rbx,%rdi
    adca:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    adce:	72 40                	jb     ae10 <trts_handle_exception+0x160>
    add0:	48 89 de             	mov    %rbx,%rsi
    add3:	48 c1 ee 0c          	shr    $0xc,%rsi
    add7:	74 37                	je     ae10 <trts_handle_exception+0x160>
    add9:	e8 92 e9 ff ff       	call   9770 <apply_pages_within_exception>
    adde:	85 c0                	test   %eax,%eax
    ade0:	75 2e                	jne    ae10 <trts_handle_exception+0x160>
    ade2:	48 29 9d 98 00 00 00 	sub    %rbx,0x98(%rbp)
    ade9:	eb 17                	jmp    ae02 <trts_handle_exception+0x152>
    adeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    adf0:	48 8d 05 e9 14 02 00 	lea    0x214e9(%rip),%rax        # 2c2e0 <g_enclave_state>
    adf7:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    adfd:	b8 06 10 00 00       	mov    $0x1006,%eax
    ae02:	48 83 c4 08          	add    $0x8,%rsp
    ae06:	5b                   	pop    %rbx
    ae07:	5d                   	pop    %rbp
    ae08:	41 5c                	pop    %r12
    ae0a:	41 5d                	pop    %r13
    ae0c:	c3                   	ret    
    ae0d:	0f 1f 00             	nopl   (%rax)
    ae10:	48 8d 05 c9 14 02 00 	lea    0x214c9(%rip),%rax        # 2c2e0 <g_enclave_state>
    ae17:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    ae1d:	b8 09 10 00 00       	mov    $0x1009,%eax
    ae22:	eb de                	jmp    ae02 <trts_handle_exception+0x152>
    ae24:	49 8b 84 24 88 00 00 	mov    0x88(%r12),%rax
    ae2b:	00 
    ae2c:	48 3b 05 b5 11 02 00 	cmp    0x211b5(%rip),%rax        # 2bfe8 <_DYNAMIC+0x170>
    ae33:	0f 84 0e 01 00 00    	je     af47 <trts_handle_exception+0x297>
    ae39:	48 3b 05 a0 11 02 00 	cmp    0x211a0(%rip),%rax        # 2bfe0 <_DYNAMIC+0x168>
    ae40:	0f 84 28 01 00 00    	je     af6e <trts_handle_exception+0x2be>
    ae46:	41 80 bc 24 a3 00 00 	cmpb   $0x0,0xa3(%r12)
    ae4d:	00 00 
    ae4f:	79 9f                	jns    adf0 <trts_handle_exception+0x140>
    ae51:	41 0f b6 94 24 a0 00 	movzbl 0xa0(%r12),%edx
    ae58:	00 00 
    ae5a:	48 8d 0d df fc ff ff 	lea    -0x321(%rip),%rcx        # ab40 <internal_handle_exception>
    ae61:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
    ae67:	41 0f b6 94 24 a1 00 	movzbl 0xa1(%r12),%edx
    ae6e:	00 00 
    ae70:	83 e2 07             	and    $0x7,%edx
    ae73:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    ae79:	49 8b 14 24          	mov    (%r12),%rdx
    ae7d:	48 89 13             	mov    %rdx,(%rbx)
    ae80:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    ae85:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ae89:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    ae8e:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    ae92:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
    ae97:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    ae9b:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
    aea0:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    aea4:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    aea9:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    aead:	49 8b 54 24 30       	mov    0x30(%r12),%rdx
    aeb2:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    aeb6:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
    aebb:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    aebf:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
    aec6:	00 
    aec7:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    aece:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    aed5:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
    aeda:	48 89 53 40          	mov    %rdx,0x40(%rbx)
    aede:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
    aee3:	48 89 53 48          	mov    %rdx,0x48(%rbx)
    aee7:	49 8b 54 24 50       	mov    0x50(%r12),%rdx
    aeec:	48 89 53 50          	mov    %rdx,0x50(%rbx)
    aef0:	49 8b 54 24 58       	mov    0x58(%r12),%rdx
    aef5:	48 89 53 58          	mov    %rdx,0x58(%rbx)
    aef9:	49 8b 54 24 60       	mov    0x60(%r12),%rdx
    aefe:	48 89 53 60          	mov    %rdx,0x60(%rbx)
    af02:	49 8b 54 24 68       	mov    0x68(%r12),%rdx
    af07:	48 89 53 68          	mov    %rdx,0x68(%rbx)
    af0b:	49 8b 54 24 70       	mov    0x70(%r12),%rdx
    af10:	48 89 53 70          	mov    %rdx,0x70(%rbx)
    af14:	49 8b 54 24 78       	mov    0x78(%r12),%rdx
    af19:	48 89 53 78          	mov    %rdx,0x78(%rbx)
    af1d:	49 89 8c 24 88 00 00 	mov    %rcx,0x88(%r12)
    af24:	00 
    af25:	4d 89 6c 24 20       	mov    %r13,0x20(%r12)
    af2a:	49 89 1c 24          	mov    %rbx,(%r12)
    af2e:	49 89 5c 24 38       	mov    %rbx,0x38(%r12)
    af33:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    af37:	31 c0                	xor    %eax,%eax
    af39:	41 80 a4 24 a3 00 00 	andb   $0x7f,0xa3(%r12)
    af40:	00 7f 
    af42:	e9 bb fe ff ff       	jmp    ae02 <trts_handle_exception+0x152>
    af47:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
    af4c:	0f 85 e7 fe ff ff    	jne    ae39 <trts_handle_exception+0x189>
    af52:	49 83 8c 24 80 00 00 	orq    $0x1,0x80(%r12)
    af59:	00 01 
    af5b:	48 83 c0 03          	add    $0x3,%rax
    af5f:	49 89 84 24 88 00 00 	mov    %rax,0x88(%r12)
    af66:	00 
    af67:	31 c0                	xor    %eax,%eax
    af69:	e9 94 fe ff ff       	jmp    ae02 <trts_handle_exception+0x152>
    af6e:	49 83 3c 24 08       	cmpq   $0x8,(%r12)
    af73:	0f 85 cd fe ff ff    	jne    ae46 <trts_handle_exception+0x196>
    af79:	48 83 c0 03          	add    $0x3,%rax
    af7d:	49 c7 04 24 01 00 00 	movq   $0x1,(%r12)
    af84:	00 
    af85:	49 89 84 24 88 00 00 	mov    %rax,0x88(%r12)
    af8c:	00 
    af8d:	31 c0                	xor    %eax,%eax
    af8f:	49 83 8c 24 80 00 00 	orq    $0x40,0x80(%r12)
    af96:	00 40 
    af98:	e9 65 fe ff ff       	jmp    ae02 <trts_handle_exception+0x152>
    af9d:	0f 1f 00             	nopl   (%rax)

000000000000afa0 <get_xfeature_state>:
    afa0:	f3 0f 1e fa          	endbr64 
    afa4:	48 83 ec 08          	sub    $0x8,%rsp
    afa8:	e8 c3 5b 01 00       	call   20b70 <sgx_self_report>
    afad:	31 d2                	xor    %edx,%edx
    afaf:	48 8b 40 38          	mov    0x38(%rax),%rax
    afb3:	48 83 f8 03          	cmp    $0x3,%rax
    afb7:	0f 95 c2             	setne  %dl
    afba:	89 15 24 13 02 00    	mov    %edx,0x21324(%rip)        # 2c2e4 <g_xsave_enabled>
    afc0:	48 83 c4 08          	add    $0x8,%rsp
    afc4:	c3                   	ret    
    afc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    afcc:	00 00 00 
    afcf:	90                   	nop

000000000000afd0 <do_relocs>:
    afd0:	48 01 fe             	add    %rdi,%rsi
    afd3:	48 01 fa             	add    %rdi,%rdx
    afd6:	48 85 c9             	test   %rcx,%rcx
    afd9:	0f 84 b8 01 00 00    	je     b197 <do_relocs+0x1c7>
    afdf:	55                   	push   %rbp
    afe0:	45 31 c9             	xor    %r9d,%r9d
    afe3:	4c 8d 15 5a 78 01 00 	lea    0x1785a(%rip),%r10        # 22844 <_ZZ17ecall_malloc_freeE8__func__+0x14>
    afea:	53                   	push   %rbx
    afeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    aff0:	4c 8b 1e             	mov    (%rsi),%r11
    aff3:	48 8b 46 08          	mov    0x8(%rsi),%rax
    aff7:	49 01 fb             	add    %rdi,%r11
    affa:	41 89 c0             	mov    %eax,%r8d
    affd:	83 f8 12             	cmp    $0x12,%eax
    b000:	77 42                	ja     b044 <do_relocs+0x74>
    b002:	4f 63 04 82          	movslq (%r10,%r8,4),%r8
    b006:	4d 01 d0             	add    %r10,%r8
    b009:	3e 41 ff e0          	notrack jmp *%r8
    b00d:	0f 1f 00             	nopl   (%rax)
    b010:	48 c1 e8 20          	shr    $0x20,%rax
    b014:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    b018:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    b01c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    b021:	c0 e8 04             	shr    $0x4,%al
    b024:	3c 02                	cmp    $0x2,%al
    b026:	0f 84 c4 00 00 00    	je     b0f0 <do_relocs+0x120>
    b02c:	4d 85 c0             	test   %r8,%r8
    b02f:	74 4f                	je     b080 <do_relocs+0xb0>
    b031:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b037:	75 0b                	jne    b044 <do_relocs+0x74>
    b039:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b03e:	0f 84 dc 00 00 00    	je     b120 <do_relocs+0x150>
    b044:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b049:	5b                   	pop    %rbx
    b04a:	5d                   	pop    %rbp
    b04b:	c3                   	ret    
    b04c:	0f 1f 40 00          	nopl   0x0(%rax)
    b050:	48 c1 e8 20          	shr    $0x20,%rax
    b054:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    b058:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    b05c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    b061:	c0 e8 04             	shr    $0x4,%al
    b064:	3c 02                	cmp    $0x2,%al
    b066:	0f 84 94 00 00 00    	je     b100 <do_relocs+0x130>
    b06c:	4d 85 c0             	test   %r8,%r8
    b06f:	74 0f                	je     b080 <do_relocs+0xb0>
    b071:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b075:	48 01 f8             	add    %rdi,%rax
    b078:	49 03 40 08          	add    0x8(%r8),%rax
    b07c:	49 89 03             	mov    %rax,(%r11)
    b07f:	90                   	nop
    b080:	49 83 c1 01          	add    $0x1,%r9
    b084:	48 83 c6 18          	add    $0x18,%rsi
    b088:	4c 39 c9             	cmp    %r9,%rcx
    b08b:	0f 85 5f ff ff ff    	jne    aff0 <do_relocs+0x20>
    b091:	31 c0                	xor    %eax,%eax
    b093:	5b                   	pop    %rbx
    b094:	5d                   	pop    %rbp
    b095:	c3                   	ret    
    b096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b09d:	00 00 00 
    b0a0:	48 c1 e8 20          	shr    $0x20,%rax
    b0a4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    b0a8:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    b0ac:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    b0b1:	c0 e8 04             	shr    $0x4,%al
    b0b4:	3c 02                	cmp    $0x2,%al
    b0b6:	74 58                	je     b110 <do_relocs+0x140>
    b0b8:	4d 85 c0             	test   %r8,%r8
    b0bb:	74 c3                	je     b080 <do_relocs+0xb0>
    b0bd:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b0c1:	49 03 40 08          	add    0x8(%r8),%rax
    b0c5:	49 89 03             	mov    %rax,(%r11)
    b0c8:	eb b6                	jmp    b080 <do_relocs+0xb0>
    b0ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b0d0:	49 c7 03 01 00 00 00 	movq   $0x1,(%r11)
    b0d7:	eb a7                	jmp    b080 <do_relocs+0xb0>
    b0d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b0e0:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b0e4:	48 01 f8             	add    %rdi,%rax
    b0e7:	49 89 03             	mov    %rax,(%r11)
    b0ea:	eb 94                	jmp    b080 <do_relocs+0xb0>
    b0ec:	0f 1f 40 00          	nopl   0x0(%rax)
    b0f0:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    b0f5:	0f 85 31 ff ff ff    	jne    b02c <do_relocs+0x5c>
    b0fb:	eb 83                	jmp    b080 <do_relocs+0xb0>
    b0fd:	0f 1f 00             	nopl   (%rax)
    b100:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    b105:	0f 85 61 ff ff ff    	jne    b06c <do_relocs+0x9c>
    b10b:	e9 70 ff ff ff       	jmp    b080 <do_relocs+0xb0>
    b110:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    b115:	75 a1                	jne    b0b8 <do_relocs+0xe8>
    b117:	e9 64 ff ff ff       	jmp    b080 <do_relocs+0xb0>
    b11c:	0f 1f 40 00          	nopl   0x0(%rax)
    b120:	48 89 f8             	mov    %rdi,%rax
    b123:	48 03 47 20          	add    0x20(%rdi),%rax
    b127:	0f 84 17 ff ff ff    	je     b044 <do_relocs+0x74>
    b12d:	0f b7 5f 38          	movzwl 0x38(%rdi),%ebx
    b131:	85 db                	test   %ebx,%ebx
    b133:	0f 84 0b ff ff ff    	je     b044 <do_relocs+0x74>
    b139:	8d 6b ff             	lea    -0x1(%rbx),%ebp
    b13c:	48 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%rbx
    b143:	00 
    b144:	48 29 eb             	sub    %rbp,%rbx
    b147:	48 8d 5c d8 38       	lea    0x38(%rax,%rbx,8),%rbx
    b14c:	eb 0f                	jmp    b15d <do_relocs+0x18d>
    b14e:	66 90                	xchg   %ax,%ax
    b150:	48 83 c0 38          	add    $0x38,%rax
    b154:	48 39 c3             	cmp    %rax,%rbx
    b157:	0f 84 e7 fe ff ff    	je     b044 <do_relocs+0x74>
    b15d:	83 38 07             	cmpl   $0x7,(%rax)
    b160:	75 ee                	jne    b150 <do_relocs+0x180>
    b162:	48 8b 58 28          	mov    0x28(%rax),%rbx
    b166:	48 8b 40 30          	mov    0x30(%rax),%rax
    b16a:	48 83 f8 01          	cmp    $0x1,%rax
    b16e:	76 0b                	jbe    b17b <do_relocs+0x1ab>
    b170:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
    b175:	48 f7 d8             	neg    %rax
    b178:	48 21 c3             	and    %rax,%rbx
    b17b:	48 85 db             	test   %rbx,%rbx
    b17e:	0f 84 c0 fe ff ff    	je     b044 <do_relocs+0x74>
    b184:	48 8b 46 10          	mov    0x10(%rsi),%rax
    b188:	49 03 40 08          	add    0x8(%r8),%rax
    b18c:	48 29 d8             	sub    %rbx,%rax
    b18f:	49 89 03             	mov    %rax,(%r11)
    b192:	e9 e9 fe ff ff       	jmp    b080 <do_relocs+0xb0>
    b197:	31 c0                	xor    %eax,%eax
    b199:	c3                   	ret    
    b19a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b1a0 <relocate_enclave>:
    b1a0:	f3 0f 1e fa          	endbr64 
    b1a4:	48 85 ff             	test   %rdi,%rdi
    b1a7:	0f 84 9b 01 00 00    	je     b348 <relocate_enclave+0x1a8>
    b1ad:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b1b3:	0f 85 8f 01 00 00    	jne    b348 <relocate_enclave+0x1a8>
    b1b9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b1be:	0f 85 84 01 00 00    	jne    b348 <relocate_enclave+0x1a8>
    b1c4:	41 57                	push   %r15
    b1c6:	41 56                	push   %r14
    b1c8:	41 55                	push   %r13
    b1ca:	41 54                	push   %r12
    b1cc:	55                   	push   %rbp
    b1cd:	53                   	push   %rbx
    b1ce:	48 89 fb             	mov    %rdi,%rbx
    b1d1:	48 83 ec 08          	sub    $0x8,%rsp
    b1d5:	48 03 5f 20          	add    0x20(%rdi),%rbx
    b1d9:	0f 84 e5 00 00 00    	je     b2c4 <relocate_enclave+0x124>
    b1df:	31 ed                	xor    %ebp,%ebp
    b1e1:	66 83 7f 38 00       	cmpw   $0x0,0x38(%rdi)
    b1e6:	4c 8d 25 a3 76 01 00 	lea    0x176a3(%rip),%r12        # 22890 <_ZZ17ecall_malloc_freeE8__func__+0x60>
    b1ed:	75 1c                	jne    b20b <relocate_enclave+0x6b>
    b1ef:	e9 7c 01 00 00       	jmp    b370 <relocate_enclave+0x1d0>
    b1f4:	0f 1f 40 00          	nopl   0x0(%rax)
    b1f8:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    b1fc:	83 c5 01             	add    $0x1,%ebp
    b1ff:	48 83 c3 38          	add    $0x38,%rbx
    b203:	39 e8                	cmp    %ebp,%eax
    b205:	0f 86 65 01 00 00    	jbe    b370 <relocate_enclave+0x1d0>
    b20b:	83 3b 02             	cmpl   $0x2,(%rbx)
    b20e:	75 e8                	jne    b1f8 <relocate_enclave+0x58>
    b210:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    b214:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    b218:	48 01 fe             	add    %rdi,%rsi
    b21b:	49 c1 eb 04          	shr    $0x4,%r11
    b21f:	74 d7                	je     b1f8 <relocate_enclave+0x58>
    b221:	49 c1 e3 04          	shl    $0x4,%r11
    b225:	45 31 f6             	xor    %r14d,%r14d
    b228:	45 31 ed             	xor    %r13d,%r13d
    b22b:	31 c0                	xor    %eax,%eax
    b22d:	49 01 f3             	add    %rsi,%r11
    b230:	45 31 ff             	xor    %r15d,%r15d
    b233:	45 31 d2             	xor    %r10d,%r10d
    b236:	45 31 c9             	xor    %r9d,%r9d
    b239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b240:	4c 8b 06             	mov    (%rsi),%r8
    b243:	4d 85 c0             	test   %r8,%r8
    b246:	74 28                	je     b270 <relocate_enclave+0xd0>
    b248:	49 83 f8 17          	cmp    $0x17,%r8
    b24c:	77 0f                	ja     b25d <relocate_enclave+0xbd>
    b24e:	4f 63 04 84          	movslq (%r12,%r8,4),%r8
    b252:	4d 01 e0             	add    %r12,%r8
    b255:	3e 41 ff e0          	notrack jmp *%r8
    b259:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    b25d:	48 83 c6 10          	add    $0x10,%rsi
    b261:	49 39 f3             	cmp    %rsi,%r11
    b264:	75 da                	jne    b240 <relocate_enclave+0xa0>
    b266:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b26d:	00 00 00 
    b270:	4d 85 d2             	test   %r10,%r10
    b273:	0f 84 d7 00 00 00    	je     b350 <relocate_enclave+0x1b0>
    b279:	4d 85 ed             	test   %r13,%r13
    b27c:	74 46                	je     b2c4 <relocate_enclave+0x124>
    b27e:	31 d2                	xor    %edx,%edx
    b280:	4c 89 d6             	mov    %r10,%rsi
    b283:	4c 89 0c 24          	mov    %r9,(%rsp)
    b287:	49 f7 f5             	div    %r13
    b28a:	4c 89 ca             	mov    %r9,%rdx
    b28d:	48 89 c1             	mov    %rax,%rcx
    b290:	e8 3b fd ff ff       	call   afd0 <do_relocs>
    b295:	4c 8b 0c 24          	mov    (%rsp),%r9
    b299:	85 c0                	test   %eax,%eax
    b29b:	75 27                	jne    b2c4 <relocate_enclave+0x124>
    b29d:	4d 85 ff             	test   %r15,%r15
    b2a0:	0f 84 52 ff ff ff    	je     b1f8 <relocate_enclave+0x58>
    b2a6:	31 d2                	xor    %edx,%edx
    b2a8:	4c 89 f0             	mov    %r14,%rax
    b2ab:	4c 89 fe             	mov    %r15,%rsi
    b2ae:	49 f7 f5             	div    %r13
    b2b1:	4c 89 ca             	mov    %r9,%rdx
    b2b4:	48 89 c1             	mov    %rax,%rcx
    b2b7:	e8 14 fd ff ff       	call   afd0 <do_relocs>
    b2bc:	85 c0                	test   %eax,%eax
    b2be:	0f 84 34 ff ff ff    	je     b1f8 <relocate_enclave+0x58>
    b2c4:	48 83 c4 08          	add    $0x8,%rsp
    b2c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b2cd:	5b                   	pop    %rbx
    b2ce:	5d                   	pop    %rbp
    b2cf:	41 5c                	pop    %r12
    b2d1:	41 5d                	pop    %r13
    b2d3:	41 5e                	pop    %r14
    b2d5:	41 5f                	pop    %r15
    b2d7:	c3                   	ret    
    b2d8:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
    b2dc:	48 83 c6 10          	add    $0x10,%rsi
    b2e0:	49 39 f3             	cmp    %rsi,%r11
    b2e3:	0f 85 57 ff ff ff    	jne    b240 <relocate_enclave+0xa0>
    b2e9:	eb 85                	jmp    b270 <relocate_enclave+0xd0>
    b2eb:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    b2ef:	48 83 c6 10          	add    $0x10,%rsi
    b2f3:	49 39 f3             	cmp    %rsi,%r11
    b2f6:	0f 85 44 ff ff ff    	jne    b240 <relocate_enclave+0xa0>
    b2fc:	e9 6f ff ff ff       	jmp    b270 <relocate_enclave+0xd0>
    b301:	48 8b 46 08          	mov    0x8(%rsi),%rax
    b305:	48 83 c6 10          	add    $0x10,%rsi
    b309:	49 39 f3             	cmp    %rsi,%r11
    b30c:	0f 85 2e ff ff ff    	jne    b240 <relocate_enclave+0xa0>
    b312:	e9 59 ff ff ff       	jmp    b270 <relocate_enclave+0xd0>
    b317:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    b31b:	48 83 c6 10          	add    $0x10,%rsi
    b31f:	49 39 f3             	cmp    %rsi,%r11
    b322:	0f 85 18 ff ff ff    	jne    b240 <relocate_enclave+0xa0>
    b328:	e9 43 ff ff ff       	jmp    b270 <relocate_enclave+0xd0>
    b32d:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    b331:	48 83 c6 10          	add    $0x10,%rsi
    b335:	49 39 f3             	cmp    %rsi,%r11
    b338:	0f 85 02 ff ff ff    	jne    b240 <relocate_enclave+0xa0>
    b33e:	e9 2d ff ff ff       	jmp    b270 <relocate_enclave+0xd0>
    b343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b348:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b34d:	c3                   	ret    
    b34e:	66 90                	xchg   %ax,%ax
    b350:	4d 85 ff             	test   %r15,%r15
    b353:	0f 84 9f fe ff ff    	je     b1f8 <relocate_enclave+0x58>
    b359:	4d 85 ed             	test   %r13,%r13
    b35c:	0f 85 44 ff ff ff    	jne    b2a6 <relocate_enclave+0x106>
    b362:	e9 5d ff ff ff       	jmp    b2c4 <relocate_enclave+0x124>
    b367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b36e:	00 00 
    b370:	48 83 c4 08          	add    $0x8,%rsp
    b374:	31 c0                	xor    %eax,%eax
    b376:	5b                   	pop    %rbx
    b377:	5d                   	pop    %rbp
    b378:	41 5c                	pop    %r12
    b37a:	41 5d                	pop    %r13
    b37c:	41 5e                	pop    %r14
    b37e:	41 5f                	pop    %r15
    b380:	c3                   	ret    
    b381:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b388:	00 00 00 
    b38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b390 <elf_tls_info>:
    b390:	f3 0f 1e fa          	endbr64 
    b394:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b399:	48 85 ff             	test   %rdi,%rdi
    b39c:	0f 84 81 00 00 00    	je     b423 <elf_tls_info+0x93>
    b3a2:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b3a8:	75 78                	jne    b422 <elf_tls_info+0x92>
    b3aa:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b3af:	75 71                	jne    b422 <elf_tls_info+0x92>
    b3b1:	48 8b 47 20          	mov    0x20(%rdi),%rax
    b3b5:	48 01 f8             	add    %rdi,%rax
    b3b8:	48 85 f6             	test   %rsi,%rsi
    b3bb:	41 0f 94 c0          	sete   %r8b
    b3bf:	48 85 d2             	test   %rdx,%rdx
    b3c2:	0f 94 c1             	sete   %cl
    b3c5:	41 08 c8             	or     %cl,%r8b
    b3c8:	75 5a                	jne    b424 <elf_tls_info+0x94>
    b3ca:	48 85 c0             	test   %rax,%rax
    b3cd:	74 55                	je     b424 <elf_tls_info+0x94>
    b3cf:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    b3d3:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    b3da:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    b3e1:	85 c9                	test   %ecx,%ecx
    b3e3:	74 3b                	je     b420 <elf_tls_info+0x90>
    b3e5:	44 8d 41 ff          	lea    -0x1(%rcx),%r8d
    b3e9:	4a 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%rcx
    b3f0:	00 
    b3f1:	4c 29 c1             	sub    %r8,%rcx
    b3f4:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    b3f9:	eb 0e                	jmp    b409 <elf_tls_info+0x79>
    b3fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b400:	48 83 c0 38          	add    $0x38,%rax
    b404:	48 39 c8             	cmp    %rcx,%rax
    b407:	74 17                	je     b420 <elf_tls_info+0x90>
    b409:	83 38 07             	cmpl   $0x7,(%rax)
    b40c:	75 f2                	jne    b400 <elf_tls_info+0x70>
    b40e:	48 03 78 10          	add    0x10(%rax),%rdi
    b412:	48 89 3e             	mov    %rdi,(%rsi)
    b415:	48 8b 40 20          	mov    0x20(%rax),%rax
    b419:	48 89 02             	mov    %rax,(%rdx)
    b41c:	31 c0                	xor    %eax,%eax
    b41e:	c3                   	ret    
    b41f:	90                   	nop
    b420:	31 c0                	xor    %eax,%eax
    b422:	c3                   	ret    
    b423:	c3                   	ret    
    b424:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b429:	c3                   	ret    
    b42a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b430 <elf_get_init_array>:
    b430:	f3 0f 1e fa          	endbr64 
    b434:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b439:	48 85 ff             	test   %rdi,%rdi
    b43c:	0f 84 d1 00 00 00    	je     b513 <elf_get_init_array+0xe3>
    b442:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b448:	0f 85 bf 00 00 00    	jne    b50d <elf_get_init_array+0xdd>
    b44e:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b453:	0f 85 b4 00 00 00    	jne    b50d <elf_get_init_array+0xdd>
    b459:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    b45d:	48 01 f9             	add    %rdi,%rcx
    b460:	48 85 f6             	test   %rsi,%rsi
    b463:	41 0f 94 c0          	sete   %r8b
    b467:	48 85 d2             	test   %rdx,%rdx
    b46a:	0f 94 c0             	sete   %al
    b46d:	41 08 c0             	or     %al,%r8b
    b470:	0f 85 92 00 00 00    	jne    b508 <elf_get_init_array+0xd8>
    b476:	48 85 c9             	test   %rcx,%rcx
    b479:	0f 84 89 00 00 00    	je     b508 <elf_get_init_array+0xd8>
    b47f:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    b483:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    b48a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    b491:	85 c0                	test   %eax,%eax
    b493:	74 7b                	je     b510 <elf_get_init_array+0xe0>
    b495:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    b499:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    b4a0:	00 
    b4a1:	4c 29 c0             	sub    %r8,%rax
    b4a4:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    b4a9:	eb 0e                	jmp    b4b9 <elf_get_init_array+0x89>
    b4ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b4b0:	48 83 c1 38          	add    $0x38,%rcx
    b4b4:	4c 39 d1             	cmp    %r10,%rcx
    b4b7:	74 57                	je     b510 <elf_get_init_array+0xe0>
    b4b9:	83 39 02             	cmpl   $0x2,(%rcx)
    b4bc:	75 f2                	jne    b4b0 <elf_get_init_array+0x80>
    b4be:	48 8b 41 18          	mov    0x18(%rcx),%rax
    b4c2:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    b4c6:	48 01 f8             	add    %rdi,%rax
    b4c9:	49 c1 e9 04          	shr    $0x4,%r9
    b4cd:	74 e1                	je     b4b0 <elf_get_init_array+0x80>
    b4cf:	49 c1 e1 04          	shl    $0x4,%r9
    b4d3:	49 01 c1             	add    %rax,%r9
    b4d6:	eb 1e                	jmp    b4f6 <elf_get_init_array+0xc6>
    b4d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b4df:	00 
    b4e0:	49 83 f8 1b          	cmp    $0x1b,%r8
    b4e4:	75 07                	jne    b4ed <elf_get_init_array+0xbd>
    b4e6:	4c 8b 40 08          	mov    0x8(%rax),%r8
    b4ea:	4c 89 02             	mov    %r8,(%rdx)
    b4ed:	48 83 c0 10          	add    $0x10,%rax
    b4f1:	49 39 c1             	cmp    %rax,%r9
    b4f4:	74 ba                	je     b4b0 <elf_get_init_array+0x80>
    b4f6:	4c 8b 00             	mov    (%rax),%r8
    b4f9:	49 83 f8 19          	cmp    $0x19,%r8
    b4fd:	75 e1                	jne    b4e0 <elf_get_init_array+0xb0>
    b4ff:	4c 8b 40 08          	mov    0x8(%rax),%r8
    b503:	4c 89 06             	mov    %r8,(%rsi)
    b506:	eb e5                	jmp    b4ed <elf_get_init_array+0xbd>
    b508:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b50d:	c3                   	ret    
    b50e:	66 90                	xchg   %ax,%ax
    b510:	31 c0                	xor    %eax,%eax
    b512:	c3                   	ret    
    b513:	c3                   	ret    
    b514:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b51b:	00 00 00 
    b51e:	66 90                	xchg   %ax,%ax

000000000000b520 <elf_get_uninit_array>:
    b520:	f3 0f 1e fa          	endbr64 
    b524:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b529:	48 85 ff             	test   %rdi,%rdi
    b52c:	0f 84 d1 00 00 00    	je     b603 <elf_get_uninit_array+0xe3>
    b532:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b538:	0f 85 bf 00 00 00    	jne    b5fd <elf_get_uninit_array+0xdd>
    b53e:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b543:	0f 85 b4 00 00 00    	jne    b5fd <elf_get_uninit_array+0xdd>
    b549:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    b54d:	48 01 f9             	add    %rdi,%rcx
    b550:	48 85 f6             	test   %rsi,%rsi
    b553:	41 0f 94 c0          	sete   %r8b
    b557:	48 85 d2             	test   %rdx,%rdx
    b55a:	0f 94 c0             	sete   %al
    b55d:	41 08 c0             	or     %al,%r8b
    b560:	0f 85 92 00 00 00    	jne    b5f8 <elf_get_uninit_array+0xd8>
    b566:	48 85 c9             	test   %rcx,%rcx
    b569:	0f 84 89 00 00 00    	je     b5f8 <elf_get_uninit_array+0xd8>
    b56f:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    b573:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    b57a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    b581:	85 c0                	test   %eax,%eax
    b583:	74 7b                	je     b600 <elf_get_uninit_array+0xe0>
    b585:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    b589:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    b590:	00 
    b591:	4c 29 c0             	sub    %r8,%rax
    b594:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    b599:	eb 0e                	jmp    b5a9 <elf_get_uninit_array+0x89>
    b59b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b5a0:	48 83 c1 38          	add    $0x38,%rcx
    b5a4:	4c 39 d1             	cmp    %r10,%rcx
    b5a7:	74 57                	je     b600 <elf_get_uninit_array+0xe0>
    b5a9:	83 39 02             	cmpl   $0x2,(%rcx)
    b5ac:	75 f2                	jne    b5a0 <elf_get_uninit_array+0x80>
    b5ae:	48 8b 41 18          	mov    0x18(%rcx),%rax
    b5b2:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    b5b6:	48 01 f8             	add    %rdi,%rax
    b5b9:	49 c1 e9 04          	shr    $0x4,%r9
    b5bd:	74 e1                	je     b5a0 <elf_get_uninit_array+0x80>
    b5bf:	49 c1 e1 04          	shl    $0x4,%r9
    b5c3:	49 01 c1             	add    %rax,%r9
    b5c6:	eb 1e                	jmp    b5e6 <elf_get_uninit_array+0xc6>
    b5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b5cf:	00 
    b5d0:	49 83 f8 1c          	cmp    $0x1c,%r8
    b5d4:	75 07                	jne    b5dd <elf_get_uninit_array+0xbd>
    b5d6:	4c 8b 40 08          	mov    0x8(%rax),%r8
    b5da:	4c 89 02             	mov    %r8,(%rdx)
    b5dd:	48 83 c0 10          	add    $0x10,%rax
    b5e1:	49 39 c1             	cmp    %rax,%r9
    b5e4:	74 ba                	je     b5a0 <elf_get_uninit_array+0x80>
    b5e6:	4c 8b 00             	mov    (%rax),%r8
    b5e9:	49 83 f8 1a          	cmp    $0x1a,%r8
    b5ed:	75 e1                	jne    b5d0 <elf_get_uninit_array+0xb0>
    b5ef:	4c 8b 40 08          	mov    0x8(%rax),%r8
    b5f3:	4c 89 06             	mov    %r8,(%rsi)
    b5f6:	eb e5                	jmp    b5dd <elf_get_uninit_array+0xbd>
    b5f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b5fd:	c3                   	ret    
    b5fe:	66 90                	xchg   %ax,%ax
    b600:	31 c0                	xor    %eax,%eax
    b602:	c3                   	ret    
    b603:	c3                   	ret    
    b604:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b60b:	00 00 00 
    b60e:	66 90                	xchg   %ax,%ax

000000000000b610 <change_protection>:
    b610:	f3 0f 1e fa          	endbr64 
    b614:	48 85 ff             	test   %rdi,%rdi
    b617:	0f 84 21 02 00 00    	je     b83e <change_protection+0x22e>
    b61d:	41 56                	push   %r14
    b61f:	41 55                	push   %r13
    b621:	41 54                	push   %r12
    b623:	49 89 fc             	mov    %rdi,%r12
    b626:	55                   	push   %rbp
    b627:	53                   	push   %rbx
    b628:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    b62e:	0f 85 0c 01 00 00    	jne    b740 <change_protection+0x130>
    b634:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    b639:	0f 85 01 01 00 00    	jne    b740 <change_protection+0x130>
    b63f:	48 89 fb             	mov    %rdi,%rbx
    b642:	48 03 5f 20          	add    0x20(%rdi),%rbx
    b646:	0f 84 f4 00 00 00    	je     b740 <change_protection+0x130>
    b64c:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    b650:	85 c0                	test   %eax,%eax
    b652:	0f 84 50 01 00 00    	je     b7a8 <change_protection+0x198>
    b658:	8d 50 ff             	lea    -0x1(%rax),%edx
    b65b:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    b662:	00 
    b663:	48 29 d0             	sub    %rdx,%rax
    b666:	48 8d 54 c3 38       	lea    0x38(%rbx,%rax,8),%rdx
    b66b:	48 89 d8             	mov    %rbx,%rax
    b66e:	eb 09                	jmp    b679 <change_protection+0x69>
    b670:	48 83 c0 38          	add    $0x38,%rax
    b674:	48 39 d0             	cmp    %rdx,%rax
    b677:	74 42                	je     b6bb <change_protection+0xab>
    b679:	83 38 02             	cmpl   $0x2,(%rax)
    b67c:	75 f2                	jne    b670 <change_protection+0x60>
    b67e:	48 8b 48 20          	mov    0x20(%rax),%rcx
    b682:	48 8b 78 18          	mov    0x18(%rax),%rdi
    b686:	4c 01 e7             	add    %r12,%rdi
    b689:	48 c1 e9 04          	shr    $0x4,%rcx
    b68d:	48 89 f8             	mov    %rdi,%rax
    b690:	74 29                	je     b6bb <change_protection+0xab>
    b692:	48 c1 e1 04          	shl    $0x4,%rcx
    b696:	48 01 f9             	add    %rdi,%rcx
    b699:	eb 18                	jmp    b6b3 <change_protection+0xa3>
    b69b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b6a0:	48 83 fa 16          	cmp    $0x16,%rdx
    b6a4:	0f 84 89 01 00 00    	je     b833 <change_protection+0x223>
    b6aa:	48 83 c0 10          	add    $0x10,%rax
    b6ae:	48 39 c8             	cmp    %rcx,%rax
    b6b1:	74 08                	je     b6bb <change_protection+0xab>
    b6b3:	48 8b 10             	mov    (%rax),%rdx
    b6b6:	48 85 d2             	test   %rdx,%rdx
    b6b9:	75 e5                	jne    b6a0 <change_protection+0x90>
    b6bb:	45 31 f6             	xor    %r14d,%r14d
    b6be:	48 bd ff ff ff ff 02 	movabs $0x2ffffffff,%rbp
    b6c5:	00 00 00 
    b6c8:	45 31 ed             	xor    %r13d,%r13d
    b6cb:	eb 1a                	jmp    b6e7 <change_protection+0xd7>
    b6cd:	0f 1f 00             	nopl   (%rax)
    b6d0:	41 0f b7 44 24 38    	movzwl 0x38(%r12),%eax
    b6d6:	41 83 c5 01          	add    $0x1,%r13d
    b6da:	48 83 c3 38          	add    $0x38,%rbx
    b6de:	44 39 e8             	cmp    %r13d,%eax
    b6e1:	0f 86 c1 00 00 00    	jbe    b7a8 <change_protection+0x198>
    b6e7:	45 85 f6             	test   %r14d,%r14d
    b6ea:	74 0c                	je     b6f8 <change_protection+0xe8>
    b6ec:	48 8b 03             	mov    (%rbx),%rax
    b6ef:	48 21 e8             	and    %rbp,%rax
    b6f2:	48 83 f8 01          	cmp    $0x1,%rax
    b6f6:	74 58                	je     b750 <change_protection+0x140>
    b6f8:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    b6fe:	75 d0                	jne    b6d0 <change_protection+0xc0>
    b700:	48 8b 43 10          	mov    0x10(%rbx),%rax
    b704:	48 89 c7             	mov    %rax,%rdi
    b707:	48 03 43 28          	add    0x28(%rbx),%rax
    b70b:	48 89 c6             	mov    %rax,%rsi
    b70e:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    b715:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    b71c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    b723:	48 39 f7             	cmp    %rsi,%rdi
    b726:	74 a8                	je     b6d0 <change_protection+0xc0>
    b728:	48 29 fe             	sub    %rdi,%rsi
    b72b:	ba 01 00 00 00       	mov    $0x1,%edx
    b730:	4c 01 e7             	add    %r12,%rdi
    b733:	e8 a8 ed ff ff       	call   a4e0 <trts_mprotect>
    b738:	85 c0                	test   %eax,%eax
    b73a:	74 94                	je     b6d0 <change_protection+0xc0>
    b73c:	eb 07                	jmp    b745 <change_protection+0x135>
    b73e:	66 90                	xchg   %ax,%ax
    b740:	b8 01 00 00 00       	mov    $0x1,%eax
    b745:	5b                   	pop    %rbx
    b746:	5d                   	pop    %rbp
    b747:	41 5c                	pop    %r12
    b749:	41 5d                	pop    %r13
    b74b:	41 5e                	pop    %r14
    b74d:	c3                   	ret    
    b74e:	66 90                	xchg   %ax,%ax
    b750:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    b754:	48 8b 43 10          	mov    0x10(%rbx),%rax
    b758:	44 89 c2             	mov    %r8d,%edx
    b75b:	48 89 c1             	mov    %rax,%rcx
    b75e:	48 03 43 28          	add    0x28(%rbx),%rax
    b762:	c1 ea 02             	shr    $0x2,%edx
    b765:	48 89 c6             	mov    %rax,%rsi
    b768:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    b76f:	83 e2 01             	and    $0x1,%edx
    b772:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    b779:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
    b77d:	48 89 d0             	mov    %rdx,%rax
    b780:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    b787:	48 83 c8 04          	or     $0x4,%rax
    b78b:	41 83 e0 01          	and    $0x1,%r8d
    b78f:	48 0f 45 d0          	cmovne %rax,%rdx
    b793:	48 29 ce             	sub    %rcx,%rsi
    b796:	e8 45 ed ff ff       	call   a4e0 <trts_mprotect>
    b79b:	85 c0                	test   %eax,%eax
    b79d:	0f 84 55 ff ff ff    	je     b6f8 <change_protection+0xe8>
    b7a3:	eb a0                	jmp    b745 <change_protection+0x135>
    b7a5:	0f 1f 00             	nopl   (%rax)
    b7a8:	8b 05 4a 83 01 00    	mov    0x1834a(%rip),%eax        # 23af8 <g_global_data+0x138>
    b7ae:	31 d2                	xor    %edx,%edx
    b7b0:	48 8d 3d 09 82 01 00 	lea    0x18209(%rip),%rdi        # 239c0 <g_global_data>
    b7b7:	85 c0                	test   %eax,%eax
    b7b9:	75 12                	jne    b7cd <change_protection+0x1bd>
    b7bb:	eb 88                	jmp    b745 <change_protection+0x135>
    b7bd:	0f 1f 00             	nopl   (%rax)
    b7c0:	8b 05 32 83 01 00    	mov    0x18332(%rip),%eax        # 23af8 <g_global_data+0x138>
    b7c6:	83 c2 01             	add    $0x1,%edx
    b7c9:	39 d0                	cmp    %edx,%eax
    b7cb:	76 5b                	jbe    b828 <change_protection+0x218>
    b7cd:	89 d1                	mov    %edx,%ecx
    b7cf:	48 8d 41 0a          	lea    0xa(%rcx),%rax
    b7d3:	48 c1 e0 05          	shl    $0x5,%rax
    b7d7:	48 01 f8             	add    %rdi,%rax
    b7da:	0f b7 30             	movzwl (%rax),%esi
    b7dd:	66 83 fe 14          	cmp    $0x14,%si
    b7e1:	75 dd                	jne    b7c0 <change_protection+0x1b0>
    b7e3:	48 c1 e1 05          	shl    $0x5,%rcx
    b7e7:	48 01 f9             	add    %rdi,%rcx
    b7ea:	48 8b 89 58 01 00 00 	mov    0x158(%rcx),%rcx
    b7f1:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    b7f8:	75 c6                	jne    b7c0 <change_protection+0x1b0>
    b7fa:	8b 48 04             	mov    0x4(%rax),%ecx
    b7fd:	85 c9                	test   %ecx,%ecx
    b7ff:	74 bf                	je     b7c0 <change_protection+0x1b0>
    b801:	8b 70 04             	mov    0x4(%rax),%esi
    b804:	48 8b 78 08          	mov    0x8(%rax),%rdi
    b808:	ba 03 00 00 00       	mov    $0x3,%edx
    b80d:	5b                   	pop    %rbx
    b80e:	5d                   	pop    %rbp
    b80f:	4c 01 e7             	add    %r12,%rdi
    b812:	48 c1 e6 0c          	shl    $0xc,%rsi
    b816:	41 5c                	pop    %r12
    b818:	41 5d                	pop    %r13
    b81a:	41 5e                	pop    %r14
    b81c:	e9 bf ec ff ff       	jmp    a4e0 <trts_mprotect>
    b821:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b828:	5b                   	pop    %rbx
    b829:	31 c0                	xor    %eax,%eax
    b82b:	5d                   	pop    %rbp
    b82c:	41 5c                	pop    %r12
    b82e:	41 5d                	pop    %r13
    b830:	41 5e                	pop    %r14
    b832:	c3                   	ret    
    b833:	41 be 01 00 00 00    	mov    $0x1,%r14d
    b839:	e9 80 fe ff ff       	jmp    b6be <change_protection+0xae>
    b83e:	b8 01 00 00 00       	mov    $0x1,%eax
    b843:	c3                   	ret    
    b844:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b84b:	00 00 00 
    b84e:	66 90                	xchg   %ax,%ax

000000000000b850 <init_global_object>:
    b850:	f3 0f 1e fa          	endbr64 
    b854:	55                   	push   %rbp
    b855:	53                   	push   %rbx
    b856:	48 83 ec 28          	sub    $0x28,%rsp
    b85a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b861:	00 00 
    b863:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b868:	31 c0                	xor    %eax,%eax
    b86a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    b871:	00 00 
    b873:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    b87a:	00 00 
    b87c:	e8 b1 59 01 00       	call   21232 <get_enclave_base>
    b881:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    b886:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    b88b:	48 89 c7             	mov    %rax,%rdi
    b88e:	48 89 c3             	mov    %rax,%rbx
    b891:	e8 9a fb ff ff       	call   b430 <elf_get_init_array>
    b896:	85 c0                	test   %eax,%eax
    b898:	75 31                	jne    b8cb <init_global_object+0x7b>
    b89a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b89f:	48 85 c0             	test   %rax,%rax
    b8a2:	74 27                	je     b8cb <init_global_object+0x7b>
    b8a4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    b8a9:	48 85 ed             	test   %rbp,%rbp
    b8ac:	74 1d                	je     b8cb <init_global_object+0x7b>
    b8ae:	48 01 c3             	add    %rax,%rbx
    b8b1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    b8b5:	48 01 dd             	add    %rbx,%rbp
    b8b8:	48 39 eb             	cmp    %rbp,%rbx
    b8bb:	73 0e                	jae    b8cb <init_global_object+0x7b>
    b8bd:	0f 1f 00             	nopl   (%rax)
    b8c0:	ff 13                	call   *(%rbx)
    b8c2:	48 83 c3 08          	add    $0x8,%rbx
    b8c6:	48 39 dd             	cmp    %rbx,%rbp
    b8c9:	77 f5                	ja     b8c0 <init_global_object+0x70>
    b8cb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b8d0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b8d7:	00 00 
    b8d9:	75 07                	jne    b8e2 <init_global_object+0x92>
    b8db:	48 83 c4 28          	add    $0x28,%rsp
    b8df:	5b                   	pop    %rbx
    b8e0:	5d                   	pop    %rbp
    b8e1:	c3                   	ret    
    b8e2:	e8 d9 40 00 00       	call   f9c0 <__stack_chk_fail>
    b8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b8ee:	00 00 

000000000000b8f0 <uninit_global_object>:
    b8f0:	f3 0f 1e fa          	endbr64 
    b8f4:	55                   	push   %rbp
    b8f5:	53                   	push   %rbx
    b8f6:	48 83 ec 28          	sub    $0x28,%rsp
    b8fa:	48 8b 1d 47 0a 02 00 	mov    0x20a47(%rip),%rbx        # 2c348 <g_exit_function>
    b901:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b908:	00 00 
    b90a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b90f:	31 c0                	xor    %eax,%eax
    b911:	48 c7 05 2c 0a 02 00 	movq   $0x0,0x20a2c(%rip)        # 2c348 <g_exit_function>
    b918:	00 00 00 00 
    b91c:	48 85 db             	test   %rbx,%rbx
    b91f:	74 2b                	je     b94c <uninit_global_object+0x5c>
    b921:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b928:	48 8b 05 11 0a 02 00 	mov    0x20a11(%rip),%rax        # 2c340 <g_exit_function_cookie>
    b92f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b933:	48 31 c7             	xor    %rax,%rdi
    b936:	48 33 03             	xor    (%rbx),%rax
    b939:	ff d0                	call   *%rax
    b93b:	48 89 df             	mov    %rbx,%rdi
    b93e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    b942:	e8 99 26 00 00       	call   dfe0 <dlfree>
    b947:	48 85 db             	test   %rbx,%rbx
    b94a:	75 dc                	jne    b928 <uninit_global_object+0x38>
    b94c:	e8 e1 58 01 00       	call   21232 <get_enclave_base>
    b951:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    b956:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    b95b:	48 89 c7             	mov    %rax,%rdi
    b95e:	48 89 c3             	mov    %rax,%rbx
    b961:	e8 ba fb ff ff       	call   b520 <elf_get_uninit_array>
    b966:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b96b:	48 85 c0             	test   %rax,%rax
    b96e:	74 2c                	je     b99c <uninit_global_object+0xac>
    b970:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    b975:	48 85 d2             	test   %rdx,%rdx
    b978:	74 22                	je     b99c <uninit_global_object+0xac>
    b97a:	48 01 c3             	add    %rax,%rbx
    b97d:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b981:	48 8d 6c 13 f8       	lea    -0x8(%rbx,%rdx,1),%rbp
    b986:	48 39 eb             	cmp    %rbp,%rbx
    b989:	77 11                	ja     b99c <uninit_global_object+0xac>
    b98b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b990:	ff 55 00             	call   *0x0(%rbp)
    b993:	48 83 ed 08          	sub    $0x8,%rbp
    b997:	48 39 eb             	cmp    %rbp,%rbx
    b99a:	76 f4                	jbe    b990 <uninit_global_object+0xa0>
    b99c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b9a1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b9a8:	00 00 
    b9aa:	75 07                	jne    b9b3 <uninit_global_object+0xc3>
    b9ac:	48 83 c4 28          	add    $0x28,%rsp
    b9b0:	5b                   	pop    %rbx
    b9b1:	5d                   	pop    %rbp
    b9b2:	c3                   	ret    
    b9b3:	e8 08 40 00 00       	call   f9c0 <__stack_chk_fail>
    b9b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b9bf:	00 

000000000000b9c0 <alloca>:
    b9c0:	f3 0f 1e fa          	endbr64 
    b9c4:	5a                   	pop    %rdx
    b9c5:	48 89 e1             	mov    %rsp,%rcx
    b9c8:	48 83 c7 0f          	add    $0xf,%rdi
    b9cc:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    b9d0:	48 29 fc             	sub    %rdi,%rsp
    b9d3:	48 89 e0             	mov    %rsp,%rax
    b9d6:	3e ff e2             	notrack jmp *%rdx
    b9d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b9e0 <__assert>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	50                   	push   %rax
    b9e5:	58                   	pop    %rax
    b9e6:	48 83 ec 08          	sub    $0x8,%rsp
    b9ea:	e8 15 5c 01 00       	call   21604 <abort>
    b9ef:	90                   	nop

000000000000b9f0 <heap_init>:
    b9f0:	f3 0f 1e fa          	endbr64 
    b9f4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b9fa:	48 85 ff             	test   %rdi,%rdi
    b9fd:	75 09                	jne    ba08 <heap_init+0x18>
    b9ff:	44 89 c0             	mov    %r8d,%eax
    ba02:	c3                   	ret    
    ba03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba08:	48 89 f0             	mov    %rsi,%rax
    ba0b:	49 89 f9             	mov    %rdi,%r9
    ba0e:	48 09 d0             	or     %rdx,%rax
    ba11:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    ba18:	25 ff 0f 00 00       	and    $0xfff,%eax
    ba1d:	48 0b 05 1c 03 02 00 	or     0x2031c(%rip),%rax        # 2bd40 <heap_base>
    ba24:	4c 09 c8             	or     %r9,%rax
    ba27:	75 d6                	jne    b9ff <heap_init+0xf>
    ba29:	45 31 c0             	xor    %r8d,%r8d
    ba2c:	48 89 3d 0d 03 02 00 	mov    %rdi,0x2030d(%rip)        # 2bd40 <heap_base>
    ba33:	48 89 35 fe 02 02 00 	mov    %rsi,0x202fe(%rip)        # 2bd38 <heap_size>
    ba3a:	44 89 c0             	mov    %r8d,%eax
    ba3d:	48 89 15 e4 02 02 00 	mov    %rdx,0x202e4(%rip)        # 2bd28 <heap_min_size>
    ba44:	89 0d e6 02 02 00    	mov    %ecx,0x202e6(%rip)        # 2bd30 <is_edmm_supported>
    ba4a:	c3                   	ret    
    ba4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ba50 <sbrk>:
    ba50:	f3 0f 1e fa          	endbr64 
    ba54:	41 54                	push   %r12
    ba56:	53                   	push   %rbx
    ba57:	48 83 ec 08          	sub    $0x8,%rsp
    ba5b:	48 8b 05 de 02 02 00 	mov    0x202de(%rip),%rax        # 2bd40 <heap_base>
    ba62:	48 85 c0             	test   %rax,%rax
    ba65:	0f 84 f5 00 00 00    	je     bb60 <sbrk+0x110>
    ba6b:	48 8b 1d de 08 02 00 	mov    0x208de(%rip),%rbx        # 2c350 <heap_used.2546>
    ba72:	48 85 ff             	test   %rdi,%rdi
    ba75:	0f 88 85 00 00 00    	js     bb00 <sbrk+0xb0>
    ba7b:	48 89 fa             	mov    %rdi,%rdx
    ba7e:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ba85:	48 f7 d2             	not    %rdx
    ba88:	48 39 da             	cmp    %rbx,%rdx
    ba8b:	72 66                	jb     baf3 <sbrk+0xa3>
    ba8d:	48 8d 14 1f          	lea    (%rdi,%rbx,1),%rdx
    ba91:	48 3b 15 a0 02 02 00 	cmp    0x202a0(%rip),%rdx        # 2bd38 <heap_size>
    ba98:	77 59                	ja     baf3 <sbrk+0xa3>
    ba9a:	48 39 15 b7 08 02 00 	cmp    %rdx,0x208b7(%rip)        # 2c358 <g_peak_heap_used>
    baa1:	48 89 d1             	mov    %rdx,%rcx
    baa4:	48 0f 43 0d ac 08 02 	cmovae 0x208ac(%rip),%rcx        # 2c358 <g_peak_heap_used>
    baab:	00 
    baac:	48 89 15 9d 08 02 00 	mov    %rdx,0x2089d(%rip)        # 2c350 <heap_used.2546>
    bab3:	4c 8d 24 18          	lea    (%rax,%rbx,1),%r12
    bab7:	48 89 0d 9a 08 02 00 	mov    %rcx,0x2089a(%rip)        # 2c358 <g_peak_heap_used>
    babe:	8b 0d 6c 02 02 00    	mov    0x2026c(%rip),%ecx        # 2bd30 <is_edmm_supported>
    bac4:	85 c9                	test   %ecx,%ecx
    bac6:	74 2b                	je     baf3 <sbrk+0xa3>
    bac8:	48 8b 0d 59 02 02 00 	mov    0x20259(%rip),%rcx        # 2bd28 <heap_min_size>
    bacf:	48 39 ca             	cmp    %rcx,%rdx
    bad2:	76 1f                	jbe    baf3 <sbrk+0xa3>
    bad4:	4d 89 e0             	mov    %r12,%r8
    bad7:	48 39 d9             	cmp    %rbx,%rcx
    bada:	0f 83 a8 00 00 00    	jae    bb88 <sbrk+0x138>
    bae0:	48 89 fe             	mov    %rdi,%rsi
    bae3:	4c 89 c7             	mov    %r8,%rdi
    bae6:	48 c1 ee 0c          	shr    $0xc,%rsi
    baea:	e8 81 dd ff ff       	call   9870 <apply_EPC_pages>
    baef:	85 c0                	test   %eax,%eax
    baf1:	75 5d                	jne    bb50 <sbrk+0x100>
    baf3:	48 83 c4 08          	add    $0x8,%rsp
    baf7:	4c 89 e0             	mov    %r12,%rax
    bafa:	5b                   	pop    %rbx
    bafb:	41 5c                	pop    %r12
    bafd:	c3                   	ret    
    bafe:	66 90                	xchg   %ax,%ax
    bb00:	48 89 fe             	mov    %rdi,%rsi
    bb03:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    bb0a:	48 f7 de             	neg    %rsi
    bb0d:	48 39 de             	cmp    %rbx,%rsi
    bb10:	77 e1                	ja     baf3 <sbrk+0xa3>
    bb12:	44 8b 05 17 02 02 00 	mov    0x20217(%rip),%r8d        # 2bd30 <is_edmm_supported>
    bb19:	48 01 df             	add    %rbx,%rdi
    bb1c:	48 89 3d 2d 08 02 00 	mov    %rdi,0x2082d(%rip)        # 2c350 <heap_used.2546>
    bb23:	4c 8d 24 38          	lea    (%rax,%rdi,1),%r12
    bb27:	45 85 c0             	test   %r8d,%r8d
    bb2a:	74 c7                	je     baf3 <sbrk+0xa3>
    bb2c:	48 8b 15 f5 01 02 00 	mov    0x201f5(%rip),%rdx        # 2bd28 <heap_min_size>
    bb33:	48 39 da             	cmp    %rbx,%rdx
    bb36:	73 bb                	jae    baf3 <sbrk+0xa3>
    bb38:	4d 89 e0             	mov    %r12,%r8
    bb3b:	48 39 fa             	cmp    %rdi,%rdx
    bb3e:	73 38                	jae    bb78 <sbrk+0x128>
    bb40:	48 c1 ee 0c          	shr    $0xc,%rsi
    bb44:	4c 89 c7             	mov    %r8,%rdi
    bb47:	e8 b4 dd ff ff       	call   9900 <trim_EPC_pages>
    bb4c:	85 c0                	test   %eax,%eax
    bb4e:	74 a3                	je     baf3 <sbrk+0xa3>
    bb50:	48 89 1d f9 07 02 00 	mov    %rbx,0x207f9(%rip)        # 2c350 <heap_used.2546>
    bb57:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    bb5e:	eb 93                	jmp    baf3 <sbrk+0xa3>
    bb60:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    bb67:	48 83 c4 08          	add    $0x8,%rsp
    bb6b:	4c 89 e0             	mov    %r12,%rax
    bb6e:	5b                   	pop    %rbx
    bb6f:	41 5c                	pop    %r12
    bb71:	c3                   	ret    
    bb72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb78:	48 89 de             	mov    %rbx,%rsi
    bb7b:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
    bb7f:	48 29 d6             	sub    %rdx,%rsi
    bb82:	eb bc                	jmp    bb40 <sbrk+0xf0>
    bb84:	0f 1f 40 00          	nopl   0x0(%rax)
    bb88:	48 29 ca             	sub    %rcx,%rdx
    bb8b:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    bb8f:	48 89 d7             	mov    %rdx,%rdi
    bb92:	e9 49 ff ff ff       	jmp    bae0 <sbrk+0x90>
    bb97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bb9e:	00 00 

000000000000bba0 <sgx_cpuid>:
    bba0:	f3 0f 1e fa          	endbr64 
    bba4:	48 85 ff             	test   %rdi,%rdi
    bba7:	74 07                	je     bbb0 <sgx_cpuid+0x10>
    bba9:	31 d2                	xor    %edx,%edx
    bbab:	e9 e0 87 ff ff       	jmp    4390 <sgx_oc_cpuidex>
    bbb0:	b8 02 00 00 00       	mov    $0x2,%eax
    bbb5:	c3                   	ret    
    bbb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bbbd:	00 00 00 

000000000000bbc0 <sgx_spin_lock>:
    bbc0:	f3 0f 1e fa          	endbr64 
    bbc4:	48 83 ec 18          	sub    $0x18,%rsp
    bbc8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bbcf:	00 00 
    bbd1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bbd6:	31 c0                	xor    %eax,%eax
    bbd8:	b8 01 00 00 00       	mov    $0x1,%eax
    bbdd:	f0 87 07             	lock xchg %eax,(%rdi)
    bbe0:	89 44 24 04          	mov    %eax,0x4(%rsp)
    bbe4:	8b 54 24 04          	mov    0x4(%rsp),%edx
    bbe8:	85 d2                	test   %edx,%edx
    bbea:	74 23                	je     bc0f <sgx_spin_lock+0x4f>
    bbec:	ba 01 00 00 00       	mov    $0x1,%edx
    bbf1:	eb 07                	jmp    bbfa <sgx_spin_lock+0x3a>
    bbf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bbf8:	f3 90                	pause  
    bbfa:	8b 07                	mov    (%rdi),%eax
    bbfc:	85 c0                	test   %eax,%eax
    bbfe:	75 f8                	jne    bbf8 <sgx_spin_lock+0x38>
    bc00:	f0 87 17             	lock xchg %edx,(%rdi)
    bc03:	89 54 24 04          	mov    %edx,0x4(%rsp)
    bc07:	8b 44 24 04          	mov    0x4(%rsp),%eax
    bc0b:	85 c0                	test   %eax,%eax
    bc0d:	75 eb                	jne    bbfa <sgx_spin_lock+0x3a>
    bc0f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bc14:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    bc1b:	00 00 
    bc1d:	75 07                	jne    bc26 <sgx_spin_lock+0x66>
    bc1f:	31 c0                	xor    %eax,%eax
    bc21:	48 83 c4 18          	add    $0x18,%rsp
    bc25:	c3                   	ret    
    bc26:	e8 95 3d 00 00       	call   f9c0 <__stack_chk_fail>
    bc2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000bc30 <sgx_spin_unlock>:
    bc30:	f3 0f 1e fa          	endbr64 
    bc34:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    bc3a:	31 c0                	xor    %eax,%eax
    bc3c:	c3                   	ret    
    bc3d:	0f 1f 00             	nopl   (%rax)

000000000000bc40 <vsnprintf>:
    bc40:	f3 0f 1e fa          	endbr64 
    bc44:	41 55                	push   %r13
    bc46:	49 89 cd             	mov    %rcx,%r13
    bc49:	41 54                	push   %r12
    bc4b:	49 89 d4             	mov    %rdx,%r12
    bc4e:	ba 28 00 00 00       	mov    $0x28,%edx
    bc53:	55                   	push   %rbp
    bc54:	48 89 f5             	mov    %rsi,%rbp
    bc57:	31 f6                	xor    %esi,%esi
    bc59:	53                   	push   %rbx
    bc5a:	48 89 fb             	mov    %rdi,%rbx
    bc5d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    bc64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bc6b:	00 00 
    bc6d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    bc74:	00 
    bc75:	31 c0                	xor    %eax,%eax
    bc77:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    bc7c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
    bc81:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bc88:	00 00 
    bc8a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    bc8f:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
    bc96:	00 
    bc97:	e8 64 3b 00 00       	call   f800 <memset>
    bc9c:	b8 fe ff ff 7f       	mov    $0x7ffffffe,%eax
    bca1:	48 81 fd ff ff ff 7f 	cmp    $0x7fffffff,%rbp
    bca8:	77 08                	ja     bcb2 <vsnprintf+0x72>
    bcaa:	8d 45 ff             	lea    -0x1(%rbp),%eax
    bcad:	48 85 ed             	test   %rbp,%rbp
    bcb0:	74 56                	je     bd08 <vsnprintf+0xc8>
    bcb2:	4c 89 ea             	mov    %r13,%rdx
    bcb5:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    bcba:	4c 89 e6             	mov    %r12,%rsi
    bcbd:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    bcc2:	c7 44 24 20 08 02 ff 	movl   $0xffff0208,0x20(%rsp)
    bcc9:	ff 
    bcca:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    bccf:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    bcd3:	89 44 24 30          	mov    %eax,0x30(%rsp)
    bcd7:	e8 e4 54 00 00       	call   111c0 <__vfprintf>
    bcdc:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    bce1:	c6 02 00             	movb   $0x0,(%rdx)
    bce4:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    bceb:	00 
    bcec:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    bcf3:	00 00 
    bcf5:	75 1a                	jne    bd11 <vsnprintf+0xd1>
    bcf7:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    bcfe:	5b                   	pop    %rbx
    bcff:	5d                   	pop    %rbp
    bd00:	41 5c                	pop    %r12
    bd02:	41 5d                	pop    %r13
    bd04:	c3                   	ret    
    bd05:	0f 1f 00             	nopl   (%rax)
    bd08:	31 c0                	xor    %eax,%eax
    bd0a:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
    bd0f:	eb a1                	jmp    bcb2 <vsnprintf+0x72>
    bd11:	e8 aa 3c 00 00       	call   f9c0 <__stack_chk_fail>
    bd16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bd1d:	00 00 00 

000000000000bd20 <atoi>:
    bd20:	f3 0f 1e fa          	endbr64 
    bd24:	48 83 ec 08          	sub    $0x8,%rsp
    bd28:	ba 0a 00 00 00       	mov    $0xa,%edx
    bd2d:	31 f6                	xor    %esi,%esi
    bd2f:	e8 4c 33 00 00       	call   f080 <strtol>
    bd34:	48 83 c4 08          	add    $0x8,%rsp
    bd38:	c3                   	ret    
    bd39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000bd40 <init_mparams>:
    bd40:	48 83 ec 18          	sub    $0x18,%rsp
    bd44:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bd4b:	00 00 
    bd4d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bd52:	31 c0                	xor    %eax,%eax
    bd54:	b8 01 00 00 00       	mov    $0x1,%eax
    bd59:	87 05 f1 09 02 00    	xchg   %eax,0x209f1(%rip)        # 2c750 <malloc_global_mutex>
    bd5f:	85 c0                	test   %eax,%eax
    bd61:	74 1f                	je     bd82 <init_mparams+0x42>
    bd63:	48 8d 15 e6 09 02 00 	lea    0x209e6(%rip),%rdx        # 2c750 <malloc_global_mutex>
    bd6a:	b9 01 00 00 00       	mov    $0x1,%ecx
    bd6f:	90                   	nop
    bd70:	8b 02                	mov    (%rdx),%eax
    bd72:	85 c0                	test   %eax,%eax
    bd74:	75 fa                	jne    bd70 <init_mparams+0x30>
    bd76:	89 c8                	mov    %ecx,%eax
    bd78:	87 05 d2 09 02 00    	xchg   %eax,0x209d2(%rip)        # 2c750 <malloc_global_mutex>
    bd7e:	85 c0                	test   %eax,%eax
    bd80:	75 ee                	jne    bd70 <init_mparams+0x30>
    bd82:	48 83 3d 96 09 02 00 	cmpq   $0x0,0x20996(%rip)        # 2c720 <mparams>
    bd89:	00 
    bd8a:	75 6b                	jne    bdf7 <init_mparams+0xb7>
    bd8c:	48 89 e7             	mov    %rsp,%rdi
    bd8f:	be 08 00 00 00       	mov    $0x8,%esi
    bd94:	48 c7 05 91 09 02 00 	movq   $0x1000,0x20991(%rip)        # 2c730 <mparams+0x10>
    bd9b:	00 10 00 00 
    bd9f:	48 c7 05 7e 09 02 00 	movq   $0x1000,0x2097e(%rip)        # 2c728 <mparams+0x8>
    bda6:	00 10 00 00 
    bdaa:	48 c7 05 83 09 02 00 	movq   $0xffffffffffffffff,0x20983(%rip)        # 2c738 <mparams+0x18>
    bdb1:	ff ff ff ff 
    bdb5:	48 c7 05 80 09 02 00 	movq   $0x200000,0x20980(%rip)        # 2c740 <mparams+0x20>
    bdbc:	00 00 20 00 
    bdc0:	c7 05 7e 09 02 00 02 	movl   $0x2,0x2097e(%rip)        # 2c748 <mparams+0x28>
    bdc7:	00 00 00 
    bdca:	48 c7 05 fb 08 02 00 	movq   $0x2,0x208fb(%rip)        # 2c6d0 <_gm_+0x370>
    bdd1:	02 00 00 00 
    bdd5:	e8 66 d1 ff ff       	call   8f40 <sgx_read_rand>
    bdda:	85 c0                	test   %eax,%eax
    bddc:	75 3d                	jne    be1b <init_mparams+0xdb>
    bdde:	48 8b 04 24          	mov    (%rsp),%rax
    bde2:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    bde8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    bdec:	48 83 c8 08          	or     $0x8,%rax
    bdf0:	48 89 05 29 09 02 00 	mov    %rax,0x20929(%rip)        # 2c720 <mparams>
    bdf7:	c7 05 4f 09 02 00 00 	movl   $0x0,0x2094f(%rip)        # 2c750 <malloc_global_mutex>
    bdfe:	00 00 00 
    be01:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    be06:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    be0d:	00 00 
    be0f:	75 0f                	jne    be20 <init_mparams+0xe0>
    be11:	b8 01 00 00 00       	mov    $0x1,%eax
    be16:	48 83 c4 18          	add    $0x18,%rsp
    be1a:	c3                   	ret    
    be1b:	e8 e4 57 01 00       	call   21604 <abort>
    be20:	e8 9b 3b 00 00       	call   f9c0 <__stack_chk_fail>
    be25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    be2c:	00 00 00 
    be2f:	90                   	nop

000000000000be30 <dispose_chunk>:
    be30:	55                   	push   %rbp
    be31:	4c 8d 04 16          	lea    (%rsi,%rdx,1),%r8
    be35:	53                   	push   %rbx
    be36:	48 83 ec 08          	sub    $0x8,%rsp
    be3a:	48 8b 46 08          	mov    0x8(%rsi),%rax
    be3e:	a8 01                	test   $0x1,%al
    be40:	0f 85 9a 01 00 00    	jne    bfe0 <dispose_chunk+0x1b0>
    be46:	a8 03                	test   $0x3,%al
    be48:	0f 84 8b 01 00 00    	je     bfd9 <dispose_chunk+0x1a9>
    be4e:	48 8b 06             	mov    (%rsi),%rax
    be51:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    be55:	48 29 c6             	sub    %rax,%rsi
    be58:	48 01 c2             	add    %rax,%rdx
    be5b:	49 39 f1             	cmp    %rsi,%r9
    be5e:	0f 87 14 03 00 00    	ja     c178 <dispose_chunk+0x348>
    be64:	48 39 77 20          	cmp    %rsi,0x20(%rdi)
    be68:	0f 84 22 04 00 00    	je     c290 <dispose_chunk+0x460>
    be6e:	48 89 c1             	mov    %rax,%rcx
    be71:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    be75:	48 c1 e9 03          	shr    $0x3,%rcx
    be79:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    be7f:	0f 86 53 03 00 00    	jbe    c1d8 <dispose_chunk+0x3a8>
    be85:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
    be89:	49 39 f2             	cmp    %rsi,%r10
    be8c:	0f 84 6e 05 00 00    	je     c400 <dispose_chunk+0x5d0>
    be92:	48 8b 46 10          	mov    0x10(%rsi),%rax
    be96:	49 39 c1             	cmp    %rax,%r9
    be99:	0f 87 d9 02 00 00    	ja     c178 <dispose_chunk+0x348>
    be9f:	48 39 70 18          	cmp    %rsi,0x18(%rax)
    bea3:	0f 85 cf 02 00 00    	jne    c178 <dispose_chunk+0x348>
    bea9:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    bead:	0f 85 c5 02 00 00    	jne    c178 <dispose_chunk+0x348>
    beb3:	4c 89 50 18          	mov    %r10,0x18(%rax)
    beb7:	49 89 42 10          	mov    %rax,0x10(%r10)
    bebb:	48 85 db             	test   %rbx,%rbx
    bebe:	0f 84 20 01 00 00    	je     bfe4 <dispose_chunk+0x1b4>
    bec4:	8b 46 38             	mov    0x38(%rsi),%eax
    bec7:	48 89 c1             	mov    %rax,%rcx
    beca:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    bece:	48 39 b0 58 02 00 00 	cmp    %rsi,0x258(%rax)
    bed5:	0f 84 95 04 00 00    	je     c370 <dispose_chunk+0x540>
    bedb:	49 39 d9             	cmp    %rbx,%r9
    bede:	0f 87 94 02 00 00    	ja     c178 <dispose_chunk+0x348>
    bee4:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    bee8:	0f 84 99 05 00 00    	je     c487 <dispose_chunk+0x657>
    beee:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    bef2:	4d 85 d2             	test   %r10,%r10
    bef5:	0f 84 e9 00 00 00    	je     bfe4 <dispose_chunk+0x1b4>
    befb:	4d 39 d1             	cmp    %r10,%r9
    befe:	0f 87 74 02 00 00    	ja     c178 <dispose_chunk+0x348>
    bf04:	48 8b 46 20          	mov    0x20(%rsi),%rax
    bf08:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    bf0c:	48 85 c0             	test   %rax,%rax
    bf0f:	74 11                	je     bf22 <dispose_chunk+0xf2>
    bf11:	49 39 c1             	cmp    %rax,%r9
    bf14:	0f 87 5e 02 00 00    	ja     c178 <dispose_chunk+0x348>
    bf1a:	49 89 42 20          	mov    %rax,0x20(%r10)
    bf1e:	4c 89 50 30          	mov    %r10,0x30(%rax)
    bf22:	48 8b 46 28          	mov    0x28(%rsi),%rax
    bf26:	48 85 c0             	test   %rax,%rax
    bf29:	0f 84 b5 00 00 00    	je     bfe4 <dispose_chunk+0x1b4>
    bf2f:	49 39 c1             	cmp    %rax,%r9
    bf32:	0f 87 40 02 00 00    	ja     c178 <dispose_chunk+0x348>
    bf38:	49 89 42 28          	mov    %rax,0x28(%r10)
    bf3c:	4c 89 50 30          	mov    %r10,0x30(%rax)
    bf40:	e9 9f 00 00 00       	jmp    bfe4 <dispose_chunk+0x1b4>
    bf45:	0f 1f 00             	nopl   (%rax)
    bf48:	48 89 d0             	mov    %rdx,%rax
    bf4b:	48 c1 e8 08          	shr    $0x8,%rax
    bf4f:	89 c1                	mov    %eax,%ecx
    bf51:	85 c0                	test   %eax,%eax
    bf53:	0f 84 27 02 00 00    	je     c180 <dispose_chunk+0x350>
    bf59:	3d ff ff 00 00       	cmp    $0xffff,%eax
    bf5e:	0f 87 64 03 00 00    	ja     c2c8 <dispose_chunk+0x498>
    bf64:	0f bd c0             	bsr    %eax,%eax
    bf67:	b9 26 00 00 00       	mov    $0x26,%ecx
    bf6c:	48 89 d3             	mov    %rdx,%rbx
    bf6f:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
    bf75:	83 f0 1f             	xor    $0x1f,%eax
    bf78:	29 c1                	sub    %eax,%ecx
    bf7a:	41 29 c0             	sub    %eax,%r8d
    bf7d:	b8 01 00 00 00       	mov    $0x1,%eax
    bf82:	48 d3 eb             	shr    %cl,%rbx
    bf85:	48 89 d9             	mov    %rbx,%rcx
    bf88:	83 e1 01             	and    $0x1,%ecx
    bf8b:	46 8d 1c 41          	lea    (%rcx,%r8,2),%r11d
    bf8f:	4c 89 d9             	mov    %r11,%rcx
    bf92:	4e 8d 14 dd 58 02 00 	lea    0x258(,%r11,8),%r10
    bf99:	00 
    bf9a:	d3 e0                	shl    %cl,%eax
    bf9c:	44 8b 47 04          	mov    0x4(%rdi),%r8d
    bfa0:	89 4e 38             	mov    %ecx,0x38(%rsi)
    bfa3:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    bfaa:	00 
    bfab:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    bfb2:	00 
    bfb3:	44 85 c0             	test   %r8d,%eax
    bfb6:	0f 85 4c 02 00 00    	jne    c208 <dispose_chunk+0x3d8>
    bfbc:	44 09 c0             	or     %r8d,%eax
    bfbf:	89 47 04             	mov    %eax,0x4(%rdi)
    bfc2:	4a 89 b4 df 58 02 00 	mov    %rsi,0x258(%rdi,%r11,8)
    bfc9:	00 
    bfca:	4c 01 d7             	add    %r10,%rdi
    bfcd:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    bfd1:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    bfd5:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    bfd9:	48 83 c4 08          	add    $0x8,%rsp
    bfdd:	5b                   	pop    %rbx
    bfde:	5d                   	pop    %rbp
    bfdf:	c3                   	ret    
    bfe0:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    bfe4:	4d 39 c1             	cmp    %r8,%r9
    bfe7:	0f 87 8b 01 00 00    	ja     c178 <dispose_chunk+0x348>
    bfed:	49 8b 40 08          	mov    0x8(%r8),%rax
    bff1:	a8 02                	test   $0x2,%al
    bff3:	0f 85 07 01 00 00    	jne    c100 <dispose_chunk+0x2d0>
    bff9:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    bffd:	4c 39 47 28          	cmp    %r8,0x28(%rdi)
    c001:	0f 84 e1 02 00 00    	je     c2e8 <dispose_chunk+0x4b8>
    c007:	4c 39 c3             	cmp    %r8,%rbx
    c00a:	0f 84 80 03 00 00    	je     c390 <dispose_chunk+0x560>
    c010:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c014:	4d 8b 50 18          	mov    0x18(%r8),%r10
    c018:	48 89 c1             	mov    %rax,%rcx
    c01b:	48 01 c2             	add    %rax,%rdx
    c01e:	48 c1 e9 03          	shr    $0x3,%rcx
    c022:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    c028:	0f 86 7a 01 00 00    	jbe    c1a8 <dispose_chunk+0x378>
    c02e:	49 8b 68 30          	mov    0x30(%r8),%rbp
    c032:	4d 39 c2             	cmp    %r8,%r10
    c035:	0f 84 75 03 00 00    	je     c3b0 <dispose_chunk+0x580>
    c03b:	49 8b 40 10          	mov    0x10(%r8),%rax
    c03f:	49 39 c1             	cmp    %rax,%r9
    c042:	0f 87 30 01 00 00    	ja     c178 <dispose_chunk+0x348>
    c048:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    c04c:	0f 85 26 01 00 00    	jne    c178 <dispose_chunk+0x348>
    c052:	4d 39 42 10          	cmp    %r8,0x10(%r10)
    c056:	0f 85 1c 01 00 00    	jne    c178 <dispose_chunk+0x348>
    c05c:	4c 89 50 18          	mov    %r10,0x18(%rax)
    c060:	49 89 42 10          	mov    %rax,0x10(%r10)
    c064:	48 85 ed             	test   %rbp,%rbp
    c067:	74 77                	je     c0e0 <dispose_chunk+0x2b0>
    c069:	41 8b 40 38          	mov    0x38(%r8),%eax
    c06d:	48 89 c1             	mov    %rax,%rcx
    c070:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    c074:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
    c07b:	0f 84 c7 02 00 00    	je     c348 <dispose_chunk+0x518>
    c081:	49 39 e9             	cmp    %rbp,%r9
    c084:	0f 87 ee 00 00 00    	ja     c178 <dispose_chunk+0x348>
    c08a:	4c 39 45 20          	cmp    %r8,0x20(%rbp)
    c08e:	0f 84 bc 03 00 00    	je     c450 <dispose_chunk+0x620>
    c094:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    c098:	4d 85 d2             	test   %r10,%r10
    c09b:	74 43                	je     c0e0 <dispose_chunk+0x2b0>
    c09d:	4d 39 ca             	cmp    %r9,%r10
    c0a0:	0f 82 d2 00 00 00    	jb     c178 <dispose_chunk+0x348>
    c0a6:	49 8b 40 20          	mov    0x20(%r8),%rax
    c0aa:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    c0ae:	48 85 c0             	test   %rax,%rax
    c0b1:	74 11                	je     c0c4 <dispose_chunk+0x294>
    c0b3:	49 39 c1             	cmp    %rax,%r9
    c0b6:	0f 87 bc 00 00 00    	ja     c178 <dispose_chunk+0x348>
    c0bc:	49 89 42 20          	mov    %rax,0x20(%r10)
    c0c0:	4c 89 50 30          	mov    %r10,0x30(%rax)
    c0c4:	49 8b 40 28          	mov    0x28(%r8),%rax
    c0c8:	48 85 c0             	test   %rax,%rax
    c0cb:	74 13                	je     c0e0 <dispose_chunk+0x2b0>
    c0cd:	49 39 c1             	cmp    %rax,%r9
    c0d0:	0f 87 a2 00 00 00    	ja     c178 <dispose_chunk+0x348>
    c0d6:	49 89 42 28          	mov    %rax,0x28(%r10)
    c0da:	4c 89 50 30          	mov    %r10,0x30(%rax)
    c0de:	66 90                	xchg   %ax,%ax
    c0e0:	48 89 d0             	mov    %rdx,%rax
    c0e3:	48 83 c8 01          	or     $0x1,%rax
    c0e7:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c0eb:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    c0ef:	48 39 de             	cmp    %rbx,%rsi
    c0f2:	75 23                	jne    c117 <dispose_chunk+0x2e7>
    c0f4:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c0f8:	e9 dc fe ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c0fd:	0f 1f 00             	nopl   (%rax)
    c100:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    c104:	49 89 40 08          	mov    %rax,0x8(%r8)
    c108:	48 89 d0             	mov    %rdx,%rax
    c10b:	48 83 c8 01          	or     $0x1,%rax
    c10f:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c113:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    c117:	48 89 d1             	mov    %rdx,%rcx
    c11a:	48 c1 e9 03          	shr    $0x3,%rcx
    c11e:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c125:	0f 87 1d fe ff ff    	ja     bf48 <dispose_chunk+0x118>
    c12b:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    c12e:	44 8b 07             	mov    (%rdi),%r8d
    c131:	48 8d 54 c7 48       	lea    0x48(%rdi,%rax,8),%rdx
    c136:	b8 01 00 00 00       	mov    $0x1,%eax
    c13b:	d3 e0                	shl    %cl,%eax
    c13d:	41 85 c0             	test   %eax,%r8d
    c140:	74 56                	je     c198 <dispose_chunk+0x368>
    c142:	48 8b 42 10          	mov    0x10(%rdx),%rax
    c146:	4c 39 c8             	cmp    %r9,%rax
    c149:	72 2d                	jb     c178 <dispose_chunk+0x348>
    c14b:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    c14f:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c153:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c157:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    c15b:	48 83 c4 08          	add    $0x8,%rsp
    c15f:	5b                   	pop    %rbx
    c160:	5d                   	pop    %rbp
    c161:	c3                   	ret    
    c162:	4d 39 d1             	cmp    %r10,%r9
    c165:	77 11                	ja     c178 <dispose_chunk+0x348>
    c167:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    c16b:	0f 84 44 03 00 00    	je     c4b5 <dispose_chunk+0x685>
    c171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c178:	e8 87 54 01 00       	call   21604 <abort>
    c17d:	0f 1f 00             	nopl   (%rax)
    c180:	b8 01 00 00 00       	mov    $0x1,%eax
    c185:	41 ba 58 02 00 00    	mov    $0x258,%r10d
    c18b:	41 89 cb             	mov    %ecx,%r11d
    c18e:	e9 09 fe ff ff       	jmp    bf9c <dispose_chunk+0x16c>
    c193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c198:	44 09 c0             	or     %r8d,%eax
    c19b:	89 07                	mov    %eax,(%rdi)
    c19d:	48 89 d0             	mov    %rdx,%rax
    c1a0:	eb a9                	jmp    c14b <dispose_chunk+0x31b>
    c1a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c1a8:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    c1ac:	49 8b 40 10          	mov    0x10(%r8),%rax
    c1b0:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
    c1b5:	49 39 c3             	cmp    %rax,%r11
    c1b8:	0f 85 9b 02 00 00    	jne    c459 <dispose_chunk+0x629>
    c1be:	49 39 c2             	cmp    %rax,%r10
    c1c1:	0f 85 1f 03 00 00    	jne    c4e6 <dispose_chunk+0x6b6>
    c1c7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c1cc:	d3 c0                	rol    %cl,%eax
    c1ce:	21 07                	and    %eax,(%rdi)
    c1d0:	e9 0b ff ff ff       	jmp    c0e0 <dispose_chunk+0x2b0>
    c1d5:	0f 1f 00             	nopl   (%rax)
    c1d8:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    c1dc:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c1e0:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
    c1e5:	49 39 c3             	cmp    %rax,%r11
    c1e8:	0f 85 a2 02 00 00    	jne    c490 <dispose_chunk+0x660>
    c1ee:	49 39 c2             	cmp    %rax,%r10
    c1f1:	0f 85 6b ff ff ff    	jne    c162 <dispose_chunk+0x332>
    c1f7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c1fc:	d3 c0                	rol    %cl,%eax
    c1fe:	21 07                	and    %eax,(%rdi)
    c200:	e9 df fd ff ff       	jmp    bfe4 <dispose_chunk+0x1b4>
    c205:	0f 1f 00             	nopl   (%rax)
    c208:	4a 8b bc df 58 02 00 	mov    0x258(%rdi,%r11,8),%rdi
    c20f:	00 
    c210:	49 89 d0             	mov    %rdx,%r8
    c213:	83 f9 1f             	cmp    $0x1f,%ecx
    c216:	74 36                	je     c24e <dispose_chunk+0x41e>
    c218:	d1 e9                	shr    %ecx
    c21a:	b8 39 00 00 00       	mov    $0x39,%eax
    c21f:	29 c8                	sub    %ecx,%eax
    c221:	89 c1                	mov    %eax,%ecx
    c223:	49 d3 e0             	shl    %cl,%r8
    c226:	eb 26                	jmp    c24e <dispose_chunk+0x41e>
    c228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c22f:	00 
    c230:	4c 89 c0             	mov    %r8,%rax
    c233:	4d 01 c0             	add    %r8,%r8
    c236:	48 c1 e8 3f          	shr    $0x3f,%rax
    c23a:	48 83 c0 04          	add    $0x4,%rax
    c23e:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    c242:	48 85 c9             	test   %rcx,%rcx
    c245:	0f 84 d5 00 00 00    	je     c320 <dispose_chunk+0x4f0>
    c24b:	48 89 cf             	mov    %rcx,%rdi
    c24e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    c252:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    c256:	48 39 d0             	cmp    %rdx,%rax
    c259:	75 d5                	jne    c230 <dispose_chunk+0x400>
    c25b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    c25f:	49 39 c1             	cmp    %rax,%r9
    c262:	0f 87 10 ff ff ff    	ja     c178 <dispose_chunk+0x348>
    c268:	49 39 f9             	cmp    %rdi,%r9
    c26b:	0f 87 07 ff ff ff    	ja     c178 <dispose_chunk+0x348>
    c271:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c275:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    c279:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c27d:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
    c281:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    c288:	00 
    c289:	e9 4b fd ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c28e:	66 90                	xchg   %ax,%ax
    c290:	49 8b 40 08          	mov    0x8(%r8),%rax
    c294:	48 89 c1             	mov    %rax,%rcx
    c297:	83 e1 03             	and    $0x3,%ecx
    c29a:	48 83 f9 03          	cmp    $0x3,%rcx
    c29e:	0f 85 40 fd ff ff    	jne    bfe4 <dispose_chunk+0x1b4>
    c2a4:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    c2a8:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c2ac:	49 89 40 08          	mov    %rax,0x8(%r8)
    c2b0:	48 89 d0             	mov    %rdx,%rax
    c2b3:	48 83 c8 01          	or     $0x1,%rax
    c2b7:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c2bb:	49 89 10             	mov    %rdx,(%r8)
    c2be:	e9 16 fd ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c2c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c2c8:	b8 00 00 00 80       	mov    $0x80000000,%eax
    c2cd:	41 ba 50 03 00 00    	mov    $0x350,%r10d
    c2d3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    c2d8:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
    c2de:	e9 b9 fc ff ff       	jmp    bf9c <dispose_chunk+0x16c>
    c2e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c2e8:	48 03 57 10          	add    0x10(%rdi),%rdx
    c2ec:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    c2f0:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    c2f4:	48 83 ca 01          	or     $0x1,%rdx
    c2f8:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    c2fc:	48 39 de             	cmp    %rbx,%rsi
    c2ff:	0f 85 d4 fc ff ff    	jne    bfd9 <dispose_chunk+0x1a9>
    c305:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    c30c:	00 
    c30d:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    c314:	00 
    c315:	e9 bf fc ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c31a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c320:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    c324:	49 39 d1             	cmp    %rdx,%r9
    c327:	0f 87 4b fe ff ff    	ja     c178 <dispose_chunk+0x348>
    c32d:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    c331:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    c335:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    c339:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    c33d:	e9 97 fc ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c348:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
    c34f:	4d 85 d2             	test   %r10,%r10
    c352:	0f 85 45 fd ff ff    	jne    c09d <dispose_chunk+0x26d>
    c358:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c35d:	d3 c0                	rol    %cl,%eax
    c35f:	21 47 04             	and    %eax,0x4(%rdi)
    c362:	e9 79 fd ff ff       	jmp    c0e0 <dispose_chunk+0x2b0>
    c367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c36e:	00 00 
    c370:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
    c377:	4d 85 d2             	test   %r10,%r10
    c37a:	0f 85 7b fb ff ff    	jne    befb <dispose_chunk+0xcb>
    c380:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c385:	d3 c0                	rol    %cl,%eax
    c387:	21 47 04             	and    %eax,0x4(%rdi)
    c38a:	e9 55 fc ff ff       	jmp    bfe4 <dispose_chunk+0x1b4>
    c38f:	90                   	nop
    c390:	48 03 57 08          	add    0x8(%rdi),%rdx
    c394:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    c398:	48 89 d0             	mov    %rdx,%rax
    c39b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c39f:	48 83 c8 01          	or     $0x1,%rax
    c3a3:	48 89 46 08          	mov    %rax,0x8(%rsi)
    c3a7:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    c3ab:	e9 29 fc ff ff       	jmp    bfd9 <dispose_chunk+0x1a9>
    c3b0:	49 8b 40 28          	mov    0x28(%r8),%rax
    c3b4:	49 8d 48 28          	lea    0x28(%r8),%rcx
    c3b8:	48 85 c0             	test   %rax,%rax
    c3bb:	0f 84 01 01 00 00    	je     c4c2 <dispose_chunk+0x692>
    c3c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c3c8:	49 89 cb             	mov    %rcx,%r11
    c3cb:	49 89 c2             	mov    %rax,%r10
    c3ce:	48 8d 48 28          	lea    0x28(%rax),%rcx
    c3d2:	48 8b 40 28          	mov    0x28(%rax),%rax
    c3d6:	48 85 c0             	test   %rax,%rax
    c3d9:	75 ed                	jne    c3c8 <dispose_chunk+0x598>
    c3db:	49 8b 42 20          	mov    0x20(%r10),%rax
    c3df:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    c3e3:	48 85 c0             	test   %rax,%rax
    c3e6:	75 e0                	jne    c3c8 <dispose_chunk+0x598>
    c3e8:	4d 39 d9             	cmp    %r11,%r9
    c3eb:	0f 87 87 fd ff ff    	ja     c178 <dispose_chunk+0x348>
    c3f1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    c3f8:	e9 67 fc ff ff       	jmp    c064 <dispose_chunk+0x234>
    c3fd:	0f 1f 00             	nopl   (%rax)
    c400:	48 8b 46 28          	mov    0x28(%rsi),%rax
    c404:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    c408:	48 85 c0             	test   %rax,%rax
    c40b:	0f 84 c3 00 00 00    	je     c4d4 <dispose_chunk+0x6a4>
    c411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c418:	49 89 cb             	mov    %rcx,%r11
    c41b:	49 89 c2             	mov    %rax,%r10
    c41e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    c422:	48 8b 40 28          	mov    0x28(%rax),%rax
    c426:	48 85 c0             	test   %rax,%rax
    c429:	75 ed                	jne    c418 <dispose_chunk+0x5e8>
    c42b:	49 8b 42 20          	mov    0x20(%r10),%rax
    c42f:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    c433:	48 85 c0             	test   %rax,%rax
    c436:	75 e0                	jne    c418 <dispose_chunk+0x5e8>
    c438:	4d 39 d9             	cmp    %r11,%r9
    c43b:	0f 87 37 fd ff ff    	ja     c178 <dispose_chunk+0x348>
    c441:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    c448:	e9 6e fa ff ff       	jmp    bebb <dispose_chunk+0x8b>
    c44d:	0f 1f 00             	nopl   (%rax)
    c450:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    c454:	e9 3f fc ff ff       	jmp    c098 <dispose_chunk+0x268>
    c459:	49 39 c1             	cmp    %rax,%r9
    c45c:	0f 87 16 fd ff ff    	ja     c178 <dispose_chunk+0x348>
    c462:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    c466:	0f 85 0c fd ff ff    	jne    c178 <dispose_chunk+0x348>
    c46c:	49 39 c2             	cmp    %rax,%r10
    c46f:	0f 84 52 fd ff ff    	je     c1c7 <dispose_chunk+0x397>
    c475:	4d 39 da             	cmp    %r11,%r10
    c478:	75 6c                	jne    c4e6 <dispose_chunk+0x6b6>
    c47a:	4c 89 50 18          	mov    %r10,0x18(%rax)
    c47e:	49 89 42 10          	mov    %rax,0x10(%r10)
    c482:	e9 59 fc ff ff       	jmp    c0e0 <dispose_chunk+0x2b0>
    c487:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    c48b:	e9 62 fa ff ff       	jmp    bef2 <dispose_chunk+0xc2>
    c490:	49 39 c1             	cmp    %rax,%r9
    c493:	0f 87 df fc ff ff    	ja     c178 <dispose_chunk+0x348>
    c499:	48 39 70 18          	cmp    %rsi,0x18(%rax)
    c49d:	0f 85 d5 fc ff ff    	jne    c178 <dispose_chunk+0x348>
    c4a3:	49 39 c2             	cmp    %rax,%r10
    c4a6:	0f 84 4b fd ff ff    	je     c1f7 <dispose_chunk+0x3c7>
    c4ac:	4d 39 d3             	cmp    %r10,%r11
    c4af:	0f 85 ad fc ff ff    	jne    c162 <dispose_chunk+0x332>
    c4b5:	4c 89 50 18          	mov    %r10,0x18(%rax)
    c4b9:	49 89 42 10          	mov    %rax,0x10(%r10)
    c4bd:	e9 22 fb ff ff       	jmp    bfe4 <dispose_chunk+0x1b4>
    c4c2:	49 8b 40 20          	mov    0x20(%r8),%rax
    c4c6:	48 85 c0             	test   %rax,%rax
    c4c9:	74 2f                	je     c4fa <dispose_chunk+0x6ca>
    c4cb:	49 8d 48 20          	lea    0x20(%r8),%rcx
    c4cf:	e9 f4 fe ff ff       	jmp    c3c8 <dispose_chunk+0x598>
    c4d4:	48 8b 46 20          	mov    0x20(%rsi),%rax
    c4d8:	48 85 c0             	test   %rax,%rax
    c4db:	74 51                	je     c52e <dispose_chunk+0x6fe>
    c4dd:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    c4e1:	e9 32 ff ff ff       	jmp    c418 <dispose_chunk+0x5e8>
    c4e6:	4d 39 ca             	cmp    %r9,%r10
    c4e9:	0f 82 89 fc ff ff    	jb     c178 <dispose_chunk+0x348>
    c4ef:	4d 39 42 10          	cmp    %r8,0x10(%r10)
    c4f3:	74 85                	je     c47a <dispose_chunk+0x64a>
    c4f5:	e9 7e fc ff ff       	jmp    c178 <dispose_chunk+0x348>
    c4fa:	48 85 ed             	test   %rbp,%rbp
    c4fd:	0f 84 dd fb ff ff    	je     c0e0 <dispose_chunk+0x2b0>
    c503:	41 8b 40 38          	mov    0x38(%r8),%eax
    c507:	45 31 d2             	xor    %r10d,%r10d
    c50a:	48 89 c1             	mov    %rax,%rcx
    c50d:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    c511:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
    c518:	0f 85 63 fb ff ff    	jne    c081 <dispose_chunk+0x251>
    c51e:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    c525:	00 00 00 00 
    c529:	e9 2a fe ff ff       	jmp    c358 <dispose_chunk+0x528>
    c52e:	48 85 db             	test   %rbx,%rbx
    c531:	0f 84 ad fa ff ff    	je     bfe4 <dispose_chunk+0x1b4>
    c537:	41 8b 42 38          	mov    0x38(%r10),%eax
    c53b:	45 31 d2             	xor    %r10d,%r10d
    c53e:	48 89 c1             	mov    %rax,%rcx
    c541:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
    c545:	48 3b b0 58 02 00 00 	cmp    0x258(%rax),%rsi
    c54c:	0f 85 89 f9 ff ff    	jne    bedb <dispose_chunk+0xab>
    c552:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
    c559:	00 00 00 00 
    c55d:	e9 1e fe ff ff       	jmp    c380 <dispose_chunk+0x550>
    c562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c569:	00 00 00 
    c56c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c570 <dlmalloc>:
    c570:	f3 0f 1e fa          	endbr64 
    c574:	41 57                	push   %r15
    c576:	41 56                	push   %r14
    c578:	41 55                	push   %r13
    c57a:	41 54                	push   %r12
    c57c:	55                   	push   %rbp
    c57d:	53                   	push   %rbx
    c57e:	48 89 fb             	mov    %rdi,%rbx
    c581:	48 83 ec 18          	sub    $0x18,%rsp
    c585:	48 83 3d 93 01 02 00 	cmpq   $0x0,0x20193(%rip)        # 2c720 <mparams>
    c58c:	00 
    c58d:	0f 84 7d 03 00 00    	je     c910 <dlmalloc+0x3a0>
    c593:	f6 05 36 01 02 00 02 	testb  $0x2,0x20136(%rip)        # 2c6d0 <_gm_+0x370>
    c59a:	0f 85 38 03 00 00    	jne    c8d8 <dlmalloc+0x368>
    c5a0:	48 81 fb e0 00 00 00 	cmp    $0xe0,%rbx
    c5a7:	0f 87 c3 00 00 00    	ja     c670 <dlmalloc+0x100>
    c5ad:	48 83 fb 0e          	cmp    $0xe,%rbx
    c5b1:	0f 87 09 03 00 00    	ja     c8c0 <dlmalloc+0x350>
    c5b7:	b9 04 00 00 00       	mov    $0x4,%ecx
    c5bc:	41 bd 20 00 00 00    	mov    $0x20,%r13d
    c5c2:	8b 15 98 fd 01 00    	mov    0x1fd98(%rip),%edx        # 2c360 <_gm_>
    c5c8:	48 8d 2d 91 fd 01 00 	lea    0x1fd91(%rip),%rbp        # 2c360 <_gm_>
    c5cf:	89 d0                	mov    %edx,%eax
    c5d1:	d3 e8                	shr    %cl,%eax
    c5d3:	a8 03                	test   $0x3,%al
    c5d5:	0f 84 45 03 00 00    	je     c920 <dlmalloc+0x3b0>
    c5db:	f7 d0                	not    %eax
    c5dd:	83 e0 01             	and    $0x1,%eax
    c5e0:	01 c1                	add    %eax,%ecx
    c5e2:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    c5e5:	48 8d 74 c5 48       	lea    0x48(%rbp,%rax,8),%rsi
    c5ea:	4c 8b 66 10          	mov    0x10(%rsi),%r12
    c5ee:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    c5f3:	48 39 c6             	cmp    %rax,%rsi
    c5f6:	0f 84 e4 0d 00 00    	je     d3e0 <dlmalloc+0xe70>
    c5fc:	48 39 05 75 fd 01 00 	cmp    %rax,0x1fd75(%rip)        # 2c378 <_gm_+0x18>
    c603:	0f 87 3f 07 00 00    	ja     cd48 <dlmalloc+0x7d8>
    c609:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    c60d:	0f 85 35 07 00 00    	jne    cd48 <dlmalloc+0x7d8>
    c613:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c617:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c61b:	c1 e1 03             	shl    $0x3,%ecx
    c61e:	48 33 2d fb 00 02 00 	xor    0x200fb(%rip),%rbp        # 2c720 <mparams>
    c625:	89 c8                	mov    %ecx,%eax
    c627:	83 c8 03             	or     $0x3,%eax
    c62a:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    c62f:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
    c633:	49 83 c4 10          	add    $0x10,%r12
    c637:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    c63c:	48 89 28             	mov    %rbp,(%rax)
    c63f:	4d 85 e4             	test   %r12,%r12
    c642:	0f 85 20 02 00 00    	jne    c868 <dlmalloc+0x2f8>
    c648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c64f:	00 
    c650:	45 31 e4             	xor    %r12d,%r12d
    c653:	f6 05 76 00 02 00 02 	testb  $0x2,0x20076(%rip)        # 2c6d0 <_gm_+0x370>
    c65a:	0f 84 45 02 00 00    	je     c8a5 <dlmalloc+0x335>
    c660:	c7 05 6a 00 02 00 00 	movl   $0x0,0x2006a(%rip)        # 2c6d4 <_gm_+0x374>
    c667:	00 00 00 
    c66a:	e9 36 02 00 00       	jmp    c8a5 <dlmalloc+0x335>
    c66f:	90                   	nop
    c670:	48 8b 3d f1 fc 01 00 	mov    0x1fcf1(%rip),%rdi        # 2c368 <_gm_+0x8>
    c677:	48 8d 2d e2 fc 01 00 	lea    0x1fce2(%rip),%rbp        # 2c360 <_gm_>
    c67e:	49 89 f8             	mov    %rdi,%r8
    c681:	48 81 fb 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbx
    c688:	0f 86 62 01 00 00    	jbe    c7f0 <dlmalloc+0x280>
    c68e:	48 8b 05 8b 00 02 00 	mov    0x2008b(%rip),%rax        # 2c720 <mparams>
    c695:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
    c699:	0f 84 01 04 00 00    	je     caa0 <dlmalloc+0x530>
    c69f:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    c6a6:	48 85 c0             	test   %rax,%rax
    c6a9:	75 a5                	jne    c650 <dlmalloc+0xe0>
    c6ab:	e8 90 f6 ff ff       	call   bd40 <init_mparams>
    c6b0:	48 8b 05 79 00 02 00 	mov    0x20079(%rip),%rax        # 2c730 <mparams+0x10>
    c6b7:	4d 8d 44 05 5f       	lea    0x5f(%r13,%rax,1),%r8
    c6bc:	48 f7 d8             	neg    %rax
    c6bf:	49 21 c0             	and    %rax,%r8
    c6c2:	4d 39 c5             	cmp    %r8,%r13
    c6c5:	73 89                	jae    c650 <dlmalloc+0xe0>
    c6c7:	48 8b 05 fa ff 01 00 	mov    0x1fffa(%rip),%rax        # 2c6c8 <_gm_+0x368>
    c6ce:	48 85 c0             	test   %rax,%rax
    c6d1:	74 1d                	je     c6f0 <dlmalloc+0x180>
    c6d3:	48 8b 0d de ff 01 00 	mov    0x1ffde(%rip),%rcx        # 2c6b8 <_gm_+0x358>
    c6da:	49 8d 14 08          	lea    (%r8,%rcx,1),%rdx
    c6de:	48 39 d0             	cmp    %rdx,%rax
    c6e1:	0f 82 69 ff ff ff    	jb     c650 <dlmalloc+0xe0>
    c6e7:	48 39 d1             	cmp    %rdx,%rcx
    c6ea:	0f 83 60 ff ff ff    	jae    c650 <dlmalloc+0xe0>
    c6f0:	f6 05 d9 ff 01 00 04 	testb  $0x4,0x1ffd9(%rip)        # 2c6d0 <_gm_+0x370>
    c6f7:	0f 85 cd 00 00 00    	jne    c7ca <dlmalloc+0x25a>
    c6fd:	48 8b 15 84 fc 01 00 	mov    0x1fc84(%rip),%rdx        # 2c388 <_gm_+0x28>
    c704:	48 85 d2             	test   %rdx,%rdx
    c707:	74 25                	je     c72e <dlmalloc+0x1be>
    c709:	4c 8d 35 c8 ff 01 00 	lea    0x1ffc8(%rip),%r14        # 2c6d8 <_gm_+0x378>
    c710:	49 8b 06             	mov    (%r14),%rax
    c713:	48 39 c2             	cmp    %rax,%rdx
    c716:	72 0d                	jb     c725 <dlmalloc+0x1b5>
    c718:	49 03 46 08          	add    0x8(%r14),%rax
    c71c:	48 39 c2             	cmp    %rax,%rdx
    c71f:	0f 82 a8 0f 00 00    	jb     d6cd <dlmalloc+0x115d>
    c725:	4d 8b 76 10          	mov    0x10(%r14),%r14
    c729:	4d 85 f6             	test   %r14,%r14
    c72c:	75 e2                	jne    c710 <dlmalloc+0x1a0>
    c72e:	b8 01 00 00 00       	mov    $0x1,%eax
    c733:	87 05 17 00 02 00    	xchg   %eax,0x20017(%rip)        # 2c750 <malloc_global_mutex>
    c739:	85 c0                	test   %eax,%eax
    c73b:	0f 85 20 08 00 00    	jne    cf61 <dlmalloc+0x9f1>
    c741:	31 ff                	xor    %edi,%edi
    c743:	4c 89 04 24          	mov    %r8,(%rsp)
    c747:	e8 04 f3 ff ff       	call   ba50 <sbrk>
    c74c:	4c 8b 04 24          	mov    (%rsp),%r8
    c750:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    c754:	49 89 c6             	mov    %rax,%r14
    c757:	74 67                	je     c7c0 <dlmalloc+0x250>
    c759:	48 8b 15 c8 ff 01 00 	mov    0x1ffc8(%rip),%rdx        # 2c728 <mparams+0x8>
    c760:	4d 89 c7             	mov    %r8,%r15
    c763:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    c767:	49 85 c6             	test   %rax,%r14
    c76a:	74 0f                	je     c77b <dlmalloc+0x20b>
    c76c:	4c 01 f0             	add    %r14,%rax
    c76f:	48 f7 da             	neg    %rdx
    c772:	4d 29 f7             	sub    %r14,%r15
    c775:	48 21 d0             	and    %rdx,%rax
    c778:	49 01 c7             	add    %rax,%r15
    c77b:	4d 39 fd             	cmp    %r15,%r13
    c77e:	73 40                	jae    c7c0 <dlmalloc+0x250>
    c780:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    c787:	ff ff 7f 
    c78a:	49 39 c7             	cmp    %rax,%r15
    c78d:	77 31                	ja     c7c0 <dlmalloc+0x250>
    c78f:	48 8b 0d 32 ff 01 00 	mov    0x1ff32(%rip),%rcx        # 2c6c8 <_gm_+0x368>
    c796:	48 85 c9             	test   %rcx,%rcx
    c799:	0f 84 6c 14 00 00    	je     dc0b <dlmalloc+0x169b>
    c79f:	48 8b 15 12 ff 01 00 	mov    0x1ff12(%rip),%rdx        # 2c6b8 <_gm_+0x358>
    c7a6:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
    c7aa:	48 39 c1             	cmp    %rax,%rcx
    c7ad:	72 11                	jb     c7c0 <dlmalloc+0x250>
    c7af:	48 39 c2             	cmp    %rax,%rdx
    c7b2:	0f 82 53 14 00 00    	jb     dc0b <dlmalloc+0x169b>
    c7b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c7bf:	00 
    c7c0:	c7 05 86 ff 01 00 00 	movl   $0x0,0x1ff86(%rip)        # 2c750 <malloc_global_mutex>
    c7c7:	00 00 00 
    c7ca:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    c7d1:	ff ff 7f 
    c7d4:	49 39 c0             	cmp    %rax,%r8
    c7d7:	0f 86 03 0d 00 00    	jbe    d4e0 <dlmalloc+0xf70>
    c7dd:	e8 ce 39 00 00       	call   101b0 <__errno>
    c7e2:	45 31 e4             	xor    %r12d,%r12d
    c7e5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    c7eb:	e9 a8 00 00 00       	jmp    c898 <dlmalloc+0x328>
    c7f0:	44 8b 0d 6d fb 01 00 	mov    0x1fb6d(%rip),%r9d        # 2c364 <_gm_+0x4>
    c7f7:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
    c7fb:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    c7ff:	45 85 c9             	test   %r9d,%r9d
    c802:	0f 85 d8 02 00 00    	jne    cae0 <dlmalloc+0x570>
    c808:	48 8b 35 11 ff 01 00 	mov    0x1ff11(%rip),%rsi        # 2c720 <mparams>
    c80f:	49 39 fd             	cmp    %rdi,%r13
    c812:	0f 86 14 01 00 00    	jbe    c92c <dlmalloc+0x3bc>
    c818:	48 8b 05 51 fb 01 00 	mov    0x1fb51(%rip),%rax        # 2c370 <_gm_+0x10>
    c81f:	49 39 c5             	cmp    %rax,%r13
    c822:	0f 83 a8 0c 00 00    	jae    d4d0 <dlmalloc+0xf60>
    c828:	4c 8b 25 59 fb 01 00 	mov    0x1fb59(%rip),%r12        # 2c388 <_gm_+0x28>
    c82f:	4c 29 e8             	sub    %r13,%rax
    c832:	48 31 f5             	xor    %rsi,%rbp
    c835:	48 89 05 34 fb 01 00 	mov    %rax,0x1fb34(%rip)        # 2c370 <_gm_+0x10>
    c83c:	48 83 c8 01          	or     $0x1,%rax
    c840:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
    c844:	49 83 cd 03          	or     $0x3,%r13
    c848:	49 83 c4 10          	add    $0x10,%r12
    c84c:	48 89 15 35 fb 01 00 	mov    %rdx,0x1fb35(%rip)        # 2c388 <_gm_+0x28>
    c853:	48 89 42 08          	mov    %rax,0x8(%rdx)
    c857:	4d 89 6c 24 f8       	mov    %r13,-0x8(%r12)
    c85c:	48 89 2a             	mov    %rbp,(%rdx)
    c85f:	4d 85 e4             	test   %r12,%r12
    c862:	0f 84 e8 fd ff ff    	je     c650 <dlmalloc+0xe0>
    c868:	e8 c3 df ff ff       	call   a830 <get_heap_base>
    c86d:	49 39 c4             	cmp    %rax,%r12
    c870:	0f 82 d2 04 00 00    	jb     cd48 <dlmalloc+0x7d8>
    c876:	4c 89 e0             	mov    %r12,%rax
    c879:	48 f7 d0             	not    %rax
    c87c:	48 39 d8             	cmp    %rbx,%rax
    c87f:	0f 82 c3 04 00 00    	jb     cd48 <dlmalloc+0x7d8>
    c885:	31 ff                	xor    %edi,%edi
    c887:	4c 01 e3             	add    %r12,%rbx
    c88a:	e8 c1 f1 ff ff       	call   ba50 <sbrk>
    c88f:	48 39 d8             	cmp    %rbx,%rax
    c892:	0f 82 b0 04 00 00    	jb     cd48 <dlmalloc+0x7d8>
    c898:	f6 05 31 fe 01 00 02 	testb  $0x2,0x1fe31(%rip)        # 2c6d0 <_gm_+0x370>
    c89f:	0f 85 bb fd ff ff    	jne    c660 <dlmalloc+0xf0>
    c8a5:	48 83 c4 18          	add    $0x18,%rsp
    c8a9:	4c 89 e0             	mov    %r12,%rax
    c8ac:	5b                   	pop    %rbx
    c8ad:	5d                   	pop    %rbp
    c8ae:	41 5c                	pop    %r12
    c8b0:	41 5d                	pop    %r13
    c8b2:	41 5e                	pop    %r14
    c8b4:	41 5f                	pop    %r15
    c8b6:	c3                   	ret    
    c8b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c8be:	00 00 
    c8c0:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
    c8c4:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    c8c8:	4c 89 e9             	mov    %r13,%rcx
    c8cb:	48 c1 e9 03          	shr    $0x3,%rcx
    c8cf:	e9 ee fc ff ff       	jmp    c5c2 <dlmalloc+0x52>
    c8d4:	0f 1f 40 00          	nopl   0x0(%rax)
    c8d8:	b8 01 00 00 00       	mov    $0x1,%eax
    c8dd:	87 05 f1 fd 01 00    	xchg   %eax,0x1fdf1(%rip)        # 2c6d4 <_gm_+0x374>
    c8e3:	85 c0                	test   %eax,%eax
    c8e5:	0f 84 b5 fc ff ff    	je     c5a0 <dlmalloc+0x30>
    c8eb:	ba 01 00 00 00       	mov    $0x1,%edx
    c8f0:	8b 05 de fd 01 00    	mov    0x1fdde(%rip),%eax        # 2c6d4 <_gm_+0x374>
    c8f6:	85 c0                	test   %eax,%eax
    c8f8:	75 f6                	jne    c8f0 <dlmalloc+0x380>
    c8fa:	89 d0                	mov    %edx,%eax
    c8fc:	87 05 d2 fd 01 00    	xchg   %eax,0x1fdd2(%rip)        # 2c6d4 <_gm_+0x374>
    c902:	85 c0                	test   %eax,%eax
    c904:	75 ea                	jne    c8f0 <dlmalloc+0x380>
    c906:	e9 95 fc ff ff       	jmp    c5a0 <dlmalloc+0x30>
    c90b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c910:	e8 2b f4 ff ff       	call   bd40 <init_mparams>
    c915:	e9 79 fc ff ff       	jmp    c593 <dlmalloc+0x23>
    c91a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c920:	48 8b 3d 41 fa 01 00 	mov    0x1fa41(%rip),%rdi        # 2c368 <_gm_+0x8>
    c927:	4c 39 ef             	cmp    %r13,%rdi
    c92a:	72 5c                	jb     c988 <dlmalloc+0x418>
    c92c:	4c 8b 25 4d fa 01 00 	mov    0x1fa4d(%rip),%r12        # 2c380 <_gm_+0x20>
    c933:	48 89 f8             	mov    %rdi,%rax
    c936:	48 33 2d e3 fd 01 00 	xor    0x1fde3(%rip),%rbp        # 2c720 <mparams>
    c93d:	4c 29 e8             	sub    %r13,%rax
    c940:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    c944:	48 83 f8 1f          	cmp    $0x1f,%rax
    c948:	0f 86 4c 0d 00 00    	jbe    d69a <dlmalloc+0x112a>
    c94e:	48 89 c6             	mov    %rax,%rsi
    c951:	4b 8d 0c 2c          	lea    (%r12,%r13,1),%rcx
    c955:	49 83 cd 03          	or     $0x3,%r13
    c959:	48 89 05 08 fa 01 00 	mov    %rax,0x1fa08(%rip)        # 2c368 <_gm_+0x8>
    c960:	48 83 ce 01          	or     $0x1,%rsi
    c964:	48 89 0d 15 fa 01 00 	mov    %rcx,0x1fa15(%rip)        # 2c380 <_gm_+0x20>
    c96b:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    c96f:	48 89 02             	mov    %rax,(%rdx)
    c972:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    c977:	48 89 29             	mov    %rbp,(%rcx)
    c97a:	49 83 c4 10          	add    $0x10,%r12
    c97e:	e9 dc fe ff ff       	jmp    c85f <dlmalloc+0x2ef>
    c983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c988:	85 c0                	test   %eax,%eax
    c98a:	0f 84 c0 03 00 00    	je     cd50 <dlmalloc+0x7e0>
    c990:	be 01 00 00 00       	mov    $0x1,%esi
    c995:	d3 e0                	shl    %cl,%eax
    c997:	41 89 f0             	mov    %esi,%r8d
    c99a:	41 d3 e0             	shl    %cl,%r8d
    c99d:	47 8d 0c 00          	lea    (%r8,%r8,1),%r9d
    c9a1:	45 89 c8             	mov    %r9d,%r8d
    c9a4:	41 f7 d8             	neg    %r8d
    c9a7:	45 09 c8             	or     %r9d,%r8d
    c9aa:	44 21 c0             	and    %r8d,%eax
    c9ad:	89 c1                	mov    %eax,%ecx
    c9af:	f7 d9                	neg    %ecx
    c9b1:	21 c8                	and    %ecx,%eax
    c9b3:	31 c9                	xor    %ecx,%ecx
    c9b5:	f3 0f bc c8          	tzcnt  %eax,%ecx
    c9b9:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    c9bc:	4c 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%r8
    c9c1:	4d 8b 60 10          	mov    0x10(%r8),%r12
    c9c5:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    c9ca:	49 39 c0             	cmp    %rax,%r8
    c9cd:	0f 84 77 08 00 00    	je     d24a <dlmalloc+0xcda>
    c9d3:	48 39 05 9e f9 01 00 	cmp    %rax,0x1f99e(%rip)        # 2c378 <_gm_+0x18>
    c9da:	0f 87 68 03 00 00    	ja     cd48 <dlmalloc+0x7d8>
    c9e0:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    c9e4:	0f 85 5e 03 00 00    	jne    cd48 <dlmalloc+0x7d8>
    c9ea:	4c 89 40 18          	mov    %r8,0x18(%rax)
    c9ee:	49 89 40 10          	mov    %rax,0x10(%r8)
    c9f2:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    c9f9:	48 8b 35 20 fd 01 00 	mov    0x1fd20(%rip),%rsi        # 2c720 <mparams>
    ca00:	48 89 c2             	mov    %rax,%rdx
    ca03:	48 89 c1             	mov    %rax,%rcx
    ca06:	4c 01 e0             	add    %r12,%rax
    ca09:	4c 29 ea             	sub    %r13,%rdx
    ca0c:	48 31 ee             	xor    %rbp,%rsi
    ca0f:	48 83 fa 1f          	cmp    $0x1f,%rdx
    ca13:	0f 86 9d 0c 00 00    	jbe    d6b6 <dlmalloc+0x1146>
    ca19:	4c 89 e9             	mov    %r13,%rcx
    ca1c:	4d 01 e5             	add    %r12,%r13
    ca1f:	48 83 c9 03          	or     $0x3,%rcx
    ca23:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    ca28:	48 89 d1             	mov    %rdx,%rcx
    ca2b:	48 83 c9 01          	or     $0x1,%rcx
    ca2f:	49 89 75 00          	mov    %rsi,0x0(%r13)
    ca33:	49 89 4d 08          	mov    %rcx,0x8(%r13)
    ca37:	48 89 10             	mov    %rdx,(%rax)
    ca3a:	48 85 ff             	test   %rdi,%rdi
    ca3d:	74 4e                	je     ca8d <dlmalloc+0x51d>
    ca3f:	48 c1 ef 03          	shr    $0x3,%rdi
    ca43:	48 8b 05 36 f9 01 00 	mov    0x1f936(%rip),%rax        # 2c380 <_gm_+0x20>
    ca4a:	8d 34 3f             	lea    (%rdi,%rdi,1),%esi
    ca4d:	48 89 f9             	mov    %rdi,%rcx
    ca50:	8b 3d 0a f9 01 00    	mov    0x1f90a(%rip),%edi        # 2c360 <_gm_>
    ca56:	4c 8d 44 f5 48       	lea    0x48(%rbp,%rsi,8),%r8
    ca5b:	be 01 00 00 00       	mov    $0x1,%esi
    ca60:	d3 e6                	shl    %cl,%esi
    ca62:	89 f1                	mov    %esi,%ecx
    ca64:	85 f7                	test   %esi,%edi
    ca66:	0f 84 a3 0e 00 00    	je     d90f <dlmalloc+0x139f>
    ca6c:	49 8b 48 10          	mov    0x10(%r8),%rcx
    ca70:	48 3b 0d 01 f9 01 00 	cmp    0x1f901(%rip),%rcx        # 2c378 <_gm_+0x18>
    ca77:	0f 82 cb 02 00 00    	jb     cd48 <dlmalloc+0x7d8>
    ca7d:	49 89 40 10          	mov    %rax,0x10(%r8)
    ca81:	48 89 41 18          	mov    %rax,0x18(%rcx)
    ca85:	48 89 48 10          	mov    %rcx,0x10(%rax)
    ca89:	4c 89 40 18          	mov    %r8,0x18(%rax)
    ca8d:	48 89 15 d4 f8 01 00 	mov    %rdx,0x1f8d4(%rip)        # 2c368 <_gm_+0x8>
    ca94:	4c 89 2d e5 f8 01 00 	mov    %r13,0x1f8e5(%rip)        # 2c380 <_gm_+0x20>
    ca9b:	e9 da fe ff ff       	jmp    c97a <dlmalloc+0x40a>
    caa0:	4c 8b 25 d9 f8 01 00 	mov    0x1f8d9(%rip),%r12        # 2c380 <_gm_+0x20>
    caa7:	48 31 c5             	xor    %rax,%rbp
    caaa:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
    caaf:	48 c7 05 ae f8 01 00 	movq   $0x0,0x1f8ae(%rip)        # 2c368 <_gm_+0x8>
    cab6:	00 00 00 00 
    caba:	48 c7 05 bb f8 01 00 	movq   $0x0,0x1f8bb(%rip)        # 2c380 <_gm_+0x20>
    cac1:	00 00 00 00 
    cac5:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    caca:	48 89 2a             	mov    %rbp,(%rdx)
    cacd:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    cad2:	e9 a3 fe ff ff       	jmp    c97a <dlmalloc+0x40a>
    cad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cade:	00 00 
    cae0:	4c 89 e8             	mov    %r13,%rax
    cae3:	4c 89 ee             	mov    %r13,%rsi
    cae6:	48 c1 e8 08          	shr    $0x8,%rax
    caea:	48 f7 de             	neg    %rsi
    caed:	41 89 c2             	mov    %eax,%r10d
    caf0:	85 c0                	test   %eax,%eax
    caf2:	0f 85 40 04 00 00    	jne    cf38 <dlmalloc+0x9c8>
    caf8:	48 8b 05 b9 fa 01 00 	mov    0x1fab9(%rip),%rax        # 2c5b8 <_gm_+0x258>
    caff:	b9 39 00 00 00       	mov    $0x39,%ecx
    cb04:	48 85 c0             	test   %rax,%rax
    cb07:	0f 84 d8 0b 00 00    	je     d6e5 <dlmalloc+0x1175>
    cb0d:	4c 89 ea             	mov    %r13,%rdx
    cb10:	48 d3 e2             	shl    %cl,%rdx
    cb13:	48 89 d1             	mov    %rdx,%rcx
    cb16:	45 31 db             	xor    %r11d,%r11d
    cb19:	45 31 e4             	xor    %r12d,%r12d
    cb1c:	eb 05                	jmp    cb23 <dlmalloc+0x5b3>
    cb1e:	66 90                	xchg   %ax,%ax
    cb20:	48 01 c9             	add    %rcx,%rcx
    cb23:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cb27:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    cb2b:	4c 29 ea             	sub    %r13,%rdx
    cb2e:	48 39 f2             	cmp    %rsi,%rdx
    cb31:	73 0f                	jae    cb42 <dlmalloc+0x5d2>
    cb33:	48 85 d2             	test   %rdx,%rdx
    cb36:	0f 84 67 0b 00 00    	je     d6a3 <dlmalloc+0x1133>
    cb3c:	48 89 d6             	mov    %rdx,%rsi
    cb3f:	49 89 c4             	mov    %rax,%r12
    cb42:	48 89 ca             	mov    %rcx,%rdx
    cb45:	4c 8b 70 28          	mov    0x28(%rax),%r14
    cb49:	48 c1 ea 3f          	shr    $0x3f,%rdx
    cb4d:	48 83 c2 04          	add    $0x4,%rdx
    cb51:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    cb55:	4d 85 f6             	test   %r14,%r14
    cb58:	74 07                	je     cb61 <dlmalloc+0x5f1>
    cb5a:	49 39 c6             	cmp    %rax,%r14
    cb5d:	4d 0f 45 de          	cmovne %r14,%r11
    cb61:	48 85 c0             	test   %rax,%rax
    cb64:	75 ba                	jne    cb20 <dlmalloc+0x5b0>
    cb66:	4c 89 e0             	mov    %r12,%rax
    cb69:	4c 09 d8             	or     %r11,%rax
    cb6c:	0f 84 8d 0a 00 00    	je     d5ff <dlmalloc+0x108f>
    cb72:	48 89 f2             	mov    %rsi,%rdx
    cb75:	4d 85 db             	test   %r11,%r11
    cb78:	74 31                	je     cbab <dlmalloc+0x63b>
    cb7a:	4c 89 d8             	mov    %r11,%rax
    cb7d:	eb 04                	jmp    cb83 <dlmalloc+0x613>
    cb7f:	90                   	nop
    cb80:	48 89 c8             	mov    %rcx,%rax
    cb83:	48 8b 70 08          	mov    0x8(%rax),%rsi
    cb87:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    cb8b:	4c 29 ee             	sub    %r13,%rsi
    cb8e:	48 39 d6             	cmp    %rdx,%rsi
    cb91:	73 06                	jae    cb99 <dlmalloc+0x629>
    cb93:	48 89 f2             	mov    %rsi,%rdx
    cb96:	49 89 c4             	mov    %rax,%r12
    cb99:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cb9d:	48 85 c9             	test   %rcx,%rcx
    cba0:	75 de                	jne    cb80 <dlmalloc+0x610>
    cba2:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cba6:	48 85 c9             	test   %rcx,%rcx
    cba9:	75 d5                	jne    cb80 <dlmalloc+0x610>
    cbab:	4d 85 e4             	test   %r12,%r12
    cbae:	0f 84 54 fc ff ff    	je     c808 <dlmalloc+0x298>
    cbb4:	4c 89 c0             	mov    %r8,%rax
    cbb7:	4c 29 e8             	sub    %r13,%rax
    cbba:	48 39 d0             	cmp    %rdx,%rax
    cbbd:	0f 86 45 fc ff ff    	jbe    c808 <dlmalloc+0x298>
    cbc3:	4c 8b 15 ae f7 01 00 	mov    0x1f7ae(%rip),%r10        # 2c378 <_gm_+0x18>
    cbca:	4d 39 e2             	cmp    %r12,%r10
    cbcd:	0f 87 75 01 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cbd3:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
    cbd7:	4c 39 e7             	cmp    %r12,%rdi
    cbda:	0f 86 68 01 00 00    	jbe    cd48 <dlmalloc+0x7d8>
    cbe0:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    cbe5:	4d 8b 74 24 30       	mov    0x30(%r12),%r14
    cbea:	4c 39 e6             	cmp    %r12,%rsi
    cbed:	0f 84 ff 0a 00 00    	je     d6f2 <dlmalloc+0x1182>
    cbf3:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    cbf8:	49 39 c2             	cmp    %rax,%r10
    cbfb:	0f 87 47 01 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cc01:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    cc05:	0f 85 3d 01 00 00    	jne    cd48 <dlmalloc+0x7d8>
    cc0b:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
    cc0f:	0f 85 33 01 00 00    	jne    cd48 <dlmalloc+0x7d8>
    cc15:	48 89 70 18          	mov    %rsi,0x18(%rax)
    cc19:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cc1d:	4d 85 f6             	test   %r14,%r14
    cc20:	74 79                	je     cc9b <dlmalloc+0x72b>
    cc22:	41 8b 44 24 38       	mov    0x38(%r12),%eax
    cc27:	48 89 c1             	mov    %rax,%rcx
    cc2a:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
    cc2e:	4c 39 a4 c5 58 02 00 	cmp    %r12,0x258(%rbp,%rax,8)
    cc35:	00 
    cc36:	0f 84 e3 0c 00 00    	je     d91f <dlmalloc+0x13af>
    cc3c:	4d 39 f2             	cmp    %r14,%r10
    cc3f:	0f 87 03 01 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cc45:	4d 39 66 20          	cmp    %r12,0x20(%r14)
    cc49:	0f 84 bc 0d 00 00    	je     da0b <dlmalloc+0x149b>
    cc4f:	49 89 76 28          	mov    %rsi,0x28(%r14)
    cc53:	48 85 f6             	test   %rsi,%rsi
    cc56:	74 43                	je     cc9b <dlmalloc+0x72b>
    cc58:	49 39 f2             	cmp    %rsi,%r10
    cc5b:	0f 87 e7 00 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cc61:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    cc66:	4c 89 76 30          	mov    %r14,0x30(%rsi)
    cc6a:	48 85 c0             	test   %rax,%rax
    cc6d:	74 11                	je     cc80 <dlmalloc+0x710>
    cc6f:	49 39 c2             	cmp    %rax,%r10
    cc72:	0f 87 d0 00 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cc78:	48 89 46 20          	mov    %rax,0x20(%rsi)
    cc7c:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cc80:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    cc85:	48 85 c0             	test   %rax,%rax
    cc88:	74 11                	je     cc9b <dlmalloc+0x72b>
    cc8a:	49 39 c2             	cmp    %rax,%r10
    cc8d:	0f 87 b5 00 00 00    	ja     cd48 <dlmalloc+0x7d8>
    cc93:	48 89 46 28          	mov    %rax,0x28(%rsi)
    cc97:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cc9b:	48 8b 35 7e fa 01 00 	mov    0x1fa7e(%rip),%rsi        # 2c720 <mparams>
    cca2:	48 89 e9             	mov    %rbp,%rcx
    cca5:	48 31 f1             	xor    %rsi,%rcx
    cca8:	48 83 fa 1f          	cmp    $0x1f,%rdx
    ccac:	0f 86 3c 0c 00 00    	jbe    d8ee <dlmalloc+0x137e>
    ccb2:	4c 89 e8             	mov    %r13,%rax
    ccb5:	48 83 c8 03          	or     $0x3,%rax
    ccb9:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ccbe:	48 89 d0             	mov    %rdx,%rax
    ccc1:	48 89 0f             	mov    %rcx,(%rdi)
    ccc4:	48 83 c8 01          	or     $0x1,%rax
    ccc8:	48 89 d1             	mov    %rdx,%rcx
    cccb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    cccf:	48 c1 e9 03          	shr    $0x3,%rcx
    ccd3:	48 89 14 17          	mov    %rdx,(%rdi,%rdx,1)
    ccd7:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    ccde:	0f 87 11 0b 00 00    	ja     d7f5 <dlmalloc+0x1285>
    cce4:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    cce7:	44 8b 0d 72 f6 01 00 	mov    0x1f672(%rip),%r9d        # 2c360 <_gm_>
    ccee:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
    ccf3:	b8 01 00 00 00       	mov    $0x1,%eax
    ccf8:	d3 e0                	shl    %cl,%eax
    ccfa:	41 85 c1             	test   %eax,%r9d
    ccfd:	0f 84 14 0e 00 00    	je     db17 <dlmalloc+0x15a7>
    cd03:	48 8b 42 10          	mov    0x10(%rdx),%rax
    cd07:	49 39 c2             	cmp    %rax,%r10
    cd0a:	77 3c                	ja     cd48 <dlmalloc+0x7d8>
    cd0c:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    cd10:	48 89 78 18          	mov    %rdi,0x18(%rax)
    cd14:	48 89 47 10          	mov    %rax,0x10(%rdi)
    cd18:	48 89 57 18          	mov    %rdx,0x18(%rdi)
    cd1c:	49 83 c4 10          	add    $0x10,%r12
    cd20:	4c 89 c7             	mov    %r8,%rdi
    cd23:	0f 85 3f fb ff ff    	jne    c868 <dlmalloc+0x2f8>
    cd29:	e9 e1 fa ff ff       	jmp    c80f <dlmalloc+0x29f>
    cd2e:	4c 3b 05 43 f6 01 00 	cmp    0x1f643(%rip),%r8        # 2c378 <_gm_+0x18>
    cd35:	72 11                	jb     cd48 <dlmalloc+0x7d8>
    cd37:	49 39 50 18          	cmp    %rdx,0x18(%r8)
    cd3b:	0f 84 85 0e 00 00    	je     dbc6 <dlmalloc+0x1656>
    cd41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd48:	e8 b7 48 01 00       	call   21604 <abort>
    cd4d:	0f 1f 00             	nopl   (%rax)
    cd50:	44 8b 0d 0d f6 01 00 	mov    0x1f60d(%rip),%r9d        # 2c364 <_gm_+0x4>
    cd57:	48 8b 35 c2 f9 01 00 	mov    0x1f9c2(%rip),%rsi        # 2c720 <mparams>
    cd5e:	45 85 c9             	test   %r9d,%r9d
    cd61:	0f 84 b1 fa ff ff    	je     c818 <dlmalloc+0x2a8>
    cd67:	44 89 c8             	mov    %r9d,%eax
    cd6a:	f7 d8                	neg    %eax
    cd6c:	44 21 c8             	and    %r9d,%eax
    cd6f:	f3 0f bc c0          	tzcnt  %eax,%eax
    cd73:	89 c0                	mov    %eax,%eax
    cd75:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    cd7c:	00 
    cd7d:	4c 8b 40 08          	mov    0x8(%rax),%r8
    cd81:	49 89 c4             	mov    %rax,%r12
    cd84:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    cd88:	4d 29 e8             	sub    %r13,%r8
    cd8b:	eb 1c                	jmp    cda9 <dlmalloc+0x839>
    cd8d:	0f 1f 00             	nopl   (%rax)
    cd90:	48 8b 41 08          	mov    0x8(%rcx),%rax
    cd94:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    cd98:	4c 29 e8             	sub    %r13,%rax
    cd9b:	4c 39 c0             	cmp    %r8,%rax
    cd9e:	73 06                	jae    cda6 <dlmalloc+0x836>
    cda0:	49 89 c0             	mov    %rax,%r8
    cda3:	49 89 cc             	mov    %rcx,%r12
    cda6:	48 89 c8             	mov    %rcx,%rax
    cda9:	48 8b 48 20          	mov    0x20(%rax),%rcx
    cdad:	48 85 c9             	test   %rcx,%rcx
    cdb0:	75 de                	jne    cd90 <dlmalloc+0x820>
    cdb2:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cdb6:	48 85 c9             	test   %rcx,%rcx
    cdb9:	75 d5                	jne    cd90 <dlmalloc+0x820>
    cdbb:	4c 8b 1d b6 f5 01 00 	mov    0x1f5b6(%rip),%r11        # 2c378 <_gm_+0x18>
    cdc2:	4d 39 e3             	cmp    %r12,%r11
    cdc5:	77 81                	ja     cd48 <dlmalloc+0x7d8>
    cdc7:	4f 8d 14 2c          	lea    (%r12,%r13,1),%r10
    cdcb:	4d 39 e2             	cmp    %r12,%r10
    cdce:	0f 86 74 ff ff ff    	jbe    cd48 <dlmalloc+0x7d8>
    cdd4:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    cdd9:	4d 8b 7c 24 30       	mov    0x30(%r12),%r15
    cdde:	4c 39 e6             	cmp    %r12,%rsi
    cde1:	0f 84 9e 0b 00 00    	je     d985 <dlmalloc+0x1415>
    cde7:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    cdec:	49 39 c3             	cmp    %rax,%r11
    cdef:	0f 87 53 ff ff ff    	ja     cd48 <dlmalloc+0x7d8>
    cdf5:	4c 39 60 18          	cmp    %r12,0x18(%rax)
    cdf9:	0f 85 49 ff ff ff    	jne    cd48 <dlmalloc+0x7d8>
    cdff:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
    ce03:	0f 85 3f ff ff ff    	jne    cd48 <dlmalloc+0x7d8>
    ce09:	48 89 70 18          	mov    %rsi,0x18(%rax)
    ce0d:	48 89 46 10          	mov    %rax,0x10(%rsi)
    ce11:	4d 85 ff             	test   %r15,%r15
    ce14:	74 79                	je     ce8f <dlmalloc+0x91f>
    ce16:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    ce1b:	48 89 c8             	mov    %rcx,%rax
    ce1e:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
    ce22:	4c 39 a4 cd 58 02 00 	cmp    %r12,0x258(%rbp,%rcx,8)
    ce29:	00 
    ce2a:	0f 84 f8 0c 00 00    	je     db28 <dlmalloc+0x15b8>
    ce30:	4d 39 fb             	cmp    %r15,%r11
    ce33:	0f 87 0f ff ff ff    	ja     cd48 <dlmalloc+0x7d8>
    ce39:	4d 39 67 20          	cmp    %r12,0x20(%r15)
    ce3d:	0f 84 55 0e 00 00    	je     dc98 <dlmalloc+0x1728>
    ce43:	49 89 77 28          	mov    %rsi,0x28(%r15)
    ce47:	48 85 f6             	test   %rsi,%rsi
    ce4a:	74 43                	je     ce8f <dlmalloc+0x91f>
    ce4c:	49 39 f3             	cmp    %rsi,%r11
    ce4f:	0f 87 f3 fe ff ff    	ja     cd48 <dlmalloc+0x7d8>
    ce55:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    ce5a:	4c 89 7e 30          	mov    %r15,0x30(%rsi)
    ce5e:	48 85 c0             	test   %rax,%rax
    ce61:	74 11                	je     ce74 <dlmalloc+0x904>
    ce63:	49 39 c3             	cmp    %rax,%r11
    ce66:	0f 87 dc fe ff ff    	ja     cd48 <dlmalloc+0x7d8>
    ce6c:	48 89 46 20          	mov    %rax,0x20(%rsi)
    ce70:	48 89 70 30          	mov    %rsi,0x30(%rax)
    ce74:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    ce79:	48 85 c0             	test   %rax,%rax
    ce7c:	74 11                	je     ce8f <dlmalloc+0x91f>
    ce7e:	49 39 c3             	cmp    %rax,%r11
    ce81:	0f 87 c1 fe ff ff    	ja     cd48 <dlmalloc+0x7d8>
    ce87:	48 89 46 28          	mov    %rax,0x28(%rsi)
    ce8b:	48 89 70 30          	mov    %rsi,0x30(%rax)
    ce8f:	48 8b 35 8a f8 01 00 	mov    0x1f88a(%rip),%rsi        # 2c720 <mparams>
    ce96:	48 89 e9             	mov    %rbp,%rcx
    ce99:	48 31 f1             	xor    %rsi,%rcx
    ce9c:	49 83 f8 1f          	cmp    $0x1f,%r8
    cea0:	0f 86 79 0b 00 00    	jbe    da1f <dlmalloc+0x14af>
    cea6:	4c 89 e8             	mov    %r13,%rax
    cea9:	48 83 c8 03          	or     $0x3,%rax
    cead:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ceb2:	4c 89 c0             	mov    %r8,%rax
    ceb5:	48 83 c8 01          	or     $0x1,%rax
    ceb9:	49 89 0a             	mov    %rcx,(%r10)
    cebc:	49 89 42 08          	mov    %rax,0x8(%r10)
    cec0:	4f 89 04 02          	mov    %r8,(%r10,%r8,1)
    cec4:	48 85 ff             	test   %rdi,%rdi
    cec7:	74 46                	je     cf0f <dlmalloc+0x99f>
    cec9:	48 c1 ef 03          	shr    $0x3,%rdi
    cecd:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ced3:	48 8b 05 a6 f4 01 00 	mov    0x1f4a6(%rip),%rax        # 2c380 <_gm_+0x20>
    ceda:	48 89 f9             	mov    %rdi,%rcx
    cedd:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
    cee1:	41 d3 e6             	shl    %cl,%r14d
    cee4:	4e 8d 4c cd 48       	lea    0x48(%rbp,%r9,8),%r9
    cee9:	44 85 f2             	test   %r14d,%edx
    ceec:	0f 84 3a 0e 00 00    	je     dd2c <dlmalloc+0x17bc>
    cef2:	49 8b 51 10          	mov    0x10(%r9),%rdx
    cef6:	49 39 d3             	cmp    %rdx,%r11
    cef9:	0f 87 49 fe ff ff    	ja     cd48 <dlmalloc+0x7d8>
    ceff:	49 89 41 10          	mov    %rax,0x10(%r9)
    cf03:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cf07:	48 89 50 10          	mov    %rdx,0x10(%rax)
    cf0b:	4c 89 48 18          	mov    %r9,0x18(%rax)
    cf0f:	4c 89 05 52 f4 01 00 	mov    %r8,0x1f452(%rip)        # 2c368 <_gm_+0x8>
    cf16:	4c 89 15 63 f4 01 00 	mov    %r10,0x1f463(%rip)        # 2c380 <_gm_+0x20>
    cf1d:	49 83 c4 10          	add    $0x10,%r12
    cf21:	0f 85 41 f9 ff ff    	jne    c868 <dlmalloc+0x2f8>
    cf27:	48 8b 3d 3a f4 01 00 	mov    0x1f43a(%rip),%rdi        # 2c368 <_gm_+0x8>
    cf2e:	e9 dc f8 ff ff       	jmp    c80f <dlmalloc+0x29f>
    cf33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cf38:	3d ff ff 00 00       	cmp    $0xffff,%eax
    cf3d:	0f 86 fd 06 00 00    	jbe    d640 <dlmalloc+0x10d0>
    cf43:	48 8b 05 66 f7 01 00 	mov    0x1f766(%rip),%rax        # 2c6b0 <_gm_+0x350>
    cf4a:	4c 89 e9             	mov    %r13,%rcx
    cf4d:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    cf53:	48 85 c0             	test   %rax,%rax
    cf56:	0f 85 ba fb ff ff    	jne    cb16 <dlmalloc+0x5a6>
    cf5c:	e9 a7 f8 ff ff       	jmp    c808 <dlmalloc+0x298>
    cf61:	45 31 f6             	xor    %r14d,%r14d
    cf64:	48 8d 15 e5 f7 01 00 	lea    0x1f7e5(%rip),%rdx        # 2c750 <malloc_global_mutex>
    cf6b:	b9 01 00 00 00       	mov    $0x1,%ecx
    cf70:	8b 02                	mov    (%rdx),%eax
    cf72:	85 c0                	test   %eax,%eax
    cf74:	75 fa                	jne    cf70 <dlmalloc+0xa00>
    cf76:	89 c8                	mov    %ecx,%eax
    cf78:	87 05 d2 f7 01 00    	xchg   %eax,0x1f7d2(%rip)        # 2c750 <malloc_global_mutex>
    cf7e:	85 c0                	test   %eax,%eax
    cf80:	75 ee                	jne    cf70 <dlmalloc+0xa00>
    cf82:	4d 85 f6             	test   %r14,%r14
    cf85:	0f 84 b6 f7 ff ff    	je     c741 <dlmalloc+0x1d1>
    cf8b:	48 8b 05 9e f7 01 00 	mov    0x1f79e(%rip),%rax        # 2c730 <mparams+0x10>
    cf92:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    cf96:	4c 2b 3d d3 f3 01 00 	sub    0x1f3d3(%rip),%r15        # 2c370 <_gm_+0x10>
    cf9d:	48 f7 d8             	neg    %rax
    cfa0:	4d 01 ef             	add    %r13,%r15
    cfa3:	49 21 c7             	and    %rax,%r15
    cfa6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    cfad:	ff ff 7f 
    cfb0:	49 39 c7             	cmp    %rax,%r15
    cfb3:	0f 87 07 f8 ff ff    	ja     c7c0 <dlmalloc+0x250>
    cfb9:	4c 89 ff             	mov    %r15,%rdi
    cfbc:	4c 89 04 24          	mov    %r8,(%rsp)
    cfc0:	e8 8b ea ff ff       	call   ba50 <sbrk>
    cfc5:	4c 8b 04 24          	mov    (%rsp),%r8
    cfc9:	49 89 c4             	mov    %rax,%r12
    cfcc:	49 8b 46 08          	mov    0x8(%r14),%rax
    cfd0:	49 03 06             	add    (%r14),%rax
    cfd3:	49 39 c4             	cmp    %rax,%r12
    cfd6:	0f 85 4b 0c 00 00    	jne    dc27 <dlmalloc+0x16b7>
    cfdc:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    cfe0:	0f 84 da f7 ff ff    	je     c7c0 <dlmalloc+0x250>
    cfe6:	c7 05 60 f7 01 00 00 	movl   $0x0,0x1f760(%rip)        # 2c750 <malloc_global_mutex>
    cfed:	00 00 00 
    cff0:	48 8b 05 c1 f6 01 00 	mov    0x1f6c1(%rip),%rax        # 2c6b8 <_gm_+0x358>
    cff7:	4c 01 f8             	add    %r15,%rax
    cffa:	48 3b 05 bf f6 01 00 	cmp    0x1f6bf(%rip),%rax        # 2c6c0 <_gm_+0x360>
    d001:	48 89 05 b0 f6 01 00 	mov    %rax,0x1f6b0(%rip)        # 2c6b8 <_gm_+0x358>
    d008:	76 07                	jbe    d011 <dlmalloc+0xaa1>
    d00a:	48 89 05 af f6 01 00 	mov    %rax,0x1f6af(%rip)        # 2c6c0 <_gm_+0x360>
    d011:	48 8b 35 70 f3 01 00 	mov    0x1f370(%rip),%rsi        # 2c388 <_gm_+0x28>
    d018:	48 8d 05 b9 f6 01 00 	lea    0x1f6b9(%rip),%rax        # 2c6d8 <_gm_+0x378>
    d01f:	48 85 f6             	test   %rsi,%rsi
    d022:	0f 84 c8 03 00 00    	je     d3f0 <dlmalloc+0xe80>
    d028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d02f:	00 
    d030:	48 8b 10             	mov    (%rax),%rdx
    d033:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d037:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    d03b:	49 39 fc             	cmp    %rdi,%r12
    d03e:	0f 84 14 03 00 00    	je     d358 <dlmalloc+0xde8>
    d044:	48 8b 40 10          	mov    0x10(%rax),%rax
    d048:	48 85 c0             	test   %rax,%rax
    d04b:	75 e3                	jne    d030 <dlmalloc+0xac0>
    d04d:	4c 39 25 24 f3 01 00 	cmp    %r12,0x1f324(%rip)        # 2c378 <_gm_+0x18>
    d054:	76 07                	jbe    d05d <dlmalloc+0xaed>
    d056:	4c 89 25 1b f3 01 00 	mov    %r12,0x1f31b(%rip)        # 2c378 <_gm_+0x18>
    d05d:	4b 8d 14 3c          	lea    (%r12,%r15,1),%rdx
    d061:	48 8d 05 70 f6 01 00 	lea    0x1f670(%rip),%rax        # 2c6d8 <_gm_+0x378>
    d068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d06f:	00 
    d070:	48 39 10             	cmp    %rdx,(%rax)
    d073:	0f 84 e7 01 00 00    	je     d260 <dlmalloc+0xcf0>
    d079:	48 8b 40 10          	mov    0x10(%rax),%rax
    d07d:	48 85 c0             	test   %rax,%rax
    d080:	75 ee                	jne    d070 <dlmalloc+0xb00>
    d082:	4d 89 e0             	mov    %r12,%r8
    d085:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    d08a:	41 83 e0 0f          	and    $0xf,%r8d
    d08e:	48 8d 05 43 f6 01 00 	lea    0x1f643(%rip),%rax        # 2c6d8 <_gm_+0x378>
    d095:	0f 1f 00             	nopl   (%rax)
    d098:	48 8b 10             	mov    (%rax),%rdx
    d09b:	48 39 d6             	cmp    %rdx,%rsi
    d09e:	72 09                	jb     d0a9 <dlmalloc+0xb39>
    d0a0:	48 03 50 08          	add    0x8(%rax),%rdx
    d0a4:	48 39 d6             	cmp    %rdx,%rsi
    d0a7:	72 09                	jb     d0b2 <dlmalloc+0xb42>
    d0a9:	48 8b 40 10          	mov    0x10(%rax),%rax
    d0ad:	48 85 c0             	test   %rax,%rax
    d0b0:	75 e6                	jne    d098 <dlmalloc+0xb28>
    d0b2:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d0b6:	48 03 08             	add    (%rax),%rcx
    d0b9:	48 c7 c2 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rdx
    d0c0:	48 8d 41 b1          	lea    -0x4f(%rcx),%rax
    d0c4:	a8 0f                	test   $0xf,%al
    d0c6:	74 0a                	je     d0d2 <dlmalloc+0xb62>
    d0c8:	48 f7 d8             	neg    %rax
    d0cb:	83 e0 0f             	and    $0xf,%eax
    d0ce:	48 8d 50 a1          	lea    -0x5f(%rax),%rdx
    d0d2:	48 01 ca             	add    %rcx,%rdx
    d0d5:	48 8d 46 20          	lea    0x20(%rsi),%rax
    d0d9:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    d0dd:	48 39 c2             	cmp    %rax,%rdx
    d0e0:	48 0f 42 d6          	cmovb  %rsi,%rdx
    d0e4:	4c 8d 52 10          	lea    0x10(%rdx),%r10
    d0e8:	4d 85 c0             	test   %r8,%r8
    d0eb:	0f 84 cf 03 00 00    	je     d4c0 <dlmalloc+0xf50>
    d0f1:	48 f7 df             	neg    %rdi
    d0f4:	4c 89 c8             	mov    %r9,%rax
    d0f7:	83 e7 0f             	and    $0xf,%edi
    d0fa:	4d 8d 04 3c          	lea    (%r12,%rdi,1),%r8
    d0fe:	48 29 f8             	sub    %rdi,%rax
    d101:	48 89 05 68 f2 01 00 	mov    %rax,0x1f268(%rip)        # 2c370 <_gm_+0x10>
    d108:	48 83 c8 01          	or     $0x1,%rax
    d10c:	f3 0f 6f 05 c4 f5 01 	movdqu 0x1f5c4(%rip),%xmm0        # 2c6d8 <_gm_+0x378>
    d113:	00 
    d114:	4c 89 05 6d f2 01 00 	mov    %r8,0x1f26d(%rip)        # 2c388 <_gm_+0x28>
    d11b:	49 89 40 08          	mov    %rax,0x8(%r8)
    d11f:	48 8b 05 1a f6 01 00 	mov    0x1f61a(%rip),%rax        # 2c740 <mparams+0x20>
    d126:	4b c7 44 0c 08 50 00 	movq   $0x50,0x8(%r12,%r9,1)
    d12d:	00 00 
    d12f:	48 89 05 5a f2 01 00 	mov    %rax,0x1f25a(%rip)        # 2c390 <_gm_+0x30>
    d136:	48 8b 05 e3 f5 01 00 	mov    0x1f5e3(%rip),%rax        # 2c720 <mparams>
    d13d:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    d141:	f3 0f 6f 0d 9f f5 01 	movdqu 0x1f59f(%rip),%xmm1        # 2c6e8 <_gm_+0x388>
    d148:	00 
    d149:	48 31 e8             	xor    %rbp,%rax
    d14c:	48 c7 42 08 33 00 00 	movq   $0x33,0x8(%rdx)
    d153:	00 
    d154:	48 89 42 30          	mov    %rax,0x30(%rdx)
    d158:	48 8d 42 38          	lea    0x38(%rdx),%rax
    d15c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    d160:	4c 89 25 71 f5 01 00 	mov    %r12,0x1f571(%rip)        # 2c6d8 <_gm_+0x378>
    d167:	4c 89 3d 72 f5 01 00 	mov    %r15,0x1f572(%rip)        # 2c6e0 <_gm_+0x380>
    d16e:	c7 05 78 f5 01 00 00 	movl   $0x0,0x1f578(%rip)        # 2c6f0 <_gm_+0x390>
    d175:	00 00 00 
    d178:	4c 89 15 69 f5 01 00 	mov    %r10,0x1f569(%rip)        # 2c6e8 <_gm_+0x388>
    d17f:	90                   	nop
    d180:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    d187:	48 83 c0 08          	add    $0x8,%rax
    d18b:	48 39 c1             	cmp    %rax,%rcx
    d18e:	77 f0                	ja     d180 <dlmalloc+0xc10>
    d190:	48 39 d6             	cmp    %rdx,%rsi
    d193:	0f 84 f5 04 00 00    	je     d68e <dlmalloc+0x111e>
    d199:	48 89 d7             	mov    %rdx,%rdi
    d19c:	48 83 62 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdx)
    d1a1:	48 29 f7             	sub    %rsi,%rdi
    d1a4:	48 89 f8             	mov    %rdi,%rax
    d1a7:	48 89 f9             	mov    %rdi,%rcx
    d1aa:	48 83 c8 01          	or     $0x1,%rax
    d1ae:	48 c1 e9 03          	shr    $0x3,%rcx
    d1b2:	48 89 46 08          	mov    %rax,0x8(%rsi)
    d1b6:	48 89 3a             	mov    %rdi,(%rdx)
    d1b9:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d1c0:	0f 87 9e 03 00 00    	ja     d564 <dlmalloc+0xff4>
    d1c6:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    d1c9:	8b 3d 91 f1 01 00    	mov    0x1f191(%rip),%edi        # 2c360 <_gm_>
    d1cf:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
    d1d4:	b8 01 00 00 00       	mov    $0x1,%eax
    d1d9:	d3 e0                	shl    %cl,%eax
    d1db:	85 c7                	test   %eax,%edi
    d1dd:	0f 85 fc 05 00 00    	jne    d7df <dlmalloc+0x126f>
    d1e3:	09 f8                	or     %edi,%eax
    d1e5:	89 05 75 f1 01 00    	mov    %eax,0x1f175(%rip)        # 2c360 <_gm_>
    d1eb:	48 89 d0             	mov    %rdx,%rax
    d1ee:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    d1f2:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d1f6:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    d1fa:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d1fe:	48 8b 05 6b f1 01 00 	mov    0x1f16b(%rip),%rax        # 2c370 <_gm_+0x10>
    d205:	49 39 c5             	cmp    %rax,%r13
    d208:	0f 83 cf f5 ff ff    	jae    c7dd <dlmalloc+0x26d>
    d20e:	4c 8b 25 73 f1 01 00 	mov    0x1f173(%rip),%r12        # 2c388 <_gm_+0x28>
    d215:	4c 29 e8             	sub    %r13,%rax
    d218:	48 33 2d 01 f5 01 00 	xor    0x1f501(%rip),%rbp        # 2c720 <mparams>
    d21f:	48 89 05 4a f1 01 00 	mov    %rax,0x1f14a(%rip)        # 2c370 <_gm_+0x10>
    d226:	48 83 c8 01          	or     $0x1,%rax
    d22a:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
    d22e:	49 83 cd 03          	or     $0x3,%r13
    d232:	48 89 15 4f f1 01 00 	mov    %rdx,0x1f14f(%rip)        # 2c388 <_gm_+0x28>
    d239:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d23d:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    d242:	48 89 2a             	mov    %rbp,(%rdx)
    d245:	e9 30 f7 ff ff       	jmp    c97a <dlmalloc+0x40a>
    d24a:	d3 e6                	shl    %cl,%esi
    d24c:	f7 d6                	not    %esi
    d24e:	21 f2                	and    %esi,%edx
    d250:	89 15 0a f1 01 00    	mov    %edx,0x1f10a(%rip)        # 2c360 <_gm_>
    d256:	e9 97 f7 ff ff       	jmp    c9f2 <dlmalloc+0x482>
    d25b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d260:	44 8b 48 18          	mov    0x18(%rax),%r9d
    d264:	4d 89 e0             	mov    %r12,%r8
    d267:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    d26c:	41 83 e0 0f          	and    $0xf,%r8d
    d270:	41 83 e1 08          	and    $0x8,%r9d
    d274:	0f 85 14 fe ff ff    	jne    d08e <dlmalloc+0xb1e>
    d27a:	4c 01 78 08          	add    %r15,0x8(%rax)
    d27e:	4c 89 20             	mov    %r12,(%rax)
    d281:	4d 85 c0             	test   %r8,%r8
    d284:	74 09                	je     d28f <dlmalloc+0xd1f>
    d286:	48 f7 df             	neg    %rdi
    d289:	83 e7 0f             	and    $0xf,%edi
    d28c:	49 01 fc             	add    %rdi,%r12
    d28f:	48 8d 42 10          	lea    0x10(%rdx),%rax
    d293:	f6 c2 0f             	test   $0xf,%dl
    d296:	74 09                	je     d2a1 <dlmalloc+0xd31>
    d298:	48 f7 d8             	neg    %rax
    d29b:	83 e0 0f             	and    $0xf,%eax
    d29e:	48 01 c2             	add    %rax,%rdx
    d2a1:	48 8b 0d 78 f4 01 00 	mov    0x1f478(%rip),%rcx        # 2c720 <mparams>
    d2a8:	48 89 d0             	mov    %rdx,%rax
    d2ab:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
    d2af:	4c 29 e0             	sub    %r12,%rax
    d2b2:	4c 29 e8             	sub    %r13,%rax
    d2b5:	48 31 e9             	xor    %rbp,%rcx
    d2b8:	49 83 cd 03          	or     $0x3,%r13
    d2bc:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
    d2c1:	48 89 0f             	mov    %rcx,(%rdi)
    d2c4:	48 39 d6             	cmp    %rdx,%rsi
    d2c7:	0f 84 1c 07 00 00    	je     d9e9 <dlmalloc+0x1479>
    d2cd:	48 39 15 ac f0 01 00 	cmp    %rdx,0x1f0ac(%rip)        # 2c380 <_gm_+0x20>
    d2d4:	0f 84 8e 08 00 00    	je     db68 <dlmalloc+0x15f8>
    d2da:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    d2de:	4c 89 c1             	mov    %r8,%rcx
    d2e1:	83 e1 03             	and    $0x3,%ecx
    d2e4:	48 83 f9 01          	cmp    $0x1,%rcx
    d2e8:	0f 84 a3 08 00 00    	je     db91 <dlmalloc+0x1621>
    d2ee:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    d2f2:	48 89 c1             	mov    %rax,%rcx
    d2f5:	4c 89 42 08          	mov    %r8,0x8(%rdx)
    d2f9:	48 89 c2             	mov    %rax,%rdx
    d2fc:	48 c1 e9 03          	shr    $0x3,%rcx
    d300:	48 83 ca 01          	or     $0x1,%rdx
    d304:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    d308:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
    d30c:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    d312:	0f 87 65 07 00 00    	ja     da7d <dlmalloc+0x150d>
    d318:	be 01 00 00 00       	mov    $0x1,%esi
    d31d:	8b 15 3d f0 01 00    	mov    0x1f03d(%rip),%edx        # 2c360 <_gm_>
    d323:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    d326:	d3 e6                	shl    %cl,%esi
    d328:	48 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%rax
    d32d:	85 f2                	test   %esi,%edx
    d32f:	0f 85 20 0a 00 00    	jne    dd55 <dlmalloc+0x17e5>
    d335:	09 f2                	or     %esi,%edx
    d337:	89 15 23 f0 01 00    	mov    %edx,0x1f023(%rip)        # 2c360 <_gm_>
    d33d:	48 89 c2             	mov    %rax,%rdx
    d340:	48 89 78 10          	mov    %rdi,0x10(%rax)
    d344:	48 89 7a 18          	mov    %rdi,0x18(%rdx)
    d348:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    d34c:	48 89 47 18          	mov    %rax,0x18(%rdi)
    d350:	e9 25 f6 ff ff       	jmp    c97a <dlmalloc+0x40a>
    d355:	0f 1f 00             	nopl   (%rax)
    d358:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    d35c:	0f 85 eb fc ff ff    	jne    d04d <dlmalloc+0xadd>
    d362:	48 39 d6             	cmp    %rdx,%rsi
    d365:	0f 82 e2 fc ff ff    	jb     d04d <dlmalloc+0xadd>
    d36b:	4c 39 e6             	cmp    %r12,%rsi
    d36e:	0f 83 d9 fc ff ff    	jae    d04d <dlmalloc+0xadd>
    d374:	4c 01 f9             	add    %r15,%rcx
    d377:	4c 03 3d f2 ef 01 00 	add    0x1eff2(%rip),%r15        # 2c370 <_gm_+0x10>
    d37e:	48 89 48 08          	mov    %rcx,0x8(%rax)
    d382:	48 8d 46 10          	lea    0x10(%rsi),%rax
    d386:	40 f6 c6 0f          	test   $0xf,%sil
    d38a:	0f 84 84 06 00 00    	je     da14 <dlmalloc+0x14a4>
    d390:	48 f7 d8             	neg    %rax
    d393:	4c 89 ff             	mov    %r15,%rdi
    d396:	83 e0 0f             	and    $0xf,%eax
    d399:	48 29 c7             	sub    %rax,%rdi
    d39c:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    d3a0:	48 89 f8             	mov    %rdi,%rax
    d3a3:	48 89 c1             	mov    %rax,%rcx
    d3a6:	48 89 15 db ef 01 00 	mov    %rdx,0x1efdb(%rip)        # 2c388 <_gm_+0x28>
    d3ad:	48 83 c9 01          	or     $0x1,%rcx
    d3b1:	48 89 05 b8 ef 01 00 	mov    %rax,0x1efb8(%rip)        # 2c370 <_gm_+0x10>
    d3b8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    d3bc:	48 8b 15 7d f3 01 00 	mov    0x1f37d(%rip),%rdx        # 2c740 <mparams+0x20>
    d3c3:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    d3ca:	00 00 
    d3cc:	48 89 15 bd ef 01 00 	mov    %rdx,0x1efbd(%rip)        # 2c390 <_gm_+0x30>
    d3d3:	e9 2d fe ff ff       	jmp    d205 <dlmalloc+0xc95>
    d3d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d3df:	00 
    d3e0:	0f b3 ca             	btr    %ecx,%edx
    d3e3:	89 15 77 ef 01 00    	mov    %edx,0x1ef77(%rip)        # 2c360 <_gm_>
    d3e9:	e9 2d f2 ff ff       	jmp    c61b <dlmalloc+0xab>
    d3ee:	66 90                	xchg   %ax,%ax
    d3f0:	48 8b 05 81 ef 01 00 	mov    0x1ef81(%rip),%rax        # 2c378 <_gm_+0x18>
    d3f7:	48 85 c0             	test   %rax,%rax
    d3fa:	74 05                	je     d401 <dlmalloc+0xe91>
    d3fc:	4c 39 e0             	cmp    %r12,%rax
    d3ff:	76 07                	jbe    d408 <dlmalloc+0xe98>
    d401:	4c 89 25 70 ef 01 00 	mov    %r12,0x1ef70(%rip)        # 2c378 <_gm_+0x18>
    d408:	48 8b 05 11 f3 01 00 	mov    0x1f311(%rip),%rax        # 2c720 <mparams>
    d40f:	4c 89 25 c2 f2 01 00 	mov    %r12,0x1f2c2(%rip)        # 2c6d8 <_gm_+0x378>
    d416:	4c 89 3d c3 f2 01 00 	mov    %r15,0x1f2c3(%rip)        # 2c6e0 <_gm_+0x380>
    d41d:	c7 05 c9 f2 01 00 00 	movl   $0x0,0x1f2c9(%rip)        # 2c6f0 <_gm_+0x390>
    d424:	00 00 00 
    d427:	48 c7 05 66 ef 01 00 	movq   $0xffffffffffffffff,0x1ef66(%rip)        # 2c398 <_gm_+0x38>
    d42e:	ff ff ff ff 
    d432:	48 89 05 67 ef 01 00 	mov    %rax,0x1ef67(%rip)        # 2c3a0 <_gm_+0x40>
    d439:	48 8d 05 68 ef 01 00 	lea    0x1ef68(%rip),%rax        # 2c3a8 <_gm_+0x48>
    d440:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    d447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d44e:	00 00 
    d450:	48 89 40 18          	mov    %rax,0x18(%rax)
    d454:	48 89 40 10          	mov    %rax,0x10(%rax)
    d458:	48 83 c0 10          	add    $0x10,%rax
    d45c:	48 39 c2             	cmp    %rax,%rdx
    d45f:	75 ef                	jne    d450 <dlmalloc+0xee0>
    d461:	49 83 ef 50          	sub    $0x50,%r15
    d465:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    d46a:	41 f6 c4 0f          	test   $0xf,%r12b
    d46e:	0f 84 37 02 00 00    	je     d6ab <dlmalloc+0x113b>
    d474:	48 f7 d8             	neg    %rax
    d477:	4c 89 ff             	mov    %r15,%rdi
    d47a:	83 e0 0f             	and    $0xf,%eax
    d47d:	48 29 c7             	sub    %rax,%rdi
    d480:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    d484:	48 89 f8             	mov    %rdi,%rax
    d487:	48 89 c1             	mov    %rax,%rcx
    d48a:	48 89 15 f7 ee 01 00 	mov    %rdx,0x1eef7(%rip)        # 2c388 <_gm_+0x28>
    d491:	48 83 c9 01          	or     $0x1,%rcx
    d495:	48 89 05 d4 ee 01 00 	mov    %rax,0x1eed4(%rip)        # 2c370 <_gm_+0x10>
    d49c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    d4a0:	48 8b 15 99 f2 01 00 	mov    0x1f299(%rip),%rdx        # 2c740 <mparams+0x20>
    d4a7:	4b c7 44 3c 08 50 00 	movq   $0x50,0x8(%r12,%r15,1)
    d4ae:	00 00 
    d4b0:	48 89 15 d9 ee 01 00 	mov    %rdx,0x1eed9(%rip)        # 2c390 <_gm_+0x30>
    d4b7:	e9 49 fd ff ff       	jmp    d205 <dlmalloc+0xc95>
    d4bc:	0f 1f 40 00          	nopl   0x0(%rax)
    d4c0:	4c 89 c8             	mov    %r9,%rax
    d4c3:	4d 89 e0             	mov    %r12,%r8
    d4c6:	e9 36 fc ff ff       	jmp    d101 <dlmalloc+0xb91>
    d4cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d4d0:	48 85 f6             	test   %rsi,%rsi
    d4d3:	0f 85 d7 f1 ff ff    	jne    c6b0 <dlmalloc+0x140>
    d4d9:	e9 cd f1 ff ff       	jmp    c6ab <dlmalloc+0x13b>
    d4de:	66 90                	xchg   %ax,%ax
    d4e0:	b8 01 00 00 00       	mov    $0x1,%eax
    d4e5:	87 05 65 f2 01 00    	xchg   %eax,0x1f265(%rip)        # 2c750 <malloc_global_mutex>
    d4eb:	48 8d 15 5e f2 01 00 	lea    0x1f25e(%rip),%rdx        # 2c750 <malloc_global_mutex>
    d4f2:	b9 01 00 00 00       	mov    $0x1,%ecx
    d4f7:	85 c0                	test   %eax,%eax
    d4f9:	75 55                	jne    d550 <dlmalloc+0xfe0>
    d4fb:	4c 89 c7             	mov    %r8,%rdi
    d4fe:	e8 4d e5 ff ff       	call   ba50 <sbrk>
    d503:	31 ff                	xor    %edi,%edi
    d505:	49 89 c4             	mov    %rax,%r12
    d508:	e8 43 e5 ff ff       	call   ba50 <sbrk>
    d50d:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    d511:	0f 95 c1             	setne  %cl
    d514:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    d518:	c7 05 2e f2 01 00 00 	movl   $0x0,0x1f22e(%rip)        # 2c750 <malloc_global_mutex>
    d51f:	00 00 00 
    d522:	0f 95 c2             	setne  %dl
    d525:	84 d1                	test   %dl,%cl
    d527:	0f 84 b0 f2 ff ff    	je     c7dd <dlmalloc+0x26d>
    d52d:	49 39 c4             	cmp    %rax,%r12
    d530:	0f 83 a7 f2 ff ff    	jae    c7dd <dlmalloc+0x26d>
    d536:	4c 29 e0             	sub    %r12,%rax
    d539:	49 89 c7             	mov    %rax,%r15
    d53c:	49 8d 45 50          	lea    0x50(%r13),%rax
    d540:	49 39 c7             	cmp    %rax,%r15
    d543:	0f 87 a7 fa ff ff    	ja     cff0 <dlmalloc+0xa80>
    d549:	e9 8f f2 ff ff       	jmp    c7dd <dlmalloc+0x26d>
    d54e:	66 90                	xchg   %ax,%ax
    d550:	8b 02                	mov    (%rdx),%eax
    d552:	85 c0                	test   %eax,%eax
    d554:	75 fa                	jne    d550 <dlmalloc+0xfe0>
    d556:	89 c8                	mov    %ecx,%eax
    d558:	87 05 f2 f1 01 00    	xchg   %eax,0x1f1f2(%rip)        # 2c750 <malloc_global_mutex>
    d55e:	85 c0                	test   %eax,%eax
    d560:	75 ee                	jne    d550 <dlmalloc+0xfe0>
    d562:	eb 97                	jmp    d4fb <dlmalloc+0xf8b>
    d564:	48 89 f8             	mov    %rdi,%rax
    d567:	48 c1 e8 08          	shr    $0x8,%rax
    d56b:	89 c1                	mov    %eax,%ecx
    d56d:	85 c0                	test   %eax,%eax
    d56f:	0f 84 57 02 00 00    	je     d7cc <dlmalloc+0x125c>
    d575:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d57a:	0f 87 bd 03 00 00    	ja     d93d <dlmalloc+0x13cd>
    d580:	0f bd c0             	bsr    %eax,%eax
    d583:	b9 26 00 00 00       	mov    $0x26,%ecx
    d588:	48 89 fa             	mov    %rdi,%rdx
    d58b:	83 f0 1f             	xor    $0x1f,%eax
    d58e:	29 c1                	sub    %eax,%ecx
    d590:	48 d3 ea             	shr    %cl,%rdx
    d593:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d598:	29 c1                	sub    %eax,%ecx
    d59a:	83 e2 01             	and    $0x1,%edx
    d59d:	b8 01 00 00 00       	mov    $0x1,%eax
    d5a2:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
    d5a6:	4c 89 c9             	mov    %r9,%rcx
    d5a9:	4e 8d 04 cd 58 02 00 	lea    0x258(,%r9,8),%r8
    d5b0:	00 
    d5b1:	d3 e0                	shl    %cl,%eax
    d5b3:	8b 15 ab ed 01 00    	mov    0x1edab(%rip),%edx        # 2c364 <_gm_+0x4>
    d5b9:	89 4e 38             	mov    %ecx,0x38(%rsi)
    d5bc:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    d5c3:	00 
    d5c4:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    d5cb:	00 
    d5cc:	85 d0                	test   %edx,%eax
    d5ce:	0f 85 69 01 00 00    	jne    d73d <dlmalloc+0x11cd>
    d5d4:	09 d0                	or     %edx,%eax
    d5d6:	49 01 e8             	add    %rbp,%r8
    d5d9:	4a 89 b4 cd 58 02 00 	mov    %rsi,0x258(%rbp,%r9,8)
    d5e0:	00 
    d5e1:	89 05 7d ed 01 00    	mov    %eax,0x1ed7d(%rip)        # 2c364 <_gm_+0x4>
    d5e7:	48 8b 05 82 ed 01 00 	mov    0x1ed82(%rip),%rax        # 2c370 <_gm_+0x10>
    d5ee:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    d5f2:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    d5f6:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    d5fa:	e9 06 fc ff ff       	jmp    d205 <dlmalloc+0xc95>
    d5ff:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d604:	44 89 d1             	mov    %r10d,%ecx
    d607:	48 89 f2             	mov    %rsi,%rdx
    d60a:	d3 e0                	shl    %cl,%eax
    d60c:	44 21 c8             	and    %r9d,%eax
    d60f:	0f 84 f3 f1 ff ff    	je     c808 <dlmalloc+0x298>
    d615:	89 c1                	mov    %eax,%ecx
    d617:	45 31 e4             	xor    %r12d,%r12d
    d61a:	f7 d9                	neg    %ecx
    d61c:	21 c8                	and    %ecx,%eax
    d61e:	f3 0f bc c0          	tzcnt  %eax,%eax
    d622:	89 c0                	mov    %eax,%eax
    d624:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    d62b:	00 
    d62c:	48 85 c0             	test   %rax,%rax
    d62f:	0f 85 4e f5 ff ff    	jne    cb83 <dlmalloc+0x613>
    d635:	e9 ce f1 ff ff       	jmp    c808 <dlmalloc+0x298>
    d63a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d640:	0f bd c0             	bsr    %eax,%eax
    d643:	b9 26 00 00 00       	mov    $0x26,%ecx
    d648:	4c 89 ea             	mov    %r13,%rdx
    d64b:	83 f0 1f             	xor    $0x1f,%eax
    d64e:	29 c1                	sub    %eax,%ecx
    d650:	48 d3 ea             	shr    %cl,%rdx
    d653:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d658:	83 e2 01             	and    $0x1,%edx
    d65b:	29 c1                	sub    %eax,%ecx
    d65d:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    d660:	49 89 c2             	mov    %rax,%r10
    d663:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
    d66a:	00 
    d66b:	48 85 c0             	test   %rax,%rax
    d66e:	74 8f                	je     d5ff <dlmalloc+0x108f>
    d670:	4c 89 e9             	mov    %r13,%rcx
    d673:	41 83 fa 1f          	cmp    $0x1f,%r10d
    d677:	0f 84 99 f4 ff ff    	je     cb16 <dlmalloc+0x5a6>
    d67d:	44 89 d2             	mov    %r10d,%edx
    d680:	b9 39 00 00 00       	mov    $0x39,%ecx
    d685:	d1 ea                	shr    %edx
    d687:	29 d1                	sub    %edx,%ecx
    d689:	e9 7f f4 ff ff       	jmp    cb0d <dlmalloc+0x59d>
    d68e:	48 8b 05 db ec 01 00 	mov    0x1ecdb(%rip),%rax        # 2c370 <_gm_+0x10>
    d695:	e9 6b fb ff ff       	jmp    d205 <dlmalloc+0xc95>
    d69a:	48 83 cf 03          	or     $0x3,%rdi
    d69e:	e9 0c f4 ff ff       	jmp    caaf <dlmalloc+0x53f>
    d6a3:	49 89 c4             	mov    %rax,%r12
    d6a6:	e9 d8 f4 ff ff       	jmp    cb83 <dlmalloc+0x613>
    d6ab:	4c 89 f8             	mov    %r15,%rax
    d6ae:	4c 89 e2             	mov    %r12,%rdx
    d6b1:	e9 d1 fd ff ff       	jmp    d487 <dlmalloc+0xf17>
    d6b6:	83 c9 03             	or     $0x3,%ecx
    d6b9:	89 cf                	mov    %ecx,%edi
    d6bb:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
    d6c0:	48 89 30             	mov    %rsi,(%rax)
    d6c3:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d6c8:	e9 ad f2 ff ff       	jmp    c97a <dlmalloc+0x40a>
    d6cd:	b8 01 00 00 00       	mov    $0x1,%eax
    d6d2:	87 05 78 f0 01 00    	xchg   %eax,0x1f078(%rip)        # 2c750 <malloc_global_mutex>
    d6d8:	85 c0                	test   %eax,%eax
    d6da:	0f 85 84 f8 ff ff    	jne    cf64 <dlmalloc+0x9f4>
    d6e0:	e9 a6 f8 ff ff       	jmp    cf8b <dlmalloc+0xa1b>
    d6e5:	48 89 f2             	mov    %rsi,%rdx
    d6e8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d6ed:	e9 1a ff ff ff       	jmp    d60c <dlmalloc+0x109c>
    d6f2:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    d6f7:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
    d6fc:	48 85 c0             	test   %rax,%rax
    d6ff:	0f 84 3b 03 00 00    	je     da40 <dlmalloc+0x14d0>
    d705:	0f 1f 00             	nopl   (%rax)
    d708:	49 89 cb             	mov    %rcx,%r11
    d70b:	48 89 c6             	mov    %rax,%rsi
    d70e:	48 8d 48 28          	lea    0x28(%rax),%rcx
    d712:	48 8b 40 28          	mov    0x28(%rax),%rax
    d716:	48 85 c0             	test   %rax,%rax
    d719:	75 ed                	jne    d708 <dlmalloc+0x1198>
    d71b:	48 8b 46 20          	mov    0x20(%rsi),%rax
    d71f:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    d723:	48 85 c0             	test   %rax,%rax
    d726:	75 e0                	jne    d708 <dlmalloc+0x1198>
    d728:	4d 39 da             	cmp    %r11,%r10
    d72b:	0f 87 17 f6 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    d731:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    d738:	e9 e0 f4 ff ff       	jmp    cc1d <dlmalloc+0x6ad>
    d73d:	4a 8b 94 cd 58 02 00 	mov    0x258(%rbp,%r9,8),%rdx
    d744:	00 
    d745:	49 89 f8             	mov    %rdi,%r8
    d748:	83 f9 1f             	cmp    $0x1f,%ecx
    d74b:	74 31                	je     d77e <dlmalloc+0x120e>
    d74d:	d1 e9                	shr    %ecx
    d74f:	b8 39 00 00 00       	mov    $0x39,%eax
    d754:	29 c8                	sub    %ecx,%eax
    d756:	89 c1                	mov    %eax,%ecx
    d758:	49 d3 e0             	shl    %cl,%r8
    d75b:	eb 21                	jmp    d77e <dlmalloc+0x120e>
    d75d:	0f 1f 00             	nopl   (%rax)
    d760:	4c 89 c0             	mov    %r8,%rax
    d763:	4d 01 c0             	add    %r8,%r8
    d766:	48 c1 e8 3f          	shr    $0x3f,%rax
    d76a:	48 83 c0 04          	add    $0x4,%rax
    d76e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    d772:	48 85 c9             	test   %rcx,%rcx
    d775:	0f 84 dd 01 00 00    	je     d958 <dlmalloc+0x13e8>
    d77b:	48 89 ca             	mov    %rcx,%rdx
    d77e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d782:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d786:	48 39 c7             	cmp    %rax,%rdi
    d789:	75 d5                	jne    d760 <dlmalloc+0x11f0>
    d78b:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d78f:	48 8b 0d e2 eb 01 00 	mov    0x1ebe2(%rip),%rcx        # 2c378 <_gm_+0x18>
    d796:	48 39 c8             	cmp    %rcx,%rax
    d799:	0f 82 a9 f5 ff ff    	jb     cd48 <dlmalloc+0x7d8>
    d79f:	48 39 ca             	cmp    %rcx,%rdx
    d7a2:	0f 82 a0 f5 ff ff    	jb     cd48 <dlmalloc+0x7d8>
    d7a8:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d7ac:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    d7b0:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d7b4:	48 8b 05 b5 eb 01 00 	mov    0x1ebb5(%rip),%rax        # 2c370 <_gm_+0x10>
    d7bb:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    d7bf:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    d7c6:	00 
    d7c7:	e9 39 fa ff ff       	jmp    d205 <dlmalloc+0xc95>
    d7cc:	b8 01 00 00 00       	mov    $0x1,%eax
    d7d1:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    d7d7:	41 89 c9             	mov    %ecx,%r9d
    d7da:	e9 d4 fd ff ff       	jmp    d5b3 <dlmalloc+0x1043>
    d7df:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d7e3:	48 3b 05 8e eb 01 00 	cmp    0x1eb8e(%rip),%rax        # 2c378 <_gm_+0x18>
    d7ea:	0f 83 fe f9 ff ff    	jae    d1ee <dlmalloc+0xc7e>
    d7f0:	e9 53 f5 ff ff       	jmp    cd48 <dlmalloc+0x7d8>
    d7f5:	48 89 d1             	mov    %rdx,%rcx
    d7f8:	48 c1 e9 08          	shr    $0x8,%rcx
    d7fc:	89 c8                	mov    %ecx,%eax
    d7fe:	85 c9                	test   %ecx,%ecx
    d800:	0f 84 cf 01 00 00    	je     d9d5 <dlmalloc+0x1465>
    d806:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    d80c:	0f 87 dd 03 00 00    	ja     dbef <dlmalloc+0x167f>
    d812:	0f bd c1             	bsr    %ecx,%eax
    d815:	b9 26 00 00 00       	mov    $0x26,%ecx
    d81a:	49 89 d7             	mov    %rdx,%r15
    d81d:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    d823:	83 f0 1f             	xor    $0x1f,%eax
    d826:	29 c1                	sub    %eax,%ecx
    d828:	41 29 c1             	sub    %eax,%r9d
    d82b:	49 d3 ef             	shr    %cl,%r15
    d82e:	4c 89 f9             	mov    %r15,%rcx
    d831:	83 e1 01             	and    $0x1,%ecx
    d834:	46 8d 1c 49          	lea    (%rcx,%r9,2),%r11d
    d838:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    d83e:	44 89 d9             	mov    %r11d,%ecx
    d841:	4c 89 d8             	mov    %r11,%rax
    d844:	4e 8d 34 dd 58 02 00 	lea    0x258(,%r11,8),%r14
    d84b:	00 
    d84c:	41 d3 e1             	shl    %cl,%r9d
    d84f:	8b 0d 0f eb 01 00    	mov    0x1eb0f(%rip),%ecx        # 2c364 <_gm_+0x4>
    d855:	89 47 38             	mov    %eax,0x38(%rdi)
    d858:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    d85f:	00 
    d860:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    d867:	00 
    d868:	44 85 c9             	test   %r9d,%ecx
    d86b:	0f 84 e7 01 00 00    	je     da58 <dlmalloc+0x14e8>
    d871:	4e 8b 8c dd 58 02 00 	mov    0x258(%rbp,%r11,8),%r9
    d878:	00 
    d879:	49 89 d3             	mov    %rdx,%r11
    d87c:	83 f8 1f             	cmp    $0x1f,%eax
    d87f:	74 2d                	je     d8ae <dlmalloc+0x133e>
    d881:	d1 e8                	shr    %eax
    d883:	b9 39 00 00 00       	mov    $0x39,%ecx
    d888:	29 c1                	sub    %eax,%ecx
    d88a:	49 d3 e3             	shl    %cl,%r11
    d88d:	eb 1f                	jmp    d8ae <dlmalloc+0x133e>
    d88f:	90                   	nop
    d890:	4c 89 d8             	mov    %r11,%rax
    d893:	4d 01 db             	add    %r11,%r11
    d896:	48 c1 e8 3f          	shr    $0x3f,%rax
    d89a:	48 83 c0 04          	add    $0x4,%rax
    d89e:	49 8b 0c c1          	mov    (%r9,%rax,8),%rcx
    d8a2:	48 85 c9             	test   %rcx,%rcx
    d8a5:	0f 84 9b 02 00 00    	je     db46 <dlmalloc+0x15d6>
    d8ab:	49 89 c9             	mov    %rcx,%r9
    d8ae:	49 8b 41 08          	mov    0x8(%r9),%rax
    d8b2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d8b6:	48 39 d0             	cmp    %rdx,%rax
    d8b9:	75 d5                	jne    d890 <dlmalloc+0x1320>
    d8bb:	49 8b 41 10          	mov    0x10(%r9),%rax
    d8bf:	4d 39 ca             	cmp    %r9,%r10
    d8c2:	0f 87 80 f4 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    d8c8:	49 39 c2             	cmp    %rax,%r10
    d8cb:	0f 87 77 f4 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    d8d1:	48 89 78 18          	mov    %rdi,0x18(%rax)
    d8d5:	49 89 79 10          	mov    %rdi,0x10(%r9)
    d8d9:	48 89 47 10          	mov    %rax,0x10(%rdi)
    d8dd:	4c 89 4f 18          	mov    %r9,0x18(%rdi)
    d8e1:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    d8e8:	00 
    d8e9:	e9 2e f4 ff ff       	jmp    cd1c <dlmalloc+0x7ac>
    d8ee:	49 8d 44 15 00       	lea    0x0(%r13,%rdx,1),%rax
    d8f3:	48 89 c2             	mov    %rax,%rdx
    d8f6:	4c 01 e0             	add    %r12,%rax
    d8f9:	48 83 ca 03          	or     $0x3,%rdx
    d8fd:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    d902:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d907:	48 89 08             	mov    %rcx,(%rax)
    d90a:	e9 0d f4 ff ff       	jmp    cd1c <dlmalloc+0x7ac>
    d90f:	09 f9                	or     %edi,%ecx
    d911:	89 0d 49 ea 01 00    	mov    %ecx,0x1ea49(%rip)        # 2c360 <_gm_>
    d917:	4c 89 c1             	mov    %r8,%rcx
    d91a:	e9 5e f1 ff ff       	jmp    ca7d <dlmalloc+0x50d>
    d91f:	4a 89 74 dd 08       	mov    %rsi,0x8(%rbp,%r11,8)
    d924:	48 85 f6             	test   %rsi,%rsi
    d927:	0f 85 2b f3 ff ff    	jne    cc58 <dlmalloc+0x6e8>
    d92d:	41 0f b3 c9          	btr    %ecx,%r9d
    d931:	44 89 0d 2c ea 01 00 	mov    %r9d,0x1ea2c(%rip)        # 2c364 <_gm_+0x4>
    d938:	e9 5e f3 ff ff       	jmp    cc9b <dlmalloc+0x72b>
    d93d:	b8 00 00 00 80       	mov    $0x80000000,%eax
    d942:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    d948:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    d94d:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    d953:	e9 5b fc ff ff       	jmp    d5b3 <dlmalloc+0x1043>
    d958:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    d95c:	48 39 0d 15 ea 01 00 	cmp    %rcx,0x1ea15(%rip)        # 2c378 <_gm_+0x18>
    d963:	0f 87 df f3 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    d969:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    d96d:	48 8b 05 fc e9 01 00 	mov    0x1e9fc(%rip),%rax        # 2c370 <_gm_+0x10>
    d974:	48 89 56 30          	mov    %rdx,0x30(%rsi)
    d978:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    d97c:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    d980:	e9 80 f8 ff ff       	jmp    d205 <dlmalloc+0xc95>
    d985:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    d98a:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
    d98f:	48 85 c0             	test   %rax,%rax
    d992:	0f 84 a5 03 00 00    	je     dd3d <dlmalloc+0x17cd>
    d998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d99f:	00 
    d9a0:	49 89 ce             	mov    %rcx,%r14
    d9a3:	48 89 c6             	mov    %rax,%rsi
    d9a6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    d9aa:	48 8b 40 28          	mov    0x28(%rax),%rax
    d9ae:	48 85 c0             	test   %rax,%rax
    d9b1:	75 ed                	jne    d9a0 <dlmalloc+0x1430>
    d9b3:	48 8b 46 20          	mov    0x20(%rsi),%rax
    d9b7:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    d9bb:	48 85 c0             	test   %rax,%rax
    d9be:	75 e0                	jne    d9a0 <dlmalloc+0x1430>
    d9c0:	4d 39 f3             	cmp    %r14,%r11
    d9c3:	0f 87 7f f3 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    d9c9:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    d9d0:	e9 3c f4 ff ff       	jmp    ce11 <dlmalloc+0x8a1>
    d9d5:	41 be 58 02 00 00    	mov    $0x258,%r14d
    d9db:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    d9e1:	41 89 cb             	mov    %ecx,%r11d
    d9e4:	e9 66 fe ff ff       	jmp    d84f <dlmalloc+0x12df>
    d9e9:	48 03 05 80 e9 01 00 	add    0x1e980(%rip),%rax        # 2c370 <_gm_+0x10>
    d9f0:	48 89 3d 91 e9 01 00 	mov    %rdi,0x1e991(%rip)        # 2c388 <_gm_+0x28>
    d9f7:	48 89 05 72 e9 01 00 	mov    %rax,0x1e972(%rip)        # 2c370 <_gm_+0x10>
    d9fe:	48 83 c8 01          	or     $0x1,%rax
    da02:	48 89 47 08          	mov    %rax,0x8(%rdi)
    da06:	e9 6f ef ff ff       	jmp    c97a <dlmalloc+0x40a>
    da0b:	49 89 76 20          	mov    %rsi,0x20(%r14)
    da0f:	e9 3f f2 ff ff       	jmp    cc53 <dlmalloc+0x6e3>
    da14:	4c 89 f8             	mov    %r15,%rax
    da17:	48 89 f2             	mov    %rsi,%rdx
    da1a:	e9 84 f9 ff ff       	jmp    d3a3 <dlmalloc+0xe33>
    da1f:	4b 8d 44 05 00       	lea    0x0(%r13,%r8,1),%rax
    da24:	48 89 c2             	mov    %rax,%rdx
    da27:	4c 01 e0             	add    %r12,%rax
    da2a:	48 83 ca 03          	or     $0x3,%rdx
    da2e:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    da33:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    da38:	48 89 08             	mov    %rcx,(%rax)
    da3b:	e9 dd f4 ff ff       	jmp    cf1d <dlmalloc+0x9ad>
    da40:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    da45:	48 85 c0             	test   %rax,%rax
    da48:	0f 84 2f 03 00 00    	je     dd7d <dlmalloc+0x180d>
    da4e:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
    da53:	e9 b0 fc ff ff       	jmp    d708 <dlmalloc+0x1198>
    da58:	44 09 c9             	or     %r9d,%ecx
    da5b:	49 01 ee             	add    %rbp,%r14
    da5e:	4a 89 bc dd 58 02 00 	mov    %rdi,0x258(%rbp,%r11,8)
    da65:	00 
    da66:	89 0d f8 e8 01 00    	mov    %ecx,0x1e8f8(%rip)        # 2c364 <_gm_+0x4>
    da6c:	4c 89 77 30          	mov    %r14,0x30(%rdi)
    da70:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    da74:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    da78:	e9 9f f2 ff ff       	jmp    cd1c <dlmalloc+0x7ac>
    da7d:	48 89 c2             	mov    %rax,%rdx
    da80:	48 c1 ea 08          	shr    $0x8,%rdx
    da84:	89 d1                	mov    %edx,%ecx
    da86:	85 d2                	test   %edx,%edx
    da88:	0f 84 dd 02 00 00    	je     dd6b <dlmalloc+0x17fb>
    da8e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    da94:	0f 87 0d 04 00 00    	ja     dea7 <dlmalloc+0x1937>
    da9a:	0f bd d2             	bsr    %edx,%edx
    da9d:	b9 26 00 00 00       	mov    $0x26,%ecx
    daa2:	48 89 c6             	mov    %rax,%rsi
    daa5:	83 f2 1f             	xor    $0x1f,%edx
    daa8:	29 d1                	sub    %edx,%ecx
    daaa:	48 d3 ee             	shr    %cl,%rsi
    daad:	48 89 f1             	mov    %rsi,%rcx
    dab0:	be 1f 00 00 00       	mov    $0x1f,%esi
    dab5:	83 e1 01             	and    $0x1,%ecx
    dab8:	29 d6                	sub    %edx,%esi
    daba:	ba 01 00 00 00       	mov    $0x1,%edx
    dabf:	8d 34 71             	lea    (%rcx,%rsi,2),%esi
    dac2:	48 89 f1             	mov    %rsi,%rcx
    dac5:	4c 8d 04 f5 58 02 00 	lea    0x258(,%rsi,8),%r8
    dacc:	00 
    dacd:	d3 e2                	shl    %cl,%edx
    dacf:	44 8b 15 8e e8 01 00 	mov    0x1e88e(%rip),%r10d        # 2c364 <_gm_+0x4>
    dad6:	89 4f 38             	mov    %ecx,0x38(%rdi)
    dad9:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
    dae0:	00 
    dae1:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    dae8:	00 
    dae9:	44 85 d2             	test   %r10d,%edx
    daec:	0f 85 af 01 00 00    	jne    dca1 <dlmalloc+0x1731>
    daf2:	44 09 d2             	or     %r10d,%edx
    daf5:	49 01 e8             	add    %rbp,%r8
    daf8:	48 89 bc f5 58 02 00 	mov    %rdi,0x258(%rbp,%rsi,8)
    daff:	00 
    db00:	89 15 5e e8 01 00    	mov    %edx,0x1e85e(%rip)        # 2c364 <_gm_+0x4>
    db06:	4c 89 47 30          	mov    %r8,0x30(%rdi)
    db0a:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    db0e:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    db12:	e9 63 ee ff ff       	jmp    c97a <dlmalloc+0x40a>
    db17:	44 09 c8             	or     %r9d,%eax
    db1a:	89 05 40 e8 01 00    	mov    %eax,0x1e840(%rip)        # 2c360 <_gm_>
    db20:	48 89 d0             	mov    %rdx,%rax
    db23:	e9 e4 f1 ff ff       	jmp    cd0c <dlmalloc+0x79c>
    db28:	4a 89 74 f5 08       	mov    %rsi,0x8(%rbp,%r14,8)
    db2d:	48 85 f6             	test   %rsi,%rsi
    db30:	0f 85 16 f3 ff ff    	jne    ce4c <dlmalloc+0x8dc>
    db36:	41 0f b3 c1          	btr    %eax,%r9d
    db3a:	44 89 0d 23 e8 01 00 	mov    %r9d,0x1e823(%rip)        # 2c364 <_gm_+0x4>
    db41:	e9 49 f3 ff ff       	jmp    ce8f <dlmalloc+0x91f>
    db46:	49 8d 14 c1          	lea    (%r9,%rax,8),%rdx
    db4a:	49 39 d2             	cmp    %rdx,%r10
    db4d:	0f 87 f5 f1 ff ff    	ja     cd48 <dlmalloc+0x7d8>
    db53:	49 89 3c c1          	mov    %rdi,(%r9,%rax,8)
    db57:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
    db5b:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    db5f:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    db63:	e9 b4 f1 ff ff       	jmp    cd1c <dlmalloc+0x7ac>
    db68:	48 03 05 f9 e7 01 00 	add    0x1e7f9(%rip),%rax        # 2c368 <_gm_+0x8>
    db6f:	48 89 3d 0a e8 01 00 	mov    %rdi,0x1e80a(%rip)        # 2c380 <_gm_+0x20>
    db76:	48 89 c2             	mov    %rax,%rdx
    db79:	48 89 05 e8 e7 01 00 	mov    %rax,0x1e7e8(%rip)        # 2c368 <_gm_+0x8>
    db80:	48 83 ca 01          	or     $0x1,%rdx
    db84:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    db88:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
    db8c:	e9 e9 ed ff ff       	jmp    c97a <dlmalloc+0x40a>
    db91:	4d 89 c3             	mov    %r8,%r11
    db94:	4c 89 c1             	mov    %r8,%rcx
    db97:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    db9b:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
    db9f:	48 c1 e9 03          	shr    $0x3,%rcx
    dba3:	49 81 f8 ff 00 00 00 	cmp    $0xff,%r8
    dbaa:	0f 87 00 02 00 00    	ja     ddb0 <dlmalloc+0x1840>
    dbb0:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    dbb4:	4c 8b 42 10          	mov    0x10(%rdx),%r8
    dbb8:	4e 8d 54 d5 48       	lea    0x48(%rbp,%r10,8),%r10
    dbbd:	4d 39 d0             	cmp    %r10,%r8
    dbc0:	0f 85 68 f1 ff ff    	jne    cd2e <dlmalloc+0x7be>
    dbc6:	49 39 f0             	cmp    %rsi,%r8
    dbc9:	0f 84 ba 03 00 00    	je     df89 <dlmalloc+0x1a19>
    dbcf:	49 39 f2             	cmp    %rsi,%r10
    dbd2:	0f 85 c3 03 00 00    	jne    df9b <dlmalloc+0x1a2b>
    dbd8:	49 89 70 18          	mov    %rsi,0x18(%r8)
    dbdc:	4c 89 46 10          	mov    %r8,0x10(%rsi)
    dbe0:	4c 01 da             	add    %r11,%rdx
    dbe3:	4c 01 d8             	add    %r11,%rax
    dbe6:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    dbea:	e9 ff f6 ff ff       	jmp    d2ee <dlmalloc+0xd7e>
    dbef:	41 be 50 03 00 00    	mov    $0x350,%r14d
    dbf5:	41 b9 00 00 00 80    	mov    $0x80000000,%r9d
    dbfb:	b8 1f 00 00 00       	mov    $0x1f,%eax
    dc00:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
    dc06:	e9 44 fc ff ff       	jmp    d84f <dlmalloc+0x12df>
    dc0b:	4c 89 ff             	mov    %r15,%rdi
    dc0e:	4c 89 04 24          	mov    %r8,(%rsp)
    dc12:	e8 39 de ff ff       	call   ba50 <sbrk>
    dc17:	4c 8b 04 24          	mov    (%rsp),%r8
    dc1b:	4c 39 f0             	cmp    %r14,%rax
    dc1e:	49 89 c4             	mov    %rax,%r12
    dc21:	0f 84 cd 02 00 00    	je     def4 <dlmalloc+0x1984>
    dc27:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    dc2b:	0f 84 8f eb ff ff    	je     c7c0 <dlmalloc+0x250>
    dc31:	49 8d 45 60          	lea    0x60(%r13),%rax
    dc35:	4c 39 f8             	cmp    %r15,%rax
    dc38:	0f 86 a8 f3 ff ff    	jbe    cfe6 <dlmalloc+0xa76>
    dc3e:	48 8b 05 eb ea 01 00 	mov    0x1eaeb(%rip),%rax        # 2c730 <mparams+0x10>
    dc45:	4d 89 f9             	mov    %r15,%r9
    dc48:	49 f7 d9             	neg    %r9
    dc4b:	4d 8d 74 05 5f       	lea    0x5f(%r13,%rax,1),%r14
    dc50:	48 f7 d8             	neg    %rax
    dc53:	4d 29 fe             	sub    %r15,%r14
    dc56:	49 21 c6             	and    %rax,%r14
    dc59:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dc60:	ff ff 7f 
    dc63:	49 39 c6             	cmp    %rax,%r14
    dc66:	0f 87 7a f3 ff ff    	ja     cfe6 <dlmalloc+0xa76>
    dc6c:	4c 89 f7             	mov    %r14,%rdi
    dc6f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    dc74:	4c 89 04 24          	mov    %r8,(%rsp)
    dc78:	e8 d3 dd ff ff       	call   ba50 <sbrk>
    dc7d:	4c 8b 04 24          	mov    (%rsp),%r8
    dc81:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    dc86:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    dc8a:	0f 84 da 02 00 00    	je     df6a <dlmalloc+0x19fa>
    dc90:	4d 01 f7             	add    %r14,%r15
    dc93:	e9 4e f3 ff ff       	jmp    cfe6 <dlmalloc+0xa76>
    dc98:	49 89 77 20          	mov    %rsi,0x20(%r15)
    dc9c:	e9 a6 f1 ff ff       	jmp    ce47 <dlmalloc+0x8d7>
    dca1:	48 8b b4 f5 58 02 00 	mov    0x258(%rbp,%rsi,8),%rsi
    dca8:	00 
    dca9:	83 f9 1f             	cmp    $0x1f,%ecx
    dcac:	74 0b                	je     dcb9 <dlmalloc+0x1749>
    dcae:	d1 e9                	shr    %ecx
    dcb0:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    dcb6:	41 29 c9             	sub    %ecx,%r9d
    dcb9:	44 89 c9             	mov    %r9d,%ecx
    dcbc:	48 89 c2             	mov    %rax,%rdx
    dcbf:	48 d3 e2             	shl    %cl,%rdx
    dcc2:	48 89 d1             	mov    %rdx,%rcx
    dcc5:	eb 1e                	jmp    dce5 <dlmalloc+0x1775>
    dcc7:	48 89 ca             	mov    %rcx,%rdx
    dcca:	48 01 c9             	add    %rcx,%rcx
    dccd:	48 c1 ea 3f          	shr    $0x3f,%rdx
    dcd1:	48 83 c2 04          	add    $0x4,%rdx
    dcd5:	4c 8b 04 d6          	mov    (%rsi,%rdx,8),%r8
    dcd9:	4d 85 c0             	test   %r8,%r8
    dcdc:	0f 84 9f 01 00 00    	je     de81 <dlmalloc+0x1911>
    dce2:	4c 89 c6             	mov    %r8,%rsi
    dce5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    dce9:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    dced:	48 39 d0             	cmp    %rdx,%rax
    dcf0:	75 d5                	jne    dcc7 <dlmalloc+0x1757>
    dcf2:	48 8b 46 10          	mov    0x10(%rsi),%rax
    dcf6:	48 8b 15 7b e6 01 00 	mov    0x1e67b(%rip),%rdx        # 2c378 <_gm_+0x18>
    dcfd:	48 39 d0             	cmp    %rdx,%rax
    dd00:	0f 82 42 f0 ff ff    	jb     cd48 <dlmalloc+0x7d8>
    dd06:	48 39 d6             	cmp    %rdx,%rsi
    dd09:	0f 82 39 f0 ff ff    	jb     cd48 <dlmalloc+0x7d8>
    dd0f:	48 89 78 18          	mov    %rdi,0x18(%rax)
    dd13:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    dd17:	48 89 47 10          	mov    %rax,0x10(%rdi)
    dd1b:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    dd1f:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    dd26:	00 
    dd27:	e9 4e ec ff ff       	jmp    c97a <dlmalloc+0x40a>
    dd2c:	44 09 f2             	or     %r14d,%edx
    dd2f:	89 15 2b e6 01 00    	mov    %edx,0x1e62b(%rip)        # 2c360 <_gm_>
    dd35:	4c 89 ca             	mov    %r9,%rdx
    dd38:	e9 c2 f1 ff ff       	jmp    ceff <dlmalloc+0x98f>
    dd3d:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    dd42:	48 85 c0             	test   %rax,%rax
    dd45:	0f 84 76 01 00 00    	je     dec1 <dlmalloc+0x1951>
    dd4b:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
    dd50:	e9 4b fc ff ff       	jmp    d9a0 <dlmalloc+0x1430>
    dd55:	48 8b 50 10          	mov    0x10(%rax),%rdx
    dd59:	48 3b 15 18 e6 01 00 	cmp    0x1e618(%rip),%rdx        # 2c378 <_gm_+0x18>
    dd60:	0f 83 da f5 ff ff    	jae    d340 <dlmalloc+0xdd0>
    dd66:	e9 dd ef ff ff       	jmp    cd48 <dlmalloc+0x7d8>
    dd6b:	ba 01 00 00 00       	mov    $0x1,%edx
    dd70:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    dd76:	89 ce                	mov    %ecx,%esi
    dd78:	e9 52 fd ff ff       	jmp    dacf <dlmalloc+0x155f>
    dd7d:	4d 85 f6             	test   %r14,%r14
    dd80:	0f 84 15 ef ff ff    	je     cc9b <dlmalloc+0x72b>
    dd86:	41 8b 44 24 38       	mov    0x38(%r12),%eax
    dd8b:	31 f6                	xor    %esi,%esi
    dd8d:	48 89 c1             	mov    %rax,%rcx
    dd90:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
    dd94:	4c 3b a4 c5 58 02 00 	cmp    0x258(%rbp,%rax,8),%r12
    dd9b:	00 
    dd9c:	0f 85 9a ee ff ff    	jne    cc3c <dlmalloc+0x6cc>
    dda2:	4a c7 44 dd 08 00 00 	movq   $0x0,0x8(%rbp,%r11,8)
    dda9:	00 00 
    ddab:	e9 7d fb ff ff       	jmp    d92d <dlmalloc+0x13bd>
    ddb0:	4c 8b 52 30          	mov    0x30(%rdx),%r10
    ddb4:	48 39 f2             	cmp    %rsi,%rdx
    ddb7:	0f 84 5f 01 00 00    	je     df1c <dlmalloc+0x19ac>
    ddbd:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    ddc1:	48 3b 0d b0 e5 01 00 	cmp    0x1e5b0(%rip),%rcx        # 2c378 <_gm_+0x18>
    ddc8:	0f 82 7a ef ff ff    	jb     cd48 <dlmalloc+0x7d8>
    ddce:	48 39 51 18          	cmp    %rdx,0x18(%rcx)
    ddd2:	0f 85 70 ef ff ff    	jne    cd48 <dlmalloc+0x7d8>
    ddd8:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
    dddc:	0f 85 66 ef ff ff    	jne    cd48 <dlmalloc+0x7d8>
    dde2:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    dde6:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    ddea:	4d 85 d2             	test   %r10,%r10
    dded:	0f 84 ed fd ff ff    	je     dbe0 <dlmalloc+0x1670>
    ddf3:	44 8b 42 38          	mov    0x38(%rdx),%r8d
    ddf7:	4c 89 c1             	mov    %r8,%rcx
    ddfa:	4d 8d 68 4a          	lea    0x4a(%r8),%r13
    ddfe:	4a 39 94 c5 58 02 00 	cmp    %rdx,0x258(%rbp,%r8,8)
    de05:	00 
    de06:	0f 84 f0 00 00 00    	je     defc <dlmalloc+0x198c>
    de0c:	4c 3b 15 65 e5 01 00 	cmp    0x1e565(%rip),%r10        # 2c378 <_gm_+0x18>
    de13:	0f 82 2f ef ff ff    	jb     cd48 <dlmalloc+0x7d8>
    de19:	49 39 52 20          	cmp    %rdx,0x20(%r10)
    de1d:	0f 84 aa 01 00 00    	je     dfcd <dlmalloc+0x1a5d>
    de23:	49 89 72 28          	mov    %rsi,0x28(%r10)
    de27:	48 85 f6             	test   %rsi,%rsi
    de2a:	0f 84 b0 fd ff ff    	je     dbe0 <dlmalloc+0x1670>
    de30:	4c 8b 05 41 e5 01 00 	mov    0x1e541(%rip),%r8        # 2c378 <_gm_+0x18>
    de37:	4c 39 c6             	cmp    %r8,%rsi
    de3a:	0f 82 08 ef ff ff    	jb     cd48 <dlmalloc+0x7d8>
    de40:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    de44:	4c 89 56 30          	mov    %r10,0x30(%rsi)
    de48:	48 85 c9             	test   %rcx,%rcx
    de4b:	74 11                	je     de5e <dlmalloc+0x18ee>
    de4d:	49 39 c8             	cmp    %rcx,%r8
    de50:	0f 87 f2 ee ff ff    	ja     cd48 <dlmalloc+0x7d8>
    de56:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    de5a:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    de5e:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
    de62:	48 85 c9             	test   %rcx,%rcx
    de65:	0f 84 75 fd ff ff    	je     dbe0 <dlmalloc+0x1670>
    de6b:	49 39 c8             	cmp    %rcx,%r8
    de6e:	0f 87 d4 ee ff ff    	ja     cd48 <dlmalloc+0x7d8>
    de74:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    de78:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    de7c:	e9 5f fd ff ff       	jmp    dbe0 <dlmalloc+0x1670>
    de81:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
    de85:	48 39 05 ec e4 01 00 	cmp    %rax,0x1e4ec(%rip)        # 2c378 <_gm_+0x18>
    de8c:	0f 87 b6 ee ff ff    	ja     cd48 <dlmalloc+0x7d8>
    de92:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    de96:	48 89 77 30          	mov    %rsi,0x30(%rdi)
    de9a:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
    de9e:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
    dea2:	e9 d3 ea ff ff       	jmp    c97a <dlmalloc+0x40a>
    dea7:	ba 00 00 00 80       	mov    $0x80000000,%edx
    deac:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    deb2:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    deb7:	be 1f 00 00 00       	mov    $0x1f,%esi
    debc:	e9 0e fc ff ff       	jmp    dacf <dlmalloc+0x155f>
    dec1:	4d 85 ff             	test   %r15,%r15
    dec4:	0f 84 c5 ef ff ff    	je     ce8f <dlmalloc+0x91f>
    deca:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
    decf:	31 f6                	xor    %esi,%esi
    ded1:	48 89 c8             	mov    %rcx,%rax
    ded4:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
    ded8:	4c 3b a4 cd 58 02 00 	cmp    0x258(%rbp,%rcx,8),%r12
    dedf:	00 
    dee0:	0f 85 4a ef ff ff    	jne    ce30 <dlmalloc+0x8c0>
    dee6:	4a c7 44 f5 08 00 00 	movq   $0x0,0x8(%rbp,%r14,8)
    deed:	00 00 
    deef:	e9 42 fc ff ff       	jmp    db36 <dlmalloc+0x15c6>
    def4:	4d 89 f4             	mov    %r14,%r12
    def7:	e9 ea f0 ff ff       	jmp    cfe6 <dlmalloc+0xa76>
    defc:	4a 89 74 ed 08       	mov    %rsi,0x8(%rbp,%r13,8)
    df01:	48 85 f6             	test   %rsi,%rsi
    df04:	0f 85 26 ff ff ff    	jne    de30 <dlmalloc+0x18c0>
    df0a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    df0f:	d3 c6                	rol    %cl,%esi
    df11:	21 35 4d e4 01 00    	and    %esi,0x1e44d(%rip)        # 2c364 <_gm_+0x4>
    df17:	e9 c4 fc ff ff       	jmp    dbe0 <dlmalloc+0x1670>
    df1c:	48 8b 72 28          	mov    0x28(%rdx),%rsi
    df20:	48 85 f6             	test   %rsi,%rsi
    df23:	0f 84 8e 00 00 00    	je     dfb7 <dlmalloc+0x1a47>
    df29:	4c 8d 42 28          	lea    0x28(%rdx),%r8
    df2d:	48 89 f1             	mov    %rsi,%rcx
    df30:	4d 89 c5             	mov    %r8,%r13
    df33:	48 89 ce             	mov    %rcx,%rsi
    df36:	4c 8d 41 28          	lea    0x28(%rcx),%r8
    df3a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    df3e:	48 85 c9             	test   %rcx,%rcx
    df41:	75 ed                	jne    df30 <dlmalloc+0x19c0>
    df43:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    df47:	4c 8d 46 20          	lea    0x20(%rsi),%r8
    df4b:	48 85 c9             	test   %rcx,%rcx
    df4e:	75 e0                	jne    df30 <dlmalloc+0x19c0>
    df50:	4c 39 2d 21 e4 01 00 	cmp    %r13,0x1e421(%rip)        # 2c378 <_gm_+0x18>
    df57:	0f 87 eb ed ff ff    	ja     cd48 <dlmalloc+0x7d8>
    df5d:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    df64:	00 
    df65:	e9 80 fe ff ff       	jmp    ddea <dlmalloc+0x187a>
    df6a:	4c 89 cf             	mov    %r9,%rdi
    df6d:	4c 89 04 24          	mov    %r8,(%rsp)
    df71:	e8 da da ff ff       	call   ba50 <sbrk>
    df76:	c7 05 d0 e7 01 00 00 	movl   $0x0,0x1e7d0(%rip)        # 2c750 <malloc_global_mutex>
    df7d:	00 00 00 
    df80:	4c 8b 04 24          	mov    (%rsp),%r8
    df84:	e9 41 e8 ff ff       	jmp    c7ca <dlmalloc+0x25a>
    df89:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    df8e:	d3 c6                	rol    %cl,%esi
    df90:	21 35 ca e3 01 00    	and    %esi,0x1e3ca(%rip)        # 2c360 <_gm_>
    df96:	e9 45 fc ff ff       	jmp    dbe0 <dlmalloc+0x1670>
    df9b:	48 39 35 d6 e3 01 00 	cmp    %rsi,0x1e3d6(%rip)        # 2c378 <_gm_+0x18>
    dfa2:	0f 87 a0 ed ff ff    	ja     cd48 <dlmalloc+0x7d8>
    dfa8:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
    dfac:	0f 84 26 fc ff ff    	je     dbd8 <dlmalloc+0x1668>
    dfb2:	e9 91 ed ff ff       	jmp    cd48 <dlmalloc+0x7d8>
    dfb7:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    dfbb:	48 85 f6             	test   %rsi,%rsi
    dfbe:	0f 84 26 fe ff ff    	je     ddea <dlmalloc+0x187a>
    dfc4:	4c 8d 42 20          	lea    0x20(%rdx),%r8
    dfc8:	e9 60 ff ff ff       	jmp    df2d <dlmalloc+0x19bd>
    dfcd:	49 89 72 20          	mov    %rsi,0x20(%r10)
    dfd1:	e9 51 fe ff ff       	jmp    de27 <dlmalloc+0x18b7>
    dfd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    dfdd:	00 00 00 

000000000000dfe0 <dlfree>:
    dfe0:	f3 0f 1e fa          	endbr64 
    dfe4:	48 85 ff             	test   %rdi,%rdi
    dfe7:	0f 84 eb 01 00 00    	je     e1d8 <dlfree+0x1f8>
    dfed:	41 55                	push   %r13
    dfef:	48 8d 47 f0          	lea    -0x10(%rdi),%rax
    dff3:	41 54                	push   %r12
    dff5:	55                   	push   %rbp
    dff6:	53                   	push   %rbx
    dff7:	48 83 ec 08          	sub    $0x8,%rsp
    dffb:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
    dfff:	48 8b 0d 1a e7 01 00 	mov    0x1e71a(%rip),%rcx        # 2c720 <mparams>
    e006:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    e00a:	48 8b 5c 17 f0       	mov    -0x10(%rdi,%rdx,1),%rbx
    e00f:	48 31 cb             	xor    %rcx,%rbx
    e012:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
    e016:	0f 85 7c 02 00 00    	jne    e298 <dlfree+0x2b8>
    e01c:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    e023:	0f 85 67 01 00 00    	jne    e190 <dlfree+0x1b0>
    e029:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    e02d:	49 39 c0             	cmp    %rax,%r8
    e030:	0f 87 9a 01 00 00    	ja     e1d0 <dlfree+0x1f0>
    e036:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    e03a:	49 89 c9             	mov    %rcx,%r9
    e03d:	41 83 e1 03          	and    $0x3,%r9d
    e041:	49 83 f9 01          	cmp    $0x1,%r9
    e045:	0f 84 85 01 00 00    	je     e1d0 <dlfree+0x1f0>
    e04b:	48 89 ca             	mov    %rcx,%rdx
    e04e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    e052:	83 e1 01             	and    $0x1,%ecx
    e055:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
    e059:	0f 84 c1 00 00 00    	je     e120 <dlfree+0x140>
    e05f:	48 39 f0             	cmp    %rsi,%rax
    e062:	0f 83 68 01 00 00    	jae    e1d0 <dlfree+0x1f0>
    e068:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e06c:	f6 c1 01             	test   $0x1,%cl
    e06f:	0f 84 5b 01 00 00    	je     e1d0 <dlfree+0x1f0>
    e075:	f6 c1 02             	test   $0x2,%cl
    e078:	0f 85 62 01 00 00    	jne    e1e0 <dlfree+0x200>
    e07e:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    e082:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    e086:	0f 84 7c 06 00 00    	je     e708 <dlfree+0x728>
    e08c:	49 39 f3             	cmp    %rsi,%r11
    e08f:	0f 84 9b 07 00 00    	je     e830 <dlfree+0x850>
    e095:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e099:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
    e09d:	48 89 cd             	mov    %rcx,%rbp
    e0a0:	48 01 ca             	add    %rcx,%rdx
    e0a3:	48 c1 ed 03          	shr    $0x3,%rbp
    e0a7:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    e0ae:	0f 87 94 03 00 00    	ja     e448 <dlfree+0x468>
    e0b4:	44 8d 54 2d 00       	lea    0x0(%rbp,%rbp,1),%r10d
    e0b9:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    e0bd:	4a 8d 4c d3 48       	lea    0x48(%rbx,%r10,8),%rcx
    e0c2:	4c 39 c9             	cmp    %r9,%rcx
    e0c5:	0f 85 4a 05 00 00    	jne    e615 <dlfree+0x635>
    e0cb:	4c 39 cf             	cmp    %r9,%rdi
    e0ce:	0f 85 62 05 00 00    	jne    e636 <dlfree+0x656>
    e0d4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    e0d9:	89 e9                	mov    %ebp,%ecx
    e0db:	d3 c6                	rol    %cl,%esi
    e0dd:	21 33                	and    %esi,(%rbx)
    e0df:	90                   	nop
    e0e0:	48 89 d1             	mov    %rdx,%rcx
    e0e3:	48 83 c9 01          	or     $0x1,%rcx
    e0e7:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e0eb:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    e0ef:	4c 39 d8             	cmp    %r11,%rax
    e0f2:	0f 85 ff 00 00 00    	jne    e1f7 <dlfree+0x217>
    e0f8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    e0fc:	0f 1f 40 00          	nopl   0x0(%rax)
    e100:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    e107:	0f 85 39 01 00 00    	jne    e246 <dlfree+0x266>
    e10d:	48 83 c4 08          	add    $0x8,%rsp
    e111:	5b                   	pop    %rbx
    e112:	5d                   	pop    %rbp
    e113:	41 5c                	pop    %r12
    e115:	41 5d                	pop    %r13
    e117:	c3                   	ret    
    e118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e11f:	00 
    e120:	4d 85 c9             	test   %r9,%r9
    e123:	74 db                	je     e100 <dlfree+0x120>
    e125:	4c 8b 4f f0          	mov    -0x10(%rdi),%r9
    e129:	4c 29 c8             	sub    %r9,%rax
    e12c:	4c 01 ca             	add    %r9,%rdx
    e12f:	49 39 c0             	cmp    %rax,%r8
    e132:	0f 87 98 00 00 00    	ja     e1d0 <dlfree+0x1f0>
    e138:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    e13c:	0f 84 ce 03 00 00    	je     e510 <dlfree+0x530>
    e142:	4c 89 c9             	mov    %r9,%rcx
    e145:	48 8b 78 18          	mov    0x18(%rax),%rdi
    e149:	48 c1 e9 03          	shr    $0x3,%rcx
    e14d:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    e154:	0f 87 26 02 00 00    	ja     e380 <dlfree+0x3a0>
    e15a:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    e15e:	4c 8b 48 10          	mov    0x10(%rax),%r9
    e162:	4e 8d 54 d3 48       	lea    0x48(%rbx,%r10,8),%r10
    e167:	4d 39 ca             	cmp    %r9,%r10
    e16a:	0f 85 ed 04 00 00    	jne    e65d <dlfree+0x67d>
    e170:	4c 39 cf             	cmp    %r9,%rdi
    e173:	0f 85 05 05 00 00    	jne    e67e <dlfree+0x69e>
    e179:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    e17e:	d3 c7                	rol    %cl,%edi
    e180:	21 3b                	and    %edi,(%rbx)
    e182:	e9 d8 fe ff ff       	jmp    e05f <dlfree+0x7f>
    e187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e18e:	00 00 
    e190:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
    e197:	ba 01 00 00 00       	mov    $0x1,%edx
    e19c:	87 11                	xchg   %edx,(%rcx)
    e19e:	85 d2                	test   %edx,%edx
    e1a0:	0f 84 83 fe ff ff    	je     e029 <dlfree+0x49>
    e1a6:	be 01 00 00 00       	mov    $0x1,%esi
    e1ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e1b0:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
    e1b6:	85 d2                	test   %edx,%edx
    e1b8:	75 f6                	jne    e1b0 <dlfree+0x1d0>
    e1ba:	89 f2                	mov    %esi,%edx
    e1bc:	87 11                	xchg   %edx,(%rcx)
    e1be:	85 d2                	test   %edx,%edx
    e1c0:	75 ee                	jne    e1b0 <dlfree+0x1d0>
    e1c2:	e9 62 fe ff ff       	jmp    e029 <dlfree+0x49>
    e1c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e1ce:	00 00 
    e1d0:	e8 2f 34 01 00       	call   21604 <abort>
    e1d5:	0f 1f 00             	nopl   (%rax)
    e1d8:	c3                   	ret    
    e1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e1e0:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    e1e4:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    e1e8:	48 89 d1             	mov    %rdx,%rcx
    e1eb:	48 83 c9 01          	or     $0x1,%rcx
    e1ef:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e1f3:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    e1f7:	48 89 d1             	mov    %rdx,%rcx
    e1fa:	48 c1 e9 03          	shr    $0x3,%rcx
    e1fe:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    e205:	77 59                	ja     e260 <dlfree+0x280>
    e207:	8d 14 09             	lea    (%rcx,%rcx,1),%edx
    e20a:	8b 3b                	mov    (%rbx),%edi
    e20c:	48 8d 74 d3 48       	lea    0x48(%rbx,%rdx,8),%rsi
    e211:	ba 01 00 00 00       	mov    $0x1,%edx
    e216:	d3 e2                	shl    %cl,%edx
    e218:	85 d7                	test   %edx,%edi
    e21a:	0f 84 88 04 00 00    	je     e6a8 <dlfree+0x6c8>
    e220:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    e224:	49 39 d0             	cmp    %rdx,%r8
    e227:	77 6f                	ja     e298 <dlfree+0x2b8>
    e229:	48 89 46 10          	mov    %rax,0x10(%rsi)
    e22d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e231:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e235:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e239:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    e240:	0f 84 c7 fe ff ff    	je     e10d <dlfree+0x12d>
    e246:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    e24d:	00 00 00 
    e250:	48 83 c4 08          	add    $0x8,%rsp
    e254:	5b                   	pop    %rbx
    e255:	5d                   	pop    %rbp
    e256:	41 5c                	pop    %r12
    e258:	41 5d                	pop    %r13
    e25a:	c3                   	ret    
    e25b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e260:	48 89 d6             	mov    %rdx,%rsi
    e263:	48 c1 ee 08          	shr    $0x8,%rsi
    e267:	89 f1                	mov    %esi,%ecx
    e269:	85 f6                	test   %esi,%esi
    e26b:	74 33                	je     e2a0 <dlfree+0x2c0>
    e26d:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e273:	0f 86 cf 02 00 00    	jbe    e548 <dlfree+0x568>
    e279:	be 00 00 00 80       	mov    $0x80000000,%esi
    e27e:	41 ba 50 03 00 00    	mov    $0x350,%r10d
    e284:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e289:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    e28f:	eb 1d                	jmp    e2ae <dlfree+0x2ce>
    e291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e298:	e8 67 33 01 00       	call   21604 <abort>
    e29d:	0f 1f 00             	nopl   (%rax)
    e2a0:	be 01 00 00 00       	mov    $0x1,%esi
    e2a5:	41 ba 58 02 00 00    	mov    $0x258,%r10d
    e2ab:	41 89 c9             	mov    %ecx,%r9d
    e2ae:	8b 7b 04             	mov    0x4(%rbx),%edi
    e2b1:	89 48 38             	mov    %ecx,0x38(%rax)
    e2b4:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    e2bb:	00 
    e2bc:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    e2c3:	00 
    e2c4:	85 fe                	test   %edi,%esi
    e2c6:	0f 84 ec 03 00 00    	je     e6b8 <dlfree+0x6d8>
    e2cc:	4a 8b b4 cb 58 02 00 	mov    0x258(%rbx,%r9,8),%rsi
    e2d3:	00 
    e2d4:	48 89 d7             	mov    %rdx,%rdi
    e2d7:	83 f9 1f             	cmp    $0x1f,%ecx
    e2da:	74 32                	je     e30e <dlfree+0x32e>
    e2dc:	d1 e9                	shr    %ecx
    e2de:	bf 39 00 00 00       	mov    $0x39,%edi
    e2e3:	29 cf                	sub    %ecx,%edi
    e2e5:	89 f9                	mov    %edi,%ecx
    e2e7:	48 89 d7             	mov    %rdx,%rdi
    e2ea:	48 d3 e7             	shl    %cl,%rdi
    e2ed:	eb 1f                	jmp    e30e <dlfree+0x32e>
    e2ef:	90                   	nop
    e2f0:	48 89 f9             	mov    %rdi,%rcx
    e2f3:	48 01 ff             	add    %rdi,%rdi
    e2f6:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e2fa:	48 83 c1 04          	add    $0x4,%rcx
    e2fe:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    e302:	4d 85 c9             	test   %r9,%r9
    e305:	0f 84 d5 03 00 00    	je     e6e0 <dlfree+0x700>
    e30b:	4c 89 ce             	mov    %r9,%rsi
    e30e:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e312:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e316:	48 39 d1             	cmp    %rdx,%rcx
    e319:	75 d5                	jne    e2f0 <dlfree+0x310>
    e31b:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    e31f:	49 39 f0             	cmp    %rsi,%r8
    e322:	0f 87 70 ff ff ff    	ja     e298 <dlfree+0x2b8>
    e328:	49 39 d0             	cmp    %rdx,%r8
    e32b:	0f 87 67 ff ff ff    	ja     e298 <dlfree+0x2b8>
    e331:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e335:	48 89 46 10          	mov    %rax,0x10(%rsi)
    e339:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e33d:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e341:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    e348:	00 
    e349:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    e34e:	0f 85 ac fd ff ff    	jne    e100 <dlfree+0x120>
    e354:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    e35b:	48 85 c0             	test   %rax,%rax
    e35e:	74 09                	je     e369 <dlfree+0x389>
    e360:	48 8b 40 10          	mov    0x10(%rax),%rax
    e364:	48 85 c0             	test   %rax,%rax
    e367:	75 f7                	jne    e360 <dlfree+0x380>
    e369:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    e370:	ff 
    e371:	e9 8a fd ff ff       	jmp    e100 <dlfree+0x120>
    e376:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e37d:	00 00 00 
    e380:	4c 8b 58 30          	mov    0x30(%rax),%r11
    e384:	48 39 c7             	cmp    %rax,%rdi
    e387:	0f 84 f6 01 00 00    	je     e583 <dlfree+0x5a3>
    e38d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e391:	49 39 c8             	cmp    %rcx,%r8
    e394:	0f 87 fe fe ff ff    	ja     e298 <dlfree+0x2b8>
    e39a:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    e39e:	0f 85 f4 fe ff ff    	jne    e298 <dlfree+0x2b8>
    e3a4:	48 39 47 10          	cmp    %rax,0x10(%rdi)
    e3a8:	0f 85 ea fe ff ff    	jne    e298 <dlfree+0x2b8>
    e3ae:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    e3b2:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    e3b6:	4d 85 db             	test   %r11,%r11
    e3b9:	0f 84 a0 fc ff ff    	je     e05f <dlfree+0x7f>
    e3bf:	44 8b 48 38          	mov    0x38(%rax),%r9d
    e3c3:	4c 89 c9             	mov    %r9,%rcx
    e3c6:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    e3ca:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
    e3d1:	0f 84 79 04 00 00    	je     e850 <dlfree+0x870>
    e3d7:	4d 39 d8             	cmp    %r11,%r8
    e3da:	0f 87 b8 fe ff ff    	ja     e298 <dlfree+0x2b8>
    e3e0:	49 39 43 20          	cmp    %rax,0x20(%r11)
    e3e4:	0f 84 b9 04 00 00    	je     e8a3 <dlfree+0x8c3>
    e3ea:	49 89 7b 28          	mov    %rdi,0x28(%r11)
    e3ee:	48 85 ff             	test   %rdi,%rdi
    e3f1:	0f 84 68 fc ff ff    	je     e05f <dlfree+0x7f>
    e3f7:	49 39 f8             	cmp    %rdi,%r8
    e3fa:	0f 87 98 fe ff ff    	ja     e298 <dlfree+0x2b8>
    e400:	48 8b 48 20          	mov    0x20(%rax),%rcx
    e404:	4c 89 5f 30          	mov    %r11,0x30(%rdi)
    e408:	48 85 c9             	test   %rcx,%rcx
    e40b:	74 11                	je     e41e <dlfree+0x43e>
    e40d:	49 39 c8             	cmp    %rcx,%r8
    e410:	0f 87 82 fe ff ff    	ja     e298 <dlfree+0x2b8>
    e416:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    e41a:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    e41e:	48 8b 48 28          	mov    0x28(%rax),%rcx
    e422:	48 85 c9             	test   %rcx,%rcx
    e425:	0f 84 34 fc ff ff    	je     e05f <dlfree+0x7f>
    e42b:	49 39 c8             	cmp    %rcx,%r8
    e42e:	0f 87 64 fe ff ff    	ja     e298 <dlfree+0x2b8>
    e434:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    e438:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    e43c:	e9 1e fc ff ff       	jmp    e05f <dlfree+0x7f>
    e441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e448:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    e44c:	48 39 f7             	cmp    %rsi,%rdi
    e44f:	0f 84 78 01 00 00    	je     e5cd <dlfree+0x5ed>
    e455:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    e459:	49 39 c8             	cmp    %rcx,%r8
    e45c:	0f 87 36 fe ff ff    	ja     e298 <dlfree+0x2b8>
    e462:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    e466:	0f 85 2c fe ff ff    	jne    e298 <dlfree+0x2b8>
    e46c:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    e470:	0f 85 22 fe ff ff    	jne    e298 <dlfree+0x2b8>
    e476:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    e47a:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    e47e:	48 85 ed             	test   %rbp,%rbp
    e481:	0f 84 59 fc ff ff    	je     e0e0 <dlfree+0x100>
    e487:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    e48b:	4c 89 c9             	mov    %r9,%rcx
    e48e:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    e492:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    e499:	0f 84 e5 03 00 00    	je     e884 <dlfree+0x8a4>
    e49f:	49 39 e8             	cmp    %rbp,%r8
    e4a2:	0f 87 f0 fd ff ff    	ja     e298 <dlfree+0x2b8>
    e4a8:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    e4ac:	0f 84 fa 03 00 00    	je     e8ac <dlfree+0x8cc>
    e4b2:	48 89 7d 28          	mov    %rdi,0x28(%rbp)
    e4b6:	48 85 ff             	test   %rdi,%rdi
    e4b9:	0f 84 21 fc ff ff    	je     e0e0 <dlfree+0x100>
    e4bf:	49 39 f8             	cmp    %rdi,%r8
    e4c2:	0f 87 d0 fd ff ff    	ja     e298 <dlfree+0x2b8>
    e4c8:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    e4cc:	48 89 6f 30          	mov    %rbp,0x30(%rdi)
    e4d0:	48 85 c9             	test   %rcx,%rcx
    e4d3:	74 11                	je     e4e6 <dlfree+0x506>
    e4d5:	49 39 c8             	cmp    %rcx,%r8
    e4d8:	0f 87 ba fd ff ff    	ja     e298 <dlfree+0x2b8>
    e4de:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    e4e2:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    e4e6:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    e4ea:	48 85 c9             	test   %rcx,%rcx
    e4ed:	0f 84 ed fb ff ff    	je     e0e0 <dlfree+0x100>
    e4f3:	49 39 c8             	cmp    %rcx,%r8
    e4f6:	0f 87 9c fd ff ff    	ja     e298 <dlfree+0x2b8>
    e4fc:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    e500:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    e504:	e9 d7 fb ff ff       	jmp    e0e0 <dlfree+0x100>
    e509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e510:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e514:	48 89 cf             	mov    %rcx,%rdi
    e517:	83 e7 03             	and    $0x3,%edi
    e51a:	48 83 ff 03          	cmp    $0x3,%rdi
    e51e:	0f 85 3b fb ff ff    	jne    e05f <dlfree+0x7f>
    e524:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    e528:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    e52c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    e530:	48 89 d1             	mov    %rdx,%rcx
    e533:	48 83 c9 01          	or     $0x1,%rcx
    e537:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e53b:	48 89 16             	mov    %rdx,(%rsi)
    e53e:	e9 bd fb ff ff       	jmp    e100 <dlfree+0x120>
    e543:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e548:	0f bd f6             	bsr    %esi,%esi
    e54b:	b9 26 00 00 00       	mov    $0x26,%ecx
    e550:	48 89 d7             	mov    %rdx,%rdi
    e553:	83 f6 1f             	xor    $0x1f,%esi
    e556:	29 f1                	sub    %esi,%ecx
    e558:	48 d3 ef             	shr    %cl,%rdi
    e55b:	48 89 f9             	mov    %rdi,%rcx
    e55e:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e563:	83 e1 01             	and    $0x1,%ecx
    e566:	29 f7                	sub    %esi,%edi
    e568:	be 01 00 00 00       	mov    $0x1,%esi
    e56d:	44 8d 0c 79          	lea    (%rcx,%rdi,2),%r9d
    e571:	4c 89 c9             	mov    %r9,%rcx
    e574:	4e 8d 14 cd 58 02 00 	lea    0x258(,%r9,8),%r10
    e57b:	00 
    e57c:	d3 e6                	shl    %cl,%esi
    e57e:	e9 2b fd ff ff       	jmp    e2ae <dlfree+0x2ce>
    e583:	48 8b 48 28          	mov    0x28(%rax),%rcx
    e587:	4c 8d 48 28          	lea    0x28(%rax),%r9
    e58b:	48 85 c9             	test   %rcx,%rcx
    e58e:	0f 84 21 03 00 00    	je     e8b5 <dlfree+0x8d5>
    e594:	0f 1f 40 00          	nopl   0x0(%rax)
    e598:	4d 89 ca             	mov    %r9,%r10
    e59b:	48 89 cf             	mov    %rcx,%rdi
    e59e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    e5a2:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    e5a6:	48 85 c9             	test   %rcx,%rcx
    e5a9:	75 ed                	jne    e598 <dlfree+0x5b8>
    e5ab:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    e5af:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    e5b3:	48 85 c9             	test   %rcx,%rcx
    e5b6:	75 e0                	jne    e598 <dlfree+0x5b8>
    e5b8:	4d 39 d0             	cmp    %r10,%r8
    e5bb:	0f 87 d7 fc ff ff    	ja     e298 <dlfree+0x2b8>
    e5c1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    e5c8:	e9 e9 fd ff ff       	jmp    e3b6 <dlfree+0x3d6>
    e5cd:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    e5d1:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    e5d5:	48 85 c9             	test   %rcx,%rcx
    e5d8:	0f 84 e9 02 00 00    	je     e8c7 <dlfree+0x8e7>
    e5de:	66 90                	xchg   %ax,%ax
    e5e0:	4d 89 ca             	mov    %r9,%r10
    e5e3:	48 89 cf             	mov    %rcx,%rdi
    e5e6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    e5ea:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    e5ee:	48 85 c9             	test   %rcx,%rcx
    e5f1:	75 ed                	jne    e5e0 <dlfree+0x600>
    e5f3:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    e5f7:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    e5fb:	48 85 c9             	test   %rcx,%rcx
    e5fe:	75 e0                	jne    e5e0 <dlfree+0x600>
    e600:	4d 39 d0             	cmp    %r10,%r8
    e603:	0f 87 8f fc ff ff    	ja     e298 <dlfree+0x2b8>
    e609:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    e610:	e9 69 fe ff ff       	jmp    e47e <dlfree+0x49e>
    e615:	4d 39 c8             	cmp    %r9,%r8
    e618:	0f 87 7a fc ff ff    	ja     e298 <dlfree+0x2b8>
    e61e:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    e622:	0f 85 70 fc ff ff    	jne    e298 <dlfree+0x2b8>
    e628:	4c 39 cf             	cmp    %r9,%rdi
    e62b:	0f 84 a3 fa ff ff    	je     e0d4 <dlfree+0xf4>
    e631:	48 39 f9             	cmp    %rdi,%rcx
    e634:	74 1a                	je     e650 <dlfree+0x670>
    e636:	49 39 f8             	cmp    %rdi,%r8
    e639:	0f 87 59 fc ff ff    	ja     e298 <dlfree+0x2b8>
    e63f:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    e643:	0f 85 4f fc ff ff    	jne    e298 <dlfree+0x2b8>
    e649:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e650:	49 89 79 18          	mov    %rdi,0x18(%r9)
    e654:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    e658:	e9 83 fa ff ff       	jmp    e0e0 <dlfree+0x100>
    e65d:	4d 39 c8             	cmp    %r9,%r8
    e660:	0f 87 32 fc ff ff    	ja     e298 <dlfree+0x2b8>
    e666:	49 39 41 18          	cmp    %rax,0x18(%r9)
    e66a:	0f 85 28 fc ff ff    	jne    e298 <dlfree+0x2b8>
    e670:	4c 39 cf             	cmp    %r9,%rdi
    e673:	0f 84 00 fb ff ff    	je     e179 <dlfree+0x199>
    e679:	49 39 fa             	cmp    %rdi,%r10
    e67c:	74 1a                	je     e698 <dlfree+0x6b8>
    e67e:	49 39 f8             	cmp    %rdi,%r8
    e681:	0f 87 11 fc ff ff    	ja     e298 <dlfree+0x2b8>
    e687:	48 39 47 10          	cmp    %rax,0x10(%rdi)
    e68b:	0f 85 07 fc ff ff    	jne    e298 <dlfree+0x2b8>
    e691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e698:	49 89 79 18          	mov    %rdi,0x18(%r9)
    e69c:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    e6a0:	e9 ba f9 ff ff       	jmp    e05f <dlfree+0x7f>
    e6a5:	0f 1f 00             	nopl   (%rax)
    e6a8:	09 fa                	or     %edi,%edx
    e6aa:	89 13                	mov    %edx,(%rbx)
    e6ac:	48 89 f2             	mov    %rsi,%rdx
    e6af:	e9 75 fb ff ff       	jmp    e229 <dlfree+0x249>
    e6b4:	0f 1f 40 00          	nopl   0x0(%rax)
    e6b8:	09 fe                	or     %edi,%esi
    e6ba:	49 01 da             	add    %rbx,%r10
    e6bd:	89 73 04             	mov    %esi,0x4(%rbx)
    e6c0:	4a 89 84 cb 58 02 00 	mov    %rax,0x258(%rbx,%r9,8)
    e6c7:	00 
    e6c8:	4c 89 50 30          	mov    %r10,0x30(%rax)
    e6cc:	48 89 40 18          	mov    %rax,0x18(%rax)
    e6d0:	48 89 40 10          	mov    %rax,0x10(%rax)
    e6d4:	e9 70 fc ff ff       	jmp    e349 <dlfree+0x369>
    e6d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e6e0:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    e6e4:	49 39 d0             	cmp    %rdx,%r8
    e6e7:	0f 87 ab fb ff ff    	ja     e298 <dlfree+0x2b8>
    e6ed:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    e6f1:	48 89 70 30          	mov    %rsi,0x30(%rax)
    e6f5:	48 89 40 18          	mov    %rax,0x18(%rax)
    e6f9:	48 89 40 10          	mov    %rax,0x10(%rax)
    e6fd:	e9 47 fc ff ff       	jmp    e349 <dlfree+0x369>
    e702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e708:	48 03 53 10          	add    0x10(%rbx),%rdx
    e70c:	48 89 43 28          	mov    %rax,0x28(%rbx)
    e710:	48 89 d1             	mov    %rdx,%rcx
    e713:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    e717:	48 83 c9 01          	or     $0x1,%rcx
    e71b:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e71f:	4c 39 d8             	cmp    %r11,%rax
    e722:	0f 84 47 01 00 00    	je     e86f <dlfree+0x88f>
    e728:	48 3b 53 30          	cmp    0x30(%rbx),%rdx
    e72c:	0f 86 ce f9 ff ff    	jbe    e100 <dlfree+0x120>
    e732:	48 83 3d e6 df 01 00 	cmpq   $0x0,0x1dfe6(%rip)        # 2c720 <mparams>
    e739:	00 
    e73a:	0f 84 99 01 00 00    	je     e8d9 <dlfree+0x8f9>
    e740:	48 85 c0             	test   %rax,%rax
    e743:	0f 84 b7 f9 ff ff    	je     e100 <dlfree+0x120>
    e749:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    e74d:	48 83 f9 50          	cmp    $0x50,%rcx
    e751:	0f 86 a6 00 00 00    	jbe    e7fd <dlfree+0x81d>
    e757:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    e75e:	66 90                	xchg   %ax,%ax
    e760:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    e764:	48 39 d0             	cmp    %rdx,%rax
    e767:	72 09                	jb     e772 <dlfree+0x792>
    e769:	48 03 55 08          	add    0x8(%rbp),%rdx
    e76d:	48 39 d0             	cmp    %rdx,%rax
    e770:	72 09                	jb     e77b <dlfree+0x79b>
    e772:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    e776:	48 85 ed             	test   %rbp,%rbp
    e779:	75 e5                	jne    e760 <dlfree+0x780>
    e77b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    e77f:	75 7c                	jne    e7fd <dlfree+0x81d>
    e781:	48 8b 35 a8 df 01 00 	mov    0x1dfa8(%rip),%rsi        # 2c730 <mparams+0x10>
    e788:	31 d2                	xor    %edx,%edx
    e78a:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    e78f:	48 f7 f6             	div    %rsi
    e792:	48 83 e8 01          	sub    $0x1,%rax
    e796:	48 0f af c6          	imul   %rsi,%rax
    e79a:	49 89 c4             	mov    %rax,%r12
    e79d:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    e7a4:	ff ff 7f 
    e7a7:	49 39 c4             	cmp    %rax,%r12
    e7aa:	76 0d                	jbe    e7b9 <dlfree+0x7d9>
    e7ac:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    e7b3:	00 00 80 
    e7b6:	49 29 f4             	sub    %rsi,%r12
    e7b9:	b8 01 00 00 00       	mov    $0x1,%eax
    e7be:	87 05 8c df 01 00    	xchg   %eax,0x1df8c(%rip)        # 2c750 <malloc_global_mutex>
    e7c4:	48 8d 15 85 df 01 00 	lea    0x1df85(%rip),%rdx        # 2c750 <malloc_global_mutex>
    e7cb:	b9 01 00 00 00       	mov    $0x1,%ecx
    e7d0:	85 c0                	test   %eax,%eax
    e7d2:	75 40                	jne    e814 <dlfree+0x834>
    e7d4:	31 ff                	xor    %edi,%edi
    e7d6:	e8 75 d2 ff ff       	call   ba50 <sbrk>
    e7db:	49 89 c5             	mov    %rax,%r13
    e7de:	48 8b 45 08          	mov    0x8(%rbp),%rax
    e7e2:	48 03 45 00          	add    0x0(%rbp),%rax
    e7e6:	49 39 c5             	cmp    %rax,%r13
    e7e9:	0f 84 5c 01 00 00    	je     e94b <dlfree+0x96b>
    e7ef:	c7 05 57 df 01 00 00 	movl   $0x0,0x1df57(%rip)        # 2c750 <malloc_global_mutex>
    e7f6:	00 00 00 
    e7f9:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    e7fd:	48 3b 4b 30          	cmp    0x30(%rbx),%rcx
    e801:	0f 86 f9 f8 ff ff    	jbe    e100 <dlfree+0x120>
    e807:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    e80e:	ff 
    e80f:	e9 ec f8 ff ff       	jmp    e100 <dlfree+0x120>
    e814:	8b 02                	mov    (%rdx),%eax
    e816:	85 c0                	test   %eax,%eax
    e818:	75 fa                	jne    e814 <dlfree+0x834>
    e81a:	89 c8                	mov    %ecx,%eax
    e81c:	87 05 2e df 01 00    	xchg   %eax,0x1df2e(%rip)        # 2c750 <malloc_global_mutex>
    e822:	85 c0                	test   %eax,%eax
    e824:	75 ee                	jne    e814 <dlfree+0x834>
    e826:	eb ac                	jmp    e7d4 <dlfree+0x7f4>
    e828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e82f:	00 
    e830:	48 03 53 08          	add    0x8(%rbx),%rdx
    e834:	48 89 43 20          	mov    %rax,0x20(%rbx)
    e838:	48 89 d1             	mov    %rdx,%rcx
    e83b:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    e83f:	48 83 c9 01          	or     $0x1,%rcx
    e843:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e847:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    e84b:	e9 b0 f8 ff ff       	jmp    e100 <dlfree+0x120>
    e850:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    e857:	48 85 ff             	test   %rdi,%rdi
    e85a:	0f 85 97 fb ff ff    	jne    e3f7 <dlfree+0x417>
    e860:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    e865:	d3 c7                	rol    %cl,%edi
    e867:	21 7b 04             	and    %edi,0x4(%rbx)
    e86a:	e9 f0 f7 ff ff       	jmp    e05f <dlfree+0x7f>
    e86f:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    e876:	00 
    e877:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    e87e:	00 
    e87f:	e9 a4 fe ff ff       	jmp    e728 <dlfree+0x748>
    e884:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    e88b:	48 85 ff             	test   %rdi,%rdi
    e88e:	0f 85 2b fc ff ff    	jne    e4bf <dlfree+0x4df>
    e894:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    e899:	d3 c6                	rol    %cl,%esi
    e89b:	21 73 04             	and    %esi,0x4(%rbx)
    e89e:	e9 3d f8 ff ff       	jmp    e0e0 <dlfree+0x100>
    e8a3:	49 89 7b 20          	mov    %rdi,0x20(%r11)
    e8a7:	e9 42 fb ff ff       	jmp    e3ee <dlfree+0x40e>
    e8ac:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
    e8b0:	e9 01 fc ff ff       	jmp    e4b6 <dlfree+0x4d6>
    e8b5:	48 8b 48 20          	mov    0x20(%rax),%rcx
    e8b9:	48 85 c9             	test   %rcx,%rcx
    e8bc:	74 29                	je     e8e7 <dlfree+0x907>
    e8be:	4c 8d 48 20          	lea    0x20(%rax),%r9
    e8c2:	e9 d1 fc ff ff       	jmp    e598 <dlfree+0x5b8>
    e8c7:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    e8cb:	48 85 c9             	test   %rcx,%rcx
    e8ce:	74 49                	je     e919 <dlfree+0x939>
    e8d0:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    e8d4:	e9 07 fd ff ff       	jmp    e5e0 <dlfree+0x600>
    e8d9:	e8 62 d4 ff ff       	call   bd40 <init_mparams>
    e8de:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e8e2:	e9 59 fe ff ff       	jmp    e740 <dlfree+0x760>
    e8e7:	4d 85 db             	test   %r11,%r11
    e8ea:	0f 84 6f f7 ff ff    	je     e05f <dlfree+0x7f>
    e8f0:	8b 78 38             	mov    0x38(%rax),%edi
    e8f3:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    e8f7:	48 89 f9             	mov    %rdi,%rcx
    e8fa:	31 ff                	xor    %edi,%edi
    e8fc:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
    e903:	0f 85 ce fa ff ff    	jne    e3d7 <dlfree+0x3f7>
    e909:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    e910:	00 00 00 00 
    e914:	e9 47 ff ff ff       	jmp    e860 <dlfree+0x880>
    e919:	48 85 ed             	test   %rbp,%rbp
    e91c:	0f 84 be f7 ff ff    	je     e0e0 <dlfree+0x100>
    e922:	8b 7e 38             	mov    0x38(%rsi),%edi
    e925:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    e929:	48 89 f9             	mov    %rdi,%rcx
    e92c:	31 ff                	xor    %edi,%edi
    e92e:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    e935:	0f 85 64 fb ff ff    	jne    e49f <dlfree+0x4bf>
    e93b:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    e942:	00 00 00 00 
    e946:	e9 49 ff ff ff       	jmp    e894 <dlfree+0x8b4>
    e94b:	4c 89 e7             	mov    %r12,%rdi
    e94e:	48 f7 df             	neg    %rdi
    e951:	e8 fa d0 ff ff       	call   ba50 <sbrk>
    e956:	31 ff                	xor    %edi,%edi
    e958:	49 89 c4             	mov    %rax,%r12
    e95b:	e8 f0 d0 ff ff       	call   ba50 <sbrk>
    e960:	49 83 c4 01          	add    $0x1,%r12
    e964:	c7 05 e2 dd 01 00 00 	movl   $0x0,0x1dde2(%rip)        # 2c750 <malloc_global_mutex>
    e96b:	00 00 00 
    e96e:	74 6b                	je     e9db <dlfree+0x9fb>
    e970:	49 39 c5             	cmp    %rax,%r13
    e973:	76 66                	jbe    e9db <dlfree+0x9fb>
    e975:	49 29 c5             	sub    %rax,%r13
    e978:	74 61                	je     e9db <dlfree+0x9fb>
    e97a:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e97e:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    e982:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    e986:	48 89 c1             	mov    %rax,%rcx
    e989:	4c 29 ea             	sub    %r13,%rdx
    e98c:	48 8d 70 10          	lea    0x10(%rax),%rsi
    e990:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    e997:	83 e1 0f             	and    $0xf,%ecx
    e99a:	74 09                	je     e9a5 <dlfree+0x9c5>
    e99c:	48 f7 de             	neg    %rsi
    e99f:	48 89 f1             	mov    %rsi,%rcx
    e9a2:	83 e1 0f             	and    $0xf,%ecx
    e9a5:	48 89 d7             	mov    %rdx,%rdi
    e9a8:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    e9ac:	48 29 cf             	sub    %rcx,%rdi
    e9af:	48 89 73 28          	mov    %rsi,0x28(%rbx)
    e9b3:	48 89 f9             	mov    %rdi,%rcx
    e9b6:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
    e9ba:	48 83 c9 01          	or     $0x1,%rcx
    e9be:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    e9c2:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    e9c9:	00 00 
    e9cb:	48 8b 05 6e dd 01 00 	mov    0x1dd6e(%rip),%rax        # 2c740 <mparams+0x20>
    e9d2:	48 89 43 30          	mov    %rax,0x30(%rbx)
    e9d6:	e9 25 f7 ff ff       	jmp    e100 <dlfree+0x120>
    e9db:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    e9df:	e9 19 fe ff ff       	jmp    e7fd <dlfree+0x81d>
    e9e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e9eb:	00 00 00 
    e9ee:	66 90                	xchg   %ax,%ax

000000000000e9f0 <calloc>:
    e9f0:	f3 0f 1e fa          	endbr64 
    e9f4:	41 55                	push   %r13
    e9f6:	41 54                	push   %r12
    e9f8:	49 89 fc             	mov    %rdi,%r12
    e9fb:	48 83 ec 08          	sub    $0x8,%rsp
    e9ff:	48 85 ff             	test   %rdi,%rdi
    ea02:	74 2b                	je     ea2f <calloc+0x3f>
    ea04:	48 89 f8             	mov    %rdi,%rax
    ea07:	48 89 f9             	mov    %rdi,%rcx
    ea0a:	48 09 f0             	or     %rsi,%rax
    ea0d:	48 0f af ce          	imul   %rsi,%rcx
    ea11:	48 a9 00 00 ff ff    	test   $0xffffffffffff0000,%rax
    ea17:	74 47                	je     ea60 <calloc+0x70>
    ea19:	31 d2                	xor    %edx,%edx
    ea1b:	48 89 c8             	mov    %rcx,%rax
    ea1e:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ea25:	48 f7 f7             	div    %rdi
    ea28:	48 39 f0             	cmp    %rsi,%rax
    ea2b:	4c 0f 44 e1          	cmove  %rcx,%r12
    ea2f:	4c 89 e7             	mov    %r12,%rdi
    ea32:	e8 39 db ff ff       	call   c570 <dlmalloc>
    ea37:	49 89 c5             	mov    %rax,%r13
    ea3a:	48 85 c0             	test   %rax,%rax
    ea3d:	74 0d                	je     ea4c <calloc+0x5c>
    ea3f:	4c 89 e2             	mov    %r12,%rdx
    ea42:	31 f6                	xor    %esi,%esi
    ea44:	48 89 c7             	mov    %rax,%rdi
    ea47:	e8 b4 0d 00 00       	call   f800 <memset>
    ea4c:	48 83 c4 08          	add    $0x8,%rsp
    ea50:	4c 89 e8             	mov    %r13,%rax
    ea53:	41 5c                	pop    %r12
    ea55:	41 5d                	pop    %r13
    ea57:	c3                   	ret    
    ea58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ea5f:	00 
    ea60:	49 89 cc             	mov    %rcx,%r12
    ea63:	eb ca                	jmp    ea2f <calloc+0x3f>
    ea65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ea6c:	00 00 00 
    ea6f:	90                   	nop

000000000000ea70 <dlrealloc>:
    ea70:	f3 0f 1e fa          	endbr64 
    ea74:	41 57                	push   %r15
    ea76:	41 56                	push   %r14
    ea78:	41 55                	push   %r13
    ea7a:	41 54                	push   %r12
    ea7c:	55                   	push   %rbp
    ea7d:	48 89 f5             	mov    %rsi,%rbp
    ea80:	53                   	push   %rbx
    ea81:	48 83 ec 08          	sub    $0x8,%rsp
    ea85:	48 85 ff             	test   %rdi,%rdi
    ea88:	0f 84 d2 01 00 00    	je     ec60 <dlrealloc+0x1f0>
    ea8e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    ea95:	0f 87 e5 01 00 00    	ja     ec80 <dlrealloc+0x210>
    ea9b:	49 89 fc             	mov    %rdi,%r12
    ea9e:	48 85 f6             	test   %rsi,%rsi
    eaa1:	0f 84 f1 01 00 00    	je     ec98 <dlrealloc+0x228>
    eaa7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    eaab:	4c 8d 77 f0          	lea    -0x10(%rdi),%r14
    eaaf:	48 8b 7f f8          	mov    -0x8(%rdi),%rdi
    eab3:	ba 20 00 00 00       	mov    $0x20,%edx
    eab8:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    eabc:	48 83 fe 0e          	cmp    $0xe,%rsi
    eac0:	48 8b 0d 59 dc 01 00 	mov    0x1dc59(%rip),%rcx        # 2c720 <mparams>
    eac7:	48 0f 46 c2          	cmovbe %rdx,%rax
    eacb:	48 89 fa             	mov    %rdi,%rdx
    eace:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ead2:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    ead6:	48 8b 1e             	mov    (%rsi),%rbx
    ead9:	48 31 cb             	xor    %rcx,%rbx
    eadc:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
    eae0:	0f 85 92 00 00 00    	jne    eb78 <dlrealloc+0x108>
    eae6:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    eaed:	0f 85 8d 00 00 00    	jne    eb80 <dlrealloc+0x110>
    eaf3:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    eaf7:	4d 39 c6             	cmp    %r8,%r14
    eafa:	72 7c                	jb     eb78 <dlrealloc+0x108>
    eafc:	48 89 f9             	mov    %rdi,%rcx
    eaff:	83 e1 03             	and    $0x3,%ecx
    eb02:	48 83 f9 01          	cmp    $0x1,%rcx
    eb06:	74 70                	je     eb78 <dlrealloc+0x108>
    eb08:	49 39 f6             	cmp    %rsi,%r14
    eb0b:	73 6b                	jae    eb78 <dlrealloc+0x108>
    eb0d:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    eb11:	41 f6 c1 01          	test   $0x1,%r9b
    eb15:	74 61                	je     eb78 <dlrealloc+0x108>
    eb17:	48 85 c9             	test   %rcx,%rcx
    eb1a:	0f 84 b0 00 00 00    	je     ebd0 <dlrealloc+0x160>
    eb20:	48 39 d0             	cmp    %rdx,%rax
    eb23:	0f 87 7f 01 00 00    	ja     eca8 <dlrealloc+0x238>
    eb29:	48 29 c2             	sub    %rax,%rdx
    eb2c:	49 89 d5             	mov    %rdx,%r13
    eb2f:	48 83 fa 1f          	cmp    $0x1f,%rdx
    eb33:	0f 87 8f 02 00 00    	ja     edc8 <dlrealloc+0x358>
    eb39:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    eb40:	0f 85 2a 03 00 00    	jne    ee70 <dlrealloc+0x400>
    eb46:	4d 85 f6             	test   %r14,%r14
    eb49:	0f 84 bb 00 00 00    	je     ec0a <dlrealloc+0x19a>
    eb4f:	4d 89 e5             	mov    %r12,%r13
    eb52:	48 83 c4 08          	add    $0x8,%rsp
    eb56:	4c 89 e8             	mov    %r13,%rax
    eb59:	5b                   	pop    %rbx
    eb5a:	5d                   	pop    %rbp
    eb5b:	41 5c                	pop    %r12
    eb5d:	41 5d                	pop    %r13
    eb5f:	41 5e                	pop    %r14
    eb61:	41 5f                	pop    %r15
    eb63:	c3                   	ret    
    eb64:	4d 39 d8             	cmp    %r11,%r8
    eb67:	77 0f                	ja     eb78 <dlrealloc+0x108>
    eb69:	49 39 73 10          	cmp    %rsi,0x10(%r11)
    eb6d:	0f 84 a9 01 00 00    	je     ed1c <dlrealloc+0x2ac>
    eb73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eb78:	e8 87 2a 01 00       	call   21604 <abort>
    eb7d:	0f 1f 00             	nopl   (%rax)
    eb80:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
    eb87:	ba 01 00 00 00       	mov    $0x1,%edx
    eb8c:	87 11                	xchg   %edx,(%rcx)
    eb8e:	85 d2                	test   %edx,%edx
    eb90:	74 20                	je     ebb2 <dlrealloc+0x142>
    eb92:	be 01 00 00 00       	mov    $0x1,%esi
    eb97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    eb9e:	00 00 
    eba0:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
    eba6:	85 d2                	test   %edx,%edx
    eba8:	75 f6                	jne    eba0 <dlrealloc+0x130>
    ebaa:	89 f2                	mov    %esi,%edx
    ebac:	87 11                	xchg   %edx,(%rcx)
    ebae:	85 d2                	test   %edx,%edx
    ebb0:	75 ee                	jne    eba0 <dlrealloc+0x130>
    ebb2:	49 8b 7c 24 f8       	mov    -0x8(%r12),%rdi
    ebb7:	48 89 fa             	mov    %rdi,%rdx
    ebba:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ebbe:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    ebc2:	e9 2c ff ff ff       	jmp    eaf3 <dlrealloc+0x83>
    ebc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ebce:	00 00 
    ebd0:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    ebd6:	76 1f                	jbe    ebf7 <dlrealloc+0x187>
    ebd8:	48 8d 48 08          	lea    0x8(%rax),%rcx
    ebdc:	48 39 d1             	cmp    %rdx,%rcx
    ebdf:	77 16                	ja     ebf7 <dlrealloc+0x187>
    ebe1:	48 29 c2             	sub    %rax,%rdx
    ebe4:	48 8b 05 45 db 01 00 	mov    0x1db45(%rip),%rax        # 2c730 <mparams+0x10>
    ebeb:	48 01 c0             	add    %rax,%rax
    ebee:	48 39 c2             	cmp    %rax,%rdx
    ebf1:	0f 86 42 ff ff ff    	jbe    eb39 <dlrealloc+0xc9>
    ebf7:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ebfe:	74 0a                	je     ec0a <dlrealloc+0x19a>
    ec00:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    ec07:	00 00 00 
    ec0a:	48 89 ef             	mov    %rbp,%rdi
    ec0d:	e8 5e d9 ff ff       	call   c570 <dlmalloc>
    ec12:	49 89 c5             	mov    %rax,%r13
    ec15:	48 85 c0             	test   %rax,%rax
    ec18:	0f 84 34 ff ff ff    	je     eb52 <dlrealloc+0xe2>
    ec1e:	4d 8b 74 24 f8       	mov    -0x8(%r12),%r14
    ec23:	48 89 ea             	mov    %rbp,%rdx
    ec26:	4c 89 e6             	mov    %r12,%rsi
    ec29:	48 89 c7             	mov    %rax,%rdi
    ec2c:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14
    ec30:	49 83 ee 10          	sub    $0x10,%r14
    ec34:	4c 39 f5             	cmp    %r14,%rbp
    ec37:	49 0f 47 d6          	cmova  %r14,%rdx
    ec3b:	e8 f0 09 00 00       	call   f630 <memcpy>
    ec40:	4c 89 e7             	mov    %r12,%rdi
    ec43:	4c 89 f2             	mov    %r14,%rdx
    ec46:	31 f6                	xor    %esi,%esi
    ec48:	e8 b3 0b 00 00       	call   f800 <memset>
    ec4d:	4c 89 e7             	mov    %r12,%rdi
    ec50:	e8 8b f3 ff ff       	call   dfe0 <dlfree>
    ec55:	e9 f8 fe ff ff       	jmp    eb52 <dlrealloc+0xe2>
    ec5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec60:	48 83 c4 08          	add    $0x8,%rsp
    ec64:	48 89 f7             	mov    %rsi,%rdi
    ec67:	5b                   	pop    %rbx
    ec68:	5d                   	pop    %rbp
    ec69:	41 5c                	pop    %r12
    ec6b:	41 5d                	pop    %r13
    ec6d:	41 5e                	pop    %r14
    ec6f:	41 5f                	pop    %r15
    ec71:	e9 fa d8 ff ff       	jmp    c570 <dlmalloc>
    ec76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ec7d:	00 00 00 
    ec80:	e8 2b 15 00 00       	call   101b0 <__errno>
    ec85:	45 31 ed             	xor    %r13d,%r13d
    ec88:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ec8e:	e9 bf fe ff ff       	jmp    eb52 <dlrealloc+0xe2>
    ec93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ec98:	e8 43 f3 ff ff       	call   dfe0 <dlfree>
    ec9d:	45 31 ed             	xor    %r13d,%r13d
    eca0:	e9 ad fe ff ff       	jmp    eb52 <dlrealloc+0xe2>
    eca5:	0f 1f 00             	nopl   (%rax)
    eca8:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    ecac:	0f 84 6e 01 00 00    	je     ee20 <dlrealloc+0x3b0>
    ecb2:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    ecb6:	0f 84 a4 00 00 00    	je     ed60 <dlrealloc+0x2f0>
    ecbc:	41 f6 c1 02          	test   $0x2,%r9b
    ecc0:	0f 85 31 ff ff ff    	jne    ebf7 <dlrealloc+0x187>
    ecc6:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    ecca:	4c 01 ca             	add    %r9,%rdx
    eccd:	48 39 d0             	cmp    %rdx,%rax
    ecd0:	0f 87 21 ff ff ff    	ja     ebf7 <dlrealloc+0x187>
    ecd6:	49 89 d2             	mov    %rdx,%r10
    ecd9:	4c 89 c9             	mov    %r9,%rcx
    ecdc:	4c 8b 5e 18          	mov    0x18(%rsi),%r11
    ece0:	49 29 c2             	sub    %rax,%r10
    ece3:	48 c1 e9 03          	shr    $0x3,%rcx
    ece7:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    ecee:	0f 87 8b 01 00 00    	ja     ee7f <dlrealloc+0x40f>
    ecf4:	44 8d 2c 09          	lea    (%rcx,%rcx,1),%r13d
    ecf8:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    ecfc:	4e 8d 6c eb 48       	lea    0x48(%rbx,%r13,8),%r13
    ed01:	4d 39 e9             	cmp    %r13,%r9
    ed04:	0f 85 14 03 00 00    	jne    f01e <dlrealloc+0x5ae>
    ed0a:	4d 39 d9             	cmp    %r11,%r9
    ed0d:	0f 84 8f 02 00 00    	je     efa2 <dlrealloc+0x532>
    ed13:	4d 39 dd             	cmp    %r11,%r13
    ed16:	0f 85 48 fe ff ff    	jne    eb64 <dlrealloc+0xf4>
    ed1c:	4d 89 59 18          	mov    %r11,0x18(%r9)
    ed20:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    ed24:	48 8b 35 f5 d9 01 00 	mov    0x1d9f5(%rip),%rsi        # 2c720 <mparams>
    ed2b:	83 e7 01             	and    $0x1,%edi
    ed2e:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
    ed32:	48 31 de             	xor    %rbx,%rsi
    ed35:	49 83 fa 1f          	cmp    $0x1f,%r10
    ed39:	0f 87 2a 02 00 00    	ja     ef69 <dlrealloc+0x4f9>
    ed3f:	48 09 fa             	or     %rdi,%rdx
    ed42:	48 83 ca 02          	or     $0x2,%rdx
    ed46:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
    ed4b:	48 89 31             	mov    %rsi,(%rcx)
    ed4e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ed53:	e9 e1 fd ff ff       	jmp    eb39 <dlrealloc+0xc9>
    ed58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ed5f:	00 
    ed60:	48 03 53 08          	add    0x8(%rbx),%rdx
    ed64:	48 39 d0             	cmp    %rdx,%rax
    ed67:	0f 87 8a fe ff ff    	ja     ebf7 <dlrealloc+0x187>
    ed6d:	4c 8b 05 ac d9 01 00 	mov    0x1d9ac(%rip),%r8        # 2c720 <mparams>
    ed74:	48 89 d6             	mov    %rdx,%rsi
    ed77:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
    ed7b:	83 e7 01             	and    $0x1,%edi
    ed7e:	48 29 c6             	sub    %rax,%rsi
    ed81:	49 31 d8             	xor    %rbx,%r8
    ed84:	48 83 fe 1f          	cmp    $0x1f,%rsi
    ed88:	0f 86 b2 01 00 00    	jbe    ef40 <dlrealloc+0x4d0>
    ed8e:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    ed92:	48 09 c7             	or     %rax,%rdi
    ed95:	48 89 f0             	mov    %rsi,%rax
    ed98:	48 83 cf 02          	or     $0x2,%rdi
    ed9c:	48 83 c8 01          	or     $0x1,%rax
    eda0:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
    eda5:	4c 89 02             	mov    %r8,(%rdx)
    eda8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    edac:	48 89 31             	mov    %rsi,(%rcx)
    edaf:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    edb4:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    edb8:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    edbc:	e9 78 fd ff ff       	jmp    eb39 <dlrealloc+0xc9>
    edc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    edc8:	83 e7 01             	and    $0x1,%edi
    edcb:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
    edcf:	48 83 ca 03          	or     $0x3,%rdx
    edd3:	48 09 f8             	or     %rdi,%rax
    edd6:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    edda:	48 83 c8 02          	or     $0x2,%rax
    edde:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    ede3:	48 8b 05 36 d9 01 00 	mov    0x1d936(%rip),%rax        # 2c720 <mparams>
    edea:	49 89 57 08          	mov    %rdx,0x8(%r15)
    edee:	49 8d 55 f0          	lea    -0x10(%r13),%rdx
    edf2:	48 31 d8             	xor    %rbx,%rax
    edf5:	49 89 07             	mov    %rax,(%r15)
    edf8:	48 83 4e 08 01       	orq    $0x1,0x8(%rsi)
    edfd:	48 89 06             	mov    %rax,(%rsi)
    ee00:	31 f6                	xor    %esi,%esi
    ee02:	e8 f9 09 00 00       	call   f800 <memset>
    ee07:	4c 89 ea             	mov    %r13,%rdx
    ee0a:	4c 89 fe             	mov    %r15,%rsi
    ee0d:	48 89 df             	mov    %rbx,%rdi
    ee10:	e8 1b d0 ff ff       	call   be30 <dispose_chunk>
    ee15:	e9 1f fd ff ff       	jmp    eb39 <dlrealloc+0xc9>
    ee1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ee20:	48 03 53 10          	add    0x10(%rbx),%rdx
    ee24:	48 39 d0             	cmp    %rdx,%rax
    ee27:	0f 83 ca fd ff ff    	jae    ebf7 <dlrealloc+0x187>
    ee2d:	83 e7 01             	and    $0x1,%edi
    ee30:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
    ee34:	48 29 c2             	sub    %rax,%rdx
    ee37:	48 09 f8             	or     %rdi,%rax
    ee3a:	48 83 c8 02          	or     $0x2,%rax
    ee3e:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    ee43:	48 8b 05 d6 d8 01 00 	mov    0x1d8d6(%rip),%rax        # 2c720 <mparams>
    ee4a:	48 31 d8             	xor    %rbx,%rax
    ee4d:	48 89 01             	mov    %rax,(%rcx)
    ee50:	48 89 d0             	mov    %rdx,%rax
    ee53:	48 83 c8 01          	or     $0x1,%rax
    ee57:	48 89 41 08          	mov    %rax,0x8(%rcx)
    ee5b:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
    ee5f:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    ee63:	e9 d1 fc ff ff       	jmp    eb39 <dlrealloc+0xc9>
    ee68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ee6f:	00 
    ee70:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    ee77:	00 00 00 
    ee7a:	e9 c7 fc ff ff       	jmp    eb46 <dlrealloc+0xd6>
    ee7f:	4c 8b 7e 30          	mov    0x30(%rsi),%r15
    ee83:	4c 39 de             	cmp    %r11,%rsi
    ee86:	0f 84 24 01 00 00    	je     efb0 <dlrealloc+0x540>
    ee8c:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    ee90:	49 39 c8             	cmp    %rcx,%r8
    ee93:	0f 87 df fc ff ff    	ja     eb78 <dlrealloc+0x108>
    ee99:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    ee9d:	0f 85 d5 fc ff ff    	jne    eb78 <dlrealloc+0x108>
    eea3:	49 39 73 10          	cmp    %rsi,0x10(%r11)
    eea7:	0f 85 cb fc ff ff    	jne    eb78 <dlrealloc+0x108>
    eead:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    eeb1:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    eeb5:	4d 85 ff             	test   %r15,%r15
    eeb8:	0f 84 66 fe ff ff    	je     ed24 <dlrealloc+0x2b4>
    eebe:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    eec2:	4c 89 c9             	mov    %r9,%rcx
    eec5:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    eec9:	49 3b b1 58 02 00 00 	cmp    0x258(%r9),%rsi
    eed0:	0f 84 20 01 00 00    	je     eff6 <dlrealloc+0x586>
    eed6:	4d 39 f8             	cmp    %r15,%r8
    eed9:	0f 87 99 fc ff ff    	ja     eb78 <dlrealloc+0x108>
    eedf:	49 3b 77 20          	cmp    0x20(%r15),%rsi
    eee3:	0f 84 2c 01 00 00    	je     f015 <dlrealloc+0x5a5>
    eee9:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    eeed:	4d 85 db             	test   %r11,%r11
    eef0:	0f 84 2e fe ff ff    	je     ed24 <dlrealloc+0x2b4>
    eef6:	4d 39 d8             	cmp    %r11,%r8
    eef9:	0f 87 79 fc ff ff    	ja     eb78 <dlrealloc+0x108>
    eeff:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ef03:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    ef07:	48 85 c9             	test   %rcx,%rcx
    ef0a:	74 11                	je     ef1d <dlrealloc+0x4ad>
    ef0c:	49 39 c8             	cmp    %rcx,%r8
    ef0f:	0f 87 63 fc ff ff    	ja     eb78 <dlrealloc+0x108>
    ef15:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    ef19:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ef1d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    ef21:	48 85 c9             	test   %rcx,%rcx
    ef24:	0f 84 fa fd ff ff    	je     ed24 <dlrealloc+0x2b4>
    ef2a:	49 39 c8             	cmp    %rcx,%r8
    ef2d:	0f 87 45 fc ff ff    	ja     eb78 <dlrealloc+0x108>
    ef33:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    ef37:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    ef3b:	e9 e4 fd ff ff       	jmp    ed24 <dlrealloc+0x2b4>
    ef40:	48 09 fa             	or     %rdi,%rdx
    ef43:	48 83 ca 02          	or     $0x2,%rdx
    ef47:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
    ef4c:	4c 89 01             	mov    %r8,(%rcx)
    ef4f:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ef54:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    ef5b:	00 
    ef5c:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    ef63:	00 
    ef64:	e9 d0 fb ff ff       	jmp    eb39 <dlrealloc+0xc9>
    ef69:	4d 8d 04 06          	lea    (%r14,%rax,1),%r8
    ef6d:	48 09 c7             	or     %rax,%rdi
    ef70:	4c 89 d0             	mov    %r10,%rax
    ef73:	4c 89 d2             	mov    %r10,%rdx
    ef76:	48 83 cf 02          	or     $0x2,%rdi
    ef7a:	48 83 c8 03          	or     $0x3,%rax
    ef7e:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
    ef83:	48 89 df             	mov    %rbx,%rdi
    ef86:	49 89 30             	mov    %rsi,(%r8)
    ef89:	49 89 40 08          	mov    %rax,0x8(%r8)
    ef8d:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ef92:	48 89 31             	mov    %rsi,(%rcx)
    ef95:	4c 89 c6             	mov    %r8,%rsi
    ef98:	e8 93 ce ff ff       	call   be30 <dispose_chunk>
    ef9d:	e9 97 fb ff ff       	jmp    eb39 <dlrealloc+0xc9>
    efa2:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    efa7:	d3 c6                	rol    %cl,%esi
    efa9:	21 33                	and    %esi,(%rbx)
    efab:	e9 74 fd ff ff       	jmp    ed24 <dlrealloc+0x2b4>
    efb0:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    efb4:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    efb8:	48 85 c9             	test   %rcx,%rcx
    efbb:	74 79                	je     f036 <dlrealloc+0x5c6>
    efbd:	0f 1f 00             	nopl   (%rax)
    efc0:	4d 89 cd             	mov    %r9,%r13
    efc3:	49 89 cb             	mov    %rcx,%r11
    efc6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    efca:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    efce:	48 85 c9             	test   %rcx,%rcx
    efd1:	75 ed                	jne    efc0 <dlrealloc+0x550>
    efd3:	49 8b 4b 20          	mov    0x20(%r11),%rcx
    efd7:	4d 8d 4b 20          	lea    0x20(%r11),%r9
    efdb:	48 85 c9             	test   %rcx,%rcx
    efde:	75 e0                	jne    efc0 <dlrealloc+0x550>
    efe0:	4d 39 e8             	cmp    %r13,%r8
    efe3:	0f 87 8f fb ff ff    	ja     eb78 <dlrealloc+0x108>
    efe9:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    eff0:	00 
    eff1:	e9 bf fe ff ff       	jmp    eeb5 <dlrealloc+0x445>
    eff6:	4d 89 99 58 02 00 00 	mov    %r11,0x258(%r9)
    effd:	4d 85 db             	test   %r11,%r11
    f000:	0f 85 f0 fe ff ff    	jne    eef6 <dlrealloc+0x486>
    f006:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    f00b:	d3 c6                	rol    %cl,%esi
    f00d:	21 73 04             	and    %esi,0x4(%rbx)
    f010:	e9 0f fd ff ff       	jmp    ed24 <dlrealloc+0x2b4>
    f015:	4d 89 5f 20          	mov    %r11,0x20(%r15)
    f019:	e9 cf fe ff ff       	jmp    eeed <dlrealloc+0x47d>
    f01e:	4d 39 c8             	cmp    %r9,%r8
    f021:	0f 87 51 fb ff ff    	ja     eb78 <dlrealloc+0x108>
    f027:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    f02b:	0f 84 d9 fc ff ff    	je     ed0a <dlrealloc+0x29a>
    f031:	e9 42 fb ff ff       	jmp    eb78 <dlrealloc+0x108>
    f036:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    f03a:	48 85 c9             	test   %rcx,%rcx
    f03d:	74 09                	je     f048 <dlrealloc+0x5d8>
    f03f:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    f043:	e9 78 ff ff ff       	jmp    efc0 <dlrealloc+0x550>
    f048:	4d 85 ff             	test   %r15,%r15
    f04b:	0f 84 d3 fc ff ff    	je     ed24 <dlrealloc+0x2b4>
    f051:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    f055:	45 31 db             	xor    %r11d,%r11d
    f058:	4c 89 c9             	mov    %r9,%rcx
    f05b:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    f05f:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    f066:	0f 85 6a fe ff ff    	jne    eed6 <dlrealloc+0x466>
    f06c:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    f073:	00 00 00 00 
    f077:	eb 8d                	jmp    f006 <dlrealloc+0x596>
    f079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f080 <strtol>:
    f080:	f3 0f 1e fa          	endbr64 
    f084:	41 57                	push   %r15
    f086:	8d 42 fe             	lea    -0x2(%rdx),%eax
    f089:	41 56                	push   %r14
    f08b:	41 55                	push   %r13
    f08d:	41 89 d5             	mov    %edx,%r13d
    f090:	41 54                	push   %r12
    f092:	55                   	push   %rbp
    f093:	53                   	push   %rbx
    f094:	48 83 ec 38          	sub    $0x38,%rsp
    f098:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    f09d:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    f0a2:	83 f8 22             	cmp    $0x22,%eax
    f0a5:	76 31                	jbe    f0d8 <strtol+0x58>
    f0a7:	85 d2                	test   %edx,%edx
    f0a9:	74 2d                	je     f0d8 <strtol+0x58>
    f0ab:	48 85 f6             	test   %rsi,%rsi
    f0ae:	74 03                	je     f0b3 <strtol+0x33>
    f0b0:	48 89 3e             	mov    %rdi,(%rsi)
    f0b3:	e8 f8 10 00 00       	call   101b0 <__errno>
    f0b8:	45 31 e4             	xor    %r12d,%r12d
    f0bb:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    f0c1:	48 83 c4 38          	add    $0x38,%rsp
    f0c5:	4c 89 e0             	mov    %r12,%rax
    f0c8:	5b                   	pop    %rbx
    f0c9:	5d                   	pop    %rbp
    f0ca:	41 5c                	pop    %r12
    f0cc:	41 5d                	pop    %r13
    f0ce:	41 5e                	pop    %r14
    f0d0:	41 5f                	pop    %r15
    f0d2:	c3                   	ret    
    f0d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f0d8:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    f0dd:	0f 1f 00             	nopl   (%rax)
    f0e0:	49 89 de             	mov    %rbx,%r14
    f0e3:	44 0f b6 3b          	movzbl (%rbx),%r15d
    f0e7:	48 83 c3 01          	add    $0x1,%rbx
    f0eb:	44 89 ff             	mov    %r15d,%edi
    f0ee:	e8 1d 11 00 00       	call   10210 <isspace>
    f0f3:	89 c5                	mov    %eax,%ebp
    f0f5:	85 c0                	test   %eax,%eax
    f0f7:	75 e7                	jne    f0e0 <strtol+0x60>
    f0f9:	44 89 e8             	mov    %r13d,%eax
    f0fc:	83 e0 ef             	and    $0xffffffef,%eax
    f0ff:	41 83 ff 2d          	cmp    $0x2d,%r15d
    f103:	0f 84 df 00 00 00    	je     f1e8 <strtol+0x168>
    f109:	41 83 ff 2b          	cmp    $0x2b,%r15d
    f10d:	75 08                	jne    f117 <strtol+0x97>
    f10f:	44 0f be 3b          	movsbl (%rbx),%r15d
    f113:	49 8d 5e 02          	lea    0x2(%r14),%rbx
    f117:	85 c0                	test   %eax,%eax
    f119:	0f 84 e1 00 00 00    	je     f200 <strtol+0x180>
    f11f:	49 63 c5             	movslq %r13d,%rax
    f122:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f127:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    f12e:	ff ff 7f 
    f131:	45 31 f6             	xor    %r14d,%r14d
    f134:	48 99                	cqto   
    f136:	48 f7 7c 24 18       	idivq  0x18(%rsp)
    f13b:	89 54 24 14          	mov    %edx,0x14(%rsp)
    f13f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f144:	45 31 e4             	xor    %r12d,%r12d
    f147:	eb 40                	jmp    f189 <strtol+0x109>
    f149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f150:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
    f155:	7c 10                	jl     f167 <strtol+0xe7>
    f157:	0f 85 73 01 00 00    	jne    f2d0 <strtol+0x250>
    f15d:	3b 4c 24 14          	cmp    0x14(%rsp),%ecx
    f161:	0f 8e 69 01 00 00    	jle    f2d0 <strtol+0x250>
    f167:	e8 44 10 00 00       	call   101b0 <__errno>
    f16c:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    f171:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f178:	00 00 80 
    f17b:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    f181:	44 0f b6 3b          	movzbl (%rbx),%r15d
    f185:	48 83 c3 01          	add    $0x1,%rbx
    f189:	44 89 ff             	mov    %r15d,%edi
    f18c:	e8 4f 10 00 00       	call   101e0 <isdigit>
    f191:	41 8d 4f d0          	lea    -0x30(%r15),%ecx
    f195:	85 c0                	test   %eax,%eax
    f197:	0f 84 bb 00 00 00    	je     f258 <strtol+0x1d8>
    f19d:	44 39 e9             	cmp    %r13d,%ecx
    f1a0:	0f 8d df 00 00 00    	jge    f285 <strtol+0x205>
    f1a6:	83 fd ff             	cmp    $0xffffffff,%ebp
    f1a9:	74 d6                	je     f181 <strtol+0x101>
    f1ab:	45 85 f6             	test   %r14d,%r14d
    f1ae:	75 a0                	jne    f150 <strtol+0xd0>
    f1b0:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
    f1b5:	7f 10                	jg     f1c7 <strtol+0x147>
    f1b7:	0f 85 f3 00 00 00    	jne    f2b0 <strtol+0x230>
    f1bd:	3b 4c 24 14          	cmp    0x14(%rsp),%ecx
    f1c1:	0f 8e e9 00 00 00    	jle    f2b0 <strtol+0x230>
    f1c7:	e8 e4 0f 00 00       	call   101b0 <__errno>
    f1cc:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    f1d1:	49 bc ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r12
    f1d8:	ff ff 7f 
    f1db:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    f1e1:	eb 9e                	jmp    f181 <strtol+0x101>
    f1e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f1e8:	44 0f be 3b          	movsbl (%rbx),%r15d
    f1ec:	49 83 c6 02          	add    $0x2,%r14
    f1f0:	85 c0                	test   %eax,%eax
    f1f2:	0f 85 31 01 00 00    	jne    f329 <strtol+0x2a9>
    f1f8:	4c 89 f3             	mov    %r14,%rbx
    f1fb:	b8 01 00 00 00       	mov    $0x1,%eax
    f200:	41 83 ff 30          	cmp    $0x30,%r15d
    f204:	0f 84 de 00 00 00    	je     f2e8 <strtol+0x268>
    f20a:	45 85 ed             	test   %r13d,%r13d
    f20d:	0f 85 26 01 00 00    	jne    f339 <strtol+0x2b9>
    f213:	48 c7 44 24 18 0a 00 	movq   $0xa,0x18(%rsp)
    f21a:	00 00 
    f21c:	41 bd 0a 00 00 00    	mov    $0xa,%r13d
    f222:	85 c0                	test   %eax,%eax
    f224:	0f 84 fd fe ff ff    	je     f127 <strtol+0xa7>
    f22a:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    f231:	00 00 80 
    f234:	41 be 01 00 00 00    	mov    $0x1,%r14d
    f23a:	48 99                	cqto   
    f23c:	48 f7 7c 24 18       	idivq  0x18(%rsp)
    f241:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f246:	89 d0                	mov    %edx,%eax
    f248:	f7 d8                	neg    %eax
    f24a:	89 44 24 14          	mov    %eax,0x14(%rsp)
    f24e:	e9 f1 fe ff ff       	jmp    f144 <strtol+0xc4>
    f253:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f258:	44 89 ff             	mov    %r15d,%edi
    f25b:	e8 60 0f 00 00       	call   101c0 <isalpha>
    f260:	85 c0                	test   %eax,%eax
    f262:	74 21                	je     f285 <strtol+0x205>
    f264:	44 89 ff             	mov    %r15d,%edi
    f267:	e8 d4 0f 00 00       	call   10240 <isupper>
    f26c:	44 89 f9             	mov    %r15d,%ecx
    f26f:	83 f8 01             	cmp    $0x1,%eax
    f272:	19 c0                	sbb    %eax,%eax
    f274:	83 e0 20             	and    $0x20,%eax
    f277:	83 c0 37             	add    $0x37,%eax
    f27a:	29 c1                	sub    %eax,%ecx
    f27c:	44 39 e9             	cmp    %r13d,%ecx
    f27f:	0f 8c 21 ff ff ff    	jl     f1a6 <strtol+0x126>
    f285:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    f28a:	48 85 c0             	test   %rax,%rax
    f28d:	0f 84 2e fe ff ff    	je     f0c1 <strtol+0x41>
    f293:	48 83 eb 01          	sub    $0x1,%rbx
    f297:	85 ed                	test   %ebp,%ebp
    f299:	48 0f 44 5c 24 20    	cmove  0x20(%rsp),%rbx
    f29f:	48 89 18             	mov    %rbx,(%rax)
    f2a2:	e9 1a fe ff ff       	jmp    f0c1 <strtol+0x41>
    f2a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f2ae:	00 00 
    f2b0:	4c 0f af 64 24 18    	imul   0x18(%rsp),%r12
    f2b6:	48 63 c9             	movslq %ecx,%rcx
    f2b9:	bd 01 00 00 00       	mov    $0x1,%ebp
    f2be:	49 01 cc             	add    %rcx,%r12
    f2c1:	e9 bb fe ff ff       	jmp    f181 <strtol+0x101>
    f2c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f2cd:	00 00 00 
    f2d0:	4c 0f af 64 24 18    	imul   0x18(%rsp),%r12
    f2d6:	48 63 c9             	movslq %ecx,%rcx
    f2d9:	44 89 f5             	mov    %r14d,%ebp
    f2dc:	49 29 cc             	sub    %rcx,%r12
    f2df:	e9 9d fe ff ff       	jmp    f181 <strtol+0x101>
    f2e4:	0f 1f 40 00          	nopl   0x0(%rax)
    f2e8:	0f b6 13             	movzbl (%rbx),%edx
    f2eb:	83 e2 df             	and    $0xffffffdf,%edx
    f2ee:	80 fa 58             	cmp    $0x58,%dl
    f2f1:	75 1d                	jne    f310 <strtol+0x290>
    f2f3:	44 0f be 7b 01       	movsbl 0x1(%rbx),%r15d
    f2f8:	41 bd 10 00 00 00    	mov    $0x10,%r13d
    f2fe:	48 83 c3 02          	add    $0x2,%rbx
    f302:	48 c7 44 24 18 10 00 	movq   $0x10,0x18(%rsp)
    f309:	00 00 
    f30b:	e9 12 ff ff ff       	jmp    f222 <strtol+0x1a2>
    f310:	45 85 ed             	test   %r13d,%r13d
    f313:	75 24                	jne    f339 <strtol+0x2b9>
    f315:	48 c7 44 24 18 08 00 	movq   $0x8,0x18(%rsp)
    f31c:	00 00 
    f31e:	41 bd 08 00 00 00    	mov    $0x8,%r13d
    f324:	e9 f9 fe ff ff       	jmp    f222 <strtol+0x1a2>
    f329:	49 63 c5             	movslq %r13d,%rax
    f32c:	4c 89 f3             	mov    %r14,%rbx
    f32f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f334:	e9 f1 fe ff ff       	jmp    f22a <strtol+0x1aa>
    f339:	49 63 d5             	movslq %r13d,%rdx
    f33c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    f341:	e9 dc fe ff ff       	jmp    f222 <strtol+0x1a2>
    f346:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f34d:	00 00 00 

000000000000f350 <memcmp>:
    f350:	f3 0f 1e fa          	endbr64 
    f354:	31 c0                	xor    %eax,%eax
    f356:	48 85 d2             	test   %rdx,%rdx
    f359:	74 27                	je     f382 <memcmp+0x32>
    f35b:	31 c9                	xor    %ecx,%ecx
    f35d:	eb 0a                	jmp    f369 <memcmp+0x19>
    f35f:	90                   	nop
    f360:	48 83 c1 01          	add    $0x1,%rcx
    f364:	48 39 ca             	cmp    %rcx,%rdx
    f367:	74 17                	je     f380 <memcmp+0x30>
    f369:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
    f36d:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
    f372:	44 38 c0             	cmp    %r8b,%al
    f375:	74 e9                	je     f360 <memcmp+0x10>
    f377:	44 29 c0             	sub    %r8d,%eax
    f37a:	c3                   	ret    
    f37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f380:	31 c0                	xor    %eax,%eax
    f382:	c3                   	ret    
    f383:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f38a:	00 00 00 
    f38d:	0f 1f 00             	nopl   (%rax)

000000000000f390 <__memcpy.part.0>:
    f390:	48 89 f0             	mov    %rsi,%rax
    f393:	48 09 f8             	or     %rdi,%rax
    f396:	a8 07                	test   $0x7,%al
    f398:	74 46                	je     f3e0 <__memcpy.part.0+0x50>
    f39a:	48 89 f0             	mov    %rsi,%rax
    f39d:	48 31 f8             	xor    %rdi,%rax
    f3a0:	a8 07                	test   $0x7,%al
    f3a2:	75 0a                	jne    f3ae <__memcpy.part.0+0x1e>
    f3a4:	48 83 fa 07          	cmp    $0x7,%rdx
    f3a8:	0f 87 92 00 00 00    	ja     f440 <__memcpy.part.0+0xb0>
    f3ae:	45 31 c9             	xor    %r9d,%r9d
    f3b1:	45 31 c0             	xor    %r8d,%r8d
    f3b4:	45 31 d2             	xor    %r10d,%r10d
    f3b7:	31 c0                	xor    %eax,%eax
    f3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f3c0:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
    f3c4:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
    f3c7:	48 83 c0 01          	add    $0x1,%rax
    f3cb:	48 39 c2             	cmp    %rax,%rdx
    f3ce:	75 f0                	jne    f3c0 <__memcpy.part.0+0x30>
    f3d0:	48 01 d6             	add    %rdx,%rsi
    f3d3:	48 01 d7             	add    %rdx,%rdi
    f3d6:	4c 89 d2             	mov    %r10,%rdx
    f3d9:	eb 13                	jmp    f3ee <__memcpy.part.0+0x5e>
    f3db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f3e0:	49 89 d0             	mov    %rdx,%r8
    f3e3:	49 89 d1             	mov    %rdx,%r9
    f3e6:	49 c1 e8 03          	shr    $0x3,%r8
    f3ea:	41 83 e1 07          	and    $0x7,%r9d
    f3ee:	48 83 fa 07          	cmp    $0x7,%rdx
    f3f2:	76 27                	jbe    f41b <__memcpy.part.0+0x8b>
    f3f4:	31 c0                	xor    %eax,%eax
    f3f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f3fd:	00 00 00 
    f400:	48 8b 14 c6          	mov    (%rsi,%rax,8),%rdx
    f404:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f408:	48 83 c0 01          	add    $0x1,%rax
    f40c:	49 39 c0             	cmp    %rax,%r8
    f40f:	75 ef                	jne    f400 <__memcpy.part.0+0x70>
    f411:	49 c1 e0 03          	shl    $0x3,%r8
    f415:	4c 01 c6             	add    %r8,%rsi
    f418:	4c 01 c7             	add    %r8,%rdi
    f41b:	4d 85 c9             	test   %r9,%r9
    f41e:	74 18                	je     f438 <__memcpy.part.0+0xa8>
    f420:	31 c0                	xor    %eax,%eax
    f422:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f428:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    f42c:	88 14 07             	mov    %dl,(%rdi,%rax,1)
    f42f:	48 83 c0 01          	add    $0x1,%rax
    f433:	49 39 c1             	cmp    %rax,%r9
    f436:	75 f0                	jne    f428 <__memcpy.part.0+0x98>
    f438:	c3                   	ret    
    f439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f440:	48 89 f0             	mov    %rsi,%rax
    f443:	83 e0 07             	and    $0x7,%eax
    f446:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
    f44b:	ba 08 00 00 00       	mov    $0x8,%edx
    f450:	4d 89 d0             	mov    %r10,%r8
    f453:	4d 89 d1             	mov    %r10,%r9
    f456:	48 29 c2             	sub    %rax,%rdx
    f459:	49 c1 e8 03          	shr    $0x3,%r8
    f45d:	41 83 e1 07          	and    $0x7,%r9d
    f461:	e9 51 ff ff ff       	jmp    f3b7 <__memcpy.part.0+0x27>
    f466:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f46d:	00 00 00 

000000000000f470 <memcpy_verw.part.0>:
    f470:	41 55                	push   %r13
    f472:	41 54                	push   %r12
    f474:	49 89 d4             	mov    %rdx,%r12
    f477:	55                   	push   %rbp
    f478:	48 89 f5             	mov    %rsi,%rbp
    f47b:	53                   	push   %rbx
    f47c:	48 89 fb             	mov    %rdi,%rbx
    f47f:	48 83 ec 08          	sub    $0x8,%rsp
    f483:	48 83 fa 07          	cmp    $0x7,%rdx
    f487:	77 1e                	ja     f4a7 <memcpy_verw.part.0+0x37>
    f489:	eb 3e                	jmp    f4c9 <memcpy_verw.part.0+0x59>
    f48b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f490:	49 83 ec 08          	sub    $0x8,%r12
    f494:	48 83 c5 08          	add    $0x8,%rbp
    f498:	48 83 c3 08          	add    $0x8,%rbx
    f49c:	e8 ff 52 00 00       	call   147a0 <__memcpy_8a>
    f4a1:	49 83 fc 07          	cmp    $0x7,%r12
    f4a5:	76 22                	jbe    f4c9 <memcpy_verw.part.0+0x59>
    f4a7:	48 89 ee             	mov    %rbp,%rsi
    f4aa:	48 89 df             	mov    %rbx,%rdi
    f4ad:	f6 c3 07             	test   $0x7,%bl
    f4b0:	74 de                	je     f490 <memcpy_verw.part.0+0x20>
    f4b2:	49 83 ec 01          	sub    $0x1,%r12
    f4b6:	48 83 c5 01          	add    $0x1,%rbp
    f4ba:	48 83 c3 01          	add    $0x1,%rbx
    f4be:	e8 bd 52 00 00       	call   14780 <__memcpy_verw>
    f4c3:	49 83 fc 07          	cmp    $0x7,%r12
    f4c7:	77 de                	ja     f4a7 <memcpy_verw.part.0+0x37>
    f4c9:	4d 85 e4             	test   %r12,%r12
    f4cc:	74 29                	je     f4f7 <memcpy_verw.part.0+0x87>
    f4ce:	45 31 ed             	xor    %r13d,%r13d
    f4d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f4d8:	48 89 ee             	mov    %rbp,%rsi
    f4db:	48 89 df             	mov    %rbx,%rdi
    f4de:	48 83 c5 01          	add    $0x1,%rbp
    f4e2:	48 83 c3 01          	add    $0x1,%rbx
    f4e6:	e8 95 52 00 00       	call   14780 <__memcpy_verw>
    f4eb:	41 8d 45 01          	lea    0x1(%r13),%eax
    f4ef:	49 89 c5             	mov    %rax,%r13
    f4f2:	4c 39 e0             	cmp    %r12,%rax
    f4f5:	72 e1                	jb     f4d8 <memcpy_verw.part.0+0x68>
    f4f7:	48 83 c4 08          	add    $0x8,%rsp
    f4fb:	5b                   	pop    %rbx
    f4fc:	5d                   	pop    %rbp
    f4fd:	41 5c                	pop    %r12
    f4ff:	41 5d                	pop    %r13
    f501:	c3                   	ret    
    f502:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f509:	00 00 00 
    f50c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f510 <copy_external_memory>:
    f510:	41 57                	push   %r15
    f512:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f516:	41 56                	push   %r14
    f518:	41 55                	push   %r13
    f51a:	41 54                	push   %r12
    f51c:	55                   	push   %rbp
    f51d:	48 83 ec 30          	sub    $0x30,%rsp
    f521:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f528:	00 00 
    f52a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    f52f:	31 c0                	xor    %eax,%eax
    f531:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    f536:	48 85 d2             	test   %rdx,%rdx
    f539:	75 25                	jne    f560 <copy_external_memory+0x50>
    f53b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    f540:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f547:	00 00 
    f549:	0f 85 b7 00 00 00    	jne    f606 <copy_external_memory+0xf6>
    f54f:	48 83 c4 30          	add    $0x30,%rsp
    f553:	5d                   	pop    %rbp
    f554:	41 5c                	pop    %r12
    f556:	41 5d                	pop    %r13
    f558:	41 5e                	pop    %r14
    f55a:	41 5f                	pop    %r15
    f55c:	c3                   	ret    
    f55d:	0f 1f 00             	nopl   (%rax)
    f560:	41 89 cd             	mov    %ecx,%r13d
    f563:	89 f1                	mov    %esi,%ecx
    f565:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    f56a:	49 89 d4             	mov    %rdx,%r12
    f56d:	83 e1 07             	and    $0x7,%ecx
    f570:	49 89 ff             	mov    %rdi,%r15
    f573:	49 89 f6             	mov    %rsi,%r14
    f576:	48 89 ef             	mov    %rbp,%rdi
    f579:	89 ca                	mov    %ecx,%edx
    f57b:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    f57f:	48 29 d6             	sub    %rdx,%rsi
    f582:	48 89 14 24          	mov    %rdx,(%rsp)
    f586:	e8 15 52 00 00       	call   147a0 <__memcpy_8a>
    f58b:	48 8b 14 24          	mov    (%rsp),%rdx
    f58f:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    f593:	48 01 d5             	add    %rdx,%rbp
    f596:	85 c9                	test   %ecx,%ecx
    f598:	74 2e                	je     f5c8 <copy_external_memory+0xb8>
    f59a:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
    f59e:	48 83 f8 08          	cmp    $0x8,%rax
    f5a2:	77 4c                	ja     f5f0 <copy_external_memory+0xe0>
    f5a4:	45 84 ed             	test   %r13b,%r13b
    f5a7:	74 24                	je     f5cd <copy_external_memory+0xbd>
    f5a9:	49 39 ef             	cmp    %rbp,%r15
    f5ac:	74 8d                	je     f53b <copy_external_memory+0x2b>
    f5ae:	4c 89 e2             	mov    %r12,%rdx
    f5b1:	48 89 ee             	mov    %rbp,%rsi
    f5b4:	4c 89 ff             	mov    %r15,%rdi
    f5b7:	e8 b4 fe ff ff       	call   f470 <memcpy_verw.part.0>
    f5bc:	e9 7a ff ff ff       	jmp    f53b <copy_external_memory+0x2b>
    f5c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f5c8:	45 84 ed             	test   %r13b,%r13b
    f5cb:	75 e1                	jne    f5ae <copy_external_memory+0x9e>
    f5cd:	49 39 ef             	cmp    %rbp,%r15
    f5d0:	0f 84 65 ff ff ff    	je     f53b <copy_external_memory+0x2b>
    f5d6:	4c 89 e2             	mov    %r12,%rdx
    f5d9:	48 89 ee             	mov    %rbp,%rsi
    f5dc:	4c 89 ff             	mov    %r15,%rdi
    f5df:	e8 ac fd ff ff       	call   f390 <__memcpy.part.0>
    f5e4:	e9 52 ff ff ff       	jmp    f53b <copy_external_memory+0x2b>
    f5e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f5f0:	4c 89 f6             	mov    %r14,%rsi
    f5f3:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    f5f8:	48 29 d6             	sub    %rdx,%rsi
    f5fb:	48 83 c6 08          	add    $0x8,%rsi
    f5ff:	e8 9c 51 00 00       	call   147a0 <__memcpy_8a>
    f604:	eb 9e                	jmp    f5a4 <copy_external_memory+0x94>
    f606:	e8 b5 03 00 00       	call   f9c0 <__stack_chk_fail>
    f60b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000f610 <memcpy_verw>:
    f610:	f3 0f 1e fa          	endbr64 
    f614:	41 54                	push   %r12
    f616:	49 89 fc             	mov    %rdi,%r12
    f619:	48 85 d2             	test   %rdx,%rdx
    f61c:	74 0a                	je     f628 <memcpy_verw+0x18>
    f61e:	48 39 f7             	cmp    %rsi,%rdi
    f621:	74 05                	je     f628 <memcpy_verw+0x18>
    f623:	e8 48 fe ff ff       	call   f470 <memcpy_verw.part.0>
    f628:	4c 89 e0             	mov    %r12,%rax
    f62b:	41 5c                	pop    %r12
    f62d:	c3                   	ret    
    f62e:	66 90                	xchg   %ax,%ax

000000000000f630 <memcpy>:
    f630:	f3 0f 1e fa          	endbr64 
    f634:	41 57                	push   %r15
    f636:	41 56                	push   %r14
    f638:	41 55                	push   %r13
    f63a:	49 89 fd             	mov    %rdi,%r13
    f63d:	41 54                	push   %r12
    f63f:	55                   	push   %rbp
    f640:	53                   	push   %rbx
    f641:	48 83 ec 08          	sub    $0x8,%rsp
    f645:	48 85 d2             	test   %rdx,%rdx
    f648:	74 7b                	je     f6c5 <memcpy+0x95>
    f64a:	49 89 f6             	mov    %rsi,%r14
    f64d:	48 39 f7             	cmp    %rsi,%rdi
    f650:	74 73                	je     f6c5 <memcpy+0x95>
    f652:	48 89 d6             	mov    %rdx,%rsi
    f655:	4c 89 f7             	mov    %r14,%rdi
    f658:	49 89 d4             	mov    %rdx,%r12
    f65b:	e8 e0 96 ff ff       	call   8d40 <sgx_is_within_enclave>
    f660:	4c 89 e6             	mov    %r12,%rsi
    f663:	4c 89 ef             	mov    %r13,%rdi
    f666:	89 c3                	mov    %eax,%ebx
    f668:	e8 d3 96 ff ff       	call   8d40 <sgx_is_within_enclave>
    f66d:	85 db                	test   %ebx,%ebx
    f66f:	75 6f                	jne    f6e0 <memcpy+0xb0>
    f671:	45 31 ff             	xor    %r15d,%r15d
    f674:	85 c0                	test   %eax,%eax
    f676:	4c 89 ed             	mov    %r13,%rbp
    f679:	41 0f 94 c7          	sete   %r15b
    f67d:	49 83 fc 07          	cmp    $0x7,%r12
    f681:	76 31                	jbe    f6b4 <memcpy+0x84>
    f683:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f688:	89 e8                	mov    %ebp,%eax
    f68a:	bb 08 00 00 00       	mov    $0x8,%ebx
    f68f:	4c 89 f6             	mov    %r14,%rsi
    f692:	48 89 ef             	mov    %rbp,%rdi
    f695:	83 e0 07             	and    $0x7,%eax
    f698:	44 89 f9             	mov    %r15d,%ecx
    f69b:	29 c3                	sub    %eax,%ebx
    f69d:	48 89 da             	mov    %rbx,%rdx
    f6a0:	49 29 dc             	sub    %rbx,%r12
    f6a3:	49 01 de             	add    %rbx,%r14
    f6a6:	48 01 dd             	add    %rbx,%rbp
    f6a9:	e8 62 fe ff ff       	call   f510 <copy_external_memory>
    f6ae:	49 83 fc 07          	cmp    $0x7,%r12
    f6b2:	77 d4                	ja     f688 <memcpy+0x58>
    f6b4:	44 89 f9             	mov    %r15d,%ecx
    f6b7:	4c 89 e2             	mov    %r12,%rdx
    f6ba:	4c 89 f6             	mov    %r14,%rsi
    f6bd:	48 89 ef             	mov    %rbp,%rdi
    f6c0:	e8 4b fe ff ff       	call   f510 <copy_external_memory>
    f6c5:	48 83 c4 08          	add    $0x8,%rsp
    f6c9:	4c 89 e8             	mov    %r13,%rax
    f6cc:	5b                   	pop    %rbx
    f6cd:	5d                   	pop    %rbp
    f6ce:	41 5c                	pop    %r12
    f6d0:	41 5d                	pop    %r13
    f6d2:	41 5e                	pop    %r14
    f6d4:	41 5f                	pop    %r15
    f6d6:	c3                   	ret    
    f6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f6de:	00 00 
    f6e0:	4c 89 e2             	mov    %r12,%rdx
    f6e3:	4c 89 f6             	mov    %r14,%rsi
    f6e6:	4c 89 ef             	mov    %r13,%rdi
    f6e9:	85 c0                	test   %eax,%eax
    f6eb:	75 0b                	jne    f6f8 <memcpy+0xc8>
    f6ed:	e8 7e fd ff ff       	call   f470 <memcpy_verw.part.0>
    f6f2:	eb d1                	jmp    f6c5 <memcpy+0x95>
    f6f4:	0f 1f 40 00          	nopl   0x0(%rax)
    f6f8:	e8 93 fc ff ff       	call   f390 <__memcpy.part.0>
    f6fd:	eb c6                	jmp    f6c5 <memcpy+0x95>
    f6ff:	90                   	nop

000000000000f700 <memset_verw>:
    f700:	f3 0f 1e fa          	endbr64 
    f704:	41 56                	push   %r14
    f706:	41 55                	push   %r13
    f708:	49 89 fd             	mov    %rdi,%r13
    f70b:	41 54                	push   %r12
    f70d:	55                   	push   %rbp
    f70e:	53                   	push   %rbx
    f70f:	48 83 ec 20          	sub    $0x20,%rsp
    f713:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f71a:	00 00 
    f71c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f721:	31 c0                	xor    %eax,%eax
    f723:	48 85 d2             	test   %rdx,%rdx
    f726:	0f 84 a8 00 00 00    	je     f7d4 <memset_verw+0xd4>
    f72c:	48 85 ff             	test   %rdi,%rdi
    f72f:	0f 84 9f 00 00 00    	je     f7d4 <memset_verw+0xd4>
    f735:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
    f73a:	48 89 d5             	mov    %rdx,%rbp
    f73d:	ba 08 00 00 00       	mov    $0x8,%edx
    f742:	4c 89 eb             	mov    %r13,%rbx
    f745:	4c 89 e7             	mov    %r12,%rdi
    f748:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
    f74d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f754:	00 00 
    f756:	e8 55 50 00 00       	call   147b0 <__memset>
    f75b:	48 83 fd 07          	cmp    $0x7,%rbp
    f75f:	76 4b                	jbe    f7ac <memset_verw+0xac>
    f761:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    f766:	eb 21                	jmp    f789 <memset_verw+0x89>
    f768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f76f:	00 
    f770:	48 89 df             	mov    %rbx,%rdi
    f773:	4c 89 e6             	mov    %r12,%rsi
    f776:	48 83 ed 08          	sub    $0x8,%rbp
    f77a:	48 83 c3 08          	add    $0x8,%rbx
    f77e:	e8 1d 50 00 00       	call   147a0 <__memcpy_8a>
    f783:	48 83 fd 07          	cmp    $0x7,%rbp
    f787:	76 1e                	jbe    f7a7 <memset_verw+0xa7>
    f789:	f6 c3 07             	test   $0x7,%bl
    f78c:	74 e2                	je     f770 <memset_verw+0x70>
    f78e:	48 89 df             	mov    %rbx,%rdi
    f791:	4c 89 f6             	mov    %r14,%rsi
    f794:	48 83 ed 01          	sub    $0x1,%rbp
    f798:	48 83 c3 01          	add    $0x1,%rbx
    f79c:	e8 df 4f 00 00       	call   14780 <__memcpy_verw>
    f7a1:	48 83 fd 07          	cmp    $0x7,%rbp
    f7a5:	77 e2                	ja     f789 <memset_verw+0x89>
    f7a7:	48 85 ed             	test   %rbp,%rbp
    f7aa:	74 28                	je     f7d4 <memset_verw+0xd4>
    f7ac:	45 31 e4             	xor    %r12d,%r12d
    f7af:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    f7b4:	0f 1f 40 00          	nopl   0x0(%rax)
    f7b8:	48 89 df             	mov    %rbx,%rdi
    f7bb:	4c 89 f6             	mov    %r14,%rsi
    f7be:	48 83 c3 01          	add    $0x1,%rbx
    f7c2:	e8 b9 4f 00 00       	call   14780 <__memcpy_verw>
    f7c7:	41 8d 44 24 01       	lea    0x1(%r12),%eax
    f7cc:	49 89 c4             	mov    %rax,%r12
    f7cf:	48 39 e8             	cmp    %rbp,%rax
    f7d2:	72 e4                	jb     f7b8 <memset_verw+0xb8>
    f7d4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f7d9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f7e0:	00 00 
    f7e2:	75 10                	jne    f7f4 <memset_verw+0xf4>
    f7e4:	48 83 c4 20          	add    $0x20,%rsp
    f7e8:	4c 89 e8             	mov    %r13,%rax
    f7eb:	5b                   	pop    %rbx
    f7ec:	5d                   	pop    %rbp
    f7ed:	41 5c                	pop    %r12
    f7ef:	41 5d                	pop    %r13
    f7f1:	41 5e                	pop    %r14
    f7f3:	c3                   	ret    
    f7f4:	e8 c7 01 00 00       	call   f9c0 <__stack_chk_fail>
    f7f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f800 <memset>:
    f800:	f3 0f 1e fa          	endbr64 
    f804:	e9 a7 4f 00 00       	jmp    147b0 <__memset>
    f809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f810 <memset_s>:
    f810:	f3 0f 1e fa          	endbr64 
    f814:	41 54                	push   %r12
    f816:	48 85 ff             	test   %rdi,%rdi
    f819:	74 4d                	je     f868 <memset_s+0x58>
    f81b:	49 89 f0             	mov    %rsi,%r8
    f81e:	89 d6                	mov    %edx,%esi
    f820:	48 89 ca             	mov    %rcx,%rdx
    f823:	4c 39 c1             	cmp    %r8,%rcx
    f826:	76 28                	jbe    f850 <memset_s+0x40>
    f828:	48 8b 05 b1 c9 01 00 	mov    0x1c9b1(%rip),%rax        # 2c1e0 <__memset_vp>
    f82f:	4c 89 c2             	mov    %r8,%rdx
    f832:	41 bc 4b 00 00 00    	mov    $0x4b,%r12d
    f838:	ff d0                	call   *%rax
    f83a:	e8 71 09 00 00       	call   101b0 <__errno>
    f83f:	44 89 20             	mov    %r12d,(%rax)
    f842:	44 89 e0             	mov    %r12d,%eax
    f845:	41 5c                	pop    %r12
    f847:	c3                   	ret    
    f848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f84f:	00 
    f850:	45 31 e4             	xor    %r12d,%r12d
    f853:	48 8b 05 86 c9 01 00 	mov    0x1c986(%rip),%rax        # 2c1e0 <__memset_vp>
    f85a:	ff d0                	call   *%rax
    f85c:	44 89 e0             	mov    %r12d,%eax
    f85f:	41 5c                	pop    %r12
    f861:	c3                   	ret    
    f862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f868:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    f86e:	eb ca                	jmp    f83a <memset_s+0x2a>

000000000000f870 <sgx_init_string_lib>:
    f870:	f3 0f 1e fa          	endbr64 
    f874:	31 c0                	xor    %eax,%eax
    f876:	c3                   	ret    
    f877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f87e:	00 00 

000000000000f880 <strlen>:
    f880:	f3 0f 1e fa          	endbr64 
    f884:	e9 87 4f 00 00       	jmp    14810 <_libc__strlen>
    f889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f890 <strncpy>:
    f890:	f3 0f 1e fa          	endbr64 
    f894:	48 89 f8             	mov    %rdi,%rax
    f897:	48 85 d2             	test   %rdx,%rdx
    f89a:	74 54                	je     f8f0 <strncpy+0x60>
    f89c:	48 89 f9             	mov    %rdi,%rcx
    f89f:	eb 0c                	jmp    f8ad <strncpy+0x1d>
    f8a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f8a8:	48 85 d2             	test   %rdx,%rdx
    f8ab:	74 43                	je     f8f0 <strncpy+0x60>
    f8ad:	44 0f b6 06          	movzbl (%rsi),%r8d
    f8b1:	49 89 c9             	mov    %rcx,%r9
    f8b4:	48 83 c6 01          	add    $0x1,%rsi
    f8b8:	48 83 c1 01          	add    $0x1,%rcx
    f8bc:	49 89 d2             	mov    %rdx,%r10
    f8bf:	48 83 ea 01          	sub    $0x1,%rdx
    f8c3:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)
    f8c7:	45 84 c0             	test   %r8b,%r8b
    f8ca:	75 dc                	jne    f8a8 <strncpy+0x18>
    f8cc:	48 85 d2             	test   %rdx,%rdx
    f8cf:	74 1f                	je     f8f0 <strncpy+0x60>
    f8d1:	4d 01 d1             	add    %r10,%r9
    f8d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f8d8:	48 83 c1 01          	add    $0x1,%rcx
    f8dc:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
    f8e0:	4c 39 c9             	cmp    %r9,%rcx
    f8e3:	75 f3                	jne    f8d8 <strncpy+0x48>
    f8e5:	c3                   	ret    
    f8e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f8ed:	00 00 00 
    f8f0:	c3                   	ret    
    f8f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f8f8:	00 00 00 
    f8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000f900 <strtok_r>:
    f900:	f3 0f 1e fa          	endbr64 
    f904:	48 85 ff             	test   %rdi,%rdi
    f907:	74 7f                	je     f988 <strtok_r+0x88>
    f909:	44 0f be 0f          	movsbl (%rdi),%r9d
    f90d:	48 8d 47 01          	lea    0x1(%rdi),%rax
    f911:	48 89 f1             	mov    %rsi,%rcx
    f914:	eb 0f                	jmp    f925 <strtok_r+0x25>
    f916:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f91d:	00 00 00 
    f920:	45 39 c1             	cmp    %r8d,%r9d
    f923:	74 4b                	je     f970 <strtok_r+0x70>
    f925:	44 0f be 01          	movsbl (%rcx),%r8d
    f929:	48 83 c1 01          	add    $0x1,%rcx
    f92d:	45 85 c0             	test   %r8d,%r8d
    f930:	75 ee                	jne    f920 <strtok_r+0x20>
    f932:	45 85 c9             	test   %r9d,%r9d
    f935:	74 69                	je     f9a0 <strtok_r+0xa0>
    f937:	48 83 c0 01          	add    $0x1,%rax
    f93b:	48 89 f1             	mov    %rsi,%rcx
    f93e:	44 0f b6 50 ff       	movzbl -0x1(%rax),%r10d
    f943:	eb 08                	jmp    f94d <strtok_r+0x4d>
    f945:	0f 1f 00             	nopl   (%rax)
    f948:	45 85 c9             	test   %r9d,%r9d
    f94b:	74 ea                	je     f937 <strtok_r+0x37>
    f94d:	44 0f be 09          	movsbl (%rcx),%r9d
    f951:	48 83 c1 01          	add    $0x1,%rcx
    f955:	45 38 ca             	cmp    %r9b,%r10b
    f958:	75 ee                	jne    f948 <strtok_r+0x48>
    f95a:	45 85 c9             	test   %r9d,%r9d
    f95d:	74 19                	je     f978 <strtok_r+0x78>
    f95f:	c6 40 ff 00          	movb   $0x0,-0x1(%rax)
    f963:	48 89 02             	mov    %rax,(%rdx)
    f966:	48 89 f8             	mov    %rdi,%rax
    f969:	c3                   	ret    
    f96a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f970:	48 89 c7             	mov    %rax,%rdi
    f973:	eb 94                	jmp    f909 <strtok_r+0x9>
    f975:	0f 1f 00             	nopl   (%rax)
    f978:	31 c0                	xor    %eax,%eax
    f97a:	48 89 02             	mov    %rax,(%rdx)
    f97d:	48 89 f8             	mov    %rdi,%rax
    f980:	c3                   	ret    
    f981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f988:	48 8b 3a             	mov    (%rdx),%rdi
    f98b:	48 85 ff             	test   %rdi,%rdi
    f98e:	0f 85 75 ff ff ff    	jne    f909 <strtok_r+0x9>
    f994:	31 c0                	xor    %eax,%eax
    f996:	c3                   	ret    
    f997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f99e:	00 00 
    f9a0:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    f9a7:	31 c0                	xor    %eax,%eax
    f9a9:	c3                   	ret    
    f9aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000f9b0 <strtok>:
    f9b0:	f3 0f 1e fa          	endbr64 
    f9b4:	48 8d 15 9d cd 01 00 	lea    0x1cd9d(%rip),%rdx        # 2c758 <last.1608>
    f9bb:	e9 40 ff ff ff       	jmp    f900 <strtok_r>

000000000000f9c0 <__stack_chk_fail>:
    f9c0:	f3 0f 1e fa          	endbr64 
    f9c4:	50                   	push   %rax
    f9c5:	58                   	pop    %rax
    f9c6:	48 83 ec 08          	sub    $0x8,%rsp
    f9ca:	e8 35 1c 01 00       	call   21604 <abort>
    f9cf:	90                   	nop

000000000000f9d0 <sgx_thread_cond_wait>:
    f9d0:	f3 0f 1e fa          	endbr64 
    f9d4:	41 56                	push   %r14
    f9d6:	41 55                	push   %r13
    f9d8:	41 54                	push   %r12
    f9da:	55                   	push   %rbp
    f9db:	53                   	push   %rbx
    f9dc:	48 83 ec 20          	sub    $0x20,%rsp
    f9e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f9e7:	00 00 
    f9e9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f9ee:	31 c0                	xor    %eax,%eax
    f9f0:	48 85 ff             	test   %rdi,%rdi
    f9f3:	0f 84 e7 00 00 00    	je     fae0 <sgx_thread_cond_wait+0x110>
    f9f9:	49 89 f4             	mov    %rsi,%r12
    f9fc:	be 18 00 00 00       	mov    $0x18,%esi
    fa01:	48 89 fd             	mov    %rdi,%rbp
    fa04:	e8 37 93 ff ff       	call   8d40 <sgx_is_within_enclave>
    fa09:	4d 85 e4             	test   %r12,%r12
    fa0c:	0f 84 ce 00 00 00    	je     fae0 <sgx_thread_cond_wait+0x110>
    fa12:	85 c0                	test   %eax,%eax
    fa14:	0f 84 c6 00 00 00    	je     fae0 <sgx_thread_cond_wait+0x110>
    fa1a:	be 28 00 00 00       	mov    $0x28,%esi
    fa1f:	4c 89 e7             	mov    %r12,%rdi
    fa22:	e8 19 93 ff ff       	call   8d40 <sgx_is_within_enclave>
    fa27:	85 c0                	test   %eax,%eax
    fa29:	0f 84 b1 00 00 00    	je     fae0 <sgx_thread_cond_wait+0x110>
    fa2f:	e8 49 18 01 00       	call   2127d <get_thread_data>
    fa34:	48 89 ef             	mov    %rbp,%rdi
    fa37:	48 89 c3             	mov    %rax,%rbx
    fa3a:	e8 81 c1 ff ff       	call   bbc0 <sgx_spin_lock>
    fa3f:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
    fa44:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    fa4b:	00 
    fa4c:	0f 85 b4 00 00 00    	jne    fb06 <sgx_thread_cond_wait+0x136>
    fa52:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
    fa56:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    fa5a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fa5f:	4c 89 e7             	mov    %r12,%rdi
    fa62:	4c 8d 74 24 0c       	lea    0xc(%rsp),%r14
    fa67:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fa6e:	00 00 
    fa70:	e8 1b 03 00 00       	call   fd90 <sgx_thread_mutex_unlock_lazy>
    fa75:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    fa79:	41 89 c5             	mov    %eax,%r13d
    fa7c:	85 c0                	test   %eax,%eax
    fa7e:	0f 85 c0 00 00 00    	jne    fb44 <sgx_thread_cond_wait+0x174>
    fa84:	0f 1f 40 00          	nopl   0x0(%rax)
    fa88:	48 89 ef             	mov    %rbp,%rdi
    fa8b:	e8 a0 c1 ff ff       	call   bc30 <sgx_spin_unlock>
    fa90:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    fa95:	48 85 c0             	test   %rax,%rax
    fa98:	75 7e                	jne    fb18 <sgx_thread_cond_wait+0x148>
    fa9a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    fa9e:	4c 89 f7             	mov    %r14,%rdi
    faa1:	48 8d b0 b0 02 01 00 	lea    0x102b0(%rax),%rsi
    faa8:	e8 83 4a ff ff       	call   4530 <sgx_thread_wait_untrusted_event_ocall>
    faad:	48 89 ef             	mov    %rbp,%rdi
    fab0:	e8 0b c1 ff ff       	call   bbc0 <sgx_spin_lock>
    fab5:	48 8b 45 08          	mov    0x8(%rbp),%rax
    fab9:	48 85 c0             	test   %rax,%rax
    fabc:	74 10                	je     face <sgx_thread_cond_wait+0xfe>
    fabe:	66 90                	xchg   %ax,%ax
    fac0:	48 39 c3             	cmp    %rax,%rbx
    fac3:	74 c3                	je     fa88 <sgx_thread_cond_wait+0xb8>
    fac5:	48 8b 40 48          	mov    0x48(%rax),%rax
    fac9:	48 85 c0             	test   %rax,%rax
    facc:	75 f2                	jne    fac0 <sgx_thread_cond_wait+0xf0>
    face:	48 89 ef             	mov    %rbp,%rdi
    fad1:	e8 5a c1 ff ff       	call   bc30 <sgx_spin_unlock>
    fad6:	4c 89 e7             	mov    %r12,%rdi
    fad9:	e8 42 01 00 00       	call   fc20 <sgx_thread_mutex_lock>
    fade:	eb 06                	jmp    fae6 <sgx_thread_cond_wait+0x116>
    fae0:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    fae6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    faeb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    faf2:	00 00 
    faf4:	75 5d                	jne    fb53 <sgx_thread_cond_wait+0x183>
    faf6:	48 83 c4 20          	add    $0x20,%rsp
    fafa:	44 89 e8             	mov    %r13d,%eax
    fafd:	5b                   	pop    %rbx
    fafe:	5d                   	pop    %rbp
    faff:	41 5c                	pop    %r12
    fb01:	41 5d                	pop    %r13
    fb03:	41 5e                	pop    %r14
    fb05:	c3                   	ret    
    fb06:	48 8b 45 10          	mov    0x10(%rbp),%rax
    fb0a:	48 89 58 48          	mov    %rbx,0x48(%rax)
    fb0e:	e9 43 ff ff ff       	jmp    fa56 <sgx_thread_cond_wait+0x86>
    fb13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fb18:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    fb1c:	48 8b 70 10          	mov    0x10(%rax),%rsi
    fb20:	4c 89 f7             	mov    %r14,%rdi
    fb23:	48 8d 91 b0 02 01 00 	lea    0x102b0(%rcx),%rdx
    fb2a:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    fb31:	e8 3a 4b ff ff       	call   4670 <sgx_thread_setwait_untrusted_events_ocall>
    fb36:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fb3d:	00 00 
    fb3f:	e9 69 ff ff ff       	jmp    faad <sgx_thread_cond_wait+0xdd>
    fb44:	48 89 ef             	mov    %rbp,%rdi
    fb47:	e8 e4 c0 ff ff       	call   bc30 <sgx_spin_unlock>
    fb4c:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
    fb51:	eb 93                	jmp    fae6 <sgx_thread_cond_wait+0x116>
    fb53:	e8 68 fe ff ff       	call   f9c0 <__stack_chk_fail>
    fb58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fb5f:	00 

000000000000fb60 <sgx_thread_cond_signal>:
    fb60:	f3 0f 1e fa          	endbr64 
    fb64:	55                   	push   %rbp
    fb65:	53                   	push   %rbx
    fb66:	48 83 ec 18          	sub    $0x18,%rsp
    fb6a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fb71:	00 00 
    fb73:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fb78:	31 c0                	xor    %eax,%eax
    fb7a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    fb81:	00 
    fb82:	48 85 ff             	test   %rdi,%rdi
    fb85:	74 71                	je     fbf8 <sgx_thread_cond_signal+0x98>
    fb87:	be 18 00 00 00       	mov    $0x18,%esi
    fb8c:	48 89 fd             	mov    %rdi,%rbp
    fb8f:	e8 ac 91 ff ff       	call   8d40 <sgx_is_within_enclave>
    fb94:	85 c0                	test   %eax,%eax
    fb96:	74 60                	je     fbf8 <sgx_thread_cond_signal+0x98>
    fb98:	48 89 ef             	mov    %rbp,%rdi
    fb9b:	e8 20 c0 ff ff       	call   bbc0 <sgx_spin_lock>
    fba0:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
    fba4:	48 85 db             	test   %rbx,%rbx
    fba7:	74 57                	je     fc00 <sgx_thread_cond_signal+0xa0>
    fba9:	48 8b 43 48          	mov    0x48(%rbx),%rax
    fbad:	48 89 45 08          	mov    %rax,0x8(%rbp)
    fbb1:	48 85 c0             	test   %rax,%rax
    fbb4:	75 08                	jne    fbbe <sgx_thread_cond_signal+0x5e>
    fbb6:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
    fbbd:	00 
    fbbe:	48 89 ef             	mov    %rbp,%rdi
    fbc1:	e8 6a c0 ff ff       	call   bc30 <sgx_spin_unlock>
    fbc6:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    fbca:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    fbcf:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    fbd6:	e8 f5 49 ff ff       	call   45d0 <sgx_thread_set_untrusted_event_ocall>
    fbdb:	31 c0                	xor    %eax,%eax
    fbdd:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    fbe2:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    fbe9:	00 00 
    fbeb:	75 1f                	jne    fc0c <sgx_thread_cond_signal+0xac>
    fbed:	48 83 c4 18          	add    $0x18,%rsp
    fbf1:	5b                   	pop    %rbx
    fbf2:	5d                   	pop    %rbp
    fbf3:	c3                   	ret    
    fbf4:	0f 1f 40 00          	nopl   0x0(%rax)
    fbf8:	b8 16 00 00 00       	mov    $0x16,%eax
    fbfd:	eb de                	jmp    fbdd <sgx_thread_cond_signal+0x7d>
    fbff:	90                   	nop
    fc00:	48 89 ef             	mov    %rbp,%rdi
    fc03:	e8 28 c0 ff ff       	call   bc30 <sgx_spin_unlock>
    fc08:	31 c0                	xor    %eax,%eax
    fc0a:	eb d1                	jmp    fbdd <sgx_thread_cond_signal+0x7d>
    fc0c:	e8 af fd ff ff       	call   f9c0 <__stack_chk_fail>
    fc11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fc18:	00 00 00 
    fc1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fc20 <sgx_thread_mutex_lock>:
    fc20:	f3 0f 1e fa          	endbr64 
    fc24:	41 55                	push   %r13
    fc26:	41 54                	push   %r12
    fc28:	55                   	push   %rbp
    fc29:	53                   	push   %rbx
    fc2a:	48 83 ec 18          	sub    $0x18,%rsp
    fc2e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fc35:	00 00 
    fc37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fc3c:	31 c0                	xor    %eax,%eax
    fc3e:	48 85 ff             	test   %rdi,%rdi
    fc41:	0f 84 f3 00 00 00    	je     fd3a <sgx_thread_mutex_lock+0x11a>
    fc47:	be 28 00 00 00       	mov    $0x28,%esi
    fc4c:	48 89 fd             	mov    %rdi,%rbp
    fc4f:	e8 ec 90 ff ff       	call   8d40 <sgx_is_within_enclave>
    fc54:	85 c0                	test   %eax,%eax
    fc56:	0f 84 de 00 00 00    	je     fd3a <sgx_thread_mutex_lock+0x11a>
    fc5c:	e8 1c 16 01 00       	call   2127d <get_thread_data>
    fc61:	4c 8d 6d 0c          	lea    0xc(%rbp),%r13
    fc65:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    fc6a:	48 89 c3             	mov    %rax,%rbx
    fc6d:	0f 1f 00             	nopl   (%rax)
    fc70:	4c 89 ef             	mov    %r13,%rdi
    fc73:	e8 48 bf ff ff       	call   bbc0 <sgx_spin_lock>
    fc78:	8b 45 08             	mov    0x8(%rbp),%eax
    fc7b:	8d 50 ff             	lea    -0x1(%rax),%edx
    fc7e:	83 fa 01             	cmp    $0x1,%edx
    fc81:	0f 87 ab 00 00 00    	ja     fd32 <sgx_thread_mutex_lock+0x112>
    fc87:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    fc8b:	83 f8 02             	cmp    $0x2,%eax
    fc8e:	74 70                	je     fd00 <sgx_thread_mutex_lock+0xe0>
    fc90:	48 8b 45 18          	mov    0x18(%rbp),%rax
    fc94:	48 85 d2             	test   %rdx,%rdx
    fc97:	75 4f                	jne    fce8 <sgx_thread_mutex_lock+0xc8>
    fc99:	48 39 c3             	cmp    %rax,%rbx
    fc9c:	0f 84 d2 00 00 00    	je     fd74 <sgx_thread_mutex_lock+0x154>
    fca2:	48 85 c0             	test   %rax,%rax
    fca5:	0f 84 af 00 00 00    	je     fd5a <sgx_thread_mutex_lock+0x13a>
    fcab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fcb0:	48 8b 40 48          	mov    0x48(%rax),%rax
    fcb4:	48 85 c0             	test   %rax,%rax
    fcb7:	74 67                	je     fd20 <sgx_thread_mutex_lock+0x100>
    fcb9:	48 39 c3             	cmp    %rax,%rbx
    fcbc:	75 f2                	jne    fcb0 <sgx_thread_mutex_lock+0x90>
    fcbe:	4c 89 ef             	mov    %r13,%rdi
    fcc1:	e8 6a bf ff ff       	call   bc30 <sgx_spin_unlock>
    fcc6:	48 8b 43 10          	mov    0x10(%rbx),%rax
    fcca:	4c 89 e7             	mov    %r12,%rdi
    fccd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    fcd4:	00 
    fcd5:	48 8d b0 b0 02 01 00 	lea    0x102b0(%rax),%rsi
    fcdc:	e8 4f 48 ff ff       	call   4530 <sgx_thread_wait_untrusted_event_ocall>
    fce1:	eb 8d                	jmp    fc70 <sgx_thread_mutex_lock+0x50>
    fce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fce8:	48 85 c0             	test   %rax,%rax
    fceb:	75 cc                	jne    fcb9 <sgx_thread_mutex_lock+0x99>
    fced:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    fcf4:	00 
    fcf5:	48 89 5d 18          	mov    %rbx,0x18(%rbp)
    fcf9:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
    fcfd:	eb bf                	jmp    fcbe <sgx_thread_mutex_lock+0x9e>
    fcff:	90                   	nop
    fd00:	48 39 d3             	cmp    %rdx,%rbx
    fd03:	75 8b                	jne    fc90 <sgx_thread_mutex_lock+0x70>
    fd05:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
    fd0a:	4c 89 ef             	mov    %r13,%rdi
    fd0d:	e8 1e bf ff ff       	call   bc30 <sgx_spin_unlock>
    fd12:	31 c0                	xor    %eax,%eax
    fd14:	eb 29                	jmp    fd3f <sgx_thread_mutex_lock+0x11f>
    fd16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fd1d:	00 00 00 
    fd20:	48 8b 45 20          	mov    0x20(%rbp),%rax
    fd24:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
    fd2b:	00 
    fd2c:	48 89 58 48          	mov    %rbx,0x48(%rax)
    fd30:	eb c7                	jmp    fcf9 <sgx_thread_mutex_lock+0xd9>
    fd32:	4c 89 ef             	mov    %r13,%rdi
    fd35:	e8 f6 be ff ff       	call   bc30 <sgx_spin_unlock>
    fd3a:	b8 16 00 00 00       	mov    $0x16,%eax
    fd3f:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    fd44:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    fd4b:	00 00 
    fd4d:	75 3c                	jne    fd8b <sgx_thread_mutex_lock+0x16b>
    fd4f:	48 83 c4 18          	add    $0x18,%rsp
    fd53:	5b                   	pop    %rbx
    fd54:	5d                   	pop    %rbp
    fd55:	41 5c                	pop    %r12
    fd57:	41 5d                	pop    %r13
    fd59:	c3                   	ret    
    fd5a:	48 85 db             	test   %rbx,%rbx
    fd5d:	74 15                	je     fd74 <sgx_thread_mutex_lock+0x154>
    fd5f:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
    fd64:	4c 89 ef             	mov    %r13,%rdi
    fd67:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    fd6b:	e8 c0 be ff ff       	call   bc30 <sgx_spin_unlock>
    fd70:	31 c0                	xor    %eax,%eax
    fd72:	eb cb                	jmp    fd3f <sgx_thread_mutex_lock+0x11f>
    fd74:	48 8b 43 48          	mov    0x48(%rbx),%rax
    fd78:	48 89 45 18          	mov    %rax,0x18(%rbp)
    fd7c:	48 85 c0             	test   %rax,%rax
    fd7f:	75 de                	jne    fd5f <sgx_thread_mutex_lock+0x13f>
    fd81:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
    fd88:	00 
    fd89:	eb d4                	jmp    fd5f <sgx_thread_mutex_lock+0x13f>
    fd8b:	e8 30 fc ff ff       	call   f9c0 <__stack_chk_fail>

000000000000fd90 <sgx_thread_mutex_unlock_lazy>:
    fd90:	f3 0f 1e fa          	endbr64 
    fd94:	48 85 ff             	test   %rdi,%rdi
    fd97:	0f 84 d3 00 00 00    	je     fe70 <sgx_thread_mutex_unlock_lazy+0xe0>
    fd9d:	41 55                	push   %r13
    fd9f:	41 54                	push   %r12
    fda1:	55                   	push   %rbp
    fda2:	48 89 f5             	mov    %rsi,%rbp
    fda5:	be 28 00 00 00       	mov    $0x28,%esi
    fdaa:	53                   	push   %rbx
    fdab:	48 89 fb             	mov    %rdi,%rbx
    fdae:	48 83 ec 08          	sub    $0x8,%rsp
    fdb2:	e8 89 8f ff ff       	call   8d40 <sgx_is_within_enclave>
    fdb7:	85 c0                	test   %eax,%eax
    fdb9:	74 6d                	je     fe28 <sgx_thread_mutex_unlock_lazy+0x98>
    fdbb:	e8 bd 14 01 00       	call   2127d <get_thread_data>
    fdc0:	4c 8d 6b 0c          	lea    0xc(%rbx),%r13
    fdc4:	4c 89 ef             	mov    %r13,%rdi
    fdc7:	49 89 c4             	mov    %rax,%r12
    fdca:	e8 f1 bd ff ff       	call   bbc0 <sgx_spin_lock>
    fdcf:	8b 43 08             	mov    0x8(%rbx),%eax
    fdd2:	83 e8 01             	sub    $0x1,%eax
    fdd5:	83 f8 01             	cmp    $0x1,%eax
    fdd8:	77 46                	ja     fe20 <sgx_thread_mutex_unlock_lazy+0x90>
    fdda:	48 8b 43 10          	mov    0x10(%rbx),%rax
    fdde:	48 85 c0             	test   %rax,%rax
    fde1:	74 5d                	je     fe40 <sgx_thread_mutex_unlock_lazy+0xb0>
    fde3:	49 39 c4             	cmp    %rax,%r12
    fde6:	75 58                	jne    fe40 <sgx_thread_mutex_unlock_lazy+0xb0>
    fde8:	48 83 2b 01          	subq   $0x1,(%rbx)
    fdec:	75 72                	jne    fe60 <sgx_thread_mutex_unlock_lazy+0xd0>
    fdee:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    fdf5:	00 
    fdf6:	4c 89 ef             	mov    %r13,%rdi
    fdf9:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    fdfd:	e8 2e be ff ff       	call   bc30 <sgx_spin_unlock>
    fe02:	48 85 ed             	test   %rbp,%rbp
    fe05:	74 04                	je     fe0b <sgx_thread_mutex_unlock_lazy+0x7b>
    fe07:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
    fe0b:	48 83 c4 08          	add    $0x8,%rsp
    fe0f:	31 c0                	xor    %eax,%eax
    fe11:	5b                   	pop    %rbx
    fe12:	5d                   	pop    %rbp
    fe13:	41 5c                	pop    %r12
    fe15:	41 5d                	pop    %r13
    fe17:	c3                   	ret    
    fe18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fe1f:	00 
    fe20:	4c 89 ef             	mov    %r13,%rdi
    fe23:	e8 08 be ff ff       	call   bc30 <sgx_spin_unlock>
    fe28:	b8 16 00 00 00       	mov    $0x16,%eax
    fe2d:	48 83 c4 08          	add    $0x8,%rsp
    fe31:	5b                   	pop    %rbx
    fe32:	5d                   	pop    %rbp
    fe33:	41 5c                	pop    %r12
    fe35:	41 5d                	pop    %r13
    fe37:	c3                   	ret    
    fe38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fe3f:	00 
    fe40:	4c 89 ef             	mov    %r13,%rdi
    fe43:	e8 e8 bd ff ff       	call   bc30 <sgx_spin_unlock>
    fe48:	48 83 c4 08          	add    $0x8,%rsp
    fe4c:	b8 01 00 00 00       	mov    $0x1,%eax
    fe51:	5b                   	pop    %rbx
    fe52:	5d                   	pop    %rbp
    fe53:	41 5c                	pop    %r12
    fe55:	41 5d                	pop    %r13
    fe57:	c3                   	ret    
    fe58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fe5f:	00 
    fe60:	4c 89 ef             	mov    %r13,%rdi
    fe63:	e8 c8 bd ff ff       	call   bc30 <sgx_spin_unlock>
    fe68:	31 c0                	xor    %eax,%eax
    fe6a:	eb c1                	jmp    fe2d <sgx_thread_mutex_unlock_lazy+0x9d>
    fe6c:	0f 1f 40 00          	nopl   0x0(%rax)
    fe70:	b8 16 00 00 00       	mov    $0x16,%eax
    fe75:	c3                   	ret    
    fe76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fe7d:	00 00 00 

000000000000fe80 <sgx_thread_mutex_unlock>:
    fe80:	f3 0f 1e fa          	endbr64 
    fe84:	41 54                	push   %r12
    fe86:	48 83 ec 20          	sub    $0x20,%rsp
    fe8a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fe91:	00 00 
    fe93:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fe98:	31 c0                	xor    %eax,%eax
    fe9a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    fe9f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fea6:	00 00 
    fea8:	e8 e3 fe ff ff       	call   fd90 <sgx_thread_mutex_unlock_lazy>
    fead:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    feb1:	41 89 c4             	mov    %eax,%r12d
    feb4:	85 c0                	test   %eax,%eax
    feb6:	75 0a                	jne    fec2 <sgx_thread_mutex_unlock+0x42>
    feb8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    febd:	48 85 c0             	test   %rax,%rax
    fec0:	75 1e                	jne    fee0 <sgx_thread_mutex_unlock+0x60>
    fec2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fec7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fece:	00 00 
    fed0:	75 25                	jne    fef7 <sgx_thread_mutex_unlock+0x77>
    fed2:	48 83 c4 20          	add    $0x20,%rsp
    fed6:	44 89 e0             	mov    %r12d,%eax
    fed9:	41 5c                	pop    %r12
    fedb:	c3                   	ret    
    fedc:	0f 1f 40 00          	nopl   0x0(%rax)
    fee0:	48 8b 70 10          	mov    0x10(%rax),%rsi
    fee4:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    fee9:	48 81 c6 b0 02 01 00 	add    $0x102b0,%rsi
    fef0:	e8 db 46 ff ff       	call   45d0 <sgx_thread_set_untrusted_event_ocall>
    fef5:	eb cb                	jmp    fec2 <sgx_thread_mutex_unlock+0x42>
    fef7:	e8 c4 fa ff ff       	call   f9c0 <__stack_chk_fail>
    fefc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ff00 <memcpy_s>:
    ff00:	f3 0f 1e fa          	endbr64 
    ff04:	41 54                	push   %r12
    ff06:	45 31 e4             	xor    %r12d,%r12d
    ff09:	55                   	push   %rbp
    ff0a:	48 83 ec 08          	sub    $0x8,%rsp
    ff0e:	48 85 c9             	test   %rcx,%rcx
    ff11:	74 1d                	je     ff30 <memcpy_s+0x30>
    ff13:	48 85 ff             	test   %rdi,%rdi
    ff16:	74 50                	je     ff68 <memcpy_s+0x68>
    ff18:	48 89 d5             	mov    %rdx,%rbp
    ff1b:	48 85 d2             	test   %rdx,%rdx
    ff1e:	74 20                	je     ff40 <memcpy_s+0x40>
    ff20:	48 39 f1             	cmp    %rsi,%rcx
    ff23:	77 1b                	ja     ff40 <memcpy_s+0x40>
    ff25:	48 89 ca             	mov    %rcx,%rdx
    ff28:	48 89 ee             	mov    %rbp,%rsi
    ff2b:	e8 00 f7 ff ff       	call   f630 <memcpy>
    ff30:	48 83 c4 08          	add    $0x8,%rsp
    ff34:	44 89 e0             	mov    %r12d,%eax
    ff37:	5d                   	pop    %rbp
    ff38:	41 5c                	pop    %r12
    ff3a:	c3                   	ret    
    ff3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ff40:	48 89 f2             	mov    %rsi,%rdx
    ff43:	31 f6                	xor    %esi,%esi
    ff45:	e8 b6 f8 ff ff       	call   f800 <memset>
    ff4a:	48 85 ed             	test   %rbp,%rbp
    ff4d:	74 19                	je     ff68 <memcpy_s+0x68>
    ff4f:	e8 5c 02 00 00       	call   101b0 <__errno>
    ff54:	41 bc 22 00 00 00    	mov    $0x22,%r12d
    ff5a:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    ff60:	eb ce                	jmp    ff30 <memcpy_s+0x30>
    ff62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ff68:	e8 43 02 00 00       	call   101b0 <__errno>
    ff6d:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    ff73:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    ff79:	eb b5                	jmp    ff30 <memcpy_s+0x30>
    ff7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff80 <memcpy_verw_s>:
    ff80:	f3 0f 1e fa          	endbr64 
    ff84:	41 54                	push   %r12
    ff86:	45 31 e4             	xor    %r12d,%r12d
    ff89:	55                   	push   %rbp
    ff8a:	48 83 ec 08          	sub    $0x8,%rsp
    ff8e:	48 85 c9             	test   %rcx,%rcx
    ff91:	74 1d                	je     ffb0 <memcpy_verw_s+0x30>
    ff93:	48 85 ff             	test   %rdi,%rdi
    ff96:	74 50                	je     ffe8 <memcpy_verw_s+0x68>
    ff98:	48 89 d5             	mov    %rdx,%rbp
    ff9b:	48 85 d2             	test   %rdx,%rdx
    ff9e:	74 20                	je     ffc0 <memcpy_verw_s+0x40>
    ffa0:	48 39 f1             	cmp    %rsi,%rcx
    ffa3:	77 1b                	ja     ffc0 <memcpy_verw_s+0x40>
    ffa5:	48 89 ca             	mov    %rcx,%rdx
    ffa8:	48 89 ee             	mov    %rbp,%rsi
    ffab:	e8 60 f6 ff ff       	call   f610 <memcpy_verw>
    ffb0:	48 83 c4 08          	add    $0x8,%rsp
    ffb4:	44 89 e0             	mov    %r12d,%eax
    ffb7:	5d                   	pop    %rbp
    ffb8:	41 5c                	pop    %r12
    ffba:	c3                   	ret    
    ffbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ffc0:	48 89 f2             	mov    %rsi,%rdx
    ffc3:	31 f6                	xor    %esi,%esi
    ffc5:	e8 36 f7 ff ff       	call   f700 <memset_verw>
    ffca:	48 85 ed             	test   %rbp,%rbp
    ffcd:	74 19                	je     ffe8 <memcpy_verw_s+0x68>
    ffcf:	e8 dc 01 00 00       	call   101b0 <__errno>
    ffd4:	41 bc 22 00 00 00    	mov    $0x22,%r12d
    ffda:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    ffe0:	eb ce                	jmp    ffb0 <memcpy_verw_s+0x30>
    ffe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ffe8:	e8 c3 01 00 00       	call   101b0 <__errno>
    ffed:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    fff3:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    fff9:	eb b5                	jmp    ffb0 <memcpy_verw_s+0x30>

000000000000fffb <_setjmp>:
    fffb:	f3 0f 1e fa          	endbr64 
    ffff:	50                   	push   %rax
   10000:	53                   	push   %rbx
   10001:	51                   	push   %rcx
   10002:	52                   	push   %rdx
   10003:	56                   	push   %rsi
   10004:	57                   	push   %rdi
   10005:	41 50                	push   %r8
   10007:	41 51                	push   %r9
   10009:	41 52                	push   %r10
   1000b:	41 53                	push   %r11
   1000d:	41 54                	push   %r12
   1000f:	41 55                	push   %r13
   10011:	41 56                	push   %r14
   10013:	41 57                	push   %r15
   10015:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   1001c:	e8 1f 8d ff ff       	call   8d40 <sgx_is_within_enclave>
   10021:	83 f8 00             	cmp    $0x0,%eax
   10024:	74 60                	je     10086 <.crash>
   10026:	41 5f                	pop    %r15
   10028:	41 5e                	pop    %r14
   1002a:	41 5d                	pop    %r13
   1002c:	41 5c                	pop    %r12
   1002e:	41 5b                	pop    %r11
   10030:	41 5a                	pop    %r10
   10032:	41 59                	pop    %r9
   10034:	41 58                	pop    %r8
   10036:	5f                   	pop    %rdi
   10037:	5e                   	pop    %rsi
   10038:	5a                   	pop    %rdx
   10039:	59                   	pop    %rcx
   1003a:	5b                   	pop    %rbx
   1003b:	58                   	pop    %rax
   1003c:	4c 8b 1c 24          	mov    (%rsp),%r11
   10040:	48 89 1f             	mov    %rbx,(%rdi)
   10043:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10047:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   1004b:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   1004f:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10053:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10057:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   1005b:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   1005f:	e8 27 12 01 00       	call   2128b <get_stack_guard>
   10064:	48 31 07             	xor    %rax,(%rdi)
   10067:	48 31 47 08          	xor    %rax,0x8(%rdi)
   1006b:	48 31 47 10          	xor    %rax,0x10(%rdi)
   1006f:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10073:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10077:	48 31 47 28          	xor    %rax,0x28(%rdi)
   1007b:	48 31 47 30          	xor    %rax,0x30(%rdi)
   1007f:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10083:	31 c0                	xor    %eax,%eax
   10085:	c3                   	ret    

0000000000010086 <.crash>:
   10086:	0f 0b                	ud2    

0000000000010088 <_longjmp>:
   10088:	f3 0f 1e fa          	endbr64 
   1008c:	50                   	push   %rax
   1008d:	53                   	push   %rbx
   1008e:	51                   	push   %rcx
   1008f:	52                   	push   %rdx
   10090:	56                   	push   %rsi
   10091:	57                   	push   %rdi
   10092:	41 50                	push   %r8
   10094:	41 51                	push   %r9
   10096:	41 52                	push   %r10
   10098:	41 53                	push   %r11
   1009a:	41 54                	push   %r12
   1009c:	41 55                	push   %r13
   1009e:	41 56                	push   %r14
   100a0:	41 57                	push   %r15
   100a2:	57                   	push   %rdi
   100a3:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   100aa:	e8 91 8c ff ff       	call   8d40 <sgx_is_within_enclave>
   100af:	83 f8 00             	cmp    $0x0,%eax
   100b2:	74 d2                	je     10086 <.crash>
   100b4:	5f                   	pop    %rdi
   100b5:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   100b9:	e8 cd 11 01 00       	call   2128b <get_stack_guard>
   100be:	48 31 c2             	xor    %rax,%rdx
   100c1:	52                   	push   %rdx
   100c2:	5f                   	pop    %rdi
   100c3:	e8 f8 a9 ff ff       	call   aac0 <is_valid_sp>
   100c8:	83 f8 00             	cmp    $0x0,%eax
   100cb:	74 b9                	je     10086 <.crash>
   100cd:	41 5f                	pop    %r15
   100cf:	41 5e                	pop    %r14
   100d1:	41 5d                	pop    %r13
   100d3:	41 5c                	pop    %r12
   100d5:	41 5b                	pop    %r11
   100d7:	41 5a                	pop    %r10
   100d9:	41 59                	pop    %r9
   100db:	41 58                	pop    %r8
   100dd:	5f                   	pop    %rdi
   100de:	5e                   	pop    %rsi
   100df:	5a                   	pop    %rdx
   100e0:	59                   	pop    %rcx
   100e1:	5b                   	pop    %rbx
   100e2:	58                   	pop    %rax
   100e3:	89 f0                	mov    %esi,%eax
   100e5:	48 8b 1f             	mov    (%rdi),%rbx
   100e8:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   100ec:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   100f0:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   100f4:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   100f8:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   100fc:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10100:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10104:	50                   	push   %rax
   10105:	e8 81 11 01 00       	call   2128b <get_stack_guard>
   1010a:	48 31 c3             	xor    %rax,%rbx
   1010d:	48 31 c6             	xor    %rax,%rsi
   10110:	49 31 c4             	xor    %rax,%r12
   10113:	49 31 c5             	xor    %rax,%r13
   10116:	49 31 c6             	xor    %rax,%r14
   10119:	49 31 c7             	xor    %rax,%r15
   1011c:	48 31 c2             	xor    %rax,%rdx
   1011f:	48 31 c1             	xor    %rax,%rcx
   10122:	58                   	pop    %rax
   10123:	48 89 f5             	mov    %rsi,%rbp
   10126:	48 89 0a             	mov    %rcx,(%rdx)
   10129:	48 89 d4             	mov    %rdx,%rsp
   1012c:	85 c0                	test   %eax,%eax
   1012e:	75 02                	jne    10132 <_longjmp+0xaa>
   10130:	ff c0                	inc    %eax
   10132:	c3                   	ret    
   10133:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1013a:	00 00 00 
   1013d:	0f 1f 00             	nopl   (%rax)

0000000000010140 <rsrv_mem_init>:
   10140:	f3 0f 1e fa          	endbr64 
   10144:	48 85 ff             	test   %rdi,%rdi
   10147:	74 4f                	je     10198 <rsrv_mem_init+0x58>
   10149:	48 89 f0             	mov    %rsi,%rax
   1014c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   10152:	48 09 d0             	or     %rdx,%rax
   10155:	48 09 f8             	or     %rdi,%rax
   10158:	a9 ff 0f 00 00       	test   $0xfff,%eax
   1015d:	74 09                	je     10168 <rsrv_mem_init+0x28>
   1015f:	44 89 c0             	mov    %r8d,%eax
   10162:	c3                   	ret    
   10163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10168:	48 8b 05 e9 bb 01 00 	mov    0x1bbe9(%rip),%rax        # 2bd58 <rsrv_mem_base>
   1016f:	48 f7 d0             	not    %rax
   10172:	48 39 f0             	cmp    %rsi,%rax
   10175:	72 e8                	jb     1015f <rsrv_mem_init+0x1f>
   10177:	45 31 c0             	xor    %r8d,%r8d
   1017a:	48 89 3d d7 bb 01 00 	mov    %rdi,0x1bbd7(%rip)        # 2bd58 <rsrv_mem_base>
   10181:	48 89 35 c8 bb 01 00 	mov    %rsi,0x1bbc8(%rip)        # 2bd50 <rsrv_mem_size>
   10188:	44 89 c0             	mov    %r8d,%eax
   1018b:	48 89 15 b6 bb 01 00 	mov    %rdx,0x1bbb6(%rip)        # 2bd48 <rsrv_mem_min_size>
   10192:	c3                   	ret    
   10193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10198:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1019e:	44 89 c0             	mov    %r8d,%eax
   101a1:	c3                   	ret    
   101a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   101a9:	00 00 00 
   101ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000101b0 <__errno>:
   101b0:	f3 0f 1e fa          	endbr64 
   101b4:	e9 57 a8 ff ff       	jmp    aa10 <get_errno_addr>
   101b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000101c0 <isalpha>:
   101c0:	f3 0f 1e fa          	endbr64 
   101c4:	31 c0                	xor    %eax,%eax
   101c6:	83 ff ff             	cmp    $0xffffffff,%edi
   101c9:	74 13                	je     101de <isalpha+0x1e>
   101cb:	48 8b 05 66 c0 01 00 	mov    0x1c066(%rip),%rax        # 2c238 <_ctype_>
   101d2:	40 0f b6 ff          	movzbl %dil,%edi
   101d6:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
   101db:	83 e0 03             	and    $0x3,%eax
   101de:	c3                   	ret    
   101df:	90                   	nop

00000000000101e0 <isdigit>:
   101e0:	f3 0f 1e fa          	endbr64 
   101e4:	31 c0                	xor    %eax,%eax
   101e6:	83 ff ff             	cmp    $0xffffffff,%edi
   101e9:	74 16                	je     10201 <isdigit+0x21>
   101eb:	48 8b 05 46 c0 01 00 	mov    0x1c046(%rip),%rax        # 2c238 <_ctype_>
   101f2:	40 0f b6 ff          	movzbl %dil,%edi
   101f6:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
   101fb:	83 e0 04             	and    $0x4,%eax
   101fe:	0f be c0             	movsbl %al,%eax
   10201:	c3                   	ret    
   10202:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10209:	00 00 00 
   1020c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010210 <isspace>:
   10210:	f3 0f 1e fa          	endbr64 
   10214:	31 c0                	xor    %eax,%eax
   10216:	83 ff ff             	cmp    $0xffffffff,%edi
   10219:	74 16                	je     10231 <isspace+0x21>
   1021b:	48 8b 05 16 c0 01 00 	mov    0x1c016(%rip),%rax        # 2c238 <_ctype_>
   10222:	40 0f b6 ff          	movzbl %dil,%edi
   10226:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
   1022b:	83 e0 08             	and    $0x8,%eax
   1022e:	0f be c0             	movsbl %al,%eax
   10231:	c3                   	ret    
   10232:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10239:	00 00 00 
   1023c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010240 <isupper>:
   10240:	f3 0f 1e fa          	endbr64 
   10244:	31 c0                	xor    %eax,%eax
   10246:	83 ff ff             	cmp    $0xffffffff,%edi
   10249:	74 13                	je     1025e <isupper+0x1e>
   1024b:	48 8b 05 e6 bf 01 00 	mov    0x1bfe6(%rip),%rax        # 2c238 <_ctype_>
   10252:	40 0f b6 ff          	movzbl %dil,%edi
   10256:	0f b6 44 38 01       	movzbl 0x1(%rax,%rdi,1),%eax
   1025b:	83 e0 01             	and    $0x1,%eax
   1025e:	c3                   	ret    
   1025f:	90                   	nop

0000000000010260 <__grow_type_table>:
   10260:	41 56                	push   %r14
   10262:	ba 00 10 00 00       	mov    $0x1000,%edx
   10267:	41 55                	push   %r13
   10269:	49 89 fd             	mov    %rdi,%r13
   1026c:	41 54                	push   %r12
   1026e:	49 89 f4             	mov    %rsi,%r12
   10271:	55                   	push   %rbp
   10272:	53                   	push   %rbx
   10273:	8b 06                	mov    (%rsi),%eax
   10275:	8d 2c 00             	lea    (%rax,%rax,1),%ebp
   10278:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
   1027e:	0f 4c ea             	cmovl  %edx,%ebp
   10281:	48 63 fd             	movslq %ebp,%rdi
   10284:	83 f8 08             	cmp    $0x8,%eax
   10287:	74 57                	je     102e0 <__grow_type_table+0x80>
   10289:	e8 e2 c2 ff ff       	call   c570 <dlmalloc>
   1028e:	48 89 c3             	mov    %rax,%rbx
   10291:	48 85 c0             	test   %rax,%rax
   10294:	74 71                	je     10307 <__grow_type_table+0xa7>
   10296:	49 63 14 24          	movslq (%r12),%rdx
   1029a:	49 8b 75 00          	mov    0x0(%r13),%rsi
   1029e:	48 89 c7             	mov    %rax,%rdi
   102a1:	e8 ea 45 00 00       	call   14890 <memmove>
   102a6:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   102aa:	e8 31 dd ff ff       	call   dfe0 <dlfree>
   102af:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   102b3:	49 63 3c 24          	movslq (%r12),%rdi
   102b7:	89 ea                	mov    %ebp,%edx
   102b9:	31 f6                	xor    %esi,%esi
   102bb:	29 fa                	sub    %edi,%edx
   102bd:	48 01 df             	add    %rbx,%rdi
   102c0:	48 63 d2             	movslq %edx,%rdx
   102c3:	e8 38 f5 ff ff       	call   f800 <memset>
   102c8:	41 89 2c 24          	mov    %ebp,(%r12)
   102cc:	31 c0                	xor    %eax,%eax
   102ce:	5b                   	pop    %rbx
   102cf:	5d                   	pop    %rbp
   102d0:	41 5c                	pop    %r12
   102d2:	41 5d                	pop    %r13
   102d4:	41 5e                	pop    %r14
   102d6:	c3                   	ret    
   102d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   102de:	00 00 
   102e0:	4d 8b 75 00          	mov    0x0(%r13),%r14
   102e4:	e8 87 c2 ff ff       	call   c570 <dlmalloc>
   102e9:	49 89 45 00          	mov    %rax,0x0(%r13)
   102ed:	48 89 c7             	mov    %rax,%rdi
   102f0:	48 85 c0             	test   %rax,%rax
   102f3:	74 12                	je     10307 <__grow_type_table+0xa7>
   102f5:	49 63 14 24          	movslq (%r12),%rdx
   102f9:	4c 89 f6             	mov    %r14,%rsi
   102fc:	e8 8f 45 00 00       	call   14890 <memmove>
   10301:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   10305:	eb ac                	jmp    102b3 <__grow_type_table+0x53>
   10307:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1030c:	eb c0                	jmp    102ce <__grow_type_table+0x6e>
   1030e:	66 90                	xchg   %ax,%ax

0000000000010310 <__find_arguments>:
   10310:	41 57                	push   %r15
   10312:	49 89 ff             	mov    %rdi,%r15
   10315:	41 56                	push   %r14
   10317:	4c 8d 35 46 26 01 00 	lea    0x12646(%rip),%r14        # 22964 <_ZZ17ecall_malloc_freeE8__func__+0x134>
   1031e:	41 55                	push   %r13
   10320:	45 31 ed             	xor    %r13d,%r13d
   10323:	41 54                	push   %r12
   10325:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1032b:	55                   	push   %rbp
   1032c:	53                   	push   %rbx
   1032d:	48 83 ec 68          	sub    $0x68,%rsp
   10331:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   10336:	48 8d 5c 24 48       	lea    0x48(%rsp),%rbx
   1033b:	31 f6                	xor    %esi,%esi
   1033d:	48 8d 6c 24 3c       	lea    0x3c(%rsp),%rbp
   10342:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10347:	ba 08 00 00 00       	mov    $0x8,%edx
   1034c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   10351:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10358:	00 00 
   1035a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1035f:	31 c0                	xor    %eax,%eax
   10361:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   10366:	c7 44 24 38 08 00 00 	movl   $0x8,0x38(%rsp)
   1036d:	00 
   1036e:	48 89 c7             	mov    %rax,%rdi
   10371:	48 89 04 24          	mov    %rax,(%rsp)
   10375:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1037a:	e8 81 f4 ff ff       	call   f800 <memset>
   1037f:	ba 08 00 00 00       	mov    $0x8,%edx
   10384:	31 f6                	xor    %esi,%esi
   10386:	48 89 df             	mov    %rbx,%rdi
   10389:	e8 72 f4 ff ff       	call   f800 <memset>
   1038e:	eb 0c                	jmp    1039c <__find_arguments+0x8c>
   10390:	48 98                	cltq   
   10392:	49 01 c7             	add    %rax,%r15
   10395:	83 7c 24 3c 25       	cmpl   $0x25,0x3c(%rsp)
   1039a:	74 74                	je     10410 <__find_arguments+0x100>
   1039c:	48 89 d9             	mov    %rbx,%rcx
   1039f:	ba 01 00 00 00       	mov    $0x1,%edx
   103a4:	4c 89 fe             	mov    %r15,%rsi
   103a7:	48 89 ef             	mov    %rbp,%rdi
   103aa:	e8 01 71 00 00       	call   174b0 <mbrtowc>
   103af:	85 c0                	test   %eax,%eax
   103b1:	7f dd                	jg     10390 <__find_arguments+0x80>
   103b3:	41 83 fd 07          	cmp    $0x7,%r13d
   103b7:	0f 8f 33 09 00 00    	jg     10cf0 <__find_arguments+0x9e0>
   103bd:	45 85 ed             	test   %r13d,%r13d
   103c0:	0f 84 8b 0b 00 00    	je     10f51 <__find_arguments+0xc41>
   103c6:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   103cb:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   103d0:	ba 01 00 00 00       	mov    $0x1,%edx
   103d5:	48 8d 0d 14 25 01 00 	lea    0x12514(%rip),%rcx        # 228f0 <_ZZ17ecall_malloc_freeE8__func__+0xc0>
   103dc:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   103e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   103e8:	48 63 c2             	movslq %edx,%rax
   103eb:	80 3c 07 1c          	cmpb   $0x1c,(%rdi,%rax,1)
   103ef:	0f 87 bc 05 00 00    	ja     109b1 <__find_arguments+0x6a1>
   103f5:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
   103fa:	48 c1 e0 04          	shl    $0x4,%rax
   103fe:	49 03 00             	add    (%r8),%rax
   10401:	4e 63 0c 89          	movslq (%rcx,%r9,4),%r9
   10405:	49 01 c9             	add    %rcx,%r9
   10408:	3e 41 ff e1          	notrack jmp *%r9
   1040c:	0f 1f 40 00          	nopl   0x0(%rax)
   10410:	41 0f be 07          	movsbl (%r15),%eax
   10414:	31 c9                	xor    %ecx,%ecx
   10416:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1041c:	49 83 c7 01          	add    $0x1,%r15
   10420:	8d 50 e0             	lea    -0x20(%rax),%edx
   10423:	83 fa 5a             	cmp    $0x5a,%edx
   10426:	0f 87 64 01 00 00    	ja     10590 <__find_arguments+0x280>
   1042c:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
   10430:	4c 01 f2             	add    %r14,%rdx
   10433:	3e ff e2             	notrack jmp *%rdx
   10436:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1043d:	00 00 00 
   10440:	31 f6                	xor    %esi,%esi
   10442:	eb 07                	jmp    1044b <__find_arguments+0x13b>
   10444:	0f 1f 40 00          	nopl   0x0(%rax)
   10448:	49 89 d7             	mov    %rdx,%r15
   1044b:	8d 14 b6             	lea    (%rsi,%rsi,4),%edx
   1044e:	44 89 c6             	mov    %r8d,%esi
   10451:	01 d2                	add    %edx,%edx
   10453:	29 c6                	sub    %eax,%esi
   10455:	39 d6                	cmp    %edx,%esi
   10457:	7c 27                	jl     10480 <__find_arguments+0x170>
   10459:	8d 74 10 d0          	lea    -0x30(%rax,%rdx,1),%esi
   1045d:	41 0f be 07          	movsbl (%r15),%eax
   10461:	49 8d 57 01          	lea    0x1(%r15),%rdx
   10465:	8d 78 d0             	lea    -0x30(%rax),%edi
   10468:	83 ff 09             	cmp    $0x9,%edi
   1046b:	0f 87 3f 08 00 00    	ja     10cb0 <__find_arguments+0x9a0>
   10471:	81 fe cc cc cc 0c    	cmp    $0xccccccc,%esi
   10477:	7e cf                	jle    10448 <__find_arguments+0x138>
   10479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10480:	e8 2b fd ff ff       	call   101b0 <__errno>
   10485:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1048a:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   10490:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   10496:	48 3b 3c 24          	cmp    (%rsp),%rdi
   1049a:	74 0a                	je     104a6 <__find_arguments+0x196>
   1049c:	48 85 ff             	test   %rdi,%rdi
   1049f:	74 05                	je     104a6 <__find_arguments+0x196>
   104a1:	e8 3a db ff ff       	call   dfe0 <dlfree>
   104a6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   104ab:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   104b2:	00 00 
   104b4:	0f 85 23 0c 00 00    	jne    110dd <__find_arguments+0xdcd>
   104ba:	48 83 c4 68          	add    $0x68,%rsp
   104be:	44 89 e0             	mov    %r12d,%eax
   104c1:	5b                   	pop    %rbx
   104c2:	5d                   	pop    %rbp
   104c3:	41 5c                	pop    %r12
   104c5:	41 5d                	pop    %r13
   104c7:	41 5e                	pop    %r14
   104c9:	41 5f                	pop    %r15
   104cb:	c3                   	ret    
   104cc:	0f 1f 40 00          	nopl   0x0(%rax)
   104d0:	41 0f be 07          	movsbl (%r15),%eax
   104d4:	e9 43 ff ff ff       	jmp    1041c <__find_arguments+0x10c>
   104d9:	83 c9 10             	or     $0x10,%ecx
   104dc:	45 39 e5             	cmp    %r12d,%r13d
   104df:	8b 44 24 38          	mov    0x38(%rsp),%eax
   104e3:	45 0f 4c ec          	cmovl  %r12d,%r13d
   104e7:	f6 c5 10             	test   $0x10,%ch
   104ea:	74 54                	je     10540 <__find_arguments+0x230>
   104ec:	41 39 c4             	cmp    %eax,%r12d
   104ef:	0f 8d 4e 04 00 00    	jge    10943 <__find_arguments+0x633>
   104f5:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   104fa:	49 63 c4             	movslq %r12d,%rax
   104fd:	41 83 c4 01          	add    $0x1,%r12d
   10501:	c6 04 02 17          	movb   $0x17,(%rdx,%rax,1)
   10505:	e9 92 fe ff ff       	jmp    1039c <__find_arguments+0x8c>
   1050a:	83 c9 10             	or     $0x10,%ecx
   1050d:	45 39 e5             	cmp    %r12d,%r13d
   10510:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10514:	45 0f 4c ec          	cmovl  %r12d,%r13d
   10518:	f6 c5 10             	test   $0x10,%ch
   1051b:	0f 84 d6 00 00 00    	je     105f7 <__find_arguments+0x2e7>
   10521:	41 39 c4             	cmp    %eax,%r12d
   10524:	0f 8d a6 06 00 00    	jge    10bd0 <__find_arguments+0x8c0>
   1052a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1052f:	49 63 c4             	movslq %r12d,%rax
   10532:	41 83 c4 01          	add    $0x1,%r12d
   10536:	c6 04 02 16          	movb   $0x16,(%rdx,%rax,1)
   1053a:	e9 5d fe ff ff       	jmp    1039c <__find_arguments+0x8c>
   1053f:	90                   	nop
   10540:	f6 c5 02             	test   $0x2,%ch
   10543:	75 2b                	jne    10570 <__find_arguments+0x260>
   10545:	f6 c5 04             	test   $0x4,%ch
   10548:	0f 84 12 04 00 00    	je     10960 <__find_arguments+0x650>
   1054e:	41 39 c4             	cmp    %eax,%r12d
   10551:	0f 8d 91 05 00 00    	jge    10ae8 <__find_arguments+0x7d8>
   10557:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1055c:	49 63 c4             	movslq %r12d,%rax
   1055f:	41 83 c4 01          	add    $0x1,%r12d
   10563:	c6 04 02 13          	movb   $0x13,(%rdx,%rax,1)
   10567:	e9 30 fe ff ff       	jmp    1039c <__find_arguments+0x8c>
   1056c:	0f 1f 40 00          	nopl   0x0(%rax)
   10570:	41 39 c4             	cmp    %eax,%r12d
   10573:	0f 8d ae 00 00 00    	jge    10627 <__find_arguments+0x317>
   10579:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1057e:	49 63 c4             	movslq %r12d,%rax
   10581:	41 83 c4 01          	add    $0x1,%r12d
   10585:	c6 04 02 11          	movb   $0x11,(%rdx,%rax,1)
   10589:	e9 0e fe ff ff       	jmp    1039c <__find_arguments+0x8c>
   1058e:	66 90                	xchg   %ax,%ax
   10590:	85 c0                	test   %eax,%eax
   10592:	0f 85 04 fe ff ff    	jne    1039c <__find_arguments+0x8c>
   10598:	e9 16 fe ff ff       	jmp    103b3 <__find_arguments+0xa3>
   1059d:	0f 1f 00             	nopl   (%rax)
   105a0:	45 39 e5             	cmp    %r12d,%r13d
   105a3:	8b 44 24 38          	mov    0x38(%rsp),%eax
   105a7:	45 0f 4c ec          	cmovl  %r12d,%r13d
   105ab:	83 e1 08             	and    $0x8,%ecx
   105ae:	74 29                	je     105d9 <__find_arguments+0x2c9>
   105b0:	41 39 c4             	cmp    %eax,%r12d
   105b3:	0f 8d a7 04 00 00    	jge    10a60 <__find_arguments+0x750>
   105b9:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   105be:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   105c3:	4d 63 e4             	movslq %r12d,%r12
   105c6:	41 39 d5             	cmp    %edx,%r13d
   105c9:	42 c6 04 20 0e       	movb   $0xe,(%rax,%r12,1)
   105ce:	44 0f 4c ea          	cmovl  %edx,%r13d
   105d2:	8b 44 24 38          	mov    0x38(%rsp),%eax
   105d6:	41 89 d4             	mov    %edx,%r12d
   105d9:	44 39 e0             	cmp    %r12d,%eax
   105dc:	0f 8e 90 06 00 00    	jle    10c72 <__find_arguments+0x962>
   105e2:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   105e7:	49 63 c4             	movslq %r12d,%rax
   105ea:	41 83 c4 01          	add    $0x1,%r12d
   105ee:	c6 04 02 0d          	movb   $0xd,(%rdx,%rax,1)
   105f2:	e9 a5 fd ff ff       	jmp    1039c <__find_arguments+0x8c>
   105f7:	f6 c5 02             	test   $0x2,%ch
   105fa:	0f 85 70 ff ff ff    	jne    10570 <__find_arguments+0x260>
   10600:	f6 c5 04             	test   $0x4,%ch
   10603:	0f 84 df 03 00 00    	je     109e8 <__find_arguments+0x6d8>
   10609:	41 39 c4             	cmp    %eax,%r12d
   1060c:	0f 8d de 08 00 00    	jge    10ef0 <__find_arguments+0xbe0>
   10612:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10617:	49 63 c4             	movslq %r12d,%rax
   1061a:	41 83 c4 01          	add    $0x1,%r12d
   1061e:	c6 04 02 14          	movb   $0x14,(%rdx,%rax,1)
   10622:	e9 75 fd ff ff       	jmp    1039c <__find_arguments+0x8c>
   10627:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1062c:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10631:	e8 2a fc ff ff       	call   10260 <__grow_type_table>
   10636:	83 f8 ff             	cmp    $0xffffffff,%eax
   10639:	0f 84 41 fe ff ff    	je     10480 <__find_arguments+0x170>
   1063f:	e9 35 ff ff ff       	jmp    10579 <__find_arguments+0x269>
   10644:	0f 1f 40 00          	nopl   0x0(%rax)
   10648:	41 0f be 07          	movsbl (%r15),%eax
   1064c:	49 8d 57 01          	lea    0x1(%r15),%rdx
   10650:	83 f8 2a             	cmp    $0x2a,%eax
   10653:	75 12                	jne    10667 <__find_arguments+0x357>
   10655:	e9 1f 09 00 00       	jmp    10f79 <__find_arguments+0xc69>
   1065a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10660:	0f be 02             	movsbl (%rdx),%eax
   10663:	48 83 c2 01          	add    $0x1,%rdx
   10667:	8d 70 d0             	lea    -0x30(%rax),%esi
   1066a:	83 fe 09             	cmp    $0x9,%esi
   1066d:	76 f1                	jbe    10660 <__find_arguments+0x350>
   1066f:	49 89 d7             	mov    %rdx,%r15
   10672:	e9 a9 fd ff ff       	jmp    10420 <__find_arguments+0x110>
   10677:	45 39 e5             	cmp    %r12d,%r13d
   1067a:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1067e:	45 0f 4c ec          	cmovl  %r12d,%r13d
   10682:	83 e1 10             	and    $0x10,%ecx
   10685:	74 29                	je     106b0 <__find_arguments+0x3a0>
   10687:	41 39 c4             	cmp    %eax,%r12d
   1068a:	0f 8d 38 04 00 00    	jge    10ac8 <__find_arguments+0x7b8>
   10690:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   10695:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1069a:	4d 63 e4             	movslq %r12d,%r12
   1069d:	41 39 d5             	cmp    %edx,%r13d
   106a0:	42 c6 04 20 1b       	movb   $0x1b,(%rax,%r12,1)
   106a5:	44 0f 4c ea          	cmovl  %edx,%r13d
   106a9:	8b 44 24 38          	mov    0x38(%rsp),%eax
   106ad:	41 89 d4             	mov    %edx,%r12d
   106b0:	44 39 e0             	cmp    %r12d,%eax
   106b3:	0f 8e 75 05 00 00    	jle    10c2e <__find_arguments+0x91e>
   106b9:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   106be:	49 63 c4             	movslq %r12d,%rax
   106c1:	41 83 c4 01          	add    $0x1,%r12d
   106c5:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
   106c9:	e9 ce fc ff ff       	jmp    1039c <__find_arguments+0x8c>
   106ce:	41 0f be 07          	movsbl (%r15),%eax
   106d2:	80 cd 02             	or     $0x2,%ch
   106d5:	e9 42 fd ff ff       	jmp    1041c <__find_arguments+0x10c>
   106da:	41 0f be 07          	movsbl (%r15),%eax
   106de:	83 c9 08             	or     $0x8,%ecx
   106e1:	e9 36 fd ff ff       	jmp    1041c <__find_arguments+0x10c>
   106e6:	41 0f be 17          	movsbl (%r15),%edx
   106ea:	4d 89 f9             	mov    %r15,%r9
   106ed:	45 31 d2             	xor    %r10d,%r10d
   106f0:	8d 72 d0             	lea    -0x30(%rdx),%esi
   106f3:	89 d0                	mov    %edx,%eax
   106f5:	83 fe 09             	cmp    $0x9,%esi
   106f8:	76 2e                	jbe    10728 <__find_arguments+0x418>
   106fa:	e9 f1 04 00 00       	jmp    10bf0 <__find_arguments+0x8e0>
   106ff:	90                   	nop
   10700:	49 83 c1 01          	add    $0x1,%r9
   10704:	44 8d 54 02 d0       	lea    -0x30(%rdx,%rax,1),%r10d
   10709:	41 0f be 11          	movsbl (%r9),%edx
   1070d:	8d 72 d0             	lea    -0x30(%rdx),%esi
   10710:	89 d0                	mov    %edx,%eax
   10712:	83 fe 09             	cmp    $0x9,%esi
   10715:	0f 87 d5 04 00 00    	ja     10bf0 <__find_arguments+0x8e0>
   1071b:	41 81 fa cc cc cc 0c 	cmp    $0xccccccc,%r10d
   10722:	0f 8f 58 fd ff ff    	jg     10480 <__find_arguments+0x170>
   10728:	43 8d 04 92          	lea    (%r10,%r10,4),%eax
   1072c:	44 89 c6             	mov    %r8d,%esi
   1072f:	01 c0                	add    %eax,%eax
   10731:	29 d6                	sub    %edx,%esi
   10733:	39 c6                	cmp    %eax,%esi
   10735:	7d c9                	jge    10700 <__find_arguments+0x3f0>
   10737:	e9 44 fd ff ff       	jmp    10480 <__find_arguments+0x170>
   1073c:	45 39 e5             	cmp    %r12d,%r13d
   1073f:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10743:	45 0f 4c ec          	cmovl  %r12d,%r13d
   10747:	83 e1 10             	and    $0x10,%ecx
   1074a:	74 29                	je     10775 <__find_arguments+0x465>
   1074c:	41 39 c4             	cmp    %eax,%r12d
   1074f:	0f 8d 53 03 00 00    	jge    10aa8 <__find_arguments+0x798>
   10755:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   1075a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1075f:	4d 63 e4             	movslq %r12d,%r12
   10762:	41 39 d5             	cmp    %edx,%r13d
   10765:	42 c6 04 20 1c       	movb   $0x1c,(%rax,%r12,1)
   1076a:	44 0f 4c ea          	cmovl  %edx,%r13d
   1076e:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10772:	41 89 d4             	mov    %edx,%r12d
   10775:	44 39 e0             	cmp    %r12d,%eax
   10778:	0f 8e 12 05 00 00    	jle    10c90 <__find_arguments+0x980>
   1077e:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10783:	49 63 c4             	movslq %r12d,%rax
   10786:	41 83 c4 01          	add    $0x1,%r12d
   1078a:	c6 04 02 0f          	movb   $0xf,(%rdx,%rax,1)
   1078e:	e9 09 fc ff ff       	jmp    1039c <__find_arguments+0x8c>
   10793:	41 0f be 07          	movsbl (%r15),%eax
   10797:	83 c9 20             	or     $0x20,%ecx
   1079a:	e9 7d fc ff ff       	jmp    1041c <__find_arguments+0x10c>
   1079f:	44 39 64 24 38       	cmp    %r12d,0x38(%rsp)
   107a4:	0f 8e 07 04 00 00    	jle    10bb1 <__find_arguments+0x8a1>
   107aa:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   107af:	45 39 e5             	cmp    %r12d,%r13d
   107b2:	49 63 c4             	movslq %r12d,%rax
   107b5:	45 0f 4c ec          	cmovl  %r12d,%r13d
   107b9:	41 83 c4 01          	add    $0x1,%r12d
   107bd:	c6 04 02 10          	movb   $0x10,(%rdx,%rax,1)
   107c1:	e9 d6 fb ff ff       	jmp    1039c <__find_arguments+0x8c>
   107c6:	41 0f be 07          	movsbl (%r15),%eax
   107ca:	80 cd 04             	or     $0x4,%ch
   107cd:	e9 4a fc ff ff       	jmp    1041c <__find_arguments+0x10c>
   107d2:	45 39 e5             	cmp    %r12d,%r13d
   107d5:	8b 44 24 38          	mov    0x38(%rsp),%eax
   107d9:	45 0f 4c ec          	cmovl  %r12d,%r13d
   107dd:	f6 c1 20             	test   $0x20,%cl
   107e0:	74 29                	je     1080b <__find_arguments+0x4fb>
   107e2:	41 39 c4             	cmp    %eax,%r12d
   107e5:	0f 8d 95 02 00 00    	jge    10a80 <__find_arguments+0x770>
   107eb:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   107f0:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   107f5:	4d 63 e4             	movslq %r12d,%r12
   107f8:	41 39 d5             	cmp    %edx,%r13d
   107fb:	42 c6 04 20 0c       	movb   $0xc,(%rax,%r12,1)
   10800:	44 0f 4c ea          	cmovl  %edx,%r13d
   10804:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10808:	41 89 d4             	mov    %edx,%r12d
   1080b:	f6 c1 10             	test   $0x10,%cl
   1080e:	74 29                	je     10839 <__find_arguments+0x529>
   10810:	44 39 e0             	cmp    %r12d,%eax
   10813:	0f 8e 1d 02 00 00    	jle    10a36 <__find_arguments+0x726>
   10819:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   1081e:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10823:	4d 63 e4             	movslq %r12d,%r12
   10826:	41 39 d5             	cmp    %edx,%r13d
   10829:	42 c6 04 20 09       	movb   $0x9,(%rax,%r12,1)
   1082e:	44 0f 4c ea          	cmovl  %edx,%r13d
   10832:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10836:	41 89 d4             	mov    %edx,%r12d
   10839:	f6 c1 40             	test   $0x40,%cl
   1083c:	74 29                	je     10867 <__find_arguments+0x557>
   1083e:	44 39 e0             	cmp    %r12d,%eax
   10841:	0f 8e c1 02 00 00    	jle    10b08 <__find_arguments+0x7f8>
   10847:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   1084c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10851:	4d 63 e4             	movslq %r12d,%r12
   10854:	41 39 d5             	cmp    %edx,%r13d
   10857:	42 c6 04 20 03       	movb   $0x3,(%rax,%r12,1)
   1085c:	44 0f 4c ea          	cmovl  %edx,%r13d
   10860:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10864:	41 89 d4             	mov    %edx,%r12d
   10867:	f6 c5 02             	test   $0x2,%ch
   1086a:	74 29                	je     10895 <__find_arguments+0x585>
   1086c:	44 39 e0             	cmp    %r12d,%eax
   1086f:	0f 8e bb 02 00 00    	jle    10b30 <__find_arguments+0x820>
   10875:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   1087a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1087f:	4d 63 e4             	movslq %r12d,%r12
   10882:	41 39 d5             	cmp    %edx,%r13d
   10885:	42 c6 04 20 12       	movb   $0x12,(%rax,%r12,1)
   1088a:	44 0f 4c ea          	cmovl  %edx,%r13d
   1088e:	8b 44 24 38          	mov    0x38(%rsp),%eax
   10892:	41 89 d4             	mov    %edx,%r12d
   10895:	f6 c5 04             	test   $0x4,%ch
   10898:	74 29                	je     108c3 <__find_arguments+0x5b3>
   1089a:	44 39 e0             	cmp    %r12d,%eax
   1089d:	0f 8e d5 02 00 00    	jle    10b78 <__find_arguments+0x868>
   108a3:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   108a8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   108ad:	4d 63 e4             	movslq %r12d,%r12
   108b0:	41 39 d5             	cmp    %edx,%r13d
   108b3:	42 c6 04 20 15       	movb   $0x15,(%rax,%r12,1)
   108b8:	44 0f 4c ea          	cmovl  %edx,%r13d
   108bc:	8b 44 24 38          	mov    0x38(%rsp),%eax
   108c0:	41 89 d4             	mov    %edx,%r12d
   108c3:	80 e5 10             	and    $0x10,%ch
   108c6:	74 29                	je     108f1 <__find_arguments+0x5e1>
   108c8:	44 39 e0             	cmp    %r12d,%eax
   108cb:	0f 8e 87 02 00 00    	jle    10b58 <__find_arguments+0x848>
   108d1:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   108d6:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   108db:	4d 63 e4             	movslq %r12d,%r12
   108de:	41 39 d5             	cmp    %edx,%r13d
   108e1:	42 c6 04 20 18       	movb   $0x18,(%rax,%r12,1)
   108e6:	44 0f 4c ea          	cmovl  %edx,%r13d
   108ea:	8b 44 24 38          	mov    0x38(%rsp),%eax
   108ee:	41 89 d4             	mov    %edx,%r12d
   108f1:	44 39 e0             	cmp    %r12d,%eax
   108f4:	0f 8e d6 03 00 00    	jle    10cd0 <__find_arguments+0x9c0>
   108fa:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   108ff:	49 63 c4             	movslq %r12d,%rax
   10902:	41 83 c4 01          	add    $0x1,%r12d
   10906:	c6 04 02 06          	movb   $0x6,(%rdx,%rax,1)
   1090a:	e9 8d fa ff ff       	jmp    1039c <__find_arguments+0x8c>
   1090f:	41 0f be 07          	movsbl (%r15),%eax
   10913:	3c 6c                	cmp    $0x6c,%al
   10915:	0f 84 46 03 00 00    	je     10c61 <__find_arguments+0x951>
   1091b:	83 c9 10             	or     $0x10,%ecx
   1091e:	e9 f9 fa ff ff       	jmp    1041c <__find_arguments+0x10c>
   10923:	41 0f be 07          	movsbl (%r15),%eax
   10927:	80 cd 10             	or     $0x10,%ch
   1092a:	e9 ed fa ff ff       	jmp    1041c <__find_arguments+0x10c>
   1092f:	41 0f be 07          	movsbl (%r15),%eax
   10933:	3c 68                	cmp    $0x68,%al
   10935:	0f 84 15 03 00 00    	je     10c50 <__find_arguments+0x940>
   1093b:	83 c9 40             	or     $0x40,%ecx
   1093e:	e9 d9 fa ff ff       	jmp    1041c <__find_arguments+0x10c>
   10943:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10948:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1094d:	e8 0e f9 ff ff       	call   10260 <__grow_type_table>
   10952:	83 f8 ff             	cmp    $0xffffffff,%eax
   10955:	0f 84 25 fb ff ff    	je     10480 <__find_arguments+0x170>
   1095b:	e9 95 fb ff ff       	jmp    104f5 <__find_arguments+0x1e5>
   10960:	f6 c1 20             	test   $0x20,%cl
   10963:	0f 84 a6 00 00 00    	je     10a0f <__find_arguments+0x6ff>
   10969:	41 39 c4             	cmp    %eax,%r12d
   1096c:	0f 8d 5e 05 00 00    	jge    10ed0 <__find_arguments+0xbc0>
   10972:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10977:	49 63 c4             	movslq %r12d,%rax
   1097a:	41 83 c4 01          	add    $0x1,%r12d
   1097e:	c6 04 02 0b          	movb   $0xb,(%rdx,%rax,1)
   10982:	e9 15 fa ff ff       	jmp    1039c <__find_arguments+0x8c>
   10987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1098e:	00 00 
   10990:	44 8b 16             	mov    (%rsi),%r10d
   10993:	41 83 fa 2f          	cmp    $0x2f,%r10d
   10997:	0f 87 03 02 00 00    	ja     10ba0 <__find_arguments+0x890>
   1099d:	45 89 d1             	mov    %r10d,%r9d
   109a0:	41 83 c2 08          	add    $0x8,%r10d
   109a4:	4c 03 4e 10          	add    0x10(%rsi),%r9
   109a8:	44 89 16             	mov    %r10d,(%rsi)
   109ab:	4d 8b 09             	mov    (%r9),%r9
   109ae:	4c 89 08             	mov    %r9,(%rax)
   109b1:	83 c2 01             	add    $0x1,%edx
   109b4:	41 39 d5             	cmp    %edx,%r13d
   109b7:	0f 8d 2b fa ff ff    	jge    103e8 <__find_arguments+0xd8>
   109bd:	45 31 e4             	xor    %r12d,%r12d
   109c0:	e9 d1 fa ff ff       	jmp    10496 <__find_arguments+0x186>
   109c5:	44 8b 16             	mov    (%rsi),%r10d
   109c8:	41 83 fa 2f          	cmp    $0x2f,%r10d
   109cc:	0f 87 4e 03 00 00    	ja     10d20 <__find_arguments+0xa10>
   109d2:	45 89 d1             	mov    %r10d,%r9d
   109d5:	41 83 c2 08          	add    $0x8,%r10d
   109d9:	4c 03 4e 10          	add    0x10(%rsi),%r9
   109dd:	44 89 16             	mov    %r10d,(%rsi)
   109e0:	45 8b 09             	mov    (%r9),%r9d
   109e3:	44 89 08             	mov    %r9d,(%rax)
   109e6:	eb c9                	jmp    109b1 <__find_arguments+0x6a1>
   109e8:	f6 c1 20             	test   $0x20,%cl
   109eb:	0f 84 40 03 00 00    	je     10d31 <__find_arguments+0xa21>
   109f1:	41 39 c4             	cmp    %eax,%r12d
   109f4:	0f 8d 6e 04 00 00    	jge    10e68 <__find_arguments+0xb58>
   109fa:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   109ff:	49 63 c4             	movslq %r12d,%rax
   10a02:	41 83 c4 01          	add    $0x1,%r12d
   10a06:	c6 04 02 0a          	movb   $0xa,(%rdx,%rax,1)
   10a0a:	e9 8d f9 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10a0f:	f6 c1 10             	test   $0x10,%cl
   10a12:	0f 84 49 03 00 00    	je     10d61 <__find_arguments+0xa51>
   10a18:	41 39 c4             	cmp    %eax,%r12d
   10a1b:	0f 8d 23 04 00 00    	jge    10e44 <__find_arguments+0xb34>
   10a21:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10a26:	49 63 c4             	movslq %r12d,%rax
   10a29:	41 83 c4 01          	add    $0x1,%r12d
   10a2d:	c6 04 02 08          	movb   $0x8,(%rdx,%rax,1)
   10a31:	e9 66 f9 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10a36:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10a3b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a40:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10a44:	e8 17 f8 ff ff       	call   10260 <__grow_type_table>
   10a49:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10a4d:	83 f8 ff             	cmp    $0xffffffff,%eax
   10a50:	0f 84 2a fa ff ff    	je     10480 <__find_arguments+0x170>
   10a56:	e9 be fd ff ff       	jmp    10819 <__find_arguments+0x509>
   10a5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10a60:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10a65:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a6a:	e8 f1 f7 ff ff       	call   10260 <__grow_type_table>
   10a6f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10a72:	0f 84 08 fa ff ff    	je     10480 <__find_arguments+0x170>
   10a78:	e9 3c fb ff ff       	jmp    105b9 <__find_arguments+0x2a9>
   10a7d:	0f 1f 00             	nopl   (%rax)
   10a80:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10a85:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10a8a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10a8e:	e8 cd f7 ff ff       	call   10260 <__grow_type_table>
   10a93:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10a97:	83 f8 ff             	cmp    $0xffffffff,%eax
   10a9a:	0f 84 e0 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10aa0:	e9 46 fd ff ff       	jmp    107eb <__find_arguments+0x4db>
   10aa5:	0f 1f 00             	nopl   (%rax)
   10aa8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10aad:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10ab2:	e8 a9 f7 ff ff       	call   10260 <__grow_type_table>
   10ab7:	83 f8 ff             	cmp    $0xffffffff,%eax
   10aba:	0f 84 c0 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10ac0:	e9 90 fc ff ff       	jmp    10755 <__find_arguments+0x445>
   10ac5:	0f 1f 00             	nopl   (%rax)
   10ac8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10acd:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10ad2:	e8 89 f7 ff ff       	call   10260 <__grow_type_table>
   10ad7:	83 f8 ff             	cmp    $0xffffffff,%eax
   10ada:	0f 84 a0 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10ae0:	e9 ab fb ff ff       	jmp    10690 <__find_arguments+0x380>
   10ae5:	0f 1f 00             	nopl   (%rax)
   10ae8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10aed:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10af2:	e8 69 f7 ff ff       	call   10260 <__grow_type_table>
   10af7:	83 f8 ff             	cmp    $0xffffffff,%eax
   10afa:	0f 84 80 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10b00:	e9 52 fa ff ff       	jmp    10557 <__find_arguments+0x247>
   10b05:	0f 1f 00             	nopl   (%rax)
   10b08:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10b0d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b12:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10b16:	e8 45 f7 ff ff       	call   10260 <__grow_type_table>
   10b1b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10b1f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10b22:	0f 84 58 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10b28:	e9 1a fd ff ff       	jmp    10847 <__find_arguments+0x537>
   10b2d:	0f 1f 00             	nopl   (%rax)
   10b30:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10b35:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b3a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10b3e:	e8 1d f7 ff ff       	call   10260 <__grow_type_table>
   10b43:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10b47:	83 f8 ff             	cmp    $0xffffffff,%eax
   10b4a:	0f 84 30 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10b50:	e9 20 fd ff ff       	jmp    10875 <__find_arguments+0x565>
   10b55:	0f 1f 00             	nopl   (%rax)
   10b58:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10b5d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b62:	e8 f9 f6 ff ff       	call   10260 <__grow_type_table>
   10b67:	83 f8 ff             	cmp    $0xffffffff,%eax
   10b6a:	0f 84 10 f9 ff ff    	je     10480 <__find_arguments+0x170>
   10b70:	e9 5c fd ff ff       	jmp    108d1 <__find_arguments+0x5c1>
   10b75:	0f 1f 00             	nopl   (%rax)
   10b78:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10b7d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10b82:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10b86:	e8 d5 f6 ff ff       	call   10260 <__grow_type_table>
   10b8b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10b8f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10b92:	0f 84 e8 f8 ff ff    	je     10480 <__find_arguments+0x170>
   10b98:	e9 06 fd ff ff       	jmp    108a3 <__find_arguments+0x593>
   10b9d:	0f 1f 00             	nopl   (%rax)
   10ba0:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   10ba4:	4d 8d 51 08          	lea    0x8(%r9),%r10
   10ba8:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   10bac:	e9 fa fd ff ff       	jmp    109ab <__find_arguments+0x69b>
   10bb1:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10bb6:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10bbb:	e8 a0 f6 ff ff       	call   10260 <__grow_type_table>
   10bc0:	83 f8 ff             	cmp    $0xffffffff,%eax
   10bc3:	0f 84 b7 f8 ff ff    	je     10480 <__find_arguments+0x170>
   10bc9:	e9 dc fb ff ff       	jmp    107aa <__find_arguments+0x49a>
   10bce:	66 90                	xchg   %ax,%ax
   10bd0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10bd5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10bda:	e8 81 f6 ff ff       	call   10260 <__grow_type_table>
   10bdf:	83 f8 ff             	cmp    $0xffffffff,%eax
   10be2:	0f 84 98 f8 ff ff    	je     10480 <__find_arguments+0x170>
   10be8:	e9 3d f9 ff ff       	jmp    1052a <__find_arguments+0x21a>
   10bed:	0f 1f 00             	nopl   (%rax)
   10bf0:	8b 54 24 38          	mov    0x38(%rsp),%edx
   10bf4:	3c 24                	cmp    $0x24,%al
   10bf6:	0f 84 95 01 00 00    	je     10d91 <__find_arguments+0xa81>
   10bfc:	41 39 d4             	cmp    %edx,%r12d
   10bff:	0f 8d 0b 03 00 00    	jge    10f10 <__find_arguments+0xc00>
   10c05:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10c0a:	49 63 c4             	movslq %r12d,%rax
   10c0d:	45 39 e5             	cmp    %r12d,%r13d
   10c10:	45 0f 4c ec          	cmovl  %r12d,%r13d
   10c14:	41 83 c4 01          	add    $0x1,%r12d
   10c18:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
   10c1c:	41 0f be 07          	movsbl (%r15),%eax
   10c20:	e9 f7 f7 ff ff       	jmp    1041c <__find_arguments+0x10c>
   10c25:	41 39 c4             	cmp    %eax,%r12d
   10c28:	0f 8c 8b fa ff ff    	jl     106b9 <__find_arguments+0x3a9>
   10c2e:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10c33:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10c38:	e8 23 f6 ff ff       	call   10260 <__grow_type_table>
   10c3d:	83 f8 ff             	cmp    $0xffffffff,%eax
   10c40:	0f 84 3a f8 ff ff    	je     10480 <__find_arguments+0x170>
   10c46:	e9 6e fa ff ff       	jmp    106b9 <__find_arguments+0x3a9>
   10c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c50:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   10c55:	80 cd 08             	or     $0x8,%ch
   10c58:	49 83 c7 01          	add    $0x1,%r15
   10c5c:	e9 bb f7 ff ff       	jmp    1041c <__find_arguments+0x10c>
   10c61:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   10c66:	83 c9 20             	or     $0x20,%ecx
   10c69:	49 83 c7 01          	add    $0x1,%r15
   10c6d:	e9 aa f7 ff ff       	jmp    1041c <__find_arguments+0x10c>
   10c72:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10c77:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10c7c:	e8 df f5 ff ff       	call   10260 <__grow_type_table>
   10c81:	83 f8 ff             	cmp    $0xffffffff,%eax
   10c84:	0f 84 f6 f7 ff ff    	je     10480 <__find_arguments+0x170>
   10c8a:	e9 53 f9 ff ff       	jmp    105e2 <__find_arguments+0x2d2>
   10c8f:	90                   	nop
   10c90:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10c95:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10c9a:	e8 c1 f5 ff ff       	call   10260 <__grow_type_table>
   10c9f:	83 f8 ff             	cmp    $0xffffffff,%eax
   10ca2:	0f 84 d8 f7 ff ff    	je     10480 <__find_arguments+0x170>
   10ca8:	e9 d1 fa ff ff       	jmp    1077e <__find_arguments+0x46e>
   10cad:	0f 1f 00             	nopl   (%rax)
   10cb0:	83 f8 24             	cmp    $0x24,%eax
   10cb3:	0f 85 b6 f9 ff ff    	jne    1066f <__find_arguments+0x35f>
   10cb9:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   10cbe:	41 89 f4             	mov    %esi,%r12d
   10cc1:	49 89 d7             	mov    %rdx,%r15
   10cc4:	e9 53 f7 ff ff       	jmp    1041c <__find_arguments+0x10c>
   10cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10cd0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10cd5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10cda:	e8 81 f5 ff ff       	call   10260 <__grow_type_table>
   10cdf:	83 f8 ff             	cmp    $0xffffffff,%eax
   10ce2:	0f 84 98 f7 ff ff    	je     10480 <__find_arguments+0x170>
   10ce8:	e9 0d fc ff ff       	jmp    108fa <__find_arguments+0x5ea>
   10ced:	0f 1f 00             	nopl   (%rax)
   10cf0:	41 8d 7d 01          	lea    0x1(%r13),%edi
   10cf4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10cf9:	48 63 ff             	movslq %edi,%rdi
   10cfc:	48 c1 e7 04          	shl    $0x4,%rdi
   10d00:	48 89 38             	mov    %rdi,(%rax)
   10d03:	e8 68 b8 ff ff       	call   c570 <dlmalloc>
   10d08:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10d0d:	48 89 07             	mov    %rax,(%rdi)
   10d10:	48 85 c0             	test   %rax,%rax
   10d13:	0f 85 ad f6 ff ff    	jne    103c6 <__find_arguments+0xb6>
   10d19:	e9 62 f7 ff ff       	jmp    10480 <__find_arguments+0x170>
   10d1e:	66 90                	xchg   %ax,%ax
   10d20:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   10d24:	4d 8d 51 08          	lea    0x8(%r9),%r10
   10d28:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   10d2c:	e9 af fc ff ff       	jmp    109e0 <__find_arguments+0x6d0>
   10d31:	f6 c1 10             	test   $0x10,%cl
   10d34:	0f 85 ec 00 00 00    	jne    10e26 <__find_arguments+0xb16>
   10d3a:	f6 c1 40             	test   $0x40,%cl
   10d3d:	0f 84 b5 02 00 00    	je     10ff8 <__find_arguments+0xce8>
   10d43:	41 39 c4             	cmp    %eax,%r12d
   10d46:	0f 8d 74 03 00 00    	jge    110c0 <__find_arguments+0xdb0>
   10d4c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10d51:	49 63 c4             	movslq %r12d,%rax
   10d54:	41 83 c4 01          	add    $0x1,%r12d
   10d58:	c6 04 02 01          	movb   $0x1,(%rdx,%rax,1)
   10d5c:	e9 3b f6 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10d61:	f6 c1 40             	test   $0x40,%cl
   10d64:	0f 85 9e 00 00 00    	jne    10e08 <__find_arguments+0xaf8>
   10d6a:	80 e5 08             	and    $0x8,%ch
   10d6d:	0f 84 e8 01 00 00    	je     10f5b <__find_arguments+0xc4b>
   10d73:	41 39 c4             	cmp    %eax,%r12d
   10d76:	0f 8d 24 03 00 00    	jge    110a0 <__find_arguments+0xd90>
   10d7c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10d81:	49 63 c4             	movslq %r12d,%rax
   10d84:	41 83 c4 01          	add    $0x1,%r12d
   10d88:	c6 04 02 1a          	movb   $0x1a,(%rdx,%rax,1)
   10d8c:	e9 0b f6 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10d91:	45 39 d5             	cmp    %r10d,%r13d
   10d94:	45 0f 4c ea          	cmovl  %r10d,%r13d
   10d98:	44 39 d2             	cmp    %r10d,%edx
   10d9b:	0f 8e e7 00 00 00    	jle    10e88 <__find_arguments+0xb78>
   10da1:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   10da6:	4d 63 d2             	movslq %r10d,%r10
   10da9:	4d 8d 79 01          	lea    0x1(%r9),%r15
   10dad:	42 c6 04 10 04       	movb   $0x4,(%rax,%r10,1)
   10db2:	41 0f be 41 01       	movsbl 0x1(%r9),%eax
   10db7:	e9 60 f6 ff ff       	jmp    1041c <__find_arguments+0x10c>
   10dbc:	44 8b 56 04          	mov    0x4(%rsi),%r10d
   10dc0:	41 81 fa af 00 00 00 	cmp    $0xaf,%r10d
   10dc7:	0f 87 73 01 00 00    	ja     10f40 <__find_arguments+0xc30>
   10dcd:	45 89 d1             	mov    %r10d,%r9d
   10dd0:	41 83 c2 10          	add    $0x10,%r10d
   10dd4:	4c 03 4e 10          	add    0x10(%rsi),%r9
   10dd8:	44 89 56 04          	mov    %r10d,0x4(%rsi)
   10ddc:	f2 41 0f 10 01       	movsd  (%r9),%xmm0
   10de1:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   10de5:	e9 c7 fb ff ff       	jmp    109b1 <__find_arguments+0x6a1>
   10dea:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   10dee:	4c 8d 4b 0f          	lea    0xf(%rbx),%r9
   10df2:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
   10df6:	4d 8d 51 10          	lea    0x10(%r9),%r10
   10dfa:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   10dfe:	41 db 29             	fldt   (%r9)
   10e01:	db 38                	fstpt  (%rax)
   10e03:	e9 a9 fb ff ff       	jmp    109b1 <__find_arguments+0x6a1>
   10e08:	41 39 c4             	cmp    %eax,%r12d
   10e0b:	0f 8d 0e 02 00 00    	jge    1101f <__find_arguments+0xd0f>
   10e11:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10e16:	49 63 c4             	movslq %r12d,%rax
   10e19:	41 83 c4 01          	add    $0x1,%r12d
   10e1d:	c6 04 02 02          	movb   $0x2,(%rdx,%rax,1)
   10e21:	e9 76 f5 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10e26:	41 39 c4             	cmp    %eax,%r12d
   10e29:	0f 8d a5 01 00 00    	jge    10fd4 <__find_arguments+0xcc4>
   10e2f:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10e34:	49 63 c4             	movslq %r12d,%rax
   10e37:	41 83 c4 01          	add    $0x1,%r12d
   10e3b:	c6 04 02 07          	movb   $0x7,(%rdx,%rax,1)
   10e3f:	e9 58 f5 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10e44:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10e49:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10e4e:	e8 0d f4 ff ff       	call   10260 <__grow_type_table>
   10e53:	83 f8 ff             	cmp    $0xffffffff,%eax
   10e56:	0f 84 24 f6 ff ff    	je     10480 <__find_arguments+0x170>
   10e5c:	e9 c0 fb ff ff       	jmp    10a21 <__find_arguments+0x711>
   10e61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10e68:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10e6d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10e72:	e8 e9 f3 ff ff       	call   10260 <__grow_type_table>
   10e77:	83 f8 ff             	cmp    $0xffffffff,%eax
   10e7a:	0f 84 00 f6 ff ff    	je     10480 <__find_arguments+0x170>
   10e80:	e9 75 fb ff ff       	jmp    109fa <__find_arguments+0x6ea>
   10e85:	0f 1f 00             	nopl   (%rax)
   10e88:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10e8d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10e92:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   10e96:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
   10e9b:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   10ea0:	e8 bb f3 ff ff       	call   10260 <__grow_type_table>
   10ea5:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   10eaa:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
   10eaf:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   10eb5:	83 f8 ff             	cmp    $0xffffffff,%eax
   10eb8:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   10ebc:	0f 84 be f5 ff ff    	je     10480 <__find_arguments+0x170>
   10ec2:	e9 da fe ff ff       	jmp    10da1 <__find_arguments+0xa91>
   10ec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10ece:	00 00 
   10ed0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10ed5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10eda:	e8 81 f3 ff ff       	call   10260 <__grow_type_table>
   10edf:	83 f8 ff             	cmp    $0xffffffff,%eax
   10ee2:	0f 84 98 f5 ff ff    	je     10480 <__find_arguments+0x170>
   10ee8:	e9 85 fa ff ff       	jmp    10972 <__find_arguments+0x662>
   10eed:	0f 1f 00             	nopl   (%rax)
   10ef0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10ef5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10efa:	e8 61 f3 ff ff       	call   10260 <__grow_type_table>
   10eff:	83 f8 ff             	cmp    $0xffffffff,%eax
   10f02:	0f 84 78 f5 ff ff    	je     10480 <__find_arguments+0x170>
   10f08:	e9 05 f7 ff ff       	jmp    10612 <__find_arguments+0x302>
   10f0d:	0f 1f 00             	nopl   (%rax)
   10f10:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10f15:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10f1a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   10f1e:	e8 3d f3 ff ff       	call   10260 <__grow_type_table>
   10f23:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   10f27:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   10f2d:	83 f8 ff             	cmp    $0xffffffff,%eax
   10f30:	0f 84 4a f5 ff ff    	je     10480 <__find_arguments+0x170>
   10f36:	e9 ca fc ff ff       	jmp    10c05 <__find_arguments+0x8f5>
   10f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f40:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   10f44:	4d 8d 51 08          	lea    0x8(%r9),%r10
   10f48:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   10f4c:	e9 8b fe ff ff       	jmp    10ddc <__find_arguments+0xacc>
   10f51:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   10f56:	e9 62 fa ff ff       	jmp    109bd <__find_arguments+0x6ad>
   10f5b:	41 39 c4             	cmp    %eax,%r12d
   10f5e:	0f 8d 17 01 00 00    	jge    1107b <__find_arguments+0xd6b>
   10f64:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   10f69:	49 63 c4             	movslq %r12d,%rax
   10f6c:	41 83 c4 01          	add    $0x1,%r12d
   10f70:	c6 04 02 05          	movb   $0x5,(%rdx,%rax,1)
   10f74:	e9 23 f4 ff ff       	jmp    1039c <__find_arguments+0x8c>
   10f79:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   10f7e:	49 89 d2             	mov    %rdx,%r10
   10f81:	45 31 c9             	xor    %r9d,%r9d
   10f84:	8d 78 d0             	lea    -0x30(%rax),%edi
   10f87:	89 c6                	mov    %eax,%esi
   10f89:	83 ff 09             	cmp    $0x9,%edi
   10f8c:	76 32                	jbe    10fc0 <__find_arguments+0xcb0>
   10f8e:	e9 ad 00 00 00       	jmp    11040 <__find_arguments+0xd30>
   10f93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10f98:	49 83 c2 01          	add    $0x1,%r10
   10f9c:	44 8d 4c 30 d0       	lea    -0x30(%rax,%rsi,1),%r9d
   10fa1:	41 0f be 02          	movsbl (%r10),%eax
   10fa5:	8d 78 d0             	lea    -0x30(%rax),%edi
   10fa8:	89 c6                	mov    %eax,%esi
   10faa:	83 ff 09             	cmp    $0x9,%edi
   10fad:	0f 87 8d 00 00 00    	ja     11040 <__find_arguments+0xd30>
   10fb3:	41 81 f9 cc cc cc 0c 	cmp    $0xccccccc,%r9d
   10fba:	0f 8f c0 f4 ff ff    	jg     10480 <__find_arguments+0x170>
   10fc0:	43 8d 34 89          	lea    (%r9,%r9,4),%esi
   10fc4:	44 89 c7             	mov    %r8d,%edi
   10fc7:	01 f6                	add    %esi,%esi
   10fc9:	29 c7                	sub    %eax,%edi
   10fcb:	39 f7                	cmp    %esi,%edi
   10fcd:	7d c9                	jge    10f98 <__find_arguments+0xc88>
   10fcf:	e9 ac f4 ff ff       	jmp    10480 <__find_arguments+0x170>
   10fd4:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   10fd9:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   10fde:	e8 7d f2 ff ff       	call   10260 <__grow_type_table>
   10fe3:	83 f8 ff             	cmp    $0xffffffff,%eax
   10fe6:	0f 84 94 f4 ff ff    	je     10480 <__find_arguments+0x170>
   10fec:	e9 3e fe ff ff       	jmp    10e2f <__find_arguments+0xb1f>
   10ff1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10ff8:	80 e5 08             	and    $0x8,%ch
   10ffb:	0f 84 24 fc ff ff    	je     10c25 <__find_arguments+0x915>
   11001:	41 39 c4             	cmp    %eax,%r12d
   11004:	0f 8d d8 00 00 00    	jge    110e2 <__find_arguments+0xdd2>
   1100a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1100f:	49 63 c4             	movslq %r12d,%rax
   11012:	41 83 c4 01          	add    $0x1,%r12d
   11016:	c6 04 02 19          	movb   $0x19,(%rdx,%rax,1)
   1101a:	e9 7d f3 ff ff       	jmp    1039c <__find_arguments+0x8c>
   1101f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   11024:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11029:	e8 32 f2 ff ff       	call   10260 <__grow_type_table>
   1102e:	83 f8 ff             	cmp    $0xffffffff,%eax
   11031:	0f 84 49 f4 ff ff    	je     10480 <__find_arguments+0x170>
   11037:	e9 d5 fd ff ff       	jmp    10e11 <__find_arguments+0xb01>
   1103c:	0f 1f 40 00          	nopl   0x0(%rax)
   11040:	8b 44 24 38          	mov    0x38(%rsp),%eax
   11044:	40 80 fe 24          	cmp    $0x24,%sil
   11048:	0f 84 ea 00 00 00    	je     11138 <__find_arguments+0xe28>
   1104e:	41 39 c4             	cmp    %eax,%r12d
   11051:	0f 8d a8 00 00 00    	jge    110ff <__find_arguments+0xdef>
   11057:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1105c:	49 63 c4             	movslq %r12d,%rax
   1105f:	45 39 e5             	cmp    %r12d,%r13d
   11062:	45 0f 4c ec          	cmovl  %r12d,%r13d
   11066:	41 83 c4 01          	add    $0x1,%r12d
   1106a:	c6 04 06 04          	movb   $0x4,(%rsi,%rax,1)
   1106e:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   11073:	49 89 d7             	mov    %rdx,%r15
   11076:	e9 a1 f3 ff ff       	jmp    1041c <__find_arguments+0x10c>
   1107b:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   11080:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11085:	e8 d6 f1 ff ff       	call   10260 <__grow_type_table>
   1108a:	83 f8 ff             	cmp    $0xffffffff,%eax
   1108d:	0f 84 ed f3 ff ff    	je     10480 <__find_arguments+0x170>
   11093:	e9 cc fe ff ff       	jmp    10f64 <__find_arguments+0xc54>
   11098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1109f:	00 
   110a0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   110a5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   110aa:	e8 b1 f1 ff ff       	call   10260 <__grow_type_table>
   110af:	83 f8 ff             	cmp    $0xffffffff,%eax
   110b2:	0f 84 c8 f3 ff ff    	je     10480 <__find_arguments+0x170>
   110b8:	e9 bf fc ff ff       	jmp    10d7c <__find_arguments+0xa6c>
   110bd:	0f 1f 00             	nopl   (%rax)
   110c0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   110c5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   110ca:	e8 91 f1 ff ff       	call   10260 <__grow_type_table>
   110cf:	83 f8 ff             	cmp    $0xffffffff,%eax
   110d2:	0f 84 a8 f3 ff ff    	je     10480 <__find_arguments+0x170>
   110d8:	e9 6f fc ff ff       	jmp    10d4c <__find_arguments+0xa3c>
   110dd:	e8 de e8 ff ff       	call   f9c0 <__stack_chk_fail>
   110e2:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   110e7:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   110ec:	e8 6f f1 ff ff       	call   10260 <__grow_type_table>
   110f1:	83 f8 ff             	cmp    $0xffffffff,%eax
   110f4:	0f 84 86 f3 ff ff    	je     10480 <__find_arguments+0x170>
   110fa:	e9 0b ff ff ff       	jmp    1100a <__find_arguments+0xcfa>
   110ff:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   11104:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11109:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   1110d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   11112:	e8 49 f1 ff ff       	call   10260 <__grow_type_table>
   11117:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1111c:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   11120:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   11126:	83 c0 01             	add    $0x1,%eax
   11129:	0f 84 51 f3 ff ff    	je     10480 <__find_arguments+0x170>
   1112f:	e9 23 ff ff ff       	jmp    11057 <__find_arguments+0xd47>
   11134:	0f 1f 40 00          	nopl   0x0(%rax)
   11138:	45 39 cd             	cmp    %r9d,%r13d
   1113b:	45 0f 4c e9          	cmovl  %r9d,%r13d
   1113f:	44 39 c8             	cmp    %r9d,%eax
   11142:	7e 1b                	jle    1115f <__find_arguments+0xe4f>
   11144:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   11149:	4d 63 c9             	movslq %r9d,%r9
   1114c:	4d 8d 7a 01          	lea    0x1(%r10),%r15
   11150:	42 c6 04 08 04       	movb   $0x4,(%rax,%r9,1)
   11155:	41 0f be 42 01       	movsbl 0x1(%r10),%eax
   1115a:	e9 bd f2 ff ff       	jmp    1041c <__find_arguments+0x10c>
   1115f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   11164:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   11169:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   1116d:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   11172:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   11177:	e8 e4 f0 ff ff       	call   10260 <__grow_type_table>
   1117c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11181:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   11186:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1118c:	83 c0 01             	add    $0x1,%eax
   1118f:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   11193:	0f 84 e7 f2 ff ff    	je     10480 <__find_arguments+0x170>
   11199:	eb a9                	jmp    11144 <__find_arguments+0xe34>
   1119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000111a0 <__sprint.part.0>:
   111a0:	53                   	push   %rbx
   111a1:	48 89 f3             	mov    %rsi,%rbx
   111a4:	e8 87 64 00 00       	call   17630 <__sfvwrite>
   111a9:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   111b0:	00 
   111b1:	5b                   	pop    %rbx
   111b2:	c3                   	ret    
   111b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   111ba:	00 00 00 
   111bd:	0f 1f 00             	nopl   (%rax)

00000000000111c0 <__vfprintf>:
   111c0:	f3 0f 1e fa          	endbr64 
   111c4:	41 57                	push   %r15
   111c6:	41 56                	push   %r14
   111c8:	41 55                	push   %r13
   111ca:	41 54                	push   %r12
   111cc:	55                   	push   %rbp
   111cd:	53                   	push   %rbx
   111ce:	48 81 ec b8 02 00 00 	sub    $0x2b8,%rsp
   111d5:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   111da:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   111df:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   111e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   111eb:	00 00 
   111ed:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   111f4:	00 
   111f5:	31 c0                	xor    %eax,%eax
   111f7:	48 8b 47 30          	mov    0x30(%rdi),%rax
   111fb:	48 85 c0             	test   %rax,%rax
   111fe:	74 16                	je     11216 <__vfprintf+0x56>
   11200:	48 83 f8 f0          	cmp    $0xfffffffffffffff0,%rax
   11204:	74 10                	je     11216 <__vfprintf+0x56>
   11206:	44 8b 48 30          	mov    0x30(%rax),%r9d
   1120a:	45 85 c9             	test   %r9d,%r9d
   1120d:	75 07                	jne    11216 <__vfprintf+0x56>
   1120f:	c7 40 30 ff ff ff ff 	movl   $0xffffffff,0x30(%rax)
   11216:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1121b:	0f b7 41 10          	movzwl 0x10(%rcx),%eax
   1121f:	66 89 04 24          	mov    %ax,(%rsp)
   11223:	83 e0 1a             	and    $0x1a,%eax
   11226:	66 83 f8 0a          	cmp    $0xa,%ax
   1122a:	75 0b                	jne    11237 <__vfprintf+0x77>
   1122c:	66 83 79 12 00       	cmpw   $0x0,0x12(%rcx)
   11231:	0f 89 51 30 00 00    	jns    14288 <__vfprintf+0x30c8>
   11237:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1123c:	4c 8d ac 24 08 01 00 	lea    0x108(%rsp),%r13
   11243:	00 
   11244:	31 f6                	xor    %esi,%esi
   11246:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   1124d:	00 00 00 00 00 
   11252:	ba 08 00 00 00       	mov    $0x8,%edx
   11257:	4c 89 ef             	mov    %r13,%rdi
   1125a:	4c 8d b4 24 b4 00 00 	lea    0xb4(%rsp),%r14
   11261:	00 
   11262:	f3 0f 6f 08          	movdqu (%rax),%xmm1
   11266:	0f 11 8c 24 18 01 00 	movups %xmm1,0x118(%rsp)
   1126d:	00 
   1126e:	48 8b 40 10          	mov    0x10(%rax),%rax
   11272:	0f 29 0c 24          	movaps %xmm1,(%rsp)
   11276:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1127d:	00 
   1127e:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   11285:	00 
   11286:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1128b:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   11292:	00 
   11293:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   1129a:	00 00 00 00 00 
   1129f:	e8 5c e5 ff ff       	call   f800 <memset>
   112a4:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   112a9:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   112b0:	00 00 
   112b2:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   112b9:	00 
   112ba:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   112bf:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   112c6:	00 00 
   112c8:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   112cf:	00 
   112d0:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   112d5:	eb 1c                	jmp    112f3 <__vfprintf+0x133>
   112d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   112de:	00 00 
   112e0:	48 98                	cltq   
   112e2:	48 01 c3             	add    %rax,%rbx
   112e5:	83 bc 24 b4 00 00 00 	cmpl   $0x25,0xb4(%rsp)
   112ec:	25 
   112ed:	0f 84 a5 00 00 00    	je     11398 <__vfprintf+0x1d8>
   112f3:	4c 89 e9             	mov    %r13,%rcx
   112f6:	ba 01 00 00 00       	mov    $0x1,%edx
   112fb:	48 89 de             	mov    %rbx,%rsi
   112fe:	4c 89 f7             	mov    %r14,%rdi
   11301:	e8 aa 61 00 00       	call   174b0 <mbrtowc>
   11306:	89 c5                	mov    %eax,%ebp
   11308:	85 c0                	test   %eax,%eax
   1130a:	7f d4                	jg     112e0 <__vfprintf+0x120>
   1130c:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
   11311:	0f 84 16 02 00 00    	je     1152d <__vfprintf+0x36d>
   11317:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1131c:	49 89 dc             	mov    %rbx,%r12
   1131f:	49 29 cc             	sub    %rcx,%r12
   11322:	0f 88 28 01 00 00    	js     11450 <__vfprintf+0x290>
   11328:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   1132d:	2b 44 24 28          	sub    0x28(%rsp),%eax
   11331:	48 98                	cltq   
   11333:	4c 39 e0             	cmp    %r12,%rax
   11336:	0f 8c 14 01 00 00    	jl     11450 <__vfprintf+0x290>
   1133c:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   11343:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   1134a:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   11351:	00 
   11352:	4c 89 a4 24 38 01 00 	mov    %r12,0x138(%rsp)
   11359:	00 
   1135a:	44 01 e2             	add    %r12d,%edx
   1135d:	83 c0 01             	add    $0x1,%eax
   11360:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   11367:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   1136e:	83 f8 07             	cmp    $0x7,%eax
   11371:	0f 8e 61 01 00 00    	jle    114d8 <__vfprintf+0x318>
   11377:	85 d2                	test   %edx,%edx
   11379:	0f 85 91 01 00 00    	jne    11510 <__vfprintf+0x350>
   1137f:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11386:	00 00 00 00 
   1138a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1138f:	e9 4c 01 00 00       	jmp    114e0 <__vfprintf+0x320>
   11394:	0f 1f 40 00          	nopl   0x0(%rax)
   11398:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   1139c:	48 39 44 24 18       	cmp    %rax,0x18(%rsp)
   113a1:	0f 85 59 01 00 00    	jne    11500 <__vfprintf+0x340>
   113a7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   113ac:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   113b1:	48 89 c3             	mov    %rax,%rbx
   113b4:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   113bb:	00 
   113bc:	0f be 5b 01          	movsbl 0x1(%rbx),%ebx
   113c0:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
   113c6:	48 8d 2d 1f 17 01 00 	lea    0x1171f(%rip),%rbp        # 22aec <_ZZ17ecall_malloc_freeE8__func__+0x2bc>
   113cd:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   113d4:	00 
   113d5:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   113da:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
   113e1:	00 
   113e2:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   113e9:	49 83 c4 01          	add    $0x1,%r12
   113ed:	8d 43 e0             	lea    -0x20(%rbx),%eax
   113f0:	83 f8 5a             	cmp    $0x5a,%eax
   113f3:	0f 87 77 01 00 00    	ja     11570 <__vfprintf+0x3b0>
   113f9:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   113fe:	48 01 e8             	add    %rbp,%rax
   11401:	3e ff e0             	notrack jmp *%rax
   11404:	0f 1f 40 00          	nopl   0x0(%rax)
   11408:	45 31 c0             	xor    %r8d,%r8d
   1140b:	eb 06                	jmp    11413 <__vfprintf+0x253>
   1140d:	0f 1f 00             	nopl   (%rax)
   11410:	4d 89 fc             	mov    %r15,%r12
   11413:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
   11417:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   1141c:	01 c0                	add    %eax,%eax
   1141e:	29 da                	sub    %ebx,%edx
   11420:	39 c2                	cmp    %eax,%edx
   11422:	7c 2c                	jl     11450 <__vfprintf+0x290>
   11424:	44 8d 44 03 d0       	lea    -0x30(%rbx,%rax,1),%r8d
   11429:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1142e:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   11433:	8d 43 d0             	lea    -0x30(%rbx),%eax
   11436:	83 f8 09             	cmp    $0x9,%eax
   11439:	0f 87 c6 26 00 00    	ja     13b05 <__vfprintf+0x2945>
   1143f:	41 81 f8 cc cc cc 0c 	cmp    $0xccccccc,%r8d
   11446:	7e c8                	jle    11410 <__vfprintf+0x250>
   11448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1144f:	00 
   11450:	e8 5b ed ff ff       	call   101b0 <__errno>
   11455:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   1145c:	ff 
   1145d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   11463:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   11468:	48 85 c0             	test   %rax,%rax
   1146b:	74 08                	je     11475 <__vfprintf+0x2b5>
   1146d:	48 89 c7             	mov    %rax,%rdi
   11470:	e8 6b cb ff ff       	call   dfe0 <dlfree>
   11475:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1147a:	48 85 c0             	test   %rax,%rax
   1147d:	74 08                	je     11487 <__vfprintf+0x2c7>
   1147f:	48 89 c7             	mov    %rax,%rdi
   11482:	e8 b9 34 00 00       	call   14940 <__freedtoa>
   11487:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
   1148e:	00 
   1148f:	48 85 ff             	test   %rdi,%rdi
   11492:	74 12                	je     114a6 <__vfprintf+0x2e6>
   11494:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1149b:	00 
   1149c:	48 39 c7             	cmp    %rax,%rdi
   1149f:	74 05                	je     114a6 <__vfprintf+0x2e6>
   114a1:	e8 3a cb ff ff       	call   dfe0 <dlfree>
   114a6:	48 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%rax
   114ad:	00 
   114ae:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   114b5:	00 00 
   114b7:	0f 85 b7 2e 00 00    	jne    14374 <__vfprintf+0x31b4>
   114bd:	8b 44 24 28          	mov    0x28(%rsp),%eax
   114c1:	48 81 c4 b8 02 00 00 	add    $0x2b8,%rsp
   114c8:	5b                   	pop    %rbx
   114c9:	5d                   	pop    %rbp
   114ca:	41 5c                	pop    %r12
   114cc:	41 5d                	pop    %r13
   114ce:	41 5e                	pop    %r14
   114d0:	41 5f                	pop    %r15
   114d2:	c3                   	ret    
   114d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   114d8:	4c 8d 94 24 40 01 00 	lea    0x140(%rsp),%r10
   114df:	00 
   114e0:	44 01 64 24 28       	add    %r12d,0x28(%rsp)
   114e5:	85 ed                	test   %ebp,%ebp
   114e7:	7e 44                	jle    1152d <__vfprintf+0x36d>
   114e9:	48 8d 43 01          	lea    0x1(%rbx),%rax
   114ed:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   114f2:	e9 bd fe ff ff       	jmp    113b4 <__vfprintf+0x1f4>
   114f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   114fe:	00 00 
   11500:	48 89 c3             	mov    %rax,%rbx
   11503:	e9 0f fe ff ff       	jmp    11317 <__vfprintf+0x157>
   11508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1150f:	00 
   11510:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   11515:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   1151c:	00 
   1151d:	e8 7e fc ff ff       	call   111a0 <__sprint.part.0>
   11522:	85 c0                	test   %eax,%eax
   11524:	75 2a                	jne    11550 <__vfprintf+0x390>
   11526:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1152b:	eb b3                	jmp    114e0 <__vfprintf+0x320>
   1152d:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11534:	85 c0                	test   %eax,%eax
   11536:	0f 85 f7 24 00 00    	jne    13a33 <__vfprintf+0x2873>
   1153c:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11543:	00 00 00 00 
   11547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1154e:	00 00 
   11550:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   11555:	f6 40 10 40          	testb  $0x40,0x10(%rax)
   11559:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1155e:	0f 44 44 24 28       	cmove  0x28(%rsp),%eax
   11563:	89 44 24 28          	mov    %eax,0x28(%rsp)
   11567:	e9 f7 fe ff ff       	jmp    11463 <__vfprintf+0x2a3>
   1156c:	0f 1f 40 00          	nopl   0x0(%rax)
   11570:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11575:	85 db                	test   %ebx,%ebx
   11577:	74 b4                	je     1152d <__vfprintf+0x36d>
   11579:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   11580:	00 
   11581:	4c 8d 84 24 40 02 00 	lea    0x240(%rsp),%r8
   11588:	00 
   11589:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   11590:	00 
   11591:	88 9c 24 40 02 00 00 	mov    %bl,0x240(%rsp)
   11598:	bb 01 00 00 00       	mov    $0x1,%ebx
   1159d:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   115a4:	00 
   115a5:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   115ac:	00 
   115ad:	0f 1f 00             	nopl   (%rax)
   115b0:	44 8b 24 24          	mov    (%rsp),%r12d
   115b4:	8d 43 02             	lea    0x2(%rbx),%eax
   115b7:	84 d2                	test   %dl,%dl
   115b9:	0f 45 d8             	cmovne %eax,%ebx
   115bc:	41 81 e4 84 00 00 00 	and    $0x84,%r12d
   115c3:	75 0e                	jne    115d3 <__vfprintf+0x413>
   115c5:	8b 6c 24 2c          	mov    0x2c(%rsp),%ebp
   115c9:	29 dd                	sub    %ebx,%ebp
   115cb:	85 ed                	test   %ebp,%ebp
   115cd:	0f 8f 4d 11 00 00    	jg     12720 <__vfprintf+0x1560>
   115d3:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   115da:	00 
   115db:	74 5b                	je     11638 <__vfprintf+0x478>
   115dd:	48 8d 84 24 b3 00 00 	lea    0xb3(%rsp),%rax
   115e4:	00 
   115e5:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   115ec:	00 
   115ed:	49 83 c2 10          	add    $0x10,%r10
   115f1:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   115f5:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   115fc:	8d 50 01             	lea    0x1(%rax),%edx
   115ff:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   11606:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1160d:	83 c0 01             	add    $0x1,%eax
   11610:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11617:	83 f8 07             	cmp    $0x7,%eax
   1161a:	7e 1c                	jle    11638 <__vfprintf+0x478>
   1161c:	85 d2                	test   %edx,%edx
   1161e:	0f 85 14 15 00 00    	jne    12b38 <__vfprintf+0x1978>
   11624:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1162b:	00 00 00 00 
   1162f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11634:	0f 1f 40 00          	nopl   0x0(%rax)
   11638:	80 bc 24 31 02 00 00 	cmpb   $0x0,0x231(%rsp)
   1163f:	00 
   11640:	74 66                	je     116a8 <__vfprintf+0x4e8>
   11642:	48 8d 84 24 30 02 00 	lea    0x230(%rsp),%rax
   11649:	00 
   1164a:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   11651:	00 
   11652:	49 83 c2 10          	add    $0x10,%r10
   11656:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   1165a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   11661:	c6 84 24 30 02 00 00 	movb   $0x30,0x230(%rsp)
   11668:	30 
   11669:	8d 50 02             	lea    0x2(%rax),%edx
   1166c:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   11673:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1167a:	83 c0 01             	add    $0x1,%eax
   1167d:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11684:	83 f8 07             	cmp    $0x7,%eax
   11687:	7e 1f                	jle    116a8 <__vfprintf+0x4e8>
   11689:	85 d2                	test   %edx,%edx
   1168b:	0f 85 df 14 00 00    	jne    12b70 <__vfprintf+0x19b0>
   11691:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   11698:	00 00 00 00 
   1169c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   116a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   116a8:	41 81 fc 80 00 00 00 	cmp    $0x80,%r12d
   116af:	0f 84 db 0d 00 00    	je     12490 <__vfprintf+0x12d0>
   116b5:	44 8b 7c 24 48       	mov    0x48(%rsp),%r15d
   116ba:	44 2b 7c 24 40       	sub    0x40(%rsp),%r15d
   116bf:	45 85 ff             	test   %r15d,%r15d
   116c2:	0f 8f 90 0c 00 00    	jg     12358 <__vfprintf+0x1198>
   116c8:	f7 04 24 00 01 00 00 	testl  $0x100,(%rsp)
   116cf:	0f 85 2b 0a 00 00    	jne    12100 <__vfprintf+0xf40>
   116d5:	48 63 44 24 40       	movslq 0x40(%rsp),%rax
   116da:	4d 89 02             	mov    %r8,(%r10)
   116dd:	48 89 c1             	mov    %rax,%rcx
   116e0:	49 89 42 08          	mov    %rax,0x8(%r10)
   116e4:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   116eb:	03 8c 24 fc 00 00 00 	add    0xfc(%rsp),%ecx
   116f2:	83 c0 01             	add    $0x1,%eax
   116f5:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   116fc:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   11703:	83 f8 07             	cmp    $0x7,%eax
   11706:	0f 8e 3c 0c 00 00    	jle    12348 <__vfprintf+0x1188>
   1170c:	85 c9                	test   %ecx,%ecx
   1170e:	0f 85 e8 0f 00 00    	jne    126fc <__vfprintf+0x153c>
   11714:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1171b:	00 00 00 00 
   1171f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11724:	f6 04 24 04          	testb  $0x4,(%rsp)
   11728:	74 11                	je     1173b <__vfprintf+0x57b>
   1172a:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
   1172f:	41 29 dc             	sub    %ebx,%r12d
   11732:	45 85 e4             	test   %r12d,%r12d
   11735:	0f 8f 35 11 00 00    	jg     12870 <__vfprintf+0x16b0>
   1173b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   1173f:	39 d8                	cmp    %ebx,%eax
   11741:	0f 4d d8             	cmovge %eax,%ebx
   11744:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   11749:	2b 44 24 28          	sub    0x28(%rsp),%eax
   1174d:	39 c3                	cmp    %eax,%ebx
   1174f:	0f 8f fb fc ff ff    	jg     11450 <__vfprintf+0x290>
   11755:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   1175c:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   11760:	85 d2                	test   %edx,%edx
   11762:	0f 85 80 0e 00 00    	jne    125e8 <__vfprintf+0x1428>
   11768:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1176f:	00 00 00 00 
   11773:	e9 58 fb ff ff       	jmp    112d0 <__vfprintf+0x110>
   11778:	83 fb 61             	cmp    $0x61,%ebx
   1177b:	ba 78 00 00 00       	mov    $0x78,%edx
   11780:	b8 58 00 00 00       	mov    $0x58,%eax
   11785:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1178a:	0f 44 c2             	cmove  %edx,%eax
   1178d:	48 8d 0d cc 14 01 00 	lea    0x114cc(%rip),%rcx        # 22c60 <xdigs_upper.3330>
   11794:	48 8d 15 d5 14 01 00 	lea    0x114d5(%rip),%rdx        # 22c70 <xdigs_lower.3329>
   1179b:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   117a0:	48 0f 45 d1          	cmovne %rcx,%rdx
   117a4:	b9 50 00 00 00       	mov    $0x50,%ecx
   117a9:	88 84 24 31 02 00 00 	mov    %al,0x231(%rsp)
   117b0:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
   117b7:	00 
   117b8:	ba 70 00 00 00       	mov    $0x70,%edx
   117bd:	0f 45 d1             	cmovne %ecx,%edx
   117c0:	41 81 fb 00 00 00 80 	cmp    $0x80000000,%r11d
   117c7:	41 83 d3 00          	adc    $0x0,%r11d
   117cb:	88 94 24 8b 00 00 00 	mov    %dl,0x8b(%rsp)
   117d2:	48 85 ff             	test   %rdi,%rdi
   117d5:	74 19                	je     117f0 <__vfprintf+0x630>
   117d7:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   117dc:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   117e1:	e8 5a 31 00 00       	call   14940 <__freedtoa>
   117e6:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   117eb:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   117f0:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   117f4:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   117fb:	00 
   117fc:	8d 69 01             	lea    0x1(%rcx),%ebp
   117ff:	f6 04 24 08          	testb  $0x8,(%rsp)
   11803:	0f 84 29 1d 00 00    	je     13532 <__vfprintf+0x2372>
   11809:	48 85 c0             	test   %rax,%rax
   1180c:	0f 84 66 24 00 00    	je     13c78 <__vfprintf+0x2ab8>
   11812:	48 63 d1             	movslq %ecx,%rdx
   11815:	48 c1 e2 04          	shl    $0x4,%rdx
   11819:	db 2c 10             	fldt   (%rax,%rdx,1)
   1181c:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   11821:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   11828:	00 
   11829:	44 89 de             	mov    %r11d,%esi
   1182c:	d9 c0                	fld    %st(0)
   1182e:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   11835:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   1183c:	00 
   1183d:	48 83 ec 10          	sub    $0x10,%rsp
   11841:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   11848:	00 
   11849:	4c 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%r8
   11850:	00 
   11851:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   11856:	db 3c 24             	fstpt  (%rsp)
   11859:	e8 92 4a 00 00       	call   162f0 <__hldtoa>
   1185e:	5e                   	pop    %rsi
   1185f:	5f                   	pop    %rdi
   11860:	48 85 c0             	test   %rax,%rax
   11863:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   11868:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1186d:	49 89 c0             	mov    %rax,%r8
   11870:	0f 84 24 1d 00 00    	je     1359a <__vfprintf+0x23da>
   11876:	45 85 db             	test   %r11d,%r11d
   11879:	79 0b                	jns    11886 <__vfprintf+0x6c6>
   1187b:	44 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%r11d
   11882:	00 
   11883:	45 29 c3             	sub    %r8d,%r11d
   11886:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   1188d:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   11894:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   1189a:	0f 84 4d 20 00 00    	je     138ed <__vfprintf+0x272d>
   118a0:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   118a7:	00 
   118a8:	85 c0                	test   %eax,%eax
   118aa:	0f 85 fb 00 00 00    	jne    119ab <__vfprintf+0x7eb>
   118b0:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   118b4:	e9 0a 01 00 00       	jmp    119c3 <__vfprintf+0x803>
   118b9:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   118be:	88 9c 24 8b 00 00 00 	mov    %bl,0x8b(%rsp)
   118c5:	45 85 db             	test   %r11d,%r11d
   118c8:	0f 88 ac 1d 00 00    	js     1367a <__vfprintf+0x24ba>
   118ce:	41 83 c3 01          	add    $0x1,%r11d
   118d2:	45 85 db             	test   %r11d,%r11d
   118d5:	b8 06 00 00 00       	mov    $0x6,%eax
   118da:	44 0f 48 d8          	cmovs  %eax,%r11d
   118de:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   118e3:	48 85 ff             	test   %rdi,%rdi
   118e6:	74 19                	je     11901 <__vfprintf+0x741>
   118e8:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   118ed:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   118f2:	e8 49 30 00 00       	call   14940 <__freedtoa>
   118f7:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   118fc:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   11901:	8b 74 24 38          	mov    0x38(%rsp),%esi
   11905:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   1190c:	00 
   1190d:	8d 6e 01             	lea    0x1(%rsi),%ebp
   11910:	f6 04 24 08          	testb  $0x8,(%rsp)
   11914:	0f 84 6c 13 00 00    	je     12c86 <__vfprintf+0x1ac6>
   1191a:	48 85 c0             	test   %rax,%rax
   1191d:	0f 84 32 1d 00 00    	je     13655 <__vfprintf+0x2495>
   11923:	48 63 d6             	movslq %esi,%rdx
   11926:	48 c1 e2 04          	shl    $0x4,%rdx
   1192a:	db 2c 10             	fldt   (%rax,%rdx,1)
   1192d:	31 f6                	xor    %esi,%esi
   1192f:	44 89 da             	mov    %r11d,%edx
   11932:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   11939:	00 
   1193a:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   1193f:	40 0f 94 c6          	sete   %sil
   11943:	4c 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%r8
   1194a:	00 
   1194b:	48 8d 8c 24 bc 00 00 	lea    0xbc(%rsp),%rcx
   11952:	00 
   11953:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   11958:	83 c6 02             	add    $0x2,%esi
   1195b:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
   11962:	00 
   11963:	4c 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%r9
   1196a:	00 
   1196b:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   11972:	e8 09 4c 00 00       	call   16580 <__ldtoa>
   11977:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   1197c:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   11981:	48 85 c0             	test   %rax,%rax
   11984:	49 89 c0             	mov    %rax,%r8
   11987:	0f 84 0d 1c 00 00    	je     1359a <__vfprintf+0x23da>
   1198d:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   11994:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   1199b:	00 
   1199c:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   119a3:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   119a7:	85 c0                	test   %eax,%eax
   119a9:	74 0c                	je     119b7 <__vfprintf+0x7f7>
   119ab:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   119b2:	2d 
   119b3:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   119b7:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   119bd:	0f 84 96 14 00 00    	je     12e59 <__vfprintf+0x1c99>
   119c3:	8b 0c 24             	mov    (%rsp),%ecx
   119c6:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   119cd:	00 
   119ce:	83 e3 df             	and    $0xffffffdf,%ebx
   119d1:	41 89 cc             	mov    %ecx,%r12d
   119d4:	4c 29 c0             	sub    %r8,%rax
   119d7:	89 84 24 98 00 00 00 	mov    %eax,0x98(%rsp)
   119de:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   119e5:	83 fb 47             	cmp    $0x47,%ebx
   119e8:	75 17                	jne    11a01 <__vfprintf+0x841>
   119ea:	83 e1 01             	and    $0x1,%ecx
   119ed:	83 fe fd             	cmp    $0xfffffffd,%esi
   119f0:	7c 09                	jl     119fb <__vfprintf+0x83b>
   119f2:	41 39 f3             	cmp    %esi,%r11d
   119f5:	0f 8d 1d 21 00 00    	jge    13b18 <__vfprintf+0x2958>
   119fb:	85 c9                	test   %ecx,%ecx
   119fd:	44 0f 44 d8          	cmove  %eax,%r11d
   11a01:	8b 0c 24             	mov    (%rsp),%ecx
   11a04:	44 89 df             	mov    %r11d,%edi
   11a07:	83 e1 01             	and    $0x1,%ecx
   11a0a:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   11a11:	00 
   11a12:	0f 85 9e 16 00 00    	jne    130b6 <__vfprintf+0x1ef6>
   11a18:	85 f6                	test   %esi,%esi
   11a1a:	bb 01 00 00 00       	mov    $0x1,%ebx
   11a1f:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   11a26:	00 
   11a27:	0f 4f de             	cmovg  %esi,%ebx
   11a2a:	09 f9                	or     %edi,%ecx
   11a2c:	41 89 cb             	mov    %ecx,%r11d
   11a2f:	0f 85 ea 13 00 00    	jne    12e1f <__vfprintf+0x1c5f>
   11a35:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   11a39:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   11a40:	00 
   11a41:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   11a46:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   11a4d:	44 89 24 24          	mov    %r12d,(%rsp)
   11a51:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   11a58:	00 
   11a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11a60:	3c 01                	cmp    $0x1,%al
   11a62:	83 db ff             	sbb    $0xffffffff,%ebx
   11a65:	e9 46 fb ff ff       	jmp    115b0 <__vfprintf+0x3f0>
   11a6a:	8d 43 fe             	lea    -0x2(%rbx),%eax
   11a6d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11a72:	88 84 24 8b 00 00 00 	mov    %al,0x8b(%rsp)
   11a79:	45 85 db             	test   %r11d,%r11d
   11a7c:	0f 85 50 fe ff ff    	jne    118d2 <__vfprintf+0x712>
   11a82:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   11a88:	e9 51 fe ff ff       	jmp    118de <__vfprintf+0x71e>
   11a8d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11a92:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   11a99:	00 
   11a9a:	e9 33 fe ff ff       	jmp    118d2 <__vfprintf+0x712>
   11a9f:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11aa4:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   11aa9:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   11ab0:	00 
   11ab1:	8d 50 01             	lea    0x1(%rax),%edx
   11ab4:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   11abb:	0f 84 d7 14 00 00    	je     12f98 <__vfprintf+0x1dd8>
   11ac1:	48 85 c9             	test   %rcx,%rcx
   11ac4:	0f 84 b8 20 00 00    	je     13b82 <__vfprintf+0x29c2>
   11aca:	48 c1 e0 04          	shl    $0x4,%rax
   11ace:	48 8b 04 01          	mov    (%rcx,%rax,1),%rax
   11ad2:	48 89 c1             	mov    %rax,%rcx
   11ad5:	48 85 c0             	test   %rax,%rax
   11ad8:	0f 88 bf 15 00 00    	js     1309d <__vfprintf+0x1edd>
   11ade:	45 85 db             	test   %r11d,%r11d
   11ae1:	0f 88 3c 11 00 00    	js     12c23 <__vfprintf+0x1a63>
   11ae7:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   11aee:	45 85 db             	test   %r11d,%r11d
   11af1:	0f 85 2c 11 00 00    	jne    12c23 <__vfprintf+0x1a63>
   11af7:	48 85 c9             	test   %rcx,%rcx
   11afa:	0f 85 23 11 00 00    	jne    12c23 <__vfprintf+0x1a63>
   11b00:	89 54 24 38          	mov    %edx,0x38(%rsp)
   11b04:	0f 1f 40 00          	nopl   0x0(%rax)
   11b08:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   11b0f:	00 
   11b10:	31 db                	xor    %ebx,%ebx
   11b12:	45 31 db             	xor    %r11d,%r11d
   11b15:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   11b1c:	00 
   11b1d:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   11b24:	00 
   11b25:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   11b2c:	00 
   11b2d:	4c 8d 84 24 a4 02 00 	lea    0x2a4(%rsp),%r8
   11b34:	00 
   11b35:	e9 26 ff ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   11b3a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   11b41:	00 
   11b42:	3c 24                	cmp    $0x24,%al
   11b44:	0f 84 08 1f 00 00    	je     13a52 <__vfprintf+0x2892>
   11b4a:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   11b4f:	8d 48 01             	lea    0x1(%rax),%ecx
   11b52:	48 85 d2             	test   %rdx,%rdx
   11b55:	0f 84 ff 22 00 00    	je     13e5a <__vfprintf+0x2c9a>
   11b5b:	48 c1 e0 04          	shl    $0x4,%rax
   11b5f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   11b62:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   11b66:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   11b6b:	45 85 c0             	test   %r8d,%r8d
   11b6e:	0f 89 eb 21 00 00    	jns    13d5f <__vfprintf+0x2b9f>
   11b74:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   11b78:	3d 00 00 00 80       	cmp    $0x80000000,%eax
   11b7d:	0f 84 cd f8 ff ff    	je     11450 <__vfprintf+0x290>
   11b83:	f7 d8                	neg    %eax
   11b85:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   11b89:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   11b8d:	83 0c 24 04          	orl    $0x4,(%rsp)
   11b91:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11b96:	e9 4e f8 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11b9b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11ba0:	80 fb 6c             	cmp    $0x6c,%bl
   11ba3:	0f 84 31 1d 00 00    	je     138da <__vfprintf+0x271a>
   11ba9:	83 0c 24 10          	orl    $0x10,(%rsp)
   11bad:	e9 37 f8 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11bb2:	83 0c 24 10          	orl    $0x10,(%rsp)
   11bb6:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11bbb:	e9 e4 fe ff ff       	jmp    11aa4 <__vfprintf+0x8e4>
   11bc0:	8b 44 24 38          	mov    0x38(%rsp),%eax
   11bc4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11bc9:	44 8d 60 01          	lea    0x1(%rax),%r12d
   11bcd:	f6 04 24 10          	testb  $0x10,(%rsp)
   11bd1:	0f 84 0b 18 00 00    	je     133e2 <__vfprintf+0x2222>
   11bd7:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   11bdc:	48 85 ff             	test   %rdi,%rdi
   11bdf:	74 19                	je     11bfa <__vfprintf+0xa3a>
   11be1:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   11be6:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   11beb:	e8 f0 c3 ff ff       	call   dfe0 <dlfree>
   11bf0:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   11bf5:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   11bfa:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   11c01:	00 
   11c02:	48 85 d2             	test   %rdx,%rdx
   11c05:	0f 84 2c 21 00 00    	je     13d37 <__vfprintf+0x2b77>
   11c0b:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   11c10:	48 c1 e0 04          	shl    $0x4,%rax
   11c14:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   11c18:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   11c1d:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   11c23:	0f 84 96 1d 00 00    	je     139bf <__vfprintf+0x27ff>
   11c29:	45 85 db             	test   %r11d,%r11d
   11c2c:	0f 88 2e 23 00 00    	js     13f60 <__vfprintf+0x2da0>
   11c32:	4d 63 fb             	movslq %r11d,%r15
   11c35:	41 83 fb 7f          	cmp    $0x7f,%r11d
   11c39:	0f 8f 57 22 00 00    	jg     13e96 <__vfprintf+0x2cd6>
   11c3f:	49 8d 7f 01          	lea    0x1(%r15),%rdi
   11c43:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   11c48:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   11c4d:	e8 1e a9 ff ff       	call   c570 <dlmalloc>
   11c52:	48 85 c0             	test   %rax,%rax
   11c55:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11c5a:	0f 84 e3 22 00 00    	je     13f43 <__vfprintf+0x2d83>
   11c60:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   11c65:	48 8d 9c 24 10 01 00 	lea    0x110(%rsp),%rbx
   11c6c:	00 
   11c6d:	31 f6                	xor    %esi,%esi
   11c6f:	ba 08 00 00 00       	mov    $0x8,%edx
   11c74:	48 89 df             	mov    %rbx,%rdi
   11c77:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   11c7e:	00 
   11c7f:	e8 7c db ff ff       	call   f800 <memset>
   11c84:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   11c89:	48 89 d9             	mov    %rbx,%rcx
   11c8c:	4c 89 fa             	mov    %r15,%rdx
   11c8f:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   11c96:	00 
   11c97:	4c 89 c7             	mov    %r8,%rdi
   11c9a:	e8 71 59 00 00       	call   17610 <wcsrtombs>
   11c9f:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   11ca4:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   11ca9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   11cad:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   11cb2:	0f 84 1e 25 00 00    	je     141d6 <__vfprintf+0x3016>
   11cb8:	41 c6 04 00 00       	movb   $0x0,(%r8,%rax,1)
   11cbd:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   11cc2:	e9 47 17 00 00       	jmp    1340e <__vfprintf+0x224e>
   11cc7:	81 0c 24 00 02 00 00 	orl    $0x200,(%rsp)
   11cce:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11cd3:	e9 11 f7 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11cd8:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   11cdc:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   11ce3:	00 
   11ce4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11ce9:	8d 71 01             	lea    0x1(%rcx),%esi
   11cec:	48 85 c0             	test   %rax,%rax
   11cef:	0f 84 3f 1e 00 00    	je     13b34 <__vfprintf+0x2974>
   11cf5:	48 63 d1             	movslq %ecx,%rdx
   11cf8:	48 c1 e2 04          	shl    $0x4,%rdx
   11cfc:	48 8b 0c 10          	mov    (%rax,%rdx,1),%rcx
   11d00:	c6 84 24 31 02 00 00 	movb   $0x78,0x231(%rsp)
   11d07:	78 
   11d08:	48 8d 05 61 0f 01 00 	lea    0x10f61(%rip),%rax        # 22c70 <xdigs_lower.3329>
   11d0f:	89 74 24 38          	mov    %esi,0x38(%rsp)
   11d13:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   11d1a:	00 
   11d1b:	b8 02 00 00 00       	mov    $0x2,%eax
   11d20:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   11d27:	00 
   11d28:	45 85 db             	test   %r11d,%r11d
   11d2b:	78 1b                	js     11d48 <__vfprintf+0xb88>
   11d2d:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   11d34:	48 85 c9             	test   %rcx,%rcx
   11d37:	75 0f                	jne    11d48 <__vfprintf+0xb88>
   11d39:	45 85 db             	test   %r11d,%r11d
   11d3c:	0f 84 c6 fd ff ff    	je     11b08 <__vfprintf+0x948>
   11d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11d48:	83 f8 01             	cmp    $0x1,%eax
   11d4b:	0f 84 d6 0e 00 00    	je     12c27 <__vfprintf+0x1a67>
   11d51:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   11d58:	00 
   11d59:	49 89 d8             	mov    %rbx,%r8
   11d5c:	83 f8 02             	cmp    $0x2,%eax
   11d5f:	75 5f                	jne    11dc0 <__vfprintf+0xc00>
   11d61:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   11d68:	00 
   11d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11d70:	48 89 c8             	mov    %rcx,%rax
   11d73:	49 83 e8 01          	sub    $0x1,%r8
   11d77:	83 e0 0f             	and    $0xf,%eax
   11d7a:	48 c1 e9 04          	shr    $0x4,%rcx
   11d7e:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   11d82:	41 88 00             	mov    %al,(%r8)
   11d85:	75 e9                	jne    11d70 <__vfprintf+0xbb0>
   11d87:	4c 29 c3             	sub    %r8,%rbx
   11d8a:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   11d8e:	83 fb 64             	cmp    $0x64,%ebx
   11d91:	0f 8f 7f 1b 00 00    	jg     13916 <__vfprintf+0x2756>
   11d97:	41 39 db             	cmp    %ebx,%r11d
   11d9a:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   11d9f:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   11da6:	00 
   11da7:	41 0f 4d db          	cmovge %r11d,%ebx
   11dab:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   11db2:	00 
   11db3:	e9 a8 fc ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   11db8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11dbf:	00 
   11dc0:	89 c8                	mov    %ecx,%eax
   11dc2:	4c 89 c2             	mov    %r8,%rdx
   11dc5:	49 83 e8 01          	sub    $0x1,%r8
   11dc9:	83 e0 07             	and    $0x7,%eax
   11dcc:	83 c0 30             	add    $0x30,%eax
   11dcf:	48 c1 e9 03          	shr    $0x3,%rcx
   11dd3:	41 88 00             	mov    %al,(%r8)
   11dd6:	75 e8                	jne    11dc0 <__vfprintf+0xc00>
   11dd8:	3c 30                	cmp    $0x30,%al
   11dda:	74 ab                	je     11d87 <__vfprintf+0xbc7>
   11ddc:	f6 04 24 01          	testb  $0x1,(%rsp)
   11de0:	74 a5                	je     11d87 <__vfprintf+0xbc7>
   11de2:	41 c6 40 ff 30       	movb   $0x30,-0x1(%r8)
   11de7:	4c 8d 42 fe          	lea    -0x2(%rdx),%r8
   11deb:	eb 9a                	jmp    11d87 <__vfprintf+0xbc7>
   11ded:	83 0c 24 20          	orl    $0x20,(%rsp)
   11df1:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11df6:	e9 ee f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11dfb:	8b 44 24 38          	mov    0x38(%rsp),%eax
   11dff:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11e04:	44 8d 78 01          	lea    0x1(%rax),%r15d
   11e08:	f6 04 24 10          	testb  $0x10,(%rsp)
   11e0c:	0f 85 64 1c 00 00    	jne    13a76 <__vfprintf+0x28b6>
   11e12:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   11e19:	00 
   11e1a:	48 85 d2             	test   %rdx,%rdx
   11e1d:	0f 84 22 1e 00 00    	je     13c45 <__vfprintf+0x2a85>
   11e23:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   11e28:	48 c1 e0 04          	shl    $0x4,%rax
   11e2c:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   11e30:	88 84 24 40 02 00 00 	mov    %al,0x240(%rsp)
   11e37:	bb 01 00 00 00       	mov    $0x1,%ebx
   11e3c:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   11e43:	00 
   11e44:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   11e4b:	00 
   11e4c:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   11e53:	00 
   11e54:	4d 89 e0             	mov    %r12,%r8
   11e57:	44 89 7c 24 38       	mov    %r15d,0x38(%rsp)
   11e5c:	e9 3c f7 ff ff       	jmp    1159d <__vfprintf+0x3dd>
   11e61:	81 0c 24 00 04 00 00 	orl    $0x400,(%rsp)
   11e68:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11e6d:	e9 77 f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11e72:	81 0c 24 00 10 00 00 	orl    $0x1000,(%rsp)
   11e79:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11e7e:	e9 66 f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11e83:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   11e8a:	00 
   11e8b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11e90:	0f 85 53 f5 ff ff    	jne    113e9 <__vfprintf+0x229>
   11e96:	c6 84 24 b3 00 00 00 	movb   $0x20,0xb3(%rsp)
   11e9d:	20 
   11e9e:	e9 46 f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11ea3:	83 0c 24 01          	orl    $0x1,(%rsp)
   11ea7:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11eac:	e9 38 f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11eb1:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11eb6:	e9 2e f5 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11ebb:	41 0f be 14 24       	movsbl (%r12),%edx
   11ec0:	4d 89 e7             	mov    %r12,%r15
   11ec3:	31 db                	xor    %ebx,%ebx
   11ec5:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   11ec8:	89 d0                	mov    %edx,%eax
   11eca:	83 f9 09             	cmp    $0x9,%ecx
   11ecd:	76 2f                	jbe    11efe <__vfprintf+0xd3e>
   11ecf:	e9 66 fc ff ff       	jmp    11b3a <__vfprintf+0x97a>
   11ed4:	0f 1f 40 00          	nopl   0x0(%rax)
   11ed8:	49 83 c7 01          	add    $0x1,%r15
   11edc:	8d 5c 02 d0          	lea    -0x30(%rdx,%rax,1),%ebx
   11ee0:	41 0f be 17          	movsbl (%r15),%edx
   11ee4:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   11ee7:	89 d0                	mov    %edx,%eax
   11ee9:	83 f9 09             	cmp    $0x9,%ecx
   11eec:	0f 87 48 fc ff ff    	ja     11b3a <__vfprintf+0x97a>
   11ef2:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   11ef8:	0f 8f 52 f5 ff ff    	jg     11450 <__vfprintf+0x290>
   11efe:	8d 04 9b             	lea    (%rbx,%rbx,4),%eax
   11f01:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   11f06:	01 c0                	add    %eax,%eax
   11f08:	29 d1                	sub    %edx,%ecx
   11f0a:	39 c1                	cmp    %eax,%ecx
   11f0c:	7d ca                	jge    11ed8 <__vfprintf+0xd18>
   11f0e:	e9 3d f5 ff ff       	jmp    11450 <__vfprintf+0x290>
   11f13:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11f18:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   11f1d:	83 fb 2a             	cmp    $0x2a,%ebx
   11f20:	0f 84 7a 23 00 00    	je     142a0 <__vfprintf+0x30e0>
   11f26:	8d 43 d0             	lea    -0x30(%rbx),%eax
   11f29:	83 f8 09             	cmp    $0x9,%eax
   11f2c:	0f 87 b3 21 00 00    	ja     140e5 <__vfprintf+0x2f25>
   11f32:	b8 2f 00 00 80       	mov    $0x8000002f,%eax
   11f37:	39 d8                	cmp    %ebx,%eax
   11f39:	0f 88 11 f5 ff ff    	js     11450 <__vfprintf+0x290>
   11f3f:	31 c0                	xor    %eax,%eax
   11f41:	eb 27                	jmp    11f6a <__vfprintf+0xdaa>
   11f43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11f48:	41 81 fc cc cc cc 0c 	cmp    $0xccccccc,%r12d
   11f4f:	0f 8f fb f4 ff ff    	jg     11450 <__vfprintf+0x290>
   11f55:	43 8d 04 a4          	lea    (%r12,%r12,4),%eax
   11f59:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   11f5e:	01 c0                	add    %eax,%eax
   11f60:	29 da                	sub    %ebx,%edx
   11f62:	39 c2                	cmp    %eax,%edx
   11f64:	0f 8c e6 f4 ff ff    	jl     11450 <__vfprintf+0x290>
   11f6a:	49 83 c7 01          	add    $0x1,%r15
   11f6e:	44 8d 64 03 d0       	lea    -0x30(%rbx,%rax,1),%r12d
   11f73:	41 0f be 5f ff       	movsbl -0x1(%r15),%ebx
   11f78:	8d 43 d0             	lea    -0x30(%rbx),%eax
   11f7b:	83 f8 09             	cmp    $0x9,%eax
   11f7e:	76 c8                	jbe    11f48 <__vfprintf+0xd88>
   11f80:	83 fb 24             	cmp    $0x24,%ebx
   11f83:	0f 84 f0 23 00 00    	je     14379 <__vfprintf+0x31b9>
   11f89:	45 89 e3             	mov    %r12d,%r11d
   11f8c:	4d 89 fc             	mov    %r15,%r12
   11f8f:	e9 59 f4 ff ff       	jmp    113ed <__vfprintf+0x22d>
   11f94:	81 0c 24 80 00 00 00 	orl    $0x80,(%rsp)
   11f9b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11fa0:	e9 44 f4 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11fa5:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11faa:	80 fb 68             	cmp    $0x68,%bl
   11fad:	0f 84 4d 19 00 00    	je     13900 <__vfprintf+0x2740>
   11fb3:	83 0c 24 40          	orl    $0x40,(%rsp)
   11fb7:	e9 2d f4 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11fbc:	83 0c 24 08          	orl    $0x8,(%rsp)
   11fc0:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11fc5:	e9 1f f4 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11fca:	c6 84 24 b3 00 00 00 	movb   $0x2b,0xb3(%rsp)
   11fd1:	2b 
   11fd2:	41 0f be 1c 24       	movsbl (%r12),%ebx
   11fd7:	e9 0d f4 ff ff       	jmp    113e9 <__vfprintf+0x229>
   11fdc:	83 0c 24 10          	orl    $0x10,(%rsp)
   11fe0:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   11fe5:	8b 74 24 38          	mov    0x38(%rsp),%esi
   11fe9:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   11ff0:	00 
   11ff1:	8d 46 01             	lea    0x1(%rsi),%eax
   11ff4:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   11ffb:	0f 84 37 0f 00 00    	je     12f38 <__vfprintf+0x1d78>
   12001:	48 85 c9             	test   %rcx,%rcx
   12004:	0f 84 bf 16 00 00    	je     136c9 <__vfprintf+0x2509>
   1200a:	48 63 d6             	movslq %esi,%rdx
   1200d:	48 c1 e2 04          	shl    $0x4,%rdx
   12011:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   12015:	89 44 24 38          	mov    %eax,0x38(%rsp)
   12019:	31 c0                	xor    %eax,%eax
   1201b:	e9 00 fd ff ff       	jmp    11d20 <__vfprintf+0xb60>
   12020:	83 0c 24 10          	orl    $0x10,(%rsp)
   12024:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   12029:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1202d:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   12034:	00 
   12035:	8d 46 01             	lea    0x1(%rsi),%eax
   12038:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   1203f:	0f 84 ab 0f 00 00    	je     12ff0 <__vfprintf+0x1e30>
   12045:	48 85 c9             	test   %rcx,%rcx
   12048:	0f 84 ad 16 00 00    	je     136fb <__vfprintf+0x253b>
   1204e:	48 63 d6             	movslq %esi,%rdx
   12051:	48 c1 e2 04          	shl    $0x4,%rdx
   12055:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   12059:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1205d:	b8 01 00 00 00       	mov    $0x1,%eax
   12062:	e9 b9 fc ff ff       	jmp    11d20 <__vfprintf+0xb60>
   12067:	48 8d 05 02 0c 01 00 	lea    0x10c02(%rip),%rax        # 22c70 <xdigs_lower.3329>
   1206e:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   12073:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1207a:	00 
   1207b:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1207f:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   12086:	00 
   12087:	8d 46 01             	lea    0x1(%rsi),%eax
   1208a:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   12091:	0f 84 4a 0e 00 00    	je     12ee1 <__vfprintf+0x1d21>
   12097:	48 85 c9             	test   %rcx,%rcx
   1209a:	0f 84 90 16 00 00    	je     13730 <__vfprintf+0x2570>
   120a0:	48 63 d6             	movslq %esi,%rdx
   120a3:	48 c1 e2 04          	shl    $0x4,%rdx
   120a7:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   120ab:	f6 04 24 01          	testb  $0x1,(%rsp)
   120af:	0f 84 87 0c 00 00    	je     12d3c <__vfprintf+0x1b7c>
   120b5:	48 85 c9             	test   %rcx,%rcx
   120b8:	0f 84 7e 0c 00 00    	je     12d3c <__vfprintf+0x1b7c>
   120be:	89 44 24 38          	mov    %eax,0x38(%rsp)
   120c2:	b8 02 00 00 00       	mov    $0x2,%eax
   120c7:	88 9c 24 31 02 00 00 	mov    %bl,0x231(%rsp)
   120ce:	e9 4d fc ff ff       	jmp    11d20 <__vfprintf+0xb60>
   120d3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   120d8:	e9 08 ff ff ff       	jmp    11fe5 <__vfprintf+0xe25>
   120dd:	48 8d 05 7c 0b 01 00 	lea    0x10b7c(%rip),%rax        # 22c60 <xdigs_upper.3330>
   120e4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   120e9:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   120f0:	00 
   120f1:	eb 88                	jmp    1207b <__vfprintf+0xebb>
   120f3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   120f8:	e9 2c ff ff ff       	jmp    12029 <__vfprintf+0xe69>
   120fd:	0f 1f 00             	nopl   (%rax)
   12100:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   12107:	00 
   12108:	0f 85 02 05 00 00    	jne    12610 <__vfprintf+0x1450>
   1210e:	8b 8c 24 bc 00 00 00 	mov    0xbc(%rsp),%ecx
   12115:	85 c9                	test   %ecx,%ecx
   12117:	0f 8e 2d 0c 00 00    	jle    12d4a <__vfprintf+0x1b8a>
   1211d:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   12124:	00 
   12125:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   1212c:	4c 29 c5             	sub    %r8,%rbp
   1212f:	39 e8                	cmp    %ebp,%eax
   12131:	0f 4e e8             	cmovle %eax,%ebp
   12134:	85 ed                	test   %ebp,%ebp
   12136:	7e 50                	jle    12188 <__vfprintf+0xfc8>
   12138:	48 63 c5             	movslq %ebp,%rax
   1213b:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   12142:	4d 89 02             	mov    %r8,(%r10)
   12145:	49 83 c2 10          	add    $0x10,%r10
   12149:	49 89 42 f8          	mov    %rax,-0x8(%r10)
   1214d:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   12154:	01 ea                	add    %ebp,%edx
   12156:	83 c0 01             	add    $0x1,%eax
   12159:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   12160:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   12167:	83 f8 07             	cmp    $0x7,%eax
   1216a:	7e 1c                	jle    12188 <__vfprintf+0xfc8>
   1216c:	85 d2                	test   %edx,%edx
   1216e:	0f 85 ac 17 00 00    	jne    13920 <__vfprintf+0x2760>
   12174:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1217b:	00 00 00 00 
   1217f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12184:	0f 1f 40 00          	nopl   0x0(%rax)
   12188:	85 ed                	test   %ebp,%ebp
   1218a:	b8 00 00 00 00       	mov    $0x0,%eax
   1218f:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
   12196:	00 
   12197:	0f 48 e8             	cmovs  %eax,%ebp
   1219a:	41 29 ec             	sub    %ebp,%r12d
   1219d:	45 85 e4             	test   %r12d,%r12d
   121a0:	0f 8f 28 10 00 00    	jg     131ce <__vfprintf+0x200e>
   121a6:	48 63 84 24 8c 00 00 	movslq 0x8c(%rsp),%rax
   121ad:	00 
   121ae:	49 01 c0             	add    %rax,%r8
   121b1:	8b 04 24             	mov    (%rsp),%eax
   121b4:	83 e0 01             	and    $0x1,%eax
   121b7:	44 09 d8             	or     %r11d,%eax
   121ba:	0f 84 64 f5 ff ff    	je     11724 <__vfprintf+0x564>
   121c0:	48 8d 05 20 09 01 00 	lea    0x10920(%rip),%rax        # 22ae7 <_ZZ17ecall_malloc_freeE8__func__+0x2b7>
   121c7:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   121ce:	00 
   121cf:	49 83 c2 10          	add    $0x10,%r10
   121d3:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   121d7:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   121de:	8d 50 01             	lea    0x1(%rax),%edx
   121e1:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   121e8:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   121ef:	83 c0 01             	add    $0x1,%eax
   121f2:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   121f9:	83 f8 07             	cmp    $0x7,%eax
   121fc:	7e 22                	jle    12220 <__vfprintf+0x1060>
   121fe:	85 d2                	test   %edx,%edx
   12200:	0f 85 9c 16 00 00    	jne    138a2 <__vfprintf+0x26e2>
   12206:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1220d:	00 00 00 00 
   12211:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12216:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1221d:	00 00 00 
   12220:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   12227:	00 
   12228:	4c 29 c5             	sub    %r8,%rbp
   1222b:	41 39 eb             	cmp    %ebp,%r11d
   1222e:	41 0f 4e eb          	cmovle %r11d,%ebp
   12232:	85 ed                	test   %ebp,%ebp
   12234:	7e 3b                	jle    12271 <__vfprintf+0x10b1>
   12236:	48 63 c5             	movslq %ebp,%rax
   12239:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   12240:	4d 89 02             	mov    %r8,(%r10)
   12243:	49 89 42 08          	mov    %rax,0x8(%r10)
   12247:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   1224e:	01 ea                	add    %ebp,%edx
   12250:	83 c0 01             	add    $0x1,%eax
   12253:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1225a:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   12261:	83 f8 07             	cmp    $0x7,%eax
   12264:	0f 8f e6 0d 00 00    	jg     13050 <__vfprintf+0x1e90>
   1226a:	49 83 c2 10          	add    $0x10,%r10
   1226e:	41 29 eb             	sub    %ebp,%r11d
   12271:	45 85 db             	test   %r11d,%r11d
   12274:	0f 8e aa f4 ff ff    	jle    11724 <__vfprintf+0x564>
   1227a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12281:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   12288:	41 83 fb 10          	cmp    $0x10,%r11d
   1228c:	0f 8e 5c 1d 00 00    	jle    13fee <__vfprintf+0x2e2e>
   12292:	48 8d 2d 77 9f 01 00 	lea    0x19f77(%rip),%rbp        # 2c210 <zeroes.3328>
   12299:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   1229d:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   122a2:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   122a9:	00 
   122aa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   122af:	4c 89 e3             	mov    %r12,%rbx
   122b2:	49 89 ed             	mov    %rbp,%r13
   122b5:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   122ba:	44 89 dd             	mov    %r11d,%ebp
   122bd:	eb 12                	jmp    122d1 <__vfprintf+0x1111>
   122bf:	90                   	nop
   122c0:	8d 7e 02             	lea    0x2(%rsi),%edi
   122c3:	49 83 c2 10          	add    $0x10,%r10
   122c7:	89 d6                	mov    %edx,%esi
   122c9:	83 ed 10             	sub    $0x10,%ebp
   122cc:	83 fd 10             	cmp    $0x10,%ebp
   122cf:	7e 3e                	jle    1230f <__vfprintf+0x114f>
   122d1:	83 c0 10             	add    $0x10,%eax
   122d4:	8d 56 01             	lea    0x1(%rsi),%edx
   122d7:	4d 89 2a             	mov    %r13,(%r10)
   122da:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   122e1:	00 
   122e2:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   122e9:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   122f0:	83 fa 07             	cmp    $0x7,%edx
   122f3:	7e cb                	jle    122c0 <__vfprintf+0x1100>
   122f5:	85 c0                	test   %eax,%eax
   122f7:	0f 85 0b 08 00 00    	jne    12b08 <__vfprintf+0x1948>
   122fd:	83 ed 10             	sub    $0x10,%ebp
   12300:	31 f6                	xor    %esi,%esi
   12302:	bf 01 00 00 00       	mov    $0x1,%edi
   12307:	4d 89 fa             	mov    %r15,%r10
   1230a:	83 fd 10             	cmp    $0x10,%ebp
   1230d:	7f c2                	jg     122d1 <__vfprintf+0x1111>
   1230f:	41 89 eb             	mov    %ebp,%r11d
   12312:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   12316:	4c 89 ed             	mov    %r13,%rbp
   12319:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   1231e:	49 63 d3             	movslq %r11d,%rdx
   12321:	44 01 d8             	add    %r11d,%eax
   12324:	49 89 2a             	mov    %rbp,(%r10)
   12327:	49 89 52 08          	mov    %rdx,0x8(%r10)
   1232b:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12332:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   12339:	83 ff 07             	cmp    $0x7,%edi
   1233c:	0f 8f b2 03 00 00    	jg     126f4 <__vfprintf+0x1534>
   12342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12348:	49 83 c2 10          	add    $0x10,%r10
   1234c:	e9 d3 f3 ff ff       	jmp    11724 <__vfprintf+0x564>
   12351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12358:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1235f:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   12366:	41 83 ff 10          	cmp    $0x10,%r15d
   1236a:	0f 8e 34 18 00 00    	jle    13ba4 <__vfprintf+0x29e4>
   12370:	48 8d 2d 99 9e 01 00 	lea    0x19e99(%rip),%rbp        # 2c210 <zeroes.3328>
   12377:	89 5c 24 78          	mov    %ebx,0x78(%rsp)
   1237b:	44 89 fb             	mov    %r15d,%ebx
   1237e:	4d 89 ef             	mov    %r13,%r15
   12381:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
   12388:	00 
   12389:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   1238e:	49 89 ee             	mov    %rbp,%r14
   12391:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   12398:	00 
   12399:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   1239e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   123a3:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   123a8:	eb 17                	jmp    123c1 <__vfprintf+0x1201>
   123aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   123b0:	8d 77 02             	lea    0x2(%rdi),%esi
   123b3:	49 83 c2 10          	add    $0x10,%r10
   123b7:	89 d7                	mov    %edx,%edi
   123b9:	83 eb 10             	sub    $0x10,%ebx
   123bc:	83 fb 10             	cmp    $0x10,%ebx
   123bf:	7e 3a                	jle    123fb <__vfprintf+0x123b>
   123c1:	83 c0 10             	add    $0x10,%eax
   123c4:	8d 57 01             	lea    0x1(%rdi),%edx
   123c7:	4d 89 32             	mov    %r14,(%r10)
   123ca:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   123d1:	00 
   123d2:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   123d9:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   123e0:	83 fa 07             	cmp    $0x7,%edx
   123e3:	7e cb                	jle    123b0 <__vfprintf+0x11f0>
   123e5:	85 c0                	test   %eax,%eax
   123e7:	75 77                	jne    12460 <__vfprintf+0x12a0>
   123e9:	83 eb 10             	sub    $0x10,%ebx
   123ec:	31 ff                	xor    %edi,%edi
   123ee:	be 01 00 00 00       	mov    $0x1,%esi
   123f3:	4d 89 ea             	mov    %r13,%r10
   123f6:	83 fb 10             	cmp    $0x10,%ebx
   123f9:	7f c6                	jg     123c1 <__vfprintf+0x1201>
   123fb:	4d 89 fd             	mov    %r15,%r13
   123fe:	4c 89 f5             	mov    %r14,%rbp
   12401:	41 89 df             	mov    %ebx,%r15d
   12404:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   12409:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1240e:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
   12412:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   12419:	00 
   1241a:	49 63 d7             	movslq %r15d,%rdx
   1241d:	44 01 f8             	add    %r15d,%eax
   12420:	49 89 2a             	mov    %rbp,(%r10)
   12423:	49 83 c2 10          	add    $0x10,%r10
   12427:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1242b:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12432:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   12439:	83 fe 07             	cmp    $0x7,%esi
   1243c:	0f 8e 86 f2 ff ff    	jle    116c8 <__vfprintf+0x508>
   12442:	85 c0                	test   %eax,%eax
   12444:	0f 85 5f 0a 00 00    	jne    12ea9 <__vfprintf+0x1ce9>
   1244a:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12451:	00 00 00 00 
   12455:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1245a:	e9 69 f2 ff ff       	jmp    116c8 <__vfprintf+0x508>
   1245f:	90                   	nop
   12460:	4c 89 e6             	mov    %r12,%rsi
   12463:	48 89 ef             	mov    %rbp,%rdi
   12466:	e8 35 ed ff ff       	call   111a0 <__sprint.part.0>
   1246b:	85 c0                	test   %eax,%eax
   1246d:	0f 85 dd f0 ff ff    	jne    11550 <__vfprintf+0x390>
   12473:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1247a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12481:	4d 89 ea             	mov    %r13,%r10
   12484:	8d 77 01             	lea    0x1(%rdi),%esi
   12487:	e9 2d ff ff ff       	jmp    123b9 <__vfprintf+0x11f9>
   1248c:	0f 1f 40 00          	nopl   0x0(%rax)
   12490:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   12495:	41 29 df             	sub    %ebx,%r15d
   12498:	45 85 ff             	test   %r15d,%r15d
   1249b:	0f 8e 14 f2 ff ff    	jle    116b5 <__vfprintf+0x4f5>
   124a1:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   124a8:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   124af:	41 83 ff 10          	cmp    $0x10,%r15d
   124b3:	0f 8e d9 18 00 00    	jle    13d92 <__vfprintf+0x2bd2>
   124b9:	48 8d 2d 50 9d 01 00 	lea    0x19d50(%rip),%rbp        # 2c210 <zeroes.3328>
   124c0:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   124c7:	44 89 fb             	mov    %r15d,%ebx
   124ca:	4d 89 ef             	mov    %r13,%r15
   124cd:	4c 89 b4 24 a0 00 00 	mov    %r14,0xa0(%rsp)
   124d4:	00 
   124d5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   124da:	49 89 ee             	mov    %rbp,%r14
   124dd:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   124e4:	00 
   124e5:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   124ea:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   124ef:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   124f4:	eb 1b                	jmp    12511 <__vfprintf+0x1351>
   124f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   124fd:	00 00 00 
   12500:	8d 77 02             	lea    0x2(%rdi),%esi
   12503:	49 83 c2 10          	add    $0x10,%r10
   12507:	89 d7                	mov    %edx,%edi
   12509:	83 eb 10             	sub    $0x10,%ebx
   1250c:	83 fb 10             	cmp    $0x10,%ebx
   1250f:	7e 3a                	jle    1254b <__vfprintf+0x138b>
   12511:	83 c0 10             	add    $0x10,%eax
   12514:	8d 57 01             	lea    0x1(%rdi),%edx
   12517:	4d 89 32             	mov    %r14,(%r10)
   1251a:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   12521:	00 
   12522:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12529:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   12530:	83 fa 07             	cmp    $0x7,%edx
   12533:	7e cb                	jle    12500 <__vfprintf+0x1340>
   12535:	85 c0                	test   %eax,%eax
   12537:	75 7f                	jne    125b8 <__vfprintf+0x13f8>
   12539:	83 eb 10             	sub    $0x10,%ebx
   1253c:	31 ff                	xor    %edi,%edi
   1253e:	be 01 00 00 00       	mov    $0x1,%esi
   12543:	4d 89 ea             	mov    %r13,%r10
   12546:	83 fb 10             	cmp    $0x10,%ebx
   12549:	7f c6                	jg     12511 <__vfprintf+0x1351>
   1254b:	4d 89 fd             	mov    %r15,%r13
   1254e:	4c 89 f5             	mov    %r14,%rbp
   12551:	41 89 df             	mov    %ebx,%r15d
   12554:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   12559:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
   1255e:	8b 9c 24 80 00 00 00 	mov    0x80(%rsp),%ebx
   12565:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
   1256c:	00 
   1256d:	49 63 d7             	movslq %r15d,%rdx
   12570:	44 01 f8             	add    %r15d,%eax
   12573:	49 89 2a             	mov    %rbp,(%r10)
   12576:	49 83 c2 10          	add    $0x10,%r10
   1257a:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1257e:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12585:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   1258c:	83 fe 07             	cmp    $0x7,%esi
   1258f:	0f 8e 20 f1 ff ff    	jle    116b5 <__vfprintf+0x4f5>
   12595:	85 c0                	test   %eax,%eax
   12597:	0f 85 5f 12 00 00    	jne    137fc <__vfprintf+0x263c>
   1259d:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   125a4:	00 00 00 00 
   125a8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   125ad:	e9 03 f1 ff ff       	jmp    116b5 <__vfprintf+0x4f5>
   125b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   125b8:	4c 89 e6             	mov    %r12,%rsi
   125bb:	48 89 ef             	mov    %rbp,%rdi
   125be:	e8 dd eb ff ff       	call   111a0 <__sprint.part.0>
   125c3:	85 c0                	test   %eax,%eax
   125c5:	0f 85 85 ef ff ff    	jne    11550 <__vfprintf+0x390>
   125cb:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   125d2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   125d9:	4d 89 ea             	mov    %r13,%r10
   125dc:	8d 77 01             	lea    0x1(%rdi),%esi
   125df:	e9 25 ff ff ff       	jmp    12509 <__vfprintf+0x1349>
   125e4:	0f 1f 40 00          	nopl   0x0(%rax)
   125e8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   125ed:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   125f4:	00 
   125f5:	e8 a6 eb ff ff       	call   111a0 <__sprint.part.0>
   125fa:	85 c0                	test   %eax,%eax
   125fc:	0f 84 66 f1 ff ff    	je     11768 <__vfprintf+0x5a8>
   12602:	e9 49 ef ff ff       	jmp    11550 <__vfprintf+0x390>
   12607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1260e:	00 00 
   12610:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   12617:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1261e:	49 8d 4a 10          	lea    0x10(%r10),%rcx
   12622:	8d 56 01             	lea    0x1(%rsi),%edx
   12625:	41 83 fb 01          	cmp    $0x1,%r11d
   12629:	0f 8e 79 05 00 00    	jle    12ba8 <__vfprintf+0x19e8>
   1262f:	41 0f b6 38          	movzbl (%r8),%edi
   12633:	83 c0 02             	add    $0x2,%eax
   12636:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   1263d:	00 
   1263e:	c6 84 24 41 02 00 00 	movb   $0x2e,0x241(%rsp)
   12645:	2e 
   12646:	4d 89 22             	mov    %r12,(%r10)
   12649:	49 8d 68 01          	lea    0x1(%r8),%rbp
   1264d:	83 c6 02             	add    $0x2,%esi
   12650:	40 88 bc 24 40 02 00 	mov    %dil,0x240(%rsp)
   12657:	00 
   12658:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   1265f:	00 
   12660:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12667:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   1266e:	83 fa 07             	cmp    $0x7,%edx
   12671:	0f 8e 6f 03 00 00    	jle    129e6 <__vfprintf+0x1826>
   12677:	85 c0                	test   %eax,%eax
   12679:	0f 85 2d 03 00 00    	jne    129ac <__vfprintf+0x17ec>
   1267f:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   12686:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1268b:	be 01 00 00 00       	mov    $0x1,%esi
   12690:	48 89 ac 24 30 01 00 	mov    %rbp,0x130(%rsp)
   12697:	00 
   12698:	83 e8 01             	sub    $0x1,%eax
   1269b:	48 63 d0             	movslq %eax,%rdx
   1269e:	48 89 94 24 38 01 00 	mov    %rdx,0x138(%rsp)
   126a5:	00 
   126a6:	48 83 c1 10          	add    $0x10,%rcx
   126aa:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   126ae:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   126b5:	00 
   126b6:	45 89 dc             	mov    %r11d,%r12d
   126b9:	45 85 db             	test   %r11d,%r11d
   126bc:	0f 8f 7a 03 00 00    	jg     12a3c <__vfprintf+0x187c>
   126c2:	48 8d 94 24 38 02 00 	lea    0x238(%rsp),%rdx
   126c9:	00 
   126ca:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   126d1:	00 
   126d2:	48 89 11             	mov    %rdx,(%rcx)
   126d5:	48 63 94 24 9c 00 00 	movslq 0x9c(%rsp),%rdx
   126dc:	00 
   126dd:	01 d0                	add    %edx,%eax
   126df:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   126e3:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   126ea:	41 83 f8 07          	cmp    $0x7,%r8d
   126ee:	0f 8e 26 05 00 00    	jle    12c1a <__vfprintf+0x1a5a>
   126f4:	85 c0                	test   %eax,%eax
   126f6:	0f 84 18 f0 ff ff    	je     11714 <__vfprintf+0x554>
   126fc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12701:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12708:	00 
   12709:	e8 92 ea ff ff       	call   111a0 <__sprint.part.0>
   1270e:	85 c0                	test   %eax,%eax
   12710:	0f 85 3a ee ff ff    	jne    11550 <__vfprintf+0x390>
   12716:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1271b:	e9 04 f0 ff ff       	jmp    11724 <__vfprintf+0x564>
   12720:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12727:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   1272e:	00 
   1272f:	83 fd 10             	cmp    $0x10,%ebp
   12732:	0f 8e 30 15 00 00    	jle    13c68 <__vfprintf+0x2aa8>
   12738:	4c 8d 3d e1 9a 01 00 	lea    0x19ae1(%rip),%r15        # 2c220 <blanks.3327>
   1273f:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12746:	00 
   12747:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
   1274c:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   12751:	89 9c 24 a0 00 00 00 	mov    %ebx,0xa0(%rsp)
   12758:	48 89 f3             	mov    %rsi,%rbx
   1275b:	4c 89 b4 24 a8 00 00 	mov    %r14,0xa8(%rsp)
   12762:	00 
   12763:	4d 89 fe             	mov    %r15,%r14
   12766:	4d 89 ef             	mov    %r13,%r15
   12769:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   1276e:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   12773:	44 89 9c 24 80 00 00 	mov    %r11d,0x80(%rsp)
   1277a:	00 
   1277b:	eb 16                	jmp    12793 <__vfprintf+0x15d3>
   1277d:	0f 1f 00             	nopl   (%rax)
   12780:	41 8d 79 02          	lea    0x2(%r9),%edi
   12784:	49 83 c2 10          	add    $0x10,%r10
   12788:	41 89 d1             	mov    %edx,%r9d
   1278b:	83 ed 10             	sub    $0x10,%ebp
   1278e:	83 fd 10             	cmp    $0x10,%ebp
   12791:	7e 40                	jle    127d3 <__vfprintf+0x1613>
   12793:	83 c0 10             	add    $0x10,%eax
   12796:	41 8d 51 01          	lea    0x1(%r9),%edx
   1279a:	4d 89 32             	mov    %r14,(%r10)
   1279d:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   127a4:	00 
   127a5:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   127ac:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   127b3:	83 fa 07             	cmp    $0x7,%edx
   127b6:	7e c8                	jle    12780 <__vfprintf+0x15c0>
   127b8:	85 c0                	test   %eax,%eax
   127ba:	0f 85 80 00 00 00    	jne    12840 <__vfprintf+0x1680>
   127c0:	83 ed 10             	sub    $0x10,%ebp
   127c3:	45 31 c9             	xor    %r9d,%r9d
   127c6:	bf 01 00 00 00       	mov    $0x1,%edi
   127cb:	4d 89 ea             	mov    %r13,%r10
   127ce:	83 fd 10             	cmp    $0x10,%ebp
   127d1:	7f c0                	jg     12793 <__vfprintf+0x15d3>
   127d3:	4d 89 fd             	mov    %r15,%r13
   127d6:	44 8b 64 24 70       	mov    0x70(%rsp),%r12d
   127db:	4d 89 f7             	mov    %r14,%r15
   127de:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   127e3:	44 8b 9c 24 80 00 00 	mov    0x80(%rsp),%r11d
   127ea:	00 
   127eb:	8b 9c 24 a0 00 00 00 	mov    0xa0(%rsp),%ebx
   127f2:	4c 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%r14
   127f9:	00 
   127fa:	48 63 cd             	movslq %ebp,%rcx
   127fd:	01 e8                	add    %ebp,%eax
   127ff:	4d 89 3a             	mov    %r15,(%r10)
   12802:	49 83 c2 10          	add    $0x10,%r10
   12806:	49 89 4a f8          	mov    %rcx,-0x8(%r10)
   1280a:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12811:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   12818:	83 ff 07             	cmp    $0x7,%edi
   1281b:	0f 8e b2 ed ff ff    	jle    115d3 <__vfprintf+0x413>
   12821:	85 c0                	test   %eax,%eax
   12823:	0f 85 23 0b 00 00    	jne    1334c <__vfprintf+0x218c>
   12829:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12830:	00 00 00 00 
   12834:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12839:	e9 95 ed ff ff       	jmp    115d3 <__vfprintf+0x413>
   1283e:	66 90                	xchg   %ax,%ax
   12840:	48 89 de             	mov    %rbx,%rsi
   12843:	4c 89 e7             	mov    %r12,%rdi
   12846:	e8 55 e9 ff ff       	call   111a0 <__sprint.part.0>
   1284b:	85 c0                	test   %eax,%eax
   1284d:	0f 85 fd ec ff ff    	jne    11550 <__vfprintf+0x390>
   12853:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   1285a:	00 
   1285b:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12862:	4d 89 ea             	mov    %r13,%r10
   12865:	41 8d 79 01          	lea    0x1(%r9),%edi
   12869:	e9 1d ff ff ff       	jmp    1278b <__vfprintf+0x15cb>
   1286e:	66 90                	xchg   %ax,%ax
   12870:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12877:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1287e:	41 83 fc 10          	cmp    $0x10,%r12d
   12882:	0f 8e e5 14 00 00    	jle    13d6d <__vfprintf+0x2bad>
   12888:	4c 8d 3d 91 99 01 00 	lea    0x19991(%rip),%r15        # 2c220 <blanks.3327>
   1288f:	48 8d ac 24 f0 00 00 	lea    0xf0(%rsp),%rbp
   12896:	00 
   12897:	89 1c 24             	mov    %ebx,(%rsp)
   1289a:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   1289f:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   128a4:	4d 89 fe             	mov    %r15,%r14
   128a7:	4d 89 ef             	mov    %r13,%r15
   128aa:	45 89 e5             	mov    %r12d,%r13d
   128ad:	49 89 ec             	mov    %rbp,%r12
   128b0:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   128b5:	eb 1c                	jmp    128d3 <__vfprintf+0x1713>
   128b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   128be:	00 00 
   128c0:	8d 7e 02             	lea    0x2(%rsi),%edi
   128c3:	49 83 c2 10          	add    $0x10,%r10
   128c7:	89 d6                	mov    %edx,%esi
   128c9:	41 83 ed 10          	sub    $0x10,%r13d
   128cd:	41 83 fd 10          	cmp    $0x10,%r13d
   128d1:	7e 40                	jle    12913 <__vfprintf+0x1753>
   128d3:	83 c0 10             	add    $0x10,%eax
   128d6:	8d 56 01             	lea    0x1(%rsi),%edx
   128d9:	4d 89 32             	mov    %r14,(%r10)
   128dc:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   128e3:	00 
   128e4:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   128eb:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   128f2:	83 fa 07             	cmp    $0x7,%edx
   128f5:	7e c9                	jle    128c0 <__vfprintf+0x1700>
   128f7:	85 c0                	test   %eax,%eax
   128f9:	0f 85 81 00 00 00    	jne    12980 <__vfprintf+0x17c0>
   128ff:	41 83 ed 10          	sub    $0x10,%r13d
   12903:	31 f6                	xor    %esi,%esi
   12905:	bf 01 00 00 00       	mov    $0x1,%edi
   1290a:	49 89 ea             	mov    %rbp,%r10
   1290d:	41 83 fd 10          	cmp    $0x10,%r13d
   12911:	7f c0                	jg     128d3 <__vfprintf+0x1713>
   12913:	45 89 ec             	mov    %r13d,%r12d
   12916:	8b 1c 24             	mov    (%rsp),%ebx
   12919:	4d 89 fd             	mov    %r15,%r13
   1291c:	4d 89 f7             	mov    %r14,%r15
   1291f:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   12924:	49 63 d4             	movslq %r12d,%rdx
   12927:	44 01 e0             	add    %r12d,%eax
   1292a:	4d 89 3a             	mov    %r15,(%r10)
   1292d:	49 89 52 08          	mov    %rdx,0x8(%r10)
   12931:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12938:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   1293f:	83 ff 07             	cmp    $0x7,%edi
   12942:	0f 8e f3 ed ff ff    	jle    1173b <__vfprintf+0x57b>
   12948:	85 c0                	test   %eax,%eax
   1294a:	0f 85 63 0c 00 00    	jne    135b3 <__vfprintf+0x23f3>
   12950:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12957:	00 00 00 00 
   1295b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   1295f:	39 d8                	cmp    %ebx,%eax
   12961:	0f 4d d8             	cmovge %eax,%ebx
   12964:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   12969:	2b 44 24 28          	sub    0x28(%rsp),%eax
   1296d:	39 d8                	cmp    %ebx,%eax
   1296f:	0f 8c db ea ff ff    	jl     11450 <__vfprintf+0x290>
   12975:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   12979:	e9 ea ed ff ff       	jmp    11768 <__vfprintf+0x5a8>
   1297e:	66 90                	xchg   %ax,%ax
   12980:	4c 89 e6             	mov    %r12,%rsi
   12983:	48 89 df             	mov    %rbx,%rdi
   12986:	e8 15 e8 ff ff       	call   111a0 <__sprint.part.0>
   1298b:	85 c0                	test   %eax,%eax
   1298d:	0f 85 bd eb ff ff    	jne    11550 <__vfprintf+0x390>
   12993:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1299a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   129a1:	49 89 ea             	mov    %rbp,%r10
   129a4:	8d 7e 01             	lea    0x1(%rsi),%edi
   129a7:	e9 1d ff ff ff       	jmp    128c9 <__vfprintf+0x1709>
   129ac:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   129b1:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   129b8:	00 
   129b9:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   129be:	e8 dd e7 ff ff       	call   111a0 <__sprint.part.0>
   129c3:	85 c0                	test   %eax,%eax
   129c5:	0f 85 85 eb ff ff    	jne    11550 <__vfprintf+0x390>
   129cb:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   129d2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   129d9:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   129de:	8d 71 01             	lea    0x1(%rcx),%esi
   129e1:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   129e6:	8b bc 24 98 00 00 00 	mov    0x98(%rsp),%edi
   129ed:	48 89 29             	mov    %rbp,(%rcx)
   129f0:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   129f7:	8d 57 ff             	lea    -0x1(%rdi),%edx
   129fa:	48 63 fa             	movslq %edx,%rdi
   129fd:	01 d0                	add    %edx,%eax
   129ff:	48 89 79 08          	mov    %rdi,0x8(%rcx)
   12a03:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12a0a:	83 fe 07             	cmp    $0x7,%esi
   12a0d:	0f 8e 93 fc ff ff    	jle    126a6 <__vfprintf+0x14e6>
   12a13:	85 c0                	test   %eax,%eax
   12a15:	0f 85 7e 08 00 00    	jne    13299 <__vfprintf+0x20d9>
   12a1b:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   12a22:	00 
   12a23:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   12a28:	31 f6                	xor    %esi,%esi
   12a2a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12a30:	45 89 dc             	mov    %r11d,%r12d
   12a33:	45 85 db             	test   %r11d,%r11d
   12a36:	0f 8e 86 fc ff ff    	jle    126c2 <__vfprintf+0x1502>
   12a3c:	48 8d 2d cd 97 01 00 	lea    0x197cd(%rip),%rbp        # 2c210 <zeroes.3328>
   12a43:	41 83 fb 10          	cmp    $0x10,%r11d
   12a47:	0f 8e 81 00 00 00    	jle    12ace <__vfprintf+0x190e>
   12a4d:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   12a54:	00 
   12a55:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   12a59:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   12a5e:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   12a63:	4d 89 fd             	mov    %r15,%r13
   12a66:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   12a6b:	eb 17                	jmp    12a84 <__vfprintf+0x18c4>
   12a6d:	0f 1f 00             	nopl   (%rax)
   12a70:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   12a74:	48 83 c1 10          	add    $0x10,%rcx
   12a78:	89 d6                	mov    %edx,%esi
   12a7a:	41 83 ec 10          	sub    $0x10,%r12d
   12a7e:	41 83 fc 10          	cmp    $0x10,%r12d
   12a82:	7e 41                	jle    12ac5 <__vfprintf+0x1905>
   12a84:	83 c0 10             	add    $0x10,%eax
   12a87:	8d 56 01             	lea    0x1(%rsi),%edx
   12a8a:	48 89 29             	mov    %rbp,(%rcx)
   12a8d:	48 c7 41 08 10 00 00 	movq   $0x10,0x8(%rcx)
   12a94:	00 
   12a95:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12a9c:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   12aa3:	83 fa 07             	cmp    $0x7,%edx
   12aa6:	7e c8                	jle    12a70 <__vfprintf+0x18b0>
   12aa8:	85 c0                	test   %eax,%eax
   12aaa:	0f 85 c0 05 00 00    	jne    13070 <__vfprintf+0x1eb0>
   12ab0:	41 83 ec 10          	sub    $0x10,%r12d
   12ab4:	31 f6                	xor    %esi,%esi
   12ab6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   12abc:	4c 89 f9             	mov    %r15,%rcx
   12abf:	41 83 fc 10          	cmp    $0x10,%r12d
   12ac3:	7f bf                	jg     12a84 <__vfprintf+0x18c4>
   12ac5:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   12ac9:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12ace:	49 63 d4             	movslq %r12d,%rdx
   12ad1:	44 01 e0             	add    %r12d,%eax
   12ad4:	48 89 29             	mov    %rbp,(%rcx)
   12ad7:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   12adb:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12ae2:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   12ae9:	00 
   12aea:	41 83 f8 07          	cmp    $0x7,%r8d
   12aee:	0f 8f e7 00 00 00    	jg     12bdb <__vfprintf+0x1a1b>
   12af4:	48 83 c1 10          	add    $0x10,%rcx
   12af8:	41 83 c0 01          	add    $0x1,%r8d
   12afc:	e9 c1 fb ff ff       	jmp    126c2 <__vfprintf+0x1502>
   12b01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12b08:	48 89 de             	mov    %rbx,%rsi
   12b0b:	4c 89 e7             	mov    %r12,%rdi
   12b0e:	e8 8d e6 ff ff       	call   111a0 <__sprint.part.0>
   12b13:	85 c0                	test   %eax,%eax
   12b15:	0f 85 35 ea ff ff    	jne    11550 <__vfprintf+0x390>
   12b1b:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   12b22:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12b29:	4d 89 fa             	mov    %r15,%r10
   12b2c:	8d 7e 01             	lea    0x1(%rsi),%edi
   12b2f:	e9 95 f7 ff ff       	jmp    122c9 <__vfprintf+0x1109>
   12b34:	0f 1f 40 00          	nopl   0x0(%rax)
   12b38:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12b3d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12b44:	00 
   12b45:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   12b4a:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   12b4f:	e8 4c e6 ff ff       	call   111a0 <__sprint.part.0>
   12b54:	85 c0                	test   %eax,%eax
   12b56:	0f 85 f4 e9 ff ff    	jne    11550 <__vfprintf+0x390>
   12b5c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12b61:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   12b66:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   12b6b:	e9 c8 ea ff ff       	jmp    11638 <__vfprintf+0x478>
   12b70:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12b75:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12b7c:	00 
   12b7d:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   12b82:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   12b87:	e8 14 e6 ff ff       	call   111a0 <__sprint.part.0>
   12b8c:	85 c0                	test   %eax,%eax
   12b8e:	0f 85 bc e9 ff ff    	jne    11550 <__vfprintf+0x390>
   12b94:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12b99:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   12b9e:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   12ba3:	e9 00 eb ff ff       	jmp    116a8 <__vfprintf+0x4e8>
   12ba8:	f6 04 24 01          	testb  $0x1,(%rsp)
   12bac:	0f 85 7d fa ff ff    	jne    1262f <__vfprintf+0x146f>
   12bb2:	83 c0 01             	add    $0x1,%eax
   12bb5:	4d 89 02             	mov    %r8,(%r10)
   12bb8:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   12bbc:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   12bc3:	00 
   12bc4:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12bcb:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   12bd2:	83 fa 07             	cmp    $0x7,%edx
   12bd5:	0f 8e e7 fa ff ff    	jle    126c2 <__vfprintf+0x1502>
   12bdb:	85 c0                	test   %eax,%eax
   12bdd:	0f 85 51 0c 00 00    	jne    13834 <__vfprintf+0x2674>
   12be3:	48 8d 84 24 38 02 00 	lea    0x238(%rsp),%rax
   12bea:	00 
   12beb:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   12bf0:	c7 84 24 f8 00 00 00 	movl   $0x1,0xf8(%rsp)
   12bf7:	01 00 00 00 
   12bfb:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   12c02:	00 
   12c03:	48 63 84 24 9c 00 00 	movslq 0x9c(%rsp),%rax
   12c0a:	00 
   12c0b:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   12c12:	00 
   12c13:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   12c1a:	4c 8d 51 10          	lea    0x10(%rcx),%r10
   12c1e:	e9 01 eb ff ff       	jmp    11724 <__vfprintf+0x564>
   12c23:	89 54 24 38          	mov    %edx,0x38(%rsp)
   12c27:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   12c2e:	00 
   12c2f:	48 bf cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdi
   12c36:	cc cc cc 
   12c39:	48 89 de             	mov    %rbx,%rsi
   12c3c:	48 83 f9 09          	cmp    $0x9,%rcx
   12c40:	76 35                	jbe    12c77 <__vfprintf+0x1ab7>
   12c42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12c48:	48 89 c8             	mov    %rcx,%rax
   12c4b:	49 89 c9             	mov    %rcx,%r9
   12c4e:	48 83 ee 01          	sub    $0x1,%rsi
   12c52:	48 f7 e7             	mul    %rdi
   12c55:	48 c1 ea 03          	shr    $0x3,%rdx
   12c59:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
   12c5d:	48 01 c0             	add    %rax,%rax
   12c60:	49 29 c1             	sub    %rax,%r9
   12c63:	4c 89 c8             	mov    %r9,%rax
   12c66:	83 c0 30             	add    $0x30,%eax
   12c69:	88 06                	mov    %al,(%rsi)
   12c6b:	48 89 c8             	mov    %rcx,%rax
   12c6e:	48 89 d1             	mov    %rdx,%rcx
   12c71:	48 83 f8 63          	cmp    $0x63,%rax
   12c75:	77 d1                	ja     12c48 <__vfprintf+0x1a88>
   12c77:	83 c1 30             	add    $0x30,%ecx
   12c7a:	4c 8d 46 ff          	lea    -0x1(%rsi),%r8
   12c7e:	88 4e ff             	mov    %cl,-0x1(%rsi)
   12c81:	e9 01 f1 ff ff       	jmp    11d87 <__vfprintf+0xbc7>
   12c86:	48 85 c0             	test   %rax,%rax
   12c89:	0f 84 9e 09 00 00    	je     1362d <__vfprintf+0x246d>
   12c8f:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   12c94:	48 c1 e2 04          	shl    $0x4,%rdx
   12c98:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   12c9d:	31 ff                	xor    %edi,%edi
   12c9f:	44 89 de             	mov    %r11d,%esi
   12ca2:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   12ca9:	00 
   12caa:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   12caf:	40 0f 94 c7          	sete   %dil
   12cb3:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   12cba:	00 
   12cbb:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   12cc2:	00 
   12cc3:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   12cc8:	83 c7 02             	add    $0x2,%edi
   12ccb:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   12cd2:	00 
   12cd3:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   12cda:	00 00 
   12cdc:	e8 2f 1e 00 00       	call   14b10 <__dtoa>
   12ce1:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   12ce6:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   12ceb:	48 85 c0             	test   %rax,%rax
   12cee:	49 89 c0             	mov    %rax,%r8
   12cf1:	0f 84 a3 08 00 00    	je     1359a <__vfprintf+0x23da>
   12cf7:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   12cfe:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   12d05:	00 
   12d06:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   12d0d:	81 fe 0f 27 00 00    	cmp    $0x270f,%esi
   12d13:	0f 85 8a ec ff ff    	jne    119a3 <__vfprintf+0x7e3>
   12d19:	c7 84 24 bc 00 00 00 	movl   $0x7fffffff,0xbc(%rsp)
   12d20:	ff ff ff 7f 
   12d24:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   12d28:	85 c0                	test   %eax,%eax
   12d2a:	0f 84 29 01 00 00    	je     12e59 <__vfprintf+0x1c99>
   12d30:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   12d37:	e9 6f ec ff ff       	jmp    119ab <__vfprintf+0x7eb>
   12d3c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   12d40:	b8 02 00 00 00       	mov    $0x2,%eax
   12d45:	e9 d6 ef ff ff       	jmp    11d20 <__vfprintf+0xb60>
   12d4a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12d51:	48 8d 2d b8 94 01 00 	lea    0x194b8(%rip),%rbp        # 2c210 <zeroes.3328>
   12d58:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   12d5f:	00 
   12d60:	49 83 c2 10          	add    $0x10,%r10
   12d64:	49 89 6a f0          	mov    %rbp,-0x10(%r10)
   12d68:	8d 48 01             	lea    0x1(%rax),%ecx
   12d6b:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   12d72:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   12d79:	83 c0 01             	add    $0x1,%eax
   12d7c:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   12d83:	83 f8 07             	cmp    $0x7,%eax
   12d86:	7e 18                	jle    12da0 <__vfprintf+0x1be0>
   12d88:	85 c9                	test   %ecx,%ecx
   12d8a:	0f 85 da 0a 00 00    	jne    1386a <__vfprintf+0x26aa>
   12d90:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12d97:	00 00 00 00 
   12d9b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12da0:	8b 04 24             	mov    (%rsp),%eax
   12da3:	83 e0 01             	and    $0x1,%eax
   12da6:	44 09 d8             	or     %r11d,%eax
   12da9:	74 56                	je     12e01 <__vfprintf+0x1c41>
   12dab:	48 8d 05 35 fd 00 00 	lea    0xfd35(%rip),%rax        # 22ae7 <_ZZ17ecall_malloc_freeE8__func__+0x2b7>
   12db2:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   12db9:	00 
   12dba:	49 83 c2 10          	add    $0x10,%r10
   12dbe:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   12dc2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   12dc9:	8d 48 01             	lea    0x1(%rax),%ecx
   12dcc:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   12dd3:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   12dda:	83 c0 01             	add    $0x1,%eax
   12ddd:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   12de4:	83 f8 07             	cmp    $0x7,%eax
   12de7:	7e 18                	jle    12e01 <__vfprintf+0x1c41>
   12de9:	85 c9                	test   %ecx,%ecx
   12deb:	0f 85 67 0b 00 00    	jne    13958 <__vfprintf+0x2798>
   12df1:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   12df8:	00 00 00 00 
   12dfc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12e01:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   12e08:	41 89 c4             	mov    %eax,%r12d
   12e0b:	41 f7 dc             	neg    %r12d
   12e0e:	45 85 e4             	test   %r12d,%r12d
   12e11:	0f 8f 5e 06 00 00    	jg     13475 <__vfprintf+0x22b5>
   12e17:	41 01 c3             	add    %eax,%r11d
   12e1a:	e9 01 f4 ff ff       	jmp    12220 <__vfprintf+0x1060>
   12e1f:	8d 4c 3b 01          	lea    0x1(%rbx,%rdi,1),%ecx
   12e23:	bb 00 00 00 00       	mov    $0x0,%ebx
   12e28:	44 89 24 24          	mov    %r12d,(%rsp)
   12e2c:	41 89 fb             	mov    %edi,%r11d
   12e2f:	85 c9                	test   %ecx,%ecx
   12e31:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   12e35:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   12e3a:	0f 49 d9             	cmovns %ecx,%ebx
   12e3d:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   12e44:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   12e4b:	00 
   12e4c:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   12e53:	00 
   12e54:	e9 07 ec ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   12e59:	41 80 38 4e          	cmpb   $0x4e,(%r8)
   12e5d:	0f 84 a6 07 00 00    	je     13609 <__vfprintf+0x2449>
   12e63:	83 fb 60             	cmp    $0x60,%ebx
   12e66:	48 8d 0d 6b fc 00 00 	lea    0xfc6b(%rip),%rcx        # 22ad8 <_ZZ17ecall_malloc_freeE8__func__+0x2a8>
   12e6d:	48 8d 35 68 fc 00 00 	lea    0xfc68(%rip),%rsi        # 22adc <_ZZ17ecall_malloc_freeE8__func__+0x2ac>
   12e74:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   12e7b:	00 
   12e7c:	48 0f 4e ce          	cmovle %rsi,%rcx
   12e80:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   12e85:	bb 03 00 00 00       	mov    $0x3,%ebx
   12e8a:	49 89 c8             	mov    %rcx,%r8
   12e8d:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   12e94:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%rsp)
   12e9b:	00 
   12e9c:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   12ea3:	00 
   12ea4:	e9 b7 eb ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   12ea9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   12eae:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   12eb5:	00 
   12eb6:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   12ebb:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   12ec0:	e8 db e2 ff ff       	call   111a0 <__sprint.part.0>
   12ec5:	85 c0                	test   %eax,%eax
   12ec7:	0f 85 83 e6 ff ff    	jne    11550 <__vfprintf+0x390>
   12ecd:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   12ed2:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   12ed7:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   12edc:	e9 e7 e7 ff ff       	jmp    116c8 <__vfprintf+0x508>
   12ee1:	f6 04 24 20          	testb  $0x20,(%rsp)
   12ee5:	0f 85 33 04 00 00    	jne    1331e <__vfprintf+0x215e>
   12eeb:	f6 04 24 10          	testb  $0x10,(%rsp)
   12eef:	0f 85 32 08 00 00    	jne    13727 <__vfprintf+0x2567>
   12ef5:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   12efc:	0f 85 1c 04 00 00    	jne    1331e <__vfprintf+0x215e>
   12f02:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   12f09:	0f 85 18 08 00 00    	jne    13727 <__vfprintf+0x2567>
   12f0f:	f6 04 24 40          	testb  $0x40,(%rsp)
   12f13:	0f 84 a4 11 00 00    	je     140bd <__vfprintf+0x2efd>
   12f19:	48 85 c9             	test   %rcx,%rcx
   12f1c:	0f 84 e8 12 00 00    	je     1420a <__vfprintf+0x304a>
   12f22:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   12f27:	48 c1 e2 04          	shl    $0x4,%rdx
   12f2b:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   12f2f:	e9 77 f1 ff ff       	jmp    120ab <__vfprintf+0xeeb>
   12f34:	0f 1f 40 00          	nopl   0x0(%rax)
   12f38:	f6 04 24 20          	testb  $0x20,(%rsp)
   12f3c:	0f 85 bb 03 00 00    	jne    132fd <__vfprintf+0x213d>
   12f42:	f6 04 24 10          	testb  $0x10,(%rsp)
   12f46:	0f 85 74 07 00 00    	jne    136c0 <__vfprintf+0x2500>
   12f4c:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   12f53:	0f 85 a4 03 00 00    	jne    132fd <__vfprintf+0x213d>
   12f59:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   12f60:	0f 85 5a 07 00 00    	jne    136c0 <__vfprintf+0x2500>
   12f66:	f6 04 24 40          	testb  $0x40,(%rsp)
   12f6a:	0f 84 bd 11 00 00    	je     1412d <__vfprintf+0x2f6d>
   12f70:	48 85 c9             	test   %rcx,%rcx
   12f73:	0f 84 34 12 00 00    	je     141ad <__vfprintf+0x2fed>
   12f79:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   12f7e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   12f82:	31 c0                	xor    %eax,%eax
   12f84:	48 c1 e2 04          	shl    $0x4,%rdx
   12f88:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   12f8c:	e9 8f ed ff ff       	jmp    11d20 <__vfprintf+0xb60>
   12f91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12f98:	f6 04 24 20          	testb  $0x20,(%rsp)
   12f9c:	0f 85 97 03 00 00    	jne    13339 <__vfprintf+0x2179>
   12fa2:	f6 04 24 10          	testb  $0x10,(%rsp)
   12fa6:	0f 85 e4 09 00 00    	jne    13990 <__vfprintf+0x27d0>
   12fac:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   12fb3:	0f 85 80 03 00 00    	jne    13339 <__vfprintf+0x2179>
   12fb9:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   12fc0:	0f 85 ca 09 00 00    	jne    13990 <__vfprintf+0x27d0>
   12fc6:	f6 04 24 40          	testb  $0x40,(%rsp)
   12fca:	0f 84 2d 10 00 00    	je     13ffd <__vfprintf+0x2e3d>
   12fd0:	48 85 c9             	test   %rcx,%rcx
   12fd3:	0f 84 0a 12 00 00    	je     141e3 <__vfprintf+0x3023>
   12fd9:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   12fde:	48 c1 e0 04          	shl    $0x4,%rax
   12fe2:	48 0f bf 0c 01       	movswq (%rcx,%rax,1),%rcx
   12fe7:	48 89 c8             	mov    %rcx,%rax
   12fea:	e9 e6 ea ff ff       	jmp    11ad5 <__vfprintf+0x915>
   12fef:	90                   	nop
   12ff0:	f6 04 24 20          	testb  $0x20,(%rsp)
   12ff4:	0f 85 df 02 00 00    	jne    132d9 <__vfprintf+0x2119>
   12ffa:	f6 04 24 10          	testb  $0x10,(%rsp)
   12ffe:	0f 85 ee 06 00 00    	jne    136f2 <__vfprintf+0x2532>
   13004:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   1300b:	0f 85 c8 02 00 00    	jne    132d9 <__vfprintf+0x2119>
   13011:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   13018:	0f 85 d4 06 00 00    	jne    136f2 <__vfprintf+0x2532>
   1301e:	f6 04 24 40          	testb  $0x40,(%rsp)
   13022:	0f 84 d4 10 00 00    	je     140fc <__vfprintf+0x2f3c>
   13028:	48 85 c9             	test   %rcx,%rcx
   1302b:	0f 84 50 11 00 00    	je     14181 <__vfprintf+0x2fc1>
   13031:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   13036:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1303a:	b8 01 00 00 00       	mov    $0x1,%eax
   1303f:	48 c1 e2 04          	shl    $0x4,%rdx
   13043:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   13047:	e9 d4 ec ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1304c:	0f 1f 40 00          	nopl   0x0(%rax)
   13050:	85 d2                	test   %edx,%edx
   13052:	0f 85 80 05 00 00    	jne    135d8 <__vfprintf+0x2418>
   13058:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1305f:	00 00 00 00 
   13063:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13068:	41 29 eb             	sub    %ebp,%r11d
   1306b:	e9 01 f2 ff ff       	jmp    12271 <__vfprintf+0x10b1>
   13070:	4c 89 ee             	mov    %r13,%rsi
   13073:	48 89 df             	mov    %rbx,%rdi
   13076:	e8 25 e1 ff ff       	call   111a0 <__sprint.part.0>
   1307b:	85 c0                	test   %eax,%eax
   1307d:	0f 85 cd e4 ff ff    	jne    11550 <__vfprintf+0x390>
   13083:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1308a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   13091:	4c 89 f9             	mov    %r15,%rcx
   13094:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   13098:	e9 dd f9 ff ff       	jmp    12a7a <__vfprintf+0x18ba>
   1309d:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   130a4:	2d 
   130a5:	48 f7 d9             	neg    %rcx
   130a8:	b8 01 00 00 00       	mov    $0x1,%eax
   130ad:	89 54 24 38          	mov    %edx,0x38(%rsp)
   130b1:	e9 72 ec ff ff       	jmp    11d28 <__vfprintf+0xb68>
   130b6:	0f b6 84 24 8b 00 00 	movzbl 0x8b(%rsp),%eax
   130bd:	00 
   130be:	89 f1                	mov    %esi,%ecx
   130c0:	88 84 24 38 02 00 00 	mov    %al,0x238(%rsp)
   130c7:	b8 2b 00 00 00       	mov    $0x2b,%eax
   130cc:	83 e9 01             	sub    $0x1,%ecx
   130cf:	79 0c                	jns    130dd <__vfprintf+0x1f1d>
   130d1:	b9 01 00 00 00       	mov    $0x1,%ecx
   130d6:	b8 2d 00 00 00       	mov    $0x2d,%eax
   130db:	29 f1                	sub    %esi,%ecx
   130dd:	88 84 24 39 02 00 00 	mov    %al,0x239(%rsp)
   130e4:	83 f9 09             	cmp    $0x9,%ecx
   130e7:	0f 8e 66 06 00 00    	jle    13753 <__vfprintf+0x2593>
   130ed:	4c 8d 8c 24 38 02 00 	lea    0x238(%rsp),%r9
   130f4:	00 
   130f5:	4c 89 cf             	mov    %r9,%rdi
   130f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   130ff:	00 
   13100:	48 63 c1             	movslq %ecx,%rax
   13103:	89 cb                	mov    %ecx,%ebx
   13105:	41 89 cf             	mov    %ecx,%r15d
   13108:	48 89 fe             	mov    %rdi,%rsi
   1310b:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   13112:	c1 fb 1f             	sar    $0x1f,%ebx
   13115:	48 8d 7f ff          	lea    -0x1(%rdi),%rdi
   13119:	48 c1 f8 22          	sar    $0x22,%rax
   1311d:	29 d8                	sub    %ebx,%eax
   1311f:	8d 1c 80             	lea    (%rax,%rax,4),%ebx
   13122:	01 db                	add    %ebx,%ebx
   13124:	41 29 df             	sub    %ebx,%r15d
   13127:	44 89 fb             	mov    %r15d,%ebx
   1312a:	83 c3 30             	add    $0x30,%ebx
   1312d:	88 5e ff             	mov    %bl,-0x1(%rsi)
   13130:	89 cb                	mov    %ecx,%ebx
   13132:	89 c1                	mov    %eax,%ecx
   13134:	83 fb 63             	cmp    $0x63,%ebx
   13137:	7f c7                	jg     13100 <__vfprintf+0x1f40>
   13139:	83 c1 30             	add    $0x30,%ecx
   1313c:	48 8d 46 fe          	lea    -0x2(%rsi),%rax
   13140:	88 4f ff             	mov    %cl,-0x1(%rdi)
   13143:	4c 39 c8             	cmp    %r9,%rax
   13146:	0f 83 0f 10 00 00    	jae    1415b <__vfprintf+0x2f9b>
   1314c:	48 8d 9c 24 3a 02 00 	lea    0x23a(%rsp),%rbx
   13153:	00 
   13154:	48 89 df             	mov    %rbx,%rdi
   13157:	eb 0a                	jmp    13163 <__vfprintf+0x1fa3>
   13159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13160:	0f b6 08             	movzbl (%rax),%ecx
   13163:	48 83 c0 01          	add    $0x1,%rax
   13167:	48 83 c7 01          	add    $0x1,%rdi
   1316b:	88 4f ff             	mov    %cl,-0x1(%rdi)
   1316e:	4c 39 c8             	cmp    %r9,%rax
   13171:	75 ed                	jne    13160 <__vfprintf+0x1fa0>
   13173:	48 89 d9             	mov    %rbx,%rcx
   13176:	48 29 f1             	sub    %rsi,%rcx
   13179:	48 01 cb             	add    %rcx,%rbx
   1317c:	89 d9                	mov    %ebx,%ecx
   1317e:	29 c1                	sub    %eax,%ecx
   13180:	89 8c 24 9c 00 00 00 	mov    %ecx,0x9c(%rsp)
   13187:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1318e:	44 01 d8             	add    %r11d,%eax
   13191:	89 44 24 40          	mov    %eax,0x40(%rsp)
   13195:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   1319c:	00 
   1319d:	41 83 fb 01          	cmp    $0x1,%r11d
   131a1:	0f 8e b0 09 00 00    	jle    13b57 <__vfprintf+0x2997>
   131a7:	83 44 24 40 01       	addl   $0x1,0x40(%rsp)
   131ac:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   131b0:	bb 00 00 00 00       	mov    $0x0,%ebx
   131b5:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   131ba:	44 89 24 24          	mov    %r12d,(%rsp)
   131be:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   131c5:	00 
   131c6:	0f 49 d9             	cmovns %ecx,%ebx
   131c9:	e9 92 e8 ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   131ce:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   131d5:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   131dc:	41 83 fc 10          	cmp    $0x10,%r12d
   131e0:	0f 8e 43 0e 00 00    	jle    14029 <__vfprintf+0x2e69>
   131e6:	48 8d 2d 23 90 01 00 	lea    0x19023(%rip),%rbp        # 2c210 <zeroes.3328>
   131ed:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   131f1:	44 89 e3             	mov    %r12d,%ebx
   131f4:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   131fb:	00 
   131fc:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   13201:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   13206:	49 89 ed             	mov    %rbp,%r13
   13209:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1320e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   13213:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   13218:	eb 1b                	jmp    13235 <__vfprintf+0x2075>
   1321a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13220:	8d 77 02             	lea    0x2(%rdi),%esi
   13223:	49 83 c2 10          	add    $0x10,%r10
   13227:	89 d7                	mov    %edx,%edi
   13229:	83 eb 10             	sub    $0x10,%ebx
   1322c:	83 fb 10             	cmp    $0x10,%ebx
   1322f:	0f 8e 4f 01 00 00    	jle    13384 <__vfprintf+0x21c4>
   13235:	83 c0 10             	add    $0x10,%eax
   13238:	8d 57 01             	lea    0x1(%rdi),%edx
   1323b:	4d 89 2a             	mov    %r13,(%r10)
   1323e:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   13245:	00 
   13246:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   1324d:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   13254:	83 fa 07             	cmp    $0x7,%edx
   13257:	7e c7                	jle    13220 <__vfprintf+0x2060>
   13259:	85 c0                	test   %eax,%eax
   1325b:	75 13                	jne    13270 <__vfprintf+0x20b0>
   1325d:	31 ff                	xor    %edi,%edi
   1325f:	be 01 00 00 00       	mov    $0x1,%esi
   13264:	4d 89 e2             	mov    %r12,%r10
   13267:	eb c0                	jmp    13229 <__vfprintf+0x2069>
   13269:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13270:	4c 89 fe             	mov    %r15,%rsi
   13273:	48 89 ef             	mov    %rbp,%rdi
   13276:	e8 25 df ff ff       	call   111a0 <__sprint.part.0>
   1327b:	85 c0                	test   %eax,%eax
   1327d:	0f 85 cd e2 ff ff    	jne    11550 <__vfprintf+0x390>
   13283:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1328a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   13291:	4d 89 e2             	mov    %r12,%r10
   13294:	8d 77 01             	lea    0x1(%rdi),%esi
   13297:	eb 90                	jmp    13229 <__vfprintf+0x2069>
   13299:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1329e:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   132a5:	00 
   132a6:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   132ab:	e8 f0 de ff ff       	call   111a0 <__sprint.part.0>
   132b0:	85 c0                	test   %eax,%eax
   132b2:	0f 85 98 e2 ff ff    	jne    11550 <__vfprintf+0x390>
   132b8:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   132bf:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   132c6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   132cb:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   132d0:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   132d4:	e9 d5 f3 ff ff       	jmp    126ae <__vfprintf+0x14ee>
   132d9:	48 85 c9             	test   %rcx,%rcx
   132dc:	0f 84 21 09 00 00    	je     13c03 <__vfprintf+0x2a43>
   132e2:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   132e7:	48 c1 e2 04          	shl    $0x4,%rdx
   132eb:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   132ef:	89 44 24 38          	mov    %eax,0x38(%rsp)
   132f3:	b8 01 00 00 00       	mov    $0x1,%eax
   132f8:	e9 23 ea ff ff       	jmp    11d20 <__vfprintf+0xb60>
   132fd:	48 85 c9             	test   %rcx,%rcx
   13300:	0f 84 dd 08 00 00    	je     13be3 <__vfprintf+0x2a23>
   13306:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1330b:	48 c1 e2 04          	shl    $0x4,%rdx
   1330f:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   13313:	89 44 24 38          	mov    %eax,0x38(%rsp)
   13317:	31 c0                	xor    %eax,%eax
   13319:	e9 02 ea ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1331e:	48 85 c9             	test   %rcx,%rcx
   13321:	0f 84 9c 08 00 00    	je     13bc3 <__vfprintf+0x2a03>
   13327:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1332c:	48 c1 e2 04          	shl    $0x4,%rdx
   13330:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   13334:	e9 72 ed ff ff       	jmp    120ab <__vfprintf+0xeeb>
   13339:	48 85 c9             	test   %rcx,%rcx
   1333c:	0f 84 e1 08 00 00    	je     13c23 <__vfprintf+0x2a63>
   13342:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   13347:	e9 7e e7 ff ff       	jmp    11aca <__vfprintf+0x90a>
   1334c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13351:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13358:	00 
   13359:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   1335e:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   13363:	e8 38 de ff ff       	call   111a0 <__sprint.part.0>
   13368:	85 c0                	test   %eax,%eax
   1336a:	0f 85 e0 e1 ff ff    	jne    11550 <__vfprintf+0x390>
   13370:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13375:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   1337a:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1337f:	e9 4f e2 ff ff       	jmp    115d3 <__vfprintf+0x413>
   13384:	41 89 dc             	mov    %ebx,%r12d
   13387:	4c 89 ed             	mov    %r13,%rbp
   1338a:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1338f:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   13394:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   13398:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   1339d:	49 63 d4             	movslq %r12d,%rdx
   133a0:	44 01 e0             	add    %r12d,%eax
   133a3:	49 89 2a             	mov    %rbp,(%r10)
   133a6:	49 83 c2 10          	add    $0x10,%r10
   133aa:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   133ae:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   133b5:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   133bc:	83 fe 07             	cmp    $0x7,%esi
   133bf:	0f 8e e1 ed ff ff    	jle    121a6 <__vfprintf+0xfe6>
   133c5:	85 c0                	test   %eax,%eax
   133c7:	0f 85 e6 08 00 00    	jne    13cb3 <__vfprintf+0x2af3>
   133cd:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   133d4:	00 00 00 00 
   133d8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   133dd:	e9 c4 ed ff ff       	jmp    121a6 <__vfprintf+0xfe6>
   133e2:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   133e9:	00 
   133ea:	48 85 d2             	test   %rdx,%rdx
   133ed:	0f 84 f8 08 00 00    	je     13ceb <__vfprintf+0x2b2b>
   133f3:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   133f8:	48 c1 e0 04          	shl    $0x4,%rax
   133fc:	4c 8b 04 02          	mov    (%rdx,%rax,1),%r8
   13400:	4d 85 c0             	test   %r8,%r8
   13403:	48 8d 05 d6 f6 00 00 	lea    0xf6d6(%rip),%rax        # 22ae0 <_ZZ17ecall_malloc_freeE8__func__+0x2b0>
   1340a:	4c 0f 44 c0          	cmove  %rax,%r8
   1340e:	45 85 db             	test   %r11d,%r11d
   13411:	0f 88 6e 02 00 00    	js     13685 <__vfprintf+0x24c5>
   13417:	49 63 d3             	movslq %r11d,%rdx
   1341a:	31 f6                	xor    %esi,%esi
   1341c:	4c 89 c7             	mov    %r8,%rdi
   1341f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   13424:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13429:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1342e:	e8 4d 14 00 00       	call   14880 <memchr>
   13433:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   13438:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1343d:	48 89 c5             	mov    %rax,%rbp
   13440:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   13445:	4c 29 c5             	sub    %r8,%rbp
   13448:	48 85 c0             	test   %rax,%rax
   1344b:	89 e8                	mov    %ebp,%eax
   1344d:	41 0f 44 c3          	cmove  %r11d,%eax
   13451:	89 44 24 40          	mov    %eax,0x40(%rsp)
   13455:	8b 44 24 40          	mov    0x40(%rsp),%eax
   13459:	bb 00 00 00 00       	mov    $0x0,%ebx
   1345e:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   13463:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   1346a:	00 
   1346b:	85 c0                	test   %eax,%eax
   1346d:	0f 49 d8             	cmovns %eax,%ebx
   13470:	e9 28 e1 ff ff       	jmp    1159d <__vfprintf+0x3dd>
   13475:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1347c:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   13483:	41 83 fc 10          	cmp    $0x10,%r12d
   13487:	0f 8e 28 0c 00 00    	jle    140b5 <__vfprintf+0x2ef5>
   1348d:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   13494:	00 
   13495:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   13499:	44 89 e3             	mov    %r12d,%ebx
   1349c:	49 89 ec             	mov    %rbp,%r12
   1349f:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   134a4:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   134a9:	4d 89 fd             	mov    %r15,%r13
   134ac:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   134b1:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   134b6:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   134bb:	eb 18                	jmp    134d5 <__vfprintf+0x2315>
   134bd:	0f 1f 00             	nopl   (%rax)
   134c0:	8d 77 02             	lea    0x2(%rdi),%esi
   134c3:	49 83 c2 10          	add    $0x10,%r10
   134c7:	89 d7                	mov    %edx,%edi
   134c9:	83 eb 10             	sub    $0x10,%ebx
   134cc:	83 fb 10             	cmp    $0x10,%ebx
   134cf:	0f 8e c6 02 00 00    	jle    1379b <__vfprintf+0x25db>
   134d5:	83 c0 10             	add    $0x10,%eax
   134d8:	8d 57 01             	lea    0x1(%rdi),%edx
   134db:	4d 89 22             	mov    %r12,(%r10)
   134de:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   134e5:	00 
   134e6:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   134ed:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   134f4:	83 fa 07             	cmp    $0x7,%edx
   134f7:	7e c7                	jle    134c0 <__vfprintf+0x2300>
   134f9:	85 c0                	test   %eax,%eax
   134fb:	75 0c                	jne    13509 <__vfprintf+0x2349>
   134fd:	31 ff                	xor    %edi,%edi
   134ff:	be 01 00 00 00       	mov    $0x1,%esi
   13504:	49 89 ea             	mov    %rbp,%r10
   13507:	eb c0                	jmp    134c9 <__vfprintf+0x2309>
   13509:	4c 89 ee             	mov    %r13,%rsi
   1350c:	4c 89 ff             	mov    %r15,%rdi
   1350f:	e8 8c dc ff ff       	call   111a0 <__sprint.part.0>
   13514:	85 c0                	test   %eax,%eax
   13516:	0f 85 34 e0 ff ff    	jne    11550 <__vfprintf+0x390>
   1351c:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   13523:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1352a:	49 89 ea             	mov    %rbp,%r10
   1352d:	8d 77 01             	lea    0x1(%rdi),%esi
   13530:	eb 97                	jmp    134c9 <__vfprintf+0x2309>
   13532:	48 85 c0             	test   %rax,%rax
   13535:	0f 84 d3 07 00 00    	je     13d0e <__vfprintf+0x2b4e>
   1353b:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   13540:	48 c1 e2 04          	shl    $0x4,%rdx
   13544:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   13549:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   13550:	00 
   13551:	44 89 de             	mov    %r11d,%esi
   13554:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   1355b:	00 
   1355c:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   13563:	00 
   13564:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   1356b:	00 
   1356c:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   13571:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   13576:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   1357d:	00 00 
   1357f:	e8 bc 2a 00 00       	call   16040 <__hdtoa>
   13584:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   13589:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1358e:	48 85 c0             	test   %rax,%rax
   13591:	49 89 c0             	mov    %rax,%r8
   13594:	0f 85 dc e2 ff ff    	jne    11876 <__vfprintf+0x6b6>
   1359a:	e8 11 cc ff ff       	call   101b0 <__errno>
   1359f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   135a5:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   135ac:	00 00 
   135ae:	e9 9d df ff ff       	jmp    11550 <__vfprintf+0x390>
   135b3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   135b8:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   135bf:	00 
   135c0:	e8 db db ff ff       	call   111a0 <__sprint.part.0>
   135c5:	85 c0                	test   %eax,%eax
   135c7:	0f 84 6e e1 ff ff    	je     1173b <__vfprintf+0x57b>
   135cd:	e9 7e df ff ff       	jmp    11550 <__vfprintf+0x390>
   135d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   135d8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   135dd:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   135e4:	00 
   135e5:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   135ea:	e8 b1 db ff ff       	call   111a0 <__sprint.part.0>
   135ef:	85 c0                	test   %eax,%eax
   135f1:	0f 85 59 df ff ff    	jne    11550 <__vfprintf+0x390>
   135f7:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   135fc:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13601:	41 29 eb             	sub    %ebp,%r11d
   13604:	e9 68 ec ff ff       	jmp    12271 <__vfprintf+0x10b1>
   13609:	83 fb 60             	cmp    $0x60,%ebx
   1360c:	48 8d 05 c1 f4 00 00 	lea    0xf4c1(%rip),%rax        # 22ad4 <_ZZ17ecall_malloc_freeE8__func__+0x2a4>
   13613:	48 8d 0d b6 f4 00 00 	lea    0xf4b6(%rip),%rcx        # 22ad0 <_ZZ17ecall_malloc_freeE8__func__+0x2a0>
   1361a:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   13621:	00 
   13622:	48 0f 4e c8          	cmovle %rax,%rcx
   13626:	31 c0                	xor    %eax,%eax
   13628:	e9 53 f8 ff ff       	jmp    12e80 <__vfprintf+0x1cc0>
   1362d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13632:	8b 41 04             	mov    0x4(%rcx),%eax
   13635:	3d af 00 00 00       	cmp    $0xaf,%eax
   1363a:	0f 87 8b 03 00 00    	ja     139cb <__vfprintf+0x280b>
   13640:	89 c2                	mov    %eax,%edx
   13642:	83 c0 10             	add    $0x10,%eax
   13645:	48 03 51 10          	add    0x10(%rcx),%rdx
   13649:	89 41 04             	mov    %eax,0x4(%rcx)
   1364c:	f2 0f 10 02          	movsd  (%rdx),%xmm0
   13650:	e9 48 f6 ff ff       	jmp    12c9d <__vfprintf+0x1add>
   13655:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1365a:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1365e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13663:	48 83 c0 0f          	add    $0xf,%rax
   13667:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1366b:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1366f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13673:	db 28                	fldt   (%rax)
   13675:	e9 b3 e2 ff ff       	jmp    1192d <__vfprintf+0x76d>
   1367a:	41 bb 07 00 00 00    	mov    $0x7,%r11d
   13680:	e9 59 e2 ff ff       	jmp    118de <__vfprintf+0x71e>
   13685:	4c 89 c7             	mov    %r8,%rdi
   13688:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   1368d:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   13692:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   13697:	e8 e4 c1 ff ff       	call   f880 <strlen>
   1369c:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
   136a2:	0f 87 a8 dd ff ff    	ja     11450 <__vfprintf+0x290>
   136a8:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   136ad:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   136b2:	89 44 24 40          	mov    %eax,0x40(%rsp)
   136b6:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   136bb:	e9 95 fd ff ff       	jmp    13455 <__vfprintf+0x2295>
   136c0:	48 85 c9             	test   %rcx,%rcx
   136c3:	0f 85 3d fc ff ff    	jne    13306 <__vfprintf+0x2146>
   136c9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   136ce:	8b 0f                	mov    (%rdi),%ecx
   136d0:	83 f9 2f             	cmp    $0x2f,%ecx
   136d3:	0f 87 44 03 00 00    	ja     13a1d <__vfprintf+0x285d>
   136d9:	89 ca                	mov    %ecx,%edx
   136db:	83 c1 08             	add    $0x8,%ecx
   136de:	48 03 57 10          	add    0x10(%rdi),%rdx
   136e2:	89 0f                	mov    %ecx,(%rdi)
   136e4:	48 8b 0a             	mov    (%rdx),%rcx
   136e7:	89 44 24 38          	mov    %eax,0x38(%rsp)
   136eb:	31 c0                	xor    %eax,%eax
   136ed:	e9 2e e6 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   136f2:	48 85 c9             	test   %rcx,%rcx
   136f5:	0f 85 e7 fb ff ff    	jne    132e2 <__vfprintf+0x2122>
   136fb:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13700:	8b 0f                	mov    (%rdi),%ecx
   13702:	83 f9 2f             	cmp    $0x2f,%ecx
   13705:	0f 87 fc 02 00 00    	ja     13a07 <__vfprintf+0x2847>
   1370b:	89 ca                	mov    %ecx,%edx
   1370d:	83 c1 08             	add    $0x8,%ecx
   13710:	48 03 57 10          	add    0x10(%rdi),%rdx
   13714:	89 0f                	mov    %ecx,(%rdi)
   13716:	48 8b 0a             	mov    (%rdx),%rcx
   13719:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1371d:	b8 01 00 00 00       	mov    $0x1,%eax
   13722:	e9 f9 e5 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   13727:	48 85 c9             	test   %rcx,%rcx
   1372a:	0f 85 f7 fb ff ff    	jne    13327 <__vfprintf+0x2167>
   13730:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13735:	8b 0f                	mov    (%rdi),%ecx
   13737:	83 f9 2f             	cmp    $0x2f,%ecx
   1373a:	0f 87 b1 02 00 00    	ja     139f1 <__vfprintf+0x2831>
   13740:	89 ca                	mov    %ecx,%edx
   13742:	83 c1 08             	add    $0x8,%ecx
   13745:	48 03 57 10          	add    0x10(%rdi),%rdx
   13749:	89 0f                	mov    %ecx,(%rdi)
   1374b:	48 8b 0a             	mov    (%rdx),%rcx
   1374e:	e9 58 e9 ff ff       	jmp    120ab <__vfprintf+0xeeb>
   13753:	0f b6 b4 24 8b 00 00 	movzbl 0x8b(%rsp),%esi
   1375a:	00 
   1375b:	48 8d 84 24 3a 02 00 	lea    0x23a(%rsp),%rax
   13762:	00 
   13763:	83 e6 df             	and    $0xffffffdf,%esi
   13766:	40 80 fe 45          	cmp    $0x45,%sil
   1376a:	75 10                	jne    1377c <__vfprintf+0x25bc>
   1376c:	c6 84 24 3a 02 00 00 	movb   $0x30,0x23a(%rsp)
   13773:	30 
   13774:	48 8d 84 24 3b 02 00 	lea    0x23b(%rsp),%rax
   1377b:	00 
   1377c:	83 c1 30             	add    $0x30,%ecx
   1377f:	88 08                	mov    %cl,(%rax)
   13781:	48 8d 8c 24 b0 02 00 	lea    0x2b0(%rsp),%rcx
   13788:	00 
   13789:	48 29 c8             	sub    %rcx,%rax
   1378c:	83 c0 79             	add    $0x79,%eax
   1378f:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   13796:	e9 ec f9 ff ff       	jmp    13187 <__vfprintf+0x1fc7>
   1379b:	4c 89 e5             	mov    %r12,%rbp
   1379e:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   137a3:	41 89 dc             	mov    %ebx,%r12d
   137a6:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   137ab:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   137b0:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   137b4:	49 63 d4             	movslq %r12d,%rdx
   137b7:	44 01 e0             	add    %r12d,%eax
   137ba:	49 89 2a             	mov    %rbp,(%r10)
   137bd:	49 89 52 08          	mov    %rdx,0x8(%r10)
   137c1:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   137c8:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   137cf:	83 fe 07             	cmp    $0x7,%esi
   137d2:	0f 8e 09 02 00 00    	jle    139e1 <__vfprintf+0x2821>
   137d8:	85 c0                	test   %eax,%eax
   137da:	0f 85 0f 06 00 00    	jne    13def <__vfprintf+0x2c2f>
   137e0:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   137e7:	00 00 00 00 
   137eb:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   137f2:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   137f7:	e9 1b f6 ff ff       	jmp    12e17 <__vfprintf+0x1c57>
   137fc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13801:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13808:	00 
   13809:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   1380e:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   13813:	e8 88 d9 ff ff       	call   111a0 <__sprint.part.0>
   13818:	85 c0                	test   %eax,%eax
   1381a:	0f 85 30 dd ff ff    	jne    11550 <__vfprintf+0x390>
   13820:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13825:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   1382a:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1382f:	e9 81 de ff ff       	jmp    116b5 <__vfprintf+0x4f5>
   13834:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13839:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13840:	00 
   13841:	e8 5a d9 ff ff       	call   111a0 <__sprint.part.0>
   13846:	85 c0                	test   %eax,%eax
   13848:	0f 85 02 dd ff ff    	jne    11550 <__vfprintf+0x390>
   1384e:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   13855:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1385c:	44 8d 41 01          	lea    0x1(%rcx),%r8d
   13860:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   13865:	e9 58 ee ff ff       	jmp    126c2 <__vfprintf+0x1502>
   1386a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1386f:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13876:	00 
   13877:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   1387c:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13881:	e8 1a d9 ff ff       	call   111a0 <__sprint.part.0>
   13886:	85 c0                	test   %eax,%eax
   13888:	0f 85 c2 dc ff ff    	jne    11550 <__vfprintf+0x390>
   1388e:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13893:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   13898:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1389d:	e9 fe f4 ff ff       	jmp    12da0 <__vfprintf+0x1be0>
   138a2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   138a7:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   138ae:	00 
   138af:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   138b4:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   138b9:	e8 e2 d8 ff ff       	call   111a0 <__sprint.part.0>
   138be:	85 c0                	test   %eax,%eax
   138c0:	0f 85 8a dc ff ff    	jne    11550 <__vfprintf+0x390>
   138c6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   138cb:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   138d0:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   138d5:	e9 46 e9 ff ff       	jmp    12220 <__vfprintf+0x1060>
   138da:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   138e0:	83 0c 24 20          	orl    $0x20,(%rsp)
   138e4:	49 83 c4 01          	add    $0x1,%r12
   138e8:	e9 fc da ff ff       	jmp    113e9 <__vfprintf+0x229>
   138ed:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   138f4:	00 
   138f5:	31 d2                	xor    %edx,%edx
   138f7:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   138fb:	e9 28 f4 ff ff       	jmp    12d28 <__vfprintf+0x1b68>
   13900:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   13906:	81 0c 24 00 08 00 00 	orl    $0x800,(%rsp)
   1390d:	49 83 c4 01          	add    $0x1,%r12
   13911:	e9 d3 da ff ff       	jmp    113e9 <__vfprintf+0x229>
   13916:	e8 e9 dc 00 00       	call   21604 <abort>
   1391b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13920:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13925:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   1392c:	00 
   1392d:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   13932:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13937:	e8 64 d8 ff ff       	call   111a0 <__sprint.part.0>
   1393c:	85 c0                	test   %eax,%eax
   1393e:	0f 85 0c dc ff ff    	jne    11550 <__vfprintf+0x390>
   13944:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13949:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1394e:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   13953:	e9 30 e8 ff ff       	jmp    12188 <__vfprintf+0xfc8>
   13958:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   1395d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13964:	00 
   13965:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   1396a:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   1396f:	e8 2c d8 ff ff       	call   111a0 <__sprint.part.0>
   13974:	85 c0                	test   %eax,%eax
   13976:	0f 85 d4 db ff ff    	jne    11550 <__vfprintf+0x390>
   1397c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13981:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   13986:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1398b:	e9 71 f4 ff ff       	jmp    12e01 <__vfprintf+0x1c41>
   13990:	48 85 c9             	test   %rcx,%rcx
   13993:	0f 85 a9 f9 ff ff    	jne    13342 <__vfprintf+0x2182>
   13999:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1399e:	8b 0f                	mov    (%rdi),%ecx
   139a0:	83 f9 2f             	cmp    $0x2f,%ecx
   139a3:	0f 87 e5 01 00 00    	ja     13b8e <__vfprintf+0x29ce>
   139a9:	89 c8                	mov    %ecx,%eax
   139ab:	83 c1 08             	add    $0x8,%ecx
   139ae:	48 03 47 10          	add    0x10(%rdi),%rax
   139b2:	89 0f                	mov    %ecx,(%rdi)
   139b4:	48 8b 00             	mov    (%rax),%rax
   139b7:	48 89 c1             	mov    %rax,%rcx
   139ba:	e9 16 e1 ff ff       	jmp    11ad5 <__vfprintf+0x915>
   139bf:	4c 8d 05 1a f1 00 00 	lea    0xf11a(%rip),%r8        # 22ae0 <_ZZ17ecall_malloc_freeE8__func__+0x2b0>
   139c6:	e9 43 fa ff ff       	jmp    1340e <__vfprintf+0x224e>
   139cb:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   139d0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   139d4:	48 8d 42 08          	lea    0x8(%rdx),%rax
   139d8:	48 89 41 08          	mov    %rax,0x8(%rcx)
   139dc:	e9 6b fc ff ff       	jmp    1364c <__vfprintf+0x248c>
   139e1:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   139e8:	49 83 c2 10          	add    $0x10,%r10
   139ec:	e9 26 f4 ff ff       	jmp    12e17 <__vfprintf+0x1c57>
   139f1:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   139f6:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   139fa:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   139fe:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   13a02:	e9 44 fd ff ff       	jmp    1374b <__vfprintf+0x258b>
   13a07:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13a0c:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   13a10:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13a14:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   13a18:	e9 f9 fc ff ff       	jmp    13716 <__vfprintf+0x2556>
   13a1d:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13a22:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   13a26:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13a2a:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   13a2e:	e9 b1 fc ff ff       	jmp    136e4 <__vfprintf+0x2524>
   13a33:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13a38:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13a3f:	00 
   13a40:	e8 5b d7 ff ff       	call   111a0 <__sprint.part.0>
   13a45:	85 c0                	test   %eax,%eax
   13a47:	0f 84 ef da ff ff    	je     1153c <__vfprintf+0x37c>
   13a4d:	e9 fe da ff ff       	jmp    11550 <__vfprintf+0x390>
   13a52:	48 85 d2             	test   %rdx,%rdx
   13a55:	0f 84 dd 05 00 00    	je     14038 <__vfprintf+0x2e78>
   13a5b:	48 63 c3             	movslq %ebx,%rax
   13a5e:	48 c1 e0 04          	shl    $0x4,%rax
   13a62:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   13a65:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   13a69:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   13a6d:	4d 8d 67 01          	lea    0x1(%r15),%r12
   13a71:	e9 f0 e0 ff ff       	jmp    11b66 <__vfprintf+0x9a6>
   13a76:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   13a7d:	00 
   13a7e:	ba 08 00 00 00       	mov    $0x8,%edx
   13a83:	31 f6                	xor    %esi,%esi
   13a85:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   13a8a:	48 89 ef             	mov    %rbp,%rdi
   13a8d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   13a92:	e8 69 bd ff ff       	call   f800 <memset>
   13a97:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   13a9c:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   13aa1:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   13aa8:	00 
   13aa9:	48 85 d2             	test   %rdx,%rdx
   13aac:	0f 84 ef 02 00 00    	je     13da1 <__vfprintf+0x2be1>
   13ab2:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   13ab7:	48 c1 e0 04          	shl    $0x4,%rax
   13abb:	8b 34 02             	mov    (%rdx,%rax,1),%esi
   13abe:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   13ac5:	00 
   13ac6:	48 89 ea             	mov    %rbp,%rdx
   13ac9:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13ace:	4c 89 e7             	mov    %r12,%rdi
   13ad1:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   13ad6:	e8 15 3a 00 00       	call   174f0 <wcrtomb>
   13adb:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   13ae0:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   13ae5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13ae9:	48 89 c3             	mov    %rax,%rbx
   13aec:	0f 84 f0 0a 00 00    	je     145e2 <__vfprintf+0x3422>
   13af2:	85 c0                	test   %eax,%eax
   13af4:	89 44 24 40          	mov    %eax,0x40(%rsp)
   13af8:	b8 00 00 00 00       	mov    $0x0,%eax
   13afd:	0f 48 d8             	cmovs  %eax,%ebx
   13b00:	e9 47 e3 ff ff       	jmp    11e4c <__vfprintf+0xc8c>
   13b05:	83 fb 24             	cmp    $0x24,%ebx
   13b08:	0f 84 a1 08 00 00    	je     143af <__vfprintf+0x31ef>
   13b0e:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
   13b13:	e9 74 e4 ff ff       	jmp    11f8c <__vfprintf+0xdcc>
   13b18:	89 c7                	mov    %eax,%edi
   13b1a:	41 29 f3             	sub    %esi,%r11d
   13b1d:	b8 00 00 00 00       	mov    $0x0,%eax
   13b22:	29 f7                	sub    %esi,%edi
   13b24:	85 c9                	test   %ecx,%ecx
   13b26:	41 0f 45 fb          	cmovne %r11d,%edi
   13b2a:	85 ff                	test   %edi,%edi
   13b2c:	0f 48 f8             	cmovs  %eax,%edi
   13b2f:	e9 e4 de ff ff       	jmp    11a18 <__vfprintf+0x858>
   13b34:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13b39:	8b 11                	mov    (%rcx),%edx
   13b3b:	83 fa 2f             	cmp    $0x2f,%edx
   13b3e:	0f 87 59 01 00 00    	ja     13c9d <__vfprintf+0x2add>
   13b44:	89 d0                	mov    %edx,%eax
   13b46:	83 c2 08             	add    $0x8,%edx
   13b49:	48 03 41 10          	add    0x10(%rcx),%rax
   13b4d:	89 11                	mov    %edx,(%rcx)
   13b4f:	48 8b 08             	mov    (%rax),%rcx
   13b52:	e9 a9 e1 ff ff       	jmp    11d00 <__vfprintf+0xb40>
   13b57:	8b 0c 24             	mov    (%rsp),%ecx
   13b5a:	83 e1 01             	and    $0x1,%ecx
   13b5d:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   13b61:	0f 85 40 f6 ff ff    	jne    131a7 <__vfprintf+0x1fe7>
   13b67:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   13b6b:	8b 5c 24 48          	mov    0x48(%rsp),%ebx
   13b6f:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   13b74:	44 89 24 24          	mov    %r12d,(%rsp)
   13b78:	85 c9                	test   %ecx,%ecx
   13b7a:	0f 49 d9             	cmovns %ecx,%ebx
   13b7d:	e9 de de ff ff       	jmp    11a60 <__vfprintf+0x8a0>
   13b82:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13b87:	8b 0e                	mov    (%rsi),%ecx
   13b89:	83 f9 2f             	cmp    $0x2f,%ecx
   13b8c:	76 25                	jbe    13bb3 <__vfprintf+0x29f3>
   13b8e:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   13b93:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13b97:	48 8d 48 08          	lea    0x8(%rax),%rcx
   13b9b:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   13b9f:	e9 10 fe ff ff       	jmp    139b4 <__vfprintf+0x27f4>
   13ba4:	8d 77 01             	lea    0x1(%rdi),%esi
   13ba7:	48 8d 2d 62 86 01 00 	lea    0x18662(%rip),%rbp        # 2c210 <zeroes.3328>
   13bae:	e9 67 e8 ff ff       	jmp    1241a <__vfprintf+0x125a>
   13bb3:	89 c8                	mov    %ecx,%eax
   13bb5:	83 c1 08             	add    $0x8,%ecx
   13bb8:	48 03 46 10          	add    0x10(%rsi),%rax
   13bbc:	89 0e                	mov    %ecx,(%rsi)
   13bbe:	e9 f1 fd ff ff       	jmp    139b4 <__vfprintf+0x27f4>
   13bc3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13bc8:	8b 0e                	mov    (%rsi),%ecx
   13bca:	83 f9 2f             	cmp    $0x2f,%ecx
   13bcd:	0f 87 06 02 00 00    	ja     13dd9 <__vfprintf+0x2c19>
   13bd3:	89 ca                	mov    %ecx,%edx
   13bd5:	83 c1 08             	add    $0x8,%ecx
   13bd8:	48 03 56 10          	add    0x10(%rsi),%rdx
   13bdc:	89 0e                	mov    %ecx,(%rsi)
   13bde:	e9 68 fb ff ff       	jmp    1374b <__vfprintf+0x258b>
   13be3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13be8:	8b 0e                	mov    (%rsi),%ecx
   13bea:	83 f9 2f             	cmp    $0x2f,%ecx
   13bed:	0f 87 3b 02 00 00    	ja     13e2e <__vfprintf+0x2c6e>
   13bf3:	89 ca                	mov    %ecx,%edx
   13bf5:	83 c1 08             	add    $0x8,%ecx
   13bf8:	48 03 56 10          	add    0x10(%rsi),%rdx
   13bfc:	89 0e                	mov    %ecx,(%rsi)
   13bfe:	e9 e1 fa ff ff       	jmp    136e4 <__vfprintf+0x2524>
   13c03:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13c08:	8b 0e                	mov    (%rsi),%ecx
   13c0a:	83 f9 2f             	cmp    $0x2f,%ecx
   13c0d:	0f 87 b0 01 00 00    	ja     13dc3 <__vfprintf+0x2c03>
   13c13:	89 ca                	mov    %ecx,%edx
   13c15:	83 c1 08             	add    $0x8,%ecx
   13c18:	48 03 56 10          	add    0x10(%rsi),%rdx
   13c1c:	89 0e                	mov    %ecx,(%rsi)
   13c1e:	e9 f3 fa ff ff       	jmp    13716 <__vfprintf+0x2556>
   13c23:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13c28:	8b 0e                	mov    (%rsi),%ecx
   13c2a:	83 f9 2f             	cmp    $0x2f,%ecx
   13c2d:	76 84                	jbe    13bb3 <__vfprintf+0x29f3>
   13c2f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13c34:	48 8b 46 08          	mov    0x8(%rsi),%rax
   13c38:	48 8d 48 08          	lea    0x8(%rax),%rcx
   13c3c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13c40:	e9 6f fd ff ff       	jmp    139b4 <__vfprintf+0x27f4>
   13c45:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13c4a:	8b 11                	mov    (%rcx),%edx
   13c4c:	83 fa 2f             	cmp    $0x2f,%edx
   13c4f:	0f 87 27 01 00 00    	ja     13d7c <__vfprintf+0x2bbc>
   13c55:	89 d0                	mov    %edx,%eax
   13c57:	83 c2 08             	add    $0x8,%edx
   13c5a:	48 03 41 10          	add    0x10(%rcx),%rax
   13c5e:	89 11                	mov    %edx,(%rcx)
   13c60:	0f b6 00             	movzbl (%rax),%eax
   13c63:	e9 c8 e1 ff ff       	jmp    11e30 <__vfprintf+0xc70>
   13c68:	41 8d 79 01          	lea    0x1(%r9),%edi
   13c6c:	4c 8d 3d ad 85 01 00 	lea    0x185ad(%rip),%r15        # 2c220 <blanks.3327>
   13c73:	e9 82 eb ff ff       	jmp    127fa <__vfprintf+0x163a>
   13c78:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13c7d:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13c81:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13c86:	48 83 c0 0f          	add    $0xf,%rax
   13c8a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   13c8e:	48 8d 50 10          	lea    0x10(%rax),%rdx
   13c92:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13c96:	db 28                	fldt   (%rax)
   13c98:	e9 7f db ff ff       	jmp    1181c <__vfprintf+0x65c>
   13c9d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13ca2:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13ca6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13caa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13cae:	e9 9c fe ff ff       	jmp    13b4f <__vfprintf+0x298f>
   13cb3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13cb8:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13cbf:	00 
   13cc0:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   13cc5:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13cca:	e8 d1 d4 ff ff       	call   111a0 <__sprint.part.0>
   13ccf:	85 c0                	test   %eax,%eax
   13cd1:	0f 85 79 d8 ff ff    	jne    11550 <__vfprintf+0x390>
   13cd7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13cdc:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   13ce1:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   13ce6:	e9 bb e4 ff ff       	jmp    121a6 <__vfprintf+0xfe6>
   13ceb:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13cf0:	8b 11                	mov    (%rcx),%edx
   13cf2:	83 fa 2f             	cmp    $0x2f,%edx
   13cf5:	0f 87 49 01 00 00    	ja     13e44 <__vfprintf+0x2c84>
   13cfb:	89 d0                	mov    %edx,%eax
   13cfd:	83 c2 08             	add    $0x8,%edx
   13d00:	48 03 41 10          	add    0x10(%rcx),%rax
   13d04:	89 11                	mov    %edx,(%rcx)
   13d06:	4c 8b 00             	mov    (%rax),%r8
   13d09:	e9 f2 f6 ff ff       	jmp    13400 <__vfprintf+0x2240>
   13d0e:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13d13:	8b 51 04             	mov    0x4(%rcx),%edx
   13d16:	81 fa af 00 00 00    	cmp    $0xaf,%edx
   13d1c:	0f 87 9e 02 00 00    	ja     13fc0 <__vfprintf+0x2e00>
   13d22:	89 d0                	mov    %edx,%eax
   13d24:	83 c2 10             	add    $0x10,%edx
   13d27:	48 03 41 10          	add    0x10(%rcx),%rax
   13d2b:	89 51 04             	mov    %edx,0x4(%rcx)
   13d2e:	f2 0f 10 00          	movsd  (%rax),%xmm0
   13d32:	e9 12 f8 ff ff       	jmp    13549 <__vfprintf+0x2389>
   13d37:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13d3c:	8b 11                	mov    (%rcx),%edx
   13d3e:	83 fa 2f             	cmp    $0x2f,%edx
   13d41:	0f 87 39 01 00 00    	ja     13e80 <__vfprintf+0x2cc0>
   13d47:	89 d0                	mov    %edx,%eax
   13d49:	83 c2 08             	add    $0x8,%edx
   13d4c:	48 03 41 10          	add    0x10(%rcx),%rax
   13d50:	89 11                	mov    %edx,(%rcx)
   13d52:	48 8b 00             	mov    (%rax),%rax
   13d55:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   13d5a:	e9 be de ff ff       	jmp    11c1d <__vfprintf+0xa5d>
   13d5f:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   13d63:	41 0f be 1c 24       	movsbl (%r12),%ebx
   13d68:	e9 7c d6 ff ff       	jmp    113e9 <__vfprintf+0x229>
   13d6d:	8d 7e 01             	lea    0x1(%rsi),%edi
   13d70:	4c 8d 3d a9 84 01 00 	lea    0x184a9(%rip),%r15        # 2c220 <blanks.3327>
   13d77:	e9 a8 eb ff ff       	jmp    12924 <__vfprintf+0x1764>
   13d7c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13d81:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13d85:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13d89:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13d8d:	e9 ce fe ff ff       	jmp    13c60 <__vfprintf+0x2aa0>
   13d92:	8d 77 01             	lea    0x1(%rdi),%esi
   13d95:	48 8d 2d 74 84 01 00 	lea    0x18474(%rip),%rbp        # 2c210 <zeroes.3328>
   13d9c:	e9 cc e7 ff ff       	jmp    1256d <__vfprintf+0x13ad>
   13da1:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13da6:	8b 11                	mov    (%rcx),%edx
   13da8:	83 fa 2f             	cmp    $0x2f,%edx
   13dab:	0f 87 25 02 00 00    	ja     13fd6 <__vfprintf+0x2e16>
   13db1:	89 d0                	mov    %edx,%eax
   13db3:	83 c2 08             	add    $0x8,%edx
   13db6:	48 03 41 10          	add    0x10(%rcx),%rax
   13dba:	89 11                	mov    %edx,(%rcx)
   13dbc:	8b 30                	mov    (%rax),%esi
   13dbe:	e9 fb fc ff ff       	jmp    13abe <__vfprintf+0x28fe>
   13dc3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13dc8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13dcc:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13dd0:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13dd4:	e9 3d f9 ff ff       	jmp    13716 <__vfprintf+0x2556>
   13dd9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13dde:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13de2:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13de6:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13dea:	e9 5c f9 ff ff       	jmp    1374b <__vfprintf+0x258b>
   13def:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   13df4:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   13dfb:	00 
   13dfc:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   13e01:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13e06:	e8 95 d3 ff ff       	call   111a0 <__sprint.part.0>
   13e0b:	85 c0                	test   %eax,%eax
   13e0d:	0f 85 3d d7 ff ff    	jne    11550 <__vfprintf+0x390>
   13e13:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   13e1a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   13e1f:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   13e24:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   13e29:	e9 e9 ef ff ff       	jmp    12e17 <__vfprintf+0x1c57>
   13e2e:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13e33:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13e37:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   13e3b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   13e3f:	e9 a0 f8 ff ff       	jmp    136e4 <__vfprintf+0x2524>
   13e44:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13e49:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13e4d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13e51:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13e55:	e9 ac fe ff ff       	jmp    13d06 <__vfprintf+0x2b46>
   13e5a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   13e5f:	8b 16                	mov    (%rsi),%edx
   13e61:	83 fa 2f             	cmp    $0x2f,%edx
   13e64:	0f 87 01 03 00 00    	ja     1416b <__vfprintf+0x2fab>
   13e6a:	89 d0                	mov    %edx,%eax
   13e6c:	83 c2 08             	add    $0x8,%edx
   13e6f:	48 03 46 10          	add    0x10(%rsi),%rax
   13e73:	89 16                	mov    %edx,(%rsi)
   13e75:	8b 00                	mov    (%rax),%eax
   13e77:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   13e7b:	e9 e6 dc ff ff       	jmp    11b66 <__vfprintf+0x9a6>
   13e80:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13e85:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13e89:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13e8d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13e91:	e9 bc fe ff ff       	jmp    13d52 <__vfprintf+0x2b92>
   13e96:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   13e9b:	ba 08 00 00 00       	mov    $0x8,%edx
   13ea0:	31 f6                	xor    %esi,%esi
   13ea2:	45 31 ff             	xor    %r15d,%r15d
   13ea5:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   13eac:	00 
   13ead:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   13eb2:	48 8d 9c 24 32 02 00 	lea    0x232(%rsp),%rbx
   13eb9:	00 
   13eba:	48 89 ef             	mov    %rbp,%rdi
   13ebd:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   13ec2:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   13ec9:	00 
   13eca:	e8 31 b9 ff ff       	call   f800 <memset>
   13ecf:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   13ed4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13ed9:	89 44 24 48          	mov    %eax,0x48(%rsp)
   13edd:	48 89 d8             	mov    %rbx,%rax
   13ee0:	48 89 eb             	mov    %rbp,%rbx
   13ee3:	48 89 c5             	mov    %rax,%rbp
   13ee6:	eb 11                	jmp    13ef9 <__vfprintf+0x2d39>
   13ee8:	4c 01 f8             	add    %r15,%rax
   13eeb:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
   13ef0:	0f 87 f7 01 00 00    	ja     140ed <__vfprintf+0x2f2d>
   13ef6:	49 89 c7             	mov    %rax,%r15
   13ef9:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   13f00:	00 
   13f01:	48 89 da             	mov    %rbx,%rdx
   13f04:	48 89 ef             	mov    %rbp,%rdi
   13f07:	48 8d 70 04          	lea    0x4(%rax),%rsi
   13f0b:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
   13f12:	00 
   13f13:	8b 30                	mov    (%rax),%esi
   13f15:	e8 d6 35 00 00       	call   174f0 <wcrtomb>
   13f1a:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   13f1e:	48 83 fe fd          	cmp    $0xfffffffffffffffd,%rsi
   13f22:	76 c4                	jbe    13ee8 <__vfprintf+0x2d28>
   13f24:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   13f29:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   13f2e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13f32:	0f 85 07 dd ff ff    	jne    11c3f <__vfprintf+0xa7f>
   13f38:	e8 73 c2 ff ff       	call   101b0 <__errno>
   13f3d:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   13f43:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   13f48:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   13f4f:	ff 
   13f50:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   13f56:	e9 1a d5 ff ff       	jmp    11475 <__vfprintf+0x2b5>
   13f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13f60:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   13f67:	00 
   13f68:	31 f6                	xor    %esi,%esi
   13f6a:	ba 08 00 00 00       	mov    $0x8,%edx
   13f6f:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   13f74:	4c 89 ff             	mov    %r15,%rdi
   13f77:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   13f7c:	e8 7f b8 ff ff       	call   f800 <memset>
   13f81:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   13f86:	4c 89 f9             	mov    %r15,%rcx
   13f89:	31 d2                	xor    %edx,%edx
   13f8b:	31 ff                	xor    %edi,%edi
   13f8d:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   13f94:	00 
   13f95:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   13f9c:	00 
   13f9d:	e8 6e 36 00 00       	call   17610 <wcsrtombs>
   13fa2:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   13fa7:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   13fac:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   13fb0:	49 89 c7             	mov    %rax,%r15
   13fb3:	0f 85 86 dc ff ff    	jne    11c3f <__vfprintf+0xa7f>
   13fb9:	e9 7a ff ff ff       	jmp    13f38 <__vfprintf+0x2d78>
   13fbe:	66 90                	xchg   %ax,%ax
   13fc0:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13fc5:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13fc9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13fcd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13fd1:	e9 58 fd ff ff       	jmp    13d2e <__vfprintf+0x2b6e>
   13fd6:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   13fdb:	48 8b 41 08          	mov    0x8(%rcx),%rax
   13fdf:	48 8d 50 08          	lea    0x8(%rax),%rdx
   13fe3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   13fe7:	8b 30                	mov    (%rax),%esi
   13fe9:	e9 d0 fa ff ff       	jmp    13abe <__vfprintf+0x28fe>
   13fee:	8d 7e 01             	lea    0x1(%rsi),%edi
   13ff1:	48 8d 2d 18 82 01 00 	lea    0x18218(%rip),%rbp        # 2c210 <zeroes.3328>
   13ff8:	e9 21 e3 ff ff       	jmp    1231e <__vfprintf+0x115e>
   13ffd:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   14004:	0f 84 23 02 00 00    	je     1422d <__vfprintf+0x306d>
   1400a:	48 85 c9             	test   %rcx,%rcx
   1400d:	0f 84 a4 04 00 00    	je     144b7 <__vfprintf+0x32f7>
   14013:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   14018:	48 c1 e0 04          	shl    $0x4,%rax
   1401c:	48 0f be 0c 01       	movsbq (%rcx,%rax,1),%rcx
   14021:	48 89 c8             	mov    %rcx,%rax
   14024:	e9 ac da ff ff       	jmp    11ad5 <__vfprintf+0x915>
   14029:	8d 77 01             	lea    0x1(%rdi),%esi
   1402c:	48 8d 2d dd 81 01 00 	lea    0x181dd(%rip),%rbp        # 2c210 <zeroes.3328>
   14033:	e9 65 f3 ff ff       	jmp    1339d <__vfprintf+0x21dd>
   14038:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1403d:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   14044:	00 
   14045:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   1404c:	00 
   1404d:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   14052:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   14059:	00 
   1405a:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   14061:	00 
   14062:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   14067:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1406e:	00 
   1406f:	e8 9c c2 ff ff       	call   10310 <__find_arguments>
   14074:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14079:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
   1407e:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   14085:	00 
   14086:	48 85 d2             	test   %rdx,%rdx
   14089:	0f 85 cc f9 ff ff    	jne    13a5b <__vfprintf+0x289b>
   1408f:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   14094:	8b 11                	mov    (%rcx),%edx
   14096:	83 fa 2f             	cmp    $0x2f,%edx
   14099:	0f 87 59 02 00 00    	ja     142f8 <__vfprintf+0x3138>
   1409f:	89 d0                	mov    %edx,%eax
   140a1:	83 c2 08             	add    $0x8,%edx
   140a4:	48 03 41 10          	add    0x10(%rcx),%rax
   140a8:	89 11                	mov    %edx,(%rcx)
   140aa:	8b 00                	mov    (%rax),%eax
   140ac:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   140b0:	e9 b4 f9 ff ff       	jmp    13a69 <__vfprintf+0x28a9>
   140b5:	8d 77 01             	lea    0x1(%rdi),%esi
   140b8:	e9 f7 f6 ff ff       	jmp    137b4 <__vfprintf+0x25f4>
   140bd:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   140c4:	0f 84 81 01 00 00    	je     1424b <__vfprintf+0x308b>
   140ca:	48 85 c9             	test   %rcx,%rcx
   140cd:	0f 84 ec 04 00 00    	je     145bf <__vfprintf+0x33ff>
   140d3:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   140d8:	48 c1 e2 04          	shl    $0x4,%rdx
   140dc:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   140e0:	e9 c6 df ff ff       	jmp    120ab <__vfprintf+0xeeb>
   140e5:	45 31 e4             	xor    %r12d,%r12d
   140e8:	e9 93 de ff ff       	jmp    11f80 <__vfprintf+0xdc0>
   140ed:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   140f2:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   140f7:	e9 43 db ff ff       	jmp    11c3f <__vfprintf+0xa7f>
   140fc:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   14103:	0f 84 5c 01 00 00    	je     14265 <__vfprintf+0x30a5>
   14109:	48 85 c9             	test   %rcx,%rcx
   1410c:	0f 84 34 03 00 00    	je     14446 <__vfprintf+0x3286>
   14112:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   14117:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1411b:	b8 01 00 00 00       	mov    $0x1,%eax
   14120:	48 c1 e2 04          	shl    $0x4,%rdx
   14124:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   14128:	e9 f3 db ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1412d:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   14134:	0f 84 d4 01 00 00    	je     1430e <__vfprintf+0x314e>
   1413a:	48 85 c9             	test   %rcx,%rcx
   1413d:	0f 84 b9 04 00 00    	je     145fc <__vfprintf+0x343c>
   14143:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   14148:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1414c:	31 c0                	xor    %eax,%eax
   1414e:	48 c1 e2 04          	shl    $0x4,%rdx
   14152:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   14156:	e9 c5 db ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1415b:	c7 84 24 9c 00 00 00 	movl   $0x2,0x9c(%rsp)
   14162:	02 00 00 00 
   14166:	e9 1c f0 ff ff       	jmp    13187 <__vfprintf+0x1fc7>
   1416b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   14170:	48 8b 47 08          	mov    0x8(%rdi),%rax
   14174:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14178:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1417c:	e9 f4 fc ff ff       	jmp    13e75 <__vfprintf+0x2cb5>
   14181:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14186:	8b 0e                	mov    (%rsi),%ecx
   14188:	83 f9 2f             	cmp    $0x2f,%ecx
   1418b:	0f 87 08 02 00 00    	ja     14399 <__vfprintf+0x31d9>
   14191:	89 ca                	mov    %ecx,%edx
   14193:	83 c1 08             	add    $0x8,%ecx
   14196:	48 03 56 10          	add    0x10(%rsi),%rdx
   1419a:	89 0e                	mov    %ecx,(%rsi)
   1419c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   141a0:	0f b7 0a             	movzwl (%rdx),%ecx
   141a3:	b8 01 00 00 00       	mov    $0x1,%eax
   141a8:	e9 73 db ff ff       	jmp    11d20 <__vfprintf+0xb60>
   141ad:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   141b2:	8b 0e                	mov    (%rsi),%ecx
   141b4:	83 f9 2f             	cmp    $0x2f,%ecx
   141b7:	0f 87 10 02 00 00    	ja     143cd <__vfprintf+0x320d>
   141bd:	89 ca                	mov    %ecx,%edx
   141bf:	83 c1 08             	add    $0x8,%ecx
   141c2:	48 03 56 10          	add    0x10(%rsi),%rdx
   141c6:	89 0e                	mov    %ecx,(%rsi)
   141c8:	89 44 24 38          	mov    %eax,0x38(%rsp)
   141cc:	0f b7 0a             	movzwl (%rdx),%ecx
   141cf:	31 c0                	xor    %eax,%eax
   141d1:	e9 4a db ff ff       	jmp    11d20 <__vfprintf+0xb60>
   141d6:	4c 89 c7             	mov    %r8,%rdi
   141d9:	e8 02 9e ff ff       	call   dfe0 <dlfree>
   141de:	e9 55 fd ff ff       	jmp    13f38 <__vfprintf+0x2d78>
   141e3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   141e8:	8b 0e                	mov    (%rsi),%ecx
   141ea:	83 f9 2f             	cmp    $0x2f,%ecx
   141ed:	0f 87 c3 04 00 00    	ja     146b6 <__vfprintf+0x34f6>
   141f3:	89 c8                	mov    %ecx,%eax
   141f5:	83 c1 08             	add    $0x8,%ecx
   141f8:	48 03 46 10          	add    0x10(%rsi),%rax
   141fc:	89 0e                	mov    %ecx,(%rsi)
   141fe:	48 0f bf 08          	movswq (%rax),%rcx
   14202:	48 89 c8             	mov    %rcx,%rax
   14205:	e9 cb d8 ff ff       	jmp    11ad5 <__vfprintf+0x915>
   1420a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1420f:	8b 0e                	mov    (%rsi),%ecx
   14211:	83 f9 2f             	cmp    $0x2f,%ecx
   14214:	0f 87 c0 02 00 00    	ja     144da <__vfprintf+0x331a>
   1421a:	89 ca                	mov    %ecx,%edx
   1421c:	83 c1 08             	add    $0x8,%ecx
   1421f:	48 03 56 10          	add    0x10(%rsi),%rdx
   14223:	89 0e                	mov    %ecx,(%rsi)
   14225:	0f b7 0a             	movzwl (%rdx),%ecx
   14228:	e9 7e de ff ff       	jmp    120ab <__vfprintf+0xeeb>
   1422d:	48 85 c9             	test   %rcx,%rcx
   14230:	0f 84 35 04 00 00    	je     1466b <__vfprintf+0x34ab>
   14236:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   1423b:	48 c1 e0 04          	shl    $0x4,%rax
   1423f:	48 63 0c 01          	movslq (%rcx,%rax,1),%rcx
   14243:	48 89 c8             	mov    %rcx,%rax
   14246:	e9 8a d8 ff ff       	jmp    11ad5 <__vfprintf+0x915>
   1424b:	48 85 c9             	test   %rcx,%rcx
   1424e:	0f 84 1a 02 00 00    	je     1446e <__vfprintf+0x32ae>
   14254:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   14259:	48 c1 e2 04          	shl    $0x4,%rdx
   1425d:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   14260:	e9 46 de ff ff       	jmp    120ab <__vfprintf+0xeeb>
   14265:	48 85 c9             	test   %rcx,%rcx
   14268:	0f 84 b5 04 00 00    	je     14723 <__vfprintf+0x3563>
   1426e:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   14273:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14277:	b8 01 00 00 00       	mov    $0x1,%eax
   1427c:	48 c1 e2 04          	shl    $0x4,%rdx
   14280:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   14283:	e9 98 da ff ff       	jmp    11d20 <__vfprintf+0xb60>
   14288:	e8 23 bf ff ff       	call   101b0 <__errno>
   1428d:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   14294:	ff 
   14295:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   1429b:	e9 06 d2 ff ff       	jmp    114a6 <__vfprintf+0x2e6>
   142a0:	41 0f be 44 24 01    	movsbl 0x1(%r12),%eax
   142a6:	31 db                	xor    %ebx,%ebx
   142a8:	4d 89 fc             	mov    %r15,%r12
   142ab:	8d 50 d0             	lea    -0x30(%rax),%edx
   142ae:	89 c1                	mov    %eax,%ecx
   142b0:	83 fa 09             	cmp    $0x9,%edx
   142b3:	76 2e                	jbe    142e3 <__vfprintf+0x3123>
   142b5:	eb 77                	jmp    1432e <__vfprintf+0x316e>
   142b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   142be:	00 00 
   142c0:	49 83 c4 01          	add    $0x1,%r12
   142c4:	8d 5c 10 d0          	lea    -0x30(%rax,%rdx,1),%ebx
   142c8:	41 0f be 04 24       	movsbl (%r12),%eax
   142cd:	8d 50 d0             	lea    -0x30(%rax),%edx
   142d0:	89 c1                	mov    %eax,%ecx
   142d2:	83 fa 09             	cmp    $0x9,%edx
   142d5:	77 57                	ja     1432e <__vfprintf+0x316e>
   142d7:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   142dd:	0f 8f 6d d1 ff ff    	jg     11450 <__vfprintf+0x290>
   142e3:	8d 14 9b             	lea    (%rbx,%rbx,4),%edx
   142e6:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   142eb:	01 d2                	add    %edx,%edx
   142ed:	29 c1                	sub    %eax,%ecx
   142ef:	39 d1                	cmp    %edx,%ecx
   142f1:	7d cd                	jge    142c0 <__vfprintf+0x3100>
   142f3:	e9 58 d1 ff ff       	jmp    11450 <__vfprintf+0x290>
   142f8:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   142fd:	48 8b 41 08          	mov    0x8(%rcx),%rax
   14301:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14305:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   14309:	e9 9c fd ff ff       	jmp    140aa <__vfprintf+0x2eea>
   1430e:	48 85 c9             	test   %rcx,%rcx
   14311:	0f 84 0a 03 00 00    	je     14621 <__vfprintf+0x3461>
   14317:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1431c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14320:	31 c0                	xor    %eax,%eax
   14322:	48 c1 e2 04          	shl    $0x4,%rdx
   14326:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   14329:	e9 f2 d9 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1432e:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   14335:	00 
   14336:	80 f9 24             	cmp    $0x24,%cl
   14339:	0f 84 e3 01 00 00    	je     14522 <__vfprintf+0x3362>
   1433f:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   14344:	8d 48 01             	lea    0x1(%rax),%ecx
   14347:	48 85 d2             	test   %rdx,%rdx
   1434a:	0f 84 b3 01 00 00    	je     14503 <__vfprintf+0x3343>
   14350:	48 c1 e0 04          	shl    $0x4,%rax
   14354:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   14358:	45 85 db             	test   %r11d,%r11d
   1435b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   14360:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   14364:	41 0f be 1f          	movsbl (%r15),%ebx
   14368:	44 0f 48 d8          	cmovs  %eax,%r11d
   1436c:	4d 89 fc             	mov    %r15,%r12
   1436f:	e9 75 d0 ff ff       	jmp    113e9 <__vfprintf+0x229>
   14374:	e8 47 b6 ff ff       	call   f9c0 <__stack_chk_fail>
   14379:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   14380:	00 00 
   14382:	0f 84 44 03 00 00    	je     146cc <__vfprintf+0x350c>
   14388:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1438d:	41 0f be 1f          	movsbl (%r15),%ebx
   14391:	4d 89 fc             	mov    %r15,%r12
   14394:	e9 50 d0 ff ff       	jmp    113e9 <__vfprintf+0x229>
   14399:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1439e:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   143a2:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   143a6:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   143aa:	e9 ed fd ff ff       	jmp    1419c <__vfprintf+0x2fdc>
   143af:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   143b6:	00 00 
   143b8:	74 29                	je     143e3 <__vfprintf+0x3223>
   143ba:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   143c0:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   143c5:	4d 89 fc             	mov    %r15,%r12
   143c8:	e9 1c d0 ff ff       	jmp    113e9 <__vfprintf+0x229>
   143cd:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   143d2:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   143d6:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   143da:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   143de:	e9 e5 fd ff ff       	jmp    141c8 <__vfprintf+0x3008>
   143e3:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   143e8:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   143ef:	00 
   143f0:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   143f7:	00 
   143f8:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   143fd:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   14404:	00 
   14405:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1440c:	00 
   1440d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   14412:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   14417:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1441e:	00 
   1441f:	e8 ec be ff ff       	call   10310 <__find_arguments>
   14424:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
   14429:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   1442f:	4d 89 fc             	mov    %r15,%r12
   14432:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   14437:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1443c:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   14441:	e9 a3 cf ff ff       	jmp    113e9 <__vfprintf+0x229>
   14446:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1444b:	8b 0f                	mov    (%rdi),%ecx
   1444d:	83 f9 2f             	cmp    $0x2f,%ecx
   14450:	77 3a                	ja     1448c <__vfprintf+0x32cc>
   14452:	89 ca                	mov    %ecx,%edx
   14454:	83 c1 08             	add    $0x8,%ecx
   14457:	48 03 57 10          	add    0x10(%rdi),%rdx
   1445b:	89 0f                	mov    %ecx,(%rdi)
   1445d:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14461:	0f b6 0a             	movzbl (%rdx),%ecx
   14464:	b8 01 00 00 00       	mov    $0x1,%eax
   14469:	e9 b2 d8 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1446e:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14473:	8b 0e                	mov    (%rsi),%ecx
   14475:	83 f9 2f             	cmp    $0x2f,%ecx
   14478:	77 25                	ja     1449f <__vfprintf+0x32df>
   1447a:	89 ca                	mov    %ecx,%edx
   1447c:	83 c1 08             	add    $0x8,%ecx
   1447f:	48 03 56 10          	add    0x10(%rsi),%rdx
   14483:	89 0e                	mov    %ecx,(%rsi)
   14485:	8b 0a                	mov    (%rdx),%ecx
   14487:	e9 1f dc ff ff       	jmp    120ab <__vfprintf+0xeeb>
   1448c:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   14491:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   14495:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   14499:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   1449d:	eb be                	jmp    1445d <__vfprintf+0x329d>
   1449f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   144a4:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   144a8:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   144ac:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   144b0:	8b 0a                	mov    (%rdx),%ecx
   144b2:	e9 f4 db ff ff       	jmp    120ab <__vfprintf+0xeeb>
   144b7:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   144bc:	8b 0f                	mov    (%rdi),%ecx
   144be:	83 f9 2f             	cmp    $0x2f,%ecx
   144c1:	77 2d                	ja     144f0 <__vfprintf+0x3330>
   144c3:	89 c8                	mov    %ecx,%eax
   144c5:	83 c1 08             	add    $0x8,%ecx
   144c8:	48 03 47 10          	add    0x10(%rdi),%rax
   144cc:	89 0f                	mov    %ecx,(%rdi)
   144ce:	48 0f be 08          	movsbq (%rax),%rcx
   144d2:	48 89 c8             	mov    %rcx,%rax
   144d5:	e9 fb d5 ff ff       	jmp    11ad5 <__vfprintf+0x915>
   144da:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   144df:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   144e3:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   144e7:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   144eb:	e9 35 fd ff ff       	jmp    14225 <__vfprintf+0x3065>
   144f0:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   144f5:	48 8b 47 08          	mov    0x8(%rdi),%rax
   144f9:	48 8d 48 08          	lea    0x8(%rax),%rcx
   144fd:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   14501:	eb cb                	jmp    144ce <__vfprintf+0x330e>
   14503:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14508:	8b 16                	mov    (%rsi),%edx
   1450a:	83 fa 2f             	cmp    $0x2f,%edx
   1450d:	77 31                	ja     14540 <__vfprintf+0x3380>
   1450f:	89 d0                	mov    %edx,%eax
   14511:	83 c2 08             	add    $0x8,%edx
   14514:	48 03 46 10          	add    0x10(%rsi),%rax
   14518:	89 16                	mov    %edx,(%rsi)
   1451a:	44 8b 18             	mov    (%rax),%r11d
   1451d:	e9 36 fe ff ff       	jmp    14358 <__vfprintf+0x3198>
   14522:	48 85 d2             	test   %rdx,%rdx
   14525:	74 2c                	je     14553 <__vfprintf+0x3393>
   14527:	48 63 c3             	movslq %ebx,%rax
   1452a:	48 c1 e0 04          	shl    $0x4,%rax
   1452e:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   14532:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   14536:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   1453b:	e9 18 fe ff ff       	jmp    14358 <__vfprintf+0x3198>
   14540:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14545:	48 8b 46 08          	mov    0x8(%rsi),%rax
   14549:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1454d:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   14551:	eb c7                	jmp    1451a <__vfprintf+0x335a>
   14553:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   14558:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1455f:	00 
   14560:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   14567:	00 
   14568:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1456d:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   14574:	00 
   14575:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1457c:	00 
   1457d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   14584:	00 
   14585:	e8 86 bd ff ff       	call   10310 <__find_arguments>
   1458a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   14591:	00 
   14592:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14597:	48 85 d2             	test   %rdx,%rdx
   1459a:	75 8b                	jne    14527 <__vfprintf+0x3367>
   1459c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   145a1:	8b 11                	mov    (%rcx),%edx
   145a3:	83 fa 2f             	cmp    $0x2f,%edx
   145a6:	0f 87 e1 00 00 00    	ja     1468d <__vfprintf+0x34cd>
   145ac:	89 d0                	mov    %edx,%eax
   145ae:	83 c2 08             	add    $0x8,%edx
   145b1:	48 03 41 10          	add    0x10(%rcx),%rax
   145b5:	89 11                	mov    %edx,(%rcx)
   145b7:	44 8b 18             	mov    (%rax),%r11d
   145ba:	e9 73 ff ff ff       	jmp    14532 <__vfprintf+0x3372>
   145bf:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   145c4:	8b 0f                	mov    (%rdi),%ecx
   145c6:	83 f9 2f             	cmp    $0x2f,%ecx
   145c9:	0f 87 7b 01 00 00    	ja     1474a <__vfprintf+0x358a>
   145cf:	89 ca                	mov    %ecx,%edx
   145d1:	83 c1 08             	add    $0x8,%ecx
   145d4:	48 03 57 10          	add    0x10(%rdi),%rdx
   145d8:	89 0f                	mov    %ecx,(%rdi)
   145da:	0f b6 0a             	movzbl (%rdx),%ecx
   145dd:	e9 c9 da ff ff       	jmp    120ab <__vfprintf+0xeeb>
   145e2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   145e7:	66 83 48 10 40       	orw    $0x40,0x10(%rax)
   145ec:	e8 bf bb ff ff       	call   101b0 <__errno>
   145f1:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   145f7:	e9 54 cf ff ff       	jmp    11550 <__vfprintf+0x390>
   145fc:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   14601:	8b 0f                	mov    (%rdi),%ecx
   14603:	83 f9 2f             	cmp    $0x2f,%ecx
   14606:	77 3d                	ja     14645 <__vfprintf+0x3485>
   14608:	89 ca                	mov    %ecx,%edx
   1460a:	83 c1 08             	add    $0x8,%ecx
   1460d:	48 03 57 10          	add    0x10(%rdi),%rdx
   14611:	89 0f                	mov    %ecx,(%rdi)
   14613:	89 44 24 38          	mov    %eax,0x38(%rsp)
   14617:	0f b6 0a             	movzbl (%rdx),%ecx
   1461a:	31 c0                	xor    %eax,%eax
   1461c:	e9 ff d6 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   14621:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14626:	8b 0e                	mov    (%rsi),%ecx
   14628:	83 f9 2f             	cmp    $0x2f,%ecx
   1462b:	77 2b                	ja     14658 <__vfprintf+0x3498>
   1462d:	89 ca                	mov    %ecx,%edx
   1462f:	83 c1 08             	add    $0x8,%ecx
   14632:	48 03 56 10          	add    0x10(%rsi),%rdx
   14636:	89 0e                	mov    %ecx,(%rsi)
   14638:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1463c:	8b 0a                	mov    (%rdx),%ecx
   1463e:	31 c0                	xor    %eax,%eax
   14640:	e9 db d6 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   14645:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1464a:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1464e:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   14652:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   14656:	eb bb                	jmp    14613 <__vfprintf+0x3453>
   14658:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1465d:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   14661:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   14665:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   14669:	eb cd                	jmp    14638 <__vfprintf+0x3478>
   1466b:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14670:	8b 0e                	mov    (%rsi),%ecx
   14672:	83 f9 2f             	cmp    $0x2f,%ecx
   14675:	77 2c                	ja     146a3 <__vfprintf+0x34e3>
   14677:	89 c8                	mov    %ecx,%eax
   14679:	83 c1 08             	add    $0x8,%ecx
   1467c:	48 03 46 10          	add    0x10(%rsi),%rax
   14680:	89 0e                	mov    %ecx,(%rsi)
   14682:	48 63 08             	movslq (%rax),%rcx
   14685:	48 89 c8             	mov    %rcx,%rax
   14688:	e9 48 d4 ff ff       	jmp    11ad5 <__vfprintf+0x915>
   1468d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   14692:	48 8b 41 08          	mov    0x8(%rcx),%rax
   14696:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1469a:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1469e:	e9 14 ff ff ff       	jmp    145b7 <__vfprintf+0x33f7>
   146a3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   146a8:	48 8b 46 08          	mov    0x8(%rsi),%rax
   146ac:	48 8d 48 08          	lea    0x8(%rax),%rcx
   146b0:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   146b4:	eb cc                	jmp    14682 <__vfprintf+0x34c2>
   146b6:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   146bb:	48 8b 46 08          	mov    0x8(%rsi),%rax
   146bf:	48 8d 48 08          	lea    0x8(%rax),%rcx
   146c3:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   146c7:	e9 32 fb ff ff       	jmp    141fe <__vfprintf+0x303e>
   146cc:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   146d1:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   146d8:	00 
   146d9:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   146e0:	00 
   146e1:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   146e6:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   146ed:	00 
   146ee:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   146f5:	00 
   146f6:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   146fb:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   14702:	00 
   14703:	e8 08 bc ff ff       	call   10310 <__find_arguments>
   14708:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1470d:	41 0f be 1f          	movsbl (%r15),%ebx
   14711:	4d 89 fc             	mov    %r15,%r12
   14714:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14719:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1471e:	e9 c6 cc ff ff       	jmp    113e9 <__vfprintf+0x229>
   14723:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14728:	8b 0e                	mov    (%rsi),%ecx
   1472a:	83 f9 2f             	cmp    $0x2f,%ecx
   1472d:	77 31                	ja     14760 <__vfprintf+0x35a0>
   1472f:	89 ca                	mov    %ecx,%edx
   14731:	83 c1 08             	add    $0x8,%ecx
   14734:	48 03 56 10          	add    0x10(%rsi),%rdx
   14738:	89 0e                	mov    %ecx,(%rsi)
   1473a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1473e:	8b 0a                	mov    (%rdx),%ecx
   14740:	b8 01 00 00 00       	mov    $0x1,%eax
   14745:	e9 d6 d5 ff ff       	jmp    11d20 <__vfprintf+0xb60>
   1474a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1474f:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   14753:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   14757:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   1475b:	e9 7a fe ff ff       	jmp    145da <__vfprintf+0x341a>
   14760:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   14765:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   14769:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   1476d:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   14771:	eb c7                	jmp    1473a <__vfprintf+0x357a>
   14773:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1477a:	00 00 00 
   1477d:	0f 1f 00             	nopl   (%rax)

0000000000014780 <__memcpy_verw>:
   14780:	8a 06                	mov    (%rsi),%al
   14782:	48 83 ec 08          	sub    $0x8,%rsp
   14786:	8c 1c 24             	mov    %ds,(%rsp)
   14789:	0f 00 2c 24          	verw   (%rsp)
   1478d:	88 07                	mov    %al,(%rdi)
   1478f:	0f ae f0             	mfence 
   14792:	0f ae e8             	lfence 
   14795:	48 83 c4 08          	add    $0x8,%rsp
   14799:	48 89 f8             	mov    %rdi,%rax
   1479c:	c3                   	ret    
   1479d:	cc                   	int3   
   1479e:	cc                   	int3   
   1479f:	cc                   	int3   

00000000000147a0 <__memcpy_8a>:
   147a0:	48 8b 06             	mov    (%rsi),%rax
   147a3:	48 89 07             	mov    %rax,(%rdi)
   147a6:	48 89 f8             	mov    %rdi,%rax
   147a9:	c3                   	ret    
   147aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000147b0 <__memset>:
   147b0:	48 89 f0             	mov    %rsi,%rax
   147b3:	48 25 ff 00 00 00    	and    $0xff,%rax
   147b9:	48 89 d1             	mov    %rdx,%rcx
   147bc:	49 89 fb             	mov    %rdi,%r11
   147bf:	fc                   	cld    
   147c0:	48 83 f9 0f          	cmp    $0xf,%rcx
   147c4:	7e 38                	jle    147fe <L1>
   147c6:	88 c4                	mov    %al,%ah
   147c8:	89 c2                	mov    %eax,%edx
   147ca:	c1 e0 10             	shl    $0x10,%eax
   147cd:	09 d0                	or     %edx,%eax
   147cf:	89 c2                	mov    %eax,%edx
   147d1:	48 c1 e0 20          	shl    $0x20,%rax
   147d5:	48 09 d0             	or     %rdx,%rax
   147d8:	48 89 fa             	mov    %rdi,%rdx
   147db:	48 f7 da             	neg    %rdx
   147de:	48 83 e2 07          	and    $0x7,%rdx
   147e2:	49 89 c8             	mov    %rcx,%r8
   147e5:	49 29 d0             	sub    %rdx,%r8
   147e8:	48 89 d1             	mov    %rdx,%rcx
   147eb:	f3 aa                	rep stos %al,%es:(%rdi)
   147ed:	4c 89 c1             	mov    %r8,%rcx
   147f0:	48 c1 e9 03          	shr    $0x3,%rcx
   147f4:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   147f7:	4c 89 c1             	mov    %r8,%rcx
   147fa:	48 83 e1 07          	and    $0x7,%rcx

00000000000147fe <L1>:
   147fe:	f3 aa                	rep stos %al,%es:(%rdi)
   14800:	4c 89 d8             	mov    %r11,%rax
   14803:	c3                   	ret    
   14804:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1480b:	00 00 00 
   1480e:	66 90                	xchg   %ax,%ax

0000000000014810 <_libc__strlen>:
   14810:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   14817:	01 01 01 
   1481a:	40 f6 c7 07          	test   $0x7,%dil
   1481e:	48 89 f8             	mov    %rdi,%rax
   14821:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   14828:	80 80 80 
   1482b:	75 33                	jne    14860 <_libc__strlen+0x50>
   1482d:	0f 1f 00             	nopl   (%rax)
   14830:	48 8b 10             	mov    (%rax),%rdx
   14833:	48 83 c0 08          	add    $0x8,%rax
   14837:	48 89 d1             	mov    %rdx,%rcx
   1483a:	4c 29 c2             	sub    %r8,%rdx
   1483d:	48 f7 d1             	not    %rcx
   14840:	4c 21 ca             	and    %r9,%rdx
   14843:	74 eb                	je     14830 <_libc__strlen+0x20>
   14845:	48 21 ca             	and    %rcx,%rdx
   14848:	74 e6                	je     14830 <_libc__strlen+0x20>
   1484a:	48 29 f8             	sub    %rdi,%rax
   1484d:	48 0f bc d2          	bsf    %rdx,%rdx
   14851:	48 c1 ea 03          	shr    $0x3,%rdx
   14855:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   1485a:	c3                   	ret    
   1485b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14860:	88 c1                	mov    %al,%cl
   14862:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   14869:	80 e1 07             	and    $0x7,%cl
   1486c:	24 f8                	and    $0xf8,%al
   1486e:	c0 e1 03             	shl    $0x3,%cl
   14871:	48 8b 10             	mov    (%rax),%rdx
   14874:	48 d3 e6             	shl    %cl,%rsi
   14877:	48 ff ce             	dec    %rsi
   1487a:	48 09 f2             	or     %rsi,%rdx
   1487d:	eb b4                	jmp    14833 <_libc__strlen+0x23>
   1487f:	90                   	nop

0000000000014880 <memchr>:
   14880:	f3 0f 1e fa          	endbr64 
   14884:	e9 57 30 00 00       	jmp    178e0 <_libc__memchr>
   14889:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014890 <memmove>:
   14890:	f3 0f 1e fa          	endbr64 
   14894:	e9 77 30 00 00       	jmp    17910 <__memmove>
   14899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000148a0 <__rv_alloc_D2A>:
   148a0:	f3 0f 1e fa          	endbr64 
   148a4:	48 63 ff             	movslq %edi,%rdi
   148a7:	53                   	push   %rbx
   148a8:	31 db                	xor    %ebx,%ebx
   148aa:	48 83 ff 1b          	cmp    $0x1b,%rdi
   148ae:	76 19                	jbe    148c9 <__rv_alloc_D2A+0x29>
   148b0:	ba 04 00 00 00       	mov    $0x4,%edx
   148b5:	0f 1f 00             	nopl   (%rax)
   148b8:	01 d2                	add    %edx,%edx
   148ba:	83 c3 01             	add    $0x1,%ebx
   148bd:	48 63 c2             	movslq %edx,%rax
   148c0:	48 83 c0 18          	add    $0x18,%rax
   148c4:	48 39 f8             	cmp    %rdi,%rax
   148c7:	76 ef                	jbe    148b8 <__rv_alloc_D2A+0x18>
   148c9:	89 df                	mov    %ebx,%edi
   148cb:	e8 10 1e 00 00       	call   166e0 <__Balloc_D2A>
   148d0:	48 85 c0             	test   %rax,%rax
   148d3:	74 06                	je     148db <__rv_alloc_D2A+0x3b>
   148d5:	89 18                	mov    %ebx,(%rax)
   148d7:	48 83 c0 04          	add    $0x4,%rax
   148db:	5b                   	pop    %rbx
   148dc:	c3                   	ret    
   148dd:	0f 1f 00             	nopl   (%rax)

00000000000148e0 <__nrv_alloc_D2A>:
   148e0:	f3 0f 1e fa          	endbr64 
   148e4:	55                   	push   %rbp
   148e5:	48 89 f5             	mov    %rsi,%rbp
   148e8:	53                   	push   %rbx
   148e9:	48 89 fb             	mov    %rdi,%rbx
   148ec:	89 d7                	mov    %edx,%edi
   148ee:	48 83 ec 08          	sub    $0x8,%rsp
   148f2:	e8 a9 ff ff ff       	call   148a0 <__rv_alloc_D2A>
   148f7:	48 85 c0             	test   %rax,%rax
   148fa:	74 30                	je     1492c <__nrv_alloc_D2A+0x4c>
   148fc:	0f b6 13             	movzbl (%rbx),%edx
   148ff:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   14903:	84 d2                	test   %dl,%dl
   14905:	88 10                	mov    %dl,(%rax)
   14907:	48 89 c2             	mov    %rax,%rdx
   1490a:	74 17                	je     14923 <__nrv_alloc_D2A+0x43>
   1490c:	0f 1f 40 00          	nopl   0x0(%rax)
   14910:	0f b6 39             	movzbl (%rcx),%edi
   14913:	48 83 c2 01          	add    $0x1,%rdx
   14917:	48 83 c1 01          	add    $0x1,%rcx
   1491b:	40 88 3a             	mov    %dil,(%rdx)
   1491e:	40 84 ff             	test   %dil,%dil
   14921:	75 ed                	jne    14910 <__nrv_alloc_D2A+0x30>
   14923:	48 85 ed             	test   %rbp,%rbp
   14926:	74 04                	je     1492c <__nrv_alloc_D2A+0x4c>
   14928:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   1492c:	48 83 c4 08          	add    $0x8,%rsp
   14930:	5b                   	pop    %rbx
   14931:	5d                   	pop    %rbp
   14932:	c3                   	ret    
   14933:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1493a:	00 00 00 
   1493d:	0f 1f 00             	nopl   (%rax)

0000000000014940 <__freedtoa>:
   14940:	f3 0f 1e fa          	endbr64 
   14944:	8b 4f fc             	mov    -0x4(%rdi),%ecx
   14947:	b8 01 00 00 00       	mov    $0x1,%eax
   1494c:	48 83 ef 04          	sub    $0x4,%rdi
   14950:	d3 e0                	shl    %cl,%eax
   14952:	89 4f 08             	mov    %ecx,0x8(%rdi)
   14955:	89 47 0c             	mov    %eax,0xc(%rdi)
   14958:	e9 73 1e 00 00       	jmp    167d0 <__Bfree_D2A>
   1495d:	0f 1f 00             	nopl   (%rax)

0000000000014960 <__quorem_D2A>:
   14960:	f3 0f 1e fa          	endbr64 
   14964:	41 57                	push   %r15
   14966:	31 c0                	xor    %eax,%eax
   14968:	41 56                	push   %r14
   1496a:	41 55                	push   %r13
   1496c:	41 54                	push   %r12
   1496e:	55                   	push   %rbp
   1496f:	53                   	push   %rbx
   14970:	48 83 ec 18          	sub    $0x18,%rsp
   14974:	8b 6e 14             	mov    0x14(%rsi),%ebp
   14977:	39 6f 14             	cmp    %ebp,0x14(%rdi)
   1497a:	0f 8c 5f 01 00 00    	jl     14adf <__quorem_D2A+0x17f>
   14980:	83 ed 01             	sub    $0x1,%ebp
   14983:	48 8d 5e 18          	lea    0x18(%rsi),%rbx
   14987:	4c 8d 77 18          	lea    0x18(%rdi),%r14
   1498b:	49 89 ff             	mov    %rdi,%r15
   1498e:	48 63 c5             	movslq %ebp,%rax
   14991:	31 d2                	xor    %edx,%edx
   14993:	48 c1 e0 02          	shl    $0x2,%rax
   14997:	4c 8d 24 03          	lea    (%rbx,%rax,1),%r12
   1499b:	4c 01 f0             	add    %r14,%rax
   1499e:	41 8b 3c 24          	mov    (%r12),%edi
   149a2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   149a7:	8b 00                	mov    (%rax),%eax
   149a9:	8d 4f 01             	lea    0x1(%rdi),%ecx
   149ac:	89 44 24 04          	mov    %eax,0x4(%rsp)
   149b0:	89 c7                	mov    %eax,%edi
   149b2:	f7 f1                	div    %ecx
   149b4:	89 04 24             	mov    %eax,(%rsp)
   149b7:	41 89 c5             	mov    %eax,%r13d
   149ba:	39 cf                	cmp    %ecx,%edi
   149bc:	0f 82 ac 00 00 00    	jb     14a6e <__quorem_D2A+0x10e>
   149c2:	48 89 df             	mov    %rbx,%rdi
   149c5:	4d 89 f1             	mov    %r14,%r9
   149c8:	45 31 db             	xor    %r11d,%r11d
   149cb:	31 d2                	xor    %edx,%edx
   149cd:	0f 1f 00             	nopl   (%rax)
   149d0:	8b 07                	mov    (%rdi),%eax
   149d2:	48 83 c7 04          	add    $0x4,%rdi
   149d6:	49 83 c1 04          	add    $0x4,%r9
   149da:	0f b7 c8             	movzwl %ax,%ecx
   149dd:	c1 e8 10             	shr    $0x10,%eax
   149e0:	41 0f af cd          	imul   %r13d,%ecx
   149e4:	41 0f af c5          	imul   %r13d,%eax
   149e8:	44 01 d9             	add    %r11d,%ecx
   149eb:	41 89 c8             	mov    %ecx,%r8d
   149ee:	0f b7 c9             	movzwl %cx,%ecx
   149f1:	41 c1 e8 10          	shr    $0x10,%r8d
   149f5:	01 ca                	add    %ecx,%edx
   149f7:	44 01 c0             	add    %r8d,%eax
   149fa:	45 8b 41 fc          	mov    -0x4(%r9),%r8d
   149fe:	41 89 c3             	mov    %eax,%r11d
   14a01:	0f b7 c0             	movzwl %ax,%eax
   14a04:	45 0f b7 d0          	movzwl %r8w,%r10d
   14a08:	41 c1 e8 10          	shr    $0x10,%r8d
   14a0c:	41 29 d2             	sub    %edx,%r10d
   14a0f:	41 29 c0             	sub    %eax,%r8d
   14a12:	41 c1 eb 10          	shr    $0x10,%r11d
   14a16:	44 89 d2             	mov    %r10d,%edx
   14a19:	44 89 c0             	mov    %r8d,%eax
   14a1c:	66 45 89 51 fc       	mov    %r10w,-0x4(%r9)
   14a21:	c1 ea 10             	shr    $0x10,%edx
   14a24:	83 e2 01             	and    $0x1,%edx
   14a27:	29 d0                	sub    %edx,%eax
   14a29:	89 c2                	mov    %eax,%edx
   14a2b:	66 41 89 41 fe       	mov    %ax,-0x2(%r9)
   14a30:	c1 ea 10             	shr    $0x10,%edx
   14a33:	83 e2 01             	and    $0x1,%edx
   14a36:	49 39 fc             	cmp    %rdi,%r12
   14a39:	73 95                	jae    149d0 <__quorem_D2A+0x70>
   14a3b:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
   14a40:	45 85 c0             	test   %r8d,%r8d
   14a43:	75 29                	jne    14a6e <__quorem_D2A+0x10e>
   14a45:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   14a4a:	48 83 e8 04          	sub    $0x4,%rax
   14a4e:	49 39 c6             	cmp    %rax,%r14
   14a51:	72 11                	jb     14a64 <__quorem_D2A+0x104>
   14a53:	eb 15                	jmp    14a6a <__quorem_D2A+0x10a>
   14a55:	0f 1f 00             	nopl   (%rax)
   14a58:	48 83 e8 04          	sub    $0x4,%rax
   14a5c:	83 ed 01             	sub    $0x1,%ebp
   14a5f:	49 39 c6             	cmp    %rax,%r14
   14a62:	73 06                	jae    14a6a <__quorem_D2A+0x10a>
   14a64:	8b 38                	mov    (%rax),%edi
   14a66:	85 ff                	test   %edi,%edi
   14a68:	74 ee                	je     14a58 <__quorem_D2A+0xf8>
   14a6a:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   14a6e:	4c 89 ff             	mov    %r15,%rdi
   14a71:	e8 8a 24 00 00       	call   16f00 <__cmp_D2A>
   14a76:	85 c0                	test   %eax,%eax
   14a78:	78 62                	js     14adc <__quorem_D2A+0x17c>
   14a7a:	41 8d 45 01          	lea    0x1(%r13),%eax
   14a7e:	4c 89 f6             	mov    %r14,%rsi
   14a81:	31 d2                	xor    %edx,%edx
   14a83:	89 04 24             	mov    %eax,(%rsp)
   14a86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   14a8d:	00 00 00 
   14a90:	8b 3b                	mov    (%rbx),%edi
   14a92:	8b 06                	mov    (%rsi),%eax
   14a94:	48 83 c3 04          	add    $0x4,%rbx
   14a98:	48 83 c6 04          	add    $0x4,%rsi
   14a9c:	44 0f b7 c7          	movzwl %di,%r8d
   14aa0:	0f b7 c8             	movzwl %ax,%ecx
   14aa3:	c1 ef 10             	shr    $0x10,%edi
   14aa6:	44 01 c2             	add    %r8d,%edx
   14aa9:	c1 e8 10             	shr    $0x10,%eax
   14aac:	29 d1                	sub    %edx,%ecx
   14aae:	29 f8                	sub    %edi,%eax
   14ab0:	89 ca                	mov    %ecx,%edx
   14ab2:	66 89 4e fc          	mov    %cx,-0x4(%rsi)
   14ab6:	c1 ea 10             	shr    $0x10,%edx
   14ab9:	83 e2 01             	and    $0x1,%edx
   14abc:	29 d0                	sub    %edx,%eax
   14abe:	89 c2                	mov    %eax,%edx
   14ac0:	66 89 46 fe          	mov    %ax,-0x2(%rsi)
   14ac4:	c1 ea 10             	shr    $0x10,%edx
   14ac7:	83 e2 01             	and    $0x1,%edx
   14aca:	49 39 dc             	cmp    %rbx,%r12
   14acd:	73 c1                	jae    14a90 <__quorem_D2A+0x130>
   14acf:	48 63 c5             	movslq %ebp,%rax
   14ad2:	49 8d 04 86          	lea    (%r14,%rax,4),%rax
   14ad6:	8b 08                	mov    (%rax),%ecx
   14ad8:	85 c9                	test   %ecx,%ecx
   14ada:	74 1d                	je     14af9 <__quorem_D2A+0x199>
   14adc:	8b 04 24             	mov    (%rsp),%eax
   14adf:	48 83 c4 18          	add    $0x18,%rsp
   14ae3:	5b                   	pop    %rbx
   14ae4:	5d                   	pop    %rbp
   14ae5:	41 5c                	pop    %r12
   14ae7:	41 5d                	pop    %r13
   14ae9:	41 5e                	pop    %r14
   14aeb:	41 5f                	pop    %r15
   14aed:	c3                   	ret    
   14aee:	66 90                	xchg   %ax,%ax
   14af0:	8b 10                	mov    (%rax),%edx
   14af2:	85 d2                	test   %edx,%edx
   14af4:	75 0c                	jne    14b02 <__quorem_D2A+0x1a2>
   14af6:	83 ed 01             	sub    $0x1,%ebp
   14af9:	48 83 e8 04          	sub    $0x4,%rax
   14afd:	49 39 c6             	cmp    %rax,%r14
   14b00:	72 ee                	jb     14af0 <__quorem_D2A+0x190>
   14b02:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   14b06:	eb d4                	jmp    14adc <__quorem_D2A+0x17c>
   14b08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14b0f:	00 

0000000000014b10 <__dtoa>:
   14b10:	f3 0f 1e fa          	endbr64 
   14b14:	41 57                	push   %r15
   14b16:	41 56                	push   %r14
   14b18:	66 49 0f 7e c6       	movq   %xmm0,%r14
   14b1d:	41 55                	push   %r13
   14b1f:	41 54                	push   %r12
   14b21:	55                   	push   %rbp
   14b22:	53                   	push   %rbx
   14b23:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   14b28:	48 83 ec 68          	sub    $0x68,%rsp
   14b2c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
   14b30:	89 74 24 10          	mov    %esi,0x10(%rsp)
   14b34:	48 89 14 24          	mov    %rdx,(%rsp)
   14b38:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   14b3d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14b44:	00 00 
   14b46:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   14b4b:	31 c0                	xor    %eax,%eax
   14b4d:	66 48 0f 7e c0       	movq   %xmm0,%rax
   14b52:	48 c1 e8 20          	shr    $0x20,%rax
   14b56:	89 c5                	mov    %eax,%ebp
   14b58:	85 c0                	test   %eax,%eax
   14b5a:	0f 88 30 04 00 00    	js     14f90 <__dtoa+0x480>
   14b60:	89 e8                	mov    %ebp,%eax
   14b62:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   14b68:	66 0f 28 c8          	movapd %xmm0,%xmm1
   14b6c:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   14b71:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   14b76:	0f 84 46 04 00 00    	je     14fc2 <__dtoa+0x4b2>
   14b7c:	66 0f ef f6          	pxor   %xmm6,%xmm6
   14b80:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   14b84:	0f 8b b6 03 00 00    	jnp    14f40 <__dtoa+0x430>
   14b8a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   14b8e:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   14b93:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
   14b98:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
   14b9e:	e8 fd 26 00 00       	call   172a0 <__d2b_D2A>
   14ba3:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
   14ba9:	48 85 c0             	test   %rax,%rax
   14bac:	49 89 c7             	mov    %rax,%r15
   14baf:	0f 84 db 07 00 00    	je     15390 <__dtoa+0x880>
   14bb5:	89 ef                	mov    %ebp,%edi
   14bb7:	8b 74 24 50          	mov    0x50(%rsp),%esi
   14bbb:	c1 ef 14             	shr    $0x14,%edi
   14bbe:	0f 85 3c 04 00 00    	jne    15000 <__dtoa+0x4f0>
   14bc4:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   14bc8:	48 89 da             	mov    %rbx,%rdx
   14bcb:	01 f7                	add    %esi,%edi
   14bcd:	44 8d 8f 32 04 00 00 	lea    0x432(%rdi),%r9d
   14bd4:	41 83 f9 20          	cmp    $0x20,%r9d
   14bd8:	0f 8e 02 0a 00 00    	jle    155e0 <__dtoa+0xad0>
   14bde:	b9 40 00 00 00       	mov    $0x40,%ecx
   14be3:	89 e8                	mov    %ebp,%eax
   14be5:	44 29 c9             	sub    %r9d,%ecx
   14be8:	d3 e0                	shl    %cl,%eax
   14bea:	8d 8f 12 04 00 00    	lea    0x412(%rdi),%ecx
   14bf0:	d3 ea                	shr    %cl,%edx
   14bf2:	09 d0                	or     %edx,%eax
   14bf4:	89 c2                	mov    %eax,%edx
   14bf6:	66 0f ef e4          	pxor   %xmm4,%xmm4
   14bfa:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
   14c01:	00 
   14c02:	83 ef 01             	sub    $0x1,%edi
   14c05:	f2 48 0f 2a e2       	cvtsi2sd %rdx,%xmm4
   14c0a:	66 48 0f 7e e0       	movq   %xmm4,%rax
   14c0f:	66 48 0f 7e e2       	movq   %xmm4,%rdx
   14c14:	48 c1 e8 20          	shr    $0x20,%rax
   14c18:	89 d2                	mov    %edx,%edx
   14c1a:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   14c1f:	48 c1 e0 20          	shl    $0x20,%rax
   14c23:	48 09 c2             	or     %rax,%rdx
   14c26:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14c2a:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   14c2f:	66 0f ef ff          	pxor   %xmm7,%xmm7
   14c33:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   14c37:	f2 0f 59 15 69 e0 00 	mulsd  0xe069(%rip),%xmm2        # 22ca8 <xdigs_lower.3329+0x38>
   14c3e:	00 
   14c3f:	f2 0f 5c 05 49 e0 00 	subsd  0xe049(%rip),%xmm0        # 22c90 <xdigs_lower.3329+0x20>
   14c46:	00 
   14c47:	f2 0f 59 05 49 e0 00 	mulsd  0xe049(%rip),%xmm0        # 22c98 <xdigs_lower.3329+0x28>
   14c4e:	00 
   14c4f:	f2 0f 58 05 49 e0 00 	addsd  0xe049(%rip),%xmm0        # 22ca0 <xdigs_lower.3329+0x30>
   14c56:	00 
   14c57:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
   14c5b:	66 0f 2f f8          	comisd %xmm0,%xmm7
   14c5f:	f2 0f 2c d8          	cvttsd2si %xmm0,%ebx
   14c63:	0f 87 67 07 00 00    	ja     153d0 <__dtoa+0x8c0>
   14c69:	44 8d 4e ff          	lea    -0x1(%rsi),%r9d
   14c6d:	41 29 f9             	sub    %edi,%r9d
   14c70:	45 89 cd             	mov    %r9d,%r13d
   14c73:	83 fb 16             	cmp    $0x16,%ebx
   14c76:	0f 87 24 07 00 00    	ja     153a0 <__dtoa+0x890>
   14c7c:	48 63 c3             	movslq %ebx,%rax
   14c7f:	48 8d 15 da e0 00 00 	lea    0xe0da(%rip),%rdx        # 22d60 <__tens_D2A>
   14c86:	f2 0f 10 04 c2       	movsd  (%rdx,%rax,8),%xmm0
   14c8b:	66 0f 2f c1          	comisd %xmm1,%xmm0
   14c8f:	0f 86 cb 03 00 00    	jbe    15060 <__dtoa+0x550>
   14c95:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   14c9c:	00 
   14c9d:	83 eb 01             	sub    $0x1,%ebx
   14ca0:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   14ca7:	00 
   14ca8:	45 85 ed             	test   %r13d,%r13d
   14cab:	0f 88 08 07 00 00    	js     153b9 <__dtoa+0x8a9>
   14cb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14cb8:	85 db                	test   %ebx,%ebx
   14cba:	0f 89 b9 03 00 00    	jns    15079 <__dtoa+0x569>
   14cc0:	8b 44 24 20          	mov    0x20(%rsp),%eax
   14cc4:	41 89 dc             	mov    %ebx,%r12d
   14cc7:	29 5c 24 24          	sub    %ebx,0x24(%rsp)
   14ccb:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   14ccf:	41 f7 dc             	neg    %r12d
   14cd2:	31 db                	xor    %ebx,%ebx
   14cd4:	83 f8 09             	cmp    $0x9,%eax
   14cd7:	0f 87 b3 03 00 00    	ja     15090 <__dtoa+0x580>
   14cdd:	bd 01 00 00 00       	mov    $0x1,%ebp
   14ce2:	83 f8 05             	cmp    $0x5,%eax
   14ce5:	7e 09                	jle    14cf0 <__dtoa+0x1e0>
   14ce7:	83 e8 04             	sub    $0x4,%eax
   14cea:	31 ed                	xor    %ebp,%ebp
   14cec:	89 44 24 20          	mov    %eax,0x20(%rsp)
   14cf0:	8b 44 24 20          	mov    0x20(%rsp),%eax
   14cf4:	83 f8 04             	cmp    $0x4,%eax
   14cf7:	0f 84 63 0e 00 00    	je     15b60 <__dtoa+0x1050>
   14cfd:	83 f8 05             	cmp    $0x5,%eax
   14d00:	0f 84 8a 09 00 00    	je     15690 <__dtoa+0xb80>
   14d06:	83 f8 02             	cmp    $0x2,%eax
   14d09:	0f 84 e9 08 00 00    	je     155f8 <__dtoa+0xae8>
   14d0f:	83 f8 03             	cmp    $0x3,%eax
   14d12:	0f 85 80 03 00 00    	jne    15098 <__dtoa+0x588>
   14d18:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   14d1f:	00 
   14d20:	8b 44 24 10          	mov    0x10(%rsp),%eax
   14d24:	03 44 24 28          	add    0x28(%rsp),%eax
   14d28:	bf 01 00 00 00       	mov    $0x1,%edi
   14d2d:	89 44 24 48          	mov    %eax,0x48(%rsp)
   14d31:	83 c0 01             	add    $0x1,%eax
   14d34:	85 c0                	test   %eax,%eax
   14d36:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   14d3a:	0f 4f f8             	cmovg  %eax,%edi
   14d3d:	f2 0f 11 4c 24 38    	movsd  %xmm1,0x38(%rsp)
   14d43:	e8 58 fb ff ff       	call   148a0 <__rv_alloc_D2A>
   14d48:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14d4d:	48 85 c0             	test   %rax,%rax
   14d50:	0f 84 3a 06 00 00    	je     15390 <__dtoa+0x880>
   14d56:	83 7c 24 2c 0e       	cmpl   $0xe,0x2c(%rsp)
   14d5b:	0f 96 c0             	setbe  %al
   14d5e:	40 20 e8             	and    %bpl,%al
   14d61:	89 c1                	mov    %eax,%ecx
   14d63:	0f 84 e6 06 00 00    	je     1544f <__dtoa+0x93f>
   14d69:	8b 44 24 28          	mov    0x28(%rsp),%eax
   14d6d:	f2 0f 10 4c 24 38    	movsd  0x38(%rsp),%xmm1
   14d73:	85 c0                	test   %eax,%eax
   14d75:	0f 8e a5 08 00 00    	jle    15620 <__dtoa+0xb10>
   14d7b:	89 c2                	mov    %eax,%edx
   14d7d:	89 c1                	mov    %eax,%ecx
   14d7f:	48 8d 05 da df 00 00 	lea    0xdfda(%rip),%rax        # 22d60 <__tens_D2A>
   14d86:	83 e2 0f             	and    $0xf,%edx
   14d89:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   14d8e:	89 ca                	mov    %ecx,%edx
   14d90:	c1 fa 04             	sar    $0x4,%edx
   14d93:	80 e5 01             	and    $0x1,%ch
   14d96:	0f 84 bc 09 00 00    	je     15758 <__dtoa+0xc48>
   14d9c:	83 e2 0f             	and    $0xf,%edx
   14d9f:	b8 03 00 00 00       	mov    $0x3,%eax
   14da4:	66 0f 28 c1          	movapd %xmm1,%xmm0
   14da8:	f2 0f 5e 05 90 e0 00 	divsd  0xe090(%rip),%xmm0        # 22e40 <__bigtens_D2A+0x20>
   14daf:	00 
   14db0:	85 d2                	test   %edx,%edx
   14db2:	74 24                	je     14dd8 <__dtoa+0x2c8>
   14db4:	31 f6                	xor    %esi,%esi
   14db6:	4c 8d 15 63 e0 00 00 	lea    0xe063(%rip),%r10        # 22e20 <__bigtens_D2A>
   14dbd:	0f 1f 00             	nopl   (%rax)
   14dc0:	f6 c2 01             	test   $0x1,%dl
   14dc3:	74 0c                	je     14dd1 <__dtoa+0x2c1>
   14dc5:	48 63 ce             	movslq %esi,%rcx
   14dc8:	83 c0 01             	add    $0x1,%eax
   14dcb:	f2 41 0f 59 14 ca    	mulsd  (%r10,%rcx,8),%xmm2
   14dd1:	83 c6 01             	add    $0x1,%esi
   14dd4:	d1 fa                	sar    %edx
   14dd6:	75 e8                	jne    14dc0 <__dtoa+0x2b0>
   14dd8:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   14ddc:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   14de1:	45 85 d2             	test   %r10d,%r10d
   14de4:	74 12                	je     14df8 <__dtoa+0x2e8>
   14de6:	f2 0f 10 2d c2 de 00 	movsd  0xdec2(%rip),%xmm5        # 22cb0 <xdigs_lower.3329+0x40>
   14ded:	00 
   14dee:	66 0f 2f e8          	comisd %xmm0,%xmm5
   14df2:	0f 87 38 0e 00 00    	ja     15c30 <__dtoa+0x1120>
   14df8:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14dfc:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   14e01:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   14e05:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   14e09:	f2 0f 58 15 af de 00 	addsd  0xdeaf(%rip),%xmm2        # 22cc0 <xdigs_lower.3329+0x50>
   14e10:	00 
   14e11:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   14e16:	66 48 0f 7e d0       	movq   %xmm2,%rax
   14e1b:	48 c1 ea 20          	shr    $0x20,%rdx
   14e1f:	89 c0                	mov    %eax,%eax
   14e21:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   14e27:	48 c1 e2 20          	shl    $0x20,%rdx
   14e2b:	48 09 d0             	or     %rdx,%rax
   14e2e:	45 85 c0             	test   %r8d,%r8d
   14e31:	0f 84 ea 05 00 00    	je     15421 <__dtoa+0x911>
   14e37:	8b 74 24 28          	mov    0x28(%rsp),%esi
   14e3b:	89 74 24 38          	mov    %esi,0x38(%rsp)
   14e3f:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
   14e43:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   14e47:	66 0f ef d2          	pxor   %xmm2,%xmm2
   14e4b:	66 48 0f 6e d8       	movq   %rax,%xmm3
   14e50:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   14e55:	8d 46 ff             	lea    -0x1(%rsi),%eax
   14e58:	48 8d 15 01 df 00 00 	lea    0xdf01(%rip),%rdx        # 22d60 <__tens_D2A>
   14e5f:	48 98                	cltq   
   14e61:	f2 0f 10 24 c2       	movsd  (%rdx,%rax,8),%xmm4
   14e66:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   14e6a:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   14e6e:	8d 47 30             	lea    0x30(%rdi),%eax
   14e71:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   14e75:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   14e79:	85 ff                	test   %edi,%edi
   14e7b:	0f 84 2f 09 00 00    	je     157b0 <__dtoa+0xca0>
   14e81:	f2 0f 10 15 47 de 00 	movsd  0xde47(%rip),%xmm2        # 22cd0 <xdigs_lower.3329+0x60>
   14e88:	00 
   14e89:	88 01                	mov    %al,(%rcx)
   14e8b:	f2 0f 5e d4          	divsd  %xmm4,%xmm2
   14e8f:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
   14e93:	66 0f 2f d0          	comisd %xmm0,%xmm2
   14e97:	0f 87 bb 0e 00 00    	ja     15d58 <__dtoa+0x1248>
   14e9d:	bf 01 00 00 00       	mov    $0x1,%edi
   14ea2:	f2 0f 10 2d 06 de 00 	movsd  0xde06(%rip),%xmm5        # 22cb0 <xdigs_lower.3329+0x40>
   14ea9:	00 
   14eaa:	f2 0f 10 25 06 de 00 	movsd  0xde06(%rip),%xmm4        # 22cb8 <xdigs_lower.3329+0x48>
   14eb1:	00 
   14eb2:	29 d7                	sub    %edx,%edi
   14eb4:	eb 41                	jmp    14ef7 <__dtoa+0x3e7>
   14eb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   14ebd:	00 00 00 
   14ec0:	8d 04 17             	lea    (%rdi,%rdx,1),%eax
   14ec3:	39 f0                	cmp    %esi,%eax
   14ec5:	0f 8d 7f 05 00 00    	jge    1544a <__dtoa+0x93a>
   14ecb:	f2 0f 59 c4          	mulsd  %xmm4,%xmm0
   14ecf:	66 0f ef db          	pxor   %xmm3,%xmm3
   14ed3:	48 83 c2 01          	add    $0x1,%rdx
   14ed7:	f2 0f 59 d4          	mulsd  %xmm4,%xmm2
   14edb:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   14edf:	f2 0f 2a d8          	cvtsi2sd %eax,%xmm3
   14ee3:	83 c0 30             	add    $0x30,%eax
   14ee6:	88 42 ff             	mov    %al,-0x1(%rdx)
   14ee9:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
   14eed:	66 0f 2f d0          	comisd %xmm0,%xmm2
   14ef1:	0f 87 61 0e 00 00    	ja     15d58 <__dtoa+0x1248>
   14ef7:	66 0f 28 dd          	movapd %xmm5,%xmm3
   14efb:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
   14eff:	66 0f 2f d3          	comisd %xmm3,%xmm2
   14f03:	76 bb                	jbe    14ec0 <__dtoa+0x3b0>
   14f05:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   14f0a:	eb 0d                	jmp    14f19 <__dtoa+0x409>
   14f0c:	0f 1f 40 00          	nopl   0x0(%rax)
   14f10:	48 39 f2             	cmp    %rsi,%rdx
   14f13:	0f 84 27 0e 00 00    	je     15d40 <__dtoa+0x1230>
   14f19:	48 89 d1             	mov    %rdx,%rcx
   14f1c:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
   14f20:	48 83 ea 01          	sub    $0x1,%rdx
   14f24:	3c 39                	cmp    $0x39,%al
   14f26:	74 e8                	je     14f10 <__dtoa+0x400>
   14f28:	83 c0 01             	add    $0x1,%eax
   14f2b:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   14f30:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   14f35:	88 02                	mov    %al,(%rdx)
   14f37:	e9 2d 09 00 00       	jmp    15869 <__dtoa+0xd59>
   14f3c:	0f 1f 40 00          	nopl   0x0(%rax)
   14f40:	0f 85 44 fc ff ff    	jne    14b8a <__dtoa+0x7a>
   14f46:	48 8b 04 24          	mov    (%rsp),%rax
   14f4a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   14f4f:	ba 01 00 00 00       	mov    $0x1,%edx
   14f54:	48 8d 3d e8 d2 00 00 	lea    0xd2e8(%rip),%rdi        # 22243 <g_dyn_entry_table+0x243>
   14f5b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   14f61:	e8 7a f9 ff ff       	call   148e0 <__nrv_alloc_D2A>
   14f66:	49 89 c6             	mov    %rax,%r14
   14f69:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   14f6e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   14f75:	00 00 
   14f77:	0f 85 cb 0f 00 00    	jne    15f48 <__dtoa+0x1438>
   14f7d:	48 83 c4 68          	add    $0x68,%rsp
   14f81:	4c 89 f0             	mov    %r14,%rax
   14f84:	5b                   	pop    %rbx
   14f85:	5d                   	pop    %rbp
   14f86:	41 5c                	pop    %r12
   14f88:	41 5d                	pop    %r13
   14f8a:	41 5e                	pop    %r14
   14f8c:	41 5f                	pop    %r15
   14f8e:	c3                   	ret    
   14f8f:	90                   	nop
   14f90:	81 e5 ff ff ff 7f    	and    $0x7fffffff,%ebp
   14f96:	89 da                	mov    %ebx,%edx
   14f98:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
   14f9e:	48 89 e8             	mov    %rbp,%rax
   14fa1:	48 c1 e0 20          	shl    $0x20,%rax
   14fa5:	48 09 c2             	or     %rax,%rdx
   14fa8:	89 e8                	mov    %ebp,%eax
   14faa:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   14faf:	49 89 d6             	mov    %rdx,%r14
   14fb2:	66 48 0f 6e ca       	movq   %rdx,%xmm1
   14fb7:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   14fbc:	0f 85 ba fb ff ff    	jne    14b7c <__dtoa+0x6c>
   14fc2:	48 8b 04 24          	mov    (%rsp),%rax
   14fc6:	66 48 0f 7e cb       	movq   %xmm1,%rbx
   14fcb:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   14fd1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   14fd8:	ff 0f 00 
   14fdb:	48 85 d8             	test   %rbx,%rax
   14fde:	75 58                	jne    15038 <__dtoa+0x528>
   14fe0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   14fe5:	ba 08 00 00 00       	mov    $0x8,%edx
   14fea:	48 8d 3d 8f dc 00 00 	lea    0xdc8f(%rip),%rdi        # 22c80 <xdigs_lower.3329+0x10>
   14ff1:	e8 ea f8 ff ff       	call   148e0 <__nrv_alloc_D2A>
   14ff6:	49 89 c6             	mov    %rax,%r14
   14ff9:	e9 6b ff ff ff       	jmp    14f69 <__dtoa+0x459>
   14ffe:	66 90                	xchg   %ax,%ax
   15000:	66 48 0f 7e c8       	movq   %xmm1,%rax
   15005:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1500a:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   15011:	00 
   15012:	81 ef ff 03 00 00    	sub    $0x3ff,%edi
   15018:	48 c1 e8 20          	shr    $0x20,%rax
   1501c:	89 d2                	mov    %edx,%edx
   1501e:	25 ff ff 0f 00       	and    $0xfffff,%eax
   15023:	48 0d 00 00 f0 3f    	or     $0x3ff00000,%rax
   15029:	48 c1 e0 20          	shl    $0x20,%rax
   1502d:	48 09 c2             	or     %rax,%rdx
   15030:	e9 f1 fb ff ff       	jmp    14c26 <__dtoa+0x116>
   15035:	0f 1f 00             	nopl   (%rax)
   15038:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1503d:	ba 03 00 00 00       	mov    $0x3,%edx
   15042:	48 8d 3d 40 dc 00 00 	lea    0xdc40(%rip),%rdi        # 22c89 <xdigs_lower.3329+0x19>
   15049:	e8 92 f8 ff ff       	call   148e0 <__nrv_alloc_D2A>
   1504e:	49 89 c6             	mov    %rax,%r14
   15051:	e9 13 ff ff ff       	jmp    14f69 <__dtoa+0x459>
   15056:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1505d:	00 00 00 
   15060:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   15067:	00 
   15068:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   1506f:	00 
   15070:	45 85 c9             	test   %r9d,%r9d
   15073:	0f 88 40 03 00 00    	js     153b9 <__dtoa+0x8a9>
   15079:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1507d:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   15081:	41 01 dd             	add    %ebx,%r13d
   15084:	45 31 e4             	xor    %r12d,%r12d
   15087:	83 f8 09             	cmp    $0x9,%eax
   1508a:	0f 86 4d fc ff ff    	jbe    14cdd <__dtoa+0x1cd>
   15090:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   15097:	00 
   15098:	bf 12 00 00 00       	mov    $0x12,%edi
   1509d:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   150a3:	e8 f8 f7 ff ff       	call   148a0 <__rv_alloc_D2A>
   150a8:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   150ae:	48 85 c0             	test   %rax,%rax
   150b1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   150b6:	0f 84 d4 02 00 00    	je     15390 <__dtoa+0x880>
   150bc:	8b 44 24 54          	mov    0x54(%rsp),%eax
   150c0:	85 c0                	test   %eax,%eax
   150c2:	78 0b                	js     150cf <__dtoa+0x5bf>
   150c4:	83 7c 24 28 0e       	cmpl   $0xe,0x28(%rsp)
   150c9:	0f 8e d1 07 00 00    	jle    158a0 <__dtoa+0xd90>
   150cf:	c7 44 24 48 ff ff ff 	movl   $0xffffffff,0x48(%rsp)
   150d6:	ff 
   150d7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   150de:	00 
   150df:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   150e6:	ff 
   150e7:	8b 54 24 44          	mov    0x44(%rsp),%edx
   150eb:	05 33 04 00 00       	add    $0x433,%eax
   150f0:	85 d2                	test   %edx,%edx
   150f2:	0f 84 28 07 00 00    	je     15820 <__dtoa+0xd10>
   150f8:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   150fc:	bf 01 00 00 00       	mov    $0x1,%edi
   15101:	41 01 c5             	add    %eax,%r13d
   15104:	8d 34 01             	lea    (%rcx,%rax,1),%esi
   15107:	89 74 24 38          	mov    %esi,0x38(%rsp)
   1510b:	e8 e0 18 00 00       	call   169f0 <__i2b_D2A>
   15110:	48 89 c5             	mov    %rax,%rbp
   15113:	48 85 c0             	test   %rax,%rax
   15116:	0f 84 74 02 00 00    	je     15390 <__dtoa+0x880>
   1511c:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   15123:	00 
   15124:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   15128:	85 c9                	test   %ecx,%ecx
   1512a:	7e 1b                	jle    15147 <__dtoa+0x637>
   1512c:	45 85 ed             	test   %r13d,%r13d
   1512f:	7e 16                	jle    15147 <__dtoa+0x637>
   15131:	44 39 e9             	cmp    %r13d,%ecx
   15134:	89 c8                	mov    %ecx,%eax
   15136:	41 0f 4f c5          	cmovg  %r13d,%eax
   1513a:	29 44 24 38          	sub    %eax,0x38(%rsp)
   1513e:	29 c1                	sub    %eax,%ecx
   15140:	41 29 c5             	sub    %eax,%r13d
   15143:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   15147:	45 85 e4             	test   %r12d,%r12d
   1514a:	7e 47                	jle    15193 <__dtoa+0x683>
   1514c:	44 89 e6             	mov    %r12d,%esi
   1514f:	44 8b 64 24 40       	mov    0x40(%rsp),%r12d
   15154:	45 85 e4             	test   %r12d,%r12d
   15157:	0f 84 5b 05 00 00    	je     156b8 <__dtoa+0xba8>
   1515d:	48 89 ef             	mov    %rbp,%rdi
   15160:	e8 eb 1a 00 00       	call   16c50 <__pow5mult_D2A>
   15165:	48 89 c5             	mov    %rax,%rbp
   15168:	48 85 c0             	test   %rax,%rax
   1516b:	0f 84 1f 02 00 00    	je     15390 <__dtoa+0x880>
   15171:	4c 89 fe             	mov    %r15,%rsi
   15174:	48 89 c7             	mov    %rax,%rdi
   15177:	e8 a4 18 00 00       	call   16a20 <__mult_D2A>
   1517c:	49 89 c4             	mov    %rax,%r12
   1517f:	48 85 c0             	test   %rax,%rax
   15182:	0f 84 08 02 00 00    	je     15390 <__dtoa+0x880>
   15188:	4c 89 ff             	mov    %r15,%rdi
   1518b:	4d 89 e7             	mov    %r12,%r15
   1518e:	e8 3d 16 00 00       	call   167d0 <__Bfree_D2A>
   15193:	bf 01 00 00 00       	mov    $0x1,%edi
   15198:	e8 53 18 00 00       	call   169f0 <__i2b_D2A>
   1519d:	49 89 c4             	mov    %rax,%r12
   151a0:	48 85 c0             	test   %rax,%rax
   151a3:	0f 84 e7 01 00 00    	je     15390 <__dtoa+0x880>
   151a9:	85 db                	test   %ebx,%ebx
   151ab:	0f 85 27 05 00 00    	jne    156d8 <__dtoa+0xbc8>
   151b1:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   151b6:	0f 8e d4 07 00 00    	jle    15990 <__dtoa+0xe80>
   151bc:	8b 44 24 40          	mov    0x40(%rsp),%eax
   151c0:	85 c0                	test   %eax,%eax
   151c2:	0f 85 c8 07 00 00    	jne    15990 <__dtoa+0xe80>
   151c8:	b8 01 00 00 00       	mov    $0x1,%eax
   151cd:	44 01 e8             	add    %r13d,%eax
   151d0:	83 e0 1f             	and    $0x1f,%eax
   151d3:	0f 84 c7 04 00 00    	je     156a0 <__dtoa+0xb90>
   151d9:	ba 20 00 00 00       	mov    $0x20,%edx
   151de:	29 c2                	sub    %eax,%edx
   151e0:	83 fa 04             	cmp    $0x4,%edx
   151e3:	0f 8e 82 0d 00 00    	jle    15f6b <__dtoa+0x145b>
   151e9:	ba 1c 00 00 00       	mov    $0x1c,%edx
   151ee:	29 c2                	sub    %eax,%edx
   151f0:	01 54 24 38          	add    %edx,0x38(%rsp)
   151f4:	01 54 24 24          	add    %edx,0x24(%rsp)
   151f8:	41 01 d5             	add    %edx,%r13d
   151fb:	8b 44 24 38          	mov    0x38(%rsp),%eax
   151ff:	85 c0                	test   %eax,%eax
   15201:	0f 8f 69 05 00 00    	jg     15770 <__dtoa+0xc60>
   15207:	45 85 ed             	test   %r13d,%r13d
   1520a:	0f 8f 80 05 00 00    	jg     15790 <__dtoa+0xc80>
   15210:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   15215:	45 85 db             	test   %r11d,%r11d
   15218:	0f 85 62 02 00 00    	jne    15480 <__dtoa+0x970>
   1521e:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   15223:	45 85 c9             	test   %r9d,%r9d
   15226:	0f 8e 44 09 00 00    	jle    15b70 <__dtoa+0x1060>
   1522c:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   15230:	85 ff                	test   %edi,%edi
   15232:	0f 84 a0 02 00 00    	je     154d8 <__dtoa+0x9c8>
   15238:	8b 44 24 24          	mov    0x24(%rsp),%eax
   1523c:	85 c0                	test   %eax,%eax
   1523e:	0f 8f 2c 07 00 00    	jg     15970 <__dtoa+0xe60>
   15244:	49 89 ed             	mov    %rbp,%r13
   15247:	85 db                	test   %ebx,%ebx
   15249:	0f 85 81 07 00 00    	jne    159d0 <__dtoa+0xec0>
   1524f:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   15253:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   15258:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   1525d:	83 e8 01             	sub    $0x1,%eax
   15260:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   15265:	48 8d 5c 01 01       	lea    0x1(%rcx,%rax,1),%rbx
   1526a:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   1526f:	90                   	nop
   15270:	4c 89 e6             	mov    %r12,%rsi
   15273:	4c 89 ff             	mov    %r15,%rdi
   15276:	e8 e5 f6 ff ff       	call   14960 <__quorem_D2A>
   1527b:	48 89 ee             	mov    %rbp,%rsi
   1527e:	4c 89 ff             	mov    %r15,%rdi
   15281:	89 44 24 44          	mov    %eax,0x44(%rsp)
   15285:	44 8d 70 30          	lea    0x30(%rax),%r14d
   15289:	e8 72 1c 00 00       	call   16f00 <__cmp_D2A>
   1528e:	4c 89 ee             	mov    %r13,%rsi
   15291:	4c 89 e7             	mov    %r12,%rdi
   15294:	89 c3                	mov    %eax,%ebx
   15296:	e8 b5 1c 00 00       	call   16f50 <__diff_D2A>
   1529b:	48 85 c0             	test   %rax,%rax
   1529e:	0f 84 ec 00 00 00    	je     15390 <__dtoa+0x880>
   152a4:	8b 48 10             	mov    0x10(%rax),%ecx
   152a7:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   152ac:	0f 95 c2             	setne  %dl
   152af:	85 c9                	test   %ecx,%ecx
   152b1:	88 54 24 24          	mov    %dl,0x24(%rsp)
   152b5:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   152b9:	0f 85 91 07 00 00    	jne    15a50 <__dtoa+0xf40>
   152bf:	48 89 c6             	mov    %rax,%rsi
   152c2:	4c 89 ff             	mov    %r15,%rdi
   152c5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   152ca:	e8 31 1c 00 00       	call   16f00 <__cmp_D2A>
   152cf:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   152d4:	89 44 24 40          	mov    %eax,0x40(%rsp)
   152d8:	4c 89 cf             	mov    %r9,%rdi
   152db:	e8 f0 14 00 00       	call   167d0 <__Bfree_D2A>
   152e0:	8b 44 24 40          	mov    0x40(%rsp),%eax
   152e4:	85 c0                	test   %eax,%eax
   152e6:	0f 85 d4 07 00 00    	jne    15ac0 <__dtoa+0xfb0>
   152ec:	0f b6 54 24 24       	movzbl 0x24(%rsp),%edx
   152f1:	84 d2                	test   %dl,%dl
   152f3:	0f 84 c7 07 00 00    	je     15ac0 <__dtoa+0xfb0>
   152f9:	8b 44 24 48          	mov    0x48(%rsp),%eax
   152fd:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   15301:	83 e0 01             	and    $0x1,%eax
   15304:	0f 84 64 0b 00 00    	je     15e6e <__dtoa+0x135e>
   1530a:	85 db                	test   %ebx,%ebx
   1530c:	0f 88 24 0b 00 00    	js     15e36 <__dtoa+0x1326>
   15312:	09 d8                	or     %ebx,%eax
   15314:	0f 84 b5 0b 00 00    	je     15ecf <__dtoa+0x13bf>
   1531a:	48 83 44 24 10 01    	addq   $0x1,0x10(%rsp)
   15320:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15325:	44 88 70 ff          	mov    %r14b,-0x1(%rax)
   15329:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   1532e:	0f 84 ef 0a 00 00    	je     15e23 <__dtoa+0x1313>
   15334:	4c 89 ff             	mov    %r15,%rdi
   15337:	31 d2                	xor    %edx,%edx
   15339:	be 0a 00 00 00       	mov    $0xa,%esi
   1533e:	e8 7d 15 00 00       	call   168c0 <__multadd_D2A>
   15343:	49 89 c7             	mov    %rax,%r15
   15346:	48 85 c0             	test   %rax,%rax
   15349:	74 45                	je     15390 <__dtoa+0x880>
   1534b:	31 d2                	xor    %edx,%edx
   1534d:	be 0a 00 00 00       	mov    $0xa,%esi
   15352:	48 89 ef             	mov    %rbp,%rdi
   15355:	4c 39 ed             	cmp    %r13,%rbp
   15358:	0f 84 42 07 00 00    	je     15aa0 <__dtoa+0xf90>
   1535e:	e8 5d 15 00 00       	call   168c0 <__multadd_D2A>
   15363:	48 89 c5             	mov    %rax,%rbp
   15366:	48 85 c0             	test   %rax,%rax
   15369:	74 25                	je     15390 <__dtoa+0x880>
   1536b:	4c 89 ef             	mov    %r13,%rdi
   1536e:	31 d2                	xor    %edx,%edx
   15370:	be 0a 00 00 00       	mov    $0xa,%esi
   15375:	e8 46 15 00 00       	call   168c0 <__multadd_D2A>
   1537a:	49 89 c5             	mov    %rax,%r13
   1537d:	48 85 c0             	test   %rax,%rax
   15380:	0f 85 ea fe ff ff    	jne    15270 <__dtoa+0x760>
   15386:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1538d:	00 00 00 
   15390:	45 31 f6             	xor    %r14d,%r14d
   15393:	e9 d1 fb ff ff       	jmp    14f69 <__dtoa+0x459>
   15398:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1539f:	00 
   153a0:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   153a7:	00 
   153a8:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   153af:	00 
   153b0:	45 85 ed             	test   %r13d,%r13d
   153b3:	0f 89 ff f8 ff ff    	jns    14cb8 <__dtoa+0x1a8>
   153b9:	29 f7                	sub    %esi,%edi
   153bb:	45 31 ed             	xor    %r13d,%r13d
   153be:	8d 47 01             	lea    0x1(%rdi),%eax
   153c1:	89 44 24 24          	mov    %eax,0x24(%rsp)
   153c5:	e9 ee f8 ff ff       	jmp    14cb8 <__dtoa+0x1a8>
   153ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   153d0:	66 0f ef d2          	pxor   %xmm2,%xmm2
   153d4:	f2 0f 2a d3          	cvtsi2sd %ebx,%xmm2
   153d8:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
   153dc:	7a 06                	jp     153e4 <__dtoa+0x8d4>
   153de:	0f 84 85 f8 ff ff    	je     14c69 <__dtoa+0x159>
   153e4:	83 eb 01             	sub    $0x1,%ebx
   153e7:	e9 7d f8 ff ff       	jmp    14c69 <__dtoa+0x159>
   153ec:	0f 1f 40 00          	nopl   0x0(%rax)
   153f0:	66 0f ef d2          	pxor   %xmm2,%xmm2
   153f4:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   153f8:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   153fc:	f2 0f 58 15 bc d8 00 	addsd  0xd8bc(%rip),%xmm2        # 22cc0 <xdigs_lower.3329+0x50>
   15403:	00 
   15404:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   15409:	66 48 0f 7e d0       	movq   %xmm2,%rax
   1540e:	48 c1 ea 20          	shr    $0x20,%rdx
   15412:	89 c0                	mov    %eax,%eax
   15414:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   1541a:	48 c1 e2 20          	shl    $0x20,%rdx
   1541e:	48 09 d0             	or     %rdx,%rax
   15421:	f2 0f 5c 05 9f d8 00 	subsd  0xd89f(%rip),%xmm0        # 22cc8 <xdigs_lower.3329+0x58>
   15428:	00 
   15429:	66 48 0f 6e d0       	movq   %rax,%xmm2
   1542e:	66 0f 2f c2          	comisd %xmm2,%xmm0
   15432:	0f 87 68 08 00 00    	ja     15ca0 <__dtoa+0x1190>
   15438:	66 0f 57 15 a0 d8 00 	xorpd  0xd8a0(%rip),%xmm2        # 22ce0 <xdigs_lower.3329+0x70>
   1543f:	00 
   15440:	66 0f 2f d0          	comisd %xmm0,%xmm2
   15444:	0f 87 f6 03 00 00    	ja     15840 <__dtoa+0xd30>
   1544a:	66 49 0f 7e ce       	movq   %xmm1,%r14
   1544f:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   15453:	8b 44 24 54          	mov    0x54(%rsp),%eax
   15457:	83 f9 0e             	cmp    $0xe,%ecx
   1545a:	7f 08                	jg     15464 <__dtoa+0x954>
   1545c:	85 c0                	test   %eax,%eax
   1545e:	0f 89 8c 06 00 00    	jns    15af0 <__dtoa+0xfe0>
   15464:	8b 74 24 24          	mov    0x24(%rsp),%esi
   15468:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1546c:	31 ed                	xor    %ebp,%ebp
   1546e:	89 74 24 38          	mov    %esi,0x38(%rsp)
   15472:	85 c9                	test   %ecx,%ecx
   15474:	0f 84 aa fc ff ff    	je     15124 <__dtoa+0x614>
   1547a:	e9 68 fc ff ff       	jmp    150e7 <__dtoa+0x5d7>
   1547f:	90                   	nop
   15480:	4c 89 e6             	mov    %r12,%rsi
   15483:	4c 89 ff             	mov    %r15,%rdi
   15486:	e8 75 1a 00 00       	call   16f00 <__cmp_D2A>
   1548b:	85 c0                	test   %eax,%eax
   1548d:	0f 89 8b fd ff ff    	jns    1521e <__dtoa+0x70e>
   15493:	4c 89 ff             	mov    %r15,%rdi
   15496:	31 d2                	xor    %edx,%edx
   15498:	be 0a 00 00 00       	mov    $0xa,%esi
   1549d:	83 6c 24 28 01       	subl   $0x1,0x28(%rsp)
   154a2:	e8 19 14 00 00       	call   168c0 <__multadd_D2A>
   154a7:	49 89 c7             	mov    %rax,%r15
   154aa:	48 85 c0             	test   %rax,%rax
   154ad:	0f 84 dd fe ff ff    	je     15390 <__dtoa+0x880>
   154b3:	44 8b 54 24 40       	mov    0x40(%rsp),%r10d
   154b8:	45 85 d2             	test   %r10d,%r10d
   154bb:	0f 85 e2 09 00 00    	jne    15ea3 <__dtoa+0x1393>
   154c1:	8b 44 24 48          	mov    0x48(%rsp),%eax
   154c5:	85 c0                	test   %eax,%eax
   154c7:	0f 8e 1b 0a 00 00    	jle    15ee8 <__dtoa+0x13d8>
   154cd:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   154d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   154d8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   154dd:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   154e2:	4c 89 f3             	mov    %r14,%rbx
   154e5:	eb 24                	jmp    1550b <__dtoa+0x9fb>
   154e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   154ee:	00 00 
   154f0:	4c 89 ff             	mov    %r15,%rdi
   154f3:	31 d2                	xor    %edx,%edx
   154f5:	be 0a 00 00 00       	mov    $0xa,%esi
   154fa:	e8 c1 13 00 00       	call   168c0 <__multadd_D2A>
   154ff:	49 89 c7             	mov    %rax,%r15
   15502:	48 85 c0             	test   %rax,%rax
   15505:	0f 84 85 fe ff ff    	je     15390 <__dtoa+0x880>
   1550b:	4c 89 e6             	mov    %r12,%rsi
   1550e:	4c 89 ff             	mov    %r15,%rdi
   15511:	48 83 c3 01          	add    $0x1,%rbx
   15515:	e8 46 f4 ff ff       	call   14960 <__quorem_D2A>
   1551a:	8d 50 30             	lea    0x30(%rax),%edx
   1551d:	88 53 ff             	mov    %dl,-0x1(%rbx)
   15520:	41 8b 4f 18          	mov    0x18(%r15),%ecx
   15524:	85 c9                	test   %ecx,%ecx
   15526:	75 0b                	jne    15533 <__dtoa+0xa23>
   15528:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   1552d:	0f 8e 75 08 00 00    	jle    15da8 <__dtoa+0x1298>
   15533:	89 d8                	mov    %ebx,%eax
   15535:	44 29 f0             	sub    %r14d,%eax
   15538:	41 39 c5             	cmp    %eax,%r13d
   1553b:	7f b3                	jg     154f0 <__dtoa+0x9e0>
   1553d:	45 31 f6             	xor    %r14d,%r14d
   15540:	4c 89 ff             	mov    %r15,%rdi
   15543:	be 01 00 00 00       	mov    $0x1,%esi
   15548:	89 54 24 20          	mov    %edx,0x20(%rsp)
   1554c:	e8 6f 18 00 00       	call   16dc0 <__lshift_D2A>
   15551:	49 89 c7             	mov    %rax,%r15
   15554:	48 85 c0             	test   %rax,%rax
   15557:	0f 84 33 fe ff ff    	je     15390 <__dtoa+0x880>
   1555d:	4c 89 e6             	mov    %r12,%rsi
   15560:	48 89 c7             	mov    %rax,%rdi
   15563:	e8 98 19 00 00       	call   16f00 <__cmp_D2A>
   15568:	0f b6 4b ff          	movzbl -0x1(%rbx),%ecx
   1556c:	85 c0                	test   %eax,%eax
   1556e:	0f 8e 63 08 00 00    	jle    15dd7 <__dtoa+0x12c7>
   15574:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   15579:	eb 15                	jmp    15590 <__dtoa+0xa80>
   1557b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15580:	48 39 d0             	cmp    %rdx,%rax
   15583:	0f 84 36 08 00 00    	je     15dbf <__dtoa+0x12af>
   15589:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   1558d:	48 89 c3             	mov    %rax,%rbx
   15590:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   15594:	80 f9 39             	cmp    $0x39,%cl
   15597:	74 e7                	je     15580 <__dtoa+0xa70>
   15599:	83 c1 01             	add    $0x1,%ecx
   1559c:	88 08                	mov    %cl,(%rax)
   1559e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   155a2:	89 44 24 38          	mov    %eax,0x38(%rsp)
   155a6:	4c 89 e7             	mov    %r12,%rdi
   155a9:	e8 22 12 00 00       	call   167d0 <__Bfree_D2A>
   155ae:	48 85 ed             	test   %rbp,%rbp
   155b1:	0f 84 96 09 00 00    	je     15f4d <__dtoa+0x143d>
   155b7:	4d 85 f6             	test   %r14,%r14
   155ba:	0f 84 9c 09 00 00    	je     15f5c <__dtoa+0x144c>
   155c0:	49 39 ee             	cmp    %rbp,%r14
   155c3:	0f 84 93 09 00 00    	je     15f5c <__dtoa+0x144c>
   155c9:	4c 89 f7             	mov    %r14,%rdi
   155cc:	e8 ff 11 00 00       	call   167d0 <__Bfree_D2A>
   155d1:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   155d6:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   155db:	e9 81 02 00 00       	jmp    15861 <__dtoa+0xd51>
   155e0:	b9 20 00 00 00       	mov    $0x20,%ecx
   155e5:	89 d8                	mov    %ebx,%eax
   155e7:	44 29 c9             	sub    %r9d,%ecx
   155ea:	d3 e0                	shl    %cl,%eax
   155ec:	e9 03 f6 ff ff       	jmp    14bf4 <__dtoa+0xe4>
   155f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   155f8:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   155ff:	00 
   15600:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
   15605:	45 85 db             	test   %r11d,%r11d
   15608:	0f 8e 22 01 00 00    	jle    15730 <__dtoa+0xc20>
   1560e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   15612:	89 7c 24 48          	mov    %edi,0x48(%rsp)
   15616:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
   1561a:	e9 1e f7 ff ff       	jmp    14d3d <__dtoa+0x22d>
   1561f:	90                   	nop
   15620:	8b 74 24 28          	mov    0x28(%rsp),%esi
   15624:	f7 de                	neg    %esi
   15626:	0f 84 04 02 00 00    	je     15830 <__dtoa+0xd20>
   1562c:	89 f2                	mov    %esi,%edx
   1562e:	48 8d 05 2b d7 00 00 	lea    0xd72b(%rip),%rax        # 22d60 <__tens_D2A>
   15635:	83 e2 0f             	and    $0xf,%edx
   15638:	c1 fe 04             	sar    $0x4,%esi
   1563b:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   15640:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
   15644:	66 0f 28 c2          	movapd %xmm2,%xmm0
   15648:	0f 84 16 08 00 00    	je     15e64 <__dtoa+0x1354>
   1564e:	31 d2                	xor    %edx,%edx
   15650:	b8 02 00 00 00       	mov    $0x2,%eax
   15655:	4c 8d 15 c4 d7 00 00 	lea    0xd7c4(%rip),%r10        # 22e20 <__bigtens_D2A>
   1565c:	31 ff                	xor    %edi,%edi
   1565e:	66 90                	xchg   %ax,%ax
   15660:	40 f6 c6 01          	test   $0x1,%sil
   15664:	74 0e                	je     15674 <__dtoa+0xb64>
   15666:	48 63 d7             	movslq %edi,%rdx
   15669:	83 c0 01             	add    $0x1,%eax
   1566c:	f2 41 0f 59 04 d2    	mulsd  (%r10,%rdx,8),%xmm0
   15672:	89 ca                	mov    %ecx,%edx
   15674:	83 c7 01             	add    $0x1,%edi
   15677:	d1 fe                	sar    %esi
   15679:	75 e5                	jne    15660 <__dtoa+0xb50>
   1567b:	84 d2                	test   %dl,%dl
   1567d:	0f 85 59 f7 ff ff    	jne    14ddc <__dtoa+0x2cc>
   15683:	66 0f 28 c2          	movapd %xmm2,%xmm0
   15687:	e9 50 f7 ff ff       	jmp    14ddc <__dtoa+0x2cc>
   1568c:	0f 1f 40 00          	nopl   0x0(%rax)
   15690:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   15697:	00 
   15698:	e9 83 f6 ff ff       	jmp    14d20 <__dtoa+0x210>
   1569d:	0f 1f 00             	nopl   (%rax)
   156a0:	b8 1c 00 00 00       	mov    $0x1c,%eax
   156a5:	01 44 24 38          	add    %eax,0x38(%rsp)
   156a9:	41 01 c5             	add    %eax,%r13d
   156ac:	01 44 24 24          	add    %eax,0x24(%rsp)
   156b0:	e9 46 fb ff ff       	jmp    151fb <__dtoa+0x6eb>
   156b5:	0f 1f 00             	nopl   (%rax)
   156b8:	4c 89 ff             	mov    %r15,%rdi
   156bb:	e8 90 15 00 00       	call   16c50 <__pow5mult_D2A>
   156c0:	49 89 c7             	mov    %rax,%r15
   156c3:	48 85 c0             	test   %rax,%rax
   156c6:	0f 85 c7 fa ff ff    	jne    15193 <__dtoa+0x683>
   156cc:	e9 bf fc ff ff       	jmp    15390 <__dtoa+0x880>
   156d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   156d8:	89 de                	mov    %ebx,%esi
   156da:	48 89 c7             	mov    %rax,%rdi
   156dd:	e8 6e 15 00 00       	call   16c50 <__pow5mult_D2A>
   156e2:	49 89 c4             	mov    %rax,%r12
   156e5:	48 85 c0             	test   %rax,%rax
   156e8:	0f 84 a2 fc ff ff    	je     15390 <__dtoa+0x880>
   156ee:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   156f3:	0f 8e 27 03 00 00    	jle    15a20 <__dtoa+0xf10>
   156f9:	8b 54 24 40          	mov    0x40(%rsp),%edx
   156fd:	85 d2                	test   %edx,%edx
   156ff:	0f 85 1b 03 00 00    	jne    15a20 <__dtoa+0xf10>
   15705:	31 db                	xor    %ebx,%ebx
   15707:	41 8b 44 24 14       	mov    0x14(%r12),%eax
   1570c:	83 e8 01             	sub    $0x1,%eax
   1570f:	48 98                	cltq   
   15711:	41 8b 7c 84 18       	mov    0x18(%r12,%rax,4),%edi
   15716:	e8 75 12 00 00       	call   16990 <__hi0bits_D2A>
   1571b:	41 89 c2             	mov    %eax,%r10d
   1571e:	b8 20 00 00 00       	mov    $0x20,%eax
   15723:	44 29 d0             	sub    %r10d,%eax
   15726:	e9 a2 fa ff ff       	jmp    151cd <__dtoa+0x6bd>
   1572b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15730:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
   15737:	00 
   15738:	bf 01 00 00 00       	mov    $0x1,%edi
   1573d:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%rsp)
   15744:	00 
   15745:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   1574c:	00 
   1574d:	e9 eb f5 ff ff       	jmp    14d3d <__dtoa+0x22d>
   15752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15758:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1575c:	b8 02 00 00 00       	mov    $0x2,%eax
   15761:	e9 4a f6 ff ff       	jmp    14db0 <__dtoa+0x2a0>
   15766:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1576d:	00 00 00 
   15770:	4c 89 ff             	mov    %r15,%rdi
   15773:	89 c6                	mov    %eax,%esi
   15775:	e8 46 16 00 00       	call   16dc0 <__lshift_D2A>
   1577a:	49 89 c7             	mov    %rax,%r15
   1577d:	48 85 c0             	test   %rax,%rax
   15780:	0f 85 81 fa ff ff    	jne    15207 <__dtoa+0x6f7>
   15786:	e9 05 fc ff ff       	jmp    15390 <__dtoa+0x880>
   1578b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15790:	4c 89 e7             	mov    %r12,%rdi
   15793:	44 89 ee             	mov    %r13d,%esi
   15796:	e8 25 16 00 00       	call   16dc0 <__lshift_D2A>
   1579b:	49 89 c4             	mov    %rax,%r12
   1579e:	48 85 c0             	test   %rax,%rax
   157a1:	0f 85 69 fa ff ff    	jne    15210 <__dtoa+0x700>
   157a7:	e9 e4 fb ff ff       	jmp    15390 <__dtoa+0x880>
   157ac:	0f 1f 40 00          	nopl   0x0(%rax)
   157b0:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
   157b4:	66 0f ef ff          	pxor   %xmm7,%xmm7
   157b8:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   157bc:	0f 8a fe 03 00 00    	jp     15bc0 <__dtoa+0x10b0>
   157c2:	0f 85 f8 03 00 00    	jne    15bc0 <__dtoa+0x10b0>
   157c8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   157cd:	0f 1f 00             	nopl   (%rax)
   157d0:	88 06                	mov    %al,(%rsi)
   157d2:	f2 0f 10 15 f6 d4 00 	movsd  0xd4f6(%rip),%xmm2        # 22cd0 <xdigs_lower.3329+0x60>
   157d9:	00 
   157da:	66 0f 28 dc          	movapd %xmm4,%xmm3
   157de:	f2 0f 58 da          	addsd  %xmm2,%xmm3
   157e2:	66 0f 2f c3          	comisd %xmm3,%xmm0
   157e6:	0f 87 19 f7 ff ff    	ja     14f05 <__dtoa+0x3f5>
   157ec:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
   157f0:	66 0f 2f d0          	comisd %xmm0,%xmm2
   157f4:	0f 86 50 fc ff ff    	jbe    1544a <__dtoa+0x93a>
   157fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15800:	48 89 d0             	mov    %rdx,%rax
   15803:	48 83 ea 01          	sub    $0x1,%rdx
   15807:	80 3a 30             	cmpb   $0x30,(%rdx)
   1580a:	74 f4                	je     15800 <__dtoa+0xcf0>
   1580c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15811:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15816:	eb 51                	jmp    15869 <__dtoa+0xd59>
   15818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1581f:	00 
   15820:	b8 36 00 00 00       	mov    $0x36,%eax
   15825:	2b 44 24 50          	sub    0x50(%rsp),%eax
   15829:	e9 ca f8 ff ff       	jmp    150f8 <__dtoa+0x5e8>
   1582e:	66 90                	xchg   %ax,%ax
   15830:	66 0f 28 c1          	movapd %xmm1,%xmm0
   15834:	b8 02 00 00 00       	mov    $0x2,%eax
   15839:	e9 9e f5 ff ff       	jmp    14ddc <__dtoa+0x2cc>
   1583e:	66 90                	xchg   %ax,%ax
   15840:	45 31 e4             	xor    %r12d,%r12d
   15843:	31 ed                	xor    %ebp,%ebp
   15845:	8b 44 24 10          	mov    0x10(%rsp),%eax
   15849:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1584e:	f7 d0                	not    %eax
   15850:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15854:	4c 89 e7             	mov    %r12,%rdi
   15857:	e8 74 0f 00 00       	call   167d0 <__Bfree_D2A>
   1585c:	48 85 ed             	test   %rbp,%rbp
   1585f:	74 08                	je     15869 <__dtoa+0xd59>
   15861:	48 89 ef             	mov    %rbp,%rdi
   15864:	e8 67 0f 00 00       	call   167d0 <__Bfree_D2A>
   15869:	4c 89 ff             	mov    %r15,%rdi
   1586c:	e8 5f 0f 00 00       	call   167d0 <__Bfree_D2A>
   15871:	44 8b 6c 24 38       	mov    0x38(%rsp),%r13d
   15876:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1587b:	48 8b 0c 24          	mov    (%rsp),%rcx
   1587f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   15884:	41 83 c5 01          	add    $0x1,%r13d
   15888:	c6 00 00             	movb   $0x0,(%rax)
   1588b:	44 89 29             	mov    %r13d,(%rcx)
   1588e:	48 85 db             	test   %rbx,%rbx
   15891:	0f 84 d2 f6 ff ff    	je     14f69 <__dtoa+0x459>
   15897:	48 89 03             	mov    %rax,(%rbx)
   1589a:	e9 ca f6 ff ff       	jmp    14f69 <__dtoa+0x459>
   1589f:	90                   	nop
   158a0:	48 63 44 24 28       	movslq 0x28(%rsp),%rax
   158a5:	48 8d 15 b4 d4 00 00 	lea    0xd4b4(%rip),%rdx        # 22d60 <__tens_D2A>
   158ac:	66 0f 28 c1          	movapd %xmm1,%xmm0
   158b0:	66 0f ef f6          	pxor   %xmm6,%xmm6
   158b4:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   158b9:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   158be:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   158c2:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   158c6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   158ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
   158ce:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   158d2:	83 c0 30             	add    $0x30,%eax
   158d5:	88 03                	mov    %al,(%rbx)
   158d7:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   158db:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   158df:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   158e3:	0f 8b ee 05 00 00    	jnp    15ed7 <__dtoa+0x13c7>
   158e9:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   158f0:	ff 
   158f1:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   158f5:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   158fa:	f2 0f 10 1d b6 d3 00 	movsd  0xd3b6(%rip),%xmm3        # 22cb8 <xdigs_lower.3329+0x48>
   15901:	00 
   15902:	83 e8 02             	sub    $0x2,%eax
   15905:	48 8d 54 03 02       	lea    0x2(%rbx,%rax,1),%rdx
   1590a:	eb 0d                	jmp    15919 <__dtoa+0xe09>
   1590c:	0f 1f 40 00          	nopl   0x0(%rax)
   15910:	48 39 d1             	cmp    %rdx,%rcx
   15913:	0f 84 57 04 00 00    	je     15d70 <__dtoa+0x1260>
   15919:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   1591d:	66 0f ef ff          	pxor   %xmm7,%xmm7
   15921:	48 83 c1 01          	add    $0x1,%rcx
   15925:	66 0f 28 c1          	movapd %xmm1,%xmm0
   15929:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   1592d:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   15931:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15935:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   15939:	8d 70 30             	lea    0x30(%rax),%esi
   1593c:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
   15940:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   15944:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   15948:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   1594c:	7a c2                	jp     15910 <__dtoa+0xe00>
   1594e:	75 c0                	jne    15910 <__dtoa+0xe00>
   15950:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15954:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15959:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   1595e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15962:	e9 02 ff ff ff       	jmp    15869 <__dtoa+0xd59>
   15967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1596e:	00 00 
   15970:	48 89 ef             	mov    %rbp,%rdi
   15973:	89 c6                	mov    %eax,%esi
   15975:	e8 46 14 00 00       	call   16dc0 <__lshift_D2A>
   1597a:	48 89 c5             	mov    %rax,%rbp
   1597d:	48 85 c0             	test   %rax,%rax
   15980:	0f 85 be f8 ff ff    	jne    15244 <__dtoa+0x734>
   15986:	e9 05 fa ff ff       	jmp    15390 <__dtoa+0x880>
   1598b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15990:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   15997:	ff 0f 00 
   1599a:	49 85 c6             	test   %rax,%r14
   1599d:	0f 85 25 f8 ff ff    	jne    151c8 <__dtoa+0x6b8>
   159a3:	4c 89 f0             	mov    %r14,%rax
   159a6:	48 c1 e8 20          	shr    $0x20,%rax
   159aa:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   159af:	0f 84 13 f8 ff ff    	je     151c8 <__dtoa+0x6b8>
   159b5:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   159ba:	41 83 c5 01          	add    $0x1,%r13d
   159be:	85 db                	test   %ebx,%ebx
   159c0:	bb 01 00 00 00       	mov    $0x1,%ebx
   159c5:	0f 84 fd f7 ff ff    	je     151c8 <__dtoa+0x6b8>
   159cb:	e9 37 fd ff ff       	jmp    15707 <__dtoa+0xbf7>
   159d0:	8b 7d 08             	mov    0x8(%rbp),%edi
   159d3:	e8 08 0d 00 00       	call   166e0 <__Balloc_D2A>
   159d8:	49 89 c5             	mov    %rax,%r13
   159db:	48 85 c0             	test   %rax,%rax
   159de:	0f 84 ac f9 ff ff    	je     15390 <__dtoa+0x880>
   159e4:	48 63 45 14          	movslq 0x14(%rbp),%rax
   159e8:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   159ec:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   159f0:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   159f7:	00 
   159f8:	e8 33 9c ff ff       	call   f630 <memcpy>
   159fd:	4c 89 ef             	mov    %r13,%rdi
   15a00:	be 01 00 00 00       	mov    $0x1,%esi
   15a05:	e8 b6 13 00 00       	call   16dc0 <__lshift_D2A>
   15a0a:	49 89 c5             	mov    %rax,%r13
   15a0d:	48 85 c0             	test   %rax,%rax
   15a10:	0f 85 39 f8 ff ff    	jne    1524f <__dtoa+0x73f>
   15a16:	e9 75 f9 ff ff       	jmp    15390 <__dtoa+0x880>
   15a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15a20:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   15a27:	ff 0f 00 
   15a2a:	49 85 c6             	test   %rax,%r14
   15a2d:	0f 85 d2 fc ff ff    	jne    15705 <__dtoa+0xbf5>
   15a33:	4c 89 f0             	mov    %r14,%rax
   15a36:	48 c1 e8 20          	shr    $0x20,%rax
   15a3a:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   15a3f:	0f 85 70 ff ff ff    	jne    159b5 <__dtoa+0xea5>
   15a45:	e9 bb fc ff ff       	jmp    15705 <__dtoa+0xbf5>
   15a4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15a50:	48 89 c7             	mov    %rax,%rdi
   15a53:	e8 78 0d 00 00       	call   167d0 <__Bfree_D2A>
   15a58:	85 db                	test   %ebx,%ebx
   15a5a:	0f 88 9d 04 00 00    	js     15efd <__dtoa+0x13ed>
   15a60:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   15a65:	0f 85 45 02 00 00    	jne    15cb0 <__dtoa+0x11a0>
   15a6b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15a70:	44 89 f2             	mov    %r14d,%edx
   15a73:	48 8d 58 01          	lea    0x1(%rax),%rbx
   15a77:	83 fa 39             	cmp    $0x39,%edx
   15a7a:	0f 84 c7 03 00 00    	je     15e47 <__dtoa+0x1337>
   15a80:	83 c2 01             	add    $0x1,%edx
   15a83:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15a88:	49 89 ee             	mov    %rbp,%r14
   15a8b:	4c 89 ed             	mov    %r13,%rbp
   15a8e:	88 10                	mov    %dl,(%rax)
   15a90:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15a94:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15a98:	e9 09 fb ff ff       	jmp    155a6 <__dtoa+0xa96>
   15a9d:	0f 1f 00             	nopl   (%rax)
   15aa0:	e8 1b 0e 00 00       	call   168c0 <__multadd_D2A>
   15aa5:	48 89 c5             	mov    %rax,%rbp
   15aa8:	48 85 c0             	test   %rax,%rax
   15aab:	0f 84 df f8 ff ff    	je     15390 <__dtoa+0x880>
   15ab1:	49 89 c5             	mov    %rax,%r13
   15ab4:	e9 b7 f7 ff ff       	jmp    15270 <__dtoa+0x760>
   15ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15ac0:	85 db                	test   %ebx,%ebx
   15ac2:	0f 88 fc 01 00 00    	js     15cc4 <__dtoa+0x11b4>
   15ac8:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   15acd:	0f 85 e2 01 00 00    	jne    15cb5 <__dtoa+0x11a5>
   15ad3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   15ad8:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   15adc:	85 c0                	test   %eax,%eax
   15ade:	0f 8f 3a 04 00 00    	jg     15f1e <__dtoa+0x140e>
   15ae4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   15ae9:	e9 32 f8 ff ff       	jmp    15320 <__dtoa+0x810>
   15aee:	66 90                	xchg   %ax,%ax
   15af0:	8b 74 24 10          	mov    0x10(%rsp),%esi
   15af4:	48 63 c1             	movslq %ecx,%rax
   15af7:	48 8d 15 62 d2 00 00 	lea    0xd262(%rip),%rdx        # 22d60 <__tens_D2A>
   15afe:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   15b03:	85 f6                	test   %esi,%esi
   15b05:	0f 89 74 04 00 00    	jns    15f7f <__dtoa+0x146f>
   15b0b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   15b0f:	85 c0                	test   %eax,%eax
   15b11:	0f 8f 68 04 00 00    	jg     15f7f <__dtoa+0x146f>
   15b17:	0f 85 23 fd ff ff    	jne    15840 <__dtoa+0xd30>
   15b1d:	f2 0f 59 15 a3 d1 00 	mulsd  0xd1a3(%rip),%xmm2        # 22cc8 <xdigs_lower.3329+0x58>
   15b24:	00 
   15b25:	66 49 0f 6e fe       	movq   %r14,%xmm7
   15b2a:	45 31 e4             	xor    %r12d,%r12d
   15b2d:	31 ed                	xor    %ebp,%ebp
   15b2f:	66 0f 2f d7          	comisd %xmm7,%xmm2
   15b33:	0f 83 0c fd ff ff    	jae    15845 <__dtoa+0xd35>
   15b39:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   15b3e:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   15b42:	c6 00 31             	movb   $0x31,(%rax)
   15b45:	83 c3 01             	add    $0x1,%ebx
   15b48:	49 89 c6             	mov    %rax,%r14
   15b4b:	48 83 c0 01          	add    $0x1,%rax
   15b4f:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
   15b53:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15b58:	e9 f7 fc ff ff       	jmp    15854 <__dtoa+0xd44>
   15b5d:	0f 1f 00             	nopl   (%rax)
   15b60:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   15b67:	00 
   15b68:	e9 93 fa ff ff       	jmp    15600 <__dtoa+0xaf0>
   15b6d:	0f 1f 00             	nopl   (%rax)
   15b70:	8b 44 24 20          	mov    0x20(%rsp),%eax
   15b74:	83 e8 03             	sub    $0x3,%eax
   15b77:	83 e0 fd             	and    $0xfffffffd,%eax
   15b7a:	0f 85 ac f6 ff ff    	jne    1522c <__dtoa+0x71c>
   15b80:	4c 89 e7             	mov    %r12,%rdi
   15b83:	31 d2                	xor    %edx,%edx
   15b85:	be 05 00 00 00       	mov    $0x5,%esi
   15b8a:	e8 31 0d 00 00       	call   168c0 <__multadd_D2A>
   15b8f:	49 89 c4             	mov    %rax,%r12
   15b92:	48 85 c0             	test   %rax,%rax
   15b95:	0f 84 f5 f7 ff ff    	je     15390 <__dtoa+0x880>
   15b9b:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   15ba0:	45 85 c0             	test   %r8d,%r8d
   15ba3:	0f 85 9c fc ff ff    	jne    15845 <__dtoa+0xd35>
   15ba9:	48 89 c6             	mov    %rax,%rsi
   15bac:	4c 89 ff             	mov    %r15,%rdi
   15baf:	e8 4c 13 00 00       	call   16f00 <__cmp_D2A>
   15bb4:	85 c0                	test   %eax,%eax
   15bb6:	7f 81                	jg     15b39 <__dtoa+0x1029>
   15bb8:	e9 88 fc ff ff       	jmp    15845 <__dtoa+0xd35>
   15bbd:	0f 1f 00             	nopl   (%rax)
   15bc0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   15bc5:	88 01                	mov    %al,(%rcx)
   15bc7:	83 fe 01             	cmp    $0x1,%esi
   15bca:	0f 84 02 fc ff ff    	je     157d2 <__dtoa+0xcc2>
   15bd0:	8d 46 fe             	lea    -0x2(%rsi),%eax
   15bd3:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   15bd8:	f2 0f 10 1d d8 d0 00 	movsd  0xd0d8(%rip),%xmm3        # 22cb8 <xdigs_lower.3329+0x48>
   15bdf:	00 
   15be0:	48 8d 7c 06 02       	lea    0x2(%rsi,%rax,1),%rdi
   15be5:	eb 15                	jmp    15bfc <__dtoa+0x10ec>
   15be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15bee:	00 00 
   15bf0:	88 42 ff             	mov    %al,-0x1(%rdx)
   15bf3:	48 39 d7             	cmp    %rdx,%rdi
   15bf6:	0f 84 d6 fb ff ff    	je     157d2 <__dtoa+0xcc2>
   15bfc:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   15c00:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15c04:	66 0f ef ed          	pxor   %xmm5,%xmm5
   15c08:	48 89 d6             	mov    %rdx,%rsi
   15c0b:	48 83 c2 01          	add    $0x1,%rdx
   15c0f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   15c13:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   15c17:	83 c0 30             	add    $0x30,%eax
   15c1a:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   15c1e:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   15c22:	7a cc                	jp     15bf0 <__dtoa+0x10e0>
   15c24:	0f 84 a6 fb ff ff    	je     157d0 <__dtoa+0xcc0>
   15c2a:	eb c4                	jmp    15bf0 <__dtoa+0x10e0>
   15c2c:	0f 1f 40 00          	nopl   0x0(%rax)
   15c30:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   15c35:	45 85 c9             	test   %r9d,%r9d
   15c38:	0f 84 b2 f7 ff ff    	je     153f0 <__dtoa+0x8e0>
   15c3e:	8b 74 24 48          	mov    0x48(%rsp),%esi
   15c42:	85 f6                	test   %esi,%esi
   15c44:	0f 8e 00 f8 ff ff    	jle    1544a <__dtoa+0x93a>
   15c4a:	f2 0f 10 1d 66 d0 00 	movsd  0xd066(%rip),%xmm3        # 22cb8 <xdigs_lower.3329+0x48>
   15c51:	00 
   15c52:	83 c0 01             	add    $0x1,%eax
   15c55:	66 0f ef d2          	pxor   %xmm2,%xmm2
   15c59:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   15c5d:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   15c61:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   15c65:	83 e9 01             	sub    $0x1,%ecx
   15c68:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   15c6c:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   15c70:	f2 0f 58 15 48 d0 00 	addsd  0xd048(%rip),%xmm2        # 22cc0 <xdigs_lower.3329+0x50>
   15c77:	00 
   15c78:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   15c7d:	66 48 0f 7e d0       	movq   %xmm2,%rax
   15c82:	48 c1 ea 20          	shr    $0x20,%rdx
   15c86:	89 c0                	mov    %eax,%eax
   15c88:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   15c8e:	48 c1 e2 20          	shl    $0x20,%rdx
   15c92:	48 09 d0             	or     %rdx,%rax
   15c95:	e9 a9 f1 ff ff       	jmp    14e43 <__dtoa+0x333>
   15c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15ca0:	45 31 e4             	xor    %r12d,%r12d
   15ca3:	31 ed                	xor    %ebp,%ebp
   15ca5:	e9 8f fe ff ff       	jmp    15b39 <__dtoa+0x1029>
   15caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15cb0:	b8 01 00 00 00       	mov    $0x1,%eax
   15cb5:	8b 54 24 48          	mov    0x48(%rsp),%edx
   15cb9:	83 e2 01             	and    $0x1,%edx
   15cbc:	09 da                	or     %ebx,%edx
   15cbe:	0f 85 0f fe ff ff    	jne    15ad3 <__dtoa+0xfc3>
   15cc4:	44 89 f2             	mov    %r14d,%edx
   15cc7:	89 c1                	mov    %eax,%ecx
   15cc9:	41 8b 77 18          	mov    0x18(%r15),%esi
   15ccd:	85 f6                	test   %esi,%esi
   15ccf:	75 0b                	jne    15cdc <__dtoa+0x11cc>
   15cd1:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   15cd6:	0f 8e 5d 01 00 00    	jle    15e39 <__dtoa+0x1329>
   15cdc:	85 c9                	test   %ecx,%ecx
   15cde:	0f 8e 55 01 00 00    	jle    15e39 <__dtoa+0x1329>
   15ce4:	4c 89 ff             	mov    %r15,%rdi
   15ce7:	be 01 00 00 00       	mov    $0x1,%esi
   15cec:	89 54 24 20          	mov    %edx,0x20(%rsp)
   15cf0:	e8 cb 10 00 00       	call   16dc0 <__lshift_D2A>
   15cf5:	49 89 c7             	mov    %rax,%r15
   15cf8:	48 85 c0             	test   %rax,%rax
   15cfb:	0f 84 8f f6 ff ff    	je     15390 <__dtoa+0x880>
   15d01:	4c 89 e6             	mov    %r12,%rsi
   15d04:	48 89 c7             	mov    %rax,%rdi
   15d07:	e8 f4 11 00 00       	call   16f00 <__cmp_D2A>
   15d0c:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   15d11:	8b 54 24 20          	mov    0x20(%rsp),%edx
   15d15:	48 83 c3 01          	add    $0x1,%rbx
   15d19:	85 c0                	test   %eax,%eax
   15d1b:	0f 8e e9 01 00 00    	jle    15f0a <__dtoa+0x13fa>
   15d21:	83 fa 39             	cmp    $0x39,%edx
   15d24:	0f 84 1d 01 00 00    	je     15e47 <__dtoa+0x1337>
   15d2a:	f3 0f 1e fa          	endbr64 
   15d2e:	8b 54 24 44          	mov    0x44(%rsp),%edx
   15d32:	83 c2 31             	add    $0x31,%edx
   15d35:	e9 49 fd ff ff       	jmp    15a83 <__dtoa+0xf73>
   15d3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15d40:	c6 02 30             	movb   $0x30,(%rdx)
   15d43:	0f b6 41 ff          	movzbl -0x1(%rcx),%eax
   15d47:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   15d4c:	e9 d7 f1 ff ff       	jmp    14f28 <__dtoa+0x418>
   15d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15d58:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15d5d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   15d62:	e9 02 fb ff ff       	jmp    15869 <__dtoa+0xd59>
   15d67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15d6e:	00 00 
   15d70:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
   15d74:	66 0f 2f ca          	comisd %xmm2,%xmm1
   15d78:	0f 87 8f 00 00 00    	ja     15e0d <__dtoa+0x12fd>
   15d7e:	66 0f 2e ca          	ucomisd %xmm2,%xmm1
   15d82:	7a 0a                	jp     15d8e <__dtoa+0x127e>
   15d84:	75 08                	jne    15d8e <__dtoa+0x127e>
   15d86:	a8 01                	test   $0x1,%al
   15d88:	0f 85 7f 00 00 00    	jne    15e0d <__dtoa+0x12fd>
   15d8e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15d92:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15d97:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   15d9c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15da0:	e9 c4 fa ff ff       	jmp    15869 <__dtoa+0xd59>
   15da5:	0f 1f 00             	nopl   (%rax)
   15da8:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15dac:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15db1:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   15db6:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15dba:	e9 95 fa ff ff       	jmp    15854 <__dtoa+0xd44>
   15dbf:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15dc3:	83 c0 01             	add    $0x1,%eax
   15dc6:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15dca:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   15dcf:	c6 00 31             	movb   $0x31,(%rax)
   15dd2:	e9 cf f7 ff ff       	jmp    155a6 <__dtoa+0xa96>
   15dd7:	75 1e                	jne    15df7 <__dtoa+0x12e7>
   15dd9:	8b 54 24 20          	mov    0x20(%rsp),%edx
   15ddd:	83 e2 01             	and    $0x1,%edx
   15de0:	0f 85 8e f7 ff ff    	jne    15574 <__dtoa+0xa64>
   15de6:	eb 0f                	jmp    15df7 <__dtoa+0x12e7>
   15de8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15def:	00 
   15df0:	0f b6 4b fe          	movzbl -0x2(%rbx),%ecx
   15df4:	48 89 c3             	mov    %rax,%rbx
   15df7:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   15dfb:	80 f9 30             	cmp    $0x30,%cl
   15dfe:	74 f0                	je     15df0 <__dtoa+0x12e0>
   15e00:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15e04:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15e08:	e9 99 f7 ff ff       	jmp    155a6 <__dtoa+0xa96>
   15e0d:	f3 0f 1e fa          	endbr64 
   15e11:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15e15:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   15e1a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15e1e:	e9 f6 f0 ff ff       	jmp    14f19 <__dtoa+0x409>
   15e23:	44 89 f2             	mov    %r14d,%edx
   15e26:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   15e2b:	49 89 ee             	mov    %rbp,%r14
   15e2e:	4c 89 ed             	mov    %r13,%rbp
   15e31:	e9 0a f7 ff ff       	jmp    15540 <__dtoa+0xa30>
   15e36:	44 89 f2             	mov    %r14d,%edx
   15e39:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15e3e:	48 8d 58 01          	lea    0x1(%rax),%rbx
   15e42:	e9 3c fc ff ff       	jmp    15a83 <__dtoa+0xf73>
   15e47:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   15e4c:	49 89 ee             	mov    %rbp,%r14
   15e4f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   15e54:	4c 89 ed             	mov    %r13,%rbp
   15e57:	b9 39 00 00 00       	mov    $0x39,%ecx
   15e5c:	c6 00 39             	movb   $0x39,(%rax)
   15e5f:	e9 2c f7 ff ff       	jmp    15590 <__dtoa+0xa80>
   15e64:	b8 02 00 00 00       	mov    $0x2,%eax
   15e69:	e9 6e ef ff ff       	jmp    14ddc <__dtoa+0x2cc>
   15e6e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   15e73:	89 de                	mov    %ebx,%esi
   15e75:	44 89 f2             	mov    %r14d,%edx
   15e78:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   15e7c:	41 83 fe 39          	cmp    $0x39,%r14d
   15e80:	74 c5                	je     15e47 <__dtoa+0x1337>
   15e82:	8b 44 24 44          	mov    0x44(%rsp),%eax
   15e86:	49 89 ee             	mov    %rbp,%r14
   15e89:	4c 89 ed             	mov    %r13,%rbp
   15e8c:	83 c0 31             	add    $0x31,%eax
   15e8f:	85 f6                	test   %esi,%esi
   15e91:	0f 4f d0             	cmovg  %eax,%edx
   15e94:	8b 44 24 28          	mov    0x28(%rsp),%eax
   15e98:	88 11                	mov    %dl,(%rcx)
   15e9a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   15e9e:	e9 03 f7 ff ff       	jmp    155a6 <__dtoa+0xa96>
   15ea3:	48 89 ef             	mov    %rbp,%rdi
   15ea6:	31 d2                	xor    %edx,%edx
   15ea8:	be 0a 00 00 00       	mov    $0xa,%esi
   15ead:	e8 0e 0a 00 00       	call   168c0 <__multadd_D2A>
   15eb2:	48 89 c5             	mov    %rax,%rbp
   15eb5:	48 85 c0             	test   %rax,%rax
   15eb8:	0f 84 d2 f4 ff ff    	je     15390 <__dtoa+0x880>
   15ebe:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15ec2:	85 c0                	test   %eax,%eax
   15ec4:	7e 63                	jle    15f29 <__dtoa+0x1419>
   15ec6:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   15eca:	e9 69 f3 ff ff       	jmp    15238 <__dtoa+0x728>
   15ecf:	44 89 f2             	mov    %r14d,%edx
   15ed2:	e9 f2 fd ff ff       	jmp    15cc9 <__dtoa+0x11b9>
   15ed7:	0f 84 73 fa ff ff    	je     15950 <__dtoa+0xe40>
   15edd:	e9 07 fa ff ff       	jmp    158e9 <__dtoa+0xdd9>
   15ee2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15ee8:	8b 44 24 20          	mov    0x20(%rsp),%eax
   15eec:	83 e8 03             	sub    $0x3,%eax
   15eef:	83 e0 fd             	and    $0xfffffffd,%eax
   15ef2:	74 47                	je     15f3b <__dtoa+0x142b>
   15ef4:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15ef8:	e9 d0 f5 ff ff       	jmp    154cd <__dtoa+0x9bd>
   15efd:	44 89 f2             	mov    %r14d,%edx
   15f00:	b9 01 00 00 00       	mov    $0x1,%ecx
   15f05:	e9 bf fd ff ff       	jmp    15cc9 <__dtoa+0x11b9>
   15f0a:	0f 85 73 fb ff ff    	jne    15a83 <__dtoa+0xf73>
   15f10:	f6 c2 01             	test   $0x1,%dl
   15f13:	0f 85 08 fe ff ff    	jne    15d21 <__dtoa+0x1211>
   15f19:	e9 65 fb ff ff       	jmp    15a83 <__dtoa+0xf73>
   15f1e:	44 89 f2             	mov    %r14d,%edx
   15f21:	48 89 cb             	mov    %rcx,%rbx
   15f24:	e9 4e fb ff ff       	jmp    15a77 <__dtoa+0xf67>
   15f29:	8b 44 24 20          	mov    0x20(%rsp),%eax
   15f2d:	83 e8 03             	sub    $0x3,%eax
   15f30:	83 e0 fd             	and    $0xfffffffd,%eax
   15f33:	74 06                	je     15f3b <__dtoa+0x142b>
   15f35:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15f39:	eb 8b                	jmp    15ec6 <__dtoa+0x13b6>
   15f3b:	8b 44 24 48          	mov    0x48(%rsp),%eax
   15f3f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   15f43:	e9 38 fc ff ff       	jmp    15b80 <__dtoa+0x1070>
   15f48:	e8 73 9a ff ff       	call   f9c0 <__stack_chk_fail>
   15f4d:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15f52:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   15f57:	e9 0d f9 ff ff       	jmp    15869 <__dtoa+0xd59>
   15f5c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   15f61:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   15f66:	e9 f6 f8 ff ff       	jmp    15861 <__dtoa+0xd51>
   15f6b:	0f 84 8a f2 ff ff    	je     151fb <__dtoa+0x6eb>
   15f71:	ba 3c 00 00 00       	mov    $0x3c,%edx
   15f76:	29 c2                	sub    %eax,%edx
   15f78:	89 d0                	mov    %edx,%eax
   15f7a:	e9 26 f7 ff ff       	jmp    156a5 <__dtoa+0xb95>
   15f7f:	66 49 0f 6e c6       	movq   %r14,%xmm0
   15f84:	66 49 0f 6e ce       	movq   %r14,%xmm1
   15f89:	66 0f ef ed          	pxor   %xmm5,%xmm5
   15f8d:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   15f92:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   15f96:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   15f9a:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   15f9e:	66 0f ef c0          	pxor   %xmm0,%xmm0
   15fa2:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   15fa6:	8d 48 30             	lea    0x30(%rax),%ecx
   15fa9:	88 0b                	mov    %cl,(%rbx)
   15fab:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   15faf:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   15fb3:	66 0f 2e cd          	ucomisd %xmm5,%xmm1
   15fb7:	7b 13                	jnp    15fcc <__dtoa+0x14bc>
   15fb9:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%rsp)
   15fbe:	0f 84 ac fd ff ff    	je     15d70 <__dtoa+0x1260>
   15fc4:	48 89 d1             	mov    %rdx,%rcx
   15fc7:	e9 25 f9 ff ff       	jmp    158f1 <__dtoa+0xde1>
   15fcc:	0f 84 bc fd ff ff    	je     15d8e <__dtoa+0x127e>
   15fd2:	eb e5                	jmp    15fb9 <__dtoa+0x14a9>
   15fd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   15fdb:	00 00 00 
   15fde:	66 90                	xchg   %ax,%ax

0000000000015fe0 <dorounding.isra.0>:
   15fe0:	48 63 c6             	movslq %esi,%rax
   15fe3:	80 3c 07 08          	cmpb   $0x8,(%rdi,%rax,1)
   15fe7:	7f 17                	jg     16000 <dorounding.isra.0+0x20>
   15fe9:	74 05                	je     15ff0 <dorounding.isra.0+0x10>
   15feb:	c3                   	ret    
   15fec:	0f 1f 40 00          	nopl   0x0(%rax)
   15ff0:	83 c6 01             	add    $0x1,%esi
   15ff3:	48 63 f6             	movslq %esi,%rsi
   15ff6:	f6 04 37 01          	testb  $0x1,(%rdi,%rsi,1)
   15ffa:	74 ef                	je     15feb <dorounding.isra.0+0xb>
   15ffc:	0f 1f 40 00          	nopl   0x0(%rax)
   16000:	48 8d 44 07 ff       	lea    -0x1(%rdi,%rax,1),%rax
   16005:	0f b6 08             	movzbl (%rax),%ecx
   16008:	80 f9 0f             	cmp    $0xf,%cl
   1600b:	74 13                	je     16020 <dorounding.isra.0+0x40>
   1600d:	eb 21                	jmp    16030 <dorounding.isra.0+0x50>
   1600f:	90                   	nop
   16010:	c6 00 00             	movb   $0x0,(%rax)
   16013:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   16017:	48 83 e8 01          	sub    $0x1,%rax
   1601b:	80 f9 0f             	cmp    $0xf,%cl
   1601e:	75 10                	jne    16030 <dorounding.isra.0+0x50>
   16020:	48 39 c7             	cmp    %rax,%rdi
   16023:	75 eb                	jne    16010 <dorounding.isra.0+0x30>
   16025:	c6 00 01             	movb   $0x1,(%rax)
   16028:	83 02 04             	addl   $0x4,(%rdx)
   1602b:	c3                   	ret    
   1602c:	0f 1f 40 00          	nopl   0x0(%rax)
   16030:	83 c1 01             	add    $0x1,%ecx
   16033:	88 08                	mov    %cl,(%rax)
   16035:	c3                   	ret    
   16036:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1603d:	00 00 00 

0000000000016040 <__hdtoa>:
   16040:	f3 0f 1e fa          	endbr64 
   16044:	41 56                	push   %r14
   16046:	41 55                	push   %r13
   16048:	4c 63 ee             	movslq %esi,%r13
   1604b:	41 54                	push   %r12
   1604d:	49 89 d4             	mov    %rdx,%r12
   16050:	55                   	push   %rbp
   16051:	4c 89 c5             	mov    %r8,%rbp
   16054:	53                   	push   %rbx
   16055:	48 89 fb             	mov    %rdi,%rbx
   16058:	48 83 ec 10          	sub    $0x10,%rsp
   1605c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   16062:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
   16067:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   1606c:	c0 e8 07             	shr    $0x7,%al
   1606f:	0f b6 c0             	movzbl %al,%eax
   16072:	89 01                	mov    %eax,(%rcx)
   16074:	e8 77 13 00 00       	call   173f0 <__fpclassify>
   16079:	83 f8 04             	cmp    $0x4,%eax
   1607c:	0f 87 61 02 00 00    	ja     162e3 <__hdtoa+0x2a3>
   16082:	48 8d 15 67 cc 00 00 	lea    0xcc67(%rip),%rdx        # 22cf0 <xdigs_lower.3329+0x80>
   16089:	89 c0                	mov    %eax,%eax
   1608b:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   16090:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   16094:	48 01 d0             	add    %rdx,%rax
   16097:	3e ff e0             	notrack jmp *%rax
   1609a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   160a0:	f2 0f 59 05 70 cc 00 	mulsd  0xcc70(%rip),%xmm0        # 22d18 <xdigs_lower.3329+0xa8>
   160a7:	00 
   160a8:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   160ae:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   160b3:	66 c1 e8 04          	shr    $0x4,%ax
   160b7:	25 ff 07 00 00       	and    $0x7ff,%eax
   160bc:	2d 00 06 00 00       	sub    $0x600,%eax
   160c1:	41 89 04 24          	mov    %eax,(%r12)
   160c5:	45 85 ed             	test   %r13d,%r13d
   160c8:	0f 84 32 01 00 00    	je     16200 <__hdtoa+0x1c0>
   160ce:	41 83 fd 0e          	cmp    $0xe,%r13d
   160d2:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   160d8:	4d 0f 4d f5          	cmovge %r13,%r14
   160dc:	44 89 f7             	mov    %r14d,%edi
   160df:	e8 bc e7 ff ff       	call   148a0 <__rv_alloc_D2A>
   160e4:	48 85 c0             	test   %rax,%rax
   160e7:	0f 84 47 01 00 00    	je     16234 <__hdtoa+0x1f4>
   160ed:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   160f2:	48 8d 48 0d          	lea    0xd(%rax),%rcx
   160f6:	48 39 ca             	cmp    %rcx,%rdx
   160f9:	76 11                	jbe    1610c <__hdtoa+0xcc>
   160fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16100:	c6 02 00             	movb   $0x0,(%rdx)
   16103:	48 83 ea 01          	sub    $0x1,%rdx
   16107:	48 39 ca             	cmp    %rcx,%rdx
   1610a:	75 f4                	jne    16100 <__hdtoa+0xc0>
   1610c:	48 8d 78 05          	lea    0x5(%rax),%rdi
   16110:	48 39 d0             	cmp    %rdx,%rax
   16113:	73 29                	jae    1613e <__hdtoa+0xfe>
   16115:	48 39 d7             	cmp    %rdx,%rdi
   16118:	73 24                	jae    1613e <__hdtoa+0xfe>
   1611a:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   1611e:	eb 05                	jmp    16125 <__hdtoa+0xe5>
   16120:	48 39 d0             	cmp    %rdx,%rax
   16123:	73 15                	jae    1613a <__hdtoa+0xfa>
   16125:	89 ce                	mov    %ecx,%esi
   16127:	48 83 ea 01          	sub    $0x1,%rdx
   1612b:	c1 e9 04             	shr    $0x4,%ecx
   1612e:	83 e6 0f             	and    $0xf,%esi
   16131:	40 88 72 01          	mov    %sil,0x1(%rdx)
   16135:	48 39 fa             	cmp    %rdi,%rdx
   16138:	77 e6                	ja     16120 <__hdtoa+0xe0>
   1613a:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   1613e:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   16142:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   16148:	48 39 d0             	cmp    %rdx,%rax
   1614b:	73 2e                	jae    1617b <__hdtoa+0x13b>
   1614d:	0f 1f 00             	nopl   (%rax)
   16150:	89 ce                	mov    %ecx,%esi
   16152:	48 83 ea 01          	sub    $0x1,%rdx
   16156:	c1 f9 04             	sar    $0x4,%ecx
   16159:	83 e6 0f             	and    $0xf,%esi
   1615c:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   16162:	40 88 72 01          	mov    %sil,0x1(%rdx)
   16166:	48 39 d0             	cmp    %rdx,%rax
   16169:	75 e5                	jne    16150 <__hdtoa+0x110>
   1616b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1616f:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
   16175:	09 ce                	or     %ecx,%esi
   16177:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1617b:	83 c9 01             	or     $0x1,%ecx
   1617e:	88 0a                	mov    %cl,(%rdx)
   16180:	45 85 ed             	test   %r13d,%r13d
   16183:	0f 88 1f 01 00 00    	js     162a8 <__hdtoa+0x268>
   16189:	4d 63 c5             	movslq %r13d,%r8
   1618c:	49 01 c0             	add    %rax,%r8
   1618f:	41 83 fd 0d          	cmp    $0xd,%r13d
   16193:	7f 0a                	jg     1619f <__hdtoa+0x15f>
   16195:	41 80 38 00          	cmpb   $0x0,(%r8)
   16199:	0f 85 29 01 00 00    	jne    162c8 <__hdtoa+0x288>
   1619f:	48 85 ed             	test   %rbp,%rbp
   161a2:	74 04                	je     161a8 <__hdtoa+0x168>
   161a4:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   161a8:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   161ac:	41 c6 00 00          	movb   $0x0,(%r8)
   161b0:	48 39 d0             	cmp    %rdx,%rax
   161b3:	77 7f                	ja     16234 <__hdtoa+0x1f4>
   161b5:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   161b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   161c0:	0f be 0a             	movsbl (%rdx),%ecx
   161c3:	48 83 ea 01          	sub    $0x1,%rdx
   161c7:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   161cb:	88 4a 01             	mov    %cl,0x1(%rdx)
   161ce:	48 39 f2             	cmp    %rsi,%rdx
   161d1:	75 ed                	jne    161c0 <__hdtoa+0x180>
   161d3:	48 83 c4 10          	add    $0x10,%rsp
   161d7:	5b                   	pop    %rbx
   161d8:	5d                   	pop    %rbp
   161d9:	41 5c                	pop    %r12
   161db:	41 5d                	pop    %r13
   161dd:	41 5e                	pop    %r14
   161df:	c3                   	ret    
   161e0:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   161e5:	66 c1 e8 04          	shr    $0x4,%ax
   161e9:	25 ff 07 00 00       	and    $0x7ff,%eax
   161ee:	2d fe 03 00 00       	sub    $0x3fe,%eax
   161f3:	41 89 04 24          	mov    %eax,(%r12)
   161f7:	45 85 ed             	test   %r13d,%r13d
   161fa:	0f 85 ce fe ff ff    	jne    160ce <__hdtoa+0x8e>
   16200:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   16206:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1620c:	e9 cb fe ff ff       	jmp    160dc <__hdtoa+0x9c>
   16211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16218:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1621f:	7f 
   16220:	ba 03 00 00 00       	mov    $0x3,%edx
   16225:	48 89 ee             	mov    %rbp,%rsi
   16228:	48 8d 3d 5a ca 00 00 	lea    0xca5a(%rip),%rdi        # 22c89 <xdigs_lower.3329+0x19>
   1622f:	e8 ac e6 ff ff       	call   148e0 <__nrv_alloc_D2A>
   16234:	48 83 c4 10          	add    $0x10,%rsp
   16238:	5b                   	pop    %rbx
   16239:	5d                   	pop    %rbp
   1623a:	41 5c                	pop    %r12
   1623c:	41 5d                	pop    %r13
   1623e:	41 5e                	pop    %r14
   16240:	c3                   	ret    
   16241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16248:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1624f:	7f 
   16250:	48 89 ee             	mov    %rbp,%rsi
   16253:	ba 08 00 00 00       	mov    $0x8,%edx
   16258:	48 8d 3d 21 ca 00 00 	lea    0xca21(%rip),%rdi        # 22c80 <xdigs_lower.3329+0x10>
   1625f:	e8 7c e6 ff ff       	call   148e0 <__nrv_alloc_D2A>
   16264:	48 83 c4 10          	add    $0x10,%rsp
   16268:	5b                   	pop    %rbx
   16269:	5d                   	pop    %rbp
   1626a:	41 5c                	pop    %r12
   1626c:	41 5d                	pop    %r13
   1626e:	41 5e                	pop    %r14
   16270:	c3                   	ret    
   16271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16278:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1627f:	00 
   16280:	48 89 ee             	mov    %rbp,%rsi
   16283:	ba 01 00 00 00       	mov    $0x1,%edx
   16288:	48 8d 3d b4 bf 00 00 	lea    0xbfb4(%rip),%rdi        # 22243 <g_dyn_entry_table+0x243>
   1628f:	e8 4c e6 ff ff       	call   148e0 <__nrv_alloc_D2A>
   16294:	48 83 c4 10          	add    $0x10,%rsp
   16298:	5b                   	pop    %rbx
   16299:	5d                   	pop    %rbp
   1629a:	41 5c                	pop    %r12
   1629c:	41 5d                	pop    %r13
   1629e:	41 5e                	pop    %r14
   162a0:	c3                   	ret    
   162a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   162a8:	ba 0e 00 00 00       	mov    $0xe,%edx
   162ad:	0f 1f 00             	nopl   (%rax)
   162b0:	41 89 d5             	mov    %edx,%r13d
   162b3:	83 ea 01             	sub    $0x1,%edx
   162b6:	48 63 ca             	movslq %edx,%rcx
   162b9:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   162bd:	74 f1                	je     162b0 <__hdtoa+0x270>
   162bf:	e9 c5 fe ff ff       	jmp    16189 <__hdtoa+0x149>
   162c4:	0f 1f 40 00          	nopl   0x0(%rax)
   162c8:	48 89 c7             	mov    %rax,%rdi
   162cb:	4c 89 e2             	mov    %r12,%rdx
   162ce:	44 89 ee             	mov    %r13d,%esi
   162d1:	48 89 04 24          	mov    %rax,(%rsp)
   162d5:	e8 06 fd ff ff       	call   15fe0 <dorounding.isra.0>
   162da:	48 8b 04 24          	mov    (%rsp),%rax
   162de:	e9 bc fe ff ff       	jmp    1619f <__hdtoa+0x15f>
   162e3:	e8 1c b3 00 00       	call   21604 <abort>
   162e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   162ef:	00 

00000000000162f0 <__hldtoa>:
   162f0:	f3 0f 1e fa          	endbr64 
   162f4:	41 56                	push   %r14
   162f6:	41 55                	push   %r13
   162f8:	4c 63 ee             	movslq %esi,%r13
   162fb:	41 54                	push   %r12
   162fd:	49 89 d4             	mov    %rdx,%r12
   16300:	55                   	push   %rbp
   16301:	4c 89 c5             	mov    %r8,%rbp
   16304:	53                   	push   %rbx
   16305:	48 89 fb             	mov    %rdi,%rbx
   16308:	48 83 ec 20          	sub    $0x20,%rsp
   1630c:	0f b6 44 24 59       	movzbl 0x59(%rsp),%eax
   16311:	db 6c 24 50          	fldt   0x50(%rsp)
   16315:	c0 e8 07             	shr    $0x7,%al
   16318:	0f b6 c0             	movzbl %al,%eax
   1631b:	89 01                	mov    %eax,(%rcx)
   1631d:	d9 c0                	fld    %st(0)
   1631f:	db 3c 24             	fstpt  (%rsp)
   16322:	db 7c 24 10          	fstpt  0x10(%rsp)
   16326:	e8 25 11 00 00       	call   17450 <__fpclassifyl>
   1632b:	5a                   	pop    %rdx
   1632c:	59                   	pop    %rcx
   1632d:	83 f8 04             	cmp    $0x4,%eax
   16330:	0f 87 45 02 00 00    	ja     1657b <__hldtoa+0x28b>
   16336:	48 8d 15 c7 c9 00 00 	lea    0xc9c7(%rip),%rdx        # 22d04 <xdigs_lower.3329+0x94>
   1633d:	db 2c 24             	fldt   (%rsp)
   16340:	89 c0                	mov    %eax,%eax
   16342:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   16346:	48 01 d0             	add    %rdx,%rax
   16349:	3e ff e0             	notrack jmp *%rax
   1634c:	0f 1f 40 00          	nopl   0x0(%rax)
   16350:	dc 0d c2 c9 00 00    	fmull  0xc9c2(%rip)        # 22d18 <xdigs_lower.3329+0xa8>
   16356:	db 7c 24 40          	fstpt  0x40(%rsp)
   1635a:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   1635f:	25 ff 7f 00 00       	and    $0x7fff,%eax
   16364:	2d 03 42 00 00       	sub    $0x4203,%eax
   16369:	41 89 04 24          	mov    %eax,(%r12)
   1636d:	45 85 ed             	test   %r13d,%r13d
   16370:	0f 84 28 01 00 00    	je     1649e <__hldtoa+0x1ae>
   16376:	41 83 fd 10          	cmp    $0x10,%r13d
   1637a:	41 be 10 00 00 00    	mov    $0x10,%r14d
   16380:	4d 0f 4d f5          	cmovge %r13,%r14
   16384:	44 89 f7             	mov    %r14d,%edi
   16387:	e8 14 e5 ff ff       	call   148a0 <__rv_alloc_D2A>
   1638c:	48 85 c0             	test   %rax,%rax
   1638f:	0f 84 39 01 00 00    	je     164ce <__hldtoa+0x1de>
   16395:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   1639a:	48 8d 48 0f          	lea    0xf(%rax),%rcx
   1639e:	48 39 ca             	cmp    %rcx,%rdx
   163a1:	76 11                	jbe    163b4 <__hldtoa+0xc4>
   163a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   163a8:	c6 02 00             	movb   $0x0,(%rdx)
   163ab:	48 83 ea 01          	sub    $0x1,%rdx
   163af:	48 39 ca             	cmp    %rcx,%rdx
   163b2:	75 f4                	jne    163a8 <__hldtoa+0xb8>
   163b4:	48 8d 78 07          	lea    0x7(%rax),%rdi
   163b8:	48 39 d0             	cmp    %rdx,%rax
   163bb:	73 31                	jae    163ee <__hldtoa+0xfe>
   163bd:	48 39 d7             	cmp    %rdx,%rdi
   163c0:	73 2c                	jae    163ee <__hldtoa+0xfe>
   163c2:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   163c6:	eb 0d                	jmp    163d5 <__hldtoa+0xe5>
   163c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   163cf:	00 
   163d0:	48 39 d0             	cmp    %rdx,%rax
   163d3:	73 15                	jae    163ea <__hldtoa+0xfa>
   163d5:	89 ce                	mov    %ecx,%esi
   163d7:	48 83 ea 01          	sub    $0x1,%rdx
   163db:	c1 e9 04             	shr    $0x4,%ecx
   163de:	83 e6 0f             	and    $0xf,%esi
   163e1:	40 88 72 01          	mov    %sil,0x1(%rdx)
   163e5:	48 39 fa             	cmp    %rdi,%rdx
   163e8:	77 e6                	ja     163d0 <__hldtoa+0xe0>
   163ea:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   163ee:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
   163f2:	48 39 d0             	cmp    %rdx,%rax
   163f5:	73 22                	jae    16419 <__hldtoa+0x129>
   163f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   163fe:	00 00 
   16400:	89 ce                	mov    %ecx,%esi
   16402:	48 83 ea 01          	sub    $0x1,%rdx
   16406:	c1 e9 04             	shr    $0x4,%ecx
   16409:	83 e6 0f             	and    $0xf,%esi
   1640c:	40 88 72 01          	mov    %sil,0x1(%rdx)
   16410:	48 39 d0             	cmp    %rdx,%rax
   16413:	75 eb                	jne    16400 <__hldtoa+0x110>
   16415:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   16419:	83 c9 08             	or     $0x8,%ecx
   1641c:	88 0a                	mov    %cl,(%rdx)
   1641e:	45 85 ed             	test   %r13d,%r13d
   16421:	0f 88 19 01 00 00    	js     16540 <__hldtoa+0x250>
   16427:	4d 63 c5             	movslq %r13d,%r8
   1642a:	49 01 c0             	add    %rax,%r8
   1642d:	41 83 fd 0f          	cmp    $0xf,%r13d
   16431:	7f 0a                	jg     1643d <__hldtoa+0x14d>
   16433:	41 80 38 00          	cmpb   $0x0,(%r8)
   16437:	0f 85 23 01 00 00    	jne    16560 <__hldtoa+0x270>
   1643d:	48 85 ed             	test   %rbp,%rbp
   16440:	74 04                	je     16446 <__hldtoa+0x156>
   16442:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   16446:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   1644a:	41 c6 00 00          	movb   $0x0,(%r8)
   1644e:	48 39 d0             	cmp    %rdx,%rax
   16451:	77 7b                	ja     164ce <__hldtoa+0x1de>
   16453:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   16457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1645e:	00 00 
   16460:	0f be 0a             	movsbl (%rdx),%ecx
   16463:	48 83 ea 01          	sub    $0x1,%rdx
   16467:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   1646b:	88 4a 01             	mov    %cl,0x1(%rdx)
   1646e:	48 39 f2             	cmp    %rsi,%rdx
   16471:	75 ed                	jne    16460 <__hldtoa+0x170>
   16473:	48 83 c4 10          	add    $0x10,%rsp
   16477:	5b                   	pop    %rbx
   16478:	5d                   	pop    %rbp
   16479:	41 5c                	pop    %r12
   1647b:	41 5d                	pop    %r13
   1647d:	41 5e                	pop    %r14
   1647f:	c3                   	ret    
   16480:	dd d8                	fstp   %st(0)
   16482:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   16487:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1648c:	2d 01 40 00 00       	sub    $0x4001,%eax
   16491:	41 89 04 24          	mov    %eax,(%r12)
   16495:	45 85 ed             	test   %r13d,%r13d
   16498:	0f 85 d8 fe ff ff    	jne    16376 <__hldtoa+0x86>
   1649e:	41 be 10 00 00 00    	mov    $0x10,%r14d
   164a4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   164aa:	e9 d5 fe ff ff       	jmp    16384 <__hldtoa+0x94>
   164af:	90                   	nop
   164b0:	dd d8                	fstp   %st(0)
   164b2:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   164b9:	7f 
   164ba:	ba 03 00 00 00       	mov    $0x3,%edx
   164bf:	48 89 ee             	mov    %rbp,%rsi
   164c2:	48 8d 3d c0 c7 00 00 	lea    0xc7c0(%rip),%rdi        # 22c89 <xdigs_lower.3329+0x19>
   164c9:	e8 12 e4 ff ff       	call   148e0 <__nrv_alloc_D2A>
   164ce:	48 83 c4 10          	add    $0x10,%rsp
   164d2:	5b                   	pop    %rbx
   164d3:	5d                   	pop    %rbp
   164d4:	41 5c                	pop    %r12
   164d6:	41 5d                	pop    %r13
   164d8:	41 5e                	pop    %r14
   164da:	c3                   	ret    
   164db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   164e0:	dd d8                	fstp   %st(0)
   164e2:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   164e9:	7f 
   164ea:	48 89 ee             	mov    %rbp,%rsi
   164ed:	ba 08 00 00 00       	mov    $0x8,%edx
   164f2:	48 8d 3d 87 c7 00 00 	lea    0xc787(%rip),%rdi        # 22c80 <xdigs_lower.3329+0x10>
   164f9:	e8 e2 e3 ff ff       	call   148e0 <__nrv_alloc_D2A>
   164fe:	48 83 c4 10          	add    $0x10,%rsp
   16502:	5b                   	pop    %rbx
   16503:	5d                   	pop    %rbp
   16504:	41 5c                	pop    %r12
   16506:	41 5d                	pop    %r13
   16508:	41 5e                	pop    %r14
   1650a:	c3                   	ret    
   1650b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16510:	dd d8                	fstp   %st(0)
   16512:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   16519:	00 
   1651a:	48 89 ee             	mov    %rbp,%rsi
   1651d:	ba 01 00 00 00       	mov    $0x1,%edx
   16522:	48 8d 3d 1a bd 00 00 	lea    0xbd1a(%rip),%rdi        # 22243 <g_dyn_entry_table+0x243>
   16529:	e8 b2 e3 ff ff       	call   148e0 <__nrv_alloc_D2A>
   1652e:	48 83 c4 10          	add    $0x10,%rsp
   16532:	5b                   	pop    %rbx
   16533:	5d                   	pop    %rbp
   16534:	41 5c                	pop    %r12
   16536:	41 5d                	pop    %r13
   16538:	41 5e                	pop    %r14
   1653a:	c3                   	ret    
   1653b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16540:	ba 10 00 00 00       	mov    $0x10,%edx
   16545:	0f 1f 00             	nopl   (%rax)
   16548:	41 89 d5             	mov    %edx,%r13d
   1654b:	83 ea 01             	sub    $0x1,%edx
   1654e:	48 63 ca             	movslq %edx,%rcx
   16551:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   16555:	74 f1                	je     16548 <__hldtoa+0x258>
   16557:	e9 cb fe ff ff       	jmp    16427 <__hldtoa+0x137>
   1655c:	0f 1f 40 00          	nopl   0x0(%rax)
   16560:	48 89 c7             	mov    %rax,%rdi
   16563:	4c 89 e2             	mov    %r12,%rdx
   16566:	44 89 ee             	mov    %r13d,%esi
   16569:	48 89 04 24          	mov    %rax,(%rsp)
   1656d:	e8 6e fa ff ff       	call   15fe0 <dorounding.isra.0>
   16572:	48 8b 04 24          	mov    (%rsp),%rax
   16576:	e9 c2 fe ff ff       	jmp    1643d <__hldtoa+0x14d>
   1657b:	e8 84 b0 00 00       	call   21604 <abort>

0000000000016580 <__ldtoa>:
   16580:	f3 0f 1e fa          	endbr64 
   16584:	41 57                	push   %r15
   16586:	41 56                	push   %r14
   16588:	41 89 d6             	mov    %edx,%r14d
   1658b:	41 55                	push   %r13
   1658d:	41 89 f5             	mov    %esi,%r13d
   16590:	41 54                	push   %r12
   16592:	4d 89 cc             	mov    %r9,%r12
   16595:	55                   	push   %rbp
   16596:	53                   	push   %rbx
   16597:	48 89 cb             	mov    %rcx,%rbx
   1659a:	48 83 ec 48          	sub    $0x48,%rsp
   1659e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   165a5:	00 00 
   165a7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   165ac:	31 c0                	xor    %eax,%eax
   165ae:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   165b5:	00 
   165b6:	48 b8 40 00 00 00 c3 	movabs $0xffffbfc300000040,%rax
   165bd:	bf ff ff 
   165c0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   165c5:	48 b8 c0 3f 00 00 01 	movabs $0x100003fc0,%rax
   165cc:	00 00 00 
   165cf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   165d4:	0f b6 47 09          	movzbl 0x9(%rdi),%eax
   165d8:	c0 e8 07             	shr    $0x7,%al
   165db:	0f b6 c0             	movzbl %al,%eax
   165de:	41 89 00             	mov    %eax,(%r8)
   165e1:	48 8b 07             	mov    (%rdi),%rax
   165e4:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   165e8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   165ed:	ff 77 08             	push   0x8(%rdi)
   165f0:	81 e5 ff 7f 00 00    	and    $0x7fff,%ebp
   165f6:	ff 37                	push   (%rdi)
   165f8:	e8 53 0e 00 00       	call   17450 <__fpclassifyl>
   165fd:	5e                   	pop    %rsi
   165fe:	5f                   	pop    %rdi
   165ff:	83 f8 04             	cmp    $0x4,%eax
   16602:	0f 87 c5 00 00 00    	ja     166cd <__ldtoa+0x14d>
   16608:	48 8d 15 11 c7 00 00 	lea    0xc711(%rip),%rdx        # 22d20 <xdigs_lower.3329+0xb0>
   1660f:	89 c0                	mov    %eax,%eax
   16611:	44 8d bd c2 bf ff ff 	lea    -0x403e(%rbp),%r15d
   16618:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1661c:	48 01 d0             	add    %rdx,%rax
   1661f:	3e ff e0             	notrack jmp *%rax
   16622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16628:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1662f:	00 
   16630:	44 8d bd c3 bf ff ff 	lea    -0x403d(%rbp),%r15d
   16637:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   1663c:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   16641:	45 89 f1             	mov    %r14d,%r9d
   16644:	45 89 e8             	mov    %r13d,%r8d
   16647:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1664c:	41 54                	push   %r12
   1664e:	44 89 fe             	mov    %r15d,%esi
   16651:	53                   	push   %rbx
   16652:	e8 19 13 00 00       	call   17970 <__gdtoa>
   16657:	81 3b 00 80 ff ff    	cmpl   $0xffff8000,(%rbx)
   1665d:	5a                   	pop    %rdx
   1665e:	59                   	pop    %rcx
   1665f:	75 06                	jne    16667 <__ldtoa+0xe7>
   16661:	c7 03 ff ff ff 7f    	movl   $0x7fffffff,(%rbx)
   16667:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1666c:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   16673:	00 00 
   16675:	75 5b                	jne    166d2 <__ldtoa+0x152>
   16677:	48 83 c4 48          	add    $0x48,%rsp
   1667b:	5b                   	pop    %rbx
   1667c:	5d                   	pop    %rbp
   1667d:	41 5c                	pop    %r12
   1667f:	41 5d                	pop    %r13
   16681:	41 5e                	pop    %r14
   16683:	41 5f                	pop    %r15
   16685:	c3                   	ret    
   16686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1668d:	00 00 00 
   16690:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   16697:	00 
   16698:	eb 9d                	jmp    16637 <__ldtoa+0xb7>
   1669a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   166a0:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%rsp)
   166a7:	00 
   166a8:	eb 8d                	jmp    16637 <__ldtoa+0xb7>
   166aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   166b0:	c7 44 24 0c 03 00 00 	movl   $0x3,0xc(%rsp)
   166b7:	00 
   166b8:	e9 7a ff ff ff       	jmp    16637 <__ldtoa+0xb7>
   166bd:	0f 1f 00             	nopl   (%rax)
   166c0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   166c7:	00 
   166c8:	e9 6a ff ff ff       	jmp    16637 <__ldtoa+0xb7>
   166cd:	e8 32 af 00 00       	call   21604 <abort>
   166d2:	e8 e9 92 ff ff       	call   f9c0 <__stack_chk_fail>
   166d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   166de:	00 00 

00000000000166e0 <__Balloc_D2A>:
   166e0:	f3 0f 1e fa          	endbr64 
   166e4:	41 54                	push   %r12
   166e6:	55                   	push   %rbp
   166e7:	53                   	push   %rbx
   166e8:	89 fb                	mov    %edi,%ebx
   166ea:	48 8d 3d df 69 01 00 	lea    0x169df(%rip),%rdi        # 2d0d0 <__dtoa_locks>
   166f1:	e8 ca 54 ff ff       	call   bbc0 <sgx_spin_lock>
   166f6:	83 fb 09             	cmp    $0x9,%ebx
   166f9:	7e 5d                	jle    16758 <__Balloc_D2A+0x78>
   166fb:	89 d9                	mov    %ebx,%ecx
   166fd:	bd 01 00 00 00       	mov    $0x1,%ebp
   16702:	d3 e5                	shl    %cl,%ebp
   16704:	8d 45 ff             	lea    -0x1(%rbp),%eax
   16707:	48 98                	cltq   
   16709:	48 8d 3c 85 27 00 00 	lea    0x27(,%rax,4),%rdi
   16710:	00 
   16711:	48 b8 f8 ff ff ff 07 	movabs $0x7fffffff8,%rax
   16718:	00 00 00 
   1671b:	48 21 c7             	and    %rax,%rdi
   1671e:	e8 4d 5e ff ff       	call   c570 <dlmalloc>
   16723:	49 89 c4             	mov    %rax,%r12
   16726:	48 85 c0             	test   %rax,%rax
   16729:	74 1f                	je     1674a <__Balloc_D2A+0x6a>
   1672b:	41 89 5c 24 08       	mov    %ebx,0x8(%r12)
   16730:	41 89 6c 24 0c       	mov    %ebp,0xc(%r12)
   16735:	48 8d 3d 94 69 01 00 	lea    0x16994(%rip),%rdi        # 2d0d0 <__dtoa_locks>
   1673c:	e8 ef 54 ff ff       	call   bc30 <sgx_spin_unlock>
   16741:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   16748:	00 00 
   1674a:	4c 89 e0             	mov    %r12,%rax
   1674d:	5b                   	pop    %rbx
   1674e:	5d                   	pop    %rbp
   1674f:	41 5c                	pop    %r12
   16751:	c3                   	ret    
   16752:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16758:	48 8d 05 21 69 01 00 	lea    0x16921(%rip),%rax        # 2d080 <freelist>
   1675f:	48 63 d3             	movslq %ebx,%rdx
   16762:	4c 8b 24 d0          	mov    (%rax,%rdx,8),%r12
   16766:	4d 85 e4             	test   %r12,%r12
   16769:	74 0d                	je     16778 <__Balloc_D2A+0x98>
   1676b:	49 8b 0c 24          	mov    (%r12),%rcx
   1676f:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
   16773:	eb c0                	jmp    16735 <__Balloc_D2A+0x55>
   16775:	0f 1f 00             	nopl   (%rax)
   16778:	bd 01 00 00 00       	mov    $0x1,%ebp
   1677d:	89 d9                	mov    %ebx,%ecx
   1677f:	4c 8b 25 aa 5a 01 00 	mov    0x15aaa(%rip),%r12        # 2c230 <pmem_next>
   16786:	48 8d 15 f3 5f 01 00 	lea    0x15ff3(%rip),%rdx        # 2c780 <private_mem>
   1678d:	d3 e5                	shl    %cl,%ebp
   1678f:	8d 45 ff             	lea    -0x1(%rbp),%eax
   16792:	4c 89 e6             	mov    %r12,%rsi
   16795:	48 98                	cltq   
   16797:	48 29 d6             	sub    %rdx,%rsi
   1679a:	48 8d 04 85 27 00 00 	lea    0x27(,%rax,4),%rax
   167a1:	00 
   167a2:	48 89 f2             	mov    %rsi,%rdx
   167a5:	48 c1 e8 03          	shr    $0x3,%rax
   167a9:	48 c1 fa 03          	sar    $0x3,%rdx
   167ad:	89 c0                	mov    %eax,%eax
   167af:	48 01 c2             	add    %rax,%rdx
   167b2:	48 81 fa 20 01 00 00 	cmp    $0x120,%rdx
   167b9:	0f 87 3c ff ff ff    	ja     166fb <__Balloc_D2A+0x1b>
   167bf:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
   167c3:	48 89 05 66 5a 01 00 	mov    %rax,0x15a66(%rip)        # 2c230 <pmem_next>
   167ca:	e9 5c ff ff ff       	jmp    1672b <__Balloc_D2A+0x4b>
   167cf:	90                   	nop

00000000000167d0 <__Bfree_D2A>:
   167d0:	f3 0f 1e fa          	endbr64 
   167d4:	48 85 ff             	test   %rdi,%rdi
   167d7:	74 47                	je     16820 <__Bfree_D2A+0x50>
   167d9:	55                   	push   %rbp
   167da:	83 7f 08 09          	cmpl   $0x9,0x8(%rdi)
   167de:	48 89 fd             	mov    %rdi,%rbp
   167e1:	7e 0d                	jle    167f0 <__Bfree_D2A+0x20>
   167e3:	5d                   	pop    %rbp
   167e4:	e9 f7 77 ff ff       	jmp    dfe0 <dlfree>
   167e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   167f0:	48 8d 3d d9 68 01 00 	lea    0x168d9(%rip),%rdi        # 2d0d0 <__dtoa_locks>
   167f7:	e8 c4 53 ff ff       	call   bbc0 <sgx_spin_lock>
   167fc:	48 63 55 08          	movslq 0x8(%rbp),%rdx
   16800:	48 8d 05 79 68 01 00 	lea    0x16879(%rip),%rax        # 2d080 <freelist>
   16807:	48 8d 3d c2 68 01 00 	lea    0x168c2(%rip),%rdi        # 2d0d0 <__dtoa_locks>
   1680e:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
   16812:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
   16816:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   1681a:	5d                   	pop    %rbp
   1681b:	e9 10 54 ff ff       	jmp    bc30 <sgx_spin_unlock>
   16820:	c3                   	ret    
   16821:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16828:	00 00 00 
   1682b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016830 <__lo0bits_D2A>:
   16830:	f3 0f 1e fa          	endbr64 
   16834:	8b 07                	mov    (%rdi),%eax
   16836:	45 31 c0             	xor    %r8d,%r8d
   16839:	a8 07                	test   $0x7,%al
   1683b:	74 1b                	je     16858 <__lo0bits_D2A+0x28>
   1683d:	a8 01                	test   $0x1,%al
   1683f:	75 0e                	jne    1684f <__lo0bits_D2A+0x1f>
   16841:	a8 02                	test   $0x2,%al
   16843:	74 6b                	je     168b0 <__lo0bits_D2A+0x80>
   16845:	d1 e8                	shr    %eax
   16847:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1684d:	89 07                	mov    %eax,(%rdi)
   1684f:	44 89 c0             	mov    %r8d,%eax
   16852:	c3                   	ret    
   16853:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16858:	66 85 c0             	test   %ax,%ax
   1685b:	75 09                	jne    16866 <__lo0bits_D2A+0x36>
   1685d:	c1 e8 10             	shr    $0x10,%eax
   16860:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   16866:	84 c0                	test   %al,%al
   16868:	75 07                	jne    16871 <__lo0bits_D2A+0x41>
   1686a:	41 83 c0 08          	add    $0x8,%r8d
   1686e:	c1 e8 08             	shr    $0x8,%eax
   16871:	a8 0f                	test   $0xf,%al
   16873:	75 07                	jne    1687c <__lo0bits_D2A+0x4c>
   16875:	41 83 c0 04          	add    $0x4,%r8d
   16879:	c1 e8 04             	shr    $0x4,%eax
   1687c:	a8 03                	test   $0x3,%al
   1687e:	75 07                	jne    16887 <__lo0bits_D2A+0x57>
   16880:	41 83 c0 02          	add    $0x2,%r8d
   16884:	c1 e8 02             	shr    $0x2,%eax
   16887:	a8 01                	test   $0x1,%al
   16889:	75 08                	jne    16893 <__lo0bits_D2A+0x63>
   1688b:	41 83 c0 01          	add    $0x1,%r8d
   1688f:	d1 e8                	shr    %eax
   16891:	74 0d                	je     168a0 <__lo0bits_D2A+0x70>
   16893:	89 07                	mov    %eax,(%rdi)
   16895:	44 89 c0             	mov    %r8d,%eax
   16898:	c3                   	ret    
   16899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   168a0:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   168a6:	eb a7                	jmp    1684f <__lo0bits_D2A+0x1f>
   168a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   168af:	00 
   168b0:	c1 e8 02             	shr    $0x2,%eax
   168b3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   168b9:	89 07                	mov    %eax,(%rdi)
   168bb:	44 89 c0             	mov    %r8d,%eax
   168be:	c3                   	ret    
   168bf:	90                   	nop

00000000000168c0 <__multadd_D2A>:
   168c0:	f3 0f 1e fa          	endbr64 
   168c4:	41 55                	push   %r13
   168c6:	31 c9                	xor    %ecx,%ecx
   168c8:	41 54                	push   %r12
   168ca:	41 89 d4             	mov    %edx,%r12d
   168cd:	55                   	push   %rbp
   168ce:	48 89 fd             	mov    %rdi,%rbp
   168d1:	53                   	push   %rbx
   168d2:	48 83 ec 08          	sub    $0x8,%rsp
   168d6:	8b 5f 14             	mov    0x14(%rdi),%ebx
   168d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   168e0:	8b 44 8d 18          	mov    0x18(%rbp,%rcx,4),%eax
   168e4:	0f b7 d0             	movzwl %ax,%edx
   168e7:	c1 e8 10             	shr    $0x10,%eax
   168ea:	0f af d6             	imul   %esi,%edx
   168ed:	0f af c6             	imul   %esi,%eax
   168f0:	44 01 e2             	add    %r12d,%edx
   168f3:	89 d7                	mov    %edx,%edi
   168f5:	0f b7 d2             	movzwl %dx,%edx
   168f8:	c1 ef 10             	shr    $0x10,%edi
   168fb:	01 f8                	add    %edi,%eax
   168fd:	41 89 c4             	mov    %eax,%r12d
   16900:	c1 e0 10             	shl    $0x10,%eax
   16903:	01 d0                	add    %edx,%eax
   16905:	41 c1 ec 10          	shr    $0x10,%r12d
   16909:	89 44 8d 18          	mov    %eax,0x18(%rbp,%rcx,4)
   1690d:	48 83 c1 01          	add    $0x1,%rcx
   16911:	39 cb                	cmp    %ecx,%ebx
   16913:	7f cb                	jg     168e0 <__multadd_D2A+0x20>
   16915:	49 89 ed             	mov    %rbp,%r13
   16918:	45 85 e4             	test   %r12d,%r12d
   1691b:	74 16                	je     16933 <__multadd_D2A+0x73>
   1691d:	39 5d 0c             	cmp    %ebx,0xc(%rbp)
   16920:	7e 26                	jle    16948 <__multadd_D2A+0x88>
   16922:	48 63 c3             	movslq %ebx,%rax
   16925:	83 c3 01             	add    $0x1,%ebx
   16928:	49 89 ed             	mov    %rbp,%r13
   1692b:	44 89 64 85 18       	mov    %r12d,0x18(%rbp,%rax,4)
   16930:	89 5d 14             	mov    %ebx,0x14(%rbp)
   16933:	48 83 c4 08          	add    $0x8,%rsp
   16937:	4c 89 e8             	mov    %r13,%rax
   1693a:	5b                   	pop    %rbx
   1693b:	5d                   	pop    %rbp
   1693c:	41 5c                	pop    %r12
   1693e:	41 5d                	pop    %r13
   16940:	c3                   	ret    
   16941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16948:	8b 45 08             	mov    0x8(%rbp),%eax
   1694b:	8d 78 01             	lea    0x1(%rax),%edi
   1694e:	e8 8d fd ff ff       	call   166e0 <__Balloc_D2A>
   16953:	49 89 c5             	mov    %rax,%r13
   16956:	48 85 c0             	test   %rax,%rax
   16959:	74 d8                	je     16933 <__multadd_D2A+0x73>
   1695b:	48 63 45 14          	movslq 0x14(%rbp),%rax
   1695f:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   16963:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   16967:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   1696e:	00 
   1696f:	e8 bc 8c ff ff       	call   f630 <memcpy>
   16974:	48 89 ef             	mov    %rbp,%rdi
   16977:	4c 89 ed             	mov    %r13,%rbp
   1697a:	e8 51 fe ff ff       	call   167d0 <__Bfree_D2A>
   1697f:	eb a1                	jmp    16922 <__multadd_D2A+0x62>
   16981:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16988:	00 00 00 
   1698b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016990 <__hi0bits_D2A>:
   16990:	f3 0f 1e fa          	endbr64 
   16994:	31 c0                	xor    %eax,%eax
   16996:	f7 c7 00 00 ff ff    	test   $0xffff0000,%edi
   1699c:	75 08                	jne    169a6 <__hi0bits_D2A+0x16>
   1699e:	c1 e7 10             	shl    $0x10,%edi
   169a1:	b8 10 00 00 00       	mov    $0x10,%eax
   169a6:	f7 c7 00 00 00 ff    	test   $0xff000000,%edi
   169ac:	75 06                	jne    169b4 <__hi0bits_D2A+0x24>
   169ae:	83 c0 08             	add    $0x8,%eax
   169b1:	c1 e7 08             	shl    $0x8,%edi
   169b4:	f7 c7 00 00 00 f0    	test   $0xf0000000,%edi
   169ba:	75 06                	jne    169c2 <__hi0bits_D2A+0x32>
   169bc:	83 c0 04             	add    $0x4,%eax
   169bf:	c1 e7 04             	shl    $0x4,%edi
   169c2:	f7 c7 00 00 00 c0    	test   $0xc0000000,%edi
   169c8:	75 06                	jne    169d0 <__hi0bits_D2A+0x40>
   169ca:	83 c0 02             	add    $0x2,%eax
   169cd:	c1 e7 02             	shl    $0x2,%edi
   169d0:	85 ff                	test   %edi,%edi
   169d2:	78 11                	js     169e5 <__hi0bits_D2A+0x55>
   169d4:	83 c0 01             	add    $0x1,%eax
   169d7:	ba 20 00 00 00       	mov    $0x20,%edx
   169dc:	81 e7 00 00 00 40    	and    $0x40000000,%edi
   169e2:	0f 44 c2             	cmove  %edx,%eax
   169e5:	c3                   	ret    
   169e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   169ed:	00 00 00 

00000000000169f0 <__i2b_D2A>:
   169f0:	f3 0f 1e fa          	endbr64 
   169f4:	53                   	push   %rbx
   169f5:	89 fb                	mov    %edi,%ebx
   169f7:	bf 01 00 00 00       	mov    $0x1,%edi
   169fc:	e8 df fc ff ff       	call   166e0 <__Balloc_D2A>
   16a01:	48 85 c0             	test   %rax,%rax
   16a04:	74 0a                	je     16a10 <__i2b_D2A+0x20>
   16a06:	89 58 18             	mov    %ebx,0x18(%rax)
   16a09:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   16a10:	5b                   	pop    %rbx
   16a11:	c3                   	ret    
   16a12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16a19:	00 00 00 
   16a1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016a20 <__mult_D2A>:
   16a20:	f3 0f 1e fa          	endbr64 
   16a24:	41 57                	push   %r15
   16a26:	49 89 fa             	mov    %rdi,%r10
   16a29:	41 56                	push   %r14
   16a2b:	49 89 f6             	mov    %rsi,%r14
   16a2e:	41 55                	push   %r13
   16a30:	41 54                	push   %r12
   16a32:	55                   	push   %rbp
   16a33:	53                   	push   %rbx
   16a34:	48 83 ec 18          	sub    $0x18,%rsp
   16a38:	4c 63 67 14          	movslq 0x14(%rdi),%r12
   16a3c:	4c 63 7e 14          	movslq 0x14(%rsi),%r15
   16a40:	45 39 fc             	cmp    %r15d,%r12d
   16a43:	7c 0f                	jl     16a54 <__mult_D2A+0x34>
   16a45:	44 89 f8             	mov    %r15d,%eax
   16a48:	49 89 fe             	mov    %rdi,%r14
   16a4b:	4d 63 fc             	movslq %r12d,%r15
   16a4e:	49 89 f2             	mov    %rsi,%r10
   16a51:	4c 63 e0             	movslq %eax,%r12
   16a54:	31 ff                	xor    %edi,%edi
   16a56:	43 8d 2c 27          	lea    (%r15,%r12,1),%ebp
   16a5a:	41 39 6e 0c          	cmp    %ebp,0xc(%r14)
   16a5e:	4c 89 14 24          	mov    %r10,(%rsp)
   16a62:	40 0f 9c c7          	setl   %dil
   16a66:	41 03 7e 08          	add    0x8(%r14),%edi
   16a6a:	e8 71 fc ff ff       	call   166e0 <__Balloc_D2A>
   16a6f:	49 89 c5             	mov    %rax,%r13
   16a72:	48 85 c0             	test   %rax,%rax
   16a75:	0f 84 49 01 00 00    	je     16bc4 <__mult_D2A+0x1a4>
   16a7b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   16a7f:	48 63 c5             	movslq %ebp,%rax
   16a82:	4c 8b 14 24          	mov    (%rsp),%r10
   16a86:	48 8d 04 83          	lea    (%rbx,%rax,4),%rax
   16a8a:	48 89 da             	mov    %rbx,%rdx
   16a8d:	48 39 c3             	cmp    %rax,%rbx
   16a90:	73 15                	jae    16aa7 <__mult_D2A+0x87>
   16a92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a98:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   16a9e:	48 83 c2 04          	add    $0x4,%rdx
   16aa2:	48 39 d0             	cmp    %rdx,%rax
   16aa5:	77 f1                	ja     16a98 <__mult_D2A+0x78>
   16aa7:	49 83 c2 18          	add    $0x18,%r10
   16aab:	49 8d 76 18          	lea    0x18(%r14),%rsi
   16aaf:	4f 8d 24 a2          	lea    (%r10,%r12,4),%r12
   16ab3:	48 89 f7             	mov    %rsi,%rdi
   16ab6:	4e 8d 1c be          	lea    (%rsi,%r15,4),%r11
   16aba:	4d 39 e2             	cmp    %r12,%r10
   16abd:	0f 83 df 00 00 00    	jae    16ba2 <__mult_D2A+0x182>
   16ac3:	4c 89 da             	mov    %r11,%rdx
   16ac6:	48 89 04 24          	mov    %rax,(%rsp)
   16aca:	48 89 f8             	mov    %rdi,%rax
   16acd:	4c 29 f2             	sub    %r14,%rdx
   16ad0:	49 83 c6 19          	add    $0x19,%r14
   16ad4:	89 6c 24 0c          	mov    %ebp,0xc(%rsp)
   16ad8:	48 83 ea 19          	sub    $0x19,%rdx
   16adc:	48 c1 ea 02          	shr    $0x2,%rdx
   16ae0:	4d 39 f3             	cmp    %r14,%r11
   16ae3:	48 8d 0c 95 04 00 00 	lea    0x4(,%rdx,4),%rcx
   16aea:	00 
   16aeb:	ba 04 00 00 00       	mov    $0x4,%edx
   16af0:	48 89 d6             	mov    %rdx,%rsi
   16af3:	48 0f 43 f1          	cmovae %rcx,%rsi
   16af7:	48 89 f5             	mov    %rsi,%rbp
   16afa:	eb 15                	jmp    16b11 <__mult_D2A+0xf1>
   16afc:	0f 1f 40 00          	nopl   0x0(%rax)
   16b00:	49 83 c2 04          	add    $0x4,%r10
   16b04:	48 83 c3 04          	add    $0x4,%rbx
   16b08:	4d 39 d4             	cmp    %r10,%r12
   16b0b:	0f 86 89 00 00 00    	jbe    16b9a <__mult_D2A+0x17a>
   16b11:	45 8b 32             	mov    (%r10),%r14d
   16b14:	45 89 f1             	mov    %r14d,%r9d
   16b17:	41 81 e1 ff ff 00 00 	and    $0xffff,%r9d
   16b1e:	0f 85 bc 00 00 00    	jne    16be0 <__mult_D2A+0x1c0>
   16b24:	41 c1 ee 10          	shr    $0x10,%r14d
   16b28:	74 d6                	je     16b00 <__mult_D2A+0xe0>
   16b2a:	8b 33                	mov    (%rbx),%esi
   16b2c:	31 d2                	xor    %edx,%edx
   16b2e:	49 89 d8             	mov    %rbx,%r8
   16b31:	49 89 c7             	mov    %rax,%r15
   16b34:	89 d7                	mov    %edx,%edi
   16b36:	41 89 f1             	mov    %esi,%r9d
   16b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16b40:	41 8b 0f             	mov    (%r15),%ecx
   16b43:	41 c1 e9 10          	shr    $0x10,%r9d
   16b47:	66 41 89 30          	mov    %si,(%r8)
   16b4b:	49 83 c0 04          	add    $0x4,%r8
   16b4f:	49 83 c7 04          	add    $0x4,%r15
   16b53:	0f b7 d1             	movzwl %cx,%edx
   16b56:	c1 e9 10             	shr    $0x10,%ecx
   16b59:	41 0f af d6          	imul   %r14d,%edx
   16b5d:	41 0f af ce          	imul   %r14d,%ecx
   16b61:	41 01 d1             	add    %edx,%r9d
   16b64:	41 8d 14 39          	lea    (%r9,%rdi,1),%edx
   16b68:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   16b6d:	45 8b 08             	mov    (%r8),%r9d
   16b70:	c1 ea 10             	shr    $0x10,%edx
   16b73:	41 0f b7 f1          	movzwl %r9w,%esi
   16b77:	01 f1                	add    %esi,%ecx
   16b79:	8d 34 11             	lea    (%rcx,%rdx,1),%esi
   16b7c:	89 f7                	mov    %esi,%edi
   16b7e:	c1 ef 10             	shr    $0x10,%edi
   16b81:	4d 39 fb             	cmp    %r15,%r11
   16b84:	77 ba                	ja     16b40 <__mult_D2A+0x120>
   16b86:	49 83 c2 04          	add    $0x4,%r10
   16b8a:	89 34 2b             	mov    %esi,(%rbx,%rbp,1)
   16b8d:	48 83 c3 04          	add    $0x4,%rbx
   16b91:	4d 39 d4             	cmp    %r10,%r12
   16b94:	0f 87 77 ff ff ff    	ja     16b11 <__mult_D2A+0xf1>
   16b9a:	48 8b 04 24          	mov    (%rsp),%rax
   16b9e:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
   16ba2:	85 ed                	test   %ebp,%ebp
   16ba4:	7f 0f                	jg     16bb5 <__mult_D2A+0x195>
   16ba6:	eb 18                	jmp    16bc0 <__mult_D2A+0x1a0>
   16ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16baf:	00 
   16bb0:	83 ed 01             	sub    $0x1,%ebp
   16bb3:	74 0b                	je     16bc0 <__mult_D2A+0x1a0>
   16bb5:	8b 50 fc             	mov    -0x4(%rax),%edx
   16bb8:	48 83 e8 04          	sub    $0x4,%rax
   16bbc:	85 d2                	test   %edx,%edx
   16bbe:	74 f0                	je     16bb0 <__mult_D2A+0x190>
   16bc0:	41 89 6d 14          	mov    %ebp,0x14(%r13)
   16bc4:	48 83 c4 18          	add    $0x18,%rsp
   16bc8:	4c 89 e8             	mov    %r13,%rax
   16bcb:	5b                   	pop    %rbx
   16bcc:	5d                   	pop    %rbp
   16bcd:	41 5c                	pop    %r12
   16bcf:	41 5d                	pop    %r13
   16bd1:	41 5e                	pop    %r14
   16bd3:	41 5f                	pop    %r15
   16bd5:	c3                   	ret    
   16bd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16bdd:	00 00 00 
   16be0:	48 89 de             	mov    %rbx,%rsi
   16be3:	49 89 c0             	mov    %rax,%r8
   16be6:	45 31 f6             	xor    %r14d,%r14d
   16be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16bf0:	41 8b 08             	mov    (%r8),%ecx
   16bf3:	8b 16                	mov    (%rsi),%edx
   16bf5:	49 83 c0 04          	add    $0x4,%r8
   16bf9:	48 83 c6 04          	add    $0x4,%rsi
   16bfd:	0f b7 f9             	movzwl %cx,%edi
   16c00:	c1 e9 10             	shr    $0x10,%ecx
   16c03:	44 0f b7 fa          	movzwl %dx,%r15d
   16c07:	41 0f af f9          	imul   %r9d,%edi
   16c0b:	c1 ea 10             	shr    $0x10,%edx
   16c0e:	41 0f af c9          	imul   %r9d,%ecx
   16c12:	44 01 ff             	add    %r15d,%edi
   16c15:	44 01 f7             	add    %r14d,%edi
   16c18:	01 ca                	add    %ecx,%edx
   16c1a:	89 f9                	mov    %edi,%ecx
   16c1c:	66 89 7e fc          	mov    %di,-0x4(%rsi)
   16c20:	c1 e9 10             	shr    $0x10,%ecx
   16c23:	01 ca                	add    %ecx,%edx
   16c25:	41 89 d6             	mov    %edx,%r14d
   16c28:	66 89 56 fe          	mov    %dx,-0x2(%rsi)
   16c2c:	41 c1 ee 10          	shr    $0x10,%r14d
   16c30:	4d 39 c3             	cmp    %r8,%r11
   16c33:	77 bb                	ja     16bf0 <__mult_D2A+0x1d0>
   16c35:	44 89 34 2b          	mov    %r14d,(%rbx,%rbp,1)
   16c39:	45 8b 32             	mov    (%r10),%r14d
   16c3c:	e9 e3 fe ff ff       	jmp    16b24 <__mult_D2A+0x104>
   16c41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16c48:	00 00 00 
   16c4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000016c50 <__pow5mult_D2A>:
   16c50:	f3 0f 1e fa          	endbr64 
   16c54:	89 f0                	mov    %esi,%eax
   16c56:	41 56                	push   %r14
   16c58:	41 55                	push   %r13
   16c5a:	41 54                	push   %r12
   16c5c:	55                   	push   %rbp
   16c5d:	48 89 fd             	mov    %rdi,%rbp
   16c60:	53                   	push   %rbx
   16c61:	89 f3                	mov    %esi,%ebx
   16c63:	83 e0 03             	and    $0x3,%eax
   16c66:	0f 85 b4 00 00 00    	jne    16d20 <__pow5mult_D2A+0xd0>
   16c6c:	c1 fb 02             	sar    $0x2,%ebx
   16c6f:	49 89 ee             	mov    %rbp,%r14
   16c72:	74 57                	je     16ccb <__pow5mult_D2A+0x7b>
   16c74:	4c 8b 25 e5 5a 01 00 	mov    0x15ae5(%rip),%r12        # 2c760 <p5s>
   16c7b:	4d 85 e4             	test   %r12,%r12
   16c7e:	0f 84 cd 00 00 00    	je     16d51 <__pow5mult_D2A+0x101>
   16c84:	49 89 ee             	mov    %rbp,%r14
   16c87:	4c 8d 2d 46 64 01 00 	lea    0x16446(%rip),%r13        # 2d0d4 <__dtoa_locks+0x4>
   16c8e:	eb 10                	jmp    16ca0 <__pow5mult_D2A+0x50>
   16c90:	d1 fb                	sar    %ebx
   16c92:	74 37                	je     16ccb <__pow5mult_D2A+0x7b>
   16c94:	49 8b 2c 24          	mov    (%r12),%rbp
   16c98:	48 85 ed             	test   %rbp,%rbp
   16c9b:	74 43                	je     16ce0 <__pow5mult_D2A+0x90>
   16c9d:	49 89 ec             	mov    %rbp,%r12
   16ca0:	f6 c3 01             	test   $0x1,%bl
   16ca3:	74 eb                	je     16c90 <__pow5mult_D2A+0x40>
   16ca5:	4c 89 e6             	mov    %r12,%rsi
   16ca8:	4c 89 f7             	mov    %r14,%rdi
   16cab:	e8 70 fd ff ff       	call   16a20 <__mult_D2A>
   16cb0:	48 89 c5             	mov    %rax,%rbp
   16cb3:	48 85 c0             	test   %rax,%rax
   16cb6:	0f 84 86 00 00 00    	je     16d42 <__pow5mult_D2A+0xf2>
   16cbc:	4c 89 f7             	mov    %r14,%rdi
   16cbf:	49 89 ee             	mov    %rbp,%r14
   16cc2:	e8 09 fb ff ff       	call   167d0 <__Bfree_D2A>
   16cc7:	d1 fb                	sar    %ebx
   16cc9:	75 c9                	jne    16c94 <__pow5mult_D2A+0x44>
   16ccb:	5b                   	pop    %rbx
   16ccc:	4c 89 f0             	mov    %r14,%rax
   16ccf:	5d                   	pop    %rbp
   16cd0:	41 5c                	pop    %r12
   16cd2:	41 5d                	pop    %r13
   16cd4:	41 5e                	pop    %r14
   16cd6:	c3                   	ret    
   16cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16cde:	00 00 
   16ce0:	4c 89 ef             	mov    %r13,%rdi
   16ce3:	e8 d8 4e ff ff       	call   bbc0 <sgx_spin_lock>
   16ce8:	49 8b 2c 24          	mov    (%r12),%rbp
   16cec:	48 85 ed             	test   %rbp,%rbp
   16cef:	74 0f                	je     16d00 <__pow5mult_D2A+0xb0>
   16cf1:	4c 89 ef             	mov    %r13,%rdi
   16cf4:	e8 37 4f ff ff       	call   bc30 <sgx_spin_unlock>
   16cf9:	eb a2                	jmp    16c9d <__pow5mult_D2A+0x4d>
   16cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16d00:	4c 89 e6             	mov    %r12,%rsi
   16d03:	4c 89 e7             	mov    %r12,%rdi
   16d06:	e8 15 fd ff ff       	call   16a20 <__mult_D2A>
   16d0b:	49 89 04 24          	mov    %rax,(%r12)
   16d0f:	48 89 c5             	mov    %rax,%rbp
   16d12:	48 85 c0             	test   %rax,%rax
   16d15:	74 2b                	je     16d42 <__pow5mult_D2A+0xf2>
   16d17:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16d1e:	eb d1                	jmp    16cf1 <__pow5mult_D2A+0xa1>
   16d20:	83 e8 01             	sub    $0x1,%eax
   16d23:	48 8d 15 0e c0 00 00 	lea    0xc00e(%rip),%rdx        # 22d38 <p05.2586>
   16d2a:	48 98                	cltq   
   16d2c:	8b 34 82             	mov    (%rdx,%rax,4),%esi
   16d2f:	31 d2                	xor    %edx,%edx
   16d31:	e8 8a fb ff ff       	call   168c0 <__multadd_D2A>
   16d36:	48 89 c5             	mov    %rax,%rbp
   16d39:	48 85 c0             	test   %rax,%rax
   16d3c:	0f 85 2a ff ff ff    	jne    16c6c <__pow5mult_D2A+0x1c>
   16d42:	45 31 f6             	xor    %r14d,%r14d
   16d45:	5b                   	pop    %rbx
   16d46:	5d                   	pop    %rbp
   16d47:	4c 89 f0             	mov    %r14,%rax
   16d4a:	41 5c                	pop    %r12
   16d4c:	41 5d                	pop    %r13
   16d4e:	41 5e                	pop    %r14
   16d50:	c3                   	ret    
   16d51:	48 8d 3d 7c 63 01 00 	lea    0x1637c(%rip),%rdi        # 2d0d4 <__dtoa_locks+0x4>
   16d58:	e8 63 4e ff ff       	call   bbc0 <sgx_spin_lock>
   16d5d:	4c 8b 25 fc 59 01 00 	mov    0x159fc(%rip),%r12        # 2c760 <p5s>
   16d64:	4d 85 e4             	test   %r12,%r12
   16d67:	74 11                	je     16d7a <__pow5mult_D2A+0x12a>
   16d69:	48 8d 3d 64 63 01 00 	lea    0x16364(%rip),%rdi        # 2d0d4 <__dtoa_locks+0x4>
   16d70:	e8 bb 4e ff ff       	call   bc30 <sgx_spin_unlock>
   16d75:	e9 0a ff ff ff       	jmp    16c84 <__pow5mult_D2A+0x34>
   16d7a:	bf 01 00 00 00       	mov    $0x1,%edi
   16d7f:	e8 5c f9 ff ff       	call   166e0 <__Balloc_D2A>
   16d84:	49 89 c4             	mov    %rax,%r12
   16d87:	48 85 c0             	test   %rax,%rax
   16d8a:	74 20                	je     16dac <__pow5mult_D2A+0x15c>
   16d8c:	48 b8 01 00 00 00 71 	movabs $0x27100000001,%rax
   16d93:	02 00 00 
   16d96:	4c 89 25 c3 59 01 00 	mov    %r12,0x159c3(%rip)        # 2c760 <p5s>
   16d9d:	49 89 44 24 14       	mov    %rax,0x14(%r12)
   16da2:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   16da9:	00 
   16daa:	eb bd                	jmp    16d69 <__pow5mult_D2A+0x119>
   16dac:	48 c7 05 a9 59 01 00 	movq   $0x0,0x159a9(%rip)        # 2c760 <p5s>
   16db3:	00 00 00 00 
   16db7:	45 31 f6             	xor    %r14d,%r14d
   16dba:	e9 0c ff ff ff       	jmp    16ccb <__pow5mult_D2A+0x7b>
   16dbf:	90                   	nop

0000000000016dc0 <__lshift_D2A>:
   16dc0:	f3 0f 1e fa          	endbr64 
   16dc4:	41 57                	push   %r15
   16dc6:	41 89 f7             	mov    %esi,%r15d
   16dc9:	41 56                	push   %r14
   16dcb:	41 c1 ff 05          	sar    $0x5,%r15d
   16dcf:	41 89 f6             	mov    %esi,%r14d
   16dd2:	41 55                	push   %r13
   16dd4:	41 54                	push   %r12
   16dd6:	55                   	push   %rbp
   16dd7:	48 89 fd             	mov    %rdi,%rbp
   16dda:	53                   	push   %rbx
   16ddb:	48 83 ec 08          	sub    $0x8,%rsp
   16ddf:	8b 5d 14             	mov    0x14(%rbp),%ebx
   16de2:	8b 45 0c             	mov    0xc(%rbp),%eax
   16de5:	8b 7f 08             	mov    0x8(%rdi),%edi
   16de8:	44 01 fb             	add    %r15d,%ebx
   16deb:	44 8d 63 01          	lea    0x1(%rbx),%r12d
   16def:	41 39 c4             	cmp    %eax,%r12d
   16df2:	7e 0e                	jle    16e02 <__lshift_D2A+0x42>
   16df4:	0f 1f 40 00          	nopl   0x0(%rax)
   16df8:	01 c0                	add    %eax,%eax
   16dfa:	83 c7 01             	add    $0x1,%edi
   16dfd:	41 39 c4             	cmp    %eax,%r12d
   16e00:	7f f6                	jg     16df8 <__lshift_D2A+0x38>
   16e02:	e8 d9 f8 ff ff       	call   166e0 <__Balloc_D2A>
   16e07:	49 89 c5             	mov    %rax,%r13
   16e0a:	48 85 c0             	test   %rax,%rax
   16e0d:	0f 84 bf 00 00 00    	je     16ed2 <__lshift_D2A+0x112>
   16e13:	48 8d 78 18          	lea    0x18(%rax),%rdi
   16e17:	45 85 ff             	test   %r15d,%r15d
   16e1a:	7e 29                	jle    16e45 <__lshift_D2A+0x85>
   16e1c:	41 8d 4f ff          	lea    -0x1(%r15),%ecx
   16e20:	48 89 fa             	mov    %rdi,%rdx
   16e23:	48 8d 44 88 1c       	lea    0x1c(%rax,%rcx,4),%rax
   16e28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16e2f:	00 
   16e30:	48 83 c2 04          	add    $0x4,%rdx
   16e34:	c7 42 fc 00 00 00 00 	movl   $0x0,-0x4(%rdx)
   16e3b:	48 39 c2             	cmp    %rax,%rdx
   16e3e:	75 f0                	jne    16e30 <__lshift_D2A+0x70>
   16e40:	48 8d 7c 8f 04       	lea    0x4(%rdi,%rcx,4),%rdi
   16e45:	48 63 45 14          	movslq 0x14(%rbp),%rax
   16e49:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   16e4d:	48 8d 04 86          	lea    (%rsi,%rax,4),%rax
   16e51:	41 83 e6 1f          	and    $0x1f,%r14d
   16e55:	0f 84 8d 00 00 00    	je     16ee8 <__lshift_D2A+0x128>
   16e5b:	41 bb 20 00 00 00    	mov    $0x20,%r11d
   16e61:	49 89 f9             	mov    %rdi,%r9
   16e64:	45 31 c0             	xor    %r8d,%r8d
   16e67:	45 29 f3             	sub    %r14d,%r11d
   16e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16e70:	8b 16                	mov    (%rsi),%edx
   16e72:	44 89 f1             	mov    %r14d,%ecx
   16e75:	49 83 c1 04          	add    $0x4,%r9
   16e79:	48 83 c6 04          	add    $0x4,%rsi
   16e7d:	d3 e2                	shl    %cl,%edx
   16e7f:	44 89 d9             	mov    %r11d,%ecx
   16e82:	44 09 c2             	or     %r8d,%edx
   16e85:	41 89 51 fc          	mov    %edx,-0x4(%r9)
   16e89:	44 8b 46 fc          	mov    -0x4(%rsi),%r8d
   16e8d:	41 d3 e8             	shr    %cl,%r8d
   16e90:	48 39 f0             	cmp    %rsi,%rax
   16e93:	77 db                	ja     16e70 <__lshift_D2A+0xb0>
   16e95:	48 89 c2             	mov    %rax,%rdx
   16e98:	48 8d 4d 19          	lea    0x19(%rbp),%rcx
   16e9c:	48 29 ea             	sub    %rbp,%rdx
   16e9f:	48 83 ea 19          	sub    $0x19,%rdx
   16ea3:	48 c1 ea 02          	shr    $0x2,%rdx
   16ea7:	48 39 c8             	cmp    %rcx,%rax
   16eaa:	b8 04 00 00 00       	mov    $0x4,%eax
   16eaf:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
   16eb6:	00 
   16eb7:	48 0f 42 d0          	cmovb  %rax,%rdx
   16ebb:	45 85 c0             	test   %r8d,%r8d
   16ebe:	41 0f 45 dc          	cmovne %r12d,%ebx
   16ec2:	44 89 04 17          	mov    %r8d,(%rdi,%rdx,1)
   16ec6:	41 89 5d 14          	mov    %ebx,0x14(%r13)
   16eca:	48 89 ef             	mov    %rbp,%rdi
   16ecd:	e8 fe f8 ff ff       	call   167d0 <__Bfree_D2A>
   16ed2:	48 83 c4 08          	add    $0x8,%rsp
   16ed6:	4c 89 e8             	mov    %r13,%rax
   16ed9:	5b                   	pop    %rbx
   16eda:	5d                   	pop    %rbp
   16edb:	41 5c                	pop    %r12
   16edd:	41 5d                	pop    %r13
   16edf:	41 5e                	pop    %r14
   16ee1:	41 5f                	pop    %r15
   16ee3:	c3                   	ret    
   16ee4:	0f 1f 40 00          	nopl   0x0(%rax)
   16ee8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16ee9:	48 39 f0             	cmp    %rsi,%rax
   16eec:	76 d8                	jbe    16ec6 <__lshift_D2A+0x106>
   16eee:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   16eef:	48 39 f0             	cmp    %rsi,%rax
   16ef2:	77 f4                	ja     16ee8 <__lshift_D2A+0x128>
   16ef4:	eb d0                	jmp    16ec6 <__lshift_D2A+0x106>
   16ef6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   16efd:	00 00 00 

0000000000016f00 <__cmp_D2A>:
   16f00:	f3 0f 1e fa          	endbr64 
   16f04:	48 63 46 14          	movslq 0x14(%rsi),%rax
   16f08:	44 8b 47 14          	mov    0x14(%rdi),%r8d
   16f0c:	41 29 c0             	sub    %eax,%r8d
   16f0f:	75 39                	jne    16f4a <__cmp_D2A+0x4a>
   16f11:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16f18:	00 
   16f19:	48 83 c7 18          	add    $0x18,%rdi
   16f1d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   16f21:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   16f26:	eb 0d                	jmp    16f35 <__cmp_D2A+0x35>
   16f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16f2f:	00 
   16f30:	48 39 c7             	cmp    %rax,%rdi
   16f33:	73 15                	jae    16f4a <__cmp_D2A+0x4a>
   16f35:	48 83 e8 04          	sub    $0x4,%rax
   16f39:	48 83 ea 04          	sub    $0x4,%rdx
   16f3d:	8b 0a                	mov    (%rdx),%ecx
   16f3f:	39 08                	cmp    %ecx,(%rax)
   16f41:	74 ed                	je     16f30 <__cmp_D2A+0x30>
   16f43:	45 19 c0             	sbb    %r8d,%r8d
   16f46:	41 83 c8 01          	or     $0x1,%r8d
   16f4a:	44 89 c0             	mov    %r8d,%eax
   16f4d:	c3                   	ret    
   16f4e:	66 90                	xchg   %ax,%ax

0000000000016f50 <__diff_D2A>:
   16f50:	f3 0f 1e fa          	endbr64 
   16f54:	41 56                	push   %r14
   16f56:	41 55                	push   %r13
   16f58:	41 54                	push   %r12
   16f5a:	49 89 f4             	mov    %rsi,%r12
   16f5d:	55                   	push   %rbp
   16f5e:	53                   	push   %rbx
   16f5f:	48 63 46 14          	movslq 0x14(%rsi),%rax
   16f63:	48 89 fb             	mov    %rdi,%rbx
   16f66:	8b 6f 14             	mov    0x14(%rdi),%ebp
   16f69:	29 c5                	sub    %eax,%ebp
   16f6b:	0f 85 9f 01 00 00    	jne    17110 <__diff_D2A+0x1c0>
   16f71:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16f78:	00 
   16f79:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   16f7d:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   16f81:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   16f86:	eb 11                	jmp    16f99 <__diff_D2A+0x49>
   16f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16f8f:	00 
   16f90:	48 39 c1             	cmp    %rax,%rcx
   16f93:	0f 83 97 01 00 00    	jae    17130 <__diff_D2A+0x1e0>
   16f99:	48 83 e8 04          	sub    $0x4,%rax
   16f9d:	48 83 ea 04          	sub    $0x4,%rdx
   16fa1:	8b 32                	mov    (%rdx),%esi
   16fa3:	39 30                	cmp    %esi,(%rax)
   16fa5:	74 e9                	je     16f90 <__diff_D2A+0x40>
   16fa7:	0f 82 6e 01 00 00    	jb     1711b <__diff_D2A+0x1cb>
   16fad:	8b 7b 08             	mov    0x8(%rbx),%edi
   16fb0:	e8 2b f7 ff ff       	call   166e0 <__Balloc_D2A>
   16fb5:	48 85 c0             	test   %rax,%rax
   16fb8:	0f 84 45 01 00 00    	je     17103 <__diff_D2A+0x1b3>
   16fbe:	48 63 53 14          	movslq 0x14(%rbx),%rdx
   16fc2:	4c 8d 5b 18          	lea    0x18(%rbx),%r11
   16fc6:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   16fcb:	89 68 10             	mov    %ebp,0x10(%rax)
   16fce:	48 8d 70 18          	lea    0x18(%rax),%rsi
   16fd2:	4d 89 d9             	mov    %r11,%r9
   16fd5:	45 31 ed             	xor    %r13d,%r13d
   16fd8:	49 89 d2             	mov    %rdx,%r10
   16fdb:	49 8d 1c 93          	lea    (%r11,%rdx,4),%rbx
   16fdf:	49 63 54 24 14       	movslq 0x14(%r12),%rdx
   16fe4:	49 89 f0             	mov    %rsi,%r8
   16fe7:	48 8d 2c 97          	lea    (%rdi,%rdx,4),%rbp
   16feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16ff0:	41 8b 11             	mov    (%r9),%edx
   16ff3:	44 8b 37             	mov    (%rdi),%r14d
   16ff6:	48 83 c7 04          	add    $0x4,%rdi
   16ffa:	49 83 c1 04          	add    $0x4,%r9
   16ffe:	49 83 c0 04          	add    $0x4,%r8
   17002:	0f b7 ca             	movzwl %dx,%ecx
   17005:	c1 ea 10             	shr    $0x10,%edx
   17008:	44 29 e9             	sub    %r13d,%ecx
   1700b:	45 0f b7 ee          	movzwl %r14w,%r13d
   1700f:	41 c1 ee 10          	shr    $0x10,%r14d
   17013:	44 29 e9             	sub    %r13d,%ecx
   17016:	44 29 f2             	sub    %r14d,%edx
   17019:	41 89 cd             	mov    %ecx,%r13d
   1701c:	66 41 89 48 fc       	mov    %cx,-0x4(%r8)
   17021:	41 c1 ed 10          	shr    $0x10,%r13d
   17025:	41 83 e5 01          	and    $0x1,%r13d
   17029:	44 29 ea             	sub    %r13d,%edx
   1702c:	41 89 d5             	mov    %edx,%r13d
   1702f:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   17034:	41 c1 ed 10          	shr    $0x10,%r13d
   17038:	41 83 e5 01          	and    $0x1,%r13d
   1703c:	48 39 fd             	cmp    %rdi,%rbp
   1703f:	77 af                	ja     16ff0 <__diff_D2A+0xa0>
   17041:	48 89 ea             	mov    %rbp,%rdx
   17044:	49 8d 7c 24 19       	lea    0x19(%r12),%rdi
   17049:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1704f:	4c 29 e2             	sub    %r12,%rdx
   17052:	48 83 ea 19          	sub    $0x19,%rdx
   17056:	48 89 d1             	mov    %rdx,%rcx
   17059:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   1705d:	48 c1 e9 02          	shr    $0x2,%rcx
   17061:	48 39 fd             	cmp    %rdi,%rbp
   17064:	49 0f 42 d0          	cmovb  %r8,%rdx
   17068:	48 8d 0c 8d 04 00 00 	lea    0x4(,%rcx,4),%rcx
   1706f:	00 
   17070:	48 01 f2             	add    %rsi,%rdx
   17073:	48 39 fd             	cmp    %rdi,%rbp
   17076:	bf 04 00 00 00       	mov    $0x4,%edi
   1707b:	48 0f 42 cf          	cmovb  %rdi,%rcx
   1707f:	49 01 cb             	add    %rcx,%r11
   17082:	48 01 ce             	add    %rcx,%rsi
   17085:	4c 39 db             	cmp    %r11,%rbx
   17088:	0f 86 c2 00 00 00    	jbe    17150 <__diff_D2A+0x200>
   1708e:	49 89 f1             	mov    %rsi,%r9
   17091:	4d 89 d8             	mov    %r11,%r8
   17094:	0f 1f 40 00          	nopl   0x0(%rax)
   17098:	41 8b 10             	mov    (%r8),%edx
   1709b:	49 83 c0 04          	add    $0x4,%r8
   1709f:	49 83 c1 04          	add    $0x4,%r9
   170a3:	0f b7 ca             	movzwl %dx,%ecx
   170a6:	c1 ea 10             	shr    $0x10,%edx
   170a9:	44 29 e9             	sub    %r13d,%ecx
   170ac:	89 cd                	mov    %ecx,%ebp
   170ae:	66 41 89 49 fc       	mov    %cx,-0x4(%r9)
   170b3:	c1 ed 10             	shr    $0x10,%ebp
   170b6:	83 e5 01             	and    $0x1,%ebp
   170b9:	29 ea                	sub    %ebp,%edx
   170bb:	41 89 d5             	mov    %edx,%r13d
   170be:	66 41 89 51 fe       	mov    %dx,-0x2(%r9)
   170c3:	41 c1 ed 10          	shr    $0x10,%r13d
   170c7:	41 83 e5 01          	and    $0x1,%r13d
   170cb:	4c 39 c3             	cmp    %r8,%rbx
   170ce:	77 c8                	ja     17098 <__diff_D2A+0x148>
   170d0:	48 83 eb 01          	sub    $0x1,%rbx
   170d4:	4c 29 db             	sub    %r11,%rbx
   170d7:	48 c1 eb 02          	shr    $0x2,%rbx
   170db:	48 8d 4c 9e 04       	lea    0x4(%rsi,%rbx,4),%rcx
   170e0:	48 8d 14 9e          	lea    (%rsi,%rbx,4),%rdx
   170e4:	8b 71 fc             	mov    -0x4(%rcx),%esi
   170e7:	85 f6                	test   %esi,%esi
   170e9:	75 14                	jne    170ff <__diff_D2A+0x1af>
   170eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   170f0:	8b 4a fc             	mov    -0x4(%rdx),%ecx
   170f3:	48 83 ea 04          	sub    $0x4,%rdx
   170f7:	41 83 ea 01          	sub    $0x1,%r10d
   170fb:	85 c9                	test   %ecx,%ecx
   170fd:	74 f1                	je     170f0 <__diff_D2A+0x1a0>
   170ff:	44 89 50 14          	mov    %r10d,0x14(%rax)
   17103:	5b                   	pop    %rbx
   17104:	5d                   	pop    %rbp
   17105:	41 5c                	pop    %r12
   17107:	41 5d                	pop    %r13
   17109:	41 5e                	pop    %r14
   1710b:	c3                   	ret    
   1710c:	0f 1f 40 00          	nopl   0x0(%rax)
   17110:	bd 00 00 00 00       	mov    $0x0,%ebp
   17115:	0f 89 92 fe ff ff    	jns    16fad <__diff_D2A+0x5d>
   1711b:	48 89 d8             	mov    %rbx,%rax
   1711e:	bd 01 00 00 00       	mov    $0x1,%ebp
   17123:	4c 89 e3             	mov    %r12,%rbx
   17126:	49 89 c4             	mov    %rax,%r12
   17129:	e9 7f fe ff ff       	jmp    16fad <__diff_D2A+0x5d>
   1712e:	66 90                	xchg   %ax,%ax
   17130:	31 ff                	xor    %edi,%edi
   17132:	e8 a9 f5 ff ff       	call   166e0 <__Balloc_D2A>
   17137:	48 85 c0             	test   %rax,%rax
   1713a:	74 c7                	je     17103 <__diff_D2A+0x1b3>
   1713c:	48 c7 40 14 01 00 00 	movq   $0x1,0x14(%rax)
   17143:	00 
   17144:	5b                   	pop    %rbx
   17145:	5d                   	pop    %rbp
   17146:	41 5c                	pop    %r12
   17148:	41 5d                	pop    %r13
   1714a:	41 5e                	pop    %r14
   1714c:	c3                   	ret    
   1714d:	0f 1f 00             	nopl   (%rax)
   17150:	48 89 f1             	mov    %rsi,%rcx
   17153:	eb 8f                	jmp    170e4 <__diff_D2A+0x194>
   17155:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1715c:	00 00 00 
   1715f:	90                   	nop

0000000000017160 <__b2d_D2A>:
   17160:	f3 0f 1e fa          	endbr64 
   17164:	48 83 ec 18          	sub    $0x18,%rsp
   17168:	4c 8d 4f 18          	lea    0x18(%rdi),%r9
   1716c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   17173:	00 00 
   17175:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1717a:	31 c0                	xor    %eax,%eax
   1717c:	48 63 47 14          	movslq 0x14(%rdi),%rax
   17180:	4d 8d 14 81          	lea    (%r9,%rax,4),%r10
   17184:	45 8b 42 fc          	mov    -0x4(%r10),%r8d
   17188:	4d 8d 5a fc          	lea    -0x4(%r10),%r11
   1718c:	44 89 c7             	mov    %r8d,%edi
   1718f:	e8 fc f7 ff ff       	call   16990 <__hi0bits_D2A>
   17194:	b9 20 00 00 00       	mov    $0x20,%ecx
   17199:	89 ca                	mov    %ecx,%edx
   1719b:	29 c2                	sub    %eax,%edx
   1719d:	89 16                	mov    %edx,(%rsi)
   1719f:	83 f8 0a             	cmp    $0xa,%eax
   171a2:	0f 8e 98 00 00 00    	jle    17240 <__b2d_D2A+0xe0>
   171a8:	83 e8 0b             	sub    $0xb,%eax
   171ab:	4d 39 d9             	cmp    %r11,%r9
   171ae:	73 58                	jae    17208 <__b2d_D2A+0xa8>
   171b0:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   171b4:	85 c0                	test   %eax,%eax
   171b6:	74 56                	je     1720e <__b2d_D2A+0xae>
   171b8:	29 c1                	sub    %eax,%ecx
   171ba:	44 89 c2             	mov    %r8d,%edx
   171bd:	41 89 f3             	mov    %esi,%r11d
   171c0:	89 cf                	mov    %ecx,%edi
   171c2:	89 c1                	mov    %eax,%ecx
   171c4:	d3 e2                	shl    %cl,%edx
   171c6:	89 f9                	mov    %edi,%ecx
   171c8:	41 d3 eb             	shr    %cl,%r11d
   171cb:	89 c1                	mov    %eax,%ecx
   171cd:	49 8d 42 f8          	lea    -0x8(%r10),%rax
   171d1:	44 09 da             	or     %r11d,%edx
   171d4:	d3 e6                	shl    %cl,%esi
   171d6:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   171dc:	48 c1 e2 20          	shl    $0x20,%rdx
   171e0:	49 39 c1             	cmp    %rax,%r9
   171e3:	73 0a                	jae    171ef <__b2d_D2A+0x8f>
   171e5:	41 8b 42 f4          	mov    -0xc(%r10),%eax
   171e9:	89 f9                	mov    %edi,%ecx
   171eb:	d3 e8                	shr    %cl,%eax
   171ed:	09 c6                	or     %eax,%esi
   171ef:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   171f6:	ff ff ff 
   171f9:	48 21 c2             	and    %rax,%rdx
   171fc:	48 09 f2             	or     %rsi,%rdx
   171ff:	eb 1d                	jmp    1721e <__b2d_D2A+0xbe>
   17201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17208:	31 f6                	xor    %esi,%esi
   1720a:	85 c0                	test   %eax,%eax
   1720c:	75 6a                	jne    17278 <__b2d_D2A+0x118>
   1720e:	44 89 c2             	mov    %r8d,%edx
   17211:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   17217:	48 c1 e2 20          	shl    $0x20,%rdx
   1721b:	48 09 f2             	or     %rsi,%rdx
   1721e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17223:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1722a:	00 00 
   1722c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   17231:	75 5d                	jne    17290 <__b2d_D2A+0x130>
   17233:	48 83 c4 18          	add    $0x18,%rsp
   17237:	c3                   	ret    
   17238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1723f:	00 
   17240:	b9 0b 00 00 00       	mov    $0xb,%ecx
   17245:	44 89 c2             	mov    %r8d,%edx
   17248:	31 f6                	xor    %esi,%esi
   1724a:	29 c1                	sub    %eax,%ecx
   1724c:	d3 ea                	shr    %cl,%edx
   1724e:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   17254:	48 c1 e2 20          	shl    $0x20,%rdx
   17258:	4d 39 d9             	cmp    %r11,%r9
   1725b:	73 06                	jae    17263 <__b2d_D2A+0x103>
   1725d:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   17261:	d3 ee                	shr    %cl,%esi
   17263:	8d 48 15             	lea    0x15(%rax),%ecx
   17266:	41 d3 e0             	shl    %cl,%r8d
   17269:	41 09 f0             	or     %esi,%r8d
   1726c:	4c 09 c2             	or     %r8,%rdx
   1726f:	eb ad                	jmp    1721e <__b2d_D2A+0xbe>
   17271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17278:	44 89 c2             	mov    %r8d,%edx
   1727b:	89 c1                	mov    %eax,%ecx
   1727d:	31 f6                	xor    %esi,%esi
   1727f:	d3 e2                	shl    %cl,%edx
   17281:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   17287:	48 c1 e2 20          	shl    $0x20,%rdx
   1728b:	e9 5f ff ff ff       	jmp    171ef <__b2d_D2A+0x8f>
   17290:	e8 2b 87 ff ff       	call   f9c0 <__stack_chk_fail>
   17295:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1729c:	00 00 00 
   1729f:	90                   	nop

00000000000172a0 <__d2b_D2A>:
   172a0:	f3 0f 1e fa          	endbr64 
   172a4:	41 54                	push   %r12
   172a6:	66 49 0f 7e c4       	movq   %xmm0,%r12
   172ab:	55                   	push   %rbp
   172ac:	48 89 fd             	mov    %rdi,%rbp
   172af:	bf 01 00 00 00       	mov    $0x1,%edi
   172b4:	53                   	push   %rbx
   172b5:	48 89 f3             	mov    %rsi,%rbx
   172b8:	48 83 ec 10          	sub    $0x10,%rsp
   172bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   172c3:	00 00 
   172c5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   172ca:	31 c0                	xor    %eax,%eax
   172cc:	e8 0f f4 ff ff       	call   166e0 <__Balloc_D2A>
   172d1:	49 89 c1             	mov    %rax,%r9
   172d4:	48 85 c0             	test   %rax,%rax
   172d7:	0f 84 9b 00 00 00    	je     17378 <__d2b_D2A+0xd8>
   172dd:	4c 89 e2             	mov    %r12,%rdx
   172e0:	44 89 24 24          	mov    %r12d,(%rsp)
   172e4:	48 c1 ea 20          	shr    $0x20,%rdx
   172e8:	89 d1                	mov    %edx,%ecx
   172ea:	c1 ea 14             	shr    $0x14,%edx
   172ed:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   172f3:	89 ce                	mov    %ecx,%esi
   172f5:	81 ce 00 00 10 00    	or     $0x100000,%esi
   172fb:	81 e2 ff 07 00 00    	and    $0x7ff,%edx
   17301:	0f 45 ce             	cmovne %esi,%ecx
   17304:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   17308:	45 85 e4             	test   %r12d,%r12d
   1730b:	0f 84 87 00 00 00    	je     17398 <__d2b_D2A+0xf8>
   17311:	48 89 e7             	mov    %rsp,%rdi
   17314:	e8 17 f5 ff ff       	call   16830 <__lo0bits_D2A>
   17319:	85 c0                	test   %eax,%eax
   1731b:	0f 84 b7 00 00 00    	je     173d8 <__d2b_D2A+0x138>
   17321:	8b 74 24 04          	mov    0x4(%rsp),%esi
   17325:	b9 20 00 00 00       	mov    $0x20,%ecx
   1732a:	29 c1                	sub    %eax,%ecx
   1732c:	89 f7                	mov    %esi,%edi
   1732e:	d3 e7                	shl    %cl,%edi
   17330:	8b 0c 24             	mov    (%rsp),%ecx
   17333:	09 f9                	or     %edi,%ecx
   17335:	41 89 49 18          	mov    %ecx,0x18(%r9)
   17339:	89 c1                	mov    %eax,%ecx
   1733b:	d3 ee                	shr    %cl,%esi
   1733d:	89 74 24 04          	mov    %esi,0x4(%rsp)
   17341:	89 f1                	mov    %esi,%ecx
   17343:	85 c9                	test   %ecx,%ecx
   17345:	41 89 49 1c          	mov    %ecx,0x1c(%r9)
   17349:	0f 95 c1             	setne  %cl
   1734c:	0f b6 c9             	movzbl %cl,%ecx
   1734f:	83 c1 01             	add    $0x1,%ecx
   17352:	41 89 49 14          	mov    %ecx,0x14(%r9)
   17356:	85 d2                	test   %edx,%edx
   17358:	75 64                	jne    173be <__d2b_D2A+0x11e>
   1735a:	2d 32 04 00 00       	sub    $0x432,%eax
   1735f:	89 45 00             	mov    %eax,0x0(%rbp)
   17362:	8d 41 ff             	lea    -0x1(%rcx),%eax
   17365:	48 98                	cltq   
   17367:	41 8b 7c 81 18       	mov    0x18(%r9,%rax,4),%edi
   1736c:	e8 1f f6 ff ff       	call   16990 <__hi0bits_D2A>
   17371:	c1 e1 05             	shl    $0x5,%ecx
   17374:	29 c1                	sub    %eax,%ecx
   17376:	89 0b                	mov    %ecx,(%rbx)
   17378:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1737d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   17384:	00 00 
   17386:	75 60                	jne    173e8 <__d2b_D2A+0x148>
   17388:	48 83 c4 10          	add    $0x10,%rsp
   1738c:	4c 89 c8             	mov    %r9,%rax
   1738f:	5b                   	pop    %rbx
   17390:	5d                   	pop    %rbp
   17391:	41 5c                	pop    %r12
   17393:	c3                   	ret    
   17394:	0f 1f 40 00          	nopl   0x0(%rax)
   17398:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   1739d:	e8 8e f4 ff ff       	call   16830 <__lo0bits_D2A>
   173a2:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   173a6:	41 c7 41 14 01 00 00 	movl   $0x1,0x14(%r9)
   173ad:	00 
   173ae:	83 c0 20             	add    $0x20,%eax
   173b1:	41 89 49 18          	mov    %ecx,0x18(%r9)
   173b5:	b9 01 00 00 00       	mov    $0x1,%ecx
   173ba:	85 d2                	test   %edx,%edx
   173bc:	74 9c                	je     1735a <__d2b_D2A+0xba>
   173be:	8d 94 02 cd fb ff ff 	lea    -0x433(%rdx,%rax,1),%edx
   173c5:	89 55 00             	mov    %edx,0x0(%rbp)
   173c8:	ba 35 00 00 00       	mov    $0x35,%edx
   173cd:	29 c2                	sub    %eax,%edx
   173cf:	89 13                	mov    %edx,(%rbx)
   173d1:	eb a5                	jmp    17378 <__d2b_D2A+0xd8>
   173d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   173d8:	8b 0c 24             	mov    (%rsp),%ecx
   173db:	41 89 49 18          	mov    %ecx,0x18(%r9)
   173df:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   173e3:	e9 5b ff ff ff       	jmp    17343 <__d2b_D2A+0xa3>
   173e8:	e8 d3 85 ff ff       	call   f9c0 <__stack_chk_fail>
   173ed:	0f 1f 00             	nopl   (%rax)

00000000000173f0 <__fpclassify>:
   173f0:	f3 0f 1e fa          	endbr64 
   173f4:	f2 0f 11 44 24 f8    	movsd  %xmm0,-0x8(%rsp)
   173fa:	0f b7 44 24 fe       	movzwl -0x2(%rsp),%eax
   173ff:	66 25 f0 7f          	and    $0x7ff0,%ax
   17403:	75 23                	jne    17428 <__fpclassify+0x38>
   17405:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   17409:	45 31 c0             	xor    %r8d,%r8d
   1740c:	25 ff ff 0f 00       	and    $0xfffff,%eax
   17411:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   17415:	41 0f 95 c0          	setne  %r8b
   17419:	41 83 c0 02          	add    $0x2,%r8d
   1741d:	44 89 c0             	mov    %r8d,%eax
   17420:	c3                   	ret    
   17421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17428:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1742e:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   17432:	75 e9                	jne    1741d <__fpclassify+0x2d>
   17434:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   17438:	45 31 c0             	xor    %r8d,%r8d
   1743b:	25 ff ff 0f 00       	and    $0xfffff,%eax
   17440:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   17444:	41 0f 94 c0          	sete   %r8b
   17448:	44 89 c0             	mov    %r8d,%eax
   1744b:	c3                   	ret    
   1744c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017450 <__fpclassifyl>:
   17450:	f3 0f 1e fa          	endbr64 
   17454:	0f b7 44 24 10       	movzwl 0x10(%rsp),%eax
   17459:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1745d:	66 25 ff 7f          	and    $0x7fff,%ax
   17461:	75 1d                	jne    17480 <__fpclassifyl+0x30>
   17463:	45 31 c0             	xor    %r8d,%r8d
   17466:	0b 54 24 08          	or     0x8(%rsp),%edx
   1746a:	41 0f 95 c0          	setne  %r8b
   1746e:	41 83 c0 02          	add    $0x2,%r8d
   17472:	44 89 c0             	mov    %r8d,%eax
   17475:	c3                   	ret    
   17476:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1747d:	00 00 00 
   17480:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   17486:	66 3d ff 7f          	cmp    $0x7fff,%ax
   1748a:	75 e6                	jne    17472 <__fpclassifyl+0x22>
   1748c:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   17492:	45 31 c0             	xor    %r8d,%r8d
   17495:	0b 54 24 08          	or     0x8(%rsp),%edx
   17499:	41 0f 94 c0          	sete   %r8b
   1749d:	44 89 c0             	mov    %r8d,%eax
   174a0:	c3                   	ret    
   174a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   174a8:	00 00 00 
   174ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000174b0 <mbrtowc>:
   174b0:	f3 0f 1e fa          	endbr64 
   174b4:	48 85 f6             	test   %rsi,%rsi
   174b7:	74 27                	je     174e0 <mbrtowc+0x30>
   174b9:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   174c0:	48 85 d2             	test   %rdx,%rdx
   174c3:	74 1d                	je     174e2 <mbrtowc+0x32>
   174c5:	0f b6 06             	movzbl (%rsi),%eax
   174c8:	48 85 ff             	test   %rdi,%rdi
   174cb:	74 05                	je     174d2 <mbrtowc+0x22>
   174cd:	89 07                	mov    %eax,(%rdi)
   174cf:	0f b6 06             	movzbl (%rsi),%eax
   174d2:	84 c0                	test   %al,%al
   174d4:	0f 95 c0             	setne  %al
   174d7:	0f b6 c0             	movzbl %al,%eax
   174da:	c3                   	ret    
   174db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   174e0:	31 c0                	xor    %eax,%eax
   174e2:	c3                   	ret    
   174e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   174ea:	00 00 00 
   174ed:	0f 1f 00             	nopl   (%rax)

00000000000174f0 <wcrtomb>:
   174f0:	f3 0f 1e fa          	endbr64 
   174f4:	48 85 ff             	test   %rdi,%rdi
   174f7:	74 17                	je     17510 <wcrtomb+0x20>
   174f9:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   174ff:	77 1f                	ja     17520 <wcrtomb+0x30>
   17501:	40 88 37             	mov    %sil,(%rdi)
   17504:	b8 01 00 00 00       	mov    $0x1,%eax
   17509:	c3                   	ret    
   1750a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17510:	b8 01 00 00 00       	mov    $0x1,%eax
   17515:	c3                   	ret    
   17516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1751d:	00 00 00 
   17520:	48 83 ec 08          	sub    $0x8,%rsp
   17524:	e8 87 8c ff ff       	call   101b0 <__errno>
   17529:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1752f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   17536:	48 83 c4 08          	add    $0x8,%rsp
   1753a:	c3                   	ret    
   1753b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017540 <wcsnrtombs>:
   17540:	f3 0f 1e fa          	endbr64 
   17544:	48 83 ec 08          	sub    $0x8,%rsp
   17548:	48 85 ff             	test   %rdi,%rdi
   1754b:	74 63                	je     175b0 <wcsnrtombs+0x70>
   1754d:	48 39 ca             	cmp    %rcx,%rdx
   17550:	48 0f 46 ca          	cmovbe %rdx,%rcx
   17554:	31 c0                	xor    %eax,%eax
   17556:	49 89 c8             	mov    %rcx,%r8
   17559:	48 85 c9             	test   %rcx,%rcx
   1755c:	75 1e                	jne    1757c <wcsnrtombs+0x3c>
   1755e:	e9 85 00 00 00       	jmp    175e8 <wcsnrtombs+0xa8>
   17563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17568:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   1756b:	85 d2                	test   %edx,%edx
   1756d:	0f 84 85 00 00 00    	je     175f8 <wcsnrtombs+0xb8>
   17573:	48 83 c0 01          	add    $0x1,%rax
   17577:	49 39 c0             	cmp    %rax,%r8
   1757a:	74 64                	je     175e0 <wcsnrtombs+0xa0>
   1757c:	48 8b 16             	mov    (%rsi),%rdx
   1757f:	48 8d 0c 82          	lea    (%rdx,%rax,4),%rcx
   17583:	8b 11                	mov    (%rcx),%edx
   17585:	81 fa ff 00 00 00    	cmp    $0xff,%edx
   1758b:	76 db                	jbe    17568 <wcsnrtombs+0x28>
   1758d:	48 89 0e             	mov    %rcx,(%rsi)
   17590:	e8 1b 8c ff ff       	call   101b0 <__errno>
   17595:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1759c:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   175a2:	4c 89 c0             	mov    %r8,%rax
   175a5:	48 83 c4 08          	add    $0x8,%rsp
   175a9:	c3                   	ret    
   175aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   175b0:	48 85 d2             	test   %rdx,%rdx
   175b3:	74 55                	je     1760a <wcsnrtombs+0xca>
   175b5:	48 8b 0e             	mov    (%rsi),%rcx
   175b8:	45 31 c0             	xor    %r8d,%r8d
   175bb:	eb 10                	jmp    175cd <wcsnrtombs+0x8d>
   175bd:	0f 1f 00             	nopl   (%rax)
   175c0:	85 c0                	test   %eax,%eax
   175c2:	74 de                	je     175a2 <wcsnrtombs+0x62>
   175c4:	49 83 c0 01          	add    $0x1,%r8
   175c8:	4c 39 c2             	cmp    %r8,%rdx
   175cb:	74 d5                	je     175a2 <wcsnrtombs+0x62>
   175cd:	42 8b 04 81          	mov    (%rcx,%r8,4),%eax
   175d1:	3d ff 00 00 00       	cmp    $0xff,%eax
   175d6:	76 e8                	jbe    175c0 <wcsnrtombs+0x80>
   175d8:	eb b6                	jmp    17590 <wcsnrtombs+0x50>
   175da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   175e0:	4a 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%rax
   175e7:	00 
   175e8:	48 01 06             	add    %rax,(%rsi)
   175eb:	4c 89 c0             	mov    %r8,%rax
   175ee:	48 83 c4 08          	add    $0x8,%rsp
   175f2:	c3                   	ret    
   175f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   175f8:	49 89 c0             	mov    %rax,%r8
   175fb:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   17602:	48 83 c4 08          	add    $0x8,%rsp
   17606:	4c 89 c0             	mov    %r8,%rax
   17609:	c3                   	ret    
   1760a:	45 31 c0             	xor    %r8d,%r8d
   1760d:	eb 93                	jmp    175a2 <wcsnrtombs+0x62>
   1760f:	90                   	nop

0000000000017610 <wcsrtombs>:
   17610:	f3 0f 1e fa          	endbr64 
   17614:	49 89 c8             	mov    %rcx,%r8
   17617:	48 89 d1             	mov    %rdx,%rcx
   1761a:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   17621:	e9 1a ff ff ff       	jmp    17540 <wcsnrtombs>
   17626:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1762d:	00 00 00 

0000000000017630 <__sfvwrite>:
   17630:	f3 0f 1e fa          	endbr64 
   17634:	8b 46 0c             	mov    0xc(%rsi),%eax
   17637:	85 c0                	test   %eax,%eax
   17639:	0f 84 91 02 00 00    	je     178d0 <__sfvwrite+0x2a0>
   1763f:	41 57                	push   %r15
   17641:	49 89 f0             	mov    %rsi,%r8
   17644:	41 56                	push   %r14
   17646:	41 55                	push   %r13
   17648:	41 54                	push   %r12
   1764a:	55                   	push   %rbp
   1764b:	48 89 fd             	mov    %rdi,%rbp
   1764e:	53                   	push   %rbx
   1764f:	48 83 ec 28          	sub    $0x28,%rsp
   17653:	4c 8b 26             	mov    (%rsi),%r12
   17656:	0f b7 47 10          	movzwl 0x10(%rdi),%eax
   1765a:	4d 8b 2c 24          	mov    (%r12),%r13
   1765e:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   17663:	49 83 c4 10          	add    $0x10,%r12
   17667:	a8 02                	test   $0x2,%al
   17669:	0f 85 3d 02 00 00    	jne    178ac <__sfvwrite+0x27c>
   1766f:	a8 01                	test   $0x1,%al
   17671:	0f 84 36 01 00 00    	je     177ad <__sfvwrite+0x17d>
   17677:	45 31 ff             	xor    %r15d,%r15d
   1767a:	31 d2                	xor    %edx,%edx
   1767c:	eb 7d                	jmp    176fb <__sfvwrite+0xcb>
   1767e:	66 90                	xchg   %ax,%ax
   17680:	85 d2                	test   %edx,%edx
   17682:	0f 84 8a 00 00 00    	je     17712 <__sfvwrite+0xe2>
   17688:	4d 63 f7             	movslq %r15d,%r14
   1768b:	8b 45 20             	mov    0x20(%rbp),%eax
   1768e:	8b 55 0c             	mov    0xc(%rbp),%edx
   17691:	49 39 de             	cmp    %rbx,%r14
   17694:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   17698:	4c 0f 47 f3          	cmova  %rbx,%r14
   1769c:	01 c2                	add    %eax,%edx
   1769e:	44 39 f2             	cmp    %r14d,%edx
   176a1:	7d 0a                	jge    176ad <__sfvwrite+0x7d>
   176a3:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
   176a7:	0f 87 fb 01 00 00    	ja     178a8 <__sfvwrite+0x278>
   176ad:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   176b2:	44 39 f0             	cmp    %r14d,%eax
   176b5:	0f 8e ed 01 00 00    	jle    178a8 <__sfvwrite+0x278>
   176bb:	49 63 d6             	movslq %r14d,%rdx
   176be:	4c 89 ee             	mov    %r13,%rsi
   176c1:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   176c6:	e8 65 7f ff ff       	call   f630 <memcpy>
   176cb:	44 29 75 0c          	sub    %r14d,0xc(%rbp)
   176cf:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   176d4:	48 01 55 00          	add    %rdx,0x0(%rbp)
   176d8:	45 29 f7             	sub    %r14d,%r15d
   176db:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   176e0:	0f 84 c2 01 00 00    	je     178a8 <__sfvwrite+0x278>
   176e6:	49 01 d5             	add    %rdx,%r13
   176e9:	48 29 d3             	sub    %rdx,%rbx
   176ec:	45 29 70 0c          	sub    %r14d,0xc(%r8)
   176f0:	ba 01 00 00 00       	mov    $0x1,%edx
   176f5:	0f 84 22 01 00 00    	je     1781d <__sfvwrite+0x1ed>
   176fb:	48 85 db             	test   %rbx,%rbx
   176fe:	75 80                	jne    17680 <__sfvwrite+0x50>
   17700:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   17705:	4d 8b 2c 24          	mov    (%r12),%r13
   17709:	49 83 c4 10          	add    $0x10,%r12
   1770d:	48 85 db             	test   %rbx,%rbx
   17710:	74 ee                	je     17700 <__sfvwrite+0xd0>
   17712:	48 89 da             	mov    %rbx,%rdx
   17715:	be 0a 00 00 00       	mov    $0xa,%esi
   1771a:	4c 89 ef             	mov    %r13,%rdi
   1771d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17722:	e8 59 d1 ff ff       	call   14880 <memchr>
   17727:	8d 53 01             	lea    0x1(%rbx),%edx
   1772a:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1772f:	4c 8d 78 01          	lea    0x1(%rax),%r15
   17733:	4d 29 ef             	sub    %r13,%r15
   17736:	48 85 c0             	test   %rax,%rax
   17739:	44 0f 44 fa          	cmove  %edx,%r15d
   1773d:	e9 46 ff ff ff       	jmp    17688 <__sfvwrite+0x58>
   17742:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17748:	89 c2                	mov    %eax,%edx
   1774a:	66 81 e2 00 42       	and    $0x4200,%dx
   1774f:	66 81 fa 00 42       	cmp    $0x4200,%dx
   17754:	0f 84 d6 00 00 00    	je     17830 <__sfvwrite+0x200>
   1775a:	f6 c4 02             	test   $0x2,%ah
   1775d:	74 71                	je     177d0 <__sfvwrite+0x1a0>
   1775f:	48 63 d1             	movslq %ecx,%rdx
   17762:	41 89 df             	mov    %ebx,%r15d
   17765:	4c 63 f3             	movslq %ebx,%r14
   17768:	48 39 d3             	cmp    %rdx,%rbx
   1776b:	73 05                	jae    17772 <__sfvwrite+0x142>
   1776d:	4c 89 f2             	mov    %r14,%rdx
   17770:	89 d9                	mov    %ebx,%ecx
   17772:	4c 89 ee             	mov    %r13,%rsi
   17775:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1777a:	4d 01 f5             	add    %r14,%r13
   1777d:	4c 29 f3             	sub    %r14,%rbx
   17780:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   17784:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   17789:	e8 a2 7e ff ff       	call   f630 <memcpy>
   1778e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   17793:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   17797:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1779c:	29 4d 0c             	sub    %ecx,0xc(%rbp)
   1779f:	48 01 55 00          	add    %rdx,0x0(%rbp)
   177a3:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   177a7:	74 74                	je     1781d <__sfvwrite+0x1ed>
   177a9:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   177ad:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   177b0:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   177b4:	48 85 db             	test   %rbx,%rbx
   177b7:	75 8f                	jne    17748 <__sfvwrite+0x118>
   177b9:	4d 8b 2c 24          	mov    (%r12),%r13
   177bd:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   177c2:	49 83 c4 10          	add    $0x10,%r12
   177c6:	eb ec                	jmp    177b4 <__sfvwrite+0x184>
   177c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   177cf:	00 
   177d0:	48 39 7d 18          	cmp    %rdi,0x18(%rbp)
   177d4:	73 0c                	jae    177e2 <__sfvwrite+0x1b2>
   177d6:	48 63 c9             	movslq %ecx,%rcx
   177d9:	48 39 cb             	cmp    %rcx,%rbx
   177dc:	0f 87 ca 00 00 00    	ja     178ac <__sfvwrite+0x27c>
   177e2:	48 63 55 20          	movslq 0x20(%rbp),%rdx
   177e6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   177eb:	48 39 d3             	cmp    %rdx,%rbx
   177ee:	0f 83 b8 00 00 00    	jae    178ac <__sfvwrite+0x27c>
   177f4:	4c 63 f3             	movslq %ebx,%r14
   177f7:	4c 89 ee             	mov    %r13,%rsi
   177fa:	41 89 df             	mov    %ebx,%r15d
   177fd:	4c 89 f2             	mov    %r14,%rdx
   17800:	4d 01 f5             	add    %r14,%r13
   17803:	e8 28 7e ff ff       	call   f630 <memcpy>
   17808:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1780d:	29 5d 0c             	sub    %ebx,0xc(%rbp)
   17810:	4c 29 f3             	sub    %r14,%rbx
   17813:	4c 01 75 00          	add    %r14,0x0(%rbp)
   17817:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   1781b:	75 8c                	jne    177a9 <__sfvwrite+0x179>
   1781d:	48 83 c4 28          	add    $0x28,%rsp
   17821:	31 c0                	xor    %eax,%eax
   17823:	5b                   	pop    %rbx
   17824:	5d                   	pop    %rbp
   17825:	41 5c                	pop    %r12
   17827:	41 5d                	pop    %r13
   17829:	41 5e                	pop    %r14
   1782b:	41 5f                	pop    %r15
   1782d:	c3                   	ret    
   1782e:	66 90                	xchg   %ax,%ax
   17830:	48 63 d1             	movslq %ecx,%rdx
   17833:	48 39 d3             	cmp    %rdx,%rbx
   17836:	0f 86 1e ff ff ff    	jbe    1775a <__sfvwrite+0x12a>
   1783c:	4c 8b 4d 18          	mov    0x18(%rbp),%r9
   17840:	44 8b 75 20          	mov    0x20(%rbp),%r14d
   17844:	4c 29 cf             	sub    %r9,%rdi
   17847:	49 89 ff             	mov    %rdi,%r15
   1784a:	48 8d 0c 3b          	lea    (%rbx,%rdi,1),%rcx
   1784e:	66 90                	xchg   %ax,%ax
   17850:	43 8d 04 36          	lea    (%r14,%r14,1),%eax
   17854:	44 8d 70 01          	lea    0x1(%rax),%r14d
   17858:	49 63 d6             	movslq %r14d,%rdx
   1785b:	48 39 ca             	cmp    %rcx,%rdx
   1785e:	72 f0                	jb     17850 <__sfvwrite+0x220>
   17860:	83 c0 02             	add    $0x2,%eax
   17863:	4c 89 cf             	mov    %r9,%rdi
   17866:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1786b:	48 63 f0             	movslq %eax,%rsi
   1786e:	e8 fd 71 ff ff       	call   ea70 <dlrealloc>
   17873:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17878:	48 85 c0             	test   %rax,%rax
   1787b:	74 2b                	je     178a8 <__sfvwrite+0x278>
   1787d:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   17880:	4a 8d 3c 38          	lea    (%rax,%r15,1),%rdi
   17884:	48 89 45 18          	mov    %rax,0x18(%rbp)
   17888:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   1788c:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   17890:	44 01 f1             	add    %r14d,%ecx
   17893:	2b 4d 20             	sub    0x20(%rbp),%ecx
   17896:	44 89 75 20          	mov    %r14d,0x20(%rbp)
   1789a:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   1789d:	e9 b8 fe ff ff       	jmp    1775a <__sfvwrite+0x12a>
   178a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   178a8:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   178ac:	83 c8 40             	or     $0x40,%eax
   178af:	66 89 45 10          	mov    %ax,0x10(%rbp)
   178b3:	48 83 c4 28          	add    $0x28,%rsp
   178b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   178bc:	5b                   	pop    %rbx
   178bd:	5d                   	pop    %rbp
   178be:	41 5c                	pop    %r12
   178c0:	41 5d                	pop    %r13
   178c2:	41 5e                	pop    %r14
   178c4:	41 5f                	pop    %r15
   178c6:	c3                   	ret    
   178c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   178ce:	00 00 
   178d0:	31 c0                	xor    %eax,%eax
   178d2:	c3                   	ret    
   178d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   178da:	00 00 00 
   178dd:	0f 1f 00             	nopl   (%rax)

00000000000178e0 <_libc__memchr>:
   178e0:	40 88 f0             	mov    %sil,%al
   178e3:	48 89 d1             	mov    %rdx,%rcx
   178e6:	48 85 c9             	test   %rcx,%rcx
   178e9:	74 0b                	je     178f6 <L1>
   178eb:	fc                   	cld    
   178ec:	f2 ae                	repnz scas %es:(%rdi),%al
   178ee:	75 06                	jne    178f6 <L1>
   178f0:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   178f4:	eb 03                	jmp    178f9 <L2>

00000000000178f6 <L1>:
   178f6:	48 31 c0             	xor    %rax,%rax

00000000000178f9 <L2>:
   178f9:	c3                   	ret    
   178fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017900 <_bcopy>:
   17900:	48 87 fe             	xchg   %rdi,%rsi
   17903:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1790a:	00 00 00 00 
   1790e:	66 90                	xchg   %ax,%ax

0000000000017910 <__memmove>:
   17910:	49 89 fb             	mov    %rdi,%r11
   17913:	48 89 d1             	mov    %rdx,%rcx
   17916:	48 89 f8             	mov    %rdi,%rax
   17919:	48 29 f0             	sub    %rsi,%rax
   1791c:	48 39 c8             	cmp    %rcx,%rax
   1791f:	72 16                	jb     17937 <__memmove+0x27>
   17921:	fc                   	cld    
   17922:	48 c1 e9 03          	shr    $0x3,%rcx
   17926:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   17929:	48 89 d1             	mov    %rdx,%rcx
   1792c:	48 83 e1 07          	and    $0x7,%rcx
   17930:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   17932:	4c 89 d8             	mov    %r11,%rax
   17935:	eb 29                	jmp    17960 <__memmove+0x50>
   17937:	48 01 cf             	add    %rcx,%rdi
   1793a:	48 01 ce             	add    %rcx,%rsi
   1793d:	fd                   	std    
   1793e:	48 83 e1 07          	and    $0x7,%rcx
   17942:	48 ff cf             	dec    %rdi
   17945:	48 ff ce             	dec    %rsi
   17948:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   1794a:	48 89 d1             	mov    %rdx,%rcx
   1794d:	48 c1 e9 03          	shr    $0x3,%rcx
   17951:	48 83 ee 07          	sub    $0x7,%rsi
   17955:	48 83 ef 07          	sub    $0x7,%rdi
   17959:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1795c:	4c 89 d8             	mov    %r11,%rax
   1795f:	fc                   	cld    
   17960:	c3                   	ret    
   17961:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   17968:	00 00 00 
   1796b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017970 <__gdtoa>:
   17970:	f3 0f 1e fa          	endbr64 
   17974:	41 57                	push   %r15
   17976:	41 56                	push   %r14
   17978:	41 55                	push   %r13
   1797a:	41 54                	push   %r12
   1797c:	55                   	push   %rbp
   1797d:	53                   	push   %rbx
   1797e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   17985:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1798c:	00 
   1798d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   17992:	8b 11                	mov    (%rcx),%edx
   17994:	48 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%rbp
   1799b:	00 
   1799c:	89 74 24 30          	mov    %esi,0x30(%rsp)
   179a0:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   179a5:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   179aa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   179af:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   179b6:	00 00 
   179b8:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   179bf:	00 
   179c0:	31 c0                	xor    %eax,%eax
   179c2:	89 d0                	mov    %edx,%eax
   179c4:	83 e0 cf             	and    $0xffffffcf,%eax
   179c7:	89 01                	mov    %eax,(%rcx)
   179c9:	89 d0                	mov    %edx,%eax
   179cb:	83 e0 0f             	and    $0xf,%eax
   179ce:	83 f8 03             	cmp    $0x3,%eax
   179d1:	0f 84 69 03 00 00    	je     17d40 <__gdtoa+0x3d0>
   179d7:	89 d6                	mov    %edx,%esi
   179d9:	83 e6 0c             	and    $0xc,%esi
   179dc:	89 74 24 20          	mov    %esi,0x20(%rsp)
   179e0:	0f 85 6a 02 00 00    	jne    17c50 <__gdtoa+0x2e0>
   179e6:	85 c0                	test   %eax,%eax
   179e8:	0f 84 22 03 00 00    	je     17d10 <__gdtoa+0x3a0>
   179ee:	83 e8 01             	sub    $0x1,%eax
   179f1:	45 31 e4             	xor    %r12d,%r12d
   179f4:	83 f8 01             	cmp    $0x1,%eax
   179f7:	0f 87 83 02 00 00    	ja     17c80 <__gdtoa+0x310>
   179fd:	48 89 cb             	mov    %rcx,%rbx
   17a00:	8b 0f                	mov    (%rdi),%ecx
   17a02:	49 89 ff             	mov    %rdi,%r15
   17a05:	b8 20 00 00 00       	mov    $0x20,%eax
   17a0a:	31 ff                	xor    %edi,%edi
   17a0c:	83 f9 20             	cmp    $0x20,%ecx
   17a0f:	0f 8e 5b 03 00 00    	jle    17d70 <__gdtoa+0x400>
   17a15:	01 c0                	add    %eax,%eax
   17a17:	83 c7 01             	add    $0x1,%edi
   17a1a:	39 c1                	cmp    %eax,%ecx
   17a1c:	7f f7                	jg     17a15 <__gdtoa+0xa5>
   17a1e:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   17a22:	89 54 24 38          	mov    %edx,0x38(%rsp)
   17a26:	e8 b5 ec ff ff       	call   166e0 <__Balloc_D2A>
   17a2b:	8b 54 24 38          	mov    0x38(%rsp),%edx
   17a2f:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   17a33:	48 85 c0             	test   %rax,%rax
   17a36:	49 89 c5             	mov    %rax,%r13
   17a39:	0f 84 b9 02 00 00    	je     17cf8 <__gdtoa+0x388>
   17a3f:	44 8d 59 ff          	lea    -0x1(%rcx),%r11d
   17a43:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17a48:	4d 8d 45 18          	lea    0x18(%r13),%r8
   17a4c:	41 c1 fb 05          	sar    $0x5,%r11d
   17a50:	4c 89 c6             	mov    %r8,%rsi
   17a53:	4d 63 db             	movslq %r11d,%r11
   17a56:	49 c1 e3 02          	shl    $0x2,%r11
   17a5a:	4a 8d 3c 18          	lea    (%rax,%r11,1),%rdi
   17a5e:	66 90                	xchg   %ax,%ax
   17a60:	44 8b 08             	mov    (%rax),%r9d
   17a63:	48 83 c0 04          	add    $0x4,%rax
   17a67:	48 83 c6 04          	add    $0x4,%rsi
   17a6b:	44 89 4e fc          	mov    %r9d,-0x4(%rsi)
   17a6f:	48 39 c7             	cmp    %rax,%rdi
   17a72:	73 ec                	jae    17a60 <__gdtoa+0xf0>
   17a74:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   17a79:	48 83 c7 01          	add    $0x1,%rdi
   17a7d:	4d 8d 73 04          	lea    0x4(%r11),%r14
   17a81:	48 83 c0 01          	add    $0x1,%rax
   17a85:	48 39 c7             	cmp    %rax,%rdi
   17a88:	b8 04 00 00 00       	mov    $0x4,%eax
   17a8d:	4c 0f 42 f0          	cmovb  %rax,%r14
   17a91:	49 c1 fe 02          	sar    $0x2,%r14
   17a95:	eb 12                	jmp    17aa9 <__gdtoa+0x139>
   17a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17a9e:	00 00 
   17aa0:	45 85 f6             	test   %r14d,%r14d
   17aa3:	0f 84 d7 02 00 00    	je     17d80 <__gdtoa+0x410>
   17aa9:	45 89 f4             	mov    %r14d,%r12d
   17aac:	41 83 ee 01          	sub    $0x1,%r14d
   17ab0:	49 63 c6             	movslq %r14d,%rax
   17ab3:	41 8b 34 80          	mov    (%r8,%rax,4),%esi
   17ab7:	85 f6                	test   %esi,%esi
   17ab9:	74 e5                	je     17aa0 <__gdtoa+0x130>
   17abb:	45 89 65 14          	mov    %r12d,0x14(%r13)
   17abf:	41 8b 7c 85 18       	mov    0x18(%r13,%rax,4),%edi
   17ac4:	45 89 e6             	mov    %r12d,%r14d
   17ac7:	89 54 24 40          	mov    %edx,0x40(%rsp)
   17acb:	41 c1 e6 05          	shl    $0x5,%r14d
   17acf:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   17ad3:	e8 b8 ee ff ff       	call   16990 <__hi0bits_D2A>
   17ad8:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   17adc:	8b 54 24 40          	mov    0x40(%rsp),%edx
   17ae0:	41 29 c6             	sub    %eax,%r14d
   17ae3:	4c 89 ef             	mov    %r13,%rdi
   17ae6:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   17aea:	89 54 24 38          	mov    %edx,0x38(%rsp)
   17aee:	e8 8d 18 00 00       	call   19380 <__trailz_D2A>
   17af3:	8b 54 24 38          	mov    0x38(%rsp),%edx
   17af7:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   17afb:	85 c0                	test   %eax,%eax
   17afd:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   17b04:	0f 85 86 02 00 00    	jne    17d90 <__gdtoa+0x420>
   17b0a:	8b 44 24 30          	mov    0x30(%rsp),%eax
   17b0e:	89 44 24 40          	mov    %eax,0x40(%rsp)
   17b12:	41 8b 45 14          	mov    0x14(%r13),%eax
   17b16:	85 c0                	test   %eax,%eax
   17b18:	0f 84 e2 01 00 00    	je     17d00 <__gdtoa+0x390>
   17b1e:	48 8d b4 24 a4 00 00 	lea    0xa4(%rsp),%rsi
   17b25:	00 
   17b26:	4c 89 ef             	mov    %r13,%rdi
   17b29:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   17b2d:	89 54 24 38          	mov    %edx,0x38(%rsp)
   17b31:	e8 2a f6 ff ff       	call   17160 <__b2d_D2A>
   17b36:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   17b3a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   17b3e:	8b 54 24 38          	mov    0x38(%rsp),%edx
   17b42:	66 48 0f 7e c6       	movq   %xmm0,%rsi
   17b47:	66 48 0f 7e c0       	movq   %xmm0,%rax
   17b4c:	48 c1 ee 20          	shr    $0x20,%rsi
   17b50:	46 8d 0c 31          	lea    (%rcx,%r14,1),%r9d
   17b54:	89 c0                	mov    %eax,%eax
   17b56:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   17b5a:	81 e6 ff ff 0f 00    	and    $0xfffff,%esi
   17b60:	41 8d 79 ff          	lea    -0x1(%r9),%edi
   17b64:	81 ce 00 00 f0 3f    	or     $0x3ff00000,%esi
   17b6a:	f2 0f 2a cf          	cvtsi2sd %edi,%xmm1
   17b6e:	41 89 fc             	mov    %edi,%r12d
   17b71:	f2 0f 59 0d 2f b1 00 	mulsd  0xb12f(%rip),%xmm1        # 22ca8 <xdigs_lower.3329+0x38>
   17b78:	00 
   17b79:	49 89 f0             	mov    %rsi,%r8
   17b7c:	41 c1 fc 1f          	sar    $0x1f,%r12d
   17b80:	49 c1 e0 20          	shl    $0x20,%r8
   17b84:	45 89 e3             	mov    %r12d,%r11d
   17b87:	4c 09 c0             	or     %r8,%rax
   17b8a:	41 31 fb             	xor    %edi,%r11d
   17b8d:	66 48 0f 6e c0       	movq   %rax,%xmm0
   17b92:	f2 0f 5c 05 f6 b0 00 	subsd  0xb0f6(%rip),%xmm0        # 22c90 <xdigs_lower.3329+0x20>
   17b99:	00 
   17b9a:	45 29 e3             	sub    %r12d,%r11d
   17b9d:	f2 0f 59 05 f3 b0 00 	mulsd  0xb0f3(%rip),%xmm0        # 22c98 <xdigs_lower.3329+0x28>
   17ba4:	00 
   17ba5:	41 81 eb 35 04 00 00 	sub    $0x435,%r11d
   17bac:	f2 0f 58 05 ec b0 00 	addsd  0xb0ec(%rip),%xmm0        # 22ca0 <xdigs_lower.3329+0x30>
   17bb3:	00 
   17bb4:	45 85 db             	test   %r11d,%r11d
   17bb7:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   17bbb:	7e 15                	jle    17bd2 <__gdtoa+0x262>
   17bbd:	66 0f ef c9          	pxor   %xmm1,%xmm1
   17bc1:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   17bc6:	f2 0f 59 0d 9a b3 00 	mulsd  0xb39a(%rip),%xmm1        # 22f68 <_C_ctype_+0x108>
   17bcd:	00 
   17bce:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   17bd2:	66 0f ef f6          	pxor   %xmm6,%xmm6
   17bd6:	f2 44 0f 2c d8       	cvttsd2si %xmm0,%r11d
   17bdb:	66 0f 2f f0          	comisd %xmm0,%xmm6
   17bdf:	0f 87 c3 08 00 00    	ja     184a8 <__gdtoa+0xb38>
   17be5:	41 89 fc             	mov    %edi,%r12d
   17be8:	89 c0                	mov    %eax,%eax
   17bea:	41 c1 e4 14          	shl    $0x14,%r12d
   17bee:	44 01 e6             	add    %r12d,%esi
   17bf1:	48 c1 e6 20          	shl    $0x20,%rsi
   17bf5:	48 09 f0             	or     %rsi,%rax
   17bf8:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   17bff:	00 
   17c00:	49 89 c2             	mov    %rax,%r10
   17c03:	8b 44 24 40          	mov    0x40(%rsp),%eax
   17c07:	f7 d8                	neg    %eax
   17c09:	89 44 24 48          	mov    %eax,0x48(%rsp)
   17c0d:	41 83 fb 16          	cmp    $0x16,%r11d
   17c11:	0f 87 b1 01 00 00    	ja     17dc8 <__gdtoa+0x458>
   17c17:	49 63 c3             	movslq %r11d,%rax
   17c1a:	48 8d 35 3f b1 00 00 	lea    0xb13f(%rip),%rsi        # 22d60 <__tens_D2A>
   17c21:	66 49 0f 6e fa       	movq   %r10,%xmm7
   17c26:	f2 0f 10 04 c6       	movsd  (%rsi,%rax,8),%xmm0
   17c2b:	66 0f 2f c7          	comisd %xmm7,%xmm0
   17c2f:	0f 86 e3 05 00 00    	jbe    18218 <__gdtoa+0x8a8>
   17c35:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   17c3c:	00 00 00 00 
   17c40:	41 83 eb 01          	sub    $0x1,%r11d
   17c44:	e9 8a 01 00 00       	jmp    17dd3 <__gdtoa+0x463>
   17c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17c50:	83 f8 04             	cmp    $0x4,%eax
   17c53:	0f 85 9f 00 00 00    	jne    17cf8 <__gdtoa+0x388>
   17c59:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17c5e:	ba 03 00 00 00       	mov    $0x3,%edx
   17c63:	48 89 ee             	mov    %rbp,%rsi
   17c66:	48 8d 3d 1c b0 00 00 	lea    0xb01c(%rip),%rdi        # 22c89 <xdigs_lower.3329+0x19>
   17c6d:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   17c73:	e8 68 cc ff ff       	call   148e0 <__nrv_alloc_D2A>
   17c78:	49 89 c4             	mov    %rax,%r12
   17c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17c80:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   17c87:	00 
   17c88:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   17c8f:	00 00 
   17c91:	0f 85 3e 15 00 00    	jne    191d5 <__gdtoa+0x1865>
   17c97:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   17c9e:	4c 89 e0             	mov    %r12,%rax
   17ca1:	5b                   	pop    %rbx
   17ca2:	5d                   	pop    %rbp
   17ca3:	41 5c                	pop    %r12
   17ca5:	41 5d                	pop    %r13
   17ca7:	41 5e                	pop    %r14
   17ca9:	41 5f                	pop    %r15
   17cab:	c3                   	ret    
   17cac:	8b 78 08             	mov    0x8(%rax),%edi
   17caf:	49 89 c7             	mov    %rax,%r15
   17cb2:	e8 29 ea ff ff       	call   166e0 <__Balloc_D2A>
   17cb7:	49 89 c6             	mov    %rax,%r14
   17cba:	48 85 c0             	test   %rax,%rax
   17cbd:	74 39                	je     17cf8 <__gdtoa+0x388>
   17cbf:	49 63 47 14          	movslq 0x14(%r15),%rax
   17cc3:	49 8d 77 10          	lea    0x10(%r15),%rsi
   17cc7:	49 8d 7e 10          	lea    0x10(%r14),%rdi
   17ccb:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   17cd2:	00 
   17cd3:	e8 58 79 ff ff       	call   f630 <memcpy>
   17cd8:	be 01 00 00 00       	mov    $0x1,%esi
   17cdd:	4c 89 f7             	mov    %r14,%rdi
   17ce0:	e8 db f0 ff ff       	call   16dc0 <__lshift_D2A>
   17ce5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   17cea:	48 85 c0             	test   %rax,%rax
   17ced:	0f 85 2d 09 00 00    	jne    18620 <__gdtoa+0xcb0>
   17cf3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17cf8:	45 31 e4             	xor    %r12d,%r12d
   17cfb:	eb 83                	jmp    17c80 <__gdtoa+0x310>
   17cfd:	0f 1f 00             	nopl   (%rax)
   17d00:	4c 89 ef             	mov    %r13,%rdi
   17d03:	e8 c8 ea ff ff       	call   167d0 <__Bfree_D2A>
   17d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17d0f:	00 
   17d10:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17d15:	ba 01 00 00 00       	mov    $0x1,%edx
   17d1a:	48 89 ee             	mov    %rbp,%rsi
   17d1d:	48 8d 3d 1f a5 00 00 	lea    0xa51f(%rip),%rdi        # 22243 <g_dyn_entry_table+0x243>
   17d24:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   17d2a:	e8 b1 cb ff ff       	call   148e0 <__nrv_alloc_D2A>
   17d2f:	49 89 c4             	mov    %rax,%r12
   17d32:	e9 49 ff ff ff       	jmp    17c80 <__gdtoa+0x310>
   17d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17d3e:	00 00 
   17d40:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17d45:	ba 08 00 00 00       	mov    $0x8,%edx
   17d4a:	48 89 ee             	mov    %rbp,%rsi
   17d4d:	48 8d 3d 2c af 00 00 	lea    0xaf2c(%rip),%rdi        # 22c80 <xdigs_lower.3329+0x10>
   17d54:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   17d5a:	e8 81 cb ff ff       	call   148e0 <__nrv_alloc_D2A>
   17d5f:	49 89 c4             	mov    %rax,%r12
   17d62:	e9 19 ff ff ff       	jmp    17c80 <__gdtoa+0x310>
   17d67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17d6e:	00 00 
   17d70:	89 f7                	mov    %esi,%edi
   17d72:	e9 a7 fc ff ff       	jmp    17a1e <__gdtoa+0xae>
   17d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17d7e:	00 00 
   17d80:	41 c7 45 14 00 00 00 	movl   $0x0,0x14(%r13)
   17d87:	00 
   17d88:	e9 56 fd ff ff       	jmp    17ae3 <__gdtoa+0x173>
   17d8d:	0f 1f 00             	nopl   (%rax)
   17d90:	89 c6                	mov    %eax,%esi
   17d92:	4c 89 ef             	mov    %r13,%rdi
   17d95:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   17d99:	89 54 24 38          	mov    %edx,0x38(%rsp)
   17d9d:	e8 ee 14 00 00       	call   19290 <__rshift_D2A>
   17da2:	8b 84 24 a4 00 00 00 	mov    0xa4(%rsp),%eax
   17da9:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   17dad:	8b 54 24 38          	mov    0x38(%rsp),%edx
   17db1:	01 c1                	add    %eax,%ecx
   17db3:	41 29 c6             	sub    %eax,%r14d
   17db6:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   17dba:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   17dbe:	e9 4f fd ff ff       	jmp    17b12 <__gdtoa+0x1a2>
   17dc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17dc8:	c7 84 24 94 00 00 00 	movl   $0x1,0x94(%rsp)
   17dcf:	01 00 00 00 
   17dd3:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
   17dd8:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   17ddf:	00 
   17de0:	45 85 e4             	test   %r12d,%r12d
   17de3:	0f 88 4e 04 00 00    	js     18237 <__gdtoa+0x8c7>
   17de9:	45 85 db             	test   %r11d,%r11d
   17dec:	0f 88 06 04 00 00    	js     181f8 <__gdtoa+0x888>
   17df2:	44 01 5c 24 48       	add    %r11d,0x48(%rsp)
   17df7:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   17dfc:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
   17e03:	00 
   17e04:	8b 44 24 10          	mov    0x10(%rsp),%eax
   17e08:	83 f8 09             	cmp    $0x9,%eax
   17e0b:	0f 87 bf 01 00 00    	ja     17fd0 <__gdtoa+0x660>
   17e11:	83 f8 05             	cmp    $0x5,%eax
   17e14:	0f 8f 36 04 00 00    	jg     18250 <__gdtoa+0x8e0>
   17e1a:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   17e21:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   17e26:	0f 96 c0             	setbe  %al
   17e29:	0f b6 c0             	movzbl %al,%eax
   17e2c:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   17e33:	8b 44 24 10          	mov    0x10(%rsp),%eax
   17e37:	83 f8 04             	cmp    $0x4,%eax
   17e3a:	0f 84 a0 07 00 00    	je     185e0 <__gdtoa+0xc70>
   17e40:	83 f8 05             	cmp    $0x5,%eax
   17e43:	0f 84 87 06 00 00    	je     184d0 <__gdtoa+0xb60>
   17e49:	83 f8 02             	cmp    $0x2,%eax
   17e4c:	0f 85 16 06 00 00    	jne    18468 <__gdtoa+0xaf8>
   17e52:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   17e59:	00 
   17e5a:	8b 44 24 28          	mov    0x28(%rsp),%eax
   17e5e:	bf 01 00 00 00       	mov    $0x1,%edi
   17e63:	85 c0                	test   %eax,%eax
   17e65:	0f 4f f8             	cmovg  %eax,%edi
   17e68:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   17e6f:	89 bc 24 9c 00 00 00 	mov    %edi,0x9c(%rsp)
   17e76:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   17e7a:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   17e7e:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
   17e85:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   17e8a:	44 89 4c 24 70       	mov    %r9d,0x70(%rsp)
   17e8f:	89 94 24 98 00 00 00 	mov    %edx,0x98(%rsp)
   17e96:	e8 05 ca ff ff       	call   148a0 <__rv_alloc_D2A>
   17e9b:	49 89 c4             	mov    %rax,%r12
   17e9e:	48 85 c0             	test   %rax,%rax
   17ea1:	0f 84 51 fe ff ff    	je     17cf8 <__gdtoa+0x388>
   17ea7:	41 8b 77 0c          	mov    0xc(%r15),%esi
   17eab:	44 8b 4c 24 70       	mov    0x70(%rsp),%r9d
   17eb0:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   17eb5:	8b 8c 24 90 00 00 00 	mov    0x90(%rsp),%ecx
   17ebc:	83 ee 01             	sub    $0x1,%esi
   17ebf:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
   17ec3:	0f 84 82 01 00 00    	je     1804b <__gdtoa+0x6db>
   17ec9:	b8 02 00 00 00       	mov    $0x2,%eax
   17ece:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
   17ed5:	0f 49 c6             	cmovns %esi,%eax
   17ed8:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   17edc:	89 c6                	mov    %eax,%esi
   17ede:	80 e6 01             	and    $0x1,%dh
   17ee1:	0f 85 59 01 00 00    	jne    18040 <__gdtoa+0x6d0>
   17ee7:	8b 54 24 40          	mov    0x40(%rsp),%edx
   17eeb:	85 d2                	test   %edx,%edx
   17eed:	0f 88 7d 03 00 00    	js     18270 <__gdtoa+0x900>
   17ef3:	8b 44 24 78          	mov    0x78(%rsp),%eax
   17ef7:	83 f8 0e             	cmp    $0xe,%eax
   17efa:	0f 8f 70 03 00 00    	jg     18270 <__gdtoa+0x900>
   17f00:	48 98                	cltq   
   17f02:	48 8d 15 57 ae 00 00 	lea    0xae57(%rip),%rdx        # 22d60 <__tens_D2A>
   17f09:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   17f0e:	48 89 c1             	mov    %rax,%rcx
   17f11:	8b 44 24 28          	mov    0x28(%rsp),%eax
   17f15:	85 c0                	test   %eax,%eax
   17f17:	0f 89 eb 05 00 00    	jns    18508 <__gdtoa+0xb98>
   17f1d:	8b 44 24 38          	mov    0x38(%rsp),%eax
   17f21:	85 c0                	test   %eax,%eax
   17f23:	0f 8f df 05 00 00    	jg     18508 <__gdtoa+0xb98>
   17f29:	0f 85 b1 05 00 00    	jne    184e0 <__gdtoa+0xb70>
   17f2f:	f2 0f 59 15 91 ad 00 	mulsd  0xad91(%rip),%xmm2        # 22cc8 <xdigs_lower.3329+0x58>
   17f36:	00 
   17f37:	66 0f 2f 94 24 88 00 	comisd 0x88(%rsp),%xmm2
   17f3e:	00 00 
   17f40:	0f 83 9a 05 00 00    	jae    184e0 <__gdtoa+0xb70>
   17f46:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   17f4d:	00 00 
   17f4f:	83 c1 02             	add    $0x2,%ecx
   17f52:	45 31 f6             	xor    %r14d,%r14d
   17f55:	41 89 cf             	mov    %ecx,%r15d
   17f58:	41 c6 04 24 31       	movb   $0x31,(%r12)
   17f5d:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   17f62:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   17f69:	00 
   17f6a:	4c 89 f7             	mov    %r14,%rdi
   17f6d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17f72:	e8 59 e8 ff ff       	call   167d0 <__Bfree_D2A>
   17f77:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   17f7d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17f82:	74 14                	je     17f98 <__gdtoa+0x628>
   17f84:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   17f89:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17f8e:	e8 3d e8 ff ff       	call   167d0 <__Bfree_D2A>
   17f93:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17f98:	4c 89 ef             	mov    %r13,%rdi
   17f9b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17fa0:	e8 2b e8 ff ff       	call   167d0 <__Bfree_D2A>
   17fa5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   17faa:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   17faf:	c6 00 00             	movb   $0x0,(%rax)
   17fb2:	44 89 39             	mov    %r15d,(%rcx)
   17fb5:	48 85 ed             	test   %rbp,%rbp
   17fb8:	74 04                	je     17fbe <__gdtoa+0x64e>
   17fba:	48 89 45 00          	mov    %rax,0x0(%rbp)
   17fbe:	8b 44 24 20          	mov    0x20(%rsp),%eax
   17fc2:	09 03                	or     %eax,(%rbx)
   17fc4:	e9 b7 fc ff ff       	jmp    17c80 <__gdtoa+0x310>
   17fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17fd0:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   17fd7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   17fde:	00 
   17fdf:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   17fe4:	0f 96 c0             	setbe  %al
   17fe7:	0f b6 c0             	movzbl %al,%eax
   17fea:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   17ff1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   17ff5:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   17ffc:	00 
   17ffd:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
   18001:	f2 0f 59 05 67 af 00 	mulsd  0xaf67(%rip),%xmm0        # 22f70 <_C_ctype_+0x110>
   18008:	00 
   18009:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   18010:	00 
   18011:	c7 84 24 9c 00 00 00 	movl   $0xffffffff,0x9c(%rsp)
   18018:	ff ff ff ff 
   1801c:	c7 44 24 38 ff ff ff 	movl   $0xffffffff,0x38(%rsp)
   18023:	ff 
   18024:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   18028:	83 c7 03             	add    $0x3,%edi
   1802b:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   18032:	e9 47 fe ff ff       	jmp    17e7e <__gdtoa+0x50e>
   18037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1803e:	00 00 
   18040:	b8 03 00 00 00       	mov    $0x3,%eax
   18045:	29 f0                	sub    %esi,%eax
   18047:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1804b:	44 0f b6 84 24 80 00 	movzbl 0x80(%rsp),%r8d
   18052:	00 00 
   18054:	8b 74 24 38          	mov    0x38(%rsp),%esi
   18058:	83 fe 0e             	cmp    $0xe,%esi
   1805b:	0f 96 c0             	setbe  %al
   1805e:	41 20 c0             	and    %al,%r8b
   18061:	0f 84 80 fe ff ff    	je     17ee7 <__gdtoa+0x577>
   18067:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1806b:	0b 44 24 78          	or     0x78(%rsp),%eax
   1806f:	0f 85 72 fe ff ff    	jne    17ee7 <__gdtoa+0x577>
   18075:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1807c:	00 
   1807d:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   18084:	00 00 00 00 
   18088:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   1808f:	00 00 
   18091:	45 85 d2             	test   %r10d,%r10d
   18094:	74 12                	je     180a8 <__gdtoa+0x738>
   18096:	f2 0f 10 25 12 ac 00 	movsd  0xac12(%rip),%xmm4        # 22cb0 <xdigs_lower.3329+0x40>
   1809d:	00 
   1809e:	66 0f 2f e0          	comisd %xmm0,%xmm4
   180a2:	0f 87 68 0c 00 00    	ja     18d10 <__gdtoa+0x13a0>
   180a8:	66 0f 28 c8          	movapd %xmm0,%xmm1
   180ac:	8b 7c 24 38          	mov    0x38(%rsp),%edi
   180b0:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   180b4:	f2 0f 58 0d 04 ac 00 	addsd  0xac04(%rip),%xmm1        # 22cc0 <xdigs_lower.3329+0x50>
   180bb:	00 
   180bc:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   180c1:	66 48 0f 7e c8       	movq   %xmm1,%rax
   180c6:	48 c1 ea 20          	shr    $0x20,%rdx
   180ca:	89 c0                	mov    %eax,%eax
   180cc:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   180d2:	48 c1 e2 20          	shl    $0x20,%rdx
   180d6:	48 09 d0             	or     %rdx,%rax
   180d9:	85 ff                	test   %edi,%edi
   180db:	0f 84 d1 08 00 00    	je     189b2 <__gdtoa+0x1042>
   180e1:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   180e8:	00 
   180e9:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   180ee:	66 48 0f 6e e0       	movq   %rax,%xmm4
   180f3:	8b 74 24 60          	mov    0x60(%rsp),%esi
   180f7:	41 8d 42 ff          	lea    -0x1(%r10),%eax
   180fb:	48 8d 15 5e ac 00 00 	lea    0xac5e(%rip),%rdx        # 22d60 <__tens_D2A>
   18102:	48 98                	cltq   
   18104:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   18109:	85 f6                	test   %esi,%esi
   1810b:	0f 84 05 0b 00 00    	je     18c16 <__gdtoa+0x12a6>
   18111:	f2 0f 10 0d b7 ab 00 	movsd  0xabb7(%rip),%xmm1        # 22cd0 <xdigs_lower.3329+0x60>
   18118:	00 
   18119:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   1811d:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   18122:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   18126:	66 0f ef d2          	pxor   %xmm2,%xmm2
   1812a:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   1812e:	83 c2 30             	add    $0x30,%edx
   18131:	41 88 14 24          	mov    %dl,(%r12)
   18135:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   18139:	f2 0f 5c cc          	subsd  %xmm4,%xmm1
   1813d:	66 0f 2f c8          	comisd %xmm0,%xmm1
   18141:	0f 87 15 0d 00 00    	ja     18e5c <__gdtoa+0x14ec>
   18147:	f2 0f 10 25 61 ab 00 	movsd  0xab61(%rip),%xmm4        # 22cb0 <xdigs_lower.3329+0x40>
   1814e:	00 
   1814f:	f2 0f 10 1d 61 ab 00 	movsd  0xab61(%rip),%xmm3        # 22cb8 <xdigs_lower.3329+0x48>
   18156:	00 
   18157:	eb 4d                	jmp    181a6 <__gdtoa+0x836>
   18159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18160:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   18167:	8d 56 01             	lea    0x1(%rsi),%edx
   1816a:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   18171:	44 39 d2             	cmp    %r10d,%edx
   18174:	0f 8d 61 08 00 00    	jge    189db <__gdtoa+0x106b>
   1817a:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1817e:	66 0f ef d2          	pxor   %xmm2,%xmm2
   18182:	48 83 c0 01          	add    $0x1,%rax
   18186:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   1818a:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   1818e:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   18192:	83 c2 30             	add    $0x30,%edx
   18195:	88 50 ff             	mov    %dl,-0x1(%rax)
   18198:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1819c:	66 0f 2f c8          	comisd %xmm0,%xmm1
   181a0:	0f 87 b6 0c 00 00    	ja     18e5c <__gdtoa+0x14ec>
   181a6:	66 0f 28 d4          	movapd %xmm4,%xmm2
   181aa:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
   181ae:	66 0f 2f ca          	comisd %xmm2,%xmm1
   181b2:	76 ac                	jbe    18160 <__gdtoa+0x7f0>
   181b4:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   181b9:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   181bd:	41 83 c7 01          	add    $0x1,%r15d
   181c1:	eb 15                	jmp    181d8 <__gdtoa+0x868>
   181c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   181c8:	49 39 cc             	cmp    %rcx,%r12
   181cb:	0f 84 ef 0b 00 00    	je     18dc0 <__gdtoa+0x1450>
   181d1:	0f b6 51 ff          	movzbl -0x1(%rcx),%edx
   181d5:	48 89 c8             	mov    %rcx,%rax
   181d8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   181dc:	80 fa 39             	cmp    $0x39,%dl
   181df:	74 e7                	je     181c8 <__gdtoa+0x858>
   181e1:	83 c2 01             	add    $0x1,%edx
   181e4:	88 11                	mov    %dl,(%rcx)
   181e6:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   181ed:	00 
   181ee:	e9 a5 fd ff ff       	jmp    17f98 <__gdtoa+0x628>
   181f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   181f8:	44 89 d8             	mov    %r11d,%eax
   181fb:	44 29 5c 24 50       	sub    %r11d,0x50(%rsp)
   18200:	f7 d8                	neg    %eax
   18202:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   18207:	45 31 db             	xor    %r11d,%r11d
   1820a:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1820e:	e9 f1 fb ff ff       	jmp    17e04 <__gdtoa+0x494>
   18213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18218:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1821c:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   18223:	00 
   18224:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   1822b:	00 00 00 00 
   1822f:	85 c0                	test   %eax,%eax
   18231:	0f 89 bb fb ff ff    	jns    17df2 <__gdtoa+0x482>
   18237:	44 29 f7             	sub    %r14d,%edi
   1823a:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   18241:	00 
   18242:	8d 47 01             	lea    0x1(%rdi),%eax
   18245:	89 44 24 50          	mov    %eax,0x50(%rsp)
   18249:	e9 9b fb ff ff       	jmp    17de9 <__gdtoa+0x479>
   1824e:	66 90                	xchg   %ax,%ax
   18250:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
   18257:	00 00 00 00 
   1825b:	83 e8 04             	sub    $0x4,%eax
   1825e:	89 44 24 10          	mov    %eax,0x10(%rsp)
   18262:	e9 cc fb ff ff       	jmp    17e33 <__gdtoa+0x4c3>
   18267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1826e:	00 00 
   18270:	8b 44 24 60          	mov    0x60(%rsp),%eax
   18274:	85 c0                	test   %eax,%eax
   18276:	0f 84 44 03 00 00    	je     185c0 <__gdtoa+0xc50>
   1827c:	8d 41 01             	lea    0x1(%rcx),%eax
   1827f:	41 8b 57 04          	mov    0x4(%r15),%edx
   18283:	41 29 c9             	sub    %ecx,%r9d
   18286:	44 29 f0             	sub    %r14d,%eax
   18289:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   18290:	41 39 d1             	cmp    %edx,%r9d
   18293:	0f 8d e7 05 00 00    	jge    18880 <__gdtoa+0xf10>
   18299:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1829d:	8d 4e fd             	lea    -0x3(%rsi),%ecx
   182a0:	83 e1 fd             	and    $0xfffffffd,%ecx
   182a3:	0f 84 d7 05 00 00    	je     18880 <__gdtoa+0xf10>
   182a9:	8b 44 24 40          	mov    0x40(%rsp),%eax
   182ad:	29 d0                	sub    %edx,%eax
   182af:	83 c0 01             	add    $0x1,%eax
   182b2:	83 fe 01             	cmp    $0x1,%esi
   182b5:	8b 74 24 38          	mov    0x38(%rsp),%esi
   182b9:	0f 9f c1             	setg   %cl
   182bc:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   182c3:	85 f6                	test   %esi,%esi
   182c5:	0f 9f c2             	setg   %dl
   182c8:	84 d1                	test   %dl,%cl
   182ca:	74 08                	je     182d4 <__gdtoa+0x964>
   182cc:	39 f0                	cmp    %esi,%eax
   182ce:	0f 8f b7 05 00 00    	jg     1888b <__gdtoa+0xf1b>
   182d4:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   182d8:	01 44 24 48          	add    %eax,0x48(%rsp)
   182dc:	8b 54 24 68          	mov    0x68(%rsp),%edx
   182e0:	01 c8                	add    %ecx,%eax
   182e2:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   182e6:	89 44 24 50          	mov    %eax,0x50(%rsp)
   182ea:	bf 01 00 00 00       	mov    $0x1,%edi
   182ef:	89 94 24 90 00 00 00 	mov    %edx,0x90(%rsp)
   182f6:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   182fb:	e8 f0 e6 ff ff       	call   169f0 <__i2b_D2A>
   18300:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   18305:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
   1830c:	48 85 c0             	test   %rax,%rax
   1830f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18314:	0f 84 de f9 ff ff    	je     17cf8 <__gdtoa+0x388>
   1831a:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
   1831e:	85 c9                	test   %ecx,%ecx
   18320:	7e 26                	jle    18348 <__gdtoa+0x9d8>
   18322:	8b 74 24 48          	mov    0x48(%rsp),%esi
   18326:	85 f6                	test   %esi,%esi
   18328:	7e 1e                	jle    18348 <__gdtoa+0x9d8>
   1832a:	39 f1                	cmp    %esi,%ecx
   1832c:	89 f0                	mov    %esi,%eax
   1832e:	0f 4e c1             	cmovle %ecx,%eax
   18331:	29 44 24 50          	sub    %eax,0x50(%rsp)
   18335:	29 c1                	sub    %eax,%ecx
   18337:	29 c6                	sub    %eax,%esi
   18339:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   18340:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   18344:	89 74 24 48          	mov    %esi,0x48(%rsp)
   18348:	8b 44 24 68          	mov    0x68(%rsp),%eax
   1834c:	85 c0                	test   %eax,%eax
   1834e:	7e 20                	jle    18370 <__gdtoa+0xa00>
   18350:	8b 44 24 60          	mov    0x60(%rsp),%eax
   18354:	85 c0                	test   %eax,%eax
   18356:	0f 84 bc 07 00 00    	je     18b18 <__gdtoa+0x11a8>
   1835c:	85 d2                	test   %edx,%edx
   1835e:	0f 8f 4c 08 00 00    	jg     18bb0 <__gdtoa+0x1240>
   18364:	8b 74 24 68          	mov    0x68(%rsp),%esi
   18368:	29 d6                	sub    %edx,%esi
   1836a:	0f 85 7d 09 00 00    	jne    18ced <__gdtoa+0x137d>
   18370:	bf 01 00 00 00       	mov    $0x1,%edi
   18375:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1837a:	e8 71 e6 ff ff       	call   169f0 <__i2b_D2A>
   1837f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18384:	48 89 c7             	mov    %rax,%rdi
   18387:	48 85 c0             	test   %rax,%rax
   1838a:	0f 84 68 f9 ff ff    	je     17cf8 <__gdtoa+0x388>
   18390:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   18395:	45 85 db             	test   %r11d,%r11d
   18398:	0f 8f 4a 05 00 00    	jg     188e8 <__gdtoa+0xf78>
   1839e:	41 83 fe 01          	cmp    $0x1,%r14d
   183a2:	75 0b                	jne    183af <__gdtoa+0xa3f>
   183a4:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   183a9:	0f 8e 6d 0a 00 00    	jle    18e1c <__gdtoa+0x14ac>
   183af:	45 31 f6             	xor    %r14d,%r14d
   183b2:	45 85 db             	test   %r11d,%r11d
   183b5:	0f 85 5c 05 00 00    	jne    18917 <__gdtoa+0xfa7>
   183bb:	b8 1b 00 00 00       	mov    $0x1b,%eax
   183c0:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
   183c5:	2b 44 24 48          	sub    0x48(%rsp),%eax
   183c9:	83 e0 1f             	and    $0x1f,%eax
   183cc:	41 01 c2             	add    %eax,%r10d
   183cf:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   183d6:	41 89 c7             	mov    %eax,%r15d
   183d9:	89 c6                	mov    %eax,%esi
   183db:	45 85 d2             	test   %r10d,%r10d
   183de:	0f 8f 5c 05 00 00    	jg     18940 <__gdtoa+0xfd0>
   183e4:	03 74 24 48          	add    0x48(%rsp),%esi
   183e8:	85 f6                	test   %esi,%esi
   183ea:	0f 8f 78 05 00 00    	jg     18968 <__gdtoa+0xff8>
   183f0:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   183f7:	85 c0                	test   %eax,%eax
   183f9:	0f 85 41 07 00 00    	jne    18b40 <__gdtoa+0x11d0>
   183ff:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   18404:	45 85 d2             	test   %r10d,%r10d
   18407:	0f 8f e3 01 00 00    	jg     185f0 <__gdtoa+0xc80>
   1840d:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   18412:	0f 8e d8 01 00 00    	jle    185f0 <__gdtoa+0xc80>
   18418:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1841d:	31 d2                	xor    %edx,%edx
   1841f:	be 05 00 00 00       	mov    $0x5,%esi
   18424:	e8 97 e4 ff ff       	call   168c0 <__multadd_D2A>
   18429:	49 89 c6             	mov    %rax,%r14
   1842c:	48 85 c0             	test   %rax,%rax
   1842f:	0f 84 c3 f8 ff ff    	je     17cf8 <__gdtoa+0x388>
   18435:	44 8b 4c 24 38       	mov    0x38(%rsp),%r9d
   1843a:	45 85 c9             	test   %r9d,%r9d
   1843d:	0f 85 a9 00 00 00    	jne    184ec <__gdtoa+0xb7c>
   18443:	48 89 c6             	mov    %rax,%rsi
   18446:	4c 89 ef             	mov    %r13,%rdi
   18449:	e8 b2 ea ff ff       	call   16f00 <__cmp_D2A>
   1844e:	85 c0                	test   %eax,%eax
   18450:	0f 8e 96 00 00 00    	jle    184ec <__gdtoa+0xb7c>
   18456:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   1845b:	41 83 c7 02          	add    $0x2,%r15d
   1845f:	e9 f4 fa ff ff       	jmp    17f58 <__gdtoa+0x5e8>
   18464:	0f 1f 40 00          	nopl   0x0(%rax)
   18468:	83 f8 03             	cmp    $0x3,%eax
   1846b:	0f 85 80 fb ff ff    	jne    17ff1 <__gdtoa+0x681>
   18471:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   18478:	00 
   18479:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1847d:	03 44 24 78          	add    0x78(%rsp),%eax
   18481:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   18488:	83 c0 01             	add    $0x1,%eax
   1848b:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1848f:	85 c0                	test   %eax,%eax
   18491:	0f 8e 39 04 00 00    	jle    188d0 <__gdtoa+0xf60>
   18497:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1849e:	89 c7                	mov    %eax,%edi
   184a0:	e9 d9 f9 ff ff       	jmp    17e7e <__gdtoa+0x50e>
   184a5:	0f 1f 00             	nopl   (%rax)
   184a8:	66 0f ef c9          	pxor   %xmm1,%xmm1
   184ac:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   184b1:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   184b5:	7a 06                	jp     184bd <__gdtoa+0xb4d>
   184b7:	0f 84 28 f7 ff ff    	je     17be5 <__gdtoa+0x275>
   184bd:	41 83 eb 01          	sub    $0x1,%r11d
   184c1:	e9 1f f7 ff ff       	jmp    17be5 <__gdtoa+0x275>
   184c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   184cd:	00 00 00 
   184d0:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   184d7:	00 
   184d8:	eb 9f                	jmp    18479 <__gdtoa+0xb09>
   184da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   184e0:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   184e7:	00 00 
   184e9:	45 31 f6             	xor    %r14d,%r14d
   184ec:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   184f1:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   184f8:	00 
   184f9:	4c 89 e0             	mov    %r12,%rax
   184fc:	41 f7 df             	neg    %r15d
   184ff:	e9 66 fa ff ff       	jmp    17f6a <__gdtoa+0x5fa>
   18504:	0f 1f 40 00          	nopl   0x0(%rax)
   18508:	8b 74 24 78          	mov    0x78(%rsp),%esi
   1850c:	66 0f ef ff          	pxor   %xmm7,%xmm7
   18510:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   18517:	00 00 
   18519:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   18520:	01 00 00 00 
   18524:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   18529:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1852d:	83 c6 01             	add    $0x1,%esi
   18530:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   18534:	41 89 f7             	mov    %esi,%r15d
   18537:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   1853b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1853f:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   18543:	8d 51 30             	lea    0x30(%rcx),%edx
   18546:	41 88 14 24          	mov    %dl,(%r12)
   1854a:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   1854e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   18552:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   18556:	0f 8b d8 0a 00 00    	jnp    19034 <__gdtoa+0x16c4>
   1855c:	f2 0f 10 1d 54 a7 00 	movsd  0xa754(%rip),%xmm3        # 22cb8 <xdigs_lower.3329+0x48>
   18563:	00 
   18564:	0f 1f 40 00          	nopl   0x0(%rax)
   18568:	8b 94 24 a4 00 00 00 	mov    0xa4(%rsp),%edx
   1856f:	3b 54 24 38          	cmp    0x38(%rsp),%edx
   18573:	0f 84 77 04 00 00    	je     189f0 <__gdtoa+0x1080>
   18579:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1857d:	66 0f ef ed          	pxor   %xmm5,%xmm5
   18581:	83 c2 01             	add    $0x1,%edx
   18584:	48 83 c0 01          	add    $0x1,%rax
   18588:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   1858f:	66 0f 28 c8          	movapd %xmm0,%xmm1
   18593:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   18597:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   1859b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1859f:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   185a3:	8d 51 30             	lea    0x30(%rcx),%edx
   185a6:	88 50 ff             	mov    %dl,-0x1(%rax)
   185a9:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   185ad:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   185b1:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   185b5:	7a b1                	jp     18568 <__gdtoa+0xbf8>
   185b7:	0f 84 db f9 ff ff    	je     17f98 <__gdtoa+0x628>
   185bd:	eb a9                	jmp    18568 <__gdtoa+0xbf8>
   185bf:	90                   	nop
   185c0:	8b 44 24 50          	mov    0x50(%rsp),%eax
   185c4:	8b 54 24 68          	mov    0x68(%rsp),%edx
   185c8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   185cf:	00 00 
   185d1:	89 44 24 70          	mov    %eax,0x70(%rsp)
   185d5:	e9 40 fd ff ff       	jmp    1831a <__gdtoa+0x9aa>
   185da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   185e0:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   185e7:	00 
   185e8:	e9 6d f8 ff ff       	jmp    17e5a <__gdtoa+0x4ea>
   185ed:	0f 1f 00             	nopl   (%rax)
   185f0:	44 8b 44 24 60       	mov    0x60(%rsp),%r8d
   185f5:	45 85 c0             	test   %r8d,%r8d
   185f8:	0f 84 2a 04 00 00    	je     18a28 <__gdtoa+0x10b8>
   185fe:	8b 74 24 70          	mov    0x70(%rsp),%esi
   18602:	44 01 fe             	add    %r15d,%esi
   18605:	85 f6                	test   %esi,%esi
   18607:	0f 8f 91 07 00 00    	jg     18d9e <__gdtoa+0x142e>
   1860d:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   18612:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   18617:	45 85 f6             	test   %r14d,%r14d
   1861a:	0f 85 8c f6 ff ff    	jne    17cac <__gdtoa+0x33c>
   18620:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   18625:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1862a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1862f:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   18634:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18639:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
   1863e:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   18643:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1864a:	01 00 00 00 
   1864e:	e9 cc 00 00 00       	jmp    1871f <__gdtoa+0xdaf>
   18653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18658:	48 89 c7             	mov    %rax,%rdi
   1865b:	e8 70 e1 ff ff       	call   167d0 <__Bfree_D2A>
   18660:	b9 01 00 00 00       	mov    $0x1,%ecx
   18665:	45 85 f6             	test   %r14d,%r14d
   18668:	0f 88 a9 08 00 00    	js     18f17 <__gdtoa+0x15a7>
   1866e:	44 0b 74 24 10       	or     0x10(%rsp),%r14d
   18673:	75 0e                	jne    18683 <__gdtoa+0xd13>
   18675:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1867a:	f6 00 01             	testb  $0x1,(%rax)
   1867d:	0f 84 94 08 00 00    	je     18f17 <__gdtoa+0x15a7>
   18683:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18688:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1868c:	4d 89 f7             	mov    %r14,%r15
   1868f:	85 c9                	test   %ecx,%ecx
   18691:	7e 0b                	jle    1869e <__gdtoa+0xd2e>
   18693:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   18698:	0f 85 a1 09 00 00    	jne    1903f <__gdtoa+0x16cf>
   1869e:	0f b6 44 24 30       	movzbl 0x30(%rsp),%eax
   186a3:	41 88 46 ff          	mov    %al,-0x1(%r14)
   186a7:	8b 44 24 38          	mov    0x38(%rsp),%eax
   186ab:	39 84 24 a4 00 00 00 	cmp    %eax,0xa4(%rsp)
   186b2:	0f 84 d6 09 00 00    	je     1908e <__gdtoa+0x171e>
   186b8:	4c 89 ef             	mov    %r13,%rdi
   186bb:	31 d2                	xor    %edx,%edx
   186bd:	be 0a 00 00 00       	mov    $0xa,%esi
   186c2:	e8 f9 e1 ff ff       	call   168c0 <__multadd_D2A>
   186c7:	49 89 c5             	mov    %rax,%r13
   186ca:	48 85 c0             	test   %rax,%rax
   186cd:	0f 84 25 f6 ff ff    	je     17cf8 <__gdtoa+0x388>
   186d3:	31 d2                	xor    %edx,%edx
   186d5:	be 0a 00 00 00       	mov    $0xa,%esi
   186da:	48 89 ef             	mov    %rbp,%rdi
   186dd:	4c 39 e5             	cmp    %r12,%rbp
   186e0:	0f 84 7a 01 00 00    	je     18860 <__gdtoa+0xef0>
   186e6:	e8 d5 e1 ff ff       	call   168c0 <__multadd_D2A>
   186eb:	48 89 c5             	mov    %rax,%rbp
   186ee:	48 85 c0             	test   %rax,%rax
   186f1:	0f 84 01 f6 ff ff    	je     17cf8 <__gdtoa+0x388>
   186f7:	4c 89 e7             	mov    %r12,%rdi
   186fa:	31 d2                	xor    %edx,%edx
   186fc:	be 0a 00 00 00       	mov    $0xa,%esi
   18701:	e8 ba e1 ff ff       	call   168c0 <__multadd_D2A>
   18706:	49 89 c4             	mov    %rax,%r12
   18709:	48 85 c0             	test   %rax,%rax
   1870c:	0f 84 e6 f5 ff ff    	je     17cf8 <__gdtoa+0x388>
   18712:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   18719:	01 
   1871a:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1871f:	48 89 de             	mov    %rbx,%rsi
   18722:	4c 89 ef             	mov    %r13,%rdi
   18725:	e8 36 c2 ff ff       	call   14960 <__quorem_D2A>
   1872a:	48 89 ee             	mov    %rbp,%rsi
   1872d:	4c 89 ef             	mov    %r13,%rdi
   18730:	41 89 c7             	mov    %eax,%r15d
   18733:	8d 40 30             	lea    0x30(%rax),%eax
   18736:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1873a:	e8 c1 e7 ff ff       	call   16f00 <__cmp_D2A>
   1873f:	4c 89 e6             	mov    %r12,%rsi
   18742:	48 89 df             	mov    %rbx,%rdi
   18745:	41 89 c6             	mov    %eax,%r14d
   18748:	e8 03 e8 ff ff       	call   16f50 <__diff_D2A>
   1874d:	48 85 c0             	test   %rax,%rax
   18750:	0f 84 a2 f5 ff ff    	je     17cf8 <__gdtoa+0x388>
   18756:	8b 78 10             	mov    0x10(%rax),%edi
   18759:	85 ff                	test   %edi,%edi
   1875b:	0f 85 f7 fe ff ff    	jne    18658 <__gdtoa+0xce8>
   18761:	48 89 c6             	mov    %rax,%rsi
   18764:	4c 89 ef             	mov    %r13,%rdi
   18767:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1876c:	e8 8f e7 ff ff       	call   16f00 <__cmp_D2A>
   18771:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   18776:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1877a:	4c 89 c7             	mov    %r8,%rdi
   1877d:	e8 4e e0 ff ff       	call   167d0 <__Bfree_D2A>
   18782:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   18786:	0b 4c 24 40          	or     0x40(%rsp),%ecx
   1878a:	0f 85 e5 0a 00 00    	jne    19275 <__gdtoa+0x1905>
   18790:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18795:	8b 00                	mov    (%rax),%eax
   18797:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1879b:	83 e0 01             	and    $0x1,%eax
   1879e:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   187a2:	0f 85 bd fe ff ff    	jne    18665 <__gdtoa+0xcf5>
   187a8:	8b 54 24 30          	mov    0x30(%rsp),%edx
   187ac:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   187b1:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   187b6:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   187bb:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   187c0:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   187c5:	83 fa 39             	cmp    $0x39,%edx
   187c8:	0f 84 b3 09 00 00    	je     19181 <__gdtoa+0x1811>
   187ce:	45 85 f6             	test   %r14d,%r14d
   187d1:	0f 8e 77 0a 00 00    	jle    1924e <__gdtoa+0x18de>
   187d7:	41 8d 57 31          	lea    0x31(%r15),%edx
   187db:	b9 20 00 00 00       	mov    $0x20,%ecx
   187e0:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   187e5:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   187ea:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   187ee:	88 16                	mov    %dl,(%rsi)
   187f0:	48 8d 46 01          	lea    0x1(%rsi),%rax
   187f4:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   187f9:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   187fe:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   18803:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18808:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1880d:	e8 be df ff ff       	call   167d0 <__Bfree_D2A>
   18812:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   18817:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   1881c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18821:	41 83 c7 01          	add    $0x1,%r15d
   18825:	48 85 c9             	test   %rcx,%rcx
   18828:	0f 84 6a f7 ff ff    	je     17f98 <__gdtoa+0x628>
   1882e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   18833:	4d 85 d2             	test   %r10,%r10
   18836:	0f 84 48 f7 ff ff    	je     17f84 <__gdtoa+0x614>
   1883c:	49 39 ca             	cmp    %rcx,%r10
   1883f:	0f 84 3f f7 ff ff    	je     17f84 <__gdtoa+0x614>
   18845:	4c 89 d7             	mov    %r10,%rdi
   18848:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1884d:	e8 7e df ff ff       	call   167d0 <__Bfree_D2A>
   18852:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   18857:	e9 28 f7 ff ff       	jmp    17f84 <__gdtoa+0x614>
   1885c:	0f 1f 40 00          	nopl   0x0(%rax)
   18860:	e8 5b e0 ff ff       	call   168c0 <__multadd_D2A>
   18865:	48 89 c5             	mov    %rax,%rbp
   18868:	48 85 c0             	test   %rax,%rax
   1886b:	0f 84 87 f4 ff ff    	je     17cf8 <__gdtoa+0x388>
   18871:	49 89 c4             	mov    %rax,%r12
   18874:	e9 99 fe ff ff       	jmp    18712 <__gdtoa+0xda2>
   18879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18880:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   18885:	0f 8e 49 fa ff ff    	jle    182d4 <__gdtoa+0x964>
   1888b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1888f:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
   18893:	83 e8 01             	sub    $0x1,%eax
   18896:	39 c1                	cmp    %eax,%ecx
   18898:	0f 8c d1 04 00 00    	jl     18d6f <__gdtoa+0x13ff>
   1889e:	29 c1                	sub    %eax,%ecx
   188a0:	89 ca                	mov    %ecx,%edx
   188a2:	8b 44 24 38          	mov    0x38(%rsp),%eax
   188a6:	85 c0                	test   %eax,%eax
   188a8:	0f 88 d4 04 00 00    	js     18d82 <__gdtoa+0x1412>
   188ae:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   188b2:	01 44 24 48          	add    %eax,0x48(%rsp)
   188b6:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   188bd:	01 c8                	add    %ecx,%eax
   188bf:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   188c3:	89 44 24 50          	mov    %eax,0x50(%rsp)
   188c7:	e9 1e fa ff ff       	jmp    182ea <__gdtoa+0x97a>
   188cc:	0f 1f 40 00          	nopl   0x0(%rax)
   188d0:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   188d7:	01 00 00 00 
   188db:	bf 01 00 00 00       	mov    $0x1,%edi
   188e0:	e9 99 f5 ff ff       	jmp    17e7e <__gdtoa+0x50e>
   188e5:	0f 1f 00             	nopl   (%rax)
   188e8:	44 89 de             	mov    %r11d,%esi
   188eb:	e8 60 e3 ff ff       	call   16c50 <__pow5mult_D2A>
   188f0:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   188f5:	48 85 c0             	test   %rax,%rax
   188f8:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   188fd:	0f 84 f5 f3 ff ff    	je     17cf8 <__gdtoa+0x388>
   18903:	41 83 fe 01          	cmp    $0x1,%r14d
   18907:	75 0b                	jne    18914 <__gdtoa+0xfa4>
   18909:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   1890e:	0f 8e d1 05 00 00    	jle    18ee5 <__gdtoa+0x1575>
   18914:	45 31 f6             	xor    %r14d,%r14d
   18917:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   1891c:	8b 41 14             	mov    0x14(%rcx),%eax
   1891f:	89 44 24 30          	mov    %eax,0x30(%rsp)
   18923:	83 e8 01             	sub    $0x1,%eax
   18926:	48 98                	cltq   
   18928:	8b 7c 81 18          	mov    0x18(%rcx,%rax,4),%edi
   1892c:	e8 5f e0 ff ff       	call   16990 <__hi0bits_D2A>
   18931:	83 e8 04             	sub    $0x4,%eax
   18934:	e9 87 fa ff ff       	jmp    183c0 <__gdtoa+0xa50>
   18939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18940:	4c 89 ef             	mov    %r13,%rdi
   18943:	44 89 d6             	mov    %r10d,%esi
   18946:	e8 75 e4 ff ff       	call   16dc0 <__lshift_D2A>
   1894b:	49 89 c5             	mov    %rax,%r13
   1894e:	48 85 c0             	test   %rax,%rax
   18951:	0f 84 a1 f3 ff ff    	je     17cf8 <__gdtoa+0x388>
   18957:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   1895e:	e9 81 fa ff ff       	jmp    183e4 <__gdtoa+0xa74>
   18963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18968:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1896d:	e8 4e e4 ff ff       	call   16dc0 <__lshift_D2A>
   18972:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   18977:	48 85 c0             	test   %rax,%rax
   1897a:	0f 85 70 fa ff ff    	jne    183f0 <__gdtoa+0xa80>
   18980:	e9 73 f3 ff ff       	jmp    17cf8 <__gdtoa+0x388>
   18985:	66 0f 28 c8          	movapd %xmm0,%xmm1
   18989:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   1898d:	f2 0f 58 0d 2b a3 00 	addsd  0xa32b(%rip),%xmm1        # 22cc0 <xdigs_lower.3329+0x50>
   18994:	00 
   18995:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1899a:	66 48 0f 7e c8       	movq   %xmm1,%rax
   1899f:	48 c1 ea 20          	shr    $0x20,%rdx
   189a3:	89 c0                	mov    %eax,%eax
   189a5:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   189ab:	48 c1 e2 20          	shl    $0x20,%rdx
   189af:	48 09 d0             	or     %rdx,%rax
   189b2:	f2 0f 5c 05 0e a3 00 	subsd  0xa30e(%rip),%xmm0        # 22cc8 <xdigs_lower.3329+0x58>
   189b9:	00 
   189ba:	66 48 0f 6e c8       	movq   %rax,%xmm1
   189bf:	66 0f 2f c1          	comisd %xmm1,%xmm0
   189c3:	0f 87 05 04 00 00    	ja     18dce <__gdtoa+0x145e>
   189c9:	66 0f 57 0d 0f a3 00 	xorpd  0xa30f(%rip),%xmm1        # 22ce0 <xdigs_lower.3329+0x70>
   189d0:	00 
   189d1:	66 0f 2f c8          	comisd %xmm0,%xmm1
   189d5:	0f 87 05 fb ff ff    	ja     184e0 <__gdtoa+0xb70>
   189db:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   189e2:	00 
   189e3:	e9 ff f4 ff ff       	jmp    17ee7 <__gdtoa+0x577>
   189e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   189ef:	00 
   189f0:	8b 7c 24 5c          	mov    0x5c(%rsp),%edi
   189f4:	85 ff                	test   %edi,%edi
   189f6:	0f 84 e9 03 00 00    	je     18de5 <__gdtoa+0x1475>
   189fc:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   18a03:	00 
   18a04:	83 ff 01             	cmp    $0x1,%edi
   18a07:	0f 85 8b f5 ff ff    	jne    17f98 <__gdtoa+0x628>
   18a0d:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   18a11:	e9 c2 f7 ff ff       	jmp    181d8 <__gdtoa+0x868>
   18a16:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   18a1d:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18a21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18a28:	48 89 e8             	mov    %rbp,%rax
   18a2b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   18a30:	4c 89 ed             	mov    %r13,%rbp
   18a33:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   18a38:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   18a3d:	4d 89 e7             	mov    %r12,%r15
   18a40:	49 89 c5             	mov    %rax,%r13
   18a43:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   18a4a:	01 00 00 00 
   18a4e:	eb 23                	jmp    18a73 <__gdtoa+0x1103>
   18a50:	48 89 ef             	mov    %rbp,%rdi
   18a53:	31 d2                	xor    %edx,%edx
   18a55:	be 0a 00 00 00       	mov    $0xa,%esi
   18a5a:	e8 61 de ff ff       	call   168c0 <__multadd_D2A>
   18a5f:	48 89 c5             	mov    %rax,%rbp
   18a62:	48 85 c0             	test   %rax,%rax
   18a65:	0f 84 8d f2 ff ff    	je     17cf8 <__gdtoa+0x388>
   18a6b:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   18a72:	01 
   18a73:	48 89 de             	mov    %rbx,%rsi
   18a76:	48 89 ef             	mov    %rbp,%rdi
   18a79:	49 83 c7 01          	add    $0x1,%r15
   18a7d:	e8 de be ff ff       	call   14960 <__quorem_D2A>
   18a82:	8d 50 30             	lea    0x30(%rax),%edx
   18a85:	41 88 57 ff          	mov    %dl,-0x1(%r15)
   18a89:	44 39 b4 24 a4 00 00 	cmp    %r14d,0xa4(%rsp)
   18a90:	00 
   18a91:	7c bd                	jl     18a50 <__gdtoa+0x10e0>
   18a93:	4c 89 e8             	mov    %r13,%rax
   18a96:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   18a9b:	49 89 ed             	mov    %rbp,%r13
   18a9e:	45 31 d2             	xor    %r10d,%r10d
   18aa1:	48 89 c5             	mov    %rax,%rbp
   18aa4:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   18aa8:	85 c0                	test   %eax,%eax
   18aaa:	0f 84 d2 03 00 00    	je     18e82 <__gdtoa+0x1512>
   18ab0:	83 f8 02             	cmp    $0x2,%eax
   18ab3:	0f 84 14 04 00 00    	je     18ecd <__gdtoa+0x155d>
   18ab9:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   18abe:	7f 31                	jg     18af1 <__gdtoa+0x1181>
   18ac0:	41 8b 4d 18          	mov    0x18(%r13),%ecx
   18ac4:	85 c9                	test   %ecx,%ecx
   18ac6:	75 29                	jne    18af1 <__gdtoa+0x1181>
   18ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18acf:	00 
   18ad0:	4c 89 f8             	mov    %r15,%rax
   18ad3:	49 83 ef 01          	sub    $0x1,%r15
   18ad7:	41 80 3f 30          	cmpb   $0x30,(%r15)
   18adb:	74 f3                	je     18ad0 <__gdtoa+0x1160>
   18add:	e9 1c fd ff ff       	jmp    187fe <__gdtoa+0xe8e>
   18ae2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18ae8:	4d 39 fc             	cmp    %r15,%r12
   18aeb:	0f 84 54 03 00 00    	je     18e45 <__gdtoa+0x14d5>
   18af1:	4c 89 f8             	mov    %r15,%rax
   18af4:	4d 8d 7f ff          	lea    -0x1(%r15),%r15
   18af8:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   18afc:	80 fa 39             	cmp    $0x39,%dl
   18aff:	74 e7                	je     18ae8 <__gdtoa+0x1178>
   18b01:	83 c2 01             	add    $0x1,%edx
   18b04:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   18b0b:	00 
   18b0c:	41 88 17             	mov    %dl,(%r15)
   18b0f:	e9 ea fc ff ff       	jmp    187fe <__gdtoa+0xe8e>
   18b14:	0f 1f 40 00          	nopl   0x0(%rax)
   18b18:	8b 74 24 68          	mov    0x68(%rsp),%esi
   18b1c:	4c 89 ef             	mov    %r13,%rdi
   18b1f:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   18b24:	e8 27 e1 ff ff       	call   16c50 <__pow5mult_D2A>
   18b29:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   18b2e:	48 85 c0             	test   %rax,%rax
   18b31:	49 89 c5             	mov    %rax,%r13
   18b34:	0f 85 36 f8 ff ff    	jne    18370 <__gdtoa+0xa00>
   18b3a:	e9 b9 f1 ff ff       	jmp    17cf8 <__gdtoa+0x388>
   18b3f:	90                   	nop
   18b40:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18b45:	4c 89 ef             	mov    %r13,%rdi
   18b48:	e8 b3 e3 ff ff       	call   16f00 <__cmp_D2A>
   18b4d:	85 c0                	test   %eax,%eax
   18b4f:	0f 89 aa f8 ff ff    	jns    183ff <__gdtoa+0xa8f>
   18b55:	4c 89 ef             	mov    %r13,%rdi
   18b58:	31 d2                	xor    %edx,%edx
   18b5a:	be 0a 00 00 00       	mov    $0xa,%esi
   18b5f:	83 6c 24 78 01       	subl   $0x1,0x78(%rsp)
   18b64:	e8 57 dd ff ff       	call   168c0 <__multadd_D2A>
   18b69:	49 89 c5             	mov    %rax,%r13
   18b6c:	48 85 c0             	test   %rax,%rax
   18b6f:	0f 84 83 f1 ff ff    	je     17cf8 <__gdtoa+0x388>
   18b75:	44 8b 5c 24 60       	mov    0x60(%rsp),%r11d
   18b7a:	45 85 db             	test   %r11d,%r11d
   18b7d:	0f 85 ba 05 00 00    	jne    1913d <__gdtoa+0x17cd>
   18b83:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   18b8a:	85 d2                	test   %edx,%edx
   18b8c:	0f 8f 84 fe ff ff    	jg     18a16 <__gdtoa+0x10a6>
   18b92:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   18b97:	0f 8e 79 fe ff ff    	jle    18a16 <__gdtoa+0x10a6>
   18b9d:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   18ba4:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18ba8:	e9 6b f8 ff ff       	jmp    18418 <__gdtoa+0xaa8>
   18bad:	0f 1f 00             	nopl   (%rax)
   18bb0:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18bb5:	89 d6                	mov    %edx,%esi
   18bb7:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   18bbe:	00 
   18bbf:	89 54 24 7c          	mov    %edx,0x7c(%rsp)
   18bc3:	e8 88 e0 ff ff       	call   16c50 <__pow5mult_D2A>
   18bc8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18bcd:	48 85 c0             	test   %rax,%rax
   18bd0:	0f 84 22 f1 ff ff    	je     17cf8 <__gdtoa+0x388>
   18bd6:	4c 89 ee             	mov    %r13,%rsi
   18bd9:	48 89 c7             	mov    %rax,%rdi
   18bdc:	e8 3f de ff ff       	call   16a20 <__mult_D2A>
   18be1:	48 85 c0             	test   %rax,%rax
   18be4:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   18beb:	00 
   18bec:	0f 84 06 f1 ff ff    	je     17cf8 <__gdtoa+0x388>
   18bf2:	4c 89 ef             	mov    %r13,%rdi
   18bf5:	e8 d6 db ff ff       	call   167d0 <__Bfree_D2A>
   18bfa:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   18c01:	00 
   18c02:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
   18c06:	44 8b 9c 24 90 00 00 	mov    0x90(%rsp),%r11d
   18c0d:	00 
   18c0e:	49 89 c5             	mov    %rax,%r13
   18c11:	e9 4e f7 ff ff       	jmp    18364 <__gdtoa+0x9f4>
   18c16:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
   18c1a:	66 0f 28 c8          	movapd %xmm0,%xmm1
   18c1e:	4c 89 e0             	mov    %r12,%rax
   18c21:	31 ff                	xor    %edi,%edi
   18c23:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   18c2a:	01 00 00 00 
   18c2e:	f2 0f 10 15 82 a0 00 	movsd  0xa082(%rip),%xmm2        # 22cb8 <xdigs_lower.3329+0x48>
   18c35:	00 
   18c36:	eb 19                	jmp    18c51 <__gdtoa+0x12e1>
   18c38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18c3f:	00 
   18c40:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   18c44:	83 c6 01             	add    $0x1,%esi
   18c47:	44 89 c7             	mov    %r8d,%edi
   18c4a:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
   18c51:	f2 0f 2c d1          	cvttsd2si %xmm1,%edx
   18c55:	85 d2                	test   %edx,%edx
   18c57:	74 0f                	je     18c68 <__gdtoa+0x12f8>
   18c59:	66 0f ef db          	pxor   %xmm3,%xmm3
   18c5d:	44 89 c7             	mov    %r8d,%edi
   18c60:	f2 0f 2a da          	cvtsi2sd %edx,%xmm3
   18c64:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
   18c68:	48 83 c0 01          	add    $0x1,%rax
   18c6c:	83 c2 30             	add    $0x30,%edx
   18c6f:	88 50 ff             	mov    %dl,-0x1(%rax)
   18c72:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   18c79:	44 39 d6             	cmp    %r10d,%esi
   18c7c:	75 c2                	jne    18c40 <__gdtoa+0x12d0>
   18c7e:	40 84 ff             	test   %dil,%dil
   18c81:	0f 84 87 02 00 00    	je     18f0e <__gdtoa+0x159e>
   18c87:	f2 0f 10 05 41 a0 00 	movsd  0xa041(%rip),%xmm0        # 22cd0 <xdigs_lower.3329+0x60>
   18c8e:	00 
   18c8f:	66 0f 28 d4          	movapd %xmm4,%xmm2
   18c93:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
   18c97:	66 0f 2f ca          	comisd %xmm2,%xmm1
   18c9b:	0f 87 5f 02 00 00    	ja     18f00 <__gdtoa+0x1590>
   18ca1:	f2 0f 5c c4          	subsd  %xmm4,%xmm0
   18ca5:	66 0f 2f c1          	comisd %xmm1,%xmm0
   18ca9:	0f 86 2c fd ff ff    	jbe    189db <__gdtoa+0x106b>
   18caf:	66 0f ef ff          	pxor   %xmm7,%xmm7
   18cb3:	48 89 c2             	mov    %rax,%rdx
   18cb6:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   18cba:	7a 06                	jp     18cc2 <__gdtoa+0x1352>
   18cbc:	0f 84 e7 04 00 00    	je     191a9 <__gdtoa+0x1839>
   18cc2:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   18cc6:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   18ccd:	00 
   18cce:	8d 70 01             	lea    0x1(%rax),%esi
   18cd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18cd8:	48 89 d0             	mov    %rdx,%rax
   18cdb:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
   18cdf:	80 78 ff 30          	cmpb   $0x30,-0x1(%rax)
   18ce3:	74 f3                	je     18cd8 <__gdtoa+0x1368>
   18ce5:	41 89 f7             	mov    %esi,%r15d
   18ce8:	e9 ab f2 ff ff       	jmp    17f98 <__gdtoa+0x628>
   18ced:	4c 89 ef             	mov    %r13,%rdi
   18cf0:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
   18cf5:	e8 56 df ff ff       	call   16c50 <__pow5mult_D2A>
   18cfa:	44 8b 5c 24 68       	mov    0x68(%rsp),%r11d
   18cff:	48 85 c0             	test   %rax,%rax
   18d02:	49 89 c5             	mov    %rax,%r13
   18d05:	0f 85 65 f6 ff ff    	jne    18370 <__gdtoa+0xa00>
   18d0b:	e9 e8 ef ff ff       	jmp    17cf8 <__gdtoa+0x388>
   18d10:	85 f6                	test   %esi,%esi
   18d12:	0f 84 6d fc ff ff    	je     18985 <__gdtoa+0x1015>
   18d18:	44 8b 94 24 9c 00 00 	mov    0x9c(%rsp),%r10d
   18d1f:	00 
   18d20:	45 85 d2             	test   %r10d,%r10d
   18d23:	0f 8e b2 fc ff ff    	jle    189db <__gdtoa+0x106b>
   18d29:	f2 0f 59 05 87 9f 00 	mulsd  0x9f87(%rip),%xmm0        # 22cb8 <xdigs_lower.3329+0x48>
   18d30:	00 
   18d31:	f2 0f 10 0d 3f a2 00 	movsd  0xa23f(%rip),%xmm1        # 22f78 <_C_ctype_+0x118>
   18d38:	00 
   18d39:	c7 44 24 5c ff ff ff 	movl   $0xffffffff,0x5c(%rsp)
   18d40:	ff 
   18d41:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   18d45:	f2 0f 58 0d 73 9f 00 	addsd  0x9f73(%rip),%xmm1        # 22cc0 <xdigs_lower.3329+0x50>
   18d4c:	00 
   18d4d:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   18d52:	66 48 0f 7e c8       	movq   %xmm1,%rax
   18d57:	48 c1 ea 20          	shr    $0x20,%rdx
   18d5b:	89 c0                	mov    %eax,%eax
   18d5d:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   18d63:	48 c1 e2 20          	shl    $0x20,%rdx
   18d67:	48 09 d0             	or     %rdx,%rax
   18d6a:	e9 7f f3 ff ff       	jmp    180ee <__gdtoa+0x77e>
   18d6f:	44 2b 5c 24 68       	sub    0x68(%rsp),%r11d
   18d74:	31 d2                	xor    %edx,%edx
   18d76:	89 44 24 68          	mov    %eax,0x68(%rsp)
   18d7a:	41 01 c3             	add    %eax,%r11d
   18d7d:	e9 20 fb ff ff       	jmp    188a2 <__gdtoa+0xf32>
   18d82:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   18d89:	00 00 00 00 
   18d8d:	8b 44 24 50          	mov    0x50(%rsp),%eax
   18d91:	2b 44 24 38          	sub    0x38(%rsp),%eax
   18d95:	89 44 24 70          	mov    %eax,0x70(%rsp)
   18d99:	e9 4c f5 ff ff       	jmp    182ea <__gdtoa+0x97a>
   18d9e:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   18da3:	e8 18 e0 ff ff       	call   16dc0 <__lshift_D2A>
   18da8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   18dad:	48 85 c0             	test   %rax,%rax
   18db0:	0f 85 57 f8 ff ff    	jne    1860d <__gdtoa+0xc9d>
   18db6:	e9 3d ef ff ff       	jmp    17cf8 <__gdtoa+0x388>
   18dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18dc0:	41 83 c7 01          	add    $0x1,%r15d
   18dc4:	ba 31 00 00 00       	mov    $0x31,%edx
   18dc9:	e9 16 f4 ff ff       	jmp    181e4 <__gdtoa+0x874>
   18dce:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   18dd5:	00 00 
   18dd7:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   18ddd:	45 31 f6             	xor    %r14d,%r14d
   18de0:	e9 73 f1 ff ff       	jmp    17f58 <__gdtoa+0x5e8>
   18de5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   18de9:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   18ded:	66 0f 2f c2          	comisd %xmm2,%xmm0
   18df1:	0f 87 e1 f3 ff ff    	ja     181d8 <__gdtoa+0x868>
   18df7:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
   18dfb:	7a 0b                	jp     18e08 <__gdtoa+0x1498>
   18dfd:	75 09                	jne    18e08 <__gdtoa+0x1498>
   18dff:	80 e1 01             	and    $0x1,%cl
   18e02:	0f 85 d0 f3 ff ff    	jne    181d8 <__gdtoa+0x868>
   18e08:	f3 0f 1e fa          	endbr64 
   18e0c:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   18e13:	00 
   18e14:	48 89 c2             	mov    %rax,%rdx
   18e17:	e9 bc fe ff ff       	jmp    18cd8 <__gdtoa+0x1368>
   18e1c:	41 8b 47 04          	mov    0x4(%r15),%eax
   18e20:	45 31 f6             	xor    %r14d,%r14d
   18e23:	83 c0 01             	add    $0x1,%eax
   18e26:	3b 44 24 30          	cmp    0x30(%rsp),%eax
   18e2a:	0f 8d 82 f5 ff ff    	jge    183b2 <__gdtoa+0xa42>
   18e30:	83 44 24 50 01       	addl   $0x1,0x50(%rsp)
   18e35:	41 be 01 00 00 00    	mov    $0x1,%r14d
   18e3b:	83 44 24 48 01       	addl   $0x1,0x48(%rsp)
   18e40:	e9 6d f5 ff ff       	jmp    183b2 <__gdtoa+0xa42>
   18e45:	83 44 24 78 01       	addl   $0x1,0x78(%rsp)
   18e4a:	41 c6 04 24 31       	movb   $0x31,(%r12)
   18e4f:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   18e56:	00 
   18e57:	e9 a2 f9 ff ff       	jmp    187fe <__gdtoa+0xe8e>
   18e5c:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   18e61:	66 0f ef ff          	pxor   %xmm7,%xmm7
   18e65:	41 83 c7 01          	add    $0x1,%r15d
   18e69:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   18e6d:	7a 06                	jp     18e75 <__gdtoa+0x1505>
   18e6f:	0f 84 3c 02 00 00    	je     190b1 <__gdtoa+0x1741>
   18e75:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   18e7c:	00 
   18e7d:	e9 16 f1 ff ff       	jmp    17f98 <__gdtoa+0x628>
   18e82:	4c 89 ef             	mov    %r13,%rdi
   18e85:	be 01 00 00 00       	mov    $0x1,%esi
   18e8a:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   18e8f:	89 54 24 10          	mov    %edx,0x10(%rsp)
   18e93:	e8 28 df ff ff       	call   16dc0 <__lshift_D2A>
   18e98:	49 89 c5             	mov    %rax,%r13
   18e9b:	48 85 c0             	test   %rax,%rax
   18e9e:	0f 84 54 ee ff ff    	je     17cf8 <__gdtoa+0x388>
   18ea4:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   18ea9:	48 89 c7             	mov    %rax,%rdi
   18eac:	e8 4f e0 ff ff       	call   16f00 <__cmp_D2A>
   18eb1:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   18eb6:	85 c0                	test   %eax,%eax
   18eb8:	0f 8f 33 fc ff ff    	jg     18af1 <__gdtoa+0x1181>
   18ebe:	75 0d                	jne    18ecd <__gdtoa+0x155d>
   18ec0:	8b 54 24 10          	mov    0x10(%rsp),%edx
   18ec4:	80 e2 01             	and    $0x1,%dl
   18ec7:	0f 85 24 fc ff ff    	jne    18af1 <__gdtoa+0x1181>
   18ecd:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   18ed2:	0f 8e e5 02 00 00    	jle    191bd <__gdtoa+0x184d>
   18ed8:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   18edf:	00 
   18ee0:	e9 eb fb ff ff       	jmp    18ad0 <__gdtoa+0x1160>
   18ee5:	41 8b 47 04          	mov    0x4(%r15),%eax
   18ee9:	83 c0 01             	add    $0x1,%eax
   18eec:	39 44 24 30          	cmp    %eax,0x30(%rsp)
   18ef0:	0f 8f 3a ff ff ff    	jg     18e30 <__gdtoa+0x14c0>
   18ef6:	e9 19 fa ff ff       	jmp    18914 <__gdtoa+0xfa4>
   18efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18f00:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   18f05:	41 83 c7 01          	add    $0x1,%r15d
   18f09:	e9 ca f2 ff ff       	jmp    181d8 <__gdtoa+0x868>
   18f0e:	66 0f 28 c8          	movapd %xmm0,%xmm1
   18f12:	e9 70 fd ff ff       	jmp    18c87 <__gdtoa+0x1317>
   18f17:	8b 74 24 5c          	mov    0x5c(%rsp),%esi
   18f1b:	8b 54 24 30          	mov    0x30(%rsp),%edx
   18f1f:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   18f24:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   18f29:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   18f2e:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   18f33:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   18f38:	85 f6                	test   %esi,%esi
   18f3a:	0f 84 7e 01 00 00    	je     190be <__gdtoa+0x174e>
   18f40:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   18f45:	0f 8e 8f 02 00 00    	jle    191da <__gdtoa+0x186a>
   18f4b:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   18f50:	0f 84 c2 01 00 00    	je     19118 <__gdtoa+0x17a8>
   18f56:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   18f5b:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
   18f60:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   18f65:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   18f6a:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   18f6f:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   18f74:	eb 57                	jmp    18fcd <__gdtoa+0x165d>
   18f76:	41 88 56 ff          	mov    %dl,-0x1(%r14)
   18f7a:	be 0a 00 00 00       	mov    $0xa,%esi
   18f7f:	31 d2                	xor    %edx,%edx
   18f81:	4c 89 e7             	mov    %r12,%rdi
   18f84:	e8 37 d9 ff ff       	call   168c0 <__multadd_D2A>
   18f89:	48 89 c3             	mov    %rax,%rbx
   18f8c:	48 85 c0             	test   %rax,%rax
   18f8f:	0f 84 63 ed ff ff    	je     17cf8 <__gdtoa+0x388>
   18f95:	4c 39 e5             	cmp    %r12,%rbp
   18f98:	4c 89 ef             	mov    %r13,%rdi
   18f9b:	be 0a 00 00 00       	mov    $0xa,%esi
   18fa0:	48 0f 44 e8          	cmove  %rax,%rbp
   18fa4:	31 d2                	xor    %edx,%edx
   18fa6:	e8 15 d9 ff ff       	call   168c0 <__multadd_D2A>
   18fab:	49 89 c5             	mov    %rax,%r13
   18fae:	48 85 c0             	test   %rax,%rax
   18fb1:	0f 84 41 ed ff ff    	je     17cf8 <__gdtoa+0x388>
   18fb7:	4c 89 fe             	mov    %r15,%rsi
   18fba:	48 89 c7             	mov    %rax,%rdi
   18fbd:	49 89 dc             	mov    %rbx,%r12
   18fc0:	e8 9b b9 ff ff       	call   14960 <__quorem_D2A>
   18fc5:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   18fca:	8d 50 30             	lea    0x30(%rax),%edx
   18fcd:	4c 89 e6             	mov    %r12,%rsi
   18fd0:	4c 89 ff             	mov    %r15,%rdi
   18fd3:	89 54 24 10          	mov    %edx,0x10(%rsp)
   18fd7:	e8 24 df ff ff       	call   16f00 <__cmp_D2A>
   18fdc:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   18fe1:	8b 54 24 10          	mov    0x10(%rsp),%edx
   18fe5:	85 c0                	test   %eax,%eax
   18fe7:	4c 8d 73 01          	lea    0x1(%rbx),%r14
   18feb:	7f 89                	jg     18f76 <__gdtoa+0x1606>
   18fed:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   18ff2:	49 89 ea             	mov    %rbp,%r10
   18ff5:	4c 89 e0             	mov    %r12,%rax
   18ff8:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   18ffd:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   19002:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   19007:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1900c:	83 fa 39             	cmp    $0x39,%edx
   1900f:	0f 84 75 01 00 00    	je     1918a <__gdtoa+0x181a>
   19015:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1901a:	83 c2 01             	add    $0x1,%edx
   1901d:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   19024:	00 
   19025:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1902a:	4c 89 f0             	mov    %r14,%rax
   1902d:	88 11                	mov    %dl,(%rcx)
   1902f:	e9 ca f7 ff ff       	jmp    187fe <__gdtoa+0xe8e>
   19034:	0f 84 5e ef ff ff    	je     17f98 <__gdtoa+0x628>
   1903a:	e9 1d f5 ff ff       	jmp    1855c <__gdtoa+0xbec>
   1903f:	8b 54 24 30          	mov    0x30(%rsp),%edx
   19043:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   19048:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1904d:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   19052:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   19057:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1905c:	83 fa 39             	cmp    $0x39,%edx
   1905f:	0f 84 25 01 00 00    	je     1918a <__gdtoa+0x181a>
   19065:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1906a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1906f:	83 c2 01             	add    $0x1,%edx
   19072:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   19079:	00 
   1907a:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1907f:	88 10                	mov    %dl,(%rax)
   19081:	4c 89 f0             	mov    %r14,%rax
   19084:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   19089:	e9 70 f7 ff ff       	jmp    187fe <__gdtoa+0xe8e>
   1908e:	4c 89 e0             	mov    %r12,%rax
   19091:	49 89 ea             	mov    %rbp,%r10
   19094:	8b 54 24 30          	mov    0x30(%rsp),%edx
   19098:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1909d:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   190a2:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   190a7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   190ac:	e9 f3 f9 ff ff       	jmp    18aa4 <__gdtoa+0x1134>
   190b1:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   190b8:	00 
   190b9:	e9 da ee ff ff       	jmp    17f98 <__gdtoa+0x628>
   190be:	85 c9                	test   %ecx,%ecx
   190c0:	7e 4b                	jle    1910d <__gdtoa+0x179d>
   190c2:	4c 89 ef             	mov    %r13,%rdi
   190c5:	be 01 00 00 00       	mov    $0x1,%esi
   190ca:	89 54 24 10          	mov    %edx,0x10(%rsp)
   190ce:	e8 ed dc ff ff       	call   16dc0 <__lshift_D2A>
   190d3:	49 89 c5             	mov    %rax,%r13
   190d6:	48 85 c0             	test   %rax,%rax
   190d9:	0f 84 19 ec ff ff    	je     17cf8 <__gdtoa+0x388>
   190df:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   190e4:	48 89 c7             	mov    %rax,%rdi
   190e7:	e8 14 de ff ff       	call   16f00 <__cmp_D2A>
   190ec:	8b 54 24 10          	mov    0x10(%rsp),%edx
   190f0:	85 c0                	test   %eax,%eax
   190f2:	0f 8e 3e 01 00 00    	jle    19236 <__gdtoa+0x18c6>
   190f8:	83 fa 39             	cmp    $0x39,%edx
   190fb:	0f 84 80 00 00 00    	je     19181 <__gdtoa+0x1811>
   19101:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   19108:	00 
   19109:	41 8d 57 31          	lea    0x31(%r15),%edx
   1910d:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   19112:	0f 8e f2 00 00 00    	jle    1920a <__gdtoa+0x189a>
   19118:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1911d:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   19122:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   19129:	00 
   1912a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1912f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19134:	4c 8d 70 01          	lea    0x1(%rax),%r14
   19138:	e9 e8 fe ff ff       	jmp    19025 <__gdtoa+0x16b5>
   1913d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   19142:	31 d2                	xor    %edx,%edx
   19144:	be 0a 00 00 00       	mov    $0xa,%esi
   19149:	e8 72 d7 ff ff       	call   168c0 <__multadd_D2A>
   1914e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   19153:	48 85 c0             	test   %rax,%rax
   19156:	0f 84 9c eb ff ff    	je     17cf8 <__gdtoa+0x388>
   1915c:	83 bc 24 9c 00 00 00 	cmpl   $0x0,0x9c(%rsp)
   19163:	00 
   19164:	7f 0b                	jg     19171 <__gdtoa+0x1801>
   19166:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   1916b:	0f 8f 2c fa ff ff    	jg     18b9d <__gdtoa+0x122d>
   19171:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   19178:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1917c:	e9 7d f4 ff ff       	jmp    185fe <__gdtoa+0xc8e>
   19181:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19186:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1918a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1918f:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   19194:	4d 89 f7             	mov    %r14,%r15
   19197:	c6 00 39             	movb   $0x39,(%rax)
   1919a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1919f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   191a4:	e9 48 f9 ff ff       	jmp    18af1 <__gdtoa+0x1181>
   191a9:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   191ad:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   191b4:	00 
   191b5:	8d 70 01             	lea    0x1(%rax),%esi
   191b8:	e9 1b fb ff ff       	jmp    18cd8 <__gdtoa+0x1368>
   191bd:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   191c2:	b8 10 00 00 00       	mov    $0x10,%eax
   191c7:	0f 44 44 24 20       	cmove  0x20(%rsp),%eax
   191cc:	89 44 24 20          	mov    %eax,0x20(%rsp)
   191d0:	e9 fb f8 ff ff       	jmp    18ad0 <__gdtoa+0x1160>
   191d5:	e8 e6 67 ff ff       	call   f9c0 <__stack_chk_fail>
   191da:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   191df:	0f 85 66 fd ff ff    	jne    18f4b <__gdtoa+0x15db>
   191e5:	85 c9                	test   %ecx,%ecx
   191e7:	0f 8f d5 fe ff ff    	jg     190c2 <__gdtoa+0x1752>
   191ed:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   191f2:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   191f7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   191fc:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19201:	4c 8d 70 01          	lea    0x1(%rax),%r14
   19205:	e9 1b fe ff ff       	jmp    19025 <__gdtoa+0x16b5>
   1920a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1920f:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   19214:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   19219:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1921e:	74 3f                	je     1925f <__gdtoa+0x18ef>
   19220:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19225:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1922c:	00 
   1922d:	4c 8d 70 01          	lea    0x1(%rax),%r14
   19231:	e9 ef fd ff ff       	jmp    19025 <__gdtoa+0x16b5>
   19236:	75 09                	jne    19241 <__gdtoa+0x18d1>
   19238:	f6 c2 01             	test   $0x1,%dl
   1923b:	0f 85 b7 fe ff ff    	jne    190f8 <__gdtoa+0x1788>
   19241:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   19248:	00 
   19249:	e9 bf fe ff ff       	jmp    1910d <__gdtoa+0x179d>
   1924e:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   19253:	7e 29                	jle    1927e <__gdtoa+0x190e>
   19255:	b9 10 00 00 00       	mov    $0x10,%ecx
   1925a:	e9 81 f5 ff ff       	jmp    187e0 <__gdtoa+0xe70>
   1925f:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   19263:	89 44 24 20          	mov    %eax,0x20(%rsp)
   19267:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1926c:	4c 8d 70 01          	lea    0x1(%rax),%r14
   19270:	e9 b0 fd ff ff       	jmp    19025 <__gdtoa+0x16b5>
   19275:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   19279:	e9 e7 f3 ff ff       	jmp    18665 <__gdtoa+0xcf5>
   1927e:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   19283:	b8 10 00 00 00       	mov    $0x10,%eax
   19288:	0f 45 c8             	cmovne %eax,%ecx
   1928b:	e9 50 f5 ff ff       	jmp    187e0 <__gdtoa+0xe70>

0000000000019290 <__rshift_D2A>:
   19290:	f3 0f 1e fa          	endbr64 
   19294:	41 54                	push   %r12
   19296:	49 89 f9             	mov    %rdi,%r9
   19299:	55                   	push   %rbp
   1929a:	53                   	push   %rbx
   1929b:	89 f3                	mov    %esi,%ebx
   1929d:	4c 63 5f 14          	movslq 0x14(%rdi),%r11
   192a1:	c1 fb 05             	sar    $0x5,%ebx
   192a4:	41 39 db             	cmp    %ebx,%r11d
   192a7:	7e 77                	jle    19320 <__rshift_D2A+0x90>
   192a9:	48 8d 6f 18          	lea    0x18(%rdi),%rbp
   192ad:	41 89 f0             	mov    %esi,%r8d
   192b0:	48 63 db             	movslq %ebx,%rbx
   192b3:	4e 8d 54 9d 00       	lea    0x0(%rbp,%r11,4),%r10
   192b8:	48 8d 74 9d 00       	lea    0x0(%rbp,%rbx,4),%rsi
   192bd:	41 83 e0 1f          	and    $0x1f,%r8d
   192c1:	74 75                	je     19338 <__rshift_D2A+0xa8>
   192c3:	8b 06                	mov    (%rsi),%eax
   192c5:	44 89 c1             	mov    %r8d,%ecx
   192c8:	41 bc 20 00 00 00    	mov    $0x20,%r12d
   192ce:	48 8d 56 04          	lea    0x4(%rsi),%rdx
   192d2:	45 29 c4             	sub    %r8d,%r12d
   192d5:	d3 e8                	shr    %cl,%eax
   192d7:	89 c7                	mov    %eax,%edi
   192d9:	49 39 d2             	cmp    %rdx,%r10
   192dc:	0f 86 86 00 00 00    	jbe    19368 <__rshift_D2A+0xd8>
   192e2:	48 89 ee             	mov    %rbp,%rsi
   192e5:	0f 1f 00             	nopl   (%rax)
   192e8:	8b 02                	mov    (%rdx),%eax
   192ea:	44 89 e1             	mov    %r12d,%ecx
   192ed:	48 83 c6 04          	add    $0x4,%rsi
   192f1:	48 83 c2 04          	add    $0x4,%rdx
   192f5:	d3 e0                	shl    %cl,%eax
   192f7:	44 89 c1             	mov    %r8d,%ecx
   192fa:	09 f8                	or     %edi,%eax
   192fc:	89 46 fc             	mov    %eax,-0x4(%rsi)
   192ff:	8b 7a fc             	mov    -0x4(%rdx),%edi
   19302:	d3 ef                	shr    %cl,%edi
   19304:	49 39 d2             	cmp    %rdx,%r10
   19307:	77 df                	ja     192e8 <__rshift_D2A+0x58>
   19309:	49 29 db             	sub    %rbx,%r11
   1930c:	4a 8d 44 9d fc       	lea    -0x4(%rbp,%r11,4),%rax
   19311:	89 38                	mov    %edi,(%rax)
   19313:	85 ff                	test   %edi,%edi
   19315:	74 37                	je     1934e <__rshift_D2A+0xbe>
   19317:	48 83 c0 04          	add    $0x4,%rax
   1931b:	eb 31                	jmp    1934e <__rshift_D2A+0xbe>
   1931d:	0f 1f 00             	nopl   (%rax)
   19320:	41 c7 41 14 00 00 00 	movl   $0x0,0x14(%r9)
   19327:	00 
   19328:	5b                   	pop    %rbx
   19329:	5d                   	pop    %rbp
   1932a:	41 c7 41 18 00 00 00 	movl   $0x0,0x18(%r9)
   19331:	00 
   19332:	41 5c                	pop    %r12
   19334:	c3                   	ret    
   19335:	0f 1f 00             	nopl   (%rax)
   19338:	48 89 ef             	mov    %rbp,%rdi
   1933b:	49 39 f2             	cmp    %rsi,%r10
   1933e:	76 e0                	jbe    19320 <__rshift_D2A+0x90>
   19340:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   19341:	49 39 f2             	cmp    %rsi,%r10
   19344:	77 fa                	ja     19340 <__rshift_D2A+0xb0>
   19346:	49 29 db             	sub    %rbx,%r11
   19349:	4a 8d 44 9d 00       	lea    0x0(%rbp,%r11,4),%rax
   1934e:	48 29 e8             	sub    %rbp,%rax
   19351:	48 c1 f8 02          	sar    $0x2,%rax
   19355:	41 89 41 14          	mov    %eax,0x14(%r9)
   19359:	85 c0                	test   %eax,%eax
   1935b:	74 cb                	je     19328 <__rshift_D2A+0x98>
   1935d:	5b                   	pop    %rbx
   1935e:	5d                   	pop    %rbp
   1935f:	41 5c                	pop    %r12
   19361:	c3                   	ret    
   19362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19368:	41 89 41 18          	mov    %eax,0x18(%r9)
   1936c:	85 c0                	test   %eax,%eax
   1936e:	74 b0                	je     19320 <__rshift_D2A+0x90>
   19370:	48 89 e8             	mov    %rbp,%rax
   19373:	eb a2                	jmp    19317 <__rshift_D2A+0x87>
   19375:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1937c:	00 00 00 
   1937f:	90                   	nop

0000000000019380 <__trailz_D2A>:
   19380:	f3 0f 1e fa          	endbr64 
   19384:	41 54                	push   %r12
   19386:	45 31 e4             	xor    %r12d,%r12d
   19389:	48 83 ec 10          	sub    $0x10,%rsp
   1938d:	48 63 57 14          	movslq 0x14(%rdi),%rdx
   19391:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19398:	00 00 
   1939a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1939f:	31 c0                	xor    %eax,%eax
   193a1:	48 8d 47 18          	lea    0x18(%rdi),%rax
   193a5:	48 8d 0c 90          	lea    (%rax,%rdx,4),%rcx
   193a9:	48 39 c8             	cmp    %rcx,%rax
   193ac:	72 0f                	jb     193bd <__trailz_D2A+0x3d>
   193ae:	eb 24                	jmp    193d4 <__trailz_D2A+0x54>
   193b0:	48 83 c0 04          	add    $0x4,%rax
   193b4:	41 83 c4 20          	add    $0x20,%r12d
   193b8:	48 39 c1             	cmp    %rax,%rcx
   193bb:	76 17                	jbe    193d4 <__trailz_D2A+0x54>
   193bd:	8b 10                	mov    (%rax),%edx
   193bf:	85 d2                	test   %edx,%edx
   193c1:	74 ed                	je     193b0 <__trailz_D2A+0x30>
   193c3:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   193c8:	89 54 24 04          	mov    %edx,0x4(%rsp)
   193cc:	e8 5f d4 ff ff       	call   16830 <__lo0bits_D2A>
   193d1:	41 01 c4             	add    %eax,%r12d
   193d4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   193d9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   193e0:	00 00 
   193e2:	75 0a                	jne    193ee <__trailz_D2A+0x6e>
   193e4:	48 83 c4 10          	add    $0x10,%rsp
   193e8:	44 89 e0             	mov    %r12d,%eax
   193eb:	41 5c                	pop    %r12
   193ed:	c3                   	ret    
   193ee:	e8 cd 65 ff ff       	call   f9c0 <__stack_chk_fail>
   193f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   193fa:	00 00 00 
   193fd:	0f 1f 00             	nopl   (%rax)

0000000000019400 <_Unwind_Resume>:
   19400:	f3 0f 1e fa          	endbr64 
   19404:	41 57                	push   %r15
   19406:	41 56                	push   %r14
   19408:	41 55                	push   %r13
   1940a:	49 89 fd             	mov    %rdi,%r13
   1940d:	41 54                	push   %r12
   1940f:	55                   	push   %rbp
   19410:	53                   	push   %rbx
   19411:	48 81 ec 58 08 00 00 	sub    $0x858,%rsp
   19418:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1941f:	00 00 
   19421:	48 89 84 24 48 08 00 	mov    %rax,0x848(%rsp)
   19428:	00 
   19429:	31 c0                	xor    %eax,%eax
   1942b:	4c 8d 64 24 70       	lea    0x70(%rsp),%r12
   19430:	c7 84 24 38 08 00 00 	movl   $0x0,0x838(%rsp)
   19437:	00 00 00 00 
   1943b:	4c 89 e7             	mov    %r12,%rdi
   1943e:	e8 a6 09 00 00       	call   19de9 <_Ux86_64_getcontext>
   19443:	85 c0                	test   %eax,%eax
   19445:	0f 88 ad 00 00 00    	js     194f8 <_Unwind_Resume+0xf8>
   1944b:	48 8d ac 24 40 04 00 	lea    0x440(%rsp),%rbp
   19452:	00 
   19453:	4c 89 e6             	mov    %r12,%rsi
   19456:	48 89 ef             	mov    %rbp,%rdi
   19459:	e8 82 03 00 00       	call   197e0 <_ULx86_64_init_local>
   1945e:	85 c0                	test   %eax,%eax
   19460:	0f 88 92 00 00 00    	js     194f8 <_Unwind_Resume+0xf8>
   19466:	4d 8b 65 10          	mov    0x10(%r13),%r12
   1946a:	49 8b 45 18          	mov    0x18(%r13),%rax
   1946e:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   19473:	4d 8b 7d 00          	mov    0x0(%r13),%r15
   19477:	49 83 fc 01          	cmp    $0x1,%r12
   1947b:	48 89 04 24          	mov    %rax,(%rsp)
   1947f:	19 db                	sbb    %ebx,%ebx
   19481:	83 e3 f8             	and    $0xfffffff8,%ebx
   19484:	83 c3 0a             	add    $0xa,%ebx
   19487:	eb 4b                	jmp    194d4 <_Unwind_Resume+0xd4>
   19489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19490:	4d 85 e4             	test   %r12,%r12
   19493:	74 1b                	je     194b0 <_Unwind_Resume+0xb0>
   19495:	4c 8b 0c 24          	mov    (%rsp),%r9
   19499:	49 89 e8             	mov    %rbp,%r8
   1949c:	4c 89 e9             	mov    %r13,%rcx
   1949f:	4c 89 fa             	mov    %r15,%rdx
   194a2:	89 de                	mov    %ebx,%esi
   194a4:	bf 01 00 00 00       	mov    $0x1,%edi
   194a9:	41 ff d4             	call   *%r12
   194ac:	85 c0                	test   %eax,%eax
   194ae:	75 48                	jne    194f8 <_Unwind_Resume+0xf8>
   194b0:	8b 84 24 38 08 00 00 	mov    0x838(%rsp),%eax
   194b7:	85 c0                	test   %eax,%eax
   194b9:	75 3d                	jne    194f8 <_Unwind_Resume+0xf8>
   194bb:	4c 89 f6             	mov    %r14,%rsi
   194be:	48 89 ef             	mov    %rbp,%rdi
   194c1:	e8 2a 03 00 00       	call   197f0 <_ULx86_64_get_proc_info>
   194c6:	85 c0                	test   %eax,%eax
   194c8:	78 2e                	js     194f8 <_Unwind_Resume+0xf8>
   194ca:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   194cf:	4d 85 c9             	test   %r9,%r9
   194d2:	75 29                	jne    194fd <_Unwind_Resume+0xfd>
   194d4:	48 89 ef             	mov    %rbp,%rdi
   194d7:	e8 54 05 00 00       	call   19a30 <_ULx86_64_step>
   194dc:	85 c0                	test   %eax,%eax
   194de:	7f b0                	jg     19490 <_Unwind_Resume+0x90>
   194e0:	75 16                	jne    194f8 <_Unwind_Resume+0xf8>
   194e2:	c7 84 24 38 08 00 00 	movl   $0x1,0x838(%rsp)
   194e9:	01 00 00 00 
   194ed:	83 cb 10             	or     $0x10,%ebx
   194f0:	4d 85 e4             	test   %r12,%r12
   194f3:	75 a0                	jne    19495 <_Unwind_Resume+0x95>
   194f5:	0f 1f 00             	nopl   (%rax)
   194f8:	e8 07 81 00 00       	call   21604 <abort>
   194fd:	4d 85 e4             	test   %r12,%r12
   19500:	74 1f                	je     19521 <_Unwind_Resume+0x121>
   19502:	49 89 e8             	mov    %rbp,%r8
   19505:	4c 89 e9             	mov    %r13,%rcx
   19508:	4c 89 fa             	mov    %r15,%rdx
   1950b:	89 de                	mov    %ebx,%esi
   1950d:	bf 01 00 00 00       	mov    $0x1,%edi
   19512:	41 ff d1             	call   *%r9
   19515:	83 f8 08             	cmp    $0x8,%eax
   19518:	75 37                	jne    19551 <_Unwind_Resume+0x151>
   1951a:	f6 c3 04             	test   $0x4,%bl
   1951d:	74 b5                	je     194d4 <_Unwind_Resume+0xd4>
   1951f:	eb d7                	jmp    194f8 <_Unwind_Resume+0xf8>
   19521:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   19526:	be 10 00 00 00       	mov    $0x10,%esi
   1952b:	48 89 ef             	mov    %rbp,%rdi
   1952e:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   19533:	e8 c8 46 00 00       	call   1dc00 <_ULx86_64_get_reg>
   19538:	85 c0                	test   %eax,%eax
   1953a:	78 bc                	js     194f8 <_Unwind_Resume+0xf8>
   1953c:	48 8b 04 24          	mov    (%rsp),%rax
   19540:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   19545:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1954a:	75 b6                	jne    19502 <_Unwind_Resume+0x102>
   1954c:	83 cb 04             	or     $0x4,%ebx
   1954f:	eb b1                	jmp    19502 <_Unwind_Resume+0x102>
   19551:	83 f8 07             	cmp    $0x7,%eax
   19554:	75 a2                	jne    194f8 <_Unwind_Resume+0xf8>
   19556:	48 89 ef             	mov    %rbp,%rdi
   19559:	e8 82 03 00 00       	call   198e0 <_ULx86_64_resume>
   1955e:	eb 98                	jmp    194f8 <_Unwind_Resume+0xf8>

0000000000019560 <unw_init_local_common>:
   19560:	41 55                	push   %r13
   19562:	41 54                	push   %r12
   19564:	41 89 d4             	mov    %edx,%r12d
   19567:	53                   	push   %rbx
   19568:	48 89 fb             	mov    %rdi,%rbx
   1956b:	48 83 ec 10          	sub    $0x10,%rsp
   1956f:	8b 05 f3 24 02 00    	mov    0x224f3(%rip),%eax        # 3ba68 <_ULx86_64_init_done>
   19575:	85 c0                	test   %eax,%eax
   19577:	0f 84 43 02 00 00    	je     197c0 <unw_init_local_common+0x260>
   1957d:	48 8d 96 90 00 00 00 	lea    0x90(%rsi),%rdx
   19584:	48 8b 05 f5 2c 01 00 	mov    0x12cf5(%rip),%rax        # 2c280 <_ULx86_64_local_addr_space>
   1958b:	48 89 1b             	mov    %rbx,(%rbx)
   1958e:	48 89 53 40          	mov    %rdx,0x40(%rbx)
   19592:	48 8d 96 88 00 00 00 	lea    0x88(%rsi),%rdx
   19599:	48 89 53 50          	mov    %rdx,0x50(%rbx)
   1959d:	48 8d 96 98 00 00 00 	lea    0x98(%rsi),%rdx
   195a4:	48 89 53 60          	mov    %rdx,0x60(%rbx)
   195a8:	48 8d 96 80 00 00 00 	lea    0x80(%rsi),%rdx
   195af:	48 89 53 70          	mov    %rdx,0x70(%rbx)
   195b3:	48 8d 56 70          	lea    0x70(%rsi),%rdx
   195b7:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
   195be:	48 8d 56 68          	lea    0x68(%rsi),%rdx
   195c2:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
   195c9:	48 8d 56 78          	lea    0x78(%rsi),%rdx
   195cd:	48 89 93 a0 00 00 00 	mov    %rdx,0xa0(%rbx)
   195d4:	48 8d 96 a0 00 00 00 	lea    0xa0(%rsi),%rdx
   195db:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
   195e2:	48 8d 56 28          	lea    0x28(%rsi),%rdx
   195e6:	48 89 93 c0 00 00 00 	mov    %rdx,0xc0(%rbx)
   195ed:	48 8d 56 30          	lea    0x30(%rsi),%rdx
   195f1:	48 89 93 d0 00 00 00 	mov    %rdx,0xd0(%rbx)
   195f8:	48 8d 56 38          	lea    0x38(%rsi),%rdx
   195fc:	48 89 93 e0 00 00 00 	mov    %rdx,0xe0(%rbx)
   19603:	48 8d 56 40          	lea    0x40(%rsi),%rdx
   19607:	48 89 93 f0 00 00 00 	mov    %rdx,0xf0(%rbx)
   1960e:	48 8d 56 48          	lea    0x48(%rsi),%rdx
   19612:	48 89 93 00 01 00 00 	mov    %rdx,0x100(%rbx)
   19619:	48 8d 56 50          	lea    0x50(%rsi),%rdx
   1961d:	48 89 93 10 01 00 00 	mov    %rdx,0x110(%rbx)
   19624:	48 8d 56 58          	lea    0x58(%rsi),%rdx
   19628:	48 89 b3 d0 01 00 00 	mov    %rsi,0x1d0(%rbx)
   1962f:	48 89 43 08          	mov    %rax,0x8(%rbx)
   19633:	c7 83 c8 01 00 00 00 	movl   $0x0,0x1c8(%rbx)
   1963a:	00 00 00 
   1963d:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   19644:	00 
   19645:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
   1964c:	00 
   1964d:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
   19654:	00 
   19655:	48 c7 43 78 00 00 00 	movq   $0x0,0x78(%rbx)
   1965c:	00 
   1965d:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
   19664:	00 00 00 00 
   19668:	48 c7 83 98 00 00 00 	movq   $0x0,0x98(%rbx)
   1966f:	00 00 00 00 
   19673:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   1967a:	00 00 00 00 
   1967e:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   19685:	00 00 00 00 
   19689:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
   19690:	00 00 00 00 
   19694:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1969b:	00 00 00 00 
   1969f:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   196a6:	00 00 00 00 
   196aa:	48 c7 83 f8 00 00 00 	movq   $0x0,0xf8(%rbx)
   196b1:	00 00 00 00 
   196b5:	48 c7 83 08 01 00 00 	movq   $0x0,0x108(%rbx)
   196bc:	00 00 00 00 
   196c0:	48 c7 83 18 01 00 00 	movq   $0x0,0x118(%rbx)
   196c7:	00 00 00 00 
   196cb:	48 89 93 20 01 00 00 	mov    %rdx,0x120(%rbx)
   196d2:	48 8d 56 60          	lea    0x60(%rsi),%rdx
   196d6:	48 81 c6 a8 00 00 00 	add    $0xa8,%rsi
   196dd:	48 89 93 30 01 00 00 	mov    %rdx,0x130(%rbx)
   196e4:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   196e8:	48 c7 83 28 01 00 00 	movq   $0x0,0x128(%rbx)
   196ef:	00 00 00 00 
   196f3:	48 c7 83 38 01 00 00 	movq   $0x0,0x138(%rbx)
   196fa:	00 00 00 00 
   196fe:	48 89 b3 40 01 00 00 	mov    %rsi,0x140(%rbx)
   19705:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   1970c:	00 00 00 00 
   19710:	0f 84 c2 00 00 00    	je     197d8 <unw_init_local_common+0x278>
   19716:	31 c9                	xor    %ecx,%ecx
   19718:	49 89 d8             	mov    %rbx,%r8
   1971b:	48 89 c7             	mov    %rax,%rdi
   1971e:	ff 50 18             	call   *0x18(%rax)
   19721:	85 c0                	test   %eax,%eax
   19723:	0f 88 85 00 00 00    	js     197ae <unw_init_local_common+0x24e>
   19729:	48 8b 03             	mov    (%rbx),%rax
   1972c:	be 07 00 00 00       	mov    $0x7,%esi
   19731:	4c 8d 6b 10          	lea    0x10(%rbx),%r13
   19735:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1973c:	e8 7f 42 00 00       	call   1d9c0 <_ULx86_64_r_uc_addr>
   19741:	48 89 c6             	mov    %rax,%rsi
   19744:	48 85 c0             	test   %rax,%rax
   19747:	0f 84 8b 00 00 00    	je     197d8 <unw_init_local_common+0x278>
   1974d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19751:	31 c9                	xor    %ecx,%ecx
   19753:	4c 8b 03             	mov    (%rbx),%r8
   19756:	4c 89 ea             	mov    %r13,%rdx
   19759:	48 89 c7             	mov    %rax,%rdi
   1975c:	ff 50 18             	call   *0x18(%rax)
   1975f:	85 c0                	test   %eax,%eax
   19761:	78 4b                	js     197ae <unw_init_local_common+0x24e>
   19763:	0f b6 93 50 01 00 00 	movzbl 0x150(%rbx),%edx
   1976a:	45 01 e4             	add    %r12d,%r12d
   1976d:	31 c0                	xor    %eax,%eax
   1976f:	c7 83 b8 01 00 00 00 	movl   $0x0,0x1b8(%rbx)
   19776:	00 00 00 
   19779:	41 83 e4 0f          	and    $0xf,%r12d
   1977d:	48 c7 83 c0 01 00 00 	movq   $0x0,0x1c0(%rbx)
   19784:	00 00 00 00 
   19788:	83 e2 f0             	and    $0xfffffff0,%edx
   1978b:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   19792:	00 
   19793:	41 09 d4             	or     %edx,%r12d
   19796:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   1979d:	44 88 a3 50 01 00 00 	mov    %r12b,0x150(%rbx)
   197a4:	c7 83 a0 01 00 00 00 	movl   $0x0,0x1a0(%rbx)
   197ab:	00 00 00 
   197ae:	48 83 c4 10          	add    $0x10,%rsp
   197b2:	5b                   	pop    %rbx
   197b3:	41 5c                	pop    %r12
   197b5:	41 5d                	pop    %r13
   197b7:	c3                   	ret    
   197b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   197bf:	00 
   197c0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   197c5:	e8 36 49 00 00       	call   1e100 <_ULx86_64_init>
   197ca:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   197cf:	e9 a9 fd ff ff       	jmp    1957d <unw_init_local_common+0x1d>
   197d4:	0f 1f 40 00          	nopl   0x0(%rax)
   197d8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   197dd:	eb cf                	jmp    197ae <unw_init_local_common+0x24e>
   197df:	90                   	nop

00000000000197e0 <_ULx86_64_init_local>:
   197e0:	f3 0f 1e fa          	endbr64 
   197e4:	ba 01 00 00 00       	mov    $0x1,%edx
   197e9:	e9 72 fd ff ff       	jmp    19560 <unw_init_local_common>
   197ee:	66 90                	xchg   %ax,%ax

00000000000197f0 <_ULx86_64_get_proc_info>:
   197f0:	f3 0f 1e fa          	endbr64 
   197f4:	55                   	push   %rbp
   197f5:	48 89 f5             	mov    %rsi,%rbp
   197f8:	53                   	push   %rbx
   197f9:	48 89 fb             	mov    %rdi,%rbx
   197fc:	48 83 ec 08          	sub    $0x8,%rsp
   19800:	e8 bb 21 00 00       	call   1b9c0 <_ULx86_64_dwarf_make_proc_info>
   19805:	85 c0                	test   %eax,%eax
   19807:	78 47                	js     19850 <_ULx86_64_get_proc_info+0x60>
   19809:	f3 0f 6f 8b 58 01 00 	movdqu 0x158(%rbx),%xmm1
   19810:	00 
   19811:	0f 11 4d 00          	movups %xmm1,0x0(%rbp)
   19815:	f3 0f 6f 93 68 01 00 	movdqu 0x168(%rbx),%xmm2
   1981c:	00 
   1981d:	0f 11 55 10          	movups %xmm2,0x10(%rbp)
   19821:	f3 0f 6f 9b 78 01 00 	movdqu 0x178(%rbx),%xmm3
   19828:	00 
   19829:	0f 11 5d 20          	movups %xmm3,0x20(%rbp)
   1982d:	f3 0f 6f a3 88 01 00 	movdqu 0x188(%rbx),%xmm4
   19834:	00 
   19835:	0f 11 65 30          	movups %xmm4,0x30(%rbp)
   19839:	48 8b 83 98 01 00 00 	mov    0x198(%rbx),%rax
   19840:	48 89 45 40          	mov    %rax,0x40(%rbp)
   19844:	48 83 c4 08          	add    $0x8,%rsp
   19848:	31 c0                	xor    %eax,%eax
   1984a:	5b                   	pop    %rbx
   1984b:	5d                   	pop    %rbp
   1984c:	c3                   	ret    
   1984d:	0f 1f 00             	nopl   (%rax)
   19850:	66 0f ef c0          	pxor   %xmm0,%xmm0
   19854:	48 c7 45 40 00 00 00 	movq   $0x0,0x40(%rbp)
   1985b:	00 
   1985c:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   19860:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   19864:	0f 11 45 20          	movups %xmm0,0x20(%rbp)
   19868:	0f 11 45 30          	movups %xmm0,0x30(%rbp)
   1986c:	48 8b 43 18          	mov    0x18(%rbx),%rax
   19870:	48 89 45 00          	mov    %rax,0x0(%rbp)
   19874:	48 83 c0 01          	add    $0x1,%rax
   19878:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1987c:	48 83 c4 08          	add    $0x8,%rsp
   19880:	31 c0                	xor    %eax,%eax
   19882:	5b                   	pop    %rbx
   19883:	5d                   	pop    %rbp
   19884:	c3                   	ret    
   19885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1988c:	00 00 00 
   1988f:	90                   	nop

0000000000019890 <_ULx86_64_local_resume>:
   19890:	f3 0f 1e fa          	endbr64 
   19894:	41 54                	push   %r12
   19896:	48 89 f7             	mov    %rsi,%rdi
   19899:	55                   	push   %rbp
   1989a:	48 89 f5             	mov    %rsi,%rbp
   1989d:	48 83 ec 08          	sub    $0x8,%rsp
   198a1:	4c 8b a6 d0 01 00 00 	mov    0x1d0(%rsi),%r12
   198a8:	e8 13 21 00 00       	call   1b9c0 <_ULx86_64_dwarf_make_proc_info>
   198ad:	48 83 bd c0 01 00 00 	cmpq   $0x0,0x1c0(%rbp)
   198b4:	00 
   198b5:	75 19                	jne    198d0 <_ULx86_64_local_resume+0x40>
   198b7:	4c 89 e7             	mov    %r12,%rdi
   198ba:	e8 d2 47 00 00       	call   1e091 <_Ux86_64_setcontext>
   198bf:	48 83 c4 08          	add    $0x8,%rsp
   198c3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   198c8:	5d                   	pop    %rbp
   198c9:	41 5c                	pop    %r12
   198cb:	c3                   	ret    
   198cc:	0f 1f 40 00          	nopl   0x0(%rax)
   198d0:	48 89 ef             	mov    %rbp,%rdi
   198d3:	e8 b8 41 00 00       	call   1da90 <_ULx86_64_sigreturn>
   198d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   198df:	00 

00000000000198e0 <_ULx86_64_resume>:
   198e0:	f3 0f 1e fa          	endbr64 
   198e4:	41 57                	push   %r15
   198e6:	45 31 ff             	xor    %r15d,%r15d
   198e9:	41 56                	push   %r14
   198eb:	41 55                	push   %r13
   198ed:	41 54                	push   %r12
   198ef:	55                   	push   %rbp
   198f0:	48 89 fd             	mov    %rdi,%rbp
   198f3:	53                   	push   %rbx
   198f4:	48 83 ec 48          	sub    $0x48,%rsp
   198f8:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   198fc:	48 8b 1f             	mov    (%rdi),%rbx
   198ff:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19906:	00 00 
   19908:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1990d:	31 c0                	xor    %eax,%eax
   1990f:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   19914:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   19919:	4d 8b 74 24 20       	mov    0x20(%r12),%r14
   1991e:	48 89 04 24          	mov    %rax,(%rsp)
   19922:	eb 42                	jmp    19966 <_ULx86_64_resume+0x86>
   19924:	0f 1f 40 00          	nopl   0x0(%rax)
   19928:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1992d:	31 c9                	xor    %ecx,%ecx
   1992f:	44 89 fe             	mov    %r15d,%esi
   19932:	48 89 ef             	mov    %rbp,%rdi
   19935:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1993a:	e8 81 4e 00 00       	call   1e7c0 <_ULx86_64_access_fpreg>
   1993f:	85 c0                	test   %eax,%eax
   19941:	78 19                	js     1995c <_ULx86_64_resume+0x7c>
   19943:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19948:	48 8b 04 24          	mov    (%rsp),%rax
   1994c:	49 89 d8             	mov    %rbx,%r8
   1994f:	44 89 fe             	mov    %r15d,%esi
   19952:	b9 01 00 00 00       	mov    $0x1,%ecx
   19957:	4c 89 e7             	mov    %r12,%rdi
   1995a:	ff d0                	call   *%rax
   1995c:	41 83 c7 01          	add    $0x1,%r15d
   19960:	41 83 ff 11          	cmp    $0x11,%r15d
   19964:	74 3e                	je     199a4 <_ULx86_64_resume+0xc4>
   19966:	44 89 ff             	mov    %r15d,%edi
   19969:	e8 92 3f 00 00       	call   1d900 <_Ux86_64_is_fpreg>
   1996e:	85 c0                	test   %eax,%eax
   19970:	75 b6                	jne    19928 <_ULx86_64_resume+0x48>
   19972:	31 c9                	xor    %ecx,%ecx
   19974:	4c 89 ea             	mov    %r13,%rdx
   19977:	44 89 fe             	mov    %r15d,%esi
   1997a:	48 89 ef             	mov    %rbp,%rdi
   1997d:	e8 5e 4b 00 00       	call   1e4e0 <_ULx86_64_access_reg>
   19982:	85 c0                	test   %eax,%eax
   19984:	78 d6                	js     1995c <_ULx86_64_resume+0x7c>
   19986:	44 89 fe             	mov    %r15d,%esi
   19989:	41 83 c7 01          	add    $0x1,%r15d
   1998d:	49 89 d8             	mov    %rbx,%r8
   19990:	b9 01 00 00 00       	mov    $0x1,%ecx
   19995:	4c 89 ea             	mov    %r13,%rdx
   19998:	4c 89 e7             	mov    %r12,%rdi
   1999b:	41 ff d6             	call   *%r14
   1999e:	41 83 ff 11          	cmp    $0x11,%r15d
   199a2:	75 c2                	jne    19966 <_ULx86_64_resume+0x86>
   199a4:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
   199a9:	75 35                	jne    199e0 <_ULx86_64_resume+0x100>
   199ab:	48 8b 45 08          	mov    0x8(%rbp),%rax
   199af:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   199b3:	48 89 ee             	mov    %rbp,%rsi
   199b6:	48 89 c7             	mov    %rax,%rdi
   199b9:	ff 50 30             	call   *0x30(%rax)
   199bc:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   199c1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   199c8:	00 00 
   199ca:	75 50                	jne    19a1c <_ULx86_64_resume+0x13c>
   199cc:	48 83 c4 48          	add    $0x48,%rsp
   199d0:	5b                   	pop    %rbx
   199d1:	5d                   	pop    %rbp
   199d2:	41 5c                	pop    %r12
   199d4:	41 5d                	pop    %r13
   199d6:	41 5e                	pop    %r14
   199d8:	41 5f                	pop    %r15
   199da:	c3                   	ret    
   199db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   199e0:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   199e5:	31 c9                	xor    %ecx,%ecx
   199e7:	be 07 00 00 00       	mov    $0x7,%esi
   199ec:	48 89 ef             	mov    %rbp,%rdi
   199ef:	4c 89 ea             	mov    %r13,%rdx
   199f2:	e8 e9 4a 00 00       	call   1e4e0 <_ULx86_64_access_reg>
   199f7:	85 c0                	test   %eax,%eax
   199f9:	78 b0                	js     199ab <_ULx86_64_resume+0xcb>
   199fb:	48 8b 45 20          	mov    0x20(%rbp),%rax
   199ff:	49 89 d8             	mov    %rbx,%r8
   19a02:	48 01 44 24 18       	add    %rax,0x18(%rsp)
   19a07:	4c 89 ea             	mov    %r13,%rdx
   19a0a:	b9 01 00 00 00       	mov    $0x1,%ecx
   19a0f:	be 07 00 00 00       	mov    $0x7,%esi
   19a14:	4c 89 e7             	mov    %r12,%rdi
   19a17:	41 ff d6             	call   *%r14
   19a1a:	eb 8f                	jmp    199ab <_ULx86_64_resume+0xcb>
   19a1c:	e8 9f 5f ff ff       	call   f9c0 <__stack_chk_fail>
   19a21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   19a28:	00 00 00 
   19a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000019a30 <_ULx86_64_step>:
   19a30:	f3 0f 1e fa          	endbr64 
   19a34:	41 57                	push   %r15
   19a36:	41 56                	push   %r14
   19a38:	41 55                	push   %r13
   19a3a:	41 54                	push   %r12
   19a3c:	55                   	push   %rbp
   19a3d:	53                   	push   %rbx
   19a3e:	48 89 fb             	mov    %rdi,%rbx
   19a41:	48 83 ec 28          	sub    $0x28,%rsp
   19a45:	8b af c8 01 00 00    	mov    0x1c8(%rdi),%ebp
   19a4b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   19a52:	00 00 
   19a54:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19a59:	31 c0                	xor    %eax,%eax
   19a5b:	c7 87 c8 01 00 00 01 	movl   $0x1,0x1c8(%rdi)
   19a62:	00 00 00 
   19a65:	c7 87 b8 01 00 00 00 	movl   $0x0,0x1b8(%rdi)
   19a6c:	00 00 00 
   19a6f:	e8 cc 18 00 00       	call   1b340 <_ULx86_64_dwarf_step>
   19a74:	89 ab c8 01 00 00    	mov    %ebp,0x1c8(%rbx)
   19a7a:	41 89 c4             	mov    %eax,%r12d
   19a7d:	85 c0                	test   %eax,%eax
   19a7f:	79 33                	jns    19ab4 <_ULx86_64_step+0x84>
   19a81:	83 f8 f6             	cmp    $0xfffffff6,%eax
   19a84:	74 2a                	je     19ab0 <_ULx86_64_step+0x80>
   19a86:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19a8b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19a92:	00 00 
   19a94:	0f 85 3a 03 00 00    	jne    19dd4 <_ULx86_64_step+0x3a4>
   19a9a:	48 83 c4 28          	add    $0x28,%rsp
   19a9e:	44 89 e0             	mov    %r12d,%eax
   19aa1:	5b                   	pop    %rbx
   19aa2:	5d                   	pop    %rbp
   19aa3:	41 5c                	pop    %r12
   19aa5:	41 5d                	pop    %r13
   19aa7:	41 5e                	pop    %r14
   19aa9:	41 5f                	pop    %r15
   19aab:	c3                   	ret    
   19aac:	0f 1f 40 00          	nopl   0x0(%rax)
   19ab0:	85 c0                	test   %eax,%eax
   19ab2:	78 1c                	js     19ad0 <_ULx86_64_step+0xa0>
   19ab4:	48 83 bb a0 00 00 00 	cmpq   $0x0,0xa0(%rbx)
   19abb:	00 
   19abc:	75 c8                	jne    19a86 <_ULx86_64_step+0x56>
   19abe:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   19ac5:	00 
   19ac6:	45 31 e4             	xor    %r12d,%r12d
   19ac9:	eb bb                	jmp    19a86 <_ULx86_64_step+0x56>
   19acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ad0:	48 89 df             	mov    %rbx,%rdi
   19ad3:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   19ad7:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   19adb:	c7 83 c8 01 00 00 01 	movl   $0x1,0x1c8(%rbx)
   19ae2:	00 00 00 
   19ae5:	e8 a6 3e 00 00       	call   1d990 <_ULx86_64_is_signal_frame>
   19aea:	85 c0                	test   %eax,%eax
   19aec:	7e 5a                	jle    19b48 <_ULx86_64_step+0x118>
   19aee:	48 89 df             	mov    %rbx,%rdi
   19af1:	e8 ba 3e 00 00       	call   1d9b0 <_ULx86_64_handle_signal_frame>
   19af6:	41 89 c4             	mov    %eax,%r12d
   19af9:	85 c0                	test   %eax,%eax
   19afb:	0f 88 d7 00 00 00    	js     19bd8 <_ULx86_64_step+0x1a8>
   19b01:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   19b08:	4d 85 ff             	test   %r15,%r15
   19b0b:	0f 84 c7 00 00 00    	je     19bd8 <_ULx86_64_step+0x1a8>
   19b11:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
   19b18:	48 85 f6             	test   %rsi,%rsi
   19b1b:	0f 85 bf 00 00 00    	jne    19be0 <_ULx86_64_step+0x1b0>
   19b21:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   19b28:	00 
   19b29:	48 39 f5             	cmp    %rsi,%rbp
   19b2c:	0f 85 54 ff ff ff    	jne    19a86 <_ULx86_64_step+0x56>
   19b32:	4c 39 6b 10          	cmp    %r13,0x10(%rbx)
   19b36:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   19b3b:	44 0f 44 e0          	cmove  %eax,%r12d
   19b3f:	e9 42 ff ff ff       	jmp    19a86 <_ULx86_64_step+0x56>
   19b44:	0f 1f 40 00          	nopl   0x0(%rax)
   19b48:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   19b4c:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   19b51:	e8 5a 40 00 00       	call   1dbb0 <_Ux86_64_get_accessors>
   19b56:	31 c9                	xor    %ecx,%ecx
   19b58:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   19b5c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   19b60:	4c 8b 03             	mov    (%rbx),%r8
   19b63:	49 89 c7             	mov    %rax,%r15
   19b66:	4c 89 f2             	mov    %r14,%rdx
   19b69:	ff 50 18             	call   *0x18(%rax)
   19b6c:	85 c0                	test   %eax,%eax
   19b6e:	78 29                	js     19b99 <_ULx86_64_step+0x169>
   19b70:	48 8b 43 18          	mov    0x18(%rbx),%rax
   19b74:	31 c9                	xor    %ecx,%ecx
   19b76:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   19b7a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   19b7f:	4c 8b 03             	mov    (%rbx),%r8
   19b82:	48 8d 70 08          	lea    0x8(%rax),%rsi
   19b86:	41 ff 57 18          	call   *0x18(%r15)
   19b8a:	85 c0                	test   %eax,%eax
   19b8c:	78 0b                	js     19b99 <_ULx86_64_step+0x169>
   19b8e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19b93:	66 3d ff 25          	cmp    $0x25ff,%ax
   19b97:	74 72                	je     19c0b <_ULx86_64_step+0x1db>
   19b99:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   19ba0:	48 8d 43 40          	lea    0x40(%rbx),%rax
   19ba4:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   19bab:	4d 85 ff             	test   %r15,%r15
   19bae:	0f 85 ab 00 00 00    	jne    19c5f <_ULx86_64_step+0x22f>
   19bb4:	0f 1f 40 00          	nopl   0x0(%rax)
   19bb8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   19bbf:	48 83 c0 10          	add    $0x10,%rax
   19bc3:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   19bca:	00 
   19bcb:	48 39 c2             	cmp    %rax,%rdx
   19bce:	75 e8                	jne    19bb8 <_ULx86_64_step+0x188>
   19bd0:	e9 2c ff ff ff       	jmp    19b01 <_ULx86_64_step+0xd1>
   19bd5:	0f 1f 00             	nopl   (%rax)
   19bd8:	45 31 e4             	xor    %r12d,%r12d
   19bdb:	e9 a6 fe ff ff       	jmp    19a86 <_ULx86_64_step+0x56>
   19be0:	48 8b 83 48 01 00 00 	mov    0x148(%rbx),%rax
   19be7:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   19beb:	a8 02                	test   $0x2,%al
   19bed:	0f 85 6b 01 00 00    	jne    19d5e <_ULx86_64_step+0x32e>
   19bf3:	48 85 c0             	test   %rax,%rax
   19bf6:	0f 84 8c 01 00 00    	je     19d88 <_ULx86_64_step+0x358>
   19bfc:	48 89 73 18          	mov    %rsi,0x18(%rbx)
   19c00:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   19c06:	e9 1e ff ff ff       	jmp    19b29 <_ULx86_64_step+0xf9>
   19c0b:	48 c1 e8 30          	shr    $0x30,%rax
   19c0f:	3c 68                	cmp    $0x68,%al
   19c11:	75 86                	jne    19b99 <_ULx86_64_step+0x169>
   19c13:	80 7c 24 13 e9       	cmpb   $0xe9,0x13(%rsp)
   19c18:	0f 85 7b ff ff ff    	jne    19b99 <_ULx86_64_step+0x169>
   19c1e:	48 b8 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rax
   19c25:	ff ff ff 
   19c28:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   19c2f:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   19c36:	00 00 00 00 
   19c3a:	48 0d 16 01 00 00    	or     $0x116,%rax
   19c40:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   19c47:	48 8b 43 10          	mov    0x10(%rbx),%rax
   19c4b:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
   19c52:	48 83 c0 08          	add    $0x8,%rax
   19c56:	48 89 43 10          	mov    %rax,0x10(%rbx)
   19c5a:	e9 a2 fe ff ff       	jmp    19b01 <_ULx86_64_step+0xd1>
   19c5f:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
   19c66:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   19c6a:	4c 8b 03             	mov    (%rbx),%r8
   19c6d:	a8 02                	test   $0x2,%al
   19c6f:	0f 85 27 01 00 00    	jne    19d9c <_ULx86_64_step+0x36c>
   19c75:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   19c79:	48 85 c0             	test   %rax,%rax
   19c7c:	0f 84 42 01 00 00    	je     19dc4 <_ULx86_64_step+0x394>
   19c82:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   19c87:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   19c8e:	00 00 
   19c90:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   19c95:	31 c9                	xor    %ecx,%ecx
   19c97:	4c 89 fe             	mov    %r15,%rsi
   19c9a:	41 ff d1             	call   *%r9
   19c9d:	41 89 c4             	mov    %eax,%r12d
   19ca0:	85 c0                	test   %eax,%eax
   19ca2:	78 1d                	js     19cc1 <_ULx86_64_step+0x291>
   19ca4:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   19ca8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19cad:	48 39 c2             	cmp    %rax,%rdx
   19cb0:	77 0f                	ja     19cc1 <_ULx86_64_step+0x291>
   19cb2:	48 29 d0             	sub    %rdx,%rax
   19cb5:	49 8d 4f 08          	lea    0x8(%r15),%rcx
   19cb9:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
   19cbf:	76 05                	jbe    19cc6 <_ULx86_64_step+0x296>
   19cc1:	31 c9                	xor    %ecx,%ecx
   19cc3:	45 31 ff             	xor    %r15d,%r15d
   19cc6:	48 b8 08 00 00 00 00 	movabs $0xfffe000000000008,%rax
   19ccd:	00 fe ff 
   19cd0:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   19cd7:	48 83 43 10 10       	addq   $0x10,0x10(%rbx)
   19cdc:	48 ba 01 02 00 00 c0 	movabs $0x1ffc000000201,%rdx
   19ce3:	ff 01 00 
   19ce6:	48 09 d0             	or     %rdx,%rax
   19ce9:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   19cf0:	48 8d 43 40          	lea    0x40(%rbx),%rax
   19cf4:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   19cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19d00:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   19d07:	48 83 c0 10          	add    $0x10,%rax
   19d0b:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   19d12:	00 
   19d13:	48 39 c2             	cmp    %rax,%rdx
   19d16:	75 e8                	jne    19d00 <_ULx86_64_step+0x2d0>
   19d18:	80 8b 50 01 00 00 02 	orb    $0x2,0x150(%rbx)
   19d1f:	4c 89 bb a0 00 00 00 	mov    %r15,0xa0(%rbx)
   19d26:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   19d2d:	00 00 00 00 
   19d31:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
   19d38:	00 00 00 00 
   19d3c:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   19d43:	00 00 00 00 
   19d47:	48 89 8b 40 01 00 00 	mov    %rcx,0x140(%rbx)
   19d4e:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   19d55:	00 00 00 00 
   19d59:	e9 aa fd ff ff       	jmp    19b08 <_ULx86_64_step+0xd8>
   19d5e:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19d62:	4c 8b 03             	mov    (%rbx),%r8
   19d65:	31 c9                	xor    %ecx,%ecx
   19d67:	48 89 c7             	mov    %rax,%rdi
   19d6a:	ff 50 20             	call   *0x20(%rax)
   19d6d:	41 89 c4             	mov    %eax,%r12d
   19d70:	45 85 e4             	test   %r12d,%r12d
   19d73:	0f 88 0d fd ff ff    	js     19a86 <_ULx86_64_step+0x56>
   19d79:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   19d7d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   19d83:	e9 a1 fd ff ff       	jmp    19b29 <_ULx86_64_step+0xf9>
   19d88:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19d8c:	4c 8b 03             	mov    (%rbx),%r8
   19d8f:	31 c9                	xor    %ecx,%ecx
   19d91:	48 89 c7             	mov    %rax,%rdi
   19d94:	ff 50 18             	call   *0x18(%rax)
   19d97:	41 89 c4             	mov    %eax,%r12d
   19d9a:	eb d4                	jmp    19d70 <_ULx86_64_step+0x340>
   19d9c:	31 c9                	xor    %ecx,%ecx
   19d9e:	4c 89 f2             	mov    %r14,%rdx
   19da1:	44 89 fe             	mov    %r15d,%esi
   19da4:	ff 57 20             	call   *0x20(%rdi)
   19da7:	41 89 c4             	mov    %eax,%r12d
   19daa:	45 85 e4             	test   %r12d,%r12d
   19dad:	0f 88 d3 fc ff ff    	js     19a86 <_ULx86_64_step+0x56>
   19db3:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   19db8:	4d 85 ff             	test   %r15,%r15
   19dbb:	75 1c                	jne    19dd9 <_ULx86_64_step+0x3a9>
   19dbd:	31 c9                	xor    %ecx,%ecx
   19dbf:	e9 2c ff ff ff       	jmp    19cf0 <_ULx86_64_step+0x2c0>
   19dc4:	31 c9                	xor    %ecx,%ecx
   19dc6:	4c 89 f2             	mov    %r14,%rdx
   19dc9:	4c 89 fe             	mov    %r15,%rsi
   19dcc:	41 ff d1             	call   *%r9
   19dcf:	41 89 c4             	mov    %eax,%r12d
   19dd2:	eb d6                	jmp    19daa <_ULx86_64_step+0x37a>
   19dd4:	e8 e7 5b ff ff       	call   f9c0 <__stack_chk_fail>
   19dd9:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   19ddd:	4c 8b 03             	mov    (%rbx),%r8
   19de0:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   19de4:	e9 9e fe ff ff       	jmp    19c87 <_ULx86_64_step+0x257>

0000000000019de9 <_Ux86_64_getcontext>:
   19de9:	4c 89 67 48          	mov    %r12,0x48(%rdi)
   19ded:	4c 89 6f 50          	mov    %r13,0x50(%rdi)
   19df1:	4c 89 77 58          	mov    %r14,0x58(%rdi)
   19df5:	4c 89 7f 60          	mov    %r15,0x60(%rdi)
   19df9:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   19dfd:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   19e04:	4c 89 47 28          	mov    %r8,0x28(%rdi)
   19e08:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
   19e0c:	48 89 7f 68          	mov    %rdi,0x68(%rdi)
   19e10:	48 89 77 70          	mov    %rsi,0x70(%rdi)
   19e14:	48 89 97 88 00 00 00 	mov    %rdx,0x88(%rdi)
   19e1b:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
   19e22:	48 89 8f 98 00 00 00 	mov    %rcx,0x98(%rdi)
   19e29:	4c 8d 87 e0 00 00 00 	lea    0xe0(%rdi),%r8
   19e30:	4c 89 87 a8 01 00 00 	mov    %r8,0x1a8(%rdi)
   19e37:	41 d9 30             	fnstenv (%r8)
   19e3a:	41 0f ae 58 18       	stmxcsr 0x18(%r8)
   19e3f:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19e44:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   19e4b:	48 8b 04 24          	mov    (%rsp),%rax
   19e4f:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   19e56:	48 31 c0             	xor    %rax,%rax
   19e59:	c3                   	ret    

0000000000019e5a <_Ux86_64_getcontext_trace>:
   19e5a:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   19e5e:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   19e65:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   19e6a:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   19e71:	48 8b 04 24          	mov    (%rsp),%rax
   19e75:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   19e7c:	48 31 c0             	xor    %rax,%rax
   19e7f:	c3                   	ret    

0000000000019e80 <fetch_proc_info>:
   19e80:	41 56                	push   %r14
   19e82:	66 0f ef c0          	pxor   %xmm0,%xmm0
   19e86:	4c 8d b7 58 01 00 00 	lea    0x158(%rdi),%r14
   19e8d:	b9 01 00 00 00       	mov    $0x1,%ecx
   19e92:	41 55                	push   %r13
   19e94:	49 89 f5             	mov    %rsi,%r13
   19e97:	4c 89 f2             	mov    %r14,%rdx
   19e9a:	41 54                	push   %r12
   19e9c:	55                   	push   %rbp
   19e9d:	48 89 fd             	mov    %rdi,%rbp
   19ea0:	48 83 ec 08          	sub    $0x8,%rsp
   19ea4:	0f b6 87 50 01 00 00 	movzbl 0x150(%rdi),%eax
   19eab:	48 c7 87 98 01 00 00 	movq   $0x0,0x198(%rdi)
   19eb2:	00 00 00 00 
   19eb6:	0f 11 87 58 01 00 00 	movups %xmm0,0x158(%rdi)
   19ebd:	83 e0 02             	and    $0x2,%eax
   19ec0:	0f 11 87 68 01 00 00 	movups %xmm0,0x168(%rdi)
   19ec7:	3c 01                	cmp    $0x1,%al
   19ec9:	0f 11 87 78 01 00 00 	movups %xmm0,0x178(%rdi)
   19ed0:	49 83 d5 ff          	adc    $0xffffffffffffffff,%r13
   19ed4:	0f 11 87 88 01 00 00 	movups %xmm0,0x188(%rdi)
   19edb:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19edf:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   19ee3:	4c 89 ee             	mov    %r13,%rsi
   19ee6:	e8 35 3c 00 00       	call   1db20 <_ULx86_64_Ifind_dynamic_proc_info>
   19eeb:	83 f8 f6             	cmp    $0xfffffff6,%eax
   19eee:	74 30                	je     19f20 <fetch_proc_info+0xa0>
   19ef0:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   19ef7:	0f 87 7d 00 00 00    	ja     19f7a <fetch_proc_info+0xfa>
   19efd:	80 8d 50 01 00 00 0c 	orb    $0xc,0x150(%rbp)
   19f04:	41 89 c4             	mov    %eax,%r12d
   19f07:	85 c0                	test   %eax,%eax
   19f09:	79 50                	jns    19f5b <fetch_proc_info+0xdb>
   19f0b:	48 83 c4 08          	add    $0x8,%rsp
   19f0f:	44 89 e0             	mov    %r12d,%eax
   19f12:	5d                   	pop    %rbp
   19f13:	41 5c                	pop    %r12
   19f15:	41 5d                	pop    %r13
   19f17:	41 5e                	pop    %r14
   19f19:	c3                   	ret    
   19f1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19f20:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   19f24:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   19f28:	b9 01 00 00 00       	mov    $0x1,%ecx
   19f2d:	4c 89 f2             	mov    %r14,%rdx
   19f30:	4c 89 ee             	mov    %r13,%rsi
   19f33:	e8 e8 5d 00 00       	call   1fd20 <_ULx86_64_dwarf_find_proc_info>
   19f38:	41 89 c4             	mov    %eax,%r12d
   19f3b:	85 c0                	test   %eax,%eax
   19f3d:	78 cc                	js     19f0b <fetch_proc_info+0x8b>
   19f3f:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   19f46:	77 32                	ja     19f7a <fetch_proc_info+0xfa>
   19f48:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   19f4f:	83 e0 f3             	and    $0xfffffff3,%eax
   19f52:	83 c8 04             	or     $0x4,%eax
   19f55:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   19f5b:	4c 89 ee             	mov    %r13,%rsi
   19f5e:	48 89 ef             	mov    %rbp,%rdi
   19f61:	ba 01 00 00 00       	mov    $0x1,%edx
   19f66:	e8 a5 39 00 00       	call   1d910 <_ULx86_64_fetch_frame>
   19f6b:	48 83 c4 08          	add    $0x8,%rsp
   19f6f:	44 89 e0             	mov    %r12d,%eax
   19f72:	5d                   	pop    %rbp
   19f73:	41 5c                	pop    %r12
   19f75:	41 5d                	pop    %r13
   19f77:	41 5e                	pop    %r14
   19f79:	c3                   	ret    
   19f7a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   19f80:	eb 89                	jmp    19f0b <fetch_proc_info+0x8b>
   19f82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   19f89:	00 00 00 
   19f8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000019f90 <run_cfi_program>:
   19f90:	41 57                	push   %r15
   19f92:	4d 89 cf             	mov    %r9,%r15
   19f95:	41 56                	push   %r14
   19f97:	4d 89 c6             	mov    %r8,%r14
   19f9a:	41 55                	push   %r13
   19f9c:	49 89 cd             	mov    %rcx,%r13
   19f9f:	41 54                	push   %r12
   19fa1:	49 89 d4             	mov    %rdx,%r12
   19fa4:	55                   	push   %rbp
   19fa5:	48 89 f5             	mov    %rsi,%rbp
   19fa8:	53                   	push   %rbx
   19fa9:	48 83 ec 38          	sub    $0x38,%rsp
   19fad:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   19fb2:	f6 87 80 01 00 00 20 	testb  $0x20,0x180(%rdi)
   19fb9:	0f 84 f1 06 00 00    	je     1a6b0 <run_cfi_program+0x720>
   19fbf:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   19fc6:	00 00 
   19fc8:	48 8b 05 b1 22 01 00 	mov    0x122b1(%rip),%rax        # 2c280 <_ULx86_64_local_addr_space>
   19fcf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19fd4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19fd9:	e8 d2 3b 00 00       	call   1dbb0 <_Ux86_64_get_accessors>
   19fde:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   19fe3:	4d 3b 2c 24          	cmp    (%r12),%r13
   19fe7:	0f 82 e3 00 00 00    	jb     1a0d0 <run_cfi_program+0x140>
   19fed:	49 8b 3e             	mov    (%r14),%rdi
   19ff0:	48 8d 1d 8d 92 00 00 	lea    0x928d(%rip),%rbx        # 23284 <_C_ctype_+0x424>
   19ff7:	4c 8d 1d 82 8f 00 00 	lea    0x8f82(%rip),%r11        # 22f80 <_C_ctype_+0x120>
   19ffe:	4c 39 ff             	cmp    %r15,%rdi
   1a001:	0f 83 c9 00 00 00    	jae    1a0d0 <run_cfi_program+0x140>
   1a007:	0f b6 17             	movzbl (%rdi),%edx
   1a00a:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1a00e:	49 89 06             	mov    %rax,(%r14)
   1a011:	89 d1                	mov    %edx,%ecx
   1a013:	81 e1 c0 00 00 00    	and    $0xc0,%ecx
   1a019:	0f 84 79 06 00 00    	je     1a698 <run_cfi_program+0x708>
   1a01f:	89 d6                	mov    %edx,%esi
   1a021:	83 e2 3f             	and    $0x3f,%edx
   1a024:	83 e6 3f             	and    $0x3f,%esi
   1a027:	80 f9 c0             	cmp    $0xc0,%cl
   1a02a:	0f 87 5a 09 00 00    	ja     1a98a <run_cfi_program+0x9fa>
   1a030:	0f b6 c9             	movzbl %cl,%ecx
   1a033:	49 63 0c 8b          	movslq (%r11,%rcx,4),%rcx
   1a037:	4c 01 d9             	add    %r11,%rcx
   1a03a:	3e ff e1             	notrack jmp *%rcx
   1a03d:	40 80 fe 10          	cmp    $0x10,%sil
   1a041:	0f 86 ca 05 00 00    	jbe    1a611 <run_cfi_program+0x681>
   1a047:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1a04c:	48 83 c4 38          	add    $0x38,%rsp
   1a050:	5b                   	pop    %rbx
   1a051:	5d                   	pop    %rbp
   1a052:	41 5c                	pop    %r12
   1a054:	41 5d                	pop    %r13
   1a056:	41 5e                	pop    %r14
   1a058:	41 5f                	pop    %r15
   1a05a:	c3                   	ret    
   1a05b:	31 c9                	xor    %ecx,%ecx
   1a05d:	31 d2                	xor    %edx,%edx
   1a05f:	0f b6 38             	movzbl (%rax),%edi
   1a062:	48 83 c0 01          	add    $0x1,%rax
   1a066:	49 89 06             	mov    %rax,(%r14)
   1a069:	48 89 fe             	mov    %rdi,%rsi
   1a06c:	83 e6 7f             	and    $0x7f,%esi
   1a06f:	48 d3 e6             	shl    %cl,%rsi
   1a072:	48 83 c1 07          	add    $0x7,%rcx
   1a076:	48 09 f2             	or     %rsi,%rdx
   1a079:	40 84 ff             	test   %dil,%dil
   1a07c:	78 e1                	js     1a05f <run_cfi_program+0xcf>
   1a07e:	48 83 fa 10          	cmp    $0x10,%rdx
   1a082:	0f 87 4e 09 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a088:	c6 84 15 d0 00 00 00 	movb   $0x5,0xd0(%rbp,%rdx,1)
   1a08f:	05 
   1a090:	31 c9                	xor    %ecx,%ecx
   1a092:	31 f6                	xor    %esi,%esi
   1a094:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1a09b:	00 
   1a09c:	49 8b 3e             	mov    (%r14),%rdi
   1a09f:	90                   	nop
   1a0a0:	0f b6 17             	movzbl (%rdi),%edx
   1a0a3:	48 83 c7 01          	add    $0x1,%rdi
   1a0a7:	49 89 3e             	mov    %rdi,(%r14)
   1a0aa:	48 89 d0             	mov    %rdx,%rax
   1a0ad:	83 e0 7f             	and    $0x7f,%eax
   1a0b0:	48 d3 e0             	shl    %cl,%rax
   1a0b3:	48 83 c1 07          	add    $0x7,%rcx
   1a0b7:	48 09 c6             	or     %rax,%rsi
   1a0ba:	84 d2                	test   %dl,%dl
   1a0bc:	78 e2                	js     1a0a0 <run_cfi_program+0x110>
   1a0be:	48 01 f7             	add    %rsi,%rdi
   1a0c1:	49 89 3e             	mov    %rdi,(%r14)
   1a0c4:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a0c8:	0f 83 30 ff ff ff    	jae    19ffe <run_cfi_program+0x6e>
   1a0ce:	66 90                	xchg   %ax,%ax
   1a0d0:	31 c0                	xor    %eax,%eax
   1a0d2:	48 83 c4 38          	add    $0x38,%rsp
   1a0d6:	5b                   	pop    %rbx
   1a0d7:	5d                   	pop    %rbp
   1a0d8:	41 5c                	pop    %r12
   1a0da:	41 5d                	pop    %r13
   1a0dc:	41 5e                	pop    %r14
   1a0de:	41 5f                	pop    %r15
   1a0e0:	c3                   	ret    
   1a0e1:	31 c9                	xor    %ecx,%ecx
   1a0e3:	31 d2                	xor    %edx,%edx
   1a0e5:	0f b6 38             	movzbl (%rax),%edi
   1a0e8:	48 83 c0 01          	add    $0x1,%rax
   1a0ec:	49 89 06             	mov    %rax,(%r14)
   1a0ef:	48 89 fe             	mov    %rdi,%rsi
   1a0f2:	83 e6 7f             	and    $0x7f,%esi
   1a0f5:	48 d3 e6             	shl    %cl,%rsi
   1a0f8:	48 83 c1 07          	add    $0x7,%rcx
   1a0fc:	48 09 f2             	or     %rsi,%rdx
   1a0ff:	40 84 ff             	test   %dil,%dil
   1a102:	78 e1                	js     1a0e5 <run_cfi_program+0x155>
   1a104:	48 83 fa 10          	cmp    $0x10,%rdx
   1a108:	0f 87 c8 08 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a10e:	31 c9                	xor    %ecx,%ecx
   1a110:	45 31 c0             	xor    %r8d,%r8d
   1a113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a118:	0f b6 38             	movzbl (%rax),%edi
   1a11b:	48 83 c0 01          	add    $0x1,%rax
   1a11f:	49 89 06             	mov    %rax,(%r14)
   1a122:	48 89 fe             	mov    %rdi,%rsi
   1a125:	83 e6 7f             	and    $0x7f,%esi
   1a128:	48 d3 e6             	shl    %cl,%rsi
   1a12b:	48 83 c1 07          	add    $0x7,%rcx
   1a12f:	49 09 f0             	or     %rsi,%r8
   1a132:	40 84 ff             	test   %dil,%dil
   1a135:	78 e1                	js     1a118 <run_cfi_program+0x188>
   1a137:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a13c:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1a141:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   1a148:	02 
   1a149:	49 f7 d8             	neg    %r8
   1a14c:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1a153:	00 
   1a154:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a158:	0f 83 a2 00 00 00    	jae    1a200 <run_cfi_program+0x270>
   1a15e:	31 c0                	xor    %eax,%eax
   1a160:	e9 6d ff ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a165:	31 c9                	xor    %ecx,%ecx
   1a167:	31 d2                	xor    %edx,%edx
   1a169:	0f b6 38             	movzbl (%rax),%edi
   1a16c:	48 83 c0 01          	add    $0x1,%rax
   1a170:	49 89 06             	mov    %rax,(%r14)
   1a173:	48 89 fe             	mov    %rdi,%rsi
   1a176:	83 e6 7f             	and    $0x7f,%esi
   1a179:	48 d3 e6             	shl    %cl,%rsi
   1a17c:	48 83 c1 07          	add    $0x7,%rcx
   1a180:	48 09 f2             	or     %rsi,%rdx
   1a183:	40 84 ff             	test   %dil,%dil
   1a186:	78 e1                	js     1a169 <run_cfi_program+0x1d9>
   1a188:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   1a18c:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a190:	73 6e                	jae    1a200 <run_cfi_program+0x270>
   1a192:	31 c0                	xor    %eax,%eax
   1a194:	e9 39 ff ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a199:	31 c9                	xor    %ecx,%ecx
   1a19b:	31 d2                	xor    %edx,%edx
   1a19d:	0f b6 38             	movzbl (%rax),%edi
   1a1a0:	48 83 c0 01          	add    $0x1,%rax
   1a1a4:	49 89 06             	mov    %rax,(%r14)
   1a1a7:	48 89 fe             	mov    %rdi,%rsi
   1a1aa:	83 e6 7f             	and    $0x7f,%esi
   1a1ad:	48 d3 e6             	shl    %cl,%rsi
   1a1b0:	48 83 c1 07          	add    $0x7,%rcx
   1a1b4:	48 09 f2             	or     %rsi,%rdx
   1a1b7:	40 84 ff             	test   %dil,%dil
   1a1ba:	78 e1                	js     1a19d <run_cfi_program+0x20d>
   1a1bc:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1a1c0:	77 12                	ja     1a1d4 <run_cfi_program+0x244>
   1a1c2:	83 e7 40             	and    $0x40,%edi
   1a1c5:	74 0d                	je     1a1d4 <run_cfi_program+0x244>
   1a1c7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a1ce:	48 d3 e0             	shl    %cl,%rax
   1a1d1:	48 09 c2             	or     %rax,%rdx
   1a1d4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a1d9:	48 0f af 50 28       	imul   0x28(%rax),%rdx
   1a1de:	c6 85 e2 00 00 00 00 	movb   $0x0,0xe2(%rbp)
   1a1e5:	48 89 95 78 01 00 00 	mov    %rdx,0x178(%rbp)
   1a1ec:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a1f0:	0f 82 da fe ff ff    	jb     1a0d0 <run_cfi_program+0x140>
   1a1f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a1fd:	00 00 00 
   1a200:	49 8b 3e             	mov    (%r14),%rdi
   1a203:	4c 39 ff             	cmp    %r15,%rdi
   1a206:	0f 82 fb fd ff ff    	jb     1a007 <run_cfi_program+0x77>
   1a20c:	e9 bf fe ff ff       	jmp    1a0d0 <run_cfi_program+0x140>
   1a211:	31 c9                	xor    %ecx,%ecx
   1a213:	31 d2                	xor    %edx,%edx
   1a215:	0f b6 38             	movzbl (%rax),%edi
   1a218:	48 83 c0 01          	add    $0x1,%rax
   1a21c:	49 89 06             	mov    %rax,(%r14)
   1a21f:	48 89 fe             	mov    %rdi,%rsi
   1a222:	83 e6 7f             	and    $0x7f,%esi
   1a225:	48 d3 e6             	shl    %cl,%rsi
   1a228:	48 83 c1 07          	add    $0x7,%rcx
   1a22c:	48 09 f2             	or     %rsi,%rdx
   1a22f:	40 84 ff             	test   %dil,%dil
   1a232:	78 e1                	js     1a215 <run_cfi_program+0x285>
   1a234:	48 83 fa 10          	cmp    $0x10,%rdx
   1a238:	0f 87 98 07 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a23e:	31 c9                	xor    %ecx,%ecx
   1a240:	45 31 c0             	xor    %r8d,%r8d
   1a243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a248:	0f b6 38             	movzbl (%rax),%edi
   1a24b:	48 83 c0 01          	add    $0x1,%rax
   1a24f:	49 89 06             	mov    %rax,(%r14)
   1a252:	48 89 fe             	mov    %rdi,%rsi
   1a255:	83 e6 7f             	and    $0x7f,%esi
   1a258:	48 d3 e6             	shl    %cl,%rsi
   1a25b:	48 83 c1 07          	add    $0x7,%rcx
   1a25f:	49 09 f0             	or     %rsi,%r8
   1a262:	40 84 ff             	test   %dil,%dil
   1a265:	78 e1                	js     1a248 <run_cfi_program+0x2b8>
   1a267:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1a26b:	77 12                	ja     1a27f <run_cfi_program+0x2ef>
   1a26d:	83 e7 40             	and    $0x40,%edi
   1a270:	74 0d                	je     1a27f <run_cfi_program+0x2ef>
   1a272:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a279:	48 d3 e0             	shl    %cl,%rax
   1a27c:	49 09 c0             	or     %rax,%r8
   1a27f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a284:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1a28b:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1a290:	b8 03 00 00 00       	mov    $0x3,%eax
   1a295:	66 89 85 e1 00 00 00 	mov    %ax,0xe1(%rbp)
   1a29c:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   1a2a3:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a2a7:	0f 83 53 ff ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a2ad:	31 c0                	xor    %eax,%eax
   1a2af:	e9 1e fe ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a2b4:	31 c9                	xor    %ecx,%ecx
   1a2b6:	31 d2                	xor    %edx,%edx
   1a2b8:	0f b6 38             	movzbl (%rax),%edi
   1a2bb:	48 83 c0 01          	add    $0x1,%rax
   1a2bf:	49 89 06             	mov    %rax,(%r14)
   1a2c2:	48 89 fe             	mov    %rdi,%rsi
   1a2c5:	83 e6 7f             	and    $0x7f,%esi
   1a2c8:	48 d3 e6             	shl    %cl,%rsi
   1a2cb:	48 83 c1 07          	add    $0x7,%rcx
   1a2cf:	48 09 f2             	or     %rsi,%rdx
   1a2d2:	40 84 ff             	test   %dil,%dil
   1a2d5:	78 e1                	js     1a2b8 <run_cfi_program+0x328>
   1a2d7:	48 83 fa 10          	cmp    $0x10,%rdx
   1a2db:	0f 87 f5 06 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a2e1:	31 c9                	xor    %ecx,%ecx
   1a2e3:	45 31 c0             	xor    %r8d,%r8d
   1a2e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a2ed:	00 00 00 
   1a2f0:	0f b6 38             	movzbl (%rax),%edi
   1a2f3:	48 83 c0 01          	add    $0x1,%rax
   1a2f7:	49 89 06             	mov    %rax,(%r14)
   1a2fa:	48 89 fe             	mov    %rdi,%rsi
   1a2fd:	83 e6 7f             	and    $0x7f,%esi
   1a300:	48 d3 e6             	shl    %cl,%rsi
   1a303:	48 83 c1 07          	add    $0x7,%rcx
   1a307:	49 09 f0             	or     %rsi,%r8
   1a30a:	40 84 ff             	test   %dil,%dil
   1a30d:	78 e1                	js     1a2f0 <run_cfi_program+0x360>
   1a30f:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1a313:	77 1b                	ja     1a330 <run_cfi_program+0x3a0>
   1a315:	83 e7 40             	and    $0x40,%edi
   1a318:	74 16                	je     1a330 <run_cfi_program+0x3a0>
   1a31a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1a321:	48 d3 e0             	shl    %cl,%rax
   1a324:	49 09 c0             	or     %rax,%r8
   1a327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a32e:	00 00 
   1a330:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a335:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1a33a:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   1a341:	02 
   1a342:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1a349:	00 
   1a34a:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a34e:	0f 83 ac fe ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a354:	31 c0                	xor    %eax,%eax
   1a356:	e9 77 fd ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a35b:	31 c9                	xor    %ecx,%ecx
   1a35d:	31 d2                	xor    %edx,%edx
   1a35f:	0f b6 38             	movzbl (%rax),%edi
   1a362:	48 83 c0 01          	add    $0x1,%rax
   1a366:	49 89 06             	mov    %rax,(%r14)
   1a369:	48 89 fe             	mov    %rdi,%rsi
   1a36c:	83 e6 7f             	and    $0x7f,%esi
   1a36f:	48 d3 e6             	shl    %cl,%rsi
   1a372:	48 83 c1 07          	add    $0x7,%rcx
   1a376:	48 09 f2             	or     %rsi,%rdx
   1a379:	40 84 ff             	test   %dil,%dil
   1a37c:	78 e1                	js     1a35f <run_cfi_program+0x3cf>
   1a37e:	48 83 fa 10          	cmp    $0x10,%rdx
   1a382:	0f 87 4e 06 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a388:	c6 84 15 d0 00 00 00 	movb   $0x4,0xd0(%rbp,%rdx,1)
   1a38f:	04 
   1a390:	31 c9                	xor    %ecx,%ecx
   1a392:	31 f6                	xor    %esi,%esi
   1a394:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1a39b:	00 
   1a39c:	49 8b 3e             	mov    (%r14),%rdi
   1a39f:	90                   	nop
   1a3a0:	0f b6 17             	movzbl (%rdi),%edx
   1a3a3:	48 83 c7 01          	add    $0x1,%rdi
   1a3a7:	49 89 3e             	mov    %rdi,(%r14)
   1a3aa:	48 89 d0             	mov    %rdx,%rax
   1a3ad:	83 e0 7f             	and    $0x7f,%eax
   1a3b0:	48 d3 e0             	shl    %cl,%rax
   1a3b3:	48 83 c1 07          	add    $0x7,%rcx
   1a3b7:	48 09 c6             	or     %rax,%rsi
   1a3ba:	84 d2                	test   %dl,%dl
   1a3bc:	78 e2                	js     1a3a0 <run_cfi_program+0x410>
   1a3be:	48 01 f7             	add    %rsi,%rdi
   1a3c1:	49 89 3e             	mov    %rdi,(%r14)
   1a3c4:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a3c8:	0f 83 30 fc ff ff    	jae    19ffe <run_cfi_program+0x6e>
   1a3ce:	e9 fd fc ff ff       	jmp    1a0d0 <run_cfi_program+0x140>
   1a3d3:	31 c9                	xor    %ecx,%ecx
   1a3d5:	31 d2                	xor    %edx,%edx
   1a3d7:	0f b6 38             	movzbl (%rax),%edi
   1a3da:	48 83 c0 01          	add    $0x1,%rax
   1a3de:	49 89 06             	mov    %rax,(%r14)
   1a3e1:	48 89 fe             	mov    %rdi,%rsi
   1a3e4:	83 e6 7f             	and    $0x7f,%esi
   1a3e7:	48 d3 e6             	shl    %cl,%rsi
   1a3ea:	48 83 c1 07          	add    $0x7,%rcx
   1a3ee:	48 09 f2             	or     %rsi,%rdx
   1a3f1:	40 84 ff             	test   %dil,%dil
   1a3f4:	78 e1                	js     1a3d7 <run_cfi_program+0x447>
   1a3f6:	e9 e3 fd ff ff       	jmp    1a1de <run_cfi_program+0x24e>
   1a3fb:	31 c9                	xor    %ecx,%ecx
   1a3fd:	31 d2                	xor    %edx,%edx
   1a3ff:	0f b6 38             	movzbl (%rax),%edi
   1a402:	48 83 c0 01          	add    $0x1,%rax
   1a406:	49 89 06             	mov    %rax,(%r14)
   1a409:	48 89 fe             	mov    %rdi,%rsi
   1a40c:	83 e6 7f             	and    $0x7f,%esi
   1a40f:	48 d3 e6             	shl    %cl,%rsi
   1a412:	48 83 c1 07          	add    $0x7,%rcx
   1a416:	48 09 f2             	or     %rsi,%rdx
   1a419:	40 84 ff             	test   %dil,%dil
   1a41c:	78 e1                	js     1a3ff <run_cfi_program+0x46f>
   1a41e:	48 83 fa 10          	cmp    $0x10,%rdx
   1a422:	0f 87 ae 05 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a428:	c6 85 e1 00 00 00 03 	movb   $0x3,0xe1(%rbp)
   1a42f:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1a436:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a43a:	0f 83 c0 fd ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a440:	31 c0                	xor    %eax,%eax
   1a442:	e9 8b fc ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a447:	31 c9                	xor    %ecx,%ecx
   1a449:	31 d2                	xor    %edx,%edx
   1a44b:	0f b6 38             	movzbl (%rax),%edi
   1a44e:	48 83 c0 01          	add    $0x1,%rax
   1a452:	49 89 06             	mov    %rax,(%r14)
   1a455:	48 89 fe             	mov    %rdi,%rsi
   1a458:	83 e6 7f             	and    $0x7f,%esi
   1a45b:	48 d3 e6             	shl    %cl,%rsi
   1a45e:	48 83 c1 07          	add    $0x7,%rcx
   1a462:	48 09 f2             	or     %rsi,%rdx
   1a465:	40 84 ff             	test   %dil,%dil
   1a468:	78 e1                	js     1a44b <run_cfi_program+0x4bb>
   1a46a:	48 83 fa 10          	cmp    $0x10,%rdx
   1a46e:	0f 87 62 05 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a474:	31 c9                	xor    %ecx,%ecx
   1a476:	45 31 c0             	xor    %r8d,%r8d
   1a479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a480:	0f b6 38             	movzbl (%rax),%edi
   1a483:	48 83 c0 01          	add    $0x1,%rax
   1a487:	49 89 06             	mov    %rax,(%r14)
   1a48a:	48 89 fe             	mov    %rdi,%rsi
   1a48d:	83 e6 7f             	and    $0x7f,%esi
   1a490:	48 d3 e6             	shl    %cl,%rsi
   1a493:	48 83 c1 07          	add    $0x7,%rcx
   1a497:	49 09 f0             	or     %rsi,%r8
   1a49a:	40 84 ff             	test   %dil,%dil
   1a49d:	78 e1                	js     1a480 <run_cfi_program+0x4f0>
   1a49f:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1a4a6:	ba 03 00 00 00       	mov    $0x3,%edx
   1a4ab:	66 89 95 e1 00 00 00 	mov    %dx,0xe1(%rbp)
   1a4b2:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   1a4b9:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a4bd:	0f 83 3d fd ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a4c3:	31 c0                	xor    %eax,%eax
   1a4c5:	e9 08 fc ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a4ca:	31 c9                	xor    %ecx,%ecx
   1a4cc:	31 d2                	xor    %edx,%edx
   1a4ce:	0f b6 38             	movzbl (%rax),%edi
   1a4d1:	48 83 c0 01          	add    $0x1,%rax
   1a4d5:	49 89 06             	mov    %rax,(%r14)
   1a4d8:	48 89 fe             	mov    %rdi,%rsi
   1a4db:	83 e6 7f             	and    $0x7f,%esi
   1a4de:	48 d3 e6             	shl    %cl,%rsi
   1a4e1:	48 83 c1 07          	add    $0x7,%rcx
   1a4e5:	48 09 f2             	or     %rsi,%rdx
   1a4e8:	40 84 ff             	test   %dil,%dil
   1a4eb:	78 e1                	js     1a4ce <run_cfi_program+0x53e>
   1a4ed:	48 83 fa 10          	cmp    $0x10,%rdx
   1a4f1:	0f 87 df 04 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a4f7:	31 c9                	xor    %ecx,%ecx
   1a4f9:	45 31 c0             	xor    %r8d,%r8d
   1a4fc:	0f 1f 40 00          	nopl   0x0(%rax)
   1a500:	0f b6 38             	movzbl (%rax),%edi
   1a503:	48 83 c0 01          	add    $0x1,%rax
   1a507:	49 89 06             	mov    %rax,(%r14)
   1a50a:	48 89 fe             	mov    %rdi,%rsi
   1a50d:	83 e6 7f             	and    $0x7f,%esi
   1a510:	48 d3 e6             	shl    %cl,%rsi
   1a513:	48 83 c1 07          	add    $0x7,%rcx
   1a517:	49 09 f0             	or     %rsi,%r8
   1a51a:	40 84 ff             	test   %dil,%dil
   1a51d:	78 e1                	js     1a500 <run_cfi_program+0x570>
   1a51f:	c6 84 15 d0 00 00 00 	movb   $0x3,0xd0(%rbp,%rdx,1)
   1a526:	03 
   1a527:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1a52e:	00 
   1a52f:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a533:	0f 83 c7 fc ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a539:	31 c0                	xor    %eax,%eax
   1a53b:	e9 92 fb ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a540:	31 c9                	xor    %ecx,%ecx
   1a542:	31 d2                	xor    %edx,%edx
   1a544:	0f b6 38             	movzbl (%rax),%edi
   1a547:	48 83 c0 01          	add    $0x1,%rax
   1a54b:	49 89 06             	mov    %rax,(%r14)
   1a54e:	48 89 fe             	mov    %rdi,%rsi
   1a551:	83 e6 7f             	and    $0x7f,%esi
   1a554:	48 d3 e6             	shl    %cl,%rsi
   1a557:	48 83 c1 07          	add    $0x7,%rcx
   1a55b:	48 09 f2             	or     %rsi,%rdx
   1a55e:	40 84 ff             	test   %dil,%dil
   1a561:	78 e1                	js     1a544 <run_cfi_program+0x5b4>
   1a563:	48 83 fa 10          	cmp    $0x10,%rdx
   1a567:	0f 87 69 04 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a56d:	c6 84 15 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rdx,1)
   1a574:	01 
   1a575:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1a57c:	00 00 00 00 00 
   1a581:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a585:	0f 83 75 fc ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a58b:	31 c0                	xor    %eax,%eax
   1a58d:	e9 40 fb ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a592:	31 c9                	xor    %ecx,%ecx
   1a594:	31 d2                	xor    %edx,%edx
   1a596:	0f b6 38             	movzbl (%rax),%edi
   1a599:	48 83 c0 01          	add    $0x1,%rax
   1a59d:	49 89 06             	mov    %rax,(%r14)
   1a5a0:	48 89 fe             	mov    %rdi,%rsi
   1a5a3:	83 e6 7f             	and    $0x7f,%esi
   1a5a6:	48 d3 e6             	shl    %cl,%rsi
   1a5a9:	48 83 c1 07          	add    $0x7,%rcx
   1a5ad:	48 09 f2             	or     %rsi,%rdx
   1a5b0:	40 84 ff             	test   %dil,%dil
   1a5b3:	78 e1                	js     1a596 <run_cfi_program+0x606>
   1a5b5:	48 83 fa 10          	cmp    $0x10,%rdx
   1a5b9:	0f 87 17 04 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a5bf:	c6 84 15 d0 00 00 00 	movb   $0x0,0xd0(%rbp,%rdx,1)
   1a5c6:	00 
   1a5c7:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1a5ce:	00 00 00 00 00 
   1a5d3:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a5d7:	0f 83 23 fc ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a5dd:	31 c0                	xor    %eax,%eax
   1a5df:	e9 ee fa ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a5e4:	31 c9                	xor    %ecx,%ecx
   1a5e6:	31 d2                	xor    %edx,%edx
   1a5e8:	0f b6 38             	movzbl (%rax),%edi
   1a5eb:	48 83 c0 01          	add    $0x1,%rax
   1a5ef:	49 89 06             	mov    %rax,(%r14)
   1a5f2:	48 89 fe             	mov    %rdi,%rsi
   1a5f5:	83 e6 7f             	and    $0x7f,%esi
   1a5f8:	48 d3 e6             	shl    %cl,%rsi
   1a5fb:	48 83 c1 07          	add    $0x7,%rcx
   1a5ff:	48 09 f2             	or     %rsi,%rdx
   1a602:	40 84 ff             	test   %dil,%dil
   1a605:	78 e1                	js     1a5e8 <run_cfi_program+0x658>
   1a607:	48 83 fa 10          	cmp    $0x10,%rdx
   1a60b:	0f 87 36 fa ff ff    	ja     1a047 <run_cfi_program+0xb7>
   1a611:	0f b6 44 15 18       	movzbl 0x18(%rbp,%rdx,1),%eax
   1a616:	88 84 15 d0 00 00 00 	mov    %al,0xd0(%rbp,%rdx,1)
   1a61d:	48 8d 44 d5 00       	lea    0x0(%rbp,%rdx,8),%rax
   1a622:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1a626:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
   1a62d:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a631:	0f 83 c9 fb ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a637:	31 c0                	xor    %eax,%eax
   1a639:	e9 94 fa ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a63e:	31 c9                	xor    %ecx,%ecx
   1a640:	31 d2                	xor    %edx,%edx
   1a642:	0f b6 38             	movzbl (%rax),%edi
   1a645:	48 83 c0 01          	add    $0x1,%rax
   1a649:	49 89 06             	mov    %rax,(%r14)
   1a64c:	48 89 fe             	mov    %rdi,%rsi
   1a64f:	83 e6 7f             	and    $0x7f,%esi
   1a652:	48 d3 e6             	shl    %cl,%rsi
   1a655:	48 83 c1 07          	add    $0x7,%rcx
   1a659:	48 09 f2             	or     %rsi,%rdx
   1a65c:	40 84 ff             	test   %dil,%dil
   1a65f:	78 e1                	js     1a642 <run_cfi_program+0x6b2>
   1a661:	48 83 fa 10          	cmp    $0x10,%rdx
   1a665:	0f 87 6b 03 00 00    	ja     1a9d6 <run_cfi_program+0xa46>
   1a66b:	31 c9                	xor    %ecx,%ecx
   1a66d:	45 31 c0             	xor    %r8d,%r8d
   1a670:	0f b6 38             	movzbl (%rax),%edi
   1a673:	48 83 c0 01          	add    $0x1,%rax
   1a677:	49 89 06             	mov    %rax,(%r14)
   1a67a:	48 89 fe             	mov    %rdi,%rsi
   1a67d:	83 e6 7f             	and    $0x7f,%esi
   1a680:	48 d3 e6             	shl    %cl,%rsi
   1a683:	48 83 c1 07          	add    $0x7,%rcx
   1a687:	49 09 f0             	or     %rsi,%r8
   1a68a:	40 84 ff             	test   %dil,%dil
   1a68d:	78 e1                	js     1a670 <run_cfi_program+0x6e0>
   1a68f:	e9 9c fc ff ff       	jmp    1a330 <run_cfi_program+0x3a0>
   1a694:	0f 1f 40 00          	nopl   0x0(%rax)
   1a698:	80 fa 3c             	cmp    $0x3c,%dl
   1a69b:	0f 87 e9 02 00 00    	ja     1a98a <run_cfi_program+0x9fa>
   1a6a1:	48 63 14 93          	movslq (%rbx,%rdx,4),%rdx
   1a6a5:	48 01 da             	add    %rbx,%rdx
   1a6a8:	3e ff e2             	notrack jmp *%rdx
   1a6ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a6b0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a6b5:	48 8b 58 08          	mov    0x8(%rax),%rbx
   1a6b9:	48 8b 00             	mov    (%rax),%rax
   1a6bc:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1a6c1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a6c6:	e9 09 f9 ff ff       	jmp    19fd4 <run_cfi_program+0x44>
   1a6cb:	c6 85 e1 00 00 00 04 	movb   $0x4,0xe1(%rbp)
   1a6d2:	31 c9                	xor    %ecx,%ecx
   1a6d4:	31 f6                	xor    %esi,%esi
   1a6d6:	48 89 85 70 01 00 00 	mov    %rax,0x170(%rbp)
   1a6dd:	49 8b 3e             	mov    (%r14),%rdi
   1a6e0:	0f b6 17             	movzbl (%rdi),%edx
   1a6e3:	48 83 c7 01          	add    $0x1,%rdi
   1a6e7:	49 89 3e             	mov    %rdi,(%r14)
   1a6ea:	48 89 d0             	mov    %rdx,%rax
   1a6ed:	83 e0 7f             	and    $0x7f,%eax
   1a6f0:	48 d3 e0             	shl    %cl,%rax
   1a6f3:	48 83 c1 07          	add    $0x7,%rcx
   1a6f7:	48 09 c6             	or     %rax,%rsi
   1a6fa:	84 d2                	test   %dl,%dl
   1a6fc:	78 e2                	js     1a6e0 <run_cfi_program+0x750>
   1a6fe:	48 01 f7             	add    %rsi,%rdi
   1a701:	49 89 3e             	mov    %rdi,(%r14)
   1a704:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a708:	0f 83 f0 f8 ff ff    	jae    19ffe <run_cfi_program+0x6e>
   1a70e:	e9 bd f9 ff ff       	jmp    1a0d0 <run_cfi_program+0x140>
   1a713:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1a718:	48 8b 30             	mov    (%rax),%rsi
   1a71b:	48 85 f6             	test   %rsi,%rsi
   1a71e:	0f 84 23 f9 ff ff    	je     1a047 <run_cfi_program+0xb7>
   1a724:	f3 0f 6f 5e 08       	movdqu 0x8(%rsi),%xmm3
   1a729:	f3 0f 6f 66 18       	movdqu 0x18(%rsi),%xmm4
   1a72e:	f3 0f 6f 6e 28       	movdqu 0x28(%rsi),%xmm5
   1a733:	f3 0f 6f 76 38       	movdqu 0x38(%rsi),%xmm6
   1a738:	f3 0f 6f 7e 48       	movdqu 0x48(%rsi),%xmm7
   1a73d:	48 8b 86 b8 00 00 00 	mov    0xb8(%rsi),%rax
   1a744:	0f 11 9d c8 00 00 00 	movups %xmm3,0xc8(%rbp)
   1a74b:	f3 0f 6f 86 a8 00 00 	movdqu 0xa8(%rsi),%xmm0
   1a752:	00 
   1a753:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   1a758:	0f 11 a5 d8 00 00 00 	movups %xmm4,0xd8(%rbp)
   1a75f:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   1a764:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   1a769:	0f 11 ad e8 00 00 00 	movups %xmm5,0xe8(%rbp)
   1a770:	0f 11 b5 f8 00 00 00 	movups %xmm6,0xf8(%rbp)
   1a777:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   1a77c:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   1a783:	00 
   1a784:	0f 11 bd 08 01 00 00 	movups %xmm7,0x108(%rbp)
   1a78b:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   1a792:	00 
   1a793:	48 89 85 78 01 00 00 	mov    %rax,0x178(%rbp)
   1a79a:	48 8b 06             	mov    (%rsi),%rax
   1a79d:	0f 11 9d 18 01 00 00 	movups %xmm3,0x118(%rbp)
   1a7a4:	0f 11 a5 28 01 00 00 	movups %xmm4,0x128(%rbp)
   1a7ab:	0f 11 ad 38 01 00 00 	movups %xmm5,0x138(%rbp)
   1a7b2:	0f 11 b5 48 01 00 00 	movups %xmm6,0x148(%rbp)
   1a7b9:	0f 11 bd 58 01 00 00 	movups %xmm7,0x158(%rbp)
   1a7c0:	0f 11 85 68 01 00 00 	movups %xmm0,0x168(%rbp)
   1a7c7:	48 89 07             	mov    %rax,(%rdi)
   1a7ca:	48 8d 3d 6f 12 02 00 	lea    0x2126f(%rip),%rdi        # 3ba40 <dwarf_reg_state_pool>
   1a7d1:	e8 ea 30 00 00       	call   1d8c0 <_UIx86_64__mempool_free>
   1a7d6:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a7da:	0f 82 f0 f8 ff ff    	jb     1a0d0 <run_cfi_program+0x140>
   1a7e0:	49 8b 3e             	mov    (%r14),%rdi
   1a7e3:	4c 8d 1d 96 87 00 00 	lea    0x8796(%rip),%r11        # 22f80 <_C_ctype_+0x120>
   1a7ea:	4c 39 ff             	cmp    %r15,%rdi
   1a7ed:	0f 82 14 f8 ff ff    	jb     1a007 <run_cfi_program+0x77>
   1a7f3:	31 c0                	xor    %eax,%eax
   1a7f5:	e9 d8 f8 ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a7fa:	0f b6 00             	movzbl (%rax),%eax
   1a7fd:	48 83 c7 02          	add    $0x2,%rdi
   1a801:	49 89 3e             	mov    %rdi,(%r14)
   1a804:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   1a809:	48 0f af 47 20       	imul   0x20(%rdi),%rax
   1a80e:	49 03 04 24          	add    (%r12),%rax
   1a812:	49 89 04 24          	mov    %rax,(%r12)
   1a816:	4c 39 e8             	cmp    %r13,%rax
   1a819:	0f 86 e1 f9 ff ff    	jbe    1a200 <run_cfi_program+0x270>
   1a81f:	31 c0                	xor    %eax,%eax
   1a821:	e9 ac f8 ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a826:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a82b:	48 83 ec 08          	sub    $0x8,%rsp
   1a82f:	4d 89 e1             	mov    %r12,%r9
   1a832:	4c 89 f2             	mov    %r14,%rdx
   1a835:	0f b6 48 44          	movzbl 0x44(%rax),%ecx
   1a839:	ff 74 24 20          	push   0x20(%rsp)
   1a83d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1a842:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1a847:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1a84c:	4c 8d 80 58 01 00 00 	lea    0x158(%rax),%r8
   1a853:	e8 68 12 00 00       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   1a858:	4d 39 2c 24          	cmp    %r13,(%r12)
   1a85c:	59                   	pop    %rcx
   1a85d:	4c 8d 1d 1c 87 00 00 	lea    0x871c(%rip),%r11        # 22f80 <_C_ctype_+0x120>
   1a864:	5e                   	pop    %rsi
   1a865:	77 10                	ja     1a877 <run_cfi_program+0x8e7>
   1a867:	49 8b 3e             	mov    (%r14),%rdi
   1a86a:	85 c0                	test   %eax,%eax
   1a86c:	78 09                	js     1a877 <run_cfi_program+0x8e7>
   1a86e:	4c 39 ff             	cmp    %r15,%rdi
   1a871:	0f 82 90 f7 ff ff    	jb     1a007 <run_cfi_program+0x77>
   1a877:	85 c0                	test   %eax,%eax
   1a879:	ba 00 00 00 00       	mov    $0x0,%edx
   1a87e:	0f 4f c2             	cmovg  %edx,%eax
   1a881:	e9 c6 f7 ff ff       	jmp    1a04c <run_cfi_program+0xbc>
   1a886:	8b 00                	mov    (%rax),%eax
   1a888:	48 83 c7 05          	add    $0x5,%rdi
   1a88c:	e9 70 ff ff ff       	jmp    1a801 <run_cfi_program+0x871>
   1a891:	0f b7 00             	movzwl (%rax),%eax
   1a894:	48 83 c7 03          	add    $0x3,%rdi
   1a898:	e9 64 ff ff ff       	jmp    1a801 <run_cfi_program+0x871>
   1a89d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1a8a2:	48 8d 3d 97 11 02 00 	lea    0x21197(%rip),%rdi        # 3ba40 <dwarf_reg_state_pool>
   1a8a9:	48 8b 08             	mov    (%rax),%rcx
   1a8ac:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1a8b1:	e8 9a 2f 00 00       	call   1d850 <_UIx86_64__mempool_alloc>
   1a8b6:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   1a8bb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1a8c0:	4c 8d 1d b9 86 00 00 	lea    0x86b9(%rip),%r11        # 22f80 <_C_ctype_+0x120>
   1a8c7:	48 85 c0             	test   %rax,%rax
   1a8ca:	48 89 07             	mov    %rax,(%rdi)
   1a8cd:	0f 84 41 01 00 00    	je     1aa14 <run_cfi_program+0xa84>
   1a8d3:	48 89 08             	mov    %rcx,(%rax)
   1a8d6:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1a8db:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   1a8e2:	00 
   1a8e3:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   1a8ea:	00 
   1a8eb:	48 8b 00             	mov    (%rax),%rax
   1a8ee:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   1a8f5:	00 
   1a8f6:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   1a8fd:	00 
   1a8fe:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   1a905:	00 
   1a906:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   1a90d:	00 
   1a90e:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   1a915:	00 
   1a916:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1a91a:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   1a921:	00 
   1a922:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   1a929:	00 
   1a92a:	0f 11 48 18          	movups %xmm1,0x18(%rax)
   1a92e:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   1a935:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   1a93c:	00 
   1a93d:	0f 11 50 28          	movups %xmm2,0x28(%rax)
   1a941:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   1a948:	00 
   1a949:	0f 11 58 38          	movups %xmm3,0x38(%rax)
   1a94d:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
   1a954:	0f 11 60 48          	movups %xmm4,0x48(%rax)
   1a958:	0f 11 68 58          	movups %xmm5,0x58(%rax)
   1a95c:	0f 11 70 68          	movups %xmm6,0x68(%rax)
   1a960:	0f 11 78 78          	movups %xmm7,0x78(%rax)
   1a964:	0f 11 80 88 00 00 00 	movups %xmm0,0x88(%rax)
   1a96b:	0f 11 88 98 00 00 00 	movups %xmm1,0x98(%rax)
   1a972:	0f 11 90 a8 00 00 00 	movups %xmm2,0xa8(%rax)
   1a979:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a97d:	0f 83 7d f8 ff ff    	jae    1a200 <run_cfi_program+0x270>
   1a983:	31 c0                	xor    %eax,%eax
   1a985:	e9 48 f7 ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a98a:	4d 3b 2c 24          	cmp    (%r12),%r13
   1a98e:	0f 82 3c f7 ff ff    	jb     1a0d0 <run_cfi_program+0x140>
   1a994:	4c 39 f8             	cmp    %r15,%rax
   1a997:	0f 83 33 f7 ff ff    	jae    1a0d0 <run_cfi_program+0x140>
   1a99d:	48 89 c7             	mov    %rax,%rdi
   1a9a0:	e9 62 f6 ff ff       	jmp    1a007 <run_cfi_program+0x77>
   1a9a5:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1a9aa:	48 0f af 50 20       	imul   0x20(%rax),%rdx
   1a9af:	49 03 14 24          	add    (%r12),%rdx
   1a9b3:	49 89 14 24          	mov    %rdx,(%r12)
   1a9b7:	4c 39 ea             	cmp    %r13,%rdx
   1a9ba:	0f 86 40 f8 ff ff    	jbe    1a200 <run_cfi_program+0x270>
   1a9c0:	31 c0                	xor    %eax,%eax
   1a9c2:	e9 0b f7 ff ff       	jmp    1a0d2 <run_cfi_program+0x142>
   1a9c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a9ce:	00 00 
   1a9d0:	40 80 fe 10          	cmp    $0x10,%sil
   1a9d4:	76 14                	jbe    1a9ea <run_cfi_program+0xa5a>
   1a9d6:	48 83 c4 38          	add    $0x38,%rsp
   1a9da:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1a9df:	5b                   	pop    %rbx
   1a9e0:	5d                   	pop    %rbp
   1a9e1:	41 5c                	pop    %r12
   1a9e3:	41 5d                	pop    %r13
   1a9e5:	41 5e                	pop    %r14
   1a9e7:	41 5f                	pop    %r15
   1a9e9:	c3                   	ret    
   1a9ea:	31 c9                	xor    %ecx,%ecx
   1a9ec:	45 31 c0             	xor    %r8d,%r8d
   1a9ef:	90                   	nop
   1a9f0:	0f b6 38             	movzbl (%rax),%edi
   1a9f3:	48 83 c0 01          	add    $0x1,%rax
   1a9f7:	49 89 06             	mov    %rax,(%r14)
   1a9fa:	48 89 fe             	mov    %rdi,%rsi
   1a9fd:	83 e6 7f             	and    $0x7f,%esi
   1aa00:	48 d3 e6             	shl    %cl,%rsi
   1aa03:	48 83 c1 07          	add    $0x7,%rcx
   1aa07:	49 09 f0             	or     %rsi,%r8
   1aa0a:	40 84 ff             	test   %dil,%dil
   1aa0d:	78 e1                	js     1a9f0 <run_cfi_program+0xa60>
   1aa0f:	e9 1c f9 ff ff       	jmp    1a330 <run_cfi_program+0x3a0>
   1aa14:	48 89 0f             	mov    %rcx,(%rdi)
   1aa17:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1aa1c:	e9 2b f6 ff ff       	jmp    1a04c <run_cfi_program+0xbc>
   1aa21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1aa28:	00 00 00 
   1aa2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001aa30 <create_state_record_for.part.0>:
   1aa30:	41 57                	push   %r15
   1aa32:	b9 30 00 00 00       	mov    $0x30,%ecx
   1aa37:	41 56                	push   %r14
   1aa39:	41 55                	push   %r13
   1aa3b:	41 54                	push   %r12
   1aa3d:	55                   	push   %rbp
   1aa3e:	48 89 f5             	mov    %rsi,%rbp
   1aa41:	53                   	push   %rbx
   1aa42:	48 89 fb             	mov    %rdi,%rbx
   1aa45:	48 89 f7             	mov    %rsi,%rdi
   1aa48:	48 83 ec 38          	sub    $0x38,%rsp
   1aa4c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1aa51:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1aa58:	00 00 
   1aa5a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1aa5f:	31 c0                	xor    %eax,%eax
   1aa61:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1aa64:	0f 1f 40 00          	nopl   0x0(%rax)
   1aa68:	c6 84 05 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rax,1)
   1aa6f:	01 
   1aa70:	48 c7 84 c5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rax,8)
   1aa77:	00 00 00 00 00 
   1aa7c:	48 83 c0 01          	add    $0x1,%rax
   1aa80:	48 83 f8 13          	cmp    $0x13,%rax
   1aa84:	75 e2                	jne    1aa68 <create_state_record_for.part.0+0x38>
   1aa86:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   1aa8b:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   1aa90:	48 89 ee             	mov    %rbp,%rsi
   1aa93:	48 89 df             	mov    %rbx,%rdi
   1aa96:	48 8b 83 90 01 00 00 	mov    0x190(%rbx),%rax
   1aa9d:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1aaa4:	4d 89 f8             	mov    %r15,%r8
   1aaa7:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1aaab:	48 89 95 c8 00 00 00 	mov    %rdx,0xc8(%rbp)
   1aab2:	48 8b 10             	mov    (%rax),%rdx
   1aab5:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1aabc:	00 00 
   1aabe:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1aac3:	4c 8b 48 08          	mov    0x8(%rax),%r9
   1aac7:	4c 89 ea             	mov    %r13,%rdx
   1aaca:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1aad1:	00 00 
   1aad3:	50                   	push   %rax
   1aad4:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   1aad9:	41 56                	push   %r14
   1aadb:	e8 b0 f4 ff ff       	call   19f90 <run_cfi_program>
   1aae0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1aae5:	59                   	pop    %rcx
   1aae6:	41 89 c4             	mov    %eax,%r12d
   1aae9:	5f                   	pop    %rdi
   1aaea:	48 85 f6             	test   %rsi,%rsi
   1aaed:	74 32                	je     1ab21 <create_state_record_for.part.0+0xf1>
   1aaef:	48 8d 15 4a 0f 02 00 	lea    0x20f4a(%rip),%rdx        # 3ba40 <dwarf_reg_state_pool>
   1aaf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1aafd:	00 00 00 
   1ab00:	48 8b 06             	mov    (%rsi),%rax
   1ab03:	48 89 d7             	mov    %rdx,%rdi
   1ab06:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ab0b:	e8 b0 2d 00 00       	call   1d8c0 <_UIx86_64__mempool_free>
   1ab10:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ab15:	48 8d 15 24 0f 02 00 	lea    0x20f24(%rip),%rdx        # 3ba40 <dwarf_reg_state_pool>
   1ab1c:	48 85 f6             	test   %rsi,%rsi
   1ab1f:	75 df                	jne    1ab00 <create_state_record_for.part.0+0xd0>
   1ab21:	45 85 e4             	test   %r12d,%r12d
   1ab24:	0f 88 2c 01 00 00    	js     1ac56 <create_state_record_for.part.0+0x226>
   1ab2a:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   1ab31:	00 
   1ab32:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   1ab39:	00 
   1ab3a:	48 89 ee             	mov    %rbp,%rsi
   1ab3d:	48 89 df             	mov    %rbx,%rdi
   1ab40:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   1ab47:	00 
   1ab48:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   1ab4f:	00 
   1ab50:	4d 89 f8             	mov    %r15,%r8
   1ab53:	0f 29 45 10          	movaps %xmm0,0x10(%rbp)
   1ab57:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   1ab5e:	00 
   1ab5f:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   1ab66:	00 
   1ab67:	0f 29 4d 20          	movaps %xmm1,0x20(%rbp)
   1ab6b:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   1ab72:	00 
   1ab73:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   1ab7a:	00 
   1ab7b:	0f 29 55 30          	movaps %xmm2,0x30(%rbp)
   1ab7f:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   1ab86:	00 
   1ab87:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   1ab8e:	00 
   1ab8f:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   1ab96:	00 
   1ab97:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   1ab9e:	0f 29 5d 40          	movaps %xmm3,0x40(%rbp)
   1aba2:	0f 29 65 50          	movaps %xmm4,0x50(%rbp)
   1aba6:	0f 29 6d 60          	movaps %xmm5,0x60(%rbp)
   1abaa:	0f 29 75 70          	movaps %xmm6,0x70(%rbp)
   1abae:	0f 29 bd 80 00 00 00 	movaps %xmm7,0x80(%rbp)
   1abb5:	0f 29 85 90 00 00 00 	movaps %xmm0,0x90(%rbp)
   1abbc:	0f 29 8d a0 00 00 00 	movaps %xmm1,0xa0(%rbp)
   1abc3:	0f 29 95 b0 00 00 00 	movaps %xmm2,0xb0(%rbp)
   1abca:	48 89 95 c0 00 00 00 	mov    %rdx,0xc0(%rbp)
   1abd1:	48 8b 93 90 01 00 00 	mov    0x190(%rbx),%rdx
   1abd8:	48 8b 42 10          	mov    0x10(%rdx),%rax
   1abdc:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1abe3:	00 00 
   1abe5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1abea:	48 8b 83 58 01 00 00 	mov    0x158(%rbx),%rax
   1abf1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1abf6:	0f b6 83 50 01 00 00 	movzbl 0x150(%rbx),%eax
   1abfd:	48 8d 1d 3c 0e 02 00 	lea    0x20e3c(%rip),%rbx        # 3ba40 <dwarf_reg_state_pool>
   1ac04:	4c 8b 4a 18          	mov    0x18(%rdx),%r9
   1ac08:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1ac0d:	52                   	push   %rdx
   1ac0e:	4c 89 ea             	mov    %r13,%rdx
   1ac11:	41 56                	push   %r14
   1ac13:	d0 e8                	shr    %al
   1ac15:	83 e0 01             	and    $0x1,%eax
   1ac18:	48 29 c1             	sub    %rax,%rcx
   1ac1b:	e8 70 f3 ff ff       	call   19f90 <run_cfi_program>
   1ac20:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1ac25:	41 89 c4             	mov    %eax,%r12d
   1ac28:	58                   	pop    %rax
   1ac29:	5a                   	pop    %rdx
   1ac2a:	48 85 f6             	test   %rsi,%rsi
   1ac2d:	74 1b                	je     1ac4a <create_state_record_for.part.0+0x21a>
   1ac2f:	90                   	nop
   1ac30:	48 8b 06             	mov    (%rsi),%rax
   1ac33:	48 89 df             	mov    %rbx,%rdi
   1ac36:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ac3b:	e8 80 2c 00 00       	call   1d8c0 <_UIx86_64__mempool_free>
   1ac40:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ac45:	48 85 f6             	test   %rsi,%rsi
   1ac48:	75 e6                	jne    1ac30 <create_state_record_for.part.0+0x200>
   1ac4a:	45 85 e4             	test   %r12d,%r12d
   1ac4d:	b8 00 00 00 00       	mov    $0x0,%eax
   1ac52:	44 0f 4f e0          	cmovg  %eax,%r12d
   1ac56:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1ac5b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ac62:	00 00 
   1ac64:	75 12                	jne    1ac78 <create_state_record_for.part.0+0x248>
   1ac66:	48 83 c4 38          	add    $0x38,%rsp
   1ac6a:	44 89 e0             	mov    %r12d,%eax
   1ac6d:	5b                   	pop    %rbx
   1ac6e:	5d                   	pop    %rbp
   1ac6f:	41 5c                	pop    %r12
   1ac71:	41 5d                	pop    %r13
   1ac73:	41 5e                	pop    %r14
   1ac75:	41 5f                	pop    %r15
   1ac77:	c3                   	ret    
   1ac78:	e8 43 4d ff ff       	call   f9c0 <__stack_chk_fail>
   1ac7d:	0f 1f 00             	nopl   (%rax)

000000000001ac80 <apply_reg_state>:
   1ac80:	41 57                	push   %r15
   1ac82:	49 89 ff             	mov    %rdi,%r15
   1ac85:	41 56                	push   %r14
   1ac87:	41 55                	push   %r13
   1ac89:	41 54                	push   %r12
   1ac8b:	49 89 f4             	mov    %rsi,%r12
   1ac8e:	55                   	push   %rbp
   1ac8f:	53                   	push   %rbx
   1ac90:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   1ac97:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ac9e:	00 00 
   1aca0:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   1aca7:	00 
   1aca8:	31 c0                	xor    %eax,%eax
   1acaa:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1acae:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1acb3:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1acb7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1acbb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1acc0:	e8 eb 2e 00 00       	call   1dbb0 <_Ux86_64_get_accessors>
   1acc5:	41 80 7c 24 19 03    	cmpb   $0x3,0x19(%r12)
   1accb:	0f 85 5f 03 00 00    	jne    1b030 <apply_reg_state+0x3b0>
   1acd1:	49 8b 84 24 a8 00 00 	mov    0xa8(%r12),%rax
   1acd8:	00 
   1acd9:	48 83 f8 07          	cmp    $0x7,%rax
   1acdd:	0f 84 35 04 00 00    	je     1b118 <apply_reg_state+0x498>
   1ace3:	31 f6                	xor    %esi,%esi
   1ace5:	48 83 f8 10          	cmp    $0x10,%rax
   1ace9:	0f 86 d1 03 00 00    	jbe    1b0c0 <apply_reg_state+0x440>
   1acef:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
   1acf4:	4c 89 ff             	mov    %r15,%rdi
   1acf7:	e8 04 2f 00 00       	call   1dc00 <_ULx86_64_get_reg>
   1acfc:	85 c0                	test   %eax,%eax
   1acfe:	0f 88 bb 01 00 00    	js     1aebf <apply_reg_state+0x23f>
   1ad04:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1ad09:	49 03 84 24 b0 00 00 	add    0xb0(%r12),%rax
   1ad10:	00 
   1ad11:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ad16:	49 8d 77 40          	lea    0x40(%r15),%rsi
   1ad1a:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   1ad1f:	b9 22 00 00 00       	mov    $0x22,%ecx
   1ad24:	31 db                	xor    %ebx,%ebx
   1ad26:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1ad2b:	48 89 ef             	mov    %rbp,%rdi
   1ad2e:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1ad33:	4c 8d 2d 3e 86 00 00 	lea    0x863e(%rip),%r13        # 23378 <_C_ctype_+0x518>
   1ad3a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1ad3d:	48 89 04 24          	mov    %rax,(%rsp)
   1ad41:	4c 89 e0             	mov    %r12,%rax
   1ad44:	4c 8d 74 24 24       	lea    0x24(%rsp),%r14
   1ad49:	4d 89 fc             	mov    %r15,%r12
   1ad4c:	49 89 c7             	mov    %rax,%r15
   1ad4f:	90                   	nop
   1ad50:	41 80 7c 1f 08 05    	cmpb   $0x5,0x8(%r15,%rbx,1)
   1ad56:	0f 87 c4 00 00 00    	ja     1ae20 <apply_reg_state+0x1a0>
   1ad5c:	41 0f b6 44 1f 08    	movzbl 0x8(%r15,%rbx,1),%eax
   1ad62:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
   1ad67:	4c 01 e8             	add    %r13,%rax
   1ad6a:	3e ff e0             	notrack jmp *%rax
   1ad6d:	0f 1f 00             	nopl   (%rax)
   1ad70:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   1ad75:	31 c9                	xor    %ecx,%ecx
   1ad77:	45 31 d2             	xor    %r10d,%r10d
   1ad7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ad80:	0f b6 32             	movzbl (%rdx),%esi
   1ad83:	48 83 c2 01          	add    $0x1,%rdx
   1ad87:	48 89 f0             	mov    %rsi,%rax
   1ad8a:	83 e0 7f             	and    $0x7f,%eax
   1ad8d:	48 d3 e0             	shl    %cl,%rax
   1ad90:	48 83 c1 07          	add    $0x7,%rcx
   1ad94:	49 09 c2             	or     %rax,%r10
   1ad97:	40 84 f6             	test   %sil,%sil
   1ad9a:	78 e4                	js     1ad80 <apply_reg_state+0x100>
   1ad9c:	48 8b 0c 24          	mov    (%rsp),%rcx
   1ada0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1ada5:	4d 89 f0             	mov    %r14,%r8
   1ada8:	4c 89 d2             	mov    %r10,%rdx
   1adab:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1adb0:	4c 89 e7             	mov    %r12,%rdi
   1adb3:	e8 e8 3d 00 00       	call   1eba0 <_ULx86_64_dwarf_eval_expr>
   1adb8:	85 c0                	test   %eax,%eax
   1adba:	0f 88 ff 00 00 00    	js     1aebf <apply_reg_state+0x23f>
   1adc0:	8b 54 24 24          	mov    0x24(%rsp),%edx
   1adc4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1adc9:	85 d2                	test   %edx,%edx
   1adcb:	0f 84 37 02 00 00    	je     1b008 <apply_reg_state+0x388>
   1add1:	31 f6                	xor    %esi,%esi
   1add3:	48 83 f8 10          	cmp    $0x10,%rax
   1add7:	77 0b                	ja     1ade4 <apply_reg_state+0x164>
   1add9:	48 8d 3d d0 87 00 00 	lea    0x87d0(%rip),%rdi        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1ade0:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   1ade4:	49 8b 04 24          	mov    (%r12),%rax
   1ade8:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1adef:	e8 cc 2b 00 00       	call   1d9c0 <_ULx86_64_r_uc_addr>
   1adf4:	48 89 da             	mov    %rbx,%rdx
   1adf7:	48 c1 e2 04          	shl    $0x4,%rdx
   1adfb:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1ae00:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1ae05:	48 c7 04 10 00 00 00 	movq   $0x0,(%rax,%rdx,1)
   1ae0c:	00 
   1ae0d:	48 89 da             	mov    %rbx,%rdx
   1ae10:	48 c1 e2 04          	shl    $0x4,%rdx
   1ae14:	48 c7 04 10 04 00 00 	movq   $0x4,(%rax,%rdx,1)
   1ae1b:	00 
   1ae1c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ae20:	48 83 c3 01          	add    $0x1,%rbx
   1ae24:	48 83 fb 11          	cmp    $0x11,%rbx
   1ae28:	0f 85 22 ff ff ff    	jne    1ad50 <apply_reg_state+0xd0>
   1ae2e:	4c 89 f8             	mov    %r15,%rax
   1ae31:	4d 89 e7             	mov    %r12,%r15
   1ae34:	48 89 ee             	mov    %rbp,%rsi
   1ae37:	49 89 c4             	mov    %rax,%r12
   1ae3a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1ae3f:	49 89 47 40          	mov    %rax,0x40(%r15)
   1ae43:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   1ae4a:	00 
   1ae4b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1ae50:	48 89 87 08 01 00 00 	mov    %rax,0x108(%rdi)
   1ae57:	48 89 f8             	mov    %rdi,%rax
   1ae5a:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1ae5e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1ae62:	48 29 f8             	sub    %rdi,%rax
   1ae65:	8d 88 10 01 00 00    	lea    0x110(%rax),%ecx
   1ae6b:	48 29 c6             	sub    %rax,%rsi
   1ae6e:	89 c8                	mov    %ecx,%eax
   1ae70:	c1 e8 03             	shr    $0x3,%eax
   1ae73:	89 c1                	mov    %eax,%ecx
   1ae75:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1ae78:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1ae7d:	49 89 47 10          	mov    %rax,0x10(%r15)
   1ae81:	49 8b 04 24          	mov    (%r12),%rax
   1ae85:	48 83 c0 04          	add    $0x4,%rax
   1ae89:	48 c1 e0 04          	shl    $0x4,%rax
   1ae8d:	4c 01 f8             	add    %r15,%rax
   1ae90:	48 8b 30             	mov    (%rax),%rsi
   1ae93:	48 85 f6             	test   %rsi,%rsi
   1ae96:	0f 85 34 02 00 00    	jne    1b0d0 <apply_reg_state+0x450>
   1ae9c:	49 c7 47 18 00 00 00 	movq   $0x0,0x18(%r15)
   1aea3:	00 
   1aea4:	31 c0                	xor    %eax,%eax
   1aea6:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1aeab:	0f 84 49 02 00 00    	je     1b0fa <apply_reg_state+0x47a>
   1aeb1:	41 f6 87 50 01 00 00 	testb  $0x1,0x150(%r15)
   1aeb8:	01 
   1aeb9:	0f 85 91 02 00 00    	jne    1b150 <apply_reg_state+0x4d0>
   1aebf:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   1aec6:	00 
   1aec7:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1aece:	00 00 
   1aed0:	0f 85 a6 02 00 00    	jne    1b17c <apply_reg_state+0x4fc>
   1aed6:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   1aedd:	5b                   	pop    %rbx
   1aede:	5d                   	pop    %rbp
   1aedf:	41 5c                	pop    %r12
   1aee1:	41 5d                	pop    %r13
   1aee3:	41 5e                	pop    %r14
   1aee5:	41 5f                	pop    %r15
   1aee7:	c3                   	ret    
   1aee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1aeef:	00 
   1aef0:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   1aef5:	31 c9                	xor    %ecx,%ecx
   1aef7:	45 31 d2             	xor    %r10d,%r10d
   1aefa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1af00:	0f b6 32             	movzbl (%rdx),%esi
   1af03:	48 83 c2 01          	add    $0x1,%rdx
   1af07:	48 89 f0             	mov    %rsi,%rax
   1af0a:	83 e0 7f             	and    $0x7f,%eax
   1af0d:	48 d3 e0             	shl    %cl,%rax
   1af10:	48 83 c1 07          	add    $0x7,%rcx
   1af14:	49 09 c2             	or     %rax,%r10
   1af17:	40 84 f6             	test   %sil,%sil
   1af1a:	78 e4                	js     1af00 <apply_reg_state+0x280>
   1af1c:	48 8b 0c 24          	mov    (%rsp),%rcx
   1af20:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1af25:	4d 89 f0             	mov    %r14,%r8
   1af28:	4c 89 d2             	mov    %r10,%rdx
   1af2b:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1af30:	4c 89 e7             	mov    %r12,%rdi
   1af33:	e8 68 3c 00 00       	call   1eba0 <_ULx86_64_dwarf_eval_expr>
   1af38:	85 c0                	test   %eax,%eax
   1af3a:	78 83                	js     1aebf <apply_reg_state+0x23f>
   1af3c:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   1af40:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1af45:	85 c9                	test   %ecx,%ecx
   1af47:	0f 84 9b 00 00 00    	je     1afe8 <apply_reg_state+0x368>
   1af4d:	31 f6                	xor    %esi,%esi
   1af4f:	48 83 f8 10          	cmp    $0x10,%rax
   1af53:	77 0b                	ja     1af60 <apply_reg_state+0x2e0>
   1af55:	48 8d 3d 54 86 00 00 	lea    0x8654(%rip),%rdi        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1af5c:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   1af60:	49 8b 04 24          	mov    (%r12),%rax
   1af64:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1af6b:	e8 50 2a 00 00       	call   1d9c0 <_ULx86_64_r_uc_addr>
   1af70:	49 89 c0             	mov    %rax,%r8
   1af73:	48 89 d8             	mov    %rbx,%rax
   1af76:	48 c1 e0 04          	shl    $0x4,%rax
   1af7a:	4c 89 44 05 00       	mov    %r8,0x0(%rbp,%rax,1)
   1af7f:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1af86:	00 00 
   1af88:	e9 93 fe ff ff       	jmp    1ae20 <apply_reg_state+0x1a0>
   1af8d:	0f 1f 00             	nopl   (%rax)
   1af90:	49 8b 44 df 20       	mov    0x20(%r15,%rbx,8),%rax
   1af95:	31 f6                	xor    %esi,%esi
   1af97:	48 83 f8 10          	cmp    $0x10,%rax
   1af9b:	77 c3                	ja     1af60 <apply_reg_state+0x2e0>
   1af9d:	eb b6                	jmp    1af55 <apply_reg_state+0x2d5>
   1af9f:	90                   	nop
   1afa0:	48 89 d8             	mov    %rbx,%rax
   1afa3:	48 c1 e0 04          	shl    $0x4,%rax
   1afa7:	48 c7 44 05 00 00 00 	movq   $0x0,0x0(%rbp,%rax,1)
   1afae:	00 00 
   1afb0:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1afb7:	00 00 
   1afb9:	e9 62 fe ff ff       	jmp    1ae20 <apply_reg_state+0x1a0>
   1afbe:	66 90                	xchg   %ax,%ax
   1afc0:	48 89 da             	mov    %rbx,%rdx
   1afc3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1afc8:	49 03 44 df 20       	add    0x20(%r15,%rbx,8),%rax
   1afcd:	48 c1 e2 04          	shl    $0x4,%rdx
   1afd1:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1afd6:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1afdd:	00 00 
   1afdf:	e9 3c fe ff ff       	jmp    1ae20 <apply_reg_state+0x1a0>
   1afe4:	0f 1f 40 00          	nopl   0x0(%rax)
   1afe8:	48 89 da             	mov    %rbx,%rdx
   1afeb:	48 c1 e2 04          	shl    $0x4,%rdx
   1afef:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1aff4:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1affb:	00 00 
   1affd:	e9 1e fe ff ff       	jmp    1ae20 <apply_reg_state+0x1a0>
   1b002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b008:	48 89 da             	mov    %rbx,%rdx
   1b00b:	48 c1 e2 04          	shl    $0x4,%rdx
   1b00f:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1b014:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1b019:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1b020:	00 00 
   1b022:	e9 e6 fd ff ff       	jmp    1ae0d <apply_reg_state+0x18d>
   1b027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b02e:	00 00 
   1b030:	49 8b 94 24 a8 00 00 	mov    0xa8(%r12),%rdx
   1b037:	00 
   1b038:	31 c9                	xor    %ecx,%ecx
   1b03a:	45 31 d2             	xor    %r10d,%r10d
   1b03d:	0f 1f 00             	nopl   (%rax)
   1b040:	0f b6 32             	movzbl (%rdx),%esi
   1b043:	48 83 c2 01          	add    $0x1,%rdx
   1b047:	48 89 f0             	mov    %rsi,%rax
   1b04a:	83 e0 7f             	and    $0x7f,%eax
   1b04d:	48 d3 e0             	shl    %cl,%rax
   1b050:	48 83 c1 07          	add    $0x7,%rcx
   1b054:	49 09 c2             	or     %rax,%r10
   1b057:	40 84 f6             	test   %sil,%sil
   1b05a:	78 e4                	js     1b040 <apply_reg_state+0x3c0>
   1b05c:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1b061:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   1b066:	4c 89 d2             	mov    %r10,%rdx
   1b069:	4c 89 ff             	mov    %r15,%rdi
   1b06c:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1b071:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
   1b076:	e8 25 3b 00 00       	call   1eba0 <_ULx86_64_dwarf_eval_expr>
   1b07b:	85 c0                	test   %eax,%eax
   1b07d:	0f 88 3c fe ff ff    	js     1aebf <apply_reg_state+0x23f>
   1b083:	8b 74 24 28          	mov    0x28(%rsp),%esi
   1b087:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1b08c:	85 f6                	test   %esi,%esi
   1b08e:	74 22                	je     1b0b2 <apply_reg_state+0x432>
   1b090:	31 f6                	xor    %esi,%esi
   1b092:	48 83 f8 10          	cmp    $0x10,%rax
   1b096:	77 0b                	ja     1b0a3 <apply_reg_state+0x423>
   1b098:	48 8d 15 11 85 00 00 	lea    0x8511(%rip),%rdx        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1b09f:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1b0a3:	49 8b 07             	mov    (%r15),%rax
   1b0a6:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1b0ad:	e8 0e 29 00 00       	call   1d9c0 <_ULx86_64_r_uc_addr>
   1b0b2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1b0b7:	e9 5a fc ff ff       	jmp    1ad16 <apply_reg_state+0x96>
   1b0bc:	0f 1f 40 00          	nopl   0x0(%rax)
   1b0c0:	48 8d 15 e9 84 00 00 	lea    0x84e9(%rip),%rdx        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1b0c7:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1b0cb:	e9 1f fc ff ff       	jmp    1acef <apply_reg_state+0x6f>
   1b0d0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1b0d4:	a8 02                	test   $0x2,%al
   1b0d6:	75 51                	jne    1b129 <apply_reg_state+0x4a9>
   1b0d8:	48 85 c0             	test   %rax,%rax
   1b0db:	0f 84 85 00 00 00    	je     1b166 <apply_reg_state+0x4e6>
   1b0e1:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1b0e6:	49 89 77 18          	mov    %rsi,0x18(%r15)
   1b0ea:	b8 01 00 00 00       	mov    $0x1,%eax
   1b0ef:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1b0f4:	0f 85 b7 fd ff ff    	jne    1aeb1 <apply_reg_state+0x231>
   1b0fa:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1b0ff:	49 39 7f 10          	cmp    %rdi,0x10(%r15)
   1b103:	0f 85 a8 fd ff ff    	jne    1aeb1 <apply_reg_state+0x231>
   1b109:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1b10e:	e9 ac fd ff ff       	jmp    1aebf <apply_reg_state+0x23f>
   1b113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b118:	41 80 7c 24 0f 01    	cmpb   $0x1,0xf(%r12)
   1b11e:	75 a0                	jne    1b0c0 <apply_reg_state+0x440>
   1b120:	49 8b 47 10          	mov    0x10(%r15),%rax
   1b124:	e9 e0 fb ff ff       	jmp    1ad09 <apply_reg_state+0x89>
   1b129:	49 8b 47 08          	mov    0x8(%r15),%rax
   1b12d:	4d 8b 07             	mov    (%r15),%r8
   1b130:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1b135:	31 c9                	xor    %ecx,%ecx
   1b137:	48 89 c7             	mov    %rax,%rdi
   1b13a:	ff 50 20             	call   *0x20(%rax)
   1b13d:	85 c0                	test   %eax,%eax
   1b13f:	0f 88 7a fd ff ff    	js     1aebf <apply_reg_state+0x23f>
   1b145:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1b14a:	eb 9a                	jmp    1b0e6 <apply_reg_state+0x466>
   1b14c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b150:	4c 89 e6             	mov    %r12,%rsi
   1b153:	4c 89 ff             	mov    %r15,%rdi
   1b156:	89 04 24             	mov    %eax,(%rsp)
   1b159:	e8 72 36 00 00       	call   1e7d0 <_ULx86_64_stash_frame>
   1b15e:	8b 04 24             	mov    (%rsp),%eax
   1b161:	e9 59 fd ff ff       	jmp    1aebf <apply_reg_state+0x23f>
   1b166:	49 8b 47 08          	mov    0x8(%r15),%rax
   1b16a:	4d 8b 07             	mov    (%r15),%r8
   1b16d:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1b172:	31 c9                	xor    %ecx,%ecx
   1b174:	48 89 c7             	mov    %rax,%rdi
   1b177:	ff 50 18             	call   *0x18(%rax)
   1b17a:	eb c1                	jmp    1b13d <apply_reg_state+0x4bd>
   1b17c:	e8 3f 48 ff ff       	call   f9c0 <__stack_chk_fail>
   1b181:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b188:	00 00 00 
   1b18b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b190 <_ULx86_64_dwarf_flush_rs_cache>:
   1b190:	f3 0f 1e fa          	endbr64 
   1b194:	55                   	push   %rbp
   1b195:	48 8d 47 30          	lea    0x30(%rdi),%rax
   1b199:	53                   	push   %rbx
   1b19a:	48 89 fb             	mov    %rdi,%rbx
   1b19d:	48 83 ec 08          	sub    $0x8,%rsp
   1b1a1:	66 83 7f 06 07       	cmpw   $0x7,0x6(%rdi)
   1b1a6:	0f 84 24 01 00 00    	je     1b2d0 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1b1ac:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1b1b0:	48 85 ff             	test   %rdi,%rdi
   1b1b3:	0f 84 17 01 00 00    	je     1b2d0 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1b1b9:	48 39 c7             	cmp    %rax,%rdi
   1b1bc:	74 05                	je     1b1c3 <_ULx86_64_dwarf_flush_rs_cache+0x33>
   1b1be:	e8 1d 2e ff ff       	call   dfe0 <dlfree>
   1b1c3:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1b1c7:	48 85 ff             	test   %rdi,%rdi
   1b1ca:	74 11                	je     1b1dd <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1b1cc:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1b1d3:	48 39 c7             	cmp    %rax,%rdi
   1b1d6:	74 05                	je     1b1dd <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1b1d8:	e8 03 2e ff ff       	call   dfe0 <dlfree>
   1b1dd:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1b1e1:	48 85 ff             	test   %rdi,%rdi
   1b1e4:	74 11                	je     1b1f7 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1b1e6:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1b1ed:	48 39 c7             	cmp    %rax,%rdi
   1b1f0:	74 05                	je     1b1f7 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1b1f2:	e8 e9 2d ff ff       	call   dfe0 <dlfree>
   1b1f7:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1b1fb:	bd 01 00 00 00       	mov    $0x1,%ebp
   1b200:	89 ef                	mov    %ebp,%edi
   1b202:	83 c1 01             	add    $0x1,%ecx
   1b205:	d3 e7                	shl    %cl,%edi
   1b207:	48 63 ff             	movslq %edi,%rdi
   1b20a:	48 01 ff             	add    %rdi,%rdi
   1b20d:	e8 5e 13 ff ff       	call   c570 <dlmalloc>
   1b212:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1b216:	89 ef                	mov    %ebp,%edi
   1b218:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1b21c:	d3 e7                	shl    %cl,%edi
   1b21e:	48 63 ff             	movslq %edi,%rdi
   1b221:	48 69 ff b8 00 00 00 	imul   $0xb8,%rdi,%rdi
   1b228:	e8 43 13 ff ff       	call   c570 <dlmalloc>
   1b22d:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1b231:	89 ef                	mov    %ebp,%edi
   1b233:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1b237:	d3 e7                	shl    %cl,%edi
   1b239:	48 63 ff             	movslq %edi,%rdi
   1b23c:	48 c1 e7 04          	shl    $0x4,%rdi
   1b240:	e8 2b 13 ff ff       	call   c570 <dlmalloc>
   1b245:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1b24a:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1b24e:	0f 84 e1 00 00 00    	je     1b335 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1b254:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   1b259:	0f 84 d6 00 00 00    	je     1b335 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1b25f:	48 85 c0             	test   %rax,%rax
   1b262:	0f 84 cd 00 00 00    	je     1b335 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1b268:	0f b7 43 06          	movzwl 0x6(%rbx),%eax
   1b26c:	89 ee                	mov    %ebp,%esi
   1b26e:	45 31 c0             	xor    %r8d,%r8d
   1b271:	66 44 89 43 04       	mov    %r8w,0x4(%rbx)
   1b276:	8d 48 01             	lea    0x1(%rax),%ecx
   1b279:	66 89 43 08          	mov    %ax,0x8(%rbx)
   1b27d:	d3 e6                	shl    %cl,%esi
   1b27f:	89 c1                	mov    %eax,%ecx
   1b281:	d3 e5                	shl    %cl,%ebp
   1b283:	85 ed                	test   %ebp,%ebp
   1b285:	7f 74                	jg     1b2fb <_ULx86_64_dwarf_flush_rs_cache+0x16b>
   1b287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b28e:	00 00 
   1b290:	85 f6                	test   %esi,%esi
   1b292:	7e 2a                	jle    1b2be <_ULx86_64_dwarf_flush_rs_cache+0x12e>
   1b294:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1b298:	31 c0                	xor    %eax,%eax
   1b29a:	be 01 00 00 00       	mov    $0x1,%esi
   1b29f:	90                   	nop
   1b2a0:	48 63 d0             	movslq %eax,%rdx
   1b2a3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1b2a8:	83 c0 01             	add    $0x1,%eax
   1b2ab:	66 89 0c 57          	mov    %cx,(%rdi,%rdx,2)
   1b2af:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1b2b3:	89 f2                	mov    %esi,%edx
   1b2b5:	83 c1 01             	add    $0x1,%ecx
   1b2b8:	d3 e2                	shl    %cl,%edx
   1b2ba:	39 c2                	cmp    %eax,%edx
   1b2bc:	7f e2                	jg     1b2a0 <_ULx86_64_dwarf_flush_rs_cache+0x110>
   1b2be:	31 c0                	xor    %eax,%eax
   1b2c0:	48 83 c4 08          	add    $0x8,%rsp
   1b2c4:	5b                   	pop    %rbx
   1b2c5:	5d                   	pop    %rbp
   1b2c6:	c3                   	ret    
   1b2c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b2ce:	00 00 
   1b2d0:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1b2d4:	bd 80 00 00 00       	mov    $0x80,%ebp
   1b2d9:	be 00 01 00 00       	mov    $0x100,%esi
   1b2de:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1b2e5:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1b2e9:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1b2f0:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1b2f4:	c7 43 04 00 00 07 00 	movl   $0x70000,0x4(%rbx)
   1b2fb:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1b2ff:	8d 4d ff             	lea    -0x1(%rbp),%ecx
   1b302:	48 c1 e1 04          	shl    $0x4,%rcx
   1b306:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1b30a:	48 01 d1             	add    %rdx,%rcx
   1b30d:	eb 05                	jmp    1b314 <_ULx86_64_dwarf_flush_rs_cache+0x184>
   1b30f:	90                   	nop
   1b310:	48 83 c2 10          	add    $0x10,%rdx
   1b314:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1b319:	80 60 0c fe          	andb   $0xfe,0xc(%rax)
   1b31d:	66 89 78 08          	mov    %di,0x8(%rax)
   1b321:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1b328:	48 89 d0             	mov    %rdx,%rax
   1b32b:	48 39 d1             	cmp    %rdx,%rcx
   1b32e:	75 e0                	jne    1b310 <_ULx86_64_dwarf_flush_rs_cache+0x180>
   1b330:	e9 5b ff ff ff       	jmp    1b290 <_ULx86_64_dwarf_flush_rs_cache+0x100>
   1b335:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1b33a:	eb 84                	jmp    1b2c0 <_ULx86_64_dwarf_flush_rs_cache+0x130>
   1b33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b340 <_ULx86_64_dwarf_step>:
   1b340:	f3 0f 1e fa          	endbr64 
   1b344:	41 57                	push   %r15
   1b346:	41 56                	push   %r14
   1b348:	41 55                	push   %r13
   1b34a:	41 54                	push   %r12
   1b34c:	55                   	push   %rbp
   1b34d:	48 89 fd             	mov    %rdi,%rbp
   1b350:	53                   	push   %rbx
   1b351:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1b358:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1b35c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b363:	00 00 
   1b365:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1b36c:	00 
   1b36d:	31 c0                	xor    %eax,%eax
   1b36f:	41 8b 44 24 40       	mov    0x40(%r12),%eax
   1b374:	85 c0                	test   %eax,%eax
   1b376:	0f 84 b4 02 00 00    	je     1b630 <_ULx86_64_dwarf_step+0x2f0>
   1b37c:	4d 8d 6c 24 58       	lea    0x58(%r12),%r13
   1b381:	83 f8 01             	cmp    $0x1,%eax
   1b384:	75 10                	jne    1b396 <_ULx86_64_dwarf_step+0x56>
   1b386:	4c 89 ef             	mov    %r13,%rdi
   1b389:	e8 32 08 ff ff       	call   bbc0 <sgx_spin_lock>
   1b38e:	85 c0                	test   %eax,%eax
   1b390:	0f 85 18 06 00 00    	jne    1b9ae <_ULx86_64_dwarf_step+0x66e>
   1b396:	41 8b 44 24 70       	mov    0x70(%r12),%eax
   1b39b:	41 39 44 24 44       	cmp    %eax,0x44(%r12)
   1b3a0:	75 08                	jne    1b3aa <_ULx86_64_dwarf_step+0x6a>
   1b3a2:	49 83 7c 24 68 00    	cmpq   $0x0,0x68(%r12)
   1b3a8:	75 1a                	jne    1b3c4 <_ULx86_64_dwarf_step+0x84>
   1b3aa:	4c 89 ef             	mov    %r13,%rdi
   1b3ad:	e8 de fd ff ff       	call   1b190 <_ULx86_64_dwarf_flush_rs_cache>
   1b3b2:	85 c0                	test   %eax,%eax
   1b3b4:	0f 88 76 02 00 00    	js     1b630 <_ULx86_64_dwarf_step+0x2f0>
   1b3ba:	41 8b 44 24 44       	mov    0x44(%r12),%eax
   1b3bf:	41 89 44 24 70       	mov    %eax,0x70(%r12)
   1b3c4:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1b3c8:	4d 85 ed             	test   %r13,%r13
   1b3cb:	0f 84 bf 05 00 00    	je     1b990 <_ULx86_64_dwarf_step+0x650>
   1b3d1:	0f b7 9d a0 01 00 00 	movzwl 0x1a0(%rbp),%ebx
   1b3d8:	66 85 db             	test   %bx,%bx
   1b3db:	7e 24                	jle    1b401 <_ULx86_64_dwarf_step+0xc1>
   1b3dd:	83 eb 01             	sub    $0x1,%ebx
   1b3e0:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1b3e7:	00 
   1b3e8:	48 0f bf db          	movswq %bx,%rbx
   1b3ec:	48 89 d8             	mov    %rbx,%rax
   1b3ef:	48 c1 e0 04          	shl    $0x4,%rax
   1b3f3:	48 01 d0             	add    %rdx,%rax
   1b3f6:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1b3fa:	74 05                	je     1b401 <_ULx86_64_dwarf_step+0xc1>
   1b3fc:	48 39 30             	cmp    %rsi,(%rax)
   1b3ff:	74 73                	je     1b474 <_ULx86_64_dwarf_step+0x134>
   1b401:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1b408:	79 37 9e 
   1b40b:	41 0f b7 54 24 5e    	movzwl 0x5e(%r12),%edx
   1b411:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1b416:	48 0f af c6          	imul   %rsi,%rax
   1b41a:	29 d1                	sub    %edx,%ecx
   1b41c:	48 d3 e8             	shr    %cl,%rax
   1b41f:	49 8b 4c 24 68       	mov    0x68(%r12),%rcx
   1b424:	0f b6 c0             	movzbl %al,%eax
   1b427:	0f b7 1c 41          	movzwl (%rcx,%rax,2),%ebx
   1b42b:	89 d1                	mov    %edx,%ecx
   1b42d:	b8 01 00 00 00       	mov    $0x1,%eax
   1b432:	d3 e0                	shl    %cl,%eax
   1b434:	89 c1                	mov    %eax,%ecx
   1b436:	0f b7 c3             	movzwl %bx,%eax
   1b439:	39 c1                	cmp    %eax,%ecx
   1b43b:	0f 8e b7 02 00 00    	jle    1b6f8 <_ULx86_64_dwarf_step+0x3b8>
   1b441:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1b448:	00 
   1b449:	eb 14                	jmp    1b45f <_ULx86_64_dwarf_step+0x11f>
   1b44b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b450:	0f b7 58 08          	movzwl 0x8(%rax),%ebx
   1b454:	0f b7 c3             	movzwl %bx,%eax
   1b457:	39 c8                	cmp    %ecx,%eax
   1b459:	0f 8d 99 02 00 00    	jge    1b6f8 <_ULx86_64_dwarf_step+0x3b8>
   1b45f:	48 89 d8             	mov    %rbx,%rax
   1b462:	48 c1 e0 04          	shl    $0x4,%rax
   1b466:	48 01 d0             	add    %rdx,%rax
   1b469:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1b46d:	74 e1                	je     1b450 <_ULx86_64_dwarf_step+0x110>
   1b46f:	48 39 30             	cmp    %rsi,(%rax)
   1b472:	75 dc                	jne    1b450 <_ULx86_64_dwarf_step+0x110>
   1b474:	48 69 db b8 00 00 00 	imul   $0xb8,%rbx,%rbx
   1b47b:	49 03 5c 24 78       	add    0x78(%r12),%rbx
   1b480:	48 85 db             	test   %rbx,%rbx
   1b483:	0f 84 6f 02 00 00    	je     1b6f8 <_ULx86_64_dwarf_step+0x3b8>
   1b489:	48 89 d8             	mov    %rbx,%rax
   1b48c:	49 2b 44 24 78       	sub    0x78(%r12),%rax
   1b491:	48 c1 f8 03          	sar    $0x3,%rax
   1b495:	66 69 c0 a7 37       	imul   $0x37a7,%ax,%ax
   1b49a:	0f b7 c0             	movzwl %ax,%eax
   1b49d:	48 c1 e0 04          	shl    $0x4,%rax
   1b4a1:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax
   1b4a6:	f7 d0                	not    %eax
   1b4a8:	83 e0 02             	and    $0x2,%eax
   1b4ab:	89 c2                	mov    %eax,%edx
   1b4ad:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b4b4:	83 e0 fd             	and    $0xfffffffd,%eax
   1b4b7:	09 d0                	or     %edx,%eax
   1b4b9:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   1b4bf:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   1b4c3:	0f 11 84 24 c8 00 00 	movups %xmm0,0xc8(%rsp)
   1b4ca:	00 
   1b4cb:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   1b4d0:	0f 11 8c 24 d8 00 00 	movups %xmm1,0xd8(%rsp)
   1b4d7:	00 
   1b4d8:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   1b4dd:	0f 11 94 24 e8 00 00 	movups %xmm2,0xe8(%rsp)
   1b4e4:	00 
   1b4e5:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   1b4ea:	0f 11 9c 24 f8 00 00 	movups %xmm3,0xf8(%rsp)
   1b4f1:	00 
   1b4f2:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   1b4f7:	0f 11 a4 24 08 01 00 	movups %xmm4,0x108(%rsp)
   1b4fe:	00 
   1b4ff:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   1b504:	0f 11 ac 24 18 01 00 	movups %xmm5,0x118(%rsp)
   1b50b:	00 
   1b50c:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   1b511:	0f 11 b4 24 28 01 00 	movups %xmm6,0x128(%rsp)
   1b518:	00 
   1b519:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   1b51e:	0f 11 bc 24 38 01 00 	movups %xmm7,0x138(%rsp)
   1b525:	00 
   1b526:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   1b52d:	00 
   1b52e:	0f 11 84 24 48 01 00 	movups %xmm0,0x148(%rsp)
   1b535:	00 
   1b536:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1b53d:	00 
   1b53e:	0f 11 8c 24 58 01 00 	movups %xmm1,0x158(%rsp)
   1b545:	00 
   1b546:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   1b54d:	00 
   1b54e:	0f 11 94 24 68 01 00 	movups %xmm2,0x168(%rsp)
   1b555:	00 
   1b556:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
   1b55d:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1b564:	00 
   1b565:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1b569:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1b56d:	75 10                	jne    1b57f <_ULx86_64_dwarf_step+0x23f>
   1b56f:	4c 89 ef             	mov    %r13,%rdi
   1b572:	e8 b9 06 ff ff       	call   bc30 <sgx_spin_unlock>
   1b577:	85 c0                	test   %eax,%eax
   1b579:	0f 85 2f 04 00 00    	jne    1b9ae <_ULx86_64_dwarf_step+0x66e>
   1b57f:	45 31 e4             	xor    %r12d,%r12d
   1b582:	49 2b 5d 20          	sub    0x20(%r13),%rbx
   1b586:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1b58a:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   1b591:	6f 7a d3 
   1b594:	48 c1 fb 03          	sar    $0x3,%rbx
   1b598:	48 0f af d8          	imul   %rax,%rbx
   1b59c:	0f b7 d3             	movzwl %bx,%edx
   1b59f:	8d 73 01             	lea    0x1(%rbx),%esi
   1b5a2:	0f b7 c3             	movzwl %bx,%eax
   1b5a5:	48 c1 e2 04          	shl    $0x4,%rdx
   1b5a9:	0f b7 54 11 0a       	movzwl 0xa(%rcx,%rdx,1),%edx
   1b5ae:	66 89 95 a0 01 00 00 	mov    %dx,0x1a0(%rbp)
   1b5b5:	48 0f bf 95 a2 01 00 	movswq 0x1a2(%rbp),%rdx
   1b5bc:	00 
   1b5bd:	48 c1 e2 04          	shl    $0x4,%rdx
   1b5c1:	66 89 74 11 0a       	mov    %si,0xa(%rcx,%rdx,1)
   1b5c6:	66 89 9d a2 01 00 00 	mov    %bx,0x1a2(%rbp)
   1b5cd:	45 85 e4             	test   %r12d,%r12d
   1b5d0:	78 2d                	js     1b5ff <_ULx86_64_dwarf_step+0x2bf>
   1b5d2:	48 c1 e0 04          	shl    $0x4,%rax
   1b5d6:	49 03 45 28          	add    0x28(%r13),%rax
   1b5da:	48 89 ef             	mov    %rbp,%rdi
   1b5dd:	0f b6 70 0c          	movzbl 0xc(%rax),%esi
   1b5e1:	40 d0 ee             	shr    %sil
   1b5e4:	83 e6 01             	and    $0x1,%esi
   1b5e7:	e8 64 23 00 00       	call   1d950 <_ULx86_64_reuse_frame>
   1b5ec:	48 8d b4 24 c8 00 00 	lea    0xc8(%rsp),%rsi
   1b5f3:	00 
   1b5f4:	48 89 ef             	mov    %rbp,%rdi
   1b5f7:	e8 84 f6 ff ff       	call   1ac80 <apply_reg_state>
   1b5fc:	41 89 c4             	mov    %eax,%r12d
   1b5ff:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1b606:	00 
   1b607:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1b60e:	00 00 
   1b610:	0f 85 9d 03 00 00    	jne    1b9b3 <_ULx86_64_dwarf_step+0x673>
   1b616:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1b61d:	44 89 e0             	mov    %r12d,%eax
   1b620:	5b                   	pop    %rbx
   1b621:	5d                   	pop    %rbp
   1b622:	41 5c                	pop    %r12
   1b624:	41 5d                	pop    %r13
   1b626:	41 5e                	pop    %r14
   1b628:	41 5f                	pop    %r15
   1b62a:	c3                   	ret    
   1b62b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b630:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1b634:	45 31 ff             	xor    %r15d,%r15d
   1b637:	45 31 ed             	xor    %r13d,%r13d
   1b63a:	48 89 ef             	mov    %rbp,%rdi
   1b63d:	e8 3e e8 ff ff       	call   19e80 <fetch_proc_info>
   1b642:	41 89 c4             	mov    %eax,%r12d
   1b645:	85 c0                	test   %eax,%eax
   1b647:	0f 88 c4 00 00 00    	js     1b711 <_ULx86_64_dwarf_step+0x3d1>
   1b64d:	48 8b 85 90 01 00 00 	mov    0x190(%rbp),%rax
   1b654:	0f b6 58 46          	movzbl 0x46(%rax),%ebx
   1b658:	8b 85 88 01 00 00    	mov    0x188(%rbp),%eax
   1b65e:	c0 eb 02             	shr    $0x2,%bl
   1b661:	83 f3 01             	xor    $0x1,%ebx
   1b664:	83 e3 01             	and    $0x1,%ebx
   1b667:	85 c0                	test   %eax,%eax
   1b669:	0f 84 d1 02 00 00    	je     1b940 <_ULx86_64_dwarf_step+0x600>
   1b66f:	83 e8 01             	sub    $0x1,%eax
   1b672:	83 f8 01             	cmp    $0x1,%eax
   1b675:	0f 87 dd 02 00 00    	ja     1b958 <_ULx86_64_dwarf_step+0x618>
   1b67b:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1b67f:	48 89 e6             	mov    %rsp,%rsi
   1b682:	48 89 ef             	mov    %rbp,%rdi
   1b685:	e8 a6 f3 ff ff       	call   1aa30 <create_state_record_for.part.0>
   1b68a:	41 89 c6             	mov    %eax,%r14d
   1b68d:	41 89 c4             	mov    %eax,%r12d
   1b690:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b697:	41 f7 d6             	not    %r14d
   1b69a:	41 c1 ee 1f          	shr    $0x1f,%r14d
   1b69e:	45 21 fe             	and    %r15d,%r14d
   1b6a1:	a8 08                	test   $0x8,%al
   1b6a3:	0f 85 81 00 00 00    	jne    1b72a <_ULx86_64_dwarf_step+0x3ea>
   1b6a9:	48 8b b5 90 01 00 00 	mov    0x190(%rbp),%rsi
   1b6b0:	48 85 f6             	test   %rsi,%rsi
   1b6b3:	74 0d                	je     1b6c2 <_ULx86_64_dwarf_step+0x382>
   1b6b5:	83 bd 88 01 00 00 01 	cmpl   $0x1,0x188(%rbp)
   1b6bc:	0f 84 ae 02 00 00    	je     1b970 <_ULx86_64_dwarf_step+0x630>
   1b6c2:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b6c9:	01 db                	add    %ebx,%ebx
   1b6cb:	83 e3 06             	and    $0x6,%ebx
   1b6ce:	83 e0 f9             	and    $0xfffffff9,%eax
   1b6d1:	09 c3                	or     %eax,%ebx
   1b6d3:	88 9d 50 01 00 00    	mov    %bl,0x150(%rbp)
   1b6d9:	45 84 f6             	test   %r14b,%r14b
   1b6dc:	75 6a                	jne    1b748 <_ULx86_64_dwarf_step+0x408>
   1b6de:	4d 85 ed             	test   %r13,%r13
   1b6e1:	0f 85 b1 02 00 00    	jne    1b998 <_ULx86_64_dwarf_step+0x658>
   1b6e7:	45 85 e4             	test   %r12d,%r12d
   1b6ea:	0f 89 fc fe ff ff    	jns    1b5ec <_ULx86_64_dwarf_step+0x2ac>
   1b6f0:	e9 0a ff ff ff       	jmp    1b5ff <_ULx86_64_dwarf_step+0x2bf>
   1b6f5:	0f 1f 00             	nopl   (%rax)
   1b6f8:	48 89 ef             	mov    %rbp,%rdi
   1b6fb:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1b701:	e8 7a e7 ff ff       	call   19e80 <fetch_proc_info>
   1b706:	41 89 c4             	mov    %eax,%r12d
   1b709:	85 c0                	test   %eax,%eax
   1b70b:	0f 89 3c ff ff ff    	jns    1b64d <_ULx86_64_dwarf_step+0x30d>
   1b711:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b718:	45 31 f6             	xor    %r14d,%r14d
   1b71b:	89 c3                	mov    %eax,%ebx
   1b71d:	d0 eb                	shr    %bl
   1b71f:	83 e3 01             	and    $0x1,%ebx
   1b722:	a8 08                	test   $0x8,%al
   1b724:	0f 84 7f ff ff ff    	je     1b6a9 <_ULx86_64_dwarf_step+0x369>
   1b72a:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1b72e:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b732:	48 8d b5 58 01 00 00 	lea    0x158(%rbp),%rsi
   1b739:	e8 a2 24 00 00       	call   1dbe0 <_ULx86_64_Iput_dynamic_unwind_info>
   1b73e:	e9 7f ff ff ff       	jmp    1b6c2 <_ULx86_64_dwarf_step+0x382>
   1b743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b748:	41 0f b7 55 06       	movzwl 0x6(%r13),%edx
   1b74d:	41 0f b7 5d 04       	movzwl 0x4(%r13),%ebx
   1b752:	be 01 00 00 00       	mov    $0x1,%esi
   1b757:	4d 8b 45 28          	mov    0x28(%r13),%r8
   1b75b:	4d 8b 5d 10          	mov    0x10(%r13),%r11
   1b75f:	89 d1                	mov    %edx,%ecx
   1b761:	49 89 de             	mov    %rbx,%r14
   1b764:	8d 43 01             	lea    0x1(%rbx),%eax
   1b767:	48 89 df             	mov    %rbx,%rdi
   1b76a:	d3 e6                	shl    %cl,%esi
   1b76c:	49 c1 e6 04          	shl    $0x4,%r14
   1b770:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   1b773:	4f 8d 0c 30          	lea    (%r8,%r14,1),%r9
   1b777:	21 c8                	and    %ecx,%eax
   1b779:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1b77e:	66 41 89 45 04       	mov    %ax,0x4(%r13)
   1b783:	49 8b 01             	mov    (%r9),%rax
   1b786:	29 d1                	sub    %edx,%ecx
   1b788:	48 85 c0             	test   %rax,%rax
   1b78b:	74 5d                	je     1b7ea <_ULx86_64_dwarf_step+0x4aa>
   1b78d:	48 ba 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rdx
   1b794:	79 37 9e 
   1b797:	48 0f af c2          	imul   %rdx,%rax
   1b79b:	48 d3 e8             	shr    %cl,%rax
   1b79e:	0f b6 c0             	movzbl %al,%eax
   1b7a1:	4d 8d 14 43          	lea    (%r11,%rax,2),%r10
   1b7a5:	41 0f b7 02          	movzwl (%r10),%eax
   1b7a9:	89 c2                	mov    %eax,%edx
   1b7ab:	39 c6                	cmp    %eax,%esi
   1b7ad:	7f 14                	jg     1b7c3 <_ULx86_64_dwarf_step+0x483>
   1b7af:	eb 39                	jmp    1b7ea <_ULx86_64_dwarf_step+0x4aa>
   1b7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b7b8:	4c 8d 50 08          	lea    0x8(%rax),%r10
   1b7bc:	0f b7 c2             	movzwl %dx,%eax
   1b7bf:	39 c6                	cmp    %eax,%esi
   1b7c1:	7e 27                	jle    1b7ea <_ULx86_64_dwarf_step+0x4aa>
   1b7c3:	0f b7 c2             	movzwl %dx,%eax
   1b7c6:	41 89 d7             	mov    %edx,%r15d
   1b7c9:	48 c1 e0 04          	shl    $0x4,%rax
   1b7cd:	4c 01 c0             	add    %r8,%rax
   1b7d0:	0f b7 50 08          	movzwl 0x8(%rax),%edx
   1b7d4:	66 44 39 ff          	cmp    %r15w,%di
   1b7d8:	75 de                	jne    1b7b8 <_ULx86_64_dwarf_step+0x478>
   1b7da:	66 41 89 12          	mov    %dx,(%r10)
   1b7de:	41 0f b7 45 06       	movzwl 0x6(%r13),%eax
   1b7e3:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1b7e8:	29 c1                	sub    %eax,%ecx
   1b7ea:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1b7f1:	79 37 9e 
   1b7f4:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1b7f8:	48 0f af c2          	imul   %rdx,%rax
   1b7fc:	48 d3 e8             	shr    %cl,%rax
   1b7ff:	0f b6 c0             	movzbl %al,%eax
   1b802:	49 8d 04 43          	lea    (%r11,%rax,2),%rax
   1b806:	0f b7 08             	movzwl (%rax),%ecx
   1b809:	66 41 89 49 08       	mov    %cx,0x8(%r9)
   1b80e:	66 89 38             	mov    %di,(%rax)
   1b811:	48 89 ef             	mov    %rbp,%rdi
   1b814:	41 80 49 0c 01       	orb    $0x1,0xc(%r9)
   1b819:	49 89 11             	mov    %rdx,(%r9)
   1b81c:	e8 1f 21 00 00       	call   1d940 <_ULx86_64_cache_frame>
   1b821:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1b825:	83 e0 01             	and    $0x1,%eax
   1b828:	8d 14 00             	lea    (%rax,%rax,1),%edx
   1b82b:	42 0f b6 44 31 0c    	movzbl 0xc(%rcx,%r14,1),%eax
   1b831:	83 e0 fd             	and    $0xfffffffd,%eax
   1b834:	09 d0                	or     %edx,%eax
   1b836:	48 ba a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rdx
   1b83d:	6f 7a d3 
   1b840:	42 88 44 31 0c       	mov    %al,0xc(%rcx,%r14,1)
   1b845:	48 69 c3 b8 00 00 00 	imul   $0xb8,%rbx,%rax
   1b84c:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   1b850:	48 01 c3             	add    %rax,%rbx
   1b853:	48 c1 f8 03          	sar    $0x3,%rax
   1b857:	48 0f af c2          	imul   %rdx,%rax
   1b85b:	31 d2                	xor    %edx,%edx
   1b85d:	48 c1 e0 04          	shl    $0x4,%rax
   1b861:	66 89 54 01 0a       	mov    %dx,0xa(%rcx,%rax,1)
   1b866:	f3 0f 6f 9c 24 c8 00 	movdqu 0xc8(%rsp),%xmm3
   1b86d:	00 00 
   1b86f:	0f 11 1b             	movups %xmm3,(%rbx)
   1b872:	f3 0f 6f a4 24 d8 00 	movdqu 0xd8(%rsp),%xmm4
   1b879:	00 00 
   1b87b:	0f 11 63 10          	movups %xmm4,0x10(%rbx)
   1b87f:	f3 0f 6f ac 24 e8 00 	movdqu 0xe8(%rsp),%xmm5
   1b886:	00 00 
   1b888:	0f 11 6b 20          	movups %xmm5,0x20(%rbx)
   1b88c:	f3 0f 6f b4 24 f8 00 	movdqu 0xf8(%rsp),%xmm6
   1b893:	00 00 
   1b895:	0f 11 73 30          	movups %xmm6,0x30(%rbx)
   1b899:	f3 0f 6f bc 24 08 01 	movdqu 0x108(%rsp),%xmm7
   1b8a0:	00 00 
   1b8a2:	0f 11 7b 40          	movups %xmm7,0x40(%rbx)
   1b8a6:	f3 0f 6f 9c 24 18 01 	movdqu 0x118(%rsp),%xmm3
   1b8ad:	00 00 
   1b8af:	0f 11 5b 50          	movups %xmm3,0x50(%rbx)
   1b8b3:	f3 0f 6f a4 24 28 01 	movdqu 0x128(%rsp),%xmm4
   1b8ba:	00 00 
   1b8bc:	0f 11 63 60          	movups %xmm4,0x60(%rbx)
   1b8c0:	f3 0f 6f ac 24 38 01 	movdqu 0x138(%rsp),%xmm5
   1b8c7:	00 00 
   1b8c9:	0f 11 6b 70          	movups %xmm5,0x70(%rbx)
   1b8cd:	f3 0f 6f b4 24 48 01 	movdqu 0x148(%rsp),%xmm6
   1b8d4:	00 00 
   1b8d6:	0f 11 b3 80 00 00 00 	movups %xmm6,0x80(%rbx)
   1b8dd:	f3 0f 6f bc 24 58 01 	movdqu 0x158(%rsp),%xmm7
   1b8e4:	00 00 
   1b8e6:	0f 11 bb 90 00 00 00 	movups %xmm7,0x90(%rbx)
   1b8ed:	f3 0f 6f 84 24 68 01 	movdqu 0x168(%rsp),%xmm0
   1b8f4:	00 00 
   1b8f6:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
   1b8fd:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1b904:	00 
   1b905:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
   1b90c:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1b910:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1b914:	75 10                	jne    1b926 <_ULx86_64_dwarf_step+0x5e6>
   1b916:	4c 89 ef             	mov    %r13,%rdi
   1b919:	e8 12 03 ff ff       	call   bc30 <sgx_spin_unlock>
   1b91e:	85 c0                	test   %eax,%eax
   1b920:	0f 85 88 00 00 00    	jne    1b9ae <_ULx86_64_dwarf_step+0x66e>
   1b926:	48 85 db             	test   %rbx,%rbx
   1b929:	0f 85 53 fc ff ff    	jne    1b582 <_ULx86_64_dwarf_step+0x242>
   1b92f:	b8 ff ff 00 00       	mov    $0xffff,%eax
   1b934:	e9 94 fc ff ff       	jmp    1b5cd <_ULx86_64_dwarf_step+0x28d>
   1b939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b940:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b947:	45 31 f6             	xor    %r14d,%r14d
   1b94a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1b950:	e9 4c fd ff ff       	jmp    1b6a1 <_ULx86_64_dwarf_step+0x361>
   1b955:	0f 1f 00             	nopl   (%rax)
   1b958:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1b95f:	45 31 f6             	xor    %r14d,%r14d
   1b962:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1b968:	e9 34 fd ff ff       	jmp    1b6a1 <_ULx86_64_dwarf_step+0x361>
   1b96d:	0f 1f 00             	nopl   (%rax)
   1b970:	48 8d 3d 89 00 02 00 	lea    0x20089(%rip),%rdi        # 3ba00 <dwarf_cie_info_pool>
   1b977:	e8 44 1f 00 00       	call   1d8c0 <_UIx86_64__mempool_free>
   1b97c:	48 c7 85 90 01 00 00 	movq   $0x0,0x190(%rbp)
   1b983:	00 00 00 00 
   1b987:	e9 36 fd ff ff       	jmp    1b6c2 <_ULx86_64_dwarf_step+0x382>
   1b98c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b990:	45 31 ff             	xor    %r15d,%r15d
   1b993:	e9 a2 fc ff ff       	jmp    1b63a <_ULx86_64_dwarf_step+0x2fa>
   1b998:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1b99c:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1b9a0:	75 8d                	jne    1b92f <_ULx86_64_dwarf_step+0x5ef>
   1b9a2:	4c 89 ef             	mov    %r13,%rdi
   1b9a5:	e8 86 02 ff ff       	call   bc30 <sgx_spin_unlock>
   1b9aa:	85 c0                	test   %eax,%eax
   1b9ac:	74 81                	je     1b92f <_ULx86_64_dwarf_step+0x5ef>
   1b9ae:	e8 51 5c 00 00       	call   21604 <abort>
   1b9b3:	e8 08 40 ff ff       	call   f9c0 <__stack_chk_fail>
   1b9b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b9bf:	00 

000000000001b9c0 <_ULx86_64_dwarf_make_proc_info>:
   1b9c0:	f3 0f 1e fa          	endbr64 
   1b9c4:	41 54                	push   %r12
   1b9c6:	53                   	push   %rbx
   1b9c7:	48 89 fb             	mov    %rdi,%rbx
   1b9ca:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1b9d1:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   1b9d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b9dc:	00 00 
   1b9de:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1b9e5:	00 
   1b9e6:	31 c0                	xor    %eax,%eax
   1b9e8:	e8 93 e4 ff ff       	call   19e80 <fetch_proc_info>
   1b9ed:	41 89 c4             	mov    %eax,%r12d
   1b9f0:	85 c0                	test   %eax,%eax
   1b9f2:	78 30                	js     1ba24 <_ULx86_64_dwarf_make_proc_info+0x64>
   1b9f4:	8b 83 88 01 00 00    	mov    0x188(%rbx),%eax
   1b9fa:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1ba00:	85 c0                	test   %eax,%eax
   1ba02:	74 20                	je     1ba24 <_ULx86_64_dwarf_make_proc_info+0x64>
   1ba04:	83 e8 01             	sub    $0x1,%eax
   1ba07:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1ba0d:	83 f8 01             	cmp    $0x1,%eax
   1ba10:	77 12                	ja     1ba24 <_ULx86_64_dwarf_make_proc_info+0x64>
   1ba12:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1ba16:	48 89 e6             	mov    %rsp,%rsi
   1ba19:	48 89 df             	mov    %rbx,%rdi
   1ba1c:	e8 0f f0 ff ff       	call   1aa30 <create_state_record_for.part.0>
   1ba21:	41 89 c4             	mov    %eax,%r12d
   1ba24:	f6 83 50 01 00 00 08 	testb  $0x8,0x150(%rbx)
   1ba2b:	75 53                	jne    1ba80 <_ULx86_64_dwarf_make_proc_info+0xc0>
   1ba2d:	48 8b b3 90 01 00 00 	mov    0x190(%rbx),%rsi
   1ba34:	48 85 f6             	test   %rsi,%rsi
   1ba37:	74 09                	je     1ba42 <_ULx86_64_dwarf_make_proc_info+0x82>
   1ba39:	83 bb 88 01 00 00 01 	cmpl   $0x1,0x188(%rbx)
   1ba40:	74 56                	je     1ba98 <_ULx86_64_dwarf_make_proc_info+0xd8>
   1ba42:	80 a3 50 01 00 00 fb 	andb   $0xfb,0x150(%rbx)
   1ba49:	45 85 e4             	test   %r12d,%r12d
   1ba4c:	78 0c                	js     1ba5a <_ULx86_64_dwarf_make_proc_info+0x9a>
   1ba4e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ba53:	45 31 e4             	xor    %r12d,%r12d
   1ba56:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1ba5a:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1ba61:	00 
   1ba62:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ba69:	00 00 
   1ba6b:	75 44                	jne    1bab1 <_ULx86_64_dwarf_make_proc_info+0xf1>
   1ba6d:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1ba74:	44 89 e0             	mov    %r12d,%eax
   1ba77:	5b                   	pop    %rbx
   1ba78:	41 5c                	pop    %r12
   1ba7a:	c3                   	ret    
   1ba7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ba80:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1ba84:	48 8b 13             	mov    (%rbx),%rdx
   1ba87:	48 8d b3 58 01 00 00 	lea    0x158(%rbx),%rsi
   1ba8e:	e8 4d 21 00 00       	call   1dbe0 <_ULx86_64_Iput_dynamic_unwind_info>
   1ba93:	eb ad                	jmp    1ba42 <_ULx86_64_dwarf_make_proc_info+0x82>
   1ba95:	0f 1f 00             	nopl   (%rax)
   1ba98:	48 8d 3d 61 ff 01 00 	lea    0x1ff61(%rip),%rdi        # 3ba00 <dwarf_cie_info_pool>
   1ba9f:	e8 1c 1e 00 00       	call   1d8c0 <_UIx86_64__mempool_free>
   1baa4:	48 c7 83 90 01 00 00 	movq   $0x0,0x190(%rbx)
   1baab:	00 00 00 00 
   1baaf:	eb 91                	jmp    1ba42 <_ULx86_64_dwarf_make_proc_info+0x82>
   1bab1:	e8 0a 3f ff ff       	call   f9c0 <__stack_chk_fail>
   1bab6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1babd:	00 00 00 

000000000001bac0 <_ULx86_64_dwarf_read_encoded_pointer>:
   1bac0:	f3 0f 1e fa          	endbr64 
   1bac4:	80 f9 ff             	cmp    $0xff,%cl
   1bac7:	0f 84 83 01 00 00    	je     1bc50 <_ULx86_64_dwarf_read_encoded_pointer+0x190>
   1bacd:	48 8b 3a             	mov    (%rdx),%rdi
   1bad0:	89 c8                	mov    %ecx,%eax
   1bad2:	80 f9 50             	cmp    $0x50,%cl
   1bad5:	0f 84 3d 01 00 00    	je     1bc18 <_ULx86_64_dwarf_read_encoded_pointer+0x158>
   1badb:	83 e1 0f             	and    $0xf,%ecx
   1bade:	80 f9 0c             	cmp    $0xc,%cl
   1bae1:	0f 87 79 01 00 00    	ja     1bc60 <_ULx86_64_dwarf_read_encoded_pointer+0x1a0>
   1bae7:	48 8d 35 a2 78 00 00 	lea    0x78a2(%rip),%rsi        # 23390 <_C_ctype_+0x530>
   1baee:	0f b6 c9             	movzbl %cl,%ecx
   1baf1:	53                   	push   %rbx
   1baf2:	48 63 0c 8e          	movslq (%rsi,%rcx,4),%rcx
   1baf6:	48 01 f1             	add    %rsi,%rcx
   1baf9:	3e ff e1             	notrack jmp *%rcx
   1bafc:	0f 1f 40 00          	nopl   0x0(%rax)
   1bb00:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
   1bb04:	48 8b 37             	mov    (%rdi),%rsi
   1bb07:	48 89 0a             	mov    %rcx,(%rdx)
   1bb0a:	48 85 f6             	test   %rsi,%rsi
   1bb0d:	74 41                	je     1bb50 <_ULx86_64_dwarf_read_encoded_pointer+0x90>
   1bb0f:	89 c2                	mov    %eax,%edx
   1bb11:	83 e2 70             	and    $0x70,%edx
   1bb14:	80 fa 30             	cmp    $0x30,%dl
   1bb17:	0f 84 23 01 00 00    	je     1bc40 <_ULx86_64_dwarf_read_encoded_pointer+0x180>
   1bb1d:	77 21                	ja     1bb40 <_ULx86_64_dwarf_read_encoded_pointer+0x80>
   1bb1f:	84 d2                	test   %dl,%dl
   1bb21:	74 08                	je     1bb2b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1bb23:	80 fa 10             	cmp    $0x10,%dl
   1bb26:	75 38                	jne    1bb60 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1bb28:	48 01 fe             	add    %rdi,%rsi
   1bb2b:	84 c0                	test   %al,%al
   1bb2d:	0f 88 05 01 00 00    	js     1bc38 <_ULx86_64_dwarf_read_encoded_pointer+0x178>
   1bb33:	31 c0                	xor    %eax,%eax
   1bb35:	49 89 31             	mov    %rsi,(%r9)
   1bb38:	5b                   	pop    %rbx
   1bb39:	c3                   	ret    
   1bb3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bb40:	80 fa 40             	cmp    $0x40,%dl
   1bb43:	75 1b                	jne    1bb60 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1bb45:	49 03 30             	add    (%r8),%rsi
   1bb48:	eb e1                	jmp    1bb2b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1bb4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bb50:	31 c0                	xor    %eax,%eax
   1bb52:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1bb59:	5b                   	pop    %rbx
   1bb5a:	c3                   	ret    
   1bb5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bb60:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1bb65:	5b                   	pop    %rbx
   1bb66:	c3                   	ret    
   1bb67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bb6e:	00 00 
   1bb70:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1bb74:	0f b7 37             	movzwl (%rdi),%esi
   1bb77:	48 89 0a             	mov    %rcx,(%rdx)
   1bb7a:	eb 8e                	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bb7c:	0f 1f 40 00          	nopl   0x0(%rax)
   1bb80:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1bb84:	8b 37                	mov    (%rdi),%esi
   1bb86:	48 89 0a             	mov    %rcx,(%rdx)
   1bb89:	e9 7c ff ff ff       	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bb8e:	66 90                	xchg   %ax,%ax
   1bb90:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1bb94:	48 63 37             	movslq (%rdi),%rsi
   1bb97:	48 89 0a             	mov    %rcx,(%rdx)
   1bb9a:	e9 6b ff ff ff       	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bb9f:	90                   	nop
   1bba0:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1bba4:	48 0f bf 37          	movswq (%rdi),%rsi
   1bba8:	48 89 0a             	mov    %rcx,(%rdx)
   1bbab:	e9 5a ff ff ff       	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bbb0:	49 89 fa             	mov    %rdi,%r10
   1bbb3:	31 c9                	xor    %ecx,%ecx
   1bbb5:	31 f6                	xor    %esi,%esi
   1bbb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bbbe:	00 00 
   1bbc0:	41 0f b6 1a          	movzbl (%r10),%ebx
   1bbc4:	49 83 c2 01          	add    $0x1,%r10
   1bbc8:	4c 89 12             	mov    %r10,(%rdx)
   1bbcb:	49 89 db             	mov    %rbx,%r11
   1bbce:	41 83 e3 7f          	and    $0x7f,%r11d
   1bbd2:	49 d3 e3             	shl    %cl,%r11
   1bbd5:	48 83 c1 07          	add    $0x7,%rcx
   1bbd9:	4c 09 de             	or     %r11,%rsi
   1bbdc:	84 db                	test   %bl,%bl
   1bbde:	78 e0                	js     1bbc0 <_ULx86_64_dwarf_read_encoded_pointer+0x100>
   1bbe0:	e9 25 ff ff ff       	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bbe5:	0f 1f 00             	nopl   (%rax)
   1bbe8:	49 89 fa             	mov    %rdi,%r10
   1bbeb:	31 c9                	xor    %ecx,%ecx
   1bbed:	31 f6                	xor    %esi,%esi
   1bbef:	90                   	nop
   1bbf0:	41 0f b6 1a          	movzbl (%r10),%ebx
   1bbf4:	49 83 c2 01          	add    $0x1,%r10
   1bbf8:	4c 89 12             	mov    %r10,(%rdx)
   1bbfb:	49 89 db             	mov    %rbx,%r11
   1bbfe:	41 83 e3 7f          	and    $0x7f,%r11d
   1bc02:	49 d3 e3             	shl    %cl,%r11
   1bc05:	48 83 c1 07          	add    $0x7,%rcx
   1bc09:	4c 09 de             	or     %r11,%rsi
   1bc0c:	84 db                	test   %bl,%bl
   1bc0e:	78 e0                	js     1bbf0 <_ULx86_64_dwarf_read_encoded_pointer+0x130>
   1bc10:	e9 f5 fe ff ff       	jmp    1bb0a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1bc15:	0f 1f 00             	nopl   (%rax)
   1bc18:	48 83 c7 07          	add    $0x7,%rdi
   1bc1c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1bc20:	48 89 3a             	mov    %rdi,(%rdx)
   1bc23:	48 8b 07             	mov    (%rdi),%rax
   1bc26:	48 83 c7 08          	add    $0x8,%rdi
   1bc2a:	48 89 3a             	mov    %rdi,(%rdx)
   1bc2d:	49 89 01             	mov    %rax,(%r9)
   1bc30:	31 c0                	xor    %eax,%eax
   1bc32:	c3                   	ret    
   1bc33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bc38:	48 8b 36             	mov    (%rsi),%rsi
   1bc3b:	e9 f3 fe ff ff       	jmp    1bb33 <_ULx86_64_dwarf_read_encoded_pointer+0x73>
   1bc40:	49 03 70 20          	add    0x20(%r8),%rsi
   1bc44:	e9 e2 fe ff ff       	jmp    1bb2b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1bc49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bc50:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1bc57:	31 c0                	xor    %eax,%eax
   1bc59:	c3                   	ret    
   1bc5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bc60:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1bc65:	c3                   	ret    
   1bc66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bc6d:	00 00 00 

000000000001bc70 <_Ux86_64_dwarf_init>:
   1bc70:	f3 0f 1e fa          	endbr64 
   1bc74:	48 83 ec 08          	sub    $0x8,%rsp
   1bc78:	31 d2                	xor    %edx,%edx
   1bc7a:	be c0 00 00 00       	mov    $0xc0,%esi
   1bc7f:	48 8d 3d ba fd 01 00 	lea    0x1fdba(%rip),%rdi        # 3ba40 <dwarf_reg_state_pool>
   1bc86:	e8 25 1b 00 00       	call   1d7b0 <_UIx86_64__mempool_init>
   1bc8b:	31 d2                	xor    %edx,%edx
   1bc8d:	be 48 00 00 00       	mov    $0x48,%esi
   1bc92:	48 8d 3d 67 fd 01 00 	lea    0x1fd67(%rip),%rdi        # 3ba00 <dwarf_cie_info_pool>
   1bc99:	e8 12 1b 00 00       	call   1d7b0 <_UIx86_64__mempool_init>
   1bc9e:	31 c0                	xor    %eax,%eax
   1bca0:	48 83 c4 08          	add    $0x8,%rsp
   1bca4:	c3                   	ret    
   1bca5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bcac:	00 00 00 
   1bcaf:	90                   	nop

000000000001bcb0 <_ZL5traceP15_Unwind_ContextPv>:
   1bcb0:	f3 0f 1e fa          	endbr64 
   1bcb4:	b8 08 00 00 00       	mov    $0x8,%eax
   1bcb9:	c3                   	ret    
   1bcba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bcc0 <_ZL14free_exceptionPc>:
   1bcc0:	48 8d 05 59 14 01 00 	lea    0x11459(%rip),%rax        # 2d120 <_ZL16emergency_buffer>
   1bcc7:	48 39 c7             	cmp    %rax,%rdi
   1bcca:	72 0c                	jb     1bcd8 <_ZL14free_exceptionPc+0x18>
   1bccc:	48 8d 90 00 40 00 00 	lea    0x4000(%rax),%rdx
   1bcd3:	48 39 d7             	cmp    %rdx,%rdi
   1bcd6:	72 08                	jb     1bce0 <_ZL14free_exceptionPc+0x20>
   1bcd8:	e9 03 23 ff ff       	jmp    dfe0 <dlfree>
   1bcdd:	0f 1f 00             	nopl   (%rax)
   1bce0:	53                   	push   %rbx
   1bce1:	31 db                	xor    %ebx,%ebx
   1bce3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bce8:	48 39 c7             	cmp    %rax,%rdi
   1bceb:	74 33                	je     1bd20 <_ZL14free_exceptionPc+0x60>
   1bced:	83 c3 01             	add    $0x1,%ebx
   1bcf0:	48 05 00 04 00 00    	add    $0x400,%rax
   1bcf6:	83 fb 10             	cmp    $0x10,%ebx
   1bcf9:	75 ed                	jne    1bce8 <_ZL14free_exceptionPc+0x28>
   1bcfb:	ba 00 04 00 00       	mov    $0x400,%edx
   1bd00:	31 f6                	xor    %esi,%esi
   1bd02:	e8 f9 3a ff ff       	call   f800 <memset>
   1bd07:	48 8d 3d ea 13 01 00 	lea    0x113ea(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1bd0e:	e8 ad fe fe ff       	call   bbc0 <sgx_spin_lock>
   1bd13:	48 8d 3d de 13 01 00 	lea    0x113de(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1bd1a:	5b                   	pop    %rbx
   1bd1b:	e9 10 ff fe ff       	jmp    bc30 <sgx_spin_unlock>
   1bd20:	ba 00 04 00 00       	mov    $0x400,%edx
   1bd25:	31 f6                	xor    %esi,%esi
   1bd27:	48 63 db             	movslq %ebx,%rbx
   1bd2a:	e8 d1 3a ff ff       	call   f800 <memset>
   1bd2f:	48 8d 3d c2 13 01 00 	lea    0x113c2(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1bd36:	e8 85 fe fe ff       	call   bbc0 <sgx_spin_lock>
   1bd3b:	48 8d 05 be 13 01 00 	lea    0x113be(%rip),%rax        # 2d100 <_ZL16buffer_allocated>
   1bd42:	48 8d 3d af 13 01 00 	lea    0x113af(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1bd49:	c6 05 f0 04 01 00 01 	movb   $0x1,0x104f0(%rip)        # 2c240 <_ZL16buffer_available>
   1bd50:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
   1bd54:	5b                   	pop    %rbx
   1bd55:	e9 d6 fe fe ff       	jmp    bc30 <sgx_spin_unlock>
   1bd5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bd60 <_ZL10read_valuecPPh>:
   1bd60:	83 e7 0f             	and    $0xf,%edi
   1bd63:	40 80 ff 0c          	cmp    $0xc,%dil
   1bd67:	0f 87 25 01 00 00    	ja     1be92 <_ZL10read_valuecPPh+0x132>
   1bd6d:	48 8d 15 50 76 00 00 	lea    0x7650(%rip),%rdx        # 233c4 <_C_ctype_+0x564>
   1bd74:	40 0f b6 ff          	movzbl %dil,%edi
   1bd78:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   1bd7c:	48 01 d0             	add    %rdx,%rax
   1bd7f:	3e ff e0             	notrack jmp *%rax
   1bd82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bd88:	48 8b 06             	mov    (%rsi),%rax
   1bd8b:	4c 8b 00             	mov    (%rax),%r8
   1bd8e:	48 83 c0 08          	add    $0x8,%rax
   1bd92:	48 89 06             	mov    %rax,(%rsi)
   1bd95:	4c 89 c0             	mov    %r8,%rax
   1bd98:	c3                   	ret    
   1bd99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bda0:	48 8b 16             	mov    (%rsi),%rdx
   1bda3:	31 c9                	xor    %ecx,%ecx
   1bda5:	45 31 c0             	xor    %r8d,%r8d
   1bda8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bdaf:	00 
   1bdb0:	0f b6 02             	movzbl (%rdx),%eax
   1bdb3:	48 83 c2 01          	add    $0x1,%rdx
   1bdb7:	48 89 16             	mov    %rdx,(%rsi)
   1bdba:	89 c7                	mov    %eax,%edi
   1bdbc:	83 e0 7f             	and    $0x7f,%eax
   1bdbf:	d3 e0                	shl    %cl,%eax
   1bdc1:	83 e7 7f             	and    $0x7f,%edi
   1bdc4:	83 c1 07             	add    $0x7,%ecx
   1bdc7:	48 98                	cltq   
   1bdc9:	49 01 c0             	add    %rax,%r8
   1bdcc:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1bdd0:	75 de                	jne    1bdb0 <_ZL10read_valuecPPh+0x50>
   1bdd2:	4c 89 c0             	mov    %r8,%rax
   1bdd5:	c3                   	ret    
   1bdd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bddd:	00 00 00 
   1bde0:	48 8b 06             	mov    (%rsi),%rax
   1bde3:	44 0f b7 00          	movzwl (%rax),%r8d
   1bde7:	48 83 c0 02          	add    $0x2,%rax
   1bdeb:	48 89 06             	mov    %rax,(%rsi)
   1bdee:	4c 89 c0             	mov    %r8,%rax
   1bdf1:	c3                   	ret    
   1bdf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bdf8:	48 8b 06             	mov    (%rsi),%rax
   1bdfb:	44 8b 00             	mov    (%rax),%r8d
   1bdfe:	48 83 c0 04          	add    $0x4,%rax
   1be02:	48 89 06             	mov    %rax,(%rsi)
   1be05:	4c 89 c0             	mov    %r8,%rax
   1be08:	c3                   	ret    
   1be09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1be10:	48 8b 06             	mov    (%rsi),%rax
   1be13:	4c 63 00             	movslq (%rax),%r8
   1be16:	48 83 c0 04          	add    $0x4,%rax
   1be1a:	48 89 06             	mov    %rax,(%rsi)
   1be1d:	4c 89 c0             	mov    %r8,%rax
   1be20:	c3                   	ret    
   1be21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1be28:	48 8b 16             	mov    (%rsi),%rdx
   1be2b:	31 ff                	xor    %edi,%edi
   1be2d:	45 31 c0             	xor    %r8d,%r8d
   1be30:	0f b6 02             	movzbl (%rdx),%eax
   1be33:	89 f9                	mov    %edi,%ecx
   1be35:	48 83 c2 01          	add    $0x1,%rdx
   1be39:	48 89 16             	mov    %rdx,(%rsi)
   1be3c:	41 89 c1             	mov    %eax,%r9d
   1be3f:	83 e0 7f             	and    $0x7f,%eax
   1be42:	d3 e0                	shl    %cl,%eax
   1be44:	41 83 e1 7f          	and    $0x7f,%r9d
   1be48:	89 f9                	mov    %edi,%ecx
   1be4a:	83 c7 07             	add    $0x7,%edi
   1be4d:	48 98                	cltq   
   1be4f:	49 01 c0             	add    %rax,%r8
   1be52:	44 3a 4a ff          	cmp    -0x1(%rdx),%r9b
   1be56:	75 d8                	jne    1be30 <_ZL10read_valuecPPh+0xd0>
   1be58:	83 c1 06             	add    $0x6,%ecx
   1be5b:	4c 89 c0             	mov    %r8,%rax
   1be5e:	48 d3 e8             	shr    %cl,%rax
   1be61:	48 83 f8 01          	cmp    $0x1,%rax
   1be65:	0f 85 2a ff ff ff    	jne    1bd95 <_ZL10read_valuecPPh+0x35>
   1be6b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1be72:	89 f9                	mov    %edi,%ecx
   1be74:	48 d3 e0             	shl    %cl,%rax
   1be77:	49 09 c0             	or     %rax,%r8
   1be7a:	e9 16 ff ff ff       	jmp    1bd95 <_ZL10read_valuecPPh+0x35>
   1be7f:	90                   	nop
   1be80:	48 8b 06             	mov    (%rsi),%rax
   1be83:	4c 0f bf 00          	movswq (%rax),%r8
   1be87:	48 83 c0 02          	add    $0x2,%rax
   1be8b:	48 89 06             	mov    %rax,(%rsi)
   1be8e:	4c 89 c0             	mov    %r8,%rax
   1be91:	c3                   	ret    
   1be92:	50                   	push   %rax
   1be93:	e8 6c 57 00 00       	call   21604 <abort>
   1be98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1be9f:	00 

000000000001bea0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>:
   1bea0:	41 54                	push   %r12
   1bea2:	89 f0                	mov    %esi,%eax
   1bea4:	49 89 d4             	mov    %rdx,%r12
   1bea7:	53                   	push   %rbx
   1bea8:	83 e0 70             	and    $0x70,%eax
   1beab:	89 f3                	mov    %esi,%ebx
   1bead:	48 83 ec 08          	sub    $0x8,%rsp
   1beb1:	3c 30                	cmp    $0x30,%al
   1beb3:	74 53                	je     1bf08 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x68>
   1beb5:	77 31                	ja     1bee8 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x48>
   1beb7:	3c 10                	cmp    $0x10,%al
   1beb9:	74 45                	je     1bf00 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x60>
   1bebb:	3c 20                	cmp    $0x20,%al
   1bebd:	75 11                	jne    1bed0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1bebf:	e8 5c 1f 00 00       	call   1de20 <_Unwind_GetTextRelBase>
   1bec4:	49 01 c4             	add    %rax,%r12
   1bec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bece:	00 00 
   1bed0:	84 db                	test   %bl,%bl
   1bed2:	79 04                	jns    1bed8 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x38>
   1bed4:	4d 8b 24 24          	mov    (%r12),%r12
   1bed8:	48 83 c4 08          	add    $0x8,%rsp
   1bedc:	4c 89 e0             	mov    %r12,%rax
   1bedf:	5b                   	pop    %rbx
   1bee0:	41 5c                	pop    %r12
   1bee2:	c3                   	ret    
   1bee3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bee8:	3c 40                	cmp    $0x40,%al
   1beea:	75 e4                	jne    1bed0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1beec:	e8 df 1e 00 00       	call   1ddd0 <_Unwind_GetRegionStart>
   1bef1:	49 01 c4             	add    %rax,%r12
   1bef4:	eb da                	jmp    1bed0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1bef6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1befd:	00 00 00 
   1bf00:	49 01 cc             	add    %rcx,%r12
   1bf03:	eb cb                	jmp    1bed0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1bf05:	0f 1f 00             	nopl   (%rax)
   1bf08:	e8 d3 1d 00 00       	call   1dce0 <_Unwind_GetDataRelBase>
   1bf0d:	49 01 c4             	add    %rax,%r12
   1bf10:	eb be                	jmp    1bed0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   1bf12:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bf19:	00 00 00 
   1bf1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001bf20 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>:
   1bf20:	41 54                	push   %r12
   1bf22:	55                   	push   %rbp
   1bf23:	48 89 f5             	mov    %rsi,%rbp
   1bf26:	53                   	push   %rbx
   1bf27:	48 83 ec 10          	sub    $0x10,%rsp
   1bf2b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1bf32:	00 00 
   1bf34:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1bf39:	31 c0                	xor    %eax,%eax
   1bf3b:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   1bf42:	48 89 04 24          	mov    %rax,(%rsp)
   1bf46:	48 85 ff             	test   %rdi,%rdi
   1bf49:	0f 84 91 00 00 00    	je     1bfe0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc0>
   1bf4f:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1bf53:	48 89 d3             	mov    %rdx,%rbx
   1bf56:	49 8b 04 24          	mov    (%r12),%rax
   1bf5a:	4c 89 e7             	mov    %r12,%rdi
   1bf5d:	ff 50 10             	call   *0x10(%rax)
   1bf60:	84 c0                	test   %al,%al
   1bf62:	75 4c                	jne    1bfb0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x90>
   1bf64:	48 85 ed             	test   %rbp,%rbp
   1bf67:	0f 84 80 00 00 00    	je     1bfed <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xcd>
   1bf6d:	4c 89 e6             	mov    %r12,%rsi
   1bf70:	48 89 ef             	mov    %rbp,%rdi
   1bf73:	e8 98 10 00 00       	call   1d010 <_ZNKSt9type_infoeqERKS_>
   1bf78:	84 c0                	test   %al,%al
   1bf7a:	75 54                	jne    1bfd0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   1bf7c:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1bf80:	48 89 e2             	mov    %rsp,%rdx
   1bf83:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bf88:	4c 89 e6             	mov    %r12,%rsi
   1bf8b:	48 89 ef             	mov    %rbp,%rdi
   1bf8e:	ff 50 20             	call   *0x20(%rax)
   1bf91:	84 c0                	test   %al,%al
   1bf93:	75 3b                	jne    1bfd0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   1bf95:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1bf9a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1bfa1:	00 00 
   1bfa3:	75 43                	jne    1bfe8 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc8>
   1bfa5:	48 83 c4 10          	add    $0x10,%rsp
   1bfa9:	5b                   	pop    %rbx
   1bfaa:	5d                   	pop    %rbp
   1bfab:	41 5c                	pop    %r12
   1bfad:	c3                   	ret    
   1bfae:	66 90                	xchg   %ax,%ax
   1bfb0:	48 8b 04 24          	mov    (%rsp),%rax
   1bfb4:	48 8b 00             	mov    (%rax),%rax
   1bfb7:	48 89 04 24          	mov    %rax,(%rsp)
   1bfbb:	48 85 ed             	test   %rbp,%rbp
   1bfbe:	75 ad                	jne    1bf6d <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x4d>
   1bfc0:	48 89 03             	mov    %rax,(%rbx)
   1bfc3:	b8 01 00 00 00       	mov    $0x1,%eax
   1bfc8:	eb cb                	jmp    1bf95 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1bfca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bfd0:	48 8b 14 24          	mov    (%rsp),%rdx
   1bfd4:	48 89 13             	mov    %rdx,(%rbx)
   1bfd7:	eb bc                	jmp    1bf95 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1bfd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1bfe0:	48 85 f6             	test   %rsi,%rsi
   1bfe3:	0f 94 c0             	sete   %al
   1bfe6:	eb ad                	jmp    1bf95 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   1bfe8:	e8 d3 39 ff ff       	call   f9c0 <__stack_chk_fail>
   1bfed:	48 8b 04 24          	mov    (%rsp),%rax
   1bff1:	eb cd                	jmp    1bfc0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xa0>
   1bff3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bffa:	00 00 00 
   1bffd:	0f 1f 00             	nopl   (%rax)

000000000001c000 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>:
   1c000:	41 54                	push   %r12
   1c002:	55                   	push   %rbp
   1c003:	48 89 fd             	mov    %rdi,%rbp
   1c006:	53                   	push   %rbx
   1c007:	48 83 ec 10          	sub    $0x10,%rsp
   1c00b:	0f be 3a             	movsbl (%rdx),%edi
   1c00e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c015:	00 00 
   1c017:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c01c:	31 c0                	xor    %eax,%eax
   1c01e:	89 f8                	mov    %edi,%eax
   1c020:	83 e0 0f             	and    $0xf,%eax
   1c023:	3c 0c                	cmp    $0xc,%al
   1c025:	0f 87 7c 00 00 00    	ja     1c0a7 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xa7>
   1c02b:	48 89 d3             	mov    %rdx,%rbx
   1c02e:	0f b6 c0             	movzbl %al,%eax
   1c031:	48 8d 15 c0 73 00 00 	lea    0x73c0(%rip),%rdx        # 233f8 <_C_ctype_+0x598>
   1c038:	49 89 f4             	mov    %rsi,%r12
   1c03b:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1c03f:	48 01 d0             	add    %rdx,%rax
   1c042:	3e ff e0             	notrack jmp *%rax
   1c045:	0f 1f 00             	nopl   (%rax)
   1c048:	b8 08 00 00 00       	mov    $0x8,%eax
   1c04d:	0f af c8             	imul   %eax,%ecx
   1c050:	48 89 e6             	mov    %rsp,%rsi
   1c053:	48 63 c9             	movslq %ecx,%rcx
   1c056:	49 29 cc             	sub    %rcx,%r12
   1c059:	4c 89 24 24          	mov    %r12,(%rsp)
   1c05d:	e8 fe fc ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1c062:	48 89 c2             	mov    %rax,%rdx
   1c065:	31 c0                	xor    %eax,%eax
   1c067:	48 85 d2             	test   %rdx,%rdx
   1c06a:	74 0e                	je     1c07a <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x7a>
   1c06c:	0f b6 33             	movzbl (%rbx),%esi
   1c06f:	4c 89 e1             	mov    %r12,%rcx
   1c072:	48 89 ef             	mov    %rbp,%rdi
   1c075:	e8 26 fe ff ff       	call   1bea0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1c07a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1c07f:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1c086:	00 00 
   1c088:	75 22                	jne    1c0ac <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xac>
   1c08a:	48 83 c4 10          	add    $0x10,%rsp
   1c08e:	5b                   	pop    %rbx
   1c08f:	5d                   	pop    %rbp
   1c090:	41 5c                	pop    %r12
   1c092:	c3                   	ret    
   1c093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c098:	b8 02 00 00 00       	mov    $0x2,%eax
   1c09d:	eb ae                	jmp    1c04d <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   1c09f:	90                   	nop
   1c0a0:	b8 04 00 00 00       	mov    $0x4,%eax
   1c0a5:	eb a6                	jmp    1c04d <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   1c0a7:	e8 58 55 00 00       	call   21604 <abort>
   1c0ac:	e8 0f 39 ff ff       	call   f9c0 <__stack_chk_fail>
   1c0b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c0b8:	00 00 00 
   1c0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c0c0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>:
   1c0c0:	41 57                	push   %r15
   1c0c2:	49 89 cf             	mov    %rcx,%r15
   1c0c5:	41 56                	push   %r14
   1c0c7:	41 55                	push   %r13
   1c0c9:	41 54                	push   %r12
   1c0cb:	49 89 fc             	mov    %rdi,%r12
   1c0ce:	55                   	push   %rbp
   1c0cf:	48 89 f5             	mov    %rsi,%rbp
   1c0d2:	53                   	push   %rbx
   1c0d3:	48 83 ec 28          	sub    $0x28,%rsp
   1c0d7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1c0dc:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1c0e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c0e8:	00 00 
   1c0ea:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c0ef:	31 c0                	xor    %eax,%eax
   1c0f1:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   1c0f8:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   1c0ff:	e8 2c 1c 00 00       	call   1dd30 <_Unwind_GetIP>
   1c104:	4c 89 e7             	mov    %r12,%rdi
   1c107:	49 89 c6             	mov    %rax,%r14
   1c10a:	e8 c1 1c 00 00       	call   1ddd0 <_Unwind_GetRegionStart>
   1c10f:	49 29 c6             	sub    %rax,%r14
   1c112:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1c116:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c11b:	48 3b 45 28          	cmp    0x28(%rbp),%rax
   1c11f:	77 79                	ja     1c19a <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   1c121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c128:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1c12c:	4c 89 ee             	mov    %r13,%rsi
   1c12f:	e8 2c fc ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1c134:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1c138:	4c 89 ee             	mov    %r13,%rsi
   1c13b:	48 89 c3             	mov    %rax,%rbx
   1c13e:	e8 1d fc ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1c143:	49 89 c4             	mov    %rax,%r12
   1c146:	49 39 de             	cmp    %rbx,%r14
   1c149:	72 4f                	jb     1c19a <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   1c14b:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   1c14f:	4c 89 ee             	mov    %r13,%rsi
   1c152:	e8 09 fc ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1c157:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1c15c:	31 c9                	xor    %ecx,%ecx
   1c15e:	31 ff                	xor    %edi,%edi
   1c160:	0f b6 16             	movzbl (%rsi),%edx
   1c163:	48 83 c6 01          	add    $0x1,%rsi
   1c167:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1c16c:	41 89 d0             	mov    %edx,%r8d
   1c16f:	83 e2 7f             	and    $0x7f,%edx
   1c172:	d3 e2                	shl    %cl,%edx
   1c174:	41 83 e0 7f          	and    $0x7f,%r8d
   1c178:	83 c1 07             	add    $0x7,%ecx
   1c17b:	48 63 d2             	movslq %edx,%rdx
   1c17e:	48 01 d7             	add    %rdx,%rdi
   1c181:	44 3a 46 ff          	cmp    -0x1(%rsi),%r8b
   1c185:	75 d9                	jne    1c160 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xa0>
   1c187:	49 39 de             	cmp    %rbx,%r14
   1c18a:	76 08                	jbe    1c194 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xd4>
   1c18c:	4c 01 e3             	add    %r12,%rbx
   1c18f:	49 39 de             	cmp    %rbx,%r14
   1c192:	76 2b                	jbe    1c1bf <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xff>
   1c194:	48 39 75 28          	cmp    %rsi,0x28(%rbp)
   1c198:	73 8e                	jae    1c128 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x68>
   1c19a:	45 31 c0             	xor    %r8d,%r8d
   1c19d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c1a2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1c1a9:	00 00 
   1c1ab:	75 3c                	jne    1c1e9 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x129>
   1c1ad:	48 83 c4 28          	add    $0x28,%rsp
   1c1b1:	44 89 c0             	mov    %r8d,%eax
   1c1b4:	5b                   	pop    %rbx
   1c1b5:	5d                   	pop    %rbp
   1c1b6:	41 5c                	pop    %r12
   1c1b8:	41 5d                	pop    %r13
   1c1ba:	41 5e                	pop    %r14
   1c1bc:	41 5f                	pop    %r15
   1c1be:	c3                   	ret    
   1c1bf:	48 85 ff             	test   %rdi,%rdi
   1c1c2:	74 0c                	je     1c1d0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x110>
   1c1c4:	48 8b 55 28          	mov    0x28(%rbp),%rdx
   1c1c8:	48 8d 54 3a ff       	lea    -0x1(%rdx,%rdi,1),%rdx
   1c1cd:	49 89 17             	mov    %rdx,(%r15)
   1c1d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1c1d6:	48 85 c0             	test   %rax,%rax
   1c1d9:	74 c2                	je     1c19d <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   1c1db:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1c1e0:	48 03 45 08          	add    0x8(%rbp),%rax
   1c1e4:	48 89 03             	mov    %rax,(%rbx)
   1c1e7:	eb b4                	jmp    1c19d <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   1c1e9:	e8 d2 37 ff ff       	call   f9c0 <__stack_chk_fail>
   1c1ee:	66 90                	xchg   %ax,%ax

000000000001c1f0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>:
   1c1f0:	41 57                	push   %r15
   1c1f2:	41 56                	push   %r14
   1c1f4:	41 55                	push   %r13
   1c1f6:	41 54                	push   %r12
   1c1f8:	55                   	push   %rbp
   1c1f9:	53                   	push   %rbx
   1c1fa:	48 83 ec 28          	sub    $0x28,%rsp
   1c1fe:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1c203:	48 85 d2             	test   %rdx,%rdx
   1c206:	0f 84 f0 01 00 00    	je     1c3fc <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x20c>
   1c20c:	48 85 c9             	test   %rcx,%rcx
   1c20f:	48 89 fd             	mov    %rdi,%rbp
   1c212:	49 89 f7             	mov    %rsi,%r15
   1c215:	49 89 d5             	mov    %rdx,%r13
   1c218:	48 89 cb             	mov    %rcx,%rbx
   1c21b:	4d 89 cc             	mov    %r9,%r12
   1c21e:	4c 8d 76 18          	lea    0x18(%rsi),%r14
   1c222:	0f 95 44 24 0b       	setne  0xb(%rsp)
   1c227:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   1c22e:	00 
   1c22f:	90                   	nop
   1c230:	31 d2                	xor    %edx,%edx
   1c232:	45 31 c0             	xor    %r8d,%r8d
   1c235:	89 d1                	mov    %edx,%ecx
   1c237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c23e:	00 00 
   1c240:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   1c245:	49 83 c5 01          	add    $0x1,%r13
   1c249:	89 d0                	mov    %edx,%eax
   1c24b:	83 e0 7f             	and    $0x7f,%eax
   1c24e:	d3 e0                	shl    %cl,%eax
   1c250:	48 98                	cltq   
   1c252:	49 01 c0             	add    %rax,%r8
   1c255:	89 c8                	mov    %ecx,%eax
   1c257:	83 c1 07             	add    $0x7,%ecx
   1c25a:	84 d2                	test   %dl,%dl
   1c25c:	78 e2                	js     1c240 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x50>
   1c25e:	89 ca                	mov    %ecx,%edx
   1c260:	89 c1                	mov    %eax,%ecx
   1c262:	4c 89 c6             	mov    %r8,%rsi
   1c265:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1c26c:	83 c1 06             	add    $0x6,%ecx
   1c26f:	4c 89 c7             	mov    %r8,%rdi
   1c272:	48 d3 ee             	shr    %cl,%rsi
   1c275:	89 d1                	mov    %edx,%ecx
   1c277:	48 d3 e0             	shl    %cl,%rax
   1c27a:	49 09 c0             	or     %rax,%r8
   1c27d:	48 83 fe 01          	cmp    $0x1,%rsi
   1c281:	4c 89 ee             	mov    %r13,%rsi
   1c284:	4c 0f 45 c7          	cmovne %rdi,%r8
   1c288:	31 d2                	xor    %edx,%edx
   1c28a:	45 31 db             	xor    %r11d,%r11d
   1c28d:	89 d1                	mov    %edx,%ecx
   1c28f:	90                   	nop
   1c290:	0f b6 16             	movzbl (%rsi),%edx
   1c293:	48 83 c6 01          	add    $0x1,%rsi
   1c297:	89 d0                	mov    %edx,%eax
   1c299:	83 e0 7f             	and    $0x7f,%eax
   1c29c:	d3 e0                	shl    %cl,%eax
   1c29e:	48 98                	cltq   
   1c2a0:	49 01 c3             	add    %rax,%r11
   1c2a3:	89 c8                	mov    %ecx,%eax
   1c2a5:	83 c1 07             	add    $0x7,%ecx
   1c2a8:	84 d2                	test   %dl,%dl
   1c2aa:	78 e4                	js     1c290 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0xa0>
   1c2ac:	89 ca                	mov    %ecx,%edx
   1c2ae:	89 c1                	mov    %eax,%ecx
   1c2b0:	4c 89 d8             	mov    %r11,%rax
   1c2b3:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   1c2ba:	83 c1 06             	add    $0x6,%ecx
   1c2bd:	4c 89 de             	mov    %r11,%rsi
   1c2c0:	48 d3 e8             	shr    %cl,%rax
   1c2c3:	89 d1                	mov    %edx,%ecx
   1c2c5:	48 d3 e7             	shl    %cl,%rdi
   1c2c8:	49 09 fb             	or     %rdi,%r11
   1c2cb:	48 83 f8 01          	cmp    $0x1,%rax
   1c2cf:	4c 0f 45 de          	cmovne %rsi,%r11
   1c2d3:	49 63 c3             	movslq %r11d,%rax
   1c2d6:	45 85 db             	test   %r11d,%r11d
   1c2d9:	4d 8d 4c 05 00       	lea    0x0(%r13,%rax,1),%r9
   1c2de:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   1c2e4:	4d 0f 45 e9          	cmovne %r9,%r13
   1c2e8:	45 85 c0             	test   %r8d,%r8d
   1c2eb:	7e 5b                	jle    1c348 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   1c2ed:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   1c2f2:	74 54                	je     1c348 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   1c2f4:	49 8b 77 10          	mov    0x10(%r15),%rsi
   1c2f8:	44 89 c1             	mov    %r8d,%ecx
   1c2fb:	4c 89 f2             	mov    %r14,%rdx
   1c2fe:	48 89 ef             	mov    %rbp,%rdi
   1c301:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   1c306:	e8 f5 fc ff ff       	call   1c000 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   1c30b:	4c 89 e2             	mov    %r12,%rdx
   1c30e:	48 89 df             	mov    %rbx,%rdi
   1c311:	48 89 c6             	mov    %rax,%rsi
   1c314:	e8 07 fc ff ff       	call   1bf20 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   1c319:	4c 63 44 24 10       	movslq 0x10(%rsp),%r8
   1c31e:	84 c0                	test   %al,%al
   1c320:	0f 85 c1 00 00 00    	jne    1c3e7 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1f7>
   1c326:	4d 85 ed             	test   %r13,%r13
   1c329:	0f 85 01 ff ff ff    	jne    1c230 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x40>
   1c32f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1c333:	48 83 c4 28          	add    $0x28,%rsp
   1c337:	5b                   	pop    %rbx
   1c338:	5d                   	pop    %rbp
   1c339:	41 5c                	pop    %r12
   1c33b:	41 5d                	pop    %r13
   1c33d:	41 5e                	pop    %r14
   1c33f:	41 5f                	pop    %r15
   1c341:	c3                   	ret    
   1c342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c348:	45 85 c0             	test   %r8d,%r8d
   1c34b:	79 07                	jns    1c354 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x164>
   1c34d:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   1c352:	75 1c                	jne    1c370 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x180>
   1c354:	45 85 c0             	test   %r8d,%r8d
   1c357:	75 cd                	jne    1c326 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1c359:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c35e:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   1c365:	00 
   1c366:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1c36d:	eb b7                	jmp    1c326 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1c36f:	90                   	nop
   1c370:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1c374:	4d 63 c0             	movslq %r8d,%r8
   1c377:	85 c0                	test   %eax,%eax
   1c379:	75 08                	jne    1c383 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x193>
   1c37b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c380:	4c 89 00             	mov    %r8,(%rax)
   1c383:	49 f7 d0             	not    %r8
   1c386:	4d 03 47 10          	add    0x10(%r15),%r8
   1c38a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   1c38f:	4d 89 fd             	mov    %r15,%r13
   1c392:	4d 89 c7             	mov    %r8,%r15
   1c395:	eb 2e                	jmp    1c3c5 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1d5>
   1c397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c39e:	00 00 
   1c3a0:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1c3a4:	4c 89 f2             	mov    %r14,%rdx
   1c3a7:	48 89 ef             	mov    %rbp,%rdi
   1c3aa:	49 83 c7 01          	add    $0x1,%r15
   1c3ae:	e8 4d fc ff ff       	call   1c000 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   1c3b3:	4c 89 e2             	mov    %r12,%rdx
   1c3b6:	48 89 df             	mov    %rbx,%rdi
   1c3b9:	48 89 c6             	mov    %rax,%rsi
   1c3bc:	e8 5f fb ff ff       	call   1bf20 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   1c3c1:	84 c0                	test   %al,%al
   1c3c3:	75 15                	jne    1c3da <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1ea>
   1c3c5:	41 0f b6 0f          	movzbl (%r15),%ecx
   1c3c9:	84 c9                	test   %cl,%cl
   1c3cb:	75 d3                	jne    1c3a0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1b0>
   1c3cd:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1c3d4:	00 
   1c3d5:	e9 55 ff ff ff       	jmp    1c32f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1c3da:	4d 89 ef             	mov    %r13,%r15
   1c3dd:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   1c3e2:	e9 3f ff ff ff       	jmp    1c326 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   1c3e7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c3ec:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1c3f3:	00 
   1c3f4:	4c 89 00             	mov    %r8,(%rax)
   1c3f7:	e9 33 ff ff ff       	jmp    1c32f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1c3fc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   1c403:	00 
   1c404:	e9 26 ff ff ff       	jmp    1c32f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   1c409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c410 <_ZSt10unexpectedv>:
   1c410:	f3 0f 1e fa          	endbr64 
   1c414:	55                   	push   %rbp
   1c415:	0f b6 05 bc 0c 01 00 	movzbl 0x10cbc(%rip),%eax        # 2d0d8 <_ZGVZSt10unexpectedvE4info>
   1c41c:	84 c0                	test   %al,%al
   1c41e:	74 20                	je     1c440 <_ZSt10unexpectedv+0x30>
   1c420:	48 8b 05 b9 0c 01 00 	mov    0x10cb9(%rip),%rax        # 2d0e0 <_ZZSt10unexpectedvE4info>
   1c427:	48 85 c0             	test   %rax,%rax
   1c42a:	74 09                	je     1c435 <_ZSt10unexpectedv+0x25>
   1c42c:	48 8b 40 08          	mov    0x8(%rax),%rax
   1c430:	48 85 c0             	test   %rax,%rax
   1c433:	75 39                	jne    1c46e <_ZSt10unexpectedv+0x5e>
   1c435:	5d                   	pop    %rbp
   1c436:	ff 25 0c fe 00 00    	jmp    *0xfe0c(%rip)        # 2c248 <_ZL17unexpectedHandler>
   1c43c:	0f 1f 40 00          	nopl   0x0(%rax)
   1c440:	48 8d 3d 91 0c 01 00 	lea    0x10c91(%rip),%rdi        # 2d0d8 <_ZGVZSt10unexpectedvE4info>
   1c447:	e8 74 0a 00 00       	call   1cec0 <__cxa_guard_acquire>
   1c44c:	85 c0                	test   %eax,%eax
   1c44e:	74 d0                	je     1c420 <_ZSt10unexpectedv+0x10>
   1c450:	e8 28 4e 00 00       	call   2127d <get_thread_data>
   1c455:	48 83 c0 68          	add    $0x68,%rax
   1c459:	48 8d 3d 78 0c 01 00 	lea    0x10c78(%rip),%rdi        # 2d0d8 <_ZGVZSt10unexpectedvE4info>
   1c460:	48 89 05 79 0c 01 00 	mov    %rax,0x10c79(%rip)        # 2d0e0 <_ZZSt10unexpectedvE4info>
   1c467:	e8 a4 0a 00 00       	call   1cf10 <__cxa_guard_release>
   1c46c:	eb b2                	jmp    1c420 <_ZSt10unexpectedv+0x10>
   1c46e:	ff d0                	call   *%rax
   1c470:	e8 8f 51 00 00       	call   21604 <abort>
   1c475:	f3 0f 1e fa          	endbr64 
   1c479:	48 89 c5             	mov    %rax,%rbp
   1c47c:	e9 9f 5b fe ff       	jmp    2020 <_ZSt10unexpectedv.cold>
   1c481:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c488:	00 00 00 
   1c48b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c490 <__cxa_begin_catch>:
   1c490:	f3 0f 1e fa          	endbr64 
   1c494:	53                   	push   %rbx
   1c495:	48 89 fb             	mov    %rdi,%rbx
   1c498:	e8 e0 4d 00 00       	call   2127d <get_thread_data>
   1c49d:	48 ba 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%rdx
   1c4a4:	aa b1 b8 
   1c4a7:	48 03 13             	add    (%rbx),%rdx
   1c4aa:	83 a8 90 00 00 00 01 	subl   $0x1,0x90(%rax)
   1c4b1:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   1c4b5:	48 83 fa 01          	cmp    $0x1,%rdx
   1c4b9:	76 05                	jbe    1c4c0 <__cxa_begin_catch+0x30>
   1c4bb:	4c 89 c0             	mov    %r8,%rax
   1c4be:	5b                   	pop    %rbx
   1c4bf:	c3                   	ret    
   1c4c0:	8b 53 d0             	mov    -0x30(%rbx),%edx
   1c4c3:	85 d2                	test   %edx,%edx
   1c4c5:	74 19                	je     1c4e0 <__cxa_begin_catch+0x50>
   1c4c7:	79 2d                	jns    1c4f6 <__cxa_begin_catch+0x66>
   1c4c9:	b8 01 00 00 00       	mov    $0x1,%eax
   1c4ce:	29 d0                	sub    %edx,%eax
   1c4d0:	89 c2                	mov    %eax,%edx
   1c4d2:	4c 8b 43 f0          	mov    -0x10(%rbx),%r8
   1c4d6:	89 53 d0             	mov    %edx,-0x30(%rbx)
   1c4d9:	5b                   	pop    %rbx
   1c4da:	4c 89 c0             	mov    %r8,%rax
   1c4dd:	c3                   	ret    
   1c4de:	66 90                	xchg   %ax,%ax
   1c4e0:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   1c4e7:	48 89 4b c8          	mov    %rcx,-0x38(%rbx)
   1c4eb:	48 8d 4b a0          	lea    -0x60(%rbx),%rcx
   1c4ef:	48 89 88 88 00 00 00 	mov    %rcx,0x88(%rax)
   1c4f6:	83 c2 01             	add    $0x1,%edx
   1c4f9:	eb d7                	jmp    1c4d2 <__cxa_begin_catch+0x42>
   1c4fb:	f3 0f 1e fa          	endbr64 
   1c4ff:	48 89 c7             	mov    %rax,%rdi
   1c502:	48 89 d0             	mov    %rdx,%rax
   1c505:	e9 5a 5b fe ff       	jmp    2064 <__cxa_begin_catch.cold>
   1c50a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001c510 <_ZSt9terminatev>:
   1c510:	f3 0f 1e fa          	endbr64 
   1c514:	55                   	push   %rbp
   1c515:	0f b6 05 cc 0b 01 00 	movzbl 0x10bcc(%rip),%eax        # 2d0e8 <_ZGVZSt9terminatevE4info>
   1c51c:	84 c0                	test   %al,%al
   1c51e:	74 26                	je     1c546 <_ZSt9terminatev+0x36>
   1c520:	48 8b 05 c9 0b 01 00 	mov    0x10bc9(%rip),%rax        # 2d0f0 <_ZZSt9terminatevE4info>
   1c527:	48 85 c0             	test   %rax,%rax
   1c52a:	74 0f                	je     1c53b <_ZSt9terminatev+0x2b>
   1c52c:	48 8b 00             	mov    (%rax),%rax
   1c52f:	48 85 c0             	test   %rax,%rax
   1c532:	74 07                	je     1c53b <_ZSt9terminatev+0x2b>
   1c534:	ff d0                	call   *%rax
   1c536:	e8 c9 50 00 00       	call   21604 <abort>
   1c53b:	ff 15 0f fd 00 00    	call   *0xfd0f(%rip)        # 2c250 <_ZL16terminateHandler>
   1c541:	e8 be 50 00 00       	call   21604 <abort>
   1c546:	48 8d 3d 9b 0b 01 00 	lea    0x10b9b(%rip),%rdi        # 2d0e8 <_ZGVZSt9terminatevE4info>
   1c54d:	e8 6e 09 00 00       	call   1cec0 <__cxa_guard_acquire>
   1c552:	85 c0                	test   %eax,%eax
   1c554:	74 ca                	je     1c520 <_ZSt9terminatev+0x10>
   1c556:	e8 22 4d 00 00       	call   2127d <get_thread_data>
   1c55b:	48 83 c0 68          	add    $0x68,%rax
   1c55f:	48 8d 3d 82 0b 01 00 	lea    0x10b82(%rip),%rdi        # 2d0e8 <_ZGVZSt9terminatevE4info>
   1c566:	48 89 05 83 0b 01 00 	mov    %rax,0x10b83(%rip)        # 2d0f0 <_ZZSt9terminatevE4info>
   1c56d:	e8 9e 09 00 00       	call   1cf10 <__cxa_guard_release>
   1c572:	eb ac                	jmp    1c520 <_ZSt9terminatev+0x10>
   1c574:	f3 0f 1e fa          	endbr64 
   1c578:	48 89 c5             	mov    %rax,%rbp
   1c57b:	e9 f4 5a fe ff       	jmp    2074 <_ZSt9terminatev.cold>
   1c580:	f3 0f 1e fa          	endbr64 
   1c584:	48 89 c7             	mov    %rax,%rdi
   1c587:	e9 fc 5a fe ff       	jmp    2088 <_ZSt9terminatev.cold+0x14>
   1c58c:	f3 0f 1e fa          	endbr64 
   1c590:	48 89 c7             	mov    %rax,%rdi
   1c593:	e9 fa 5a fe ff       	jmp    2092 <_ZSt9terminatev.cold+0x1e>
   1c598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c59f:	00 

000000000001c5a0 <__cxa_free_exception>:
   1c5a0:	f3 0f 1e fa          	endbr64 
   1c5a4:	55                   	push   %rbp
   1c5a5:	48 8b 47 90          	mov    -0x70(%rdi),%rax
   1c5a9:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   1c5ad:	48 85 c0             	test   %rax,%rax
   1c5b0:	74 02                	je     1c5b4 <__cxa_free_exception+0x14>
   1c5b2:	ff d0                	call   *%rax
   1c5b4:	48 89 ef             	mov    %rbp,%rdi
   1c5b7:	5d                   	pop    %rbp
   1c5b8:	e9 03 f7 ff ff       	jmp    1bcc0 <_ZL14free_exceptionPc>
   1c5bd:	f3 0f 1e fa          	endbr64 
   1c5c1:	48 89 c7             	mov    %rax,%rdi
   1c5c4:	e9 fb 5a fe ff       	jmp    20c4 <__cxa_free_exception.cold>
   1c5c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c5d0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>:
   1c5d0:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1c5d7:	55 4e 47 
   1c5da:	48 39 47 60          	cmp    %rax,0x60(%rdi)
   1c5de:	74 20                	je     1c600 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x30>
   1c5e0:	f0 48 83 2f 01       	lock subq $0x1,(%rdi)
   1c5e5:	74 09                	je     1c5f0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x20>
   1c5e7:	c3                   	ret    
   1c5e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c5ef:	00 
   1c5f0:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1c5f4:	e9 a7 ff ff ff       	jmp    1c5a0 <__cxa_free_exception>
   1c5f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c600:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1c604:	e9 07 00 00 00       	jmp    1c610 <__cxa_free_dependent_exception>
   1c609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c610 <__cxa_free_dependent_exception>:
   1c610:	f3 0f 1e fa          	endbr64 
   1c614:	55                   	push   %rbp
   1c615:	48 8b 47 80          	mov    -0x80(%rdi),%rax
   1c619:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   1c61d:	48 85 c0             	test   %rax,%rax
   1c620:	74 1b                	je     1c63d <__cxa_free_dependent_exception+0x2d>
   1c622:	48 ba 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rdx
   1c629:	55 4e 47 
   1c62c:	49 89 e8             	mov    %rbp,%r8
   1c62f:	48 39 57 e0          	cmp    %rdx,-0x20(%rdi)
   1c633:	74 1b                	je     1c650 <__cxa_free_dependent_exception+0x40>
   1c635:	4c 89 c7             	mov    %r8,%rdi
   1c638:	e8 93 ff ff ff       	call   1c5d0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   1c63d:	48 89 ef             	mov    %rbp,%rdi
   1c640:	5d                   	pop    %rbp
   1c641:	e9 7a f6 ff ff       	jmp    1bcc0 <_ZL14free_exceptionPc>
   1c646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c64d:	00 00 00 
   1c650:	4c 8d 40 80          	lea    -0x80(%rax),%r8
   1c654:	eb df                	jmp    1c635 <__cxa_free_dependent_exception+0x25>
   1c656:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c65d:	00 00 00 

000000000001c660 <__cxa_end_catch>:
   1c660:	f3 0f 1e fa          	endbr64 
   1c664:	48 83 ec 08          	sub    $0x8,%rsp
   1c668:	e8 10 4c 00 00       	call   2127d <get_thread_data>
   1c66d:	48 8b b8 88 00 00 00 	mov    0x88(%rax),%rdi
   1c674:	8b 57 30             	mov    0x30(%rdi),%edx
   1c677:	85 d2                	test   %edx,%edx
   1c679:	78 25                	js     1c6a0 <__cxa_end_catch+0x40>
   1c67b:	83 ea 01             	sub    $0x1,%edx
   1c67e:	89 57 30             	mov    %edx,0x30(%rdi)
   1c681:	75 30                	jne    1c6b3 <__cxa_end_catch+0x53>
   1c683:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   1c687:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1c68e:	48 83 c4 08          	add    $0x8,%rsp
   1c692:	e9 39 ff ff ff       	jmp    1c5d0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   1c697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c69e:	00 00 
   1c6a0:	83 c2 01             	add    $0x1,%edx
   1c6a3:	89 57 30             	mov    %edx,0x30(%rdi)
   1c6a6:	75 0b                	jne    1c6b3 <__cxa_end_catch+0x53>
   1c6a8:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   1c6ac:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1c6b3:	48 83 c4 08          	add    $0x8,%rsp
   1c6b7:	c3                   	ret    
   1c6b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c6bf:	00 

000000000001c6c0 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   1c6c0:	f3 0f 1e fa          	endbr64 
   1c6c4:	48 89 f7             	mov    %rsi,%rdi
   1c6c7:	e9 d4 fe ff ff       	jmp    1c5a0 <__cxa_free_exception>
   1c6cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c6d0 <_ZL12alloc_or_diem>:
   1c6d0:	41 55                	push   %r13
   1c6d2:	48 89 fe             	mov    %rdi,%rsi
   1c6d5:	41 54                	push   %r12
   1c6d7:	55                   	push   %rbp
   1c6d8:	53                   	push   %rbx
   1c6d9:	48 89 fb             	mov    %rdi,%rbx
   1c6dc:	bf 01 00 00 00       	mov    $0x1,%edi
   1c6e1:	48 83 ec 08          	sub    $0x8,%rsp
   1c6e5:	e8 06 23 ff ff       	call   e9f0 <calloc>
   1c6ea:	49 89 c4             	mov    %rax,%r12
   1c6ed:	48 85 c0             	test   %rax,%rax
   1c6f0:	74 0e                	je     1c700 <_ZL12alloc_or_diem+0x30>
   1c6f2:	48 83 c4 08          	add    $0x8,%rsp
   1c6f6:	4c 89 e0             	mov    %r12,%rax
   1c6f9:	5b                   	pop    %rbx
   1c6fa:	5d                   	pop    %rbp
   1c6fb:	41 5c                	pop    %r12
   1c6fd:	41 5d                	pop    %r13
   1c6ff:	c3                   	ret    
   1c700:	48 81 fb 00 04 00 00 	cmp    $0x400,%rbx
   1c707:	0f 87 c3 00 00 00    	ja     1c7d0 <_ZL12alloc_or_diem+0x100>
   1c70d:	e8 6b 4b 00 00       	call   2127d <get_thread_data>
   1c712:	83 78 78 03          	cmpl   $0x3,0x78(%rax)
   1c716:	48 89 c5             	mov    %rax,%rbp
   1c719:	0f 8f b1 00 00 00    	jg     1c7d0 <_ZL12alloc_or_diem+0x100>
   1c71f:	48 8d 3d d2 09 01 00 	lea    0x109d2(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1c726:	4c 8d 2d d3 09 01 00 	lea    0x109d3(%rip),%r13        # 2d100 <_ZL16buffer_allocated>
   1c72d:	e8 8e f4 fe ff       	call   bbc0 <sgx_spin_lock>
   1c732:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c738:	48 89 de             	mov    %rbx,%rsi
   1c73b:	bf 01 00 00 00       	mov    $0x1,%edi
   1c740:	e8 ab 22 ff ff       	call   e9f0 <calloc>
   1c745:	49 89 c4             	mov    %rax,%r12
   1c748:	48 85 c0             	test   %rax,%rax
   1c74b:	0f 85 87 00 00 00    	jne    1c7d8 <_ZL12alloc_or_diem+0x108>
   1c751:	31 c0                	xor    %eax,%eax
   1c753:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c758:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   1c75e:	41 89 c4             	mov    %eax,%r12d
   1c761:	74 3d                	je     1c7a0 <_ZL12alloc_or_diem+0xd0>
   1c763:	48 83 c0 01          	add    $0x1,%rax
   1c767:	48 83 f8 10          	cmp    $0x10,%rax
   1c76b:	75 eb                	jne    1c758 <_ZL12alloc_or_diem+0x88>
   1c76d:	48 8d 3d 84 09 01 00 	lea    0x10984(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1c774:	c6 05 c5 fa 00 00 00 	movb   $0x0,0xfac5(%rip)        # 2c240 <_ZL16buffer_available>
   1c77b:	e8 b0 f4 fe ff       	call   bc30 <sgx_spin_unlock>
   1c780:	0f b6 05 b9 fa 00 00 	movzbl 0xfab9(%rip),%eax        # 2c240 <_ZL16buffer_available>
   1c787:	84 c0                	test   %al,%al
   1c789:	74 f5                	je     1c780 <_ZL12alloc_or_diem+0xb0>
   1c78b:	48 8d 3d 66 09 01 00 	lea    0x10966(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1c792:	e8 29 f4 fe ff       	call   bbc0 <sgx_spin_lock>
   1c797:	eb 9f                	jmp    1c738 <_ZL12alloc_or_diem+0x68>
   1c799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c7a0:	48 98                	cltq   
   1c7a2:	48 8d 3d 4f 09 01 00 	lea    0x1094f(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1c7a9:	41 c1 e4 0a          	shl    $0xa,%r12d
   1c7ad:	41 c6 44 05 00 01    	movb   $0x1,0x0(%r13,%rax,1)
   1c7b3:	4d 63 e4             	movslq %r12d,%r12
   1c7b6:	e8 75 f4 fe ff       	call   bc30 <sgx_spin_unlock>
   1c7bb:	48 8d 05 5e 09 01 00 	lea    0x1095e(%rip),%rax        # 2d120 <_ZL16emergency_buffer>
   1c7c2:	83 45 78 01          	addl   $0x1,0x78(%rbp)
   1c7c6:	49 01 c4             	add    %rax,%r12
   1c7c9:	0f 85 23 ff ff ff    	jne    1c6f2 <_ZL12alloc_or_diem+0x22>
   1c7cf:	90                   	nop
   1c7d0:	e8 3b fd ff ff       	call   1c510 <_ZSt9terminatev>
   1c7d5:	0f 1f 00             	nopl   (%rax)
   1c7d8:	48 8d 3d 19 09 01 00 	lea    0x10919(%rip),%rdi        # 2d0f8 <_ZL21emergency_malloc_lock>
   1c7df:	e8 4c f4 fe ff       	call   bc30 <sgx_spin_unlock>
   1c7e4:	e9 09 ff ff ff       	jmp    1c6f2 <_ZL12alloc_or_diem+0x22>
   1c7e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001c7f0 <__cxa_allocate_exception>:
   1c7f0:	f3 0f 1e fa          	endbr64 
   1c7f4:	48 83 ec 08          	sub    $0x8,%rsp
   1c7f8:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   1c7fc:	e8 cf fe ff ff       	call   1c6d0 <_ZL12alloc_or_diem>
   1c801:	48 83 c4 08          	add    $0x8,%rsp
   1c805:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   1c809:	c3                   	ret    
   1c80a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001c810 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>:
   1c810:	53                   	push   %rbx
   1c811:	83 ff 05             	cmp    $0x5,%edi
   1c814:	74 05                	je     1c81b <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xb>
   1c816:	e8 f5 fc ff ff       	call   1c510 <_ZSt9terminatev>
   1c81b:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1c822:	55 4e 47 
   1c825:	48 89 f3             	mov    %rsi,%rbx
   1c828:	48 39 46 60          	cmp    %rax,0x60(%rsi)
   1c82c:	74 4e                	je     1c87c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6c>
   1c82e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1c832:	48 85 ff             	test   %rdi,%rdi
   1c835:	74 35                	je     1c86c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   1c837:	48 8d 15 ea f3 00 00 	lea    0xf3ea(%rip),%rdx        # 2bc28 <_ZTIN10__cxxabiv117__class_type_infoE>
   1c83e:	31 c9                	xor    %ecx,%ecx
   1c840:	48 8d 35 d1 f3 00 00 	lea    0xf3d1(%rip),%rsi        # 2bc18 <_ZTISt9type_info>
   1c847:	e8 74 37 00 00       	call   1ffc0 <__dynamic_cast>
   1c84c:	48 89 c2             	mov    %rax,%rdx
   1c84f:	48 85 c0             	test   %rax,%rax
   1c852:	74 18                	je     1c86c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   1c854:	48 8b 05 05 f5 00 00 	mov    0xf505(%rip),%rax        # 2bd60 <_ZTISt9exception>
   1c85b:	48 8d b3 80 00 00 00 	lea    0x80(%rbx),%rsi
   1c862:	48 8d 3d f7 f4 00 00 	lea    0xf4f7(%rip),%rdi        # 2bd60 <_ZTISt9exception>
   1c869:	ff 50 30             	call   *0x30(%rax)
   1c86c:	31 f6                	xor    %esi,%esi
   1c86e:	48 8d 3d 3b f4 ff ff 	lea    -0xbc5(%rip),%rdi        # 1bcb0 <_ZL5traceP15_Unwind_ContextPv>
   1c875:	e8 a6 13 00 00       	call   1dc20 <_Unwind_Backtrace>
   1c87a:	eb 9a                	jmp    1c816 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6>
   1c87c:	48 8b 1e             	mov    (%rsi),%rbx
   1c87f:	48 83 c3 80          	add    $0xffffffffffffff80,%rbx
   1c883:	eb a9                	jmp    1c82e <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x1e>
   1c885:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c88c:	00 00 00 
   1c88f:	90                   	nop

000000000001c890 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>:
   1c890:	55                   	push   %rbp
   1c891:	48 89 fd             	mov    %rdi,%rbp
   1c894:	e8 e4 49 00 00       	call   2127d <get_thread_data>
   1c899:	48 8b 50 70          	mov    0x70(%rax),%rdx
   1c89d:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1c8a1:	48 85 d2             	test   %rdx,%rdx
   1c8a4:	74 27                	je     1c8cd <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x3d>
   1c8a6:	48 8b 50 68          	mov    0x68(%rax),%rdx
   1c8aa:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1c8ae:	48 85 d2             	test   %rdx,%rdx
   1c8b1:	74 27                	je     1c8da <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x4a>
   1c8b3:	83 80 90 00 00 00 01 	addl   $0x1,0x90(%rax)
   1c8ba:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   1c8be:	e8 6d 15 00 00       	call   1de30 <_Unwind_RaiseException>
   1c8c3:	48 89 ee             	mov    %rbp,%rsi
   1c8c6:	89 c7                	mov    %eax,%edi
   1c8c8:	e8 43 ff ff ff       	call   1c810 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>
   1c8cd:	48 8b 15 74 f9 00 00 	mov    0xf974(%rip),%rdx        # 2c248 <_ZL17unexpectedHandler>
   1c8d4:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   1c8d8:	eb cc                	jmp    1c8a6 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x16>
   1c8da:	48 8b 15 6f f9 00 00 	mov    0xf96f(%rip),%rdx        # 2c250 <_ZL16terminateHandler>
   1c8e1:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1c8e5:	eb cc                	jmp    1c8b3 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x23>
   1c8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c8ee:	00 00 

000000000001c8f0 <__cxa_throw>:
   1c8f0:	f3 0f 1e fa          	endbr64 
   1c8f4:	50                   	push   %rax
   1c8f5:	58                   	pop    %rax
   1c8f6:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
   1c8fd:	55 4e 47 
   1c900:	48 83 ec 08          	sub    $0x8,%rsp
   1c904:	48 89 47 e0          	mov    %rax,-0x20(%rdi)
   1c908:	48 8d 05 b1 fd ff ff 	lea    -0x24f(%rip),%rax        # 1c6c0 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>
   1c90f:	48 83 c7 80          	add    $0xffffffffffffff80,%rdi
   1c913:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   1c91a:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   1c91e:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1c922:	48 89 47 68          	mov    %rax,0x68(%rdi)
   1c926:	e8 65 ff ff ff       	call   1c890 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>
   1c92b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001c930 <__gxx_personality_v0>:
   1c930:	f3 0f 1e fa          	endbr64 
   1c934:	41 57                	push   %r15
   1c936:	41 56                	push   %r14
   1c938:	41 55                	push   %r13
   1c93a:	41 54                	push   %r12
   1c93c:	55                   	push   %rbp
   1c93d:	53                   	push   %rbx
   1c93e:	48 83 ec 78          	sub    $0x78,%rsp
   1c942:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1c949:	00 00 
   1c94b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1c950:	31 c0                	xor    %eax,%eax
   1c952:	83 ff 01             	cmp    $0x1,%edi
   1c955:	0f 85 75 02 00 00    	jne    1cbd0 <__gxx_personality_v0+0x2a0>
   1c95b:	49 89 cc             	mov    %rcx,%r12
   1c95e:	4c 89 c5             	mov    %r8,%rbp
   1c961:	45 31 ed             	xor    %r13d,%r13d
   1c964:	31 db                	xor    %ebx,%ebx
   1c966:	49 bf 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%r15
   1c96d:	aa b1 b8 
   1c970:	49 01 d7             	add    %rdx,%r15
   1c973:	49 83 ff 01          	cmp    $0x1,%r15
   1c977:	0f 86 b3 00 00 00    	jbe    1ca30 <__gxx_personality_v0+0x100>
   1c97d:	48 89 ef             	mov    %rbp,%rdi
   1c980:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1c984:	e8 f7 13 00 00       	call   1dd80 <_Unwind_GetLanguageSpecificData>
   1c989:	49 89 c6             	mov    %rax,%r14
   1c98c:	48 85 c0             	test   %rax,%rax
   1c98f:	0f 84 0b 02 00 00    	je     1cba0 <__gxx_personality_v0+0x270>
   1c995:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1c999:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c99d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1c9a4:	00 00 
   1c9a6:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1c9ab:	40 f6 c6 01          	test   $0x1,%sil
   1c9af:	0f 85 ab 00 00 00    	jne    1ca60 <__gxx_personality_v0+0x130>
   1c9b5:	83 e6 04             	and    $0x4,%esi
   1c9b8:	0f 84 22 02 00 00    	je     1cbe0 <__gxx_personality_v0+0x2b0>
   1c9be:	49 83 ff 01          	cmp    $0x1,%r15
   1c9c2:	0f 87 a8 03 00 00    	ja     1cd70 <__gxx_personality_v0+0x440>
   1c9c8:	48 8b 43 48          	mov    0x48(%rbx),%rax
   1c9cc:	48 85 c0             	test   %rax,%rax
   1c9cf:	0f 84 d3 04 00 00    	je     1cea8 <__gxx_personality_v0+0x578>
   1c9d5:	31 f6                	xor    %esi,%esi
   1c9d7:	48 85 db             	test   %rbx,%rbx
   1c9da:	74 11                	je     1c9ed <__gxx_personality_v0+0xbd>
   1c9dc:	48 63 53 34          	movslq 0x34(%rbx),%rdx
   1c9e0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1c9e5:	48 89 c6             	mov    %rax,%rsi
   1c9e8:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1c9ed:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   1c9f4:	00 
   1c9f5:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%rbx)
   1c9fc:	48 89 ef             	mov    %rbp,%rdi
   1c9ff:	e8 7c 16 00 00       	call   1e080 <_Unwind_SetIP>
   1ca04:	4c 89 e2             	mov    %r12,%rdx
   1ca07:	31 f6                	xor    %esi,%esi
   1ca09:	48 89 ef             	mov    %rbp,%rdi
   1ca0c:	e8 5f 16 00 00       	call   1e070 <_Unwind_SetGR>
   1ca11:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1ca16:	be 01 00 00 00       	mov    $0x1,%esi
   1ca1b:	48 89 ef             	mov    %rbp,%rdi
   1ca1e:	e8 4d 16 00 00       	call   1e070 <_Unwind_SetGR>
   1ca23:	b8 07 00 00 00       	mov    $0x7,%eax
   1ca28:	e9 78 01 00 00       	jmp    1cba5 <__gxx_personality_v0+0x275>
   1ca2d:	0f 1f 00             	nopl   (%rax)
   1ca30:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   1ca37:	55 4e 47 
   1ca3a:	48 8d 59 a0          	lea    -0x60(%rcx),%rbx
   1ca3e:	49 89 dd             	mov    %rbx,%r13
   1ca41:	48 39 01             	cmp    %rax,(%rcx)
   1ca44:	0f 85 33 ff ff ff    	jne    1c97d <__gxx_personality_v0+0x4d>
   1ca4a:	48 8b 41 a0          	mov    -0x60(%rcx),%rax
   1ca4e:	4c 8d 68 80          	lea    -0x80(%rax),%r13
   1ca52:	e9 26 ff ff ff       	jmp    1c97d <__gxx_personality_v0+0x4d>
   1ca57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ca5e:	00 00 
   1ca60:	48 89 ef             	mov    %rbp,%rdi
   1ca63:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ca68:	e8 63 13 00 00       	call   1ddd0 <_Unwind_GetRegionStart>
   1ca6d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1ca72:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1ca77:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1ca7b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ca80:	45 0f b6 27          	movzbl (%r15),%r12d
   1ca84:	41 80 fc ff          	cmp    $0xff,%r12b
   1ca88:	74 25                	je     1caaf <__gxx_personality_v0+0x17f>
   1ca8a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1ca8f:	41 0f be fc          	movsbl %r12b,%edi
   1ca93:	e8 c8 f2 ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1ca98:	41 0f b6 f4          	movzbl %r12b,%esi
   1ca9c:	4c 89 f9             	mov    %r15,%rcx
   1ca9f:	48 89 ef             	mov    %rbp,%rdi
   1caa2:	48 89 c2             	mov    %rax,%rdx
   1caa5:	e8 f6 f3 ff ff       	call   1bea0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1caaa:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1caaf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1cab3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1cab8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1cabf:	00 00 
   1cac1:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cac6:	0f b6 02             	movzbl (%rdx),%eax
   1cac9:	88 44 24 48          	mov    %al,0x48(%rsp)
   1cacd:	3c ff                	cmp    $0xff,%al
   1cacf:	74 33                	je     1cb04 <__gxx_personality_v0+0x1d4>
   1cad1:	31 c9                	xor    %ecx,%ecx
   1cad3:	31 d2                	xor    %edx,%edx
   1cad5:	0f 1f 00             	nopl   (%rax)
   1cad8:	0f b6 06             	movzbl (%rsi),%eax
   1cadb:	48 83 c6 01          	add    $0x1,%rsi
   1cadf:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cae4:	89 c7                	mov    %eax,%edi
   1cae6:	83 e0 7f             	and    $0x7f,%eax
   1cae9:	d3 e0                	shl    %cl,%eax
   1caeb:	83 e7 7f             	and    $0x7f,%edi
   1caee:	83 c1 07             	add    $0x7,%ecx
   1caf1:	48 98                	cltq   
   1caf3:	48 01 c2             	add    %rax,%rdx
   1caf6:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1cafa:	75 dc                	jne    1cad8 <__gxx_personality_v0+0x1a8>
   1cafc:	48 01 f2             	add    %rsi,%rdx
   1caff:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1cb04:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1cb08:	31 c9                	xor    %ecx,%ecx
   1cb0a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1cb0f:	0f b6 06             	movzbl (%rsi),%eax
   1cb12:	31 f6                	xor    %esi,%esi
   1cb14:	88 44 24 60          	mov    %al,0x60(%rsp)
   1cb18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cb1f:	00 
   1cb20:	0f b6 02             	movzbl (%rdx),%eax
   1cb23:	48 83 c2 01          	add    $0x1,%rdx
   1cb27:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1cb2c:	89 c7                	mov    %eax,%edi
   1cb2e:	83 e0 7f             	and    $0x7f,%eax
   1cb31:	d3 e0                	shl    %cl,%eax
   1cb33:	83 e7 7f             	and    $0x7f,%edi
   1cb36:	83 c1 07             	add    $0x7,%ecx
   1cb39:	48 98                	cltq   
   1cb3b:	48 01 c6             	add    %rax,%rsi
   1cb3e:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1cb42:	75 dc                	jne    1cb20 <__gxx_personality_v0+0x1f0>
   1cb44:	48 01 d6             	add    %rdx,%rsi
   1cb47:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
   1cb4c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1cb51:	48 89 ef             	mov    %rbp,%rdi
   1cb54:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1cb59:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1cb5e:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1cb63:	4c 89 e6             	mov    %r12,%rsi
   1cb66:	e8 55 f5 ff ff       	call   1c0c0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1cb6b:	84 c0                	test   %al,%al
   1cb6d:	0f 84 ed 01 00 00    	je     1cd60 <__gxx_personality_v0+0x430>
   1cb73:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1cb78:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1cb7c:	48 85 d2             	test   %rdx,%rdx
   1cb7f:	74 1f                	je     1cba0 <__gxx_personality_v0+0x270>
   1cb81:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1cb86:	4c 89 e9             	mov    %r13,%rcx
   1cb89:	4c 89 e6             	mov    %r12,%rsi
   1cb8c:	48 89 ef             	mov    %rbp,%rdi
   1cb8f:	e8 5c f6 ff ff       	call   1c1f0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1cb94:	83 f8 02             	cmp    $0x2,%eax
   1cb97:	0f 84 9b 01 00 00    	je     1cd38 <__gxx_personality_v0+0x408>
   1cb9d:	0f 1f 00             	nopl   (%rax)
   1cba0:	b8 08 00 00 00       	mov    $0x8,%eax
   1cba5:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   1cbaa:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1cbb1:	00 00 
   1cbb3:	0f 85 f4 02 00 00    	jne    1cead <__gxx_personality_v0+0x57d>
   1cbb9:	48 83 c4 78          	add    $0x78,%rsp
   1cbbd:	5b                   	pop    %rbx
   1cbbe:	5d                   	pop    %rbp
   1cbbf:	41 5c                	pop    %r12
   1cbc1:	41 5d                	pop    %r13
   1cbc3:	41 5e                	pop    %r14
   1cbc5:	41 5f                	pop    %r15
   1cbc7:	c3                   	ret    
   1cbc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cbcf:	00 
   1cbd0:	b8 03 00 00 00       	mov    $0x3,%eax
   1cbd5:	eb ce                	jmp    1cba5 <__gxx_personality_v0+0x275>
   1cbd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cbde:	00 00 
   1cbe0:	48 89 ef             	mov    %rbp,%rdi
   1cbe3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cbe8:	e8 e3 11 00 00       	call   1ddd0 <_Unwind_GetRegionStart>
   1cbed:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1cbf2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1cbf7:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1cbfb:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1cc00:	45 0f b6 37          	movzbl (%r15),%r14d
   1cc04:	41 80 fe ff          	cmp    $0xff,%r14b
   1cc08:	74 25                	je     1cc2f <__gxx_personality_v0+0x2ff>
   1cc0a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1cc0f:	41 0f be fe          	movsbl %r14b,%edi
   1cc13:	e8 48 f1 ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1cc18:	41 0f b6 f6          	movzbl %r14b,%esi
   1cc1c:	4c 89 f9             	mov    %r15,%rcx
   1cc1f:	48 89 ef             	mov    %rbp,%rdi
   1cc22:	48 89 c2             	mov    %rax,%rdx
   1cc25:	e8 76 f2 ff ff       	call   1bea0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1cc2a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1cc2f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1cc33:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1cc38:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1cc3f:	00 00 
   1cc41:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cc46:	0f b6 02             	movzbl (%rdx),%eax
   1cc49:	88 44 24 48          	mov    %al,0x48(%rsp)
   1cc4d:	3c ff                	cmp    $0xff,%al
   1cc4f:	74 33                	je     1cc84 <__gxx_personality_v0+0x354>
   1cc51:	31 c9                	xor    %ecx,%ecx
   1cc53:	31 d2                	xor    %edx,%edx
   1cc55:	0f 1f 00             	nopl   (%rax)
   1cc58:	0f b6 06             	movzbl (%rsi),%eax
   1cc5b:	48 83 c6 01          	add    $0x1,%rsi
   1cc5f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cc64:	89 c7                	mov    %eax,%edi
   1cc66:	83 e0 7f             	and    $0x7f,%eax
   1cc69:	d3 e0                	shl    %cl,%eax
   1cc6b:	83 e7 7f             	and    $0x7f,%edi
   1cc6e:	83 c1 07             	add    $0x7,%ecx
   1cc71:	48 98                	cltq   
   1cc73:	48 01 c2             	add    %rax,%rdx
   1cc76:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1cc7a:	75 dc                	jne    1cc58 <__gxx_personality_v0+0x328>
   1cc7c:	48 01 f2             	add    %rsi,%rdx
   1cc7f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1cc84:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1cc88:	31 c9                	xor    %ecx,%ecx
   1cc8a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1cc8f:	0f b6 06             	movzbl (%rsi),%eax
   1cc92:	31 f6                	xor    %esi,%esi
   1cc94:	88 44 24 60          	mov    %al,0x60(%rsp)
   1cc98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cc9f:	00 
   1cca0:	0f b6 02             	movzbl (%rdx),%eax
   1cca3:	48 83 c2 01          	add    $0x1,%rdx
   1cca7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ccac:	89 c7                	mov    %eax,%edi
   1ccae:	83 e0 7f             	and    $0x7f,%eax
   1ccb1:	d3 e0                	shl    %cl,%eax
   1ccb3:	83 e7 7f             	and    $0x7f,%edi
   1ccb6:	83 c1 07             	add    $0x7,%ecx
   1ccb9:	48 98                	cltq   
   1ccbb:	48 01 c6             	add    %rax,%rsi
   1ccbe:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1ccc2:	75 dc                	jne    1cca0 <__gxx_personality_v0+0x370>
   1ccc4:	48 01 d6             	add    %rdx,%rsi
   1ccc7:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   1cccc:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1ccd1:	48 89 ef             	mov    %rbp,%rdi
   1ccd4:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1ccd9:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1ccde:	4c 89 f6             	mov    %r14,%rsi
   1cce1:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1cce6:	e8 d5 f3 ff ff       	call   1c0c0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1cceb:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ccf0:	48 85 f6             	test   %rsi,%rsi
   1ccf3:	0f 84 a7 fe ff ff    	je     1cba0 <__gxx_personality_v0+0x270>
   1ccf9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1ccfe:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1cd02:	48 85 d2             	test   %rdx,%rdx
   1cd05:	0f 84 f1 fc ff ff    	je     1c9fc <__gxx_personality_v0+0xcc>
   1cd0b:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1cd10:	4c 89 e9             	mov    %r13,%rcx
   1cd13:	4c 89 f6             	mov    %r14,%rsi
   1cd16:	48 89 ef             	mov    %rbp,%rdi
   1cd19:	e8 d2 f4 ff ff       	call   1c1f0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1cd1e:	83 f8 01             	cmp    $0x1,%eax
   1cd21:	0f 85 79 fe ff ff    	jne    1cba0 <__gxx_personality_v0+0x270>
   1cd27:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1cd2c:	e9 cb fc ff ff       	jmp    1c9fc <__gxx_personality_v0+0xcc>
   1cd31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cd38:	48 85 db             	test   %rbx,%rbx
   1cd3b:	74 23                	je     1cd60 <__gxx_personality_v0+0x430>
   1cd3d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1cd42:	4c 89 73 40          	mov    %r14,0x40(%rbx)
   1cd46:	89 43 34             	mov    %eax,0x34(%rbx)
   1cd49:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1cd4e:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1cd52:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1cd57:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1cd5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cd60:	b8 06 00 00 00       	mov    $0x6,%eax
   1cd65:	e9 3b fe ff ff       	jmp    1cba5 <__gxx_personality_v0+0x275>
   1cd6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1cd70:	48 89 ef             	mov    %rbp,%rdi
   1cd73:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cd78:	e8 53 10 00 00       	call   1ddd0 <_Unwind_GetRegionStart>
   1cd7d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   1cd82:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1cd87:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1cd8b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1cd90:	45 0f b6 37          	movzbl (%r15),%r14d
   1cd94:	41 80 fe ff          	cmp    $0xff,%r14b
   1cd98:	74 25                	je     1cdbf <__gxx_personality_v0+0x48f>
   1cd9a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1cd9f:	41 0f be fe          	movsbl %r14b,%edi
   1cda3:	e8 b8 ef ff ff       	call   1bd60 <_ZL10read_valuecPPh>
   1cda8:	41 0f b6 f6          	movzbl %r14b,%esi
   1cdac:	4c 89 f9             	mov    %r15,%rcx
   1cdaf:	48 89 ef             	mov    %rbp,%rdi
   1cdb2:	48 89 c2             	mov    %rax,%rdx
   1cdb5:	e8 e6 f0 ff ff       	call   1bea0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   1cdba:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1cdbf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   1cdc3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1cdc8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1cdcf:	00 00 
   1cdd1:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cdd6:	0f b6 02             	movzbl (%rdx),%eax
   1cdd9:	88 44 24 48          	mov    %al,0x48(%rsp)
   1cddd:	3c ff                	cmp    $0xff,%al
   1cddf:	74 33                	je     1ce14 <__gxx_personality_v0+0x4e4>
   1cde1:	31 c9                	xor    %ecx,%ecx
   1cde3:	31 d2                	xor    %edx,%edx
   1cde5:	0f 1f 00             	nopl   (%rax)
   1cde8:	0f b6 06             	movzbl (%rsi),%eax
   1cdeb:	48 83 c6 01          	add    $0x1,%rsi
   1cdef:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1cdf4:	89 c7                	mov    %eax,%edi
   1cdf6:	83 e0 7f             	and    $0x7f,%eax
   1cdf9:	d3 e0                	shl    %cl,%eax
   1cdfb:	83 e7 7f             	and    $0x7f,%edi
   1cdfe:	83 c1 07             	add    $0x7,%ecx
   1ce01:	48 98                	cltq   
   1ce03:	48 01 c2             	add    %rax,%rdx
   1ce06:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   1ce0a:	75 dc                	jne    1cde8 <__gxx_personality_v0+0x4b8>
   1ce0c:	48 01 f2             	add    %rsi,%rdx
   1ce0f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   1ce14:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   1ce18:	31 c9                	xor    %ecx,%ecx
   1ce1a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ce1f:	0f b6 06             	movzbl (%rsi),%eax
   1ce22:	31 f6                	xor    %esi,%esi
   1ce24:	88 44 24 60          	mov    %al,0x60(%rsp)
   1ce28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ce2f:	00 
   1ce30:	0f b6 02             	movzbl (%rdx),%eax
   1ce33:	48 83 c2 01          	add    $0x1,%rdx
   1ce37:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ce3c:	89 c7                	mov    %eax,%edi
   1ce3e:	83 e0 7f             	and    $0x7f,%eax
   1ce41:	d3 e0                	shl    %cl,%eax
   1ce43:	83 e7 7f             	and    $0x7f,%edi
   1ce46:	83 c1 07             	add    $0x7,%ecx
   1ce49:	48 98                	cltq   
   1ce4b:	48 01 c6             	add    %rax,%rsi
   1ce4e:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1ce52:	75 dc                	jne    1ce30 <__gxx_personality_v0+0x500>
   1ce54:	48 01 d6             	add    %rdx,%rsi
   1ce57:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   1ce5c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   1ce61:	48 89 ef             	mov    %rbp,%rdi
   1ce64:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   1ce69:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1ce6e:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1ce73:	4c 89 f6             	mov    %r14,%rsi
   1ce76:	e8 45 f2 ff ff       	call   1c0c0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   1ce7b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1ce80:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   1ce84:	48 85 d2             	test   %rdx,%rdx
   1ce87:	0f 84 9a fe ff ff    	je     1cd27 <__gxx_personality_v0+0x3f7>
   1ce8d:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   1ce92:	4c 89 e9             	mov    %r13,%rcx
   1ce95:	4c 89 f6             	mov    %r14,%rsi
   1ce98:	48 89 ef             	mov    %rbp,%rdi
   1ce9b:	e8 50 f3 ff ff       	call   1c1f0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   1cea0:	e9 82 fe ff ff       	jmp    1cd27 <__gxx_personality_v0+0x3f7>
   1cea5:	0f 1f 00             	nopl   (%rax)
   1cea8:	e8 63 f6 ff ff       	call   1c510 <_ZSt9terminatev>
   1cead:	e8 0e 2b ff ff       	call   f9c0 <__stack_chk_fail>
   1ceb2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ceb9:	00 00 00 
   1cebc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cec0 <__cxa_guard_acquire>:
   1cec0:	f3 0f 1e fa          	endbr64 
   1cec4:	48 8b 17             	mov    (%rdi),%rdx
   1cec7:	31 c0                	xor    %eax,%eax
   1cec9:	80 fa 01             	cmp    $0x1,%dl
   1cecc:	74 1e                	je     1ceec <__cxa_guard_acquire+0x2c>
   1cece:	48 8d 57 01          	lea    0x1(%rdi),%rdx
   1ced2:	31 f6                	xor    %esi,%esi
   1ced4:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ced9:	89 f0                	mov    %esi,%eax
   1cedb:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   1cedf:	75 0c                	jne    1ceed <__cxa_guard_acquire+0x2d>
   1cee1:	48 8b 07             	mov    (%rdi),%rax
   1cee4:	3c 01                	cmp    $0x1,%al
   1cee6:	0f 95 c0             	setne  %al
   1cee9:	0f b6 c0             	movzbl %al,%eax
   1ceec:	c3                   	ret    
   1ceed:	48 8b 07             	mov    (%rdi),%rax
   1cef0:	2c 01                	sub    $0x1,%al
   1cef2:	75 e5                	jne    1ced9 <__cxa_guard_acquire+0x19>
   1cef4:	eb eb                	jmp    1cee1 <__cxa_guard_acquire+0x21>
   1cef6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cefd:	00 00 00 

000000000001cf00 <__cxa_guard_abort>:
   1cf00:	f3 0f 1e fa          	endbr64 
   1cf04:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   1cf0b:	c3                   	ret    
   1cf0c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cf10 <__cxa_guard_release>:
   1cf10:	f3 0f 1e fa          	endbr64 
   1cf14:	c6 07 01             	movb   $0x1,(%rdi)
   1cf17:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   1cf1e:	c3                   	ret    
   1cf1f:	90                   	nop

000000000001cf20 <_ZNSt9exceptionD1Ev>:
   1cf20:	f3 0f 1e fa          	endbr64 
   1cf24:	c3                   	ret    
   1cf25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cf2c:	00 00 00 
   1cf2f:	90                   	nop

000000000001cf30 <_ZNKSt9exception4whatEv>:
   1cf30:	f3 0f 1e fa          	endbr64 
   1cf34:	48 8d 05 f1 64 00 00 	lea    0x64f1(%rip),%rax        # 2342c <_C_ctype_+0x5cc>
   1cf3b:	c3                   	ret    
   1cf3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cf40 <_ZNSt9bad_allocD1Ev>:
   1cf40:	f3 0f 1e fa          	endbr64 
   1cf44:	c3                   	ret    
   1cf45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cf4c:	00 00 00 
   1cf4f:	90                   	nop

000000000001cf50 <_ZNKSt9bad_alloc4whatEv>:
   1cf50:	f3 0f 1e fa          	endbr64 
   1cf54:	48 8d 05 e0 64 00 00 	lea    0x64e0(%rip),%rax        # 2343b <_C_ctype_+0x5db>
   1cf5b:	c3                   	ret    
   1cf5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001cf60 <_ZNSt9exceptionD0Ev>:
   1cf60:	f3 0f 1e fa          	endbr64 
   1cf64:	be 08 00 00 00       	mov    $0x8,%esi
   1cf69:	e9 d2 00 00 00       	jmp    1d040 <_ZdlPvm>
   1cf6e:	66 90                	xchg   %ax,%ax

000000000001cf70 <_ZNSt9bad_allocD0Ev>:
   1cf70:	f3 0f 1e fa          	endbr64 
   1cf74:	be 08 00 00 00       	mov    $0x8,%esi
   1cf79:	e9 c2 00 00 00       	jmp    1d040 <_ZdlPvm>
   1cf7e:	66 90                	xchg   %ax,%ax

000000000001cf80 <_ZNSt9exceptionC1Ev>:
   1cf80:	f3 0f 1e fa          	endbr64 
   1cf84:	48 8d 05 4d ec 00 00 	lea    0xec4d(%rip),%rax        # 2bbd8 <_ZTVSt9exception+0x10>
   1cf8b:	48 89 07             	mov    %rax,(%rdi)
   1cf8e:	c3                   	ret    
   1cf8f:	90                   	nop

000000000001cf90 <_ZNSt9bad_allocC1Ev>:
   1cf90:	f3 0f 1e fa          	endbr64 
   1cf94:	48 8d 05 65 ec 00 00 	lea    0xec65(%rip),%rax        # 2bc00 <_ZTVSt9bad_alloc+0x10>
   1cf9b:	48 89 07             	mov    %rax,(%rdi)
   1cf9e:	c3                   	ret    
   1cf9f:	90                   	nop

000000000001cfa0 <_ZNKSt9type_info14__is_pointer_pEv>:
   1cfa0:	f3 0f 1e fa          	endbr64 
   1cfa4:	31 c0                	xor    %eax,%eax
   1cfa6:	c3                   	ret    
   1cfa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cfae:	00 00 

000000000001cfb0 <_ZNKSt9type_info15__is_function_pEv>:
   1cfb0:	f3 0f 1e fa          	endbr64 
   1cfb4:	31 c0                	xor    %eax,%eax
   1cfb6:	c3                   	ret    
   1cfb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1cfbe:	00 00 

000000000001cfc0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   1cfc0:	f3 0f 1e fa          	endbr64 
   1cfc4:	48 39 fe             	cmp    %rdi,%rsi
   1cfc7:	0f 94 c0             	sete   %al
   1cfca:	c3                   	ret    
   1cfcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001cfd0 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   1cfd0:	f3 0f 1e fa          	endbr64 
   1cfd4:	c3                   	ret    
   1cfd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cfdc:	00 00 00 
   1cfdf:	90                   	nop

000000000001cfe0 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   1cfe0:	f3 0f 1e fa          	endbr64 
   1cfe4:	c3                   	ret    
   1cfe5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1cfec:	00 00 00 
   1cfef:	90                   	nop

000000000001cff0 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   1cff0:	f3 0f 1e fa          	endbr64 
   1cff4:	be 10 00 00 00       	mov    $0x10,%esi
   1cff9:	e9 42 00 00 00       	jmp    1d040 <_ZdlPvm>
   1cffe:	66 90                	xchg   %ax,%ax

000000000001d000 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   1d000:	f3 0f 1e fa          	endbr64 
   1d004:	be 18 00 00 00       	mov    $0x18,%esi
   1d009:	e9 32 00 00 00       	jmp    1d040 <_ZdlPvm>
   1d00e:	66 90                	xchg   %ax,%ax

000000000001d010 <_ZNKSt9type_infoeqERKS_>:
   1d010:	f3 0f 1e fa          	endbr64 
   1d014:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1d018:	48 39 47 08          	cmp    %rax,0x8(%rdi)
   1d01c:	0f 94 c0             	sete   %al
   1d01f:	c3                   	ret    

000000000001d020 <_ZdlPv>:
   1d020:	f3 0f 1e fa          	endbr64 
   1d024:	e9 b7 0f ff ff       	jmp    dfe0 <dlfree>
   1d029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d030 <_ZdaPv>:
   1d030:	f3 0f 1e fa          	endbr64 
   1d034:	e9 e7 ff ff ff       	jmp    1d020 <_ZdlPv>
   1d039:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d040 <_ZdlPvm>:
   1d040:	f3 0f 1e fa          	endbr64 
   1d044:	e9 d7 ff ff ff       	jmp    1d020 <_ZdlPv>
   1d049:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d050 <_Znwm>:
   1d050:	f3 0f 1e fa          	endbr64 
   1d054:	55                   	push   %rbp
   1d055:	53                   	push   %rbx
   1d056:	48 89 fb             	mov    %rdi,%rbx
   1d059:	48 83 ec 08          	sub    $0x8,%rsp
   1d05d:	e8 0e f5 fe ff       	call   c570 <dlmalloc>
   1d062:	48 85 c0             	test   %rax,%rax
   1d065:	75 23                	jne    1d08a <_Znwm+0x3a>
   1d067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d06e:	00 00 
   1d070:	e8 3b 00 00 00       	call   1d0b0 <_Z9call_newhv>
   1d075:	85 c0                	test   %eax,%eax
   1d077:	0f 84 65 50 fe ff    	je     20e2 <_Znwm.cold>
   1d07d:	48 89 df             	mov    %rbx,%rdi
   1d080:	e8 eb f4 fe ff       	call   c570 <dlmalloc>
   1d085:	48 85 c0             	test   %rax,%rax
   1d088:	74 e6                	je     1d070 <_Znwm+0x20>
   1d08a:	48 83 c4 08          	add    $0x8,%rsp
   1d08e:	5b                   	pop    %rbx
   1d08f:	5d                   	pop    %rbp
   1d090:	c3                   	ret    
   1d091:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d098:	00 00 00 
   1d09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d0a0 <_Znam>:
   1d0a0:	f3 0f 1e fa          	endbr64 
   1d0a4:	e9 a7 ff ff ff       	jmp    1d050 <_Znwm>
   1d0a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d0b0 <_Z9call_newhv>:
   1d0b0:	f3 0f 1e fa          	endbr64 
   1d0b4:	53                   	push   %rbx
   1d0b5:	48 8d 3d 6c 40 01 00 	lea    0x1406c(%rip),%rdi        # 31128 <_ZStL12handler_lock>
   1d0bc:	e8 ff ea fe ff       	call   bbc0 <sgx_spin_lock>
   1d0c1:	48 8b 1d 58 40 01 00 	mov    0x14058(%rip),%rbx        # 31120 <_ZStL9new_handl>
   1d0c8:	48 8d 3d 59 40 01 00 	lea    0x14059(%rip),%rdi        # 31128 <_ZStL12handler_lock>
   1d0cf:	e8 5c eb fe ff       	call   bc30 <sgx_spin_unlock>
   1d0d4:	31 c0                	xor    %eax,%eax
   1d0d6:	48 85 db             	test   %rbx,%rbx
   1d0d9:	74 07                	je     1d0e2 <_Z9call_newhv+0x32>
   1d0db:	ff d3                	call   *%rbx
   1d0dd:	b8 01 00 00 00       	mov    $0x1,%eax
   1d0e2:	5b                   	pop    %rbx
   1d0e3:	c3                   	ret    
   1d0e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d0eb:	00 00 00 
   1d0ee:	66 90                	xchg   %ax,%ax

000000000001d0f0 <_ZNKSt11logic_error4whatEv>:
   1d0f0:	f3 0f 1e fa          	endbr64 
   1d0f4:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d0f8:	c3                   	ret    
   1d0f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d100 <_ZNKSt13runtime_error4whatEv>:
   1d100:	f3 0f 1e fa          	endbr64 
   1d104:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d108:	c3                   	ret    
   1d109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d110 <_ZNSt11logic_errorD1Ev>:
   1d110:	f3 0f 1e fa          	endbr64 
   1d114:	48 8d 05 4d eb 00 00 	lea    0xeb4d(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d11b:	55                   	push   %rbp
   1d11c:	48 89 fd             	mov    %rdi,%rbp
   1d11f:	48 89 07             	mov    %rax,(%rdi)
   1d122:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d126:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d12b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d130:	83 e8 01             	sub    $0x1,%eax
   1d133:	78 0b                	js     1d140 <_ZNSt11logic_errorD1Ev+0x30>
   1d135:	48 89 ef             	mov    %rbp,%rdi
   1d138:	5d                   	pop    %rbp
   1d139:	e9 e2 fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d13e:	66 90                	xchg   %ax,%ax
   1d140:	48 83 ef 18          	sub    $0x18,%rdi
   1d144:	e8 d7 fe ff ff       	call   1d020 <_ZdlPv>
   1d149:	48 89 ef             	mov    %rbp,%rdi
   1d14c:	5d                   	pop    %rbp
   1d14d:	e9 ce fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d152:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d159:	00 00 00 
   1d15c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d160 <_ZNSt13runtime_errorD1Ev>:
   1d160:	f3 0f 1e fa          	endbr64 
   1d164:	48 8d 05 25 eb 00 00 	lea    0xeb25(%rip),%rax        # 2bc90 <_ZTVSt13runtime_error+0x10>
   1d16b:	55                   	push   %rbp
   1d16c:	48 89 fd             	mov    %rdi,%rbp
   1d16f:	48 89 07             	mov    %rax,(%rdi)
   1d172:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d176:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d17b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d180:	83 e8 01             	sub    $0x1,%eax
   1d183:	78 0b                	js     1d190 <_ZNSt13runtime_errorD1Ev+0x30>
   1d185:	48 89 ef             	mov    %rbp,%rdi
   1d188:	5d                   	pop    %rbp
   1d189:	e9 92 fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d18e:	66 90                	xchg   %ax,%ax
   1d190:	48 83 ef 18          	sub    $0x18,%rdi
   1d194:	e8 87 fe ff ff       	call   1d020 <_ZdlPv>
   1d199:	48 89 ef             	mov    %rbp,%rdi
   1d19c:	5d                   	pop    %rbp
   1d19d:	e9 7e fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d1a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d1a9:	00 00 00 
   1d1ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d1b0 <_ZNSt12length_errorD1Ev>:
   1d1b0:	f3 0f 1e fa          	endbr64 
   1d1b4:	48 8d 05 ad ea 00 00 	lea    0xeaad(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d1bb:	55                   	push   %rbp
   1d1bc:	48 89 fd             	mov    %rdi,%rbp
   1d1bf:	48 89 07             	mov    %rax,(%rdi)
   1d1c2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d1c6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d1cb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d1d0:	83 e8 01             	sub    $0x1,%eax
   1d1d3:	78 0b                	js     1d1e0 <_ZNSt12length_errorD1Ev+0x30>
   1d1d5:	48 89 ef             	mov    %rbp,%rdi
   1d1d8:	5d                   	pop    %rbp
   1d1d9:	e9 42 fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d1de:	66 90                	xchg   %ax,%ax
   1d1e0:	48 83 ef 18          	sub    $0x18,%rdi
   1d1e4:	e8 37 fe ff ff       	call   1d020 <_ZdlPv>
   1d1e9:	48 89 ef             	mov    %rbp,%rdi
   1d1ec:	5d                   	pop    %rbp
   1d1ed:	e9 2e fd ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d1f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d1f9:	00 00 00 
   1d1fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d200 <_ZNSt12out_of_rangeD1Ev>:
   1d200:	f3 0f 1e fa          	endbr64 
   1d204:	48 8d 05 5d ea 00 00 	lea    0xea5d(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d20b:	55                   	push   %rbp
   1d20c:	48 89 fd             	mov    %rdi,%rbp
   1d20f:	48 89 07             	mov    %rax,(%rdi)
   1d212:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d216:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d21b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d220:	83 e8 01             	sub    $0x1,%eax
   1d223:	78 0b                	js     1d230 <_ZNSt12out_of_rangeD1Ev+0x30>
   1d225:	48 89 ef             	mov    %rbp,%rdi
   1d228:	5d                   	pop    %rbp
   1d229:	e9 f2 fc ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d22e:	66 90                	xchg   %ax,%ax
   1d230:	48 83 ef 18          	sub    $0x18,%rdi
   1d234:	e8 e7 fd ff ff       	call   1d020 <_ZdlPv>
   1d239:	48 89 ef             	mov    %rbp,%rdi
   1d23c:	5d                   	pop    %rbp
   1d23d:	e9 de fc ff ff       	jmp    1cf20 <_ZNSt9exceptionD1Ev>
   1d242:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d249:	00 00 00 
   1d24c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d250 <_ZNSt12length_errorD0Ev>:
   1d250:	f3 0f 1e fa          	endbr64 
   1d254:	48 8d 05 0d ea 00 00 	lea    0xea0d(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d25b:	55                   	push   %rbp
   1d25c:	48 89 fd             	mov    %rdi,%rbp
   1d25f:	48 89 07             	mov    %rax,(%rdi)
   1d262:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d266:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d26b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d270:	83 e8 01             	sub    $0x1,%eax
   1d273:	78 1b                	js     1d290 <_ZNSt12length_errorD0Ev+0x40>
   1d275:	48 89 ef             	mov    %rbp,%rdi
   1d278:	e8 a3 fc ff ff       	call   1cf20 <_ZNSt9exceptionD1Ev>
   1d27d:	48 89 ef             	mov    %rbp,%rdi
   1d280:	be 10 00 00 00       	mov    $0x10,%esi
   1d285:	5d                   	pop    %rbp
   1d286:	e9 b5 fd ff ff       	jmp    1d040 <_ZdlPvm>
   1d28b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d290:	48 83 ef 18          	sub    $0x18,%rdi
   1d294:	e8 87 fd ff ff       	call   1d020 <_ZdlPv>
   1d299:	eb da                	jmp    1d275 <_ZNSt12length_errorD0Ev+0x25>
   1d29b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d2a0 <_ZNSt12out_of_rangeD0Ev>:
   1d2a0:	f3 0f 1e fa          	endbr64 
   1d2a4:	48 8d 05 bd e9 00 00 	lea    0xe9bd(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d2ab:	55                   	push   %rbp
   1d2ac:	48 89 fd             	mov    %rdi,%rbp
   1d2af:	48 89 07             	mov    %rax,(%rdi)
   1d2b2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d2b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d2bb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d2c0:	83 e8 01             	sub    $0x1,%eax
   1d2c3:	78 1b                	js     1d2e0 <_ZNSt12out_of_rangeD0Ev+0x40>
   1d2c5:	48 89 ef             	mov    %rbp,%rdi
   1d2c8:	e8 53 fc ff ff       	call   1cf20 <_ZNSt9exceptionD1Ev>
   1d2cd:	48 89 ef             	mov    %rbp,%rdi
   1d2d0:	be 10 00 00 00       	mov    $0x10,%esi
   1d2d5:	5d                   	pop    %rbp
   1d2d6:	e9 65 fd ff ff       	jmp    1d040 <_ZdlPvm>
   1d2db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d2e0:	48 83 ef 18          	sub    $0x18,%rdi
   1d2e4:	e8 37 fd ff ff       	call   1d020 <_ZdlPv>
   1d2e9:	eb da                	jmp    1d2c5 <_ZNSt12out_of_rangeD0Ev+0x25>
   1d2eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d2f0 <_ZNSt11logic_errorD0Ev>:
   1d2f0:	f3 0f 1e fa          	endbr64 
   1d2f4:	48 8d 05 6d e9 00 00 	lea    0xe96d(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d2fb:	55                   	push   %rbp
   1d2fc:	48 89 fd             	mov    %rdi,%rbp
   1d2ff:	48 89 07             	mov    %rax,(%rdi)
   1d302:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d306:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d30b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d310:	83 e8 01             	sub    $0x1,%eax
   1d313:	78 1b                	js     1d330 <_ZNSt11logic_errorD0Ev+0x40>
   1d315:	48 89 ef             	mov    %rbp,%rdi
   1d318:	e8 03 fc ff ff       	call   1cf20 <_ZNSt9exceptionD1Ev>
   1d31d:	48 89 ef             	mov    %rbp,%rdi
   1d320:	be 10 00 00 00       	mov    $0x10,%esi
   1d325:	5d                   	pop    %rbp
   1d326:	e9 15 fd ff ff       	jmp    1d040 <_ZdlPvm>
   1d32b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d330:	48 83 ef 18          	sub    $0x18,%rdi
   1d334:	e8 e7 fc ff ff       	call   1d020 <_ZdlPv>
   1d339:	eb da                	jmp    1d315 <_ZNSt11logic_errorD0Ev+0x25>
   1d33b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d340 <_ZNSt13runtime_errorD0Ev>:
   1d340:	f3 0f 1e fa          	endbr64 
   1d344:	48 8d 05 45 e9 00 00 	lea    0xe945(%rip),%rax        # 2bc90 <_ZTVSt13runtime_error+0x10>
   1d34b:	55                   	push   %rbp
   1d34c:	48 89 fd             	mov    %rdi,%rbp
   1d34f:	48 89 07             	mov    %rax,(%rdi)
   1d352:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d356:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d35b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d360:	83 e8 01             	sub    $0x1,%eax
   1d363:	78 1b                	js     1d380 <_ZNSt13runtime_errorD0Ev+0x40>
   1d365:	48 89 ef             	mov    %rbp,%rdi
   1d368:	e8 b3 fb ff ff       	call   1cf20 <_ZNSt9exceptionD1Ev>
   1d36d:	48 89 ef             	mov    %rbp,%rdi
   1d370:	be 10 00 00 00       	mov    $0x10,%esi
   1d375:	5d                   	pop    %rbp
   1d376:	e9 c5 fc ff ff       	jmp    1d040 <_ZdlPvm>
   1d37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d380:	48 83 ef 18          	sub    $0x18,%rdi
   1d384:	e8 97 fc ff ff       	call   1d020 <_ZdlPv>
   1d389:	eb da                	jmp    1d365 <_ZNSt13runtime_errorD0Ev+0x25>
   1d38b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d390 <_ZNSt11logic_errorC1EPKc>:
   1d390:	f3 0f 1e fa          	endbr64 
   1d394:	41 55                	push   %r13
   1d396:	49 89 f5             	mov    %rsi,%r13
   1d399:	41 54                	push   %r12
   1d39b:	49 89 fc             	mov    %rdi,%r12
   1d39e:	55                   	push   %rbp
   1d39f:	53                   	push   %rbx
   1d3a0:	48 83 ec 08          	sub    $0x8,%rsp
   1d3a4:	e8 d7 fb ff ff       	call   1cf80 <_ZNSt9exceptionC1Ev>
   1d3a9:	48 8d 05 b8 e8 00 00 	lea    0xe8b8(%rip),%rax        # 2bc68 <_ZTVSt11logic_error+0x10>
   1d3b0:	4c 89 ef             	mov    %r13,%rdi
   1d3b3:	49 89 04 24          	mov    %rax,(%r12)
   1d3b7:	e8 c4 24 ff ff       	call   f880 <strlen>
   1d3bc:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1d3c0:	48 89 c5             	mov    %rax,%rbp
   1d3c3:	e8 88 fc ff ff       	call   1d050 <_Znwm>
   1d3c8:	48 89 28             	mov    %rbp,(%rax)
   1d3cb:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1d3cf:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1d3d3:	4c 89 ee             	mov    %r13,%rsi
   1d3d6:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1d3da:	48 89 df             	mov    %rbx,%rdi
   1d3dd:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1d3e4:	e8 47 22 ff ff       	call   f630 <memcpy>
   1d3e9:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1d3ee:	48 83 c4 08          	add    $0x8,%rsp
   1d3f2:	5b                   	pop    %rbx
   1d3f3:	5d                   	pop    %rbp
   1d3f4:	41 5c                	pop    %r12
   1d3f6:	41 5d                	pop    %r13
   1d3f8:	c3                   	ret    
   1d3f9:	f3 0f 1e fa          	endbr64 
   1d3fd:	48 89 c5             	mov    %rax,%rbp
   1d400:	e9 65 4d fe ff       	jmp    216a <_ZNSt11logic_errorC2EPKc.cold>
   1d405:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d40c:	00 00 00 
   1d40f:	90                   	nop

000000000001d410 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>:
   1d410:	f3 0f 1e fa          	endbr64 
   1d414:	41 55                	push   %r13
   1d416:	41 54                	push   %r12
   1d418:	49 89 fc             	mov    %rdi,%r12
   1d41b:	55                   	push   %rbp
   1d41c:	53                   	push   %rbx
   1d41d:	48 89 f3             	mov    %rsi,%rbx
   1d420:	4c 8d 6b 01          	lea    0x1(%rbx),%r13
   1d424:	48 83 ec 08          	sub    $0x8,%rsp
   1d428:	e8 53 fb ff ff       	call   1cf80 <_ZNSt9exceptionC1Ev>
   1d42d:	48 8d 05 5c e8 00 00 	lea    0xe85c(%rip),%rax        # 2bc90 <_ZTVSt13runtime_error+0x10>
   1d434:	49 89 04 24          	mov    %rax,(%r12)
   1d438:	f6 03 01             	testb  $0x1,(%rbx)
   1d43b:	74 04                	je     1d441 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0x31>
   1d43d:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1d441:	4c 89 ef             	mov    %r13,%rdi
   1d444:	e8 37 24 ff ff       	call   f880 <strlen>
   1d449:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1d44d:	48 89 c5             	mov    %rax,%rbp
   1d450:	e8 fb fb ff ff       	call   1d050 <_Znwm>
   1d455:	48 89 28             	mov    %rbp,(%rax)
   1d458:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1d45c:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1d460:	4c 89 ee             	mov    %r13,%rsi
   1d463:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1d467:	48 89 df             	mov    %rbx,%rdi
   1d46a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1d471:	e8 ba 21 ff ff       	call   f630 <memcpy>
   1d476:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1d47b:	48 83 c4 08          	add    $0x8,%rsp
   1d47f:	5b                   	pop    %rbx
   1d480:	5d                   	pop    %rbp
   1d481:	41 5c                	pop    %r12
   1d483:	41 5d                	pop    %r13
   1d485:	c3                   	ret    
   1d486:	f3 0f 1e fa          	endbr64 
   1d48a:	48 89 c5             	mov    %rax,%rbp
   1d48d:	e9 e8 4c fe ff       	jmp    217a <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>
   1d492:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d499:	00 00 00 
   1d49c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d4a0 <_ZNSt13runtime_errorC1EPKc>:
   1d4a0:	f3 0f 1e fa          	endbr64 
   1d4a4:	41 55                	push   %r13
   1d4a6:	49 89 f5             	mov    %rsi,%r13
   1d4a9:	41 54                	push   %r12
   1d4ab:	49 89 fc             	mov    %rdi,%r12
   1d4ae:	55                   	push   %rbp
   1d4af:	53                   	push   %rbx
   1d4b0:	48 83 ec 08          	sub    $0x8,%rsp
   1d4b4:	e8 c7 fa ff ff       	call   1cf80 <_ZNSt9exceptionC1Ev>
   1d4b9:	48 8d 05 d0 e7 00 00 	lea    0xe7d0(%rip),%rax        # 2bc90 <_ZTVSt13runtime_error+0x10>
   1d4c0:	4c 89 ef             	mov    %r13,%rdi
   1d4c3:	49 89 04 24          	mov    %rax,(%r12)
   1d4c7:	e8 b4 23 ff ff       	call   f880 <strlen>
   1d4cc:	48 8d 78 19          	lea    0x19(%rax),%rdi
   1d4d0:	48 89 c5             	mov    %rax,%rbp
   1d4d3:	e8 78 fb ff ff       	call   1d050 <_Znwm>
   1d4d8:	48 89 28             	mov    %rbp,(%rax)
   1d4db:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1d4df:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   1d4e3:	4c 89 ee             	mov    %r13,%rsi
   1d4e6:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1d4ea:	48 89 df             	mov    %rbx,%rdi
   1d4ed:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   1d4f4:	e8 37 21 ff ff       	call   f630 <memcpy>
   1d4f9:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   1d4fe:	48 83 c4 08          	add    $0x8,%rsp
   1d502:	5b                   	pop    %rbx
   1d503:	5d                   	pop    %rbp
   1d504:	41 5c                	pop    %r12
   1d506:	41 5d                	pop    %r13
   1d508:	c3                   	ret    
   1d509:	f3 0f 1e fa          	endbr64 
   1d50d:	48 89 c5             	mov    %rax,%rbp
   1d510:	e9 75 4c fe ff       	jmp    218a <_ZNSt13runtime_errorC2EPKc.cold>
   1d515:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d51c:	00 00 00 
   1d51f:	90                   	nop

000000000001d520 <_ZNSt13runtime_erroraSERKS_>:
   1d520:	f3 0f 1e fa          	endbr64 
   1d524:	41 54                	push   %r12
   1d526:	49 89 fc             	mov    %rdi,%r12
   1d529:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1d52d:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1d531:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1d536:	f0 83 40 f8 01       	lock addl $0x1,-0x8(%rax)
   1d53b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d540:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   1d545:	83 e8 01             	sub    $0x1,%eax
   1d548:	78 06                	js     1d550 <_ZNSt13runtime_erroraSERKS_+0x30>
   1d54a:	4c 89 e0             	mov    %r12,%rax
   1d54d:	41 5c                	pop    %r12
   1d54f:	c3                   	ret    
   1d550:	48 83 ef 18          	sub    $0x18,%rdi
   1d554:	e8 c7 fa ff ff       	call   1d020 <_ZdlPv>
   1d559:	4c 89 e0             	mov    %r12,%rax
   1d55c:	41 5c                	pop    %r12
   1d55e:	c3                   	ret    
   1d55f:	90                   	nop

000000000001d560 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>:
   1d560:	f3 0f 1e fa          	endbr64 
   1d564:	f6 07 01             	testb  $0x1,(%rdi)
   1d567:	75 07                	jne    1d570 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev+0x10>
   1d569:	c3                   	ret    
   1d56a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d570:	48 83 ec 08          	sub    $0x8,%rsp
   1d574:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1d578:	e8 a3 fa ff ff       	call   1d020 <_ZdlPv>
   1d57d:	48 83 c4 08          	add    $0x8,%rsp
   1d581:	c3                   	ret    
   1d582:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d589:	00 00 00 
   1d58c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d590 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>:
   1d590:	f3 0f 1e fa          	endbr64 
   1d594:	41 57                	push   %r15
   1d596:	49 89 cf             	mov    %rcx,%r15
   1d599:	41 56                	push   %r14
   1d59b:	49 89 d6             	mov    %rdx,%r14
   1d59e:	41 55                	push   %r13
   1d5a0:	49 89 f5             	mov    %rsi,%r13
   1d5a3:	41 54                	push   %r12
   1d5a5:	4d 89 c4             	mov    %r8,%r12
   1d5a8:	55                   	push   %rbp
   1d5a9:	48 89 fd             	mov    %rdi,%rbp
   1d5ac:	53                   	push   %rbx
   1d5ad:	48 83 ec 08          	sub    $0x8,%rsp
   1d5b1:	0f b6 07             	movzbl (%rdi),%eax
   1d5b4:	89 c2                	mov    %eax,%edx
   1d5b6:	83 e2 01             	and    $0x1,%edx
   1d5b9:	74 6d                	je     1d628 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x98>
   1d5bb:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   1d5bf:	49 39 dd             	cmp    %rbx,%r13
   1d5c2:	77 4c                	ja     1d610 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x80>
   1d5c4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1d5c8:	74 46                	je     1d610 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x80>
   1d5ca:	4c 29 eb             	sub    %r13,%rbx
   1d5cd:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
   1d5d1:	4c 39 f3             	cmp    %r14,%rbx
   1d5d4:	49 0f 47 de          	cmova  %r14,%rbx
   1d5d8:	49 39 dc             	cmp    %rbx,%r12
   1d5db:	49 89 d8             	mov    %rbx,%r8
   1d5de:	4d 0f 46 c4          	cmovbe %r12,%r8
   1d5e2:	84 d2                	test   %dl,%dl
   1d5e4:	74 04                	je     1d5ea <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x5a>
   1d5e6:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1d5ea:	4d 85 c0             	test   %r8,%r8
   1d5ed:	75 49                	jne    1d638 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xa8>
   1d5ef:	49 39 dc             	cmp    %rbx,%r12
   1d5f2:	77 6c                	ja     1d660 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xd0>
   1d5f4:	0f 92 c0             	setb   %al
   1d5f7:	0f b6 c0             	movzbl %al,%eax
   1d5fa:	48 83 c4 08          	add    $0x8,%rsp
   1d5fe:	5b                   	pop    %rbx
   1d5ff:	5d                   	pop    %rbp
   1d600:	41 5c                	pop    %r12
   1d602:	41 5d                	pop    %r13
   1d604:	41 5e                	pop    %r14
   1d606:	41 5f                	pop    %r15
   1d608:	c3                   	ret    
   1d609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d610:	48 89 ef             	mov    %rbp,%rdi
   1d613:	e8 de 4b fe ff       	call   21f6 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>
   1d618:	0f b6 55 00          	movzbl 0x0(%rbp),%edx
   1d61c:	83 e2 01             	and    $0x1,%edx
   1d61f:	eb a9                	jmp    1d5ca <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x3a>
   1d621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d628:	48 d1 e8             	shr    %rax
   1d62b:	83 e0 7f             	and    $0x7f,%eax
   1d62e:	48 89 c3             	mov    %rax,%rbx
   1d631:	eb 8c                	jmp    1d5bf <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x2f>
   1d633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d638:	4c 01 ef             	add    %r13,%rdi
   1d63b:	4c 89 c2             	mov    %r8,%rdx
   1d63e:	4c 89 fe             	mov    %r15,%rsi
   1d641:	e8 0a 1d ff ff       	call   f350 <memcmp>
   1d646:	85 c0                	test   %eax,%eax
   1d648:	74 a5                	je     1d5ef <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x5f>
   1d64a:	48 83 c4 08          	add    $0x8,%rsp
   1d64e:	5b                   	pop    %rbx
   1d64f:	5d                   	pop    %rbp
   1d650:	41 5c                	pop    %r12
   1d652:	41 5d                	pop    %r13
   1d654:	41 5e                	pop    %r14
   1d656:	41 5f                	pop    %r15
   1d658:	c3                   	ret    
   1d659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d660:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d665:	eb 93                	jmp    1d5fa <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x6a>
   1d667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d66e:	00 00 

000000000001d670 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>:
   1d670:	f3 0f 1e fa          	endbr64 
   1d674:	41 56                	push   %r14
   1d676:	41 55                	push   %r13
   1d678:	41 54                	push   %r12
   1d67a:	49 89 f4             	mov    %rsi,%r12
   1d67d:	55                   	push   %rbp
   1d67e:	48 89 fd             	mov    %rdi,%rbp
   1d681:	53                   	push   %rbx
   1d682:	48 89 d3             	mov    %rdx,%rbx
   1d685:	48 83 fa ef          	cmp    $0xffffffffffffffef,%rdx
   1d689:	77 25                	ja     1d6b0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x40>
   1d68b:	48 83 fa 16          	cmp    $0x16,%rdx
   1d68f:	77 24                	ja     1d6b5 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x45>
   1d691:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   1d694:	4c 8d 6f 01          	lea    0x1(%rdi),%r13
   1d698:	88 07                	mov    %al,(%rdi)
   1d69a:	48 85 d2             	test   %rdx,%rdx
   1d69d:	75 39                	jne    1d6d8 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x68>
   1d69f:	41 c6 44 1d 00 00    	movb   $0x0,0x0(%r13,%rbx,1)
   1d6a5:	5b                   	pop    %rbx
   1d6a6:	5d                   	pop    %rbp
   1d6a7:	41 5c                	pop    %r12
   1d6a9:	41 5d                	pop    %r13
   1d6ab:	41 5e                	pop    %r14
   1d6ad:	c3                   	ret    
   1d6ae:	66 90                	xchg   %ax,%ax
   1d6b0:	e8 e5 4a fe ff       	call   219a <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>
   1d6b5:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   1d6b9:	49 83 e6 f0          	and    $0xfffffffffffffff0,%r14
   1d6bd:	4c 89 f7             	mov    %r14,%rdi
   1d6c0:	49 83 ce 01          	or     $0x1,%r14
   1d6c4:	e8 87 f9 ff ff       	call   1d050 <_Znwm>
   1d6c9:	4c 89 75 00          	mov    %r14,0x0(%rbp)
   1d6cd:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1d6d1:	49 89 c5             	mov    %rax,%r13
   1d6d4:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   1d6d8:	48 89 da             	mov    %rbx,%rdx
   1d6db:	4c 89 e6             	mov    %r12,%rsi
   1d6de:	4c 89 ef             	mov    %r13,%rdi
   1d6e1:	e8 4a 1f ff ff       	call   f630 <memcpy>
   1d6e6:	41 c6 44 1d 00 00    	movb   $0x0,0x0(%r13,%rbx,1)
   1d6ec:	5b                   	pop    %rbx
   1d6ed:	5d                   	pop    %rbp
   1d6ee:	41 5c                	pop    %r12
   1d6f0:	41 5d                	pop    %r13
   1d6f2:	41 5e                	pop    %r14
   1d6f4:	c3                   	ret    
   1d6f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d6fc:	00 00 00 
   1d6ff:	90                   	nop

000000000001d700 <expand>:
   1d700:	55                   	push   %rbp
   1d701:	48 89 fd             	mov    %rdi,%rbp
   1d704:	53                   	push   %rbx
   1d705:	48 83 ec 08          	sub    $0x8,%rsp
   1d709:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   1d70d:	48 89 df             	mov    %rbx,%rdi
   1d710:	e8 5b ee fe ff       	call   c570 <dlmalloc>
   1d715:	48 85 c0             	test   %rax,%rax
   1d718:	74 45                	je     1d75f <expand+0x5f>
   1d71a:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   1d71e:	4c 29 c3             	sub    %r8,%rbx
   1d721:	48 89 df             	mov    %rbx,%rdi
   1d724:	48 01 c7             	add    %rax,%rdi
   1d727:	72 2f                	jb     1d758 <expand+0x58>
   1d729:	8b 5d 1c             	mov    0x1c(%rbp),%ebx
   1d72c:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   1d730:	8d 53 01             	lea    0x1(%rbx),%edx
   1d733:	eb 06                	jmp    1d73b <expand+0x3b>
   1d735:	0f 1f 00             	nopl   (%rax)
   1d738:	48 89 c8             	mov    %rcx,%rax
   1d73b:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
   1d73f:	48 89 30             	mov    %rsi,(%rax)
   1d742:	41 89 d1             	mov    %edx,%r9d
   1d745:	48 89 c6             	mov    %rax,%rsi
   1d748:	83 c2 01             	add    $0x1,%edx
   1d74b:	48 39 f9             	cmp    %rdi,%rcx
   1d74e:	76 e8                	jbe    1d738 <expand+0x38>
   1d750:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1d754:	44 89 4d 1c          	mov    %r9d,0x1c(%rbp)
   1d758:	48 83 c4 08          	add    $0x8,%rsp
   1d75c:	5b                   	pop    %rbx
   1d75d:	5d                   	pop    %rbp
   1d75e:	c3                   	ret    
   1d75f:	48 8b 05 ca 39 01 00 	mov    0x139ca(%rip),%rax        # 31130 <pg_size>
   1d766:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1d76a:	48 8d 5c 10 ff       	lea    -0x1(%rax,%rdx,1),%rbx
   1d76f:	48 f7 d8             	neg    %rax
   1d772:	48 21 c3             	and    %rax,%rbx
   1d775:	48 89 df             	mov    %rbx,%rdi
   1d778:	e8 f3 ed fe ff       	call   c570 <dlmalloc>
   1d77d:	48 85 c0             	test   %rax,%rax
   1d780:	75 98                	jne    1d71a <expand+0x1a>
   1d782:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   1d786:	48 8d 43 0f          	lea    0xf(%rbx),%rax
   1d78a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1d78e:	f0 48 0f c1 05 a1 39 	lock xadd %rax,0x139a1(%rip)        # 31138 <sos_memory_freepos>
   1d795:	01 00 
   1d797:	48 8d 15 a2 39 01 00 	lea    0x139a2(%rip),%rdx        # 31140 <sos_memory>
   1d79e:	48 01 d0             	add    %rdx,%rax
   1d7a1:	e9 74 ff ff ff       	jmp    1d71a <expand+0x1a>
   1d7a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d7ad:	00 00 00 

000000000001d7b0 <_UIx86_64__mempool_init>:
   1d7b0:	f3 0f 1e fa          	endbr64 
   1d7b4:	48 8b 0d 75 39 01 00 	mov    0x13975(%rip),%rcx        # 31130 <pg_size>
   1d7bb:	41 54                	push   %r12
   1d7bd:	49 89 d4             	mov    %rdx,%r12
   1d7c0:	55                   	push   %rbp
   1d7c1:	48 89 fd             	mov    %rdi,%rbp
   1d7c4:	53                   	push   %rbx
   1d7c5:	48 89 f3             	mov    %rsi,%rbx
   1d7c8:	48 85 c9             	test   %rcx,%rcx
   1d7cb:	75 0f                	jne    1d7dc <_UIx86_64__mempool_init+0x2c>
   1d7cd:	e8 0e 34 00 00       	call   20be0 <getpagesize>
   1d7d2:	48 63 c8             	movslq %eax,%rcx
   1d7d5:	48 89 0d 54 39 01 00 	mov    %rcx,0x13954(%rip)        # 31130 <pg_size>
   1d7dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1d7e0:	48 8d 73 0f          	lea    0xf(%rbx),%rsi
   1d7e4:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   1d7eb:	00 
   1d7ec:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   1d7f0:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
   1d7f4:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   1d7fb:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   1d7ff:	4d 85 e4             	test   %r12,%r12
   1d802:	75 23                	jne    1d827 <_UIx86_64__mempool_init+0x77>
   1d804:	48 89 c8             	mov    %rcx,%rax
   1d807:	31 d2                	xor    %edx,%edx
   1d809:	48 f7 f6             	div    %rsi
   1d80c:	48 83 f8 03          	cmp    $0x3,%rax
   1d810:	77 0e                	ja     1d820 <_UIx86_64__mempool_init+0x70>
   1d812:	b8 10 00 00 00       	mov    $0x10,%eax
   1d817:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   1d81d:	eb 0b                	jmp    1d82a <_UIx86_64__mempool_init+0x7a>
   1d81f:	90                   	nop
   1d820:	48 c1 e8 02          	shr    $0x2,%rax
   1d824:	49 89 c4             	mov    %rax,%r12
   1d827:	44 89 e0             	mov    %r12d,%eax
   1d82a:	48 89 75 08          	mov    %rsi,0x8(%rbp)
   1d82e:	49 0f af f4          	imul   %r12,%rsi
   1d832:	5b                   	pop    %rbx
   1d833:	48 89 ef             	mov    %rbp,%rdi
   1d836:	89 45 18             	mov    %eax,0x18(%rbp)
   1d839:	48 8d 44 71 ff       	lea    -0x1(%rcx,%rsi,2),%rax
   1d83e:	48 f7 d9             	neg    %rcx
   1d841:	48 21 c1             	and    %rax,%rcx
   1d844:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   1d848:	5d                   	pop    %rbp
   1d849:	41 5c                	pop    %r12
   1d84b:	e9 b0 fe ff ff       	jmp    1d700 <expand>

000000000001d850 <_UIx86_64__mempool_alloc>:
   1d850:	f3 0f 1e fa          	endbr64 
   1d854:	41 54                	push   %r12
   1d856:	55                   	push   %rbp
   1d857:	48 89 fd             	mov    %rdi,%rbp
   1d85a:	48 83 ec 08          	sub    $0x8,%rsp
   1d85e:	e8 5d e3 fe ff       	call   bbc0 <sgx_spin_lock>
   1d863:	85 c0                	test   %eax,%eax
   1d865:	75 46                	jne    1d8ad <_UIx86_64__mempool_alloc+0x5d>
   1d867:	8b 45 1c             	mov    0x1c(%rbp),%eax
   1d86a:	3b 45 18             	cmp    0x18(%rbp),%eax
   1d86d:	76 31                	jbe    1d8a0 <_UIx86_64__mempool_alloc+0x50>
   1d86f:	4c 8b 65 20          	mov    0x20(%rbp),%r12
   1d873:	83 e8 01             	sub    $0x1,%eax
   1d876:	48 89 ef             	mov    %rbp,%rdi
   1d879:	89 45 1c             	mov    %eax,0x1c(%rbp)
   1d87c:	49 8b 04 24          	mov    (%r12),%rax
   1d880:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1d884:	e8 a7 e3 fe ff       	call   bc30 <sgx_spin_unlock>
   1d889:	85 c0                	test   %eax,%eax
   1d88b:	75 20                	jne    1d8ad <_UIx86_64__mempool_alloc+0x5d>
   1d88d:	48 83 c4 08          	add    $0x8,%rsp
   1d891:	4c 89 e0             	mov    %r12,%rax
   1d894:	5d                   	pop    %rbp
   1d895:	41 5c                	pop    %r12
   1d897:	c3                   	ret    
   1d898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d89f:	00 
   1d8a0:	48 89 ef             	mov    %rbp,%rdi
   1d8a3:	e8 58 fe ff ff       	call   1d700 <expand>
   1d8a8:	8b 45 1c             	mov    0x1c(%rbp),%eax
   1d8ab:	eb c2                	jmp    1d86f <_UIx86_64__mempool_alloc+0x1f>
   1d8ad:	e8 52 3d 00 00       	call   21604 <abort>
   1d8b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d8b9:	00 00 00 
   1d8bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d8c0 <_UIx86_64__mempool_free>:
   1d8c0:	f3 0f 1e fa          	endbr64 
   1d8c4:	55                   	push   %rbp
   1d8c5:	48 89 fd             	mov    %rdi,%rbp
   1d8c8:	53                   	push   %rbx
   1d8c9:	48 89 f3             	mov    %rsi,%rbx
   1d8cc:	48 83 ec 08          	sub    $0x8,%rsp
   1d8d0:	e8 eb e2 fe ff       	call   bbc0 <sgx_spin_lock>
   1d8d5:	85 c0                	test   %eax,%eax
   1d8d7:	75 22                	jne    1d8fb <_UIx86_64__mempool_free+0x3b>
   1d8d9:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1d8dd:	48 89 ef             	mov    %rbp,%rdi
   1d8e0:	48 89 03             	mov    %rax,(%rbx)
   1d8e3:	83 45 1c 01          	addl   $0x1,0x1c(%rbp)
   1d8e7:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
   1d8eb:	e8 40 e3 fe ff       	call   bc30 <sgx_spin_unlock>
   1d8f0:	85 c0                	test   %eax,%eax
   1d8f2:	75 07                	jne    1d8fb <_UIx86_64__mempool_free+0x3b>
   1d8f4:	48 83 c4 08          	add    $0x8,%rsp
   1d8f8:	5b                   	pop    %rbx
   1d8f9:	5d                   	pop    %rbp
   1d8fa:	c3                   	ret    
   1d8fb:	e8 04 3d 00 00       	call   21604 <abort>

000000000001d900 <_Ux86_64_is_fpreg>:
   1d900:	f3 0f 1e fa          	endbr64 
   1d904:	31 c0                	xor    %eax,%eax
   1d906:	c3                   	ret    
   1d907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d90e:	00 00 

000000000001d910 <_ULx86_64_fetch_frame>:
   1d910:	f3 0f 1e fa          	endbr64 
   1d914:	31 c0                	xor    %eax,%eax
   1d916:	f6 87 50 01 00 00 04 	testb  $0x4,0x150(%rdi)
   1d91d:	74 16                	je     1d935 <_ULx86_64_fetch_frame+0x25>
   1d91f:	48 8b 97 90 01 00 00 	mov    0x190(%rdi),%rdx
   1d926:	48 85 d2             	test   %rdx,%rdx
   1d929:	74 0a                	je     1d935 <_ULx86_64_fetch_frame+0x25>
   1d92b:	0f b6 42 46          	movzbl 0x46(%rdx),%eax
   1d92f:	c0 e8 02             	shr    $0x2,%al
   1d932:	83 e0 01             	and    $0x1,%eax
   1d935:	89 87 b8 01 00 00    	mov    %eax,0x1b8(%rdi)
   1d93b:	c3                   	ret    
   1d93c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d940 <_ULx86_64_cache_frame>:
   1d940:	f3 0f 1e fa          	endbr64 
   1d944:	8b 87 b8 01 00 00    	mov    0x1b8(%rdi),%eax
   1d94a:	c3                   	ret    
   1d94b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001d950 <_ULx86_64_reuse_frame>:
   1d950:	f3 0f 1e fa          	endbr64 
   1d954:	89 b7 b8 01 00 00    	mov    %esi,0x1b8(%rdi)
   1d95a:	83 fe 01             	cmp    $0x1,%esi
   1d95d:	74 01                	je     1d960 <_ULx86_64_reuse_frame+0x10>
   1d95f:	c3                   	ret    
   1d960:	48 b8 18 00 00 00 fc 	movabs $0xfffffffc00000018,%rax
   1d967:	ff ff ff 
   1d96a:	48 23 87 b0 01 00 00 	and    0x1b0(%rdi),%rax
   1d971:	48 83 c8 07          	or     $0x7,%rax
   1d975:	48 89 87 b0 01 00 00 	mov    %rax,0x1b0(%rdi)
   1d97c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d980:	48 89 87 c0 01 00 00 	mov    %rax,0x1c0(%rdi)
   1d987:	c3                   	ret    
   1d988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d98f:	00 

000000000001d990 <_ULx86_64_is_signal_frame>:
   1d990:	f3 0f 1e fa          	endbr64 
   1d994:	8b 97 b8 01 00 00    	mov    0x1b8(%rdi),%edx
   1d99a:	31 c0                	xor    %eax,%eax
   1d99c:	85 d2                	test   %edx,%edx
   1d99e:	0f 95 c0             	setne  %al
   1d9a1:	c3                   	ret    
   1d9a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d9a9:	00 00 00 
   1d9ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d9b0 <_ULx86_64_handle_signal_frame>:
   1d9b0:	f3 0f 1e fa          	endbr64 
   1d9b4:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1d9b9:	c3                   	ret    
   1d9ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001d9c0 <_ULx86_64_r_uc_addr>:
   1d9c0:	f3 0f 1e fa          	endbr64 
   1d9c4:	83 fe 10             	cmp    $0x10,%esi
   1d9c7:	0f 87 85 48 fe ff    	ja     2252 <_ULx86_64_r_uc_addr.cold>
   1d9cd:	48 8d 15 8c 5b 00 00 	lea    0x5b8c(%rip),%rdx        # 23560 <_ZTSSt12out_of_range+0x20>
   1d9d4:	89 f6                	mov    %esi,%esi
   1d9d6:	48 63 04 b2          	movslq (%rdx,%rsi,4),%rax
   1d9da:	48 01 d0             	add    %rdx,%rax
   1d9dd:	3e ff e0             	notrack jmp *%rax
   1d9e0:	48 8d 47 60          	lea    0x60(%rdi),%rax
   1d9e4:	c3                   	ret    
   1d9e5:	0f 1f 00             	nopl   (%rax)
   1d9e8:	48 8d 87 a8 00 00 00 	lea    0xa8(%rdi),%rax
   1d9ef:	c3                   	ret    
   1d9f0:	48 8d 87 90 00 00 00 	lea    0x90(%rdi),%rax
   1d9f7:	c3                   	ret    
   1d9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d9ff:	00 
   1da00:	48 8d 87 88 00 00 00 	lea    0x88(%rdi),%rax
   1da07:	c3                   	ret    
   1da08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1da0f:	00 
   1da10:	48 8d 87 98 00 00 00 	lea    0x98(%rdi),%rax
   1da17:	c3                   	ret    
   1da18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1da1f:	00 
   1da20:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   1da27:	c3                   	ret    
   1da28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1da2f:	00 
   1da30:	48 8d 47 70          	lea    0x70(%rdi),%rax
   1da34:	c3                   	ret    
   1da35:	0f 1f 00             	nopl   (%rax)
   1da38:	48 8d 47 68          	lea    0x68(%rdi),%rax
   1da3c:	c3                   	ret    
   1da3d:	0f 1f 00             	nopl   (%rax)
   1da40:	48 8d 47 78          	lea    0x78(%rdi),%rax
   1da44:	c3                   	ret    
   1da45:	0f 1f 00             	nopl   (%rax)
   1da48:	48 8d 87 a0 00 00 00 	lea    0xa0(%rdi),%rax
   1da4f:	c3                   	ret    
   1da50:	48 8d 47 28          	lea    0x28(%rdi),%rax
   1da54:	c3                   	ret    
   1da55:	0f 1f 00             	nopl   (%rax)
   1da58:	48 8d 47 30          	lea    0x30(%rdi),%rax
   1da5c:	c3                   	ret    
   1da5d:	0f 1f 00             	nopl   (%rax)
   1da60:	48 8d 47 38          	lea    0x38(%rdi),%rax
   1da64:	c3                   	ret    
   1da65:	0f 1f 00             	nopl   (%rax)
   1da68:	48 8d 47 40          	lea    0x40(%rdi),%rax
   1da6c:	c3                   	ret    
   1da6d:	0f 1f 00             	nopl   (%rax)
   1da70:	48 8d 47 48          	lea    0x48(%rdi),%rax
   1da74:	c3                   	ret    
   1da75:	0f 1f 00             	nopl   (%rax)
   1da78:	48 8d 47 50          	lea    0x50(%rdi),%rax
   1da7c:	c3                   	ret    
   1da7d:	0f 1f 00             	nopl   (%rax)
   1da80:	48 8d 47 58          	lea    0x58(%rdi),%rax
   1da84:	c3                   	ret    
   1da85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1da8c:	00 00 00 
   1da8f:	90                   	nop

000000000001da90 <_ULx86_64_sigreturn>:
   1da90:	f3 0f 1e fa          	endbr64 
   1da94:	50                   	push   %rax
   1da95:	58                   	pop    %rax
   1da96:	48 83 ec 08          	sub    $0x8,%rsp
   1da9a:	48 8b b7 d0 01 00 00 	mov    0x1d0(%rdi),%rsi
   1daa1:	48 8b 8f c0 01 00 00 	mov    0x1c0(%rdi),%rcx
   1daa8:	f3 0f 6f 46 28       	movdqu 0x28(%rsi),%xmm0
   1daad:	0f 11 41 28          	movups %xmm0,0x28(%rcx)
   1dab1:	f3 0f 6f 4e 38       	movdqu 0x38(%rsi),%xmm1
   1dab6:	0f 11 49 38          	movups %xmm1,0x38(%rcx)
   1daba:	f3 0f 6f 56 48       	movdqu 0x48(%rsi),%xmm2
   1dabf:	0f 11 51 48          	movups %xmm2,0x48(%rcx)
   1dac3:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   1dac8:	0f 11 59 58          	movups %xmm3,0x58(%rcx)
   1dacc:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   1dad1:	0f 11 61 68          	movups %xmm4,0x68(%rcx)
   1dad5:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   1dada:	0f 11 69 78          	movups %xmm5,0x78(%rcx)
   1dade:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   1dae5:	00 
   1dae6:	0f 11 b1 88 00 00 00 	movups %xmm6,0x88(%rcx)
   1daed:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   1daf4:	00 
   1daf5:	0f 11 b9 98 00 00 00 	movups %xmm7,0x98(%rcx)
   1dafc:	48 8b 96 a8 00 00 00 	mov    0xa8(%rsi),%rdx
   1db03:	48 89 91 a8 00 00 00 	mov    %rdx,0xa8(%rcx)
   1db0a:	48 89 cc             	mov    %rcx,%rsp
   1db0d:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
   1db14:	0f 05                	syscall 
   1db16:	e8 e9 3a 00 00       	call   21604 <abort>
   1db1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001db20 <_ULx86_64_Ifind_dynamic_proc_info>:
   1db20:	f3 0f 1e fa          	endbr64 
   1db24:	48 39 3d 55 e7 00 00 	cmp    %rdi,0xe755(%rip)        # 2c280 <_ULx86_64_local_addr_space>
   1db2b:	75 73                	jne    1dba0 <_ULx86_64_Ifind_dynamic_proc_info+0x80>
   1db2d:	41 56                	push   %r14
   1db2f:	4d 89 c6             	mov    %r8,%r14
   1db32:	41 55                	push   %r13
   1db34:	49 89 d5             	mov    %rdx,%r13
   1db37:	41 54                	push   %r12
   1db39:	49 89 fc             	mov    %rdi,%r12
   1db3c:	55                   	push   %rbp
   1db3d:	48 89 f5             	mov    %rsi,%rbp
   1db40:	53                   	push   %rbx
   1db41:	89 cb                	mov    %ecx,%ebx
   1db43:	e8 08 25 00 00       	call   20050 <_U_dyn_info_list_addr>
   1db48:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1db4c:	48 85 c9             	test   %rcx,%rcx
   1db4f:	74 1b                	je     1db6c <_ULx86_64_Ifind_dynamic_proc_info+0x4c>
   1db51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1db58:	48 3b 69 10          	cmp    0x10(%rcx),%rbp
   1db5c:	72 06                	jb     1db64 <_ULx86_64_Ifind_dynamic_proc_info+0x44>
   1db5e:	48 3b 69 18          	cmp    0x18(%rcx),%rbp
   1db62:	72 1c                	jb     1db80 <_ULx86_64_Ifind_dynamic_proc_info+0x60>
   1db64:	48 8b 09             	mov    (%rcx),%rcx
   1db67:	48 85 c9             	test   %rcx,%rcx
   1db6a:	75 ec                	jne    1db58 <_ULx86_64_Ifind_dynamic_proc_info+0x38>
   1db6c:	5b                   	pop    %rbx
   1db6d:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1db72:	5d                   	pop    %rbp
   1db73:	41 5c                	pop    %r12
   1db75:	41 5d                	pop    %r13
   1db77:	41 5e                	pop    %r14
   1db79:	c3                   	ret    
   1db7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1db80:	4d 89 f1             	mov    %r14,%r9
   1db83:	41 89 d8             	mov    %ebx,%r8d
   1db86:	4c 89 ea             	mov    %r13,%rdx
   1db89:	5b                   	pop    %rbx
   1db8a:	48 89 ee             	mov    %rbp,%rsi
   1db8d:	4c 89 e7             	mov    %r12,%rdi
   1db90:	5d                   	pop    %rbp
   1db91:	41 5c                	pop    %r12
   1db93:	41 5d                	pop    %r13
   1db95:	41 5e                	pop    %r14
   1db97:	e9 c4 24 00 00       	jmp    20060 <_ULx86_64_Iextract_dynamic_proc_info>
   1db9c:	0f 1f 40 00          	nopl   0x0(%rax)
   1dba0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1dba5:	c3                   	ret    
   1dba6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dbad:	00 00 00 

000000000001dbb0 <_Ux86_64_get_accessors>:
   1dbb0:	f3 0f 1e fa          	endbr64 
   1dbb4:	8b 05 ae de 01 00    	mov    0x1deae(%rip),%eax        # 3ba68 <_ULx86_64_init_done>
   1dbba:	41 54                	push   %r12
   1dbbc:	49 89 fc             	mov    %rdi,%r12
   1dbbf:	85 c0                	test   %eax,%eax
   1dbc1:	74 0d                	je     1dbd0 <_Ux86_64_get_accessors+0x20>
   1dbc3:	4c 89 e0             	mov    %r12,%rax
   1dbc6:	41 5c                	pop    %r12
   1dbc8:	c3                   	ret    
   1dbc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1dbd0:	e8 2b 05 00 00       	call   1e100 <_ULx86_64_init>
   1dbd5:	4c 89 e0             	mov    %r12,%rax
   1dbd8:	41 5c                	pop    %r12
   1dbda:	c3                   	ret    
   1dbdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001dbe0 <_ULx86_64_Iput_dynamic_unwind_info>:
   1dbe0:	f3 0f 1e fa          	endbr64 
   1dbe4:	8b 46 30             	mov    0x30(%rsi),%eax
   1dbe7:	83 e8 01             	sub    $0x1,%eax
   1dbea:	83 f8 01             	cmp    $0x1,%eax
   1dbed:	76 01                	jbe    1dbf0 <_ULx86_64_Iput_dynamic_unwind_info+0x10>
   1dbef:	c3                   	ret    
   1dbf0:	e9 3b 22 00 00       	jmp    1fe30 <_ULx86_64_dwarf_put_unwind_info>
   1dbf5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dbfc:	00 00 00 
   1dbff:	90                   	nop

000000000001dc00 <_ULx86_64_get_reg>:
   1dc00:	f3 0f 1e fa          	endbr64 
   1dc04:	83 fe 10             	cmp    $0x10,%esi
   1dc07:	74 07                	je     1dc10 <_ULx86_64_get_reg+0x10>
   1dc09:	31 c9                	xor    %ecx,%ecx
   1dc0b:	e9 d0 08 00 00       	jmp    1e4e0 <_ULx86_64_access_reg>
   1dc10:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1dc14:	48 89 02             	mov    %rax,(%rdx)
   1dc17:	31 c0                	xor    %eax,%eax
   1dc19:	c3                   	ret    
   1dc1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001dc20 <_Unwind_Backtrace>:
   1dc20:	f3 0f 1e fa          	endbr64 
   1dc24:	41 55                	push   %r13
   1dc26:	41 54                	push   %r12
   1dc28:	49 89 f4             	mov    %rsi,%r12
   1dc2b:	55                   	push   %rbp
   1dc2c:	48 89 fd             	mov    %rdi,%rbp
   1dc2f:	53                   	push   %rbx
   1dc30:	48 81 ec e8 07 00 00 	sub    $0x7e8,%rsp
   1dc37:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dc3e:	00 00 
   1dc40:	48 89 84 24 d8 07 00 	mov    %rax,0x7d8(%rsp)
   1dc47:	00 
   1dc48:	31 c0                	xor    %eax,%eax
   1dc4a:	49 89 e5             	mov    %rsp,%r13
   1dc4d:	c7 84 24 c8 07 00 00 	movl   $0x0,0x7c8(%rsp)
   1dc54:	00 00 00 00 
   1dc58:	4c 89 ef             	mov    %r13,%rdi
   1dc5b:	e8 89 c1 ff ff       	call   19de9 <_Ux86_64_getcontext>
   1dc60:	85 c0                	test   %eax,%eax
   1dc62:	78 1c                	js     1dc80 <_Unwind_Backtrace+0x60>
   1dc64:	48 8d 9c 24 d0 03 00 	lea    0x3d0(%rsp),%rbx
   1dc6b:	00 
   1dc6c:	4c 89 ee             	mov    %r13,%rsi
   1dc6f:	48 89 df             	mov    %rbx,%rdi
   1dc72:	e8 69 bb ff ff       	call   197e0 <_ULx86_64_init_local>
   1dc77:	85 c0                	test   %eax,%eax
   1dc79:	79 41                	jns    1dcbc <_Unwind_Backtrace+0x9c>
   1dc7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dc80:	b8 03 00 00 00       	mov    $0x3,%eax
   1dc85:	48 8b 94 24 d8 07 00 	mov    0x7d8(%rsp),%rdx
   1dc8c:	00 
   1dc8d:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1dc94:	00 00 
   1dc96:	75 39                	jne    1dcd1 <_Unwind_Backtrace+0xb1>
   1dc98:	48 81 c4 e8 07 00 00 	add    $0x7e8,%rsp
   1dc9f:	5b                   	pop    %rbx
   1dca0:	5d                   	pop    %rbp
   1dca1:	41 5c                	pop    %r12
   1dca3:	41 5d                	pop    %r13
   1dca5:	c3                   	ret    
   1dca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dcad:	00 00 00 
   1dcb0:	4c 89 e6             	mov    %r12,%rsi
   1dcb3:	48 89 df             	mov    %rbx,%rdi
   1dcb6:	ff d5                	call   *%rbp
   1dcb8:	85 c0                	test   %eax,%eax
   1dcba:	75 c4                	jne    1dc80 <_Unwind_Backtrace+0x60>
   1dcbc:	48 89 df             	mov    %rbx,%rdi
   1dcbf:	e8 6c bd ff ff       	call   19a30 <_ULx86_64_step>
   1dcc4:	85 c0                	test   %eax,%eax
   1dcc6:	7f e8                	jg     1dcb0 <_Unwind_Backtrace+0x90>
   1dcc8:	b8 05 00 00 00       	mov    $0x5,%eax
   1dccd:	74 b6                	je     1dc85 <_Unwind_Backtrace+0x65>
   1dccf:	eb af                	jmp    1dc80 <_Unwind_Backtrace+0x60>
   1dcd1:	e8 ea 1c ff ff       	call   f9c0 <__stack_chk_fail>
   1dcd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dcdd:	00 00 00 

000000000001dce0 <_Unwind_GetDataRelBase>:
   1dce0:	f3 0f 1e fa          	endbr64 
   1dce4:	48 83 ec 58          	sub    $0x58,%rsp
   1dce8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dcef:	00 00 
   1dcf1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1dcf6:	31 c0                	xor    %eax,%eax
   1dcf8:	48 89 e6             	mov    %rsp,%rsi
   1dcfb:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1dd02:	00 00 
   1dd04:	e8 e7 ba ff ff       	call   197f0 <_ULx86_64_get_proc_info>
   1dd09:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1dd0e:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1dd13:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1dd1a:	00 00 
   1dd1c:	75 05                	jne    1dd23 <_Unwind_GetDataRelBase+0x43>
   1dd1e:	48 83 c4 58          	add    $0x58,%rsp
   1dd22:	c3                   	ret    
   1dd23:	e8 98 1c ff ff       	call   f9c0 <__stack_chk_fail>
   1dd28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1dd2f:	00 

000000000001dd30 <_Unwind_GetIP>:
   1dd30:	f3 0f 1e fa          	endbr64 
   1dd34:	48 83 ec 18          	sub    $0x18,%rsp
   1dd38:	be 10 00 00 00       	mov    $0x10,%esi
   1dd3d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dd44:	00 00 
   1dd46:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dd4b:	31 c0                	xor    %eax,%eax
   1dd4d:	48 89 e2             	mov    %rsp,%rdx
   1dd50:	e8 ab fe ff ff       	call   1dc00 <_ULx86_64_get_reg>
   1dd55:	48 8b 04 24          	mov    (%rsp),%rax
   1dd59:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1dd5e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1dd65:	00 00 
   1dd67:	75 05                	jne    1dd6e <_Unwind_GetIP+0x3e>
   1dd69:	48 83 c4 18          	add    $0x18,%rsp
   1dd6d:	c3                   	ret    
   1dd6e:	e8 4d 1c ff ff       	call   f9c0 <__stack_chk_fail>
   1dd73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dd7a:	00 00 00 
   1dd7d:	0f 1f 00             	nopl   (%rax)

000000000001dd80 <_Unwind_GetLanguageSpecificData>:
   1dd80:	f3 0f 1e fa          	endbr64 
   1dd84:	48 83 ec 58          	sub    $0x58,%rsp
   1dd88:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dd8f:	00 00 
   1dd91:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1dd96:	31 c0                	xor    %eax,%eax
   1dd98:	48 89 e6             	mov    %rsp,%rsi
   1dd9b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1dda2:	00 00 
   1dda4:	e8 47 ba ff ff       	call   197f0 <_ULx86_64_get_proc_info>
   1dda9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1ddae:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1ddb3:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1ddba:	00 00 
   1ddbc:	75 05                	jne    1ddc3 <_Unwind_GetLanguageSpecificData+0x43>
   1ddbe:	48 83 c4 58          	add    $0x58,%rsp
   1ddc2:	c3                   	ret    
   1ddc3:	e8 f8 1b ff ff       	call   f9c0 <__stack_chk_fail>
   1ddc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ddcf:	00 

000000000001ddd0 <_Unwind_GetRegionStart>:
   1ddd0:	f3 0f 1e fa          	endbr64 
   1ddd4:	48 83 ec 58          	sub    $0x58,%rsp
   1ddd8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dddf:	00 00 
   1dde1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1dde6:	31 c0                	xor    %eax,%eax
   1dde8:	48 89 e6             	mov    %rsp,%rsi
   1ddeb:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   1ddf2:	00 
   1ddf3:	e8 f8 b9 ff ff       	call   197f0 <_ULx86_64_get_proc_info>
   1ddf8:	48 8b 04 24          	mov    (%rsp),%rax
   1ddfc:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1de01:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1de08:	00 00 
   1de0a:	75 05                	jne    1de11 <_Unwind_GetRegionStart+0x41>
   1de0c:	48 83 c4 58          	add    $0x58,%rsp
   1de10:	c3                   	ret    
   1de11:	e8 aa 1b ff ff       	call   f9c0 <__stack_chk_fail>
   1de16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1de1d:	00 00 00 

000000000001de20 <_Unwind_GetTextRelBase>:
   1de20:	f3 0f 1e fa          	endbr64 
   1de24:	31 c0                	xor    %eax,%eax
   1de26:	c3                   	ret    
   1de27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1de2e:	00 00 

000000000001de30 <_Unwind_RaiseException>:
   1de30:	f3 0f 1e fa          	endbr64 
   1de34:	41 57                	push   %r15
   1de36:	41 56                	push   %r14
   1de38:	41 55                	push   %r13
   1de3a:	41 54                	push   %r12
   1de3c:	55                   	push   %rbp
   1de3d:	53                   	push   %rbx
   1de3e:	48 89 fb             	mov    %rdi,%rbx
   1de41:	48 81 ec a8 08 00 00 	sub    $0x8a8,%rsp
   1de48:	4c 8b 37             	mov    (%rdi),%r14
   1de4b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1de52:	00 00 
   1de54:	48 89 84 24 98 08 00 	mov    %rax,0x898(%rsp)
   1de5b:	00 
   1de5c:	31 c0                	xor    %eax,%eax
   1de5e:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   1de65:	00 
   1de66:	c7 84 24 88 08 00 00 	movl   $0x0,0x888(%rsp)
   1de6d:	00 00 00 00 
   1de71:	4c 89 ef             	mov    %r13,%rdi
   1de74:	e8 70 bf ff ff       	call   19de9 <_Ux86_64_getcontext>
   1de79:	85 c0                	test   %eax,%eax
   1de7b:	78 53                	js     1ded0 <_Unwind_RaiseException+0xa0>
   1de7d:	48 8d ac 24 90 04 00 	lea    0x490(%rsp),%rbp
   1de84:	00 
   1de85:	4c 89 ee             	mov    %r13,%rsi
   1de88:	48 89 ef             	mov    %rbp,%rdi
   1de8b:	e8 50 b9 ff ff       	call   197e0 <_ULx86_64_init_local>
   1de90:	85 c0                	test   %eax,%eax
   1de92:	78 3c                	js     1ded0 <_Unwind_RaiseException+0xa0>
   1de94:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   1de99:	eb 1e                	jmp    1deb9 <_Unwind_RaiseException+0x89>
   1de9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dea0:	4c 89 e6             	mov    %r12,%rsi
   1dea3:	48 89 ef             	mov    %rbp,%rdi
   1dea6:	e8 45 b9 ff ff       	call   197f0 <_ULx86_64_get_proc_info>
   1deab:	85 c0                	test   %eax,%eax
   1dead:	78 21                	js     1ded0 <_Unwind_RaiseException+0xa0>
   1deaf:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1deb4:	48 85 c0             	test   %rax,%rax
   1deb7:	75 47                	jne    1df00 <_Unwind_RaiseException+0xd0>
   1deb9:	48 89 ef             	mov    %rbp,%rdi
   1debc:	e8 6f bb ff ff       	call   19a30 <_ULx86_64_step>
   1dec1:	85 c0                	test   %eax,%eax
   1dec3:	7f db                	jg     1dea0 <_Unwind_RaiseException+0x70>
   1dec5:	b8 05 00 00 00       	mov    $0x5,%eax
   1deca:	74 09                	je     1ded5 <_Unwind_RaiseException+0xa5>
   1decc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ded0:	b8 03 00 00 00       	mov    $0x3,%eax
   1ded5:	48 8b 8c 24 98 08 00 	mov    0x898(%rsp),%rcx
   1dedc:	00 
   1dedd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1dee4:	00 00 
   1dee6:	0f 85 2f 01 00 00    	jne    1e01b <_Unwind_RaiseException+0x1eb>
   1deec:	48 81 c4 a8 08 00 00 	add    $0x8a8,%rsp
   1def3:	5b                   	pop    %rbx
   1def4:	5d                   	pop    %rbp
   1def5:	41 5c                	pop    %r12
   1def7:	41 5d                	pop    %r13
   1def9:	41 5e                	pop    %r14
   1defb:	41 5f                	pop    %r15
   1defd:	c3                   	ret    
   1defe:	66 90                	xchg   %ax,%ax
   1df00:	49 89 e8             	mov    %rbp,%r8
   1df03:	48 89 d9             	mov    %rbx,%rcx
   1df06:	4c 89 f2             	mov    %r14,%rdx
   1df09:	be 01 00 00 00       	mov    $0x1,%esi
   1df0e:	bf 01 00 00 00       	mov    $0x1,%edi
   1df13:	ff d0                	call   *%rax
   1df15:	83 f8 08             	cmp    $0x8,%eax
   1df18:	74 9f                	je     1deb9 <_Unwind_RaiseException+0x89>
   1df1a:	83 f8 06             	cmp    $0x6,%eax
   1df1d:	75 b1                	jne    1ded0 <_Unwind_RaiseException+0xa0>
   1df1f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1df24:	be 10 00 00 00       	mov    $0x10,%esi
   1df29:	48 89 ef             	mov    %rbp,%rdi
   1df2c:	e8 cf fc ff ff       	call   1dc00 <_ULx86_64_get_reg>
   1df31:	85 c0                	test   %eax,%eax
   1df33:	78 9b                	js     1ded0 <_Unwind_RaiseException+0xa0>
   1df35:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1df3a:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1df41:	00 
   1df42:	4c 89 ee             	mov    %r13,%rsi
   1df45:	48 89 ef             	mov    %rbp,%rdi
   1df48:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1df4c:	e8 8f b8 ff ff       	call   197e0 <_ULx86_64_init_local>
   1df51:	85 c0                	test   %eax,%eax
   1df53:	0f 88 77 ff ff ff    	js     1ded0 <_Unwind_RaiseException+0xa0>
   1df59:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1df5d:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1df61:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   1df66:	4c 8b 3b             	mov    (%rbx),%r15
   1df69:	49 83 fd 01          	cmp    $0x1,%r13
   1df6d:	48 89 04 24          	mov    %rax,(%rsp)
   1df71:	45 19 e4             	sbb    %r12d,%r12d
   1df74:	41 83 e4 f8          	and    $0xfffffff8,%r12d
   1df78:	41 83 c4 0a          	add    $0xa,%r12d
   1df7c:	eb 48                	jmp    1dfc6 <_Unwind_RaiseException+0x196>
   1df7e:	4d 85 ed             	test   %r13,%r13
   1df81:	74 1c                	je     1df9f <_Unwind_RaiseException+0x16f>
   1df83:	4c 8b 0c 24          	mov    (%rsp),%r9
   1df87:	49 89 e8             	mov    %rbp,%r8
   1df8a:	48 89 d9             	mov    %rbx,%rcx
   1df8d:	4c 89 fa             	mov    %r15,%rdx
   1df90:	44 89 e6             	mov    %r12d,%esi
   1df93:	bf 01 00 00 00       	mov    $0x1,%edi
   1df98:	41 ff d5             	call   *%r13
   1df9b:	85 c0                	test   %eax,%eax
   1df9d:	75 49                	jne    1dfe8 <_Unwind_RaiseException+0x1b8>
   1df9f:	8b 84 24 88 08 00 00 	mov    0x888(%rsp),%eax
   1dfa6:	85 c0                	test   %eax,%eax
   1dfa8:	75 3e                	jne    1dfe8 <_Unwind_RaiseException+0x1b8>
   1dfaa:	4c 89 f6             	mov    %r14,%rsi
   1dfad:	48 89 ef             	mov    %rbp,%rdi
   1dfb0:	e8 3b b8 ff ff       	call   197f0 <_ULx86_64_get_proc_info>
   1dfb5:	85 c0                	test   %eax,%eax
   1dfb7:	78 2f                	js     1dfe8 <_Unwind_RaiseException+0x1b8>
   1dfb9:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   1dfc0:	00 
   1dfc1:	4d 85 c9             	test   %r9,%r9
   1dfc4:	75 2c                	jne    1dff2 <_Unwind_RaiseException+0x1c2>
   1dfc6:	48 89 ef             	mov    %rbp,%rdi
   1dfc9:	e8 62 ba ff ff       	call   19a30 <_ULx86_64_step>
   1dfce:	85 c0                	test   %eax,%eax
   1dfd0:	7f ac                	jg     1df7e <_Unwind_RaiseException+0x14e>
   1dfd2:	75 14                	jne    1dfe8 <_Unwind_RaiseException+0x1b8>
   1dfd4:	c7 84 24 88 08 00 00 	movl   $0x1,0x888(%rsp)
   1dfdb:	01 00 00 00 
   1dfdf:	41 83 cc 10          	or     $0x10,%r12d
   1dfe3:	4d 85 ed             	test   %r13,%r13
   1dfe6:	75 9b                	jne    1df83 <_Unwind_RaiseException+0x153>
   1dfe8:	b8 02 00 00 00       	mov    $0x2,%eax
   1dfed:	e9 e3 fe ff ff       	jmp    1ded5 <_Unwind_RaiseException+0xa5>
   1dff2:	4d 85 ed             	test   %r13,%r13
   1dff5:	74 3b                	je     1e032 <_Unwind_RaiseException+0x202>
   1dff7:	49 89 e8             	mov    %rbp,%r8
   1dffa:	48 89 d9             	mov    %rbx,%rcx
   1dffd:	4c 89 fa             	mov    %r15,%rdx
   1e000:	44 89 e6             	mov    %r12d,%esi
   1e003:	bf 01 00 00 00       	mov    $0x1,%edi
   1e008:	41 ff d1             	call   *%r9
   1e00b:	83 f8 08             	cmp    $0x8,%eax
   1e00e:	75 10                	jne    1e020 <_Unwind_RaiseException+0x1f0>
   1e010:	41 f6 c4 04          	test   $0x4,%r12b
   1e014:	74 b0                	je     1dfc6 <_Unwind_RaiseException+0x196>
   1e016:	e8 e9 35 00 00       	call   21604 <abort>
   1e01b:	e8 a0 19 ff ff       	call   f9c0 <__stack_chk_fail>
   1e020:	83 f8 07             	cmp    $0x7,%eax
   1e023:	75 c3                	jne    1dfe8 <_Unwind_RaiseException+0x1b8>
   1e025:	48 89 ef             	mov    %rbp,%rdi
   1e028:	e8 b3 b8 ff ff       	call   198e0 <_ULx86_64_resume>
   1e02d:	e8 d2 35 00 00       	call   21604 <abort>
   1e032:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1e037:	be 10 00 00 00       	mov    $0x10,%esi
   1e03c:	48 89 ef             	mov    %rbp,%rdi
   1e03f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1e044:	e8 b7 fb ff ff       	call   1dc00 <_ULx86_64_get_reg>
   1e049:	85 c0                	test   %eax,%eax
   1e04b:	78 9b                	js     1dfe8 <_Unwind_RaiseException+0x1b8>
   1e04d:	48 8b 04 24          	mov    (%rsp),%rax
   1e051:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   1e056:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1e05b:	75 9a                	jne    1dff7 <_Unwind_RaiseException+0x1c7>
   1e05d:	41 83 cc 04          	or     $0x4,%r12d
   1e061:	eb 94                	jmp    1dff7 <_Unwind_RaiseException+0x1c7>
   1e063:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e06a:	00 00 00 
   1e06d:	0f 1f 00             	nopl   (%rax)

000000000001e070 <_Unwind_SetGR>:
   1e070:	f3 0f 1e fa          	endbr64 
   1e074:	e9 67 20 00 00       	jmp    200e0 <_ULx86_64_set_reg>
   1e079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001e080 <_Unwind_SetIP>:
   1e080:	f3 0f 1e fa          	endbr64 
   1e084:	48 89 f2             	mov    %rsi,%rdx
   1e087:	be 10 00 00 00       	mov    $0x10,%esi
   1e08c:	e9 4f 20 00 00       	jmp    200e0 <_ULx86_64_set_reg>

000000000001e091 <_Ux86_64_setcontext>:
   1e091:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
   1e098:	41 d9 20             	fldenv (%r8)
   1e09b:	41 0f ae 50 18       	ldmxcsr 0x18(%r8)
   1e0a0:	4c 8b 47 28          	mov    0x28(%rdi),%r8
   1e0a4:	4c 8b 4f 30          	mov    0x30(%rdi),%r9
   1e0a8:	48 8b 9f 80 00 00 00 	mov    0x80(%rdi),%rbx
   1e0af:	48 8b 6f 78          	mov    0x78(%rdi),%rbp
   1e0b3:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   1e0b7:	4c 8b 6f 50          	mov    0x50(%rdi),%r13
   1e0bb:	4c 8b 77 58          	mov    0x58(%rdi),%r14
   1e0bf:	4c 8b 7f 60          	mov    0x60(%rdi),%r15
   1e0c3:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   1e0c7:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
   1e0ce:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
   1e0d5:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   1e0dc:	48 8b a7 a0 00 00 00 	mov    0xa0(%rdi),%rsp
   1e0e3:	48 8b 8f a8 00 00 00 	mov    0xa8(%rdi),%rcx
   1e0ea:	51                   	push   %rcx
   1e0eb:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   1e0f2:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
   1e0f6:	c3                   	ret    
   1e0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e0fe:	00 00 

000000000001e100 <_ULx86_64_init>:
   1e100:	f3 0f 1e fa          	endbr64 
   1e104:	48 83 ec 08          	sub    $0x8,%rsp
   1e108:	48 8d 3d 31 70 01 00 	lea    0x17031(%rip),%rdi        # 35140 <_ULx86_64_lock>
   1e10f:	e8 ac da fe ff       	call   bbc0 <sgx_spin_lock>
   1e114:	85 c0                	test   %eax,%eax
   1e116:	75 3d                	jne    1e155 <_ULx86_64_init+0x55>
   1e118:	8b 05 4a d9 01 00    	mov    0x1d94a(%rip),%eax        # 3ba68 <_ULx86_64_init_done>
   1e11e:	85 c0                	test   %eax,%eax
   1e120:	75 1e                	jne    1e140 <_ULx86_64_init+0x40>
   1e122:	e8 b9 1e 00 00       	call   1ffe0 <_UIx86_64_mi_init>
   1e127:	e8 44 db ff ff       	call   1bc70 <_Ux86_64_dwarf_init>
   1e12c:	e8 bf 02 00 00       	call   1e3f0 <_ULx86_64_init_mem_validate>
   1e131:	e8 da 02 00 00       	call   1e410 <_ULx86_64_local_addr_space_init>
   1e136:	c7 05 28 d9 01 00 01 	movl   $0x1,0x1d928(%rip)        # 3ba68 <_ULx86_64_init_done>
   1e13d:	00 00 00 
   1e140:	48 8d 3d f9 6f 01 00 	lea    0x16ff9(%rip),%rdi        # 35140 <_ULx86_64_lock>
   1e147:	e8 e4 da fe ff       	call   bc30 <sgx_spin_unlock>
   1e14c:	85 c0                	test   %eax,%eax
   1e14e:	75 05                	jne    1e155 <_ULx86_64_init+0x55>
   1e150:	48 83 c4 08          	add    $0x8,%rsp
   1e154:	c3                   	ret    
   1e155:	e8 aa 34 00 00       	call   21604 <abort>
   1e15a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e160 <put_unwind_info>:
   1e160:	f3 0f 1e fa          	endbr64 
   1e164:	c3                   	ret    
   1e165:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e16c:	00 00 00 
   1e16f:	90                   	nop

000000000001e170 <get_static_proc_name>:
   1e170:	f3 0f 1e fa          	endbr64 
   1e174:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e179:	c3                   	ret    
   1e17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e180 <msync_validate>:
   1e180:	f3 0f 1e fa          	endbr64 
   1e184:	41 54                	push   %r12
   1e186:	31 c0                	xor    %eax,%eax
   1e188:	49 89 f4             	mov    %rsi,%r12
   1e18b:	55                   	push   %rbp
   1e18c:	48 89 fd             	mov    %rdi,%rbp
   1e18f:	48 83 ec 08          	sub    $0x8,%rsp
   1e193:	e8 a8 ab fe ff       	call   8d40 <sgx_is_within_enclave>
   1e198:	85 c0                	test   %eax,%eax
   1e19a:	74 22                	je     1e1be <msync_validate+0x3e>
   1e19c:	4c 89 e6             	mov    %r12,%rsi
   1e19f:	48 89 ef             	mov    %rbp,%rdi
   1e1a2:	ba 01 00 00 00       	mov    $0x1,%edx
   1e1a7:	e8 34 1d 00 00       	call   1fee0 <msync>
   1e1ac:	85 c0                	test   %eax,%eax
   1e1ae:	0f 95 c0             	setne  %al
   1e1b1:	48 83 c4 08          	add    $0x8,%rsp
   1e1b5:	0f b6 c0             	movzbl %al,%eax
   1e1b8:	5d                   	pop    %rbp
   1e1b9:	41 5c                	pop    %r12
   1e1bb:	f7 d8                	neg    %eax
   1e1bd:	c3                   	ret    
   1e1be:	e8 41 34 00 00       	call   21604 <abort>
   1e1c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e1ca:	00 00 00 
   1e1cd:	0f 1f 00             	nopl   (%rax)

000000000001e1d0 <access_fpreg>:
   1e1d0:	f3 0f 1e fa          	endbr64 
   1e1d4:	41 55                	push   %r13
   1e1d6:	89 f7                	mov    %esi,%edi
   1e1d8:	41 54                	push   %r12
   1e1da:	41 89 cc             	mov    %ecx,%r12d
   1e1dd:	55                   	push   %rbp
   1e1de:	89 f5                	mov    %esi,%ebp
   1e1e0:	53                   	push   %rbx
   1e1e1:	48 89 d3             	mov    %rdx,%rbx
   1e1e4:	48 83 ec 08          	sub    $0x8,%rsp
   1e1e8:	4d 8b a8 d0 01 00 00 	mov    0x1d0(%r8),%r13
   1e1ef:	e8 0c f7 ff ff       	call   1d900 <_Ux86_64_is_fpreg>
   1e1f4:	85 c0                	test   %eax,%eax
   1e1f6:	74 40                	je     1e238 <access_fpreg+0x68>
   1e1f8:	89 ee                	mov    %ebp,%esi
   1e1fa:	4c 89 ef             	mov    %r13,%rdi
   1e1fd:	e8 be f7 ff ff       	call   1d9c0 <_ULx86_64_r_uc_addr>
   1e202:	48 85 c0             	test   %rax,%rax
   1e205:	74 31                	je     1e238 <access_fpreg+0x68>
   1e207:	45 85 e4             	test   %r12d,%r12d
   1e20a:	75 14                	jne    1e220 <access_fpreg+0x50>
   1e20c:	db 28                	fldt   (%rax)
   1e20e:	31 c0                	xor    %eax,%eax
   1e210:	db 3b                	fstpt  (%rbx)
   1e212:	48 83 c4 08          	add    $0x8,%rsp
   1e216:	5b                   	pop    %rbx
   1e217:	5d                   	pop    %rbp
   1e218:	41 5c                	pop    %r12
   1e21a:	41 5d                	pop    %r13
   1e21c:	c3                   	ret    
   1e21d:	0f 1f 00             	nopl   (%rax)
   1e220:	db 2b                	fldt   (%rbx)
   1e222:	db 38                	fstpt  (%rax)
   1e224:	48 83 c4 08          	add    $0x8,%rsp
   1e228:	31 c0                	xor    %eax,%eax
   1e22a:	5b                   	pop    %rbx
   1e22b:	5d                   	pop    %rbp
   1e22c:	41 5c                	pop    %r12
   1e22e:	41 5d                	pop    %r13
   1e230:	c3                   	ret    
   1e231:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e238:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1e23d:	eb d3                	jmp    1e212 <access_fpreg+0x42>
   1e23f:	90                   	nop

000000000001e240 <access_reg>:
   1e240:	f3 0f 1e fa          	endbr64 
   1e244:	41 56                	push   %r14
   1e246:	89 f7                	mov    %esi,%edi
   1e248:	41 55                	push   %r13
   1e24a:	41 89 cd             	mov    %ecx,%r13d
   1e24d:	41 54                	push   %r12
   1e24f:	55                   	push   %rbp
   1e250:	89 f5                	mov    %esi,%ebp
   1e252:	53                   	push   %rbx
   1e253:	48 89 d3             	mov    %rdx,%rbx
   1e256:	4d 8b b0 d0 01 00 00 	mov    0x1d0(%r8),%r14
   1e25d:	e8 9e f6 ff ff       	call   1d900 <_Ux86_64_is_fpreg>
   1e262:	85 c0                	test   %eax,%eax
   1e264:	75 42                	jne    1e2a8 <access_reg+0x68>
   1e266:	89 ee                	mov    %ebp,%esi
   1e268:	4c 89 f7             	mov    %r14,%rdi
   1e26b:	41 89 c4             	mov    %eax,%r12d
   1e26e:	e8 4d f7 ff ff       	call   1d9c0 <_ULx86_64_r_uc_addr>
   1e273:	48 85 c0             	test   %rax,%rax
   1e276:	74 30                	je     1e2a8 <access_reg+0x68>
   1e278:	45 85 ed             	test   %r13d,%r13d
   1e27b:	75 13                	jne    1e290 <access_reg+0x50>
   1e27d:	48 8b 00             	mov    (%rax),%rax
   1e280:	48 89 03             	mov    %rax,(%rbx)
   1e283:	5b                   	pop    %rbx
   1e284:	44 89 e0             	mov    %r12d,%eax
   1e287:	5d                   	pop    %rbp
   1e288:	41 5c                	pop    %r12
   1e28a:	41 5d                	pop    %r13
   1e28c:	41 5e                	pop    %r14
   1e28e:	c3                   	ret    
   1e28f:	90                   	nop
   1e290:	48 8b 13             	mov    (%rbx),%rdx
   1e293:	48 89 10             	mov    %rdx,(%rax)
   1e296:	44 89 e0             	mov    %r12d,%eax
   1e299:	5b                   	pop    %rbx
   1e29a:	5d                   	pop    %rbp
   1e29b:	41 5c                	pop    %r12
   1e29d:	41 5d                	pop    %r13
   1e29f:	41 5e                	pop    %r14
   1e2a1:	c3                   	ret    
   1e2a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e2a8:	41 bc fd ff ff ff    	mov    $0xfffffffd,%r12d
   1e2ae:	eb d3                	jmp    1e283 <access_reg+0x43>

000000000001e2b0 <access_mem>:
   1e2b0:	f3 0f 1e fa          	endbr64 
   1e2b4:	41 55                	push   %r13
   1e2b6:	41 54                	push   %r12
   1e2b8:	55                   	push   %rbp
   1e2b9:	48 89 d5             	mov    %rdx,%rbp
   1e2bc:	53                   	push   %rbx
   1e2bd:	48 89 f3             	mov    %rsi,%rbx
   1e2c0:	48 83 ec 08          	sub    $0x8,%rsp
   1e2c4:	85 c9                	test   %ecx,%ecx
   1e2c6:	75 28                	jne    1e2f0 <access_mem+0x40>
   1e2c8:	4d 85 c0             	test   %r8,%r8
   1e2cb:	74 0b                	je     1e2d8 <access_mem+0x28>
   1e2cd:	41 8b 80 c8 01 00 00 	mov    0x1c8(%r8),%eax
   1e2d4:	85 c0                	test   %eax,%eax
   1e2d6:	75 30                	jne    1e308 <access_mem+0x58>
   1e2d8:	48 8b 03             	mov    (%rbx),%rax
   1e2db:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1e2df:	31 c0                	xor    %eax,%eax
   1e2e1:	48 83 c4 08          	add    $0x8,%rsp
   1e2e5:	5b                   	pop    %rbx
   1e2e6:	5d                   	pop    %rbp
   1e2e7:	41 5c                	pop    %r12
   1e2e9:	41 5d                	pop    %r13
   1e2eb:	c3                   	ret    
   1e2ec:	0f 1f 40 00          	nopl   0x0(%rax)
   1e2f0:	48 8b 02             	mov    (%rdx),%rax
   1e2f3:	48 89 06             	mov    %rax,(%rsi)
   1e2f6:	48 83 c4 08          	add    $0x8,%rsp
   1e2fa:	31 c0                	xor    %eax,%eax
   1e2fc:	5b                   	pop    %rbx
   1e2fd:	5d                   	pop    %rbp
   1e2fe:	41 5c                	pop    %r12
   1e300:	41 5d                	pop    %r13
   1e302:	c3                   	ret    
   1e303:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e308:	48 8d 46 07          	lea    0x7(%rsi),%rax
   1e30c:	49 89 dd             	mov    %rbx,%r13
   1e30f:	48 31 f0             	xor    %rsi,%rax
   1e312:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1e318:	48 83 f8 01          	cmp    $0x1,%rax
   1e31c:	48 19 f6             	sbb    %rsi,%rsi
   1e31f:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   1e326:	48 81 c6 00 20 00 00 	add    $0x2000,%rsi
   1e32d:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
   1e334:	0f 84 87 00 00 00    	je     1e3c1 <access_mem+0x111>
   1e33a:	4c 8d 25 1f 6e 01 00 	lea    0x16e1f(%rip),%r12        # 35160 <last_good_addr>
   1e341:	4c 89 e0             	mov    %r12,%rax
   1e344:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   1e349:	48 8b 10             	mov    (%rax),%rdx
   1e34c:	48 85 d2             	test   %rdx,%rdx
   1e34f:	74 05                	je     1e356 <access_mem+0xa6>
   1e351:	49 39 d5             	cmp    %rdx,%r13
   1e354:	74 82                	je     1e2d8 <access_mem+0x28>
   1e356:	48 83 c0 08          	add    $0x8,%rax
   1e35a:	48 39 c8             	cmp    %rcx,%rax
   1e35d:	75 ea                	jne    1e349 <access_mem+0x99>
   1e35f:	4c 89 ef             	mov    %r13,%rdi
   1e362:	ff 15 18 6e 01 00    	call   *0x16e18(%rip)        # 35180 <mem_validate_func>
   1e368:	83 f8 ff             	cmp    $0xffffffff,%eax
   1e36b:	74 54                	je     1e3c1 <access_mem+0x111>
   1e36d:	8b 05 d1 6d 01 00    	mov    0x16dd1(%rip),%eax        # 35144 <lga_victim>
   1e373:	b9 04 00 00 00       	mov    $0x4,%ecx
   1e378:	48 63 d0             	movslq %eax,%rdx
   1e37b:	49 83 3c d4 00       	cmpq   $0x0,(%r12,%rdx,8)
   1e380:	74 36                	je     1e3b8 <access_mem+0x108>
   1e382:	83 c0 01             	add    $0x1,%eax
   1e385:	99                   	cltd   
   1e386:	c1 ea 1e             	shr    $0x1e,%edx
   1e389:	01 d0                	add    %edx,%eax
   1e38b:	83 e0 03             	and    $0x3,%eax
   1e38e:	29 d0                	sub    %edx,%eax
   1e390:	83 e9 01             	sub    $0x1,%ecx
   1e393:	75 e3                	jne    1e378 <access_mem+0xc8>
   1e395:	48 63 d0             	movslq %eax,%rdx
   1e398:	83 c0 01             	add    $0x1,%eax
   1e39b:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   1e39f:	99                   	cltd   
   1e3a0:	c1 ea 1e             	shr    $0x1e,%edx
   1e3a3:	01 d0                	add    %edx,%eax
   1e3a5:	83 e0 03             	and    $0x3,%eax
   1e3a8:	29 d0                	sub    %edx,%eax
   1e3aa:	89 05 94 6d 01 00    	mov    %eax,0x16d94(%rip)        # 35144 <lga_victim>
   1e3b0:	e9 23 ff ff ff       	jmp    1e2d8 <access_mem+0x28>
   1e3b5:	0f 1f 00             	nopl   (%rax)
   1e3b8:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   1e3bc:	e9 17 ff ff ff       	jmp    1e2d8 <access_mem+0x28>
   1e3c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1e3c6:	e9 16 ff ff ff       	jmp    1e2e1 <access_mem+0x31>
   1e3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001e3d0 <get_dyn_info_list_addr>:
   1e3d0:	f3 0f 1e fa          	endbr64 
   1e3d4:	53                   	push   %rbx
   1e3d5:	48 89 f3             	mov    %rsi,%rbx
   1e3d8:	e8 73 1c 00 00       	call   20050 <_U_dyn_info_list_addr>
   1e3dd:	48 89 03             	mov    %rax,(%rbx)
   1e3e0:	31 c0                	xor    %eax,%eax
   1e3e2:	5b                   	pop    %rbx
   1e3e3:	c3                   	ret    
   1e3e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e3eb:	00 00 00 
   1e3ee:	66 90                	xchg   %ax,%ax

000000000001e3f0 <_ULx86_64_init_mem_validate>:
   1e3f0:	f3 0f 1e fa          	endbr64 
   1e3f4:	48 8d 05 85 fd ff ff 	lea    -0x27b(%rip),%rax        # 1e180 <msync_validate>
   1e3fb:	48 89 05 7e 6d 01 00 	mov    %rax,0x16d7e(%rip)        # 35180 <mem_validate_func>
   1e402:	c3                   	ret    
   1e403:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e40a:	00 00 00 
   1e40d:	0f 1f 00             	nopl   (%rax)

000000000001e410 <_ULx86_64_local_addr_space_init>:
   1e410:	f3 0f 1e fa          	endbr64 
   1e414:	48 83 ec 08          	sub    $0x8,%rsp
   1e418:	48 8d 3d 81 6d 01 00 	lea    0x16d81(%rip),%rdi        # 351a0 <local_addr_space>
   1e41f:	ba 90 66 00 00       	mov    $0x6690,%edx
   1e424:	31 f6                	xor    %esi,%esi
   1e426:	e8 d5 13 ff ff       	call   f800 <memset>
   1e42b:	31 d2                	xor    %edx,%edx
   1e42d:	31 f6                	xor    %esi,%esi
   1e42f:	c7 05 a7 6d 01 00 01 	movl   $0x1,0x16da7(%rip)        # 351e0 <local_addr_space+0x40>
   1e436:	00 00 00 
   1e439:	48 89 c7             	mov    %rax,%rdi
   1e43c:	48 8d 05 dd 18 00 00 	lea    0x18dd(%rip),%rax        # 1fd20 <_ULx86_64_dwarf_find_proc_info>
   1e443:	48 89 05 56 6d 01 00 	mov    %rax,0x16d56(%rip)        # 351a0 <local_addr_space>
   1e44a:	48 8d 05 0f fd ff ff 	lea    -0x2f1(%rip),%rax        # 1e160 <put_unwind_info>
   1e451:	48 89 05 50 6d 01 00 	mov    %rax,0x16d50(%rip)        # 351a8 <local_addr_space+0x8>
   1e458:	48 8d 05 71 ff ff ff 	lea    -0x8f(%rip),%rax        # 1e3d0 <get_dyn_info_list_addr>
   1e45f:	48 89 05 4a 6d 01 00 	mov    %rax,0x16d4a(%rip)        # 351b0 <local_addr_space+0x10>
   1e466:	48 8d 05 43 fe ff ff 	lea    -0x1bd(%rip),%rax        # 1e2b0 <access_mem>
   1e46d:	48 89 05 44 6d 01 00 	mov    %rax,0x16d44(%rip)        # 351b8 <local_addr_space+0x18>
   1e474:	48 8d 05 c5 fd ff ff 	lea    -0x23b(%rip),%rax        # 1e240 <access_reg>
   1e47b:	48 89 05 3e 6d 01 00 	mov    %rax,0x16d3e(%rip)        # 351c0 <local_addr_space+0x20>
   1e482:	48 8d 05 47 fd ff ff 	lea    -0x2b9(%rip),%rax        # 1e1d0 <access_fpreg>
   1e489:	48 89 05 38 6d 01 00 	mov    %rax,0x16d38(%rip)        # 351c8 <local_addr_space+0x28>
   1e490:	48 8d 05 f9 b3 ff ff 	lea    -0x4c07(%rip),%rax        # 19890 <_ULx86_64_local_resume>
   1e497:	48 89 05 32 6d 01 00 	mov    %rax,0x16d32(%rip)        # 351d0 <local_addr_space+0x30>
   1e49e:	48 8d 05 cb fc ff ff 	lea    -0x335(%rip),%rax        # 1e170 <get_static_proc_name>
   1e4a5:	48 89 05 2c 6d 01 00 	mov    %rax,0x16d2c(%rip)        # 351d8 <local_addr_space+0x38>
   1e4ac:	e8 3f 1b 00 00       	call   1fff0 <_Ux86_64_flush_cache>
   1e4b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1e4b5:	c7 05 85 6c 01 00 00 	movl   $0x0,0x16c85(%rip)        # 35144 <lga_victim>
   1e4bc:	00 00 00 
   1e4bf:	0f 29 05 9a 6c 01 00 	movaps %xmm0,0x16c9a(%rip)        # 35160 <last_good_addr>
   1e4c6:	0f 29 05 a3 6c 01 00 	movaps %xmm0,0x16ca3(%rip)        # 35170 <last_good_addr+0x10>
   1e4cd:	48 83 c4 08          	add    $0x8,%rsp
   1e4d1:	c3                   	ret    
   1e4d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e4d9:	00 00 00 
   1e4dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001e4e0 <_ULx86_64_access_reg>:
   1e4e0:	f3 0f 1e fa          	endbr64 
   1e4e4:	48 83 ec 18          	sub    $0x18,%rsp
   1e4e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e4ef:	00 00 
   1e4f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e4f6:	31 c0                	xor    %eax,%eax
   1e4f8:	83 fe 11             	cmp    $0x11,%esi
   1e4fb:	0f 87 54 3d fe ff    	ja     2255 <_ULx86_64_access_reg.cold>
   1e501:	4c 8d 05 bc 50 00 00 	lea    0x50bc(%rip),%r8        # 235c4 <_ULx86_64_dwarf_to_unw_regnum_map+0x14>
   1e508:	41 89 c9             	mov    %ecx,%r9d
   1e50b:	89 f1                	mov    %esi,%ecx
   1e50d:	49 63 04 88          	movslq (%r8,%rcx,4),%rax
   1e511:	4c 01 c0             	add    %r8,%rax
   1e514:	3e ff e0             	notrack jmp *%rax
   1e517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e51e:	00 00 
   1e520:	45 85 c9             	test   %r9d,%r9d
   1e523:	0f 85 7d 02 00 00    	jne    1e7a6 <_ULx86_64_access_reg+0x2c6>
   1e529:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1e52d:	48 89 02             	mov    %rax,(%rdx)
   1e530:	31 c0                	xor    %eax,%eax
   1e532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e538:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1e53d:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   1e544:	00 00 
   1e546:	0f 85 64 02 00 00    	jne    1e7b0 <_ULx86_64_access_reg+0x2d0>
   1e54c:	48 83 c4 18          	add    $0x18,%rsp
   1e550:	c3                   	ret    
   1e551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e558:	89 f1                	mov    %esi,%ecx
   1e55a:	b8 01 00 00 00       	mov    $0x1,%eax
   1e55f:	d3 e0                	shl    %cl,%eax
   1e561:	8b 4f 38             	mov    0x38(%rdi),%ecx
   1e564:	45 85 c9             	test   %r9d,%r9d
   1e567:	0f 85 fb 01 00 00    	jne    1e768 <_ULx86_64_access_reg+0x288>
   1e56d:	85 c1                	test   %eax,%ecx
   1e56f:	0f 85 0b 02 00 00    	jne    1e780 <_ULx86_64_access_reg+0x2a0>
   1e575:	48 63 c6             	movslq %esi,%rax
   1e578:	48 83 c0 04          	add    $0x4,%rax
   1e57c:	48 c1 e0 04          	shl    $0x4,%rax
   1e580:	48 01 f8             	add    %rdi,%rax
   1e583:	48 8b 30             	mov    (%rax),%rsi
   1e586:	48 8b 40 08          	mov    0x8(%rax),%rax
   1e58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e590:	48 85 f6             	test   %rsi,%rsi
   1e593:	0f 84 03 02 00 00    	je     1e79c <_ULx86_64_access_reg+0x2bc>
   1e599:	a8 02                	test   $0x2,%al
   1e59b:	0f 85 97 01 00 00    	jne    1e738 <_ULx86_64_access_reg+0x258>
   1e5a1:	48 85 c0             	test   %rax,%rax
   1e5a4:	0f 84 a6 01 00 00    	je     1e750 <_ULx86_64_access_reg+0x270>
   1e5aa:	48 89 32             	mov    %rsi,(%rdx)
   1e5ad:	31 c0                	xor    %eax,%eax
   1e5af:	eb 87                	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e5b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e5b8:	48 8b 77 60          	mov    0x60(%rdi),%rsi
   1e5bc:	48 8b 47 68          	mov    0x68(%rdi),%rax
   1e5c0:	45 85 c9             	test   %r9d,%r9d
   1e5c3:	74 cb                	je     1e590 <_ULx86_64_access_reg+0xb0>
   1e5c5:	48 8b 12             	mov    (%rdx),%rdx
   1e5c8:	48 89 14 24          	mov    %rdx,(%rsp)
   1e5cc:	48 85 f6             	test   %rsi,%rsi
   1e5cf:	0f 84 bd 01 00 00    	je     1e792 <_ULx86_64_access_reg+0x2b2>
   1e5d5:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
   1e5d9:	4c 8b 07             	mov    (%rdi),%r8
   1e5dc:	48 89 e2             	mov    %rsp,%rdx
   1e5df:	b9 01 00 00 00       	mov    $0x1,%ecx
   1e5e4:	4c 89 cf             	mov    %r9,%rdi
   1e5e7:	a8 02                	test   $0x2,%al
   1e5e9:	0f 84 39 01 00 00    	je     1e728 <_ULx86_64_access_reg+0x248>
   1e5ef:	41 ff 51 20          	call   *0x20(%r9)
   1e5f3:	e9 40 ff ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e5ff:	00 
   1e600:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
   1e607:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
   1e60e:	eb b0                	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e610:	45 85 c9             	test   %r9d,%r9d
   1e613:	74 07                	je     1e61c <_ULx86_64_access_reg+0x13c>
   1e615:	48 8b 02             	mov    (%rdx),%rax
   1e618:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1e61c:	48 8b b7 40 01 00 00 	mov    0x140(%rdi),%rsi
   1e623:	48 8b 87 48 01 00 00 	mov    0x148(%rdi),%rax
   1e62a:	eb 94                	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e62c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e630:	48 8b b7 30 01 00 00 	mov    0x130(%rdi),%rsi
   1e637:	48 8b 87 38 01 00 00 	mov    0x138(%rdi),%rax
   1e63e:	eb 80                	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e640:	48 8b b7 80 00 00 00 	mov    0x80(%rdi),%rsi
   1e647:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   1e64e:	e9 6d ff ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e658:	48 8b b7 90 00 00 00 	mov    0x90(%rdi),%rsi
   1e65f:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   1e666:	e9 55 ff ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e66b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e670:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   1e674:	48 8b 47 78          	mov    0x78(%rdi),%rax
   1e678:	e9 43 ff ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e67d:	0f 1f 00             	nopl   (%rax)
   1e680:	48 8b b7 c0 00 00 00 	mov    0xc0(%rdi),%rsi
   1e687:	48 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%rax
   1e68e:	e9 2d ff ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e698:	48 8b b7 d0 00 00 00 	mov    0xd0(%rdi),%rsi
   1e69f:	48 8b 87 d8 00 00 00 	mov    0xd8(%rdi),%rax
   1e6a6:	e9 15 ff ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e6ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6b0:	48 8b b7 e0 00 00 00 	mov    0xe0(%rdi),%rsi
   1e6b7:	48 8b 87 e8 00 00 00 	mov    0xe8(%rdi),%rax
   1e6be:	e9 fd fe ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e6c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6c8:	48 8b b7 f0 00 00 00 	mov    0xf0(%rdi),%rsi
   1e6cf:	48 8b 87 f8 00 00 00 	mov    0xf8(%rdi),%rax
   1e6d6:	e9 e5 fe ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e6db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6e0:	48 8b b7 00 01 00 00 	mov    0x100(%rdi),%rsi
   1e6e7:	48 8b 87 08 01 00 00 	mov    0x108(%rdi),%rax
   1e6ee:	e9 cd fe ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e6f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e6f8:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
   1e6ff:	48 8b 87 18 01 00 00 	mov    0x118(%rdi),%rax
   1e706:	e9 b5 fe ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e70b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e710:	48 8b b7 20 01 00 00 	mov    0x120(%rdi),%rsi
   1e717:	48 8b 87 28 01 00 00 	mov    0x128(%rdi),%rax
   1e71e:	e9 9d fe ff ff       	jmp    1e5c0 <_ULx86_64_access_reg+0xe0>
   1e723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e728:	41 ff 51 18          	call   *0x18(%r9)
   1e72c:	e9 07 fe ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e731:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e738:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1e73c:	4c 8b 07             	mov    (%rdi),%r8
   1e73f:	31 c9                	xor    %ecx,%ecx
   1e741:	48 89 c7             	mov    %rax,%rdi
   1e744:	ff 50 20             	call   *0x20(%rax)
   1e747:	e9 ec fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e74c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e750:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1e754:	4c 8b 07             	mov    (%rdi),%r8
   1e757:	31 c9                	xor    %ecx,%ecx
   1e759:	48 89 c7             	mov    %rax,%rdi
   1e75c:	ff 50 18             	call   *0x18(%rax)
   1e75f:	e9 d4 fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e764:	0f 1f 40 00          	nopl   0x0(%rax)
   1e768:	48 8b 12             	mov    (%rdx),%rdx
   1e76b:	09 c8                	or     %ecx,%eax
   1e76d:	48 63 f6             	movslq %esi,%rsi
   1e770:	48 89 54 f7 28       	mov    %rdx,0x28(%rdi,%rsi,8)
   1e775:	89 47 38             	mov    %eax,0x38(%rdi)
   1e778:	31 c0                	xor    %eax,%eax
   1e77a:	e9 b9 fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e77f:	90                   	nop
   1e780:	48 63 f6             	movslq %esi,%rsi
   1e783:	48 8b 44 f7 28       	mov    0x28(%rdi,%rsi,8),%rax
   1e788:	48 89 02             	mov    %rax,(%rdx)
   1e78b:	31 c0                	xor    %eax,%eax
   1e78d:	e9 a6 fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e792:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1e797:	e9 9c fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e79c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1e7a1:	e9 92 fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e7a6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1e7ab:	e9 88 fd ff ff       	jmp    1e538 <_ULx86_64_access_reg+0x58>
   1e7b0:	e8 0b 12 ff ff       	call   f9c0 <__stack_chk_fail>
   1e7b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e7bc:	00 00 00 
   1e7bf:	90                   	nop

000000000001e7c0 <_ULx86_64_access_fpreg>:
   1e7c0:	f3 0f 1e fa          	endbr64 
   1e7c4:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1e7c9:	c3                   	ret    
   1e7ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001e7d0 <_ULx86_64_stash_frame>:
   1e7d0:	f3 0f 1e fa          	endbr64 
   1e7d4:	41 57                	push   %r15
   1e7d6:	41 56                	push   %r14
   1e7d8:	41 55                	push   %r13
   1e7da:	41 54                	push   %r12
   1e7dc:	55                   	push   %rbp
   1e7dd:	48 89 fd             	mov    %rdi,%rbp
   1e7e0:	53                   	push   %rbx
   1e7e1:	48 89 f3             	mov    %rsi,%rbx
   1e7e4:	48 83 ec 18          	sub    $0x18,%rsp
   1e7e8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1e7ef:	00 00 
   1e7f1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e7f6:	31 c0                	xor    %eax,%eax
   1e7f8:	80 7e 19 04          	cmpb   $0x4,0x19(%rsi)
   1e7fc:	0f 84 6e 01 00 00    	je     1e970 <_ULx86_64_stash_frame+0x1a0>
   1e802:	f6 85 b0 01 00 00 07 	testb  $0x7,0x1b0(%rbp)
   1e809:	74 25                	je     1e830 <_ULx86_64_stash_frame+0x60>
   1e80b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1e810:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1e817:	00 00 
   1e819:	0f 85 5d 02 00 00    	jne    1ea7c <_ULx86_64_stash_frame+0x2ac>
   1e81f:	48 83 c4 18          	add    $0x18,%rsp
   1e823:	5b                   	pop    %rbx
   1e824:	5d                   	pop    %rbp
   1e825:	41 5c                	pop    %r12
   1e827:	41 5d                	pop    %r13
   1e829:	41 5e                	pop    %r14
   1e82b:	41 5f                	pop    %r15
   1e82d:	c3                   	ret    
   1e82e:	66 90                	xchg   %ax,%ax
   1e830:	80 7b 19 03          	cmpb   $0x3,0x19(%rbx)
   1e834:	75 d5                	jne    1e80b <_ULx86_64_stash_frame+0x3b>
   1e836:	4c 8b a3 a8 00 00 00 	mov    0xa8(%rbx),%r12
   1e83d:	49 8d 44 24 fa       	lea    -0x6(%r12),%rax
   1e842:	48 83 f8 01          	cmp    $0x1,%rax
   1e846:	77 c3                	ja     1e80b <_ULx86_64_stash_frame+0x3b>
   1e848:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
   1e84f:	4c 89 ef             	mov    %r13,%rdi
   1e852:	e8 99 23 00 00       	call   20bf0 <labs>
   1e857:	48 3d ff ff ff 0f    	cmp    $0xfffffff,%rax
   1e85d:	7f ac                	jg     1e80b <_ULx86_64_stash_frame+0x3b>
   1e85f:	48 8b 13             	mov    (%rbx),%rdx
   1e862:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1e866:	48 c1 e2 04          	shl    $0x4,%rdx
   1e86a:	48 83 e8 08          	sub    $0x8,%rax
   1e86e:	48 39 44 2a 40       	cmp    %rax,0x40(%rdx,%rbp,1)
   1e873:	75 96                	jne    1e80b <_ULx86_64_stash_frame+0x3b>
   1e875:	44 0f b6 73 0e       	movzbl 0xe(%rbx),%r14d
   1e87a:	41 80 fe 01          	cmp    $0x1,%r14b
   1e87e:	0f 86 4a 01 00 00    	jbe    1e9ce <_ULx86_64_stash_frame+0x1fe>
   1e884:	41 80 fe 02          	cmp    $0x2,%r14b
   1e888:	75 81                	jne    1e80b <_ULx86_64_stash_frame+0x3b>
   1e88a:	4c 8b 7b 50          	mov    0x50(%rbx),%r15
   1e88e:	4c 89 ff             	mov    %r15,%rdi
   1e891:	e8 5a 23 00 00       	call   20bf0 <labs>
   1e896:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   1e89c:	0f 8f 69 ff ff ff    	jg     1e80b <_ULx86_64_stash_frame+0x3b>
   1e8a2:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   1e8a6:	0f 84 5f ff ff ff    	je     1e80b <_ULx86_64_stash_frame+0x3b>
   1e8ac:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   1e8b0:	3c 01                	cmp    $0x1,%al
   1e8b2:	0f 86 67 01 00 00    	jbe    1ea1f <_ULx86_64_stash_frame+0x24f>
   1e8b8:	3c 02                	cmp    $0x2,%al
   1e8ba:	0f 85 4b ff ff ff    	jne    1e80b <_ULx86_64_stash_frame+0x3b>
   1e8c0:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   1e8c4:	4c 89 ff             	mov    %r15,%rdi
   1e8c7:	e8 24 23 00 00       	call   20bf0 <labs>
   1e8cc:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   1e8d2:	0f 8f 33 ff ff ff    	jg     1e80b <_ULx86_64_stash_frame+0x3b>
   1e8d8:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   1e8dc:	0f 84 29 ff ff ff    	je     1e80b <_ULx86_64_stash_frame+0x3b>
   1e8e2:	31 c0                	xor    %eax,%eax
   1e8e4:	49 83 fc 07          	cmp    $0x7,%r12
   1e8e8:	4c 89 ea             	mov    %r13,%rdx
   1e8eb:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   1e8f0:	0f 94 c0             	sete   %al
   1e8f3:	48 c1 e2 05          	shl    $0x5,%rdx
   1e8f7:	48 c1 e0 04          	shl    $0x4,%rax
   1e8fb:	48 c1 e1 05          	shl    $0x5,%rcx
   1e8ff:	48 21 ca             	and    %rcx,%rdx
   1e902:	48 83 c8 06          	or     $0x6,%rax
   1e906:	48 09 d0             	or     %rdx,%rax
   1e909:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1e910:	ff ff ff 
   1e913:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1e91a:	48 09 d0             	or     %rdx,%rax
   1e91d:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1e924:	41 80 fe 02          	cmp    $0x2,%r14b
   1e928:	75 26                	jne    1e950 <_ULx86_64_stash_frame+0x180>
   1e92a:	8b 43 50             	mov    0x50(%rbx),%eax
   1e92d:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1e932:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
   1e939:	8b 85 b4 01 00 00    	mov    0x1b4(%rbp),%eax
   1e93f:	25 03 00 fe ff       	and    $0xfffe0003,%eax
   1e944:	09 d0                	or     %edx,%eax
   1e946:	89 85 b4 01 00 00    	mov    %eax,0x1b4(%rbp)
   1e94c:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   1e950:	0f b7 85 b6 01 00 00 	movzwl 0x1b6(%rbp),%eax
   1e957:	45 01 ff             	add    %r15d,%r15d
   1e95a:	83 e0 01             	and    $0x1,%eax
   1e95d:	44 09 f8             	or     %r15d,%eax
   1e960:	66 89 85 b6 01 00 00 	mov    %ax,0x1b6(%rbp)
   1e967:	e9 9f fe ff ff       	jmp    1e80b <_ULx86_64_stash_frame+0x3b>
   1e96c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e970:	80 7e 0e 04          	cmpb   $0x4,0xe(%rsi)
   1e974:	0f 85 91 fe ff ff    	jne    1e80b <_ULx86_64_stash_frame+0x3b>
   1e97a:	48 8b 56 50          	mov    0x50(%rsi),%rdx
   1e97e:	48 8b b6 a8 00 00 00 	mov    0xa8(%rsi),%rsi
   1e985:	48 89 e1             	mov    %rsp,%rcx
   1e988:	e8 03 01 00 00       	call   1ea90 <_ULx86_64_dwarf_stack_aligned>
   1e98d:	85 c0                	test   %eax,%eax
   1e98f:	0f 84 6d fe ff ff    	je     1e802 <_ULx86_64_stash_frame+0x32>
   1e995:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   1e99c:	00 00 00 
   1e99f:	48 8b 04 24          	mov    (%rsp),%rax
   1e9a3:	48 c1 e0 05          	shl    $0x5,%rax
   1e9a7:	48 21 d0             	and    %rdx,%rax
   1e9aa:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1e9b1:	ff ff ff 
   1e9b4:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1e9bb:	48 83 c8 05          	or     $0x5,%rax
   1e9bf:	48 09 d0             	or     %rdx,%rax
   1e9c2:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1e9c9:	e9 34 fe ff ff       	jmp    1e802 <_ULx86_64_stash_frame+0x32>
   1e9ce:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   1e9d2:	3c 01                	cmp    $0x1,%al
   1e9d4:	0f 87 de fe ff ff    	ja     1e8b8 <_ULx86_64_stash_frame+0xe8>
   1e9da:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   1e9e1:	00 00 00 
   1e9e4:	31 c0                	xor    %eax,%eax
   1e9e6:	49 83 fc 07          	cmp    $0x7,%r12
   1e9ea:	0f 94 c0             	sete   %al
   1e9ed:	49 c1 e5 05          	shl    $0x5,%r13
   1e9f1:	48 c1 e0 04          	shl    $0x4,%rax
   1e9f5:	49 21 d5             	and    %rdx,%r13
   1e9f8:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   1e9ff:	ff ff ff 
   1ea02:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1ea09:	48 83 c8 06          	or     $0x6,%rax
   1ea0d:	4c 09 e8             	or     %r13,%rax
   1ea10:	48 09 d0             	or     %rdx,%rax
   1ea13:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1ea1a:	e9 ec fd ff ff       	jmp    1e80b <_ULx86_64_stash_frame+0x3b>
   1ea1f:	31 c0                	xor    %eax,%eax
   1ea21:	49 83 fc 07          	cmp    $0x7,%r12
   1ea25:	4c 89 ea             	mov    %r13,%rdx
   1ea28:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   1ea2d:	0f 94 c0             	sete   %al
   1ea30:	48 c1 e1 05          	shl    $0x5,%rcx
   1ea34:	48 c1 e0 04          	shl    $0x4,%rax
   1ea38:	48 c1 e2 05          	shl    $0x5,%rdx
   1ea3c:	48 21 ca             	and    %rcx,%rdx
   1ea3f:	48 83 c8 06          	or     $0x6,%rax
   1ea43:	b9 ff 7f 00 00       	mov    $0x7fff,%ecx
   1ea48:	48 09 d0             	or     %rdx,%rax
   1ea4b:	4c 89 fa             	mov    %r15,%rdx
   1ea4e:	48 c1 e1 22          	shl    $0x22,%rcx
   1ea52:	48 c1 e2 22          	shl    $0x22,%rdx
   1ea56:	48 21 ca             	and    %rcx,%rdx
   1ea59:	48 09 d0             	or     %rdx,%rax
   1ea5c:	48 ba 08 00 00 00 00 	movabs $0xfffe000000000008,%rdx
   1ea63:	00 fe ff 
   1ea66:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   1ea6d:	48 09 d0             	or     %rdx,%rax
   1ea70:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   1ea77:	e9 8f fd ff ff       	jmp    1e80b <_ULx86_64_stash_frame+0x3b>
   1ea7c:	e8 3f 0f ff ff       	call   f9c0 <__stack_chk_fail>
   1ea81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ea88:	00 00 00 
   1ea8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ea90 <_ULx86_64_dwarf_stack_aligned>:
   1ea90:	f3 0f 1e fa          	endbr64 
   1ea94:	41 54                	push   %r12
   1ea96:	49 89 f4             	mov    %rsi,%r12
   1ea99:	55                   	push   %rbp
   1ea9a:	48 89 cd             	mov    %rcx,%rbp
   1ea9d:	53                   	push   %rbx
   1ea9e:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1eaa2:	48 89 d3             	mov    %rdx,%rbx
   1eaa5:	e8 06 f1 ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1eaaa:	31 c9                	xor    %ecx,%ecx
   1eaac:	31 ff                	xor    %edi,%edi
   1eaae:	66 90                	xchg   %ax,%ax
   1eab0:	0f b6 13             	movzbl (%rbx),%edx
   1eab3:	49 89 d8             	mov    %rbx,%r8
   1eab6:	48 83 c3 01          	add    $0x1,%rbx
   1eaba:	48 89 d0             	mov    %rdx,%rax
   1eabd:	83 e0 7f             	and    $0x7f,%eax
   1eac0:	48 d3 e0             	shl    %cl,%rax
   1eac3:	48 83 c1 07          	add    $0x7,%rcx
   1eac7:	48 09 c7             	or     %rax,%rdi
   1eaca:	84 d2                	test   %dl,%dl
   1eacc:	78 e2                	js     1eab0 <_ULx86_64_dwarf_stack_aligned+0x20>
   1eace:	31 c0                	xor    %eax,%eax
   1ead0:	48 83 ff 02          	cmp    $0x2,%rdi
   1ead4:	75 05                	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1ead6:	80 3b 76             	cmpb   $0x76,(%rbx)
   1ead9:	74 05                	je     1eae0 <_ULx86_64_dwarf_stack_aligned+0x50>
   1eadb:	5b                   	pop    %rbx
   1eadc:	5d                   	pop    %rbp
   1eadd:	41 5c                	pop    %r12
   1eadf:	c3                   	ret    
   1eae0:	49 83 c0 02          	add    $0x2,%r8
   1eae4:	31 c9                	xor    %ecx,%ecx
   1eae6:	45 31 c9             	xor    %r9d,%r9d
   1eae9:	41 0f b6 10          	movzbl (%r8),%edx
   1eaed:	49 83 c0 01          	add    $0x1,%r8
   1eaf1:	48 89 d0             	mov    %rdx,%rax
   1eaf4:	83 e0 7f             	and    $0x7f,%eax
   1eaf7:	48 d3 e0             	shl    %cl,%rax
   1eafa:	48 83 c1 07          	add    $0x7,%rcx
   1eafe:	49 09 c1             	or     %rax,%r9
   1eb01:	84 d2                	test   %dl,%dl
   1eb03:	78 e4                	js     1eae9 <_ULx86_64_dwarf_stack_aligned+0x59>
   1eb05:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1eb09:	77 07                	ja     1eb12 <_ULx86_64_dwarf_stack_aligned+0x82>
   1eb0b:	31 c0                	xor    %eax,%eax
   1eb0d:	83 e2 40             	and    $0x40,%edx
   1eb10:	75 c9                	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb12:	31 c0                	xor    %eax,%eax
   1eb14:	4d 85 c9             	test   %r9,%r9
   1eb17:	75 c2                	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb19:	31 c9                	xor    %ecx,%ecx
   1eb1b:	31 f6                	xor    %esi,%esi
   1eb1d:	0f 1f 00             	nopl   (%rax)
   1eb20:	41 0f b6 14 24       	movzbl (%r12),%edx
   1eb25:	4c 89 e7             	mov    %r12,%rdi
   1eb28:	49 83 c4 01          	add    $0x1,%r12
   1eb2c:	48 89 d0             	mov    %rdx,%rax
   1eb2f:	83 e0 7f             	and    $0x7f,%eax
   1eb32:	48 d3 e0             	shl    %cl,%rax
   1eb35:	48 83 c1 07          	add    $0x7,%rcx
   1eb39:	48 09 c6             	or     %rax,%rsi
   1eb3c:	84 d2                	test   %dl,%dl
   1eb3e:	78 e0                	js     1eb20 <_ULx86_64_dwarf_stack_aligned+0x90>
   1eb40:	31 c0                	xor    %eax,%eax
   1eb42:	48 83 fe 03          	cmp    $0x3,%rsi
   1eb46:	75 93                	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb48:	41 80 3c 24 76       	cmpb   $0x76,(%r12)
   1eb4d:	75 8c                	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb4f:	48 83 c7 02          	add    $0x2,%rdi
   1eb53:	31 c9                	xor    %ecx,%ecx
   1eb55:	0f b6 07             	movzbl (%rdi),%eax
   1eb58:	48 83 c7 01          	add    $0x1,%rdi
   1eb5c:	48 89 c2             	mov    %rax,%rdx
   1eb5f:	83 e2 7f             	and    $0x7f,%edx
   1eb62:	48 d3 e2             	shl    %cl,%rdx
   1eb65:	48 83 c1 07          	add    $0x7,%rcx
   1eb69:	49 09 d1             	or     %rdx,%r9
   1eb6c:	84 c0                	test   %al,%al
   1eb6e:	78 e5                	js     1eb55 <_ULx86_64_dwarf_stack_aligned+0xc5>
   1eb70:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1eb74:	77 0e                	ja     1eb84 <_ULx86_64_dwarf_stack_aligned+0xf4>
   1eb76:	a8 40                	test   $0x40,%al
   1eb78:	74 0a                	je     1eb84 <_ULx86_64_dwarf_stack_aligned+0xf4>
   1eb7a:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   1eb7e:	48 d3 e0             	shl    %cl,%rax
   1eb81:	49 09 c1             	or     %rax,%r9
   1eb84:	31 c0                	xor    %eax,%eax
   1eb86:	80 3f 06             	cmpb   $0x6,(%rdi)
   1eb89:	0f 85 4c ff ff ff    	jne    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb8f:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
   1eb93:	b8 01 00 00 00       	mov    $0x1,%eax
   1eb98:	e9 3e ff ff ff       	jmp    1eadb <_ULx86_64_dwarf_stack_aligned+0x4b>
   1eb9d:	0f 1f 00             	nopl   (%rax)

000000000001eba0 <_ULx86_64_dwarf_eval_expr>:
   1eba0:	f3 0f 1e fa          	endbr64 
   1eba4:	41 57                	push   %r15
   1eba6:	49 89 ff             	mov    %rdi,%r15
   1eba9:	41 56                	push   %r14
   1ebab:	4d 89 c6             	mov    %r8,%r14
   1ebae:	41 55                	push   %r13
   1ebb0:	41 54                	push   %r12
   1ebb2:	49 89 f4             	mov    %rsi,%r12
   1ebb5:	55                   	push   %rbp
   1ebb6:	53                   	push   %rbx
   1ebb7:	48 89 d3             	mov    %rdx,%rbx
   1ebba:	48 81 ec 58 02 00 00 	sub    $0x258,%rsp
   1ebc1:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1ebc6:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1ebca:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1ebcf:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   1ebd4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ebdb:	00 00 
   1ebdd:	48 89 84 24 48 02 00 	mov    %rax,0x248(%rsp)
   1ebe4:	00 
   1ebe5:	31 c0                	xor    %eax,%eax
   1ebe7:	e8 c4 ef ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1ebec:	49 8b 0c 24          	mov    (%r12),%rcx
   1ebf0:	49 8b 47 10          	mov    0x10(%r15),%rax
   1ebf4:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
   1ebfb:	4c 8d 1c 19          	lea    (%rcx,%rbx,1),%r11
   1ebff:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1ec04:	4c 39 d9             	cmp    %r11,%rcx
   1ec07:	0f 83 19 01 00 00    	jae    1ed26 <_ULx86_64_dwarf_eval_expr+0x186>
   1ec0d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1ec14:	00 00 
   1ec16:	31 ed                	xor    %ebp,%ebp
   1ec18:	bb 01 00 00 00       	mov    $0x1,%ebx
   1ec1d:	4c 8d 05 7c 4c 00 00 	lea    0x4c7c(%rip),%r8        # 238a0 <operands>
   1ec24:	4c 8d 35 49 4c 00 00 	lea    0x4c49(%rip),%r14        # 23874 <_ULx86_64_dwarf_to_unw_regnum_map+0x2c4>
   1ec2b:	4c 8d 2d 2a 4c 00 00 	lea    0x4c2a(%rip),%r13        # 2385c <_ULx86_64_dwarf_to_unw_regnum_map+0x2ac>
   1ec32:	4c 8d 3d d3 49 00 00 	lea    0x49d3(%rip),%r15        # 2360c <_ULx86_64_dwarf_to_unw_regnum_map+0x5c>
   1ec39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ec40:	0f b6 39             	movzbl (%rcx),%edi
   1ec43:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   1ec47:	49 89 34 24          	mov    %rsi,(%r12)
   1ec4b:	40 0f b6 d7          	movzbl %dil,%edx
   1ec4f:	89 f8                	mov    %edi,%eax
   1ec51:	41 0f b6 14 10       	movzbl (%r8,%rdx,1),%edx
   1ec56:	41 89 d1             	mov    %edx,%r9d
   1ec59:	41 c0 e9 06          	shr    $0x6,%r9b
   1ec5d:	0f 85 d5 00 00 00    	jne    1ed38 <_ULx86_64_dwarf_eval_expr+0x198>
   1ec63:	83 e8 03             	sub    $0x3,%eax
   1ec66:	3c 93                	cmp    $0x93,%al
   1ec68:	77 4b                	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ec6a:	0f b6 c0             	movzbl %al,%eax
   1ec6d:	49 63 04 87          	movslq (%r15,%rax,4),%rax
   1ec71:	4c 01 f8             	add    %r15,%rax
   1ec74:	3e ff e0             	notrack jmp *%rax
   1ec77:	31 f6                	xor    %esi,%esi
   1ec79:	48 83 fd 10          	cmp    $0x10,%rbp
   1ec7d:	77 0b                	ja     1ec8a <_ULx86_64_dwarf_eval_expr+0xea>
   1ec7f:	48 8d 05 2a 49 00 00 	lea    0x492a(%rip),%rax        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1ec86:	0f b6 34 28          	movzbl (%rax,%rbp,1),%esi
   1ec8a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1ec8f:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1ec94:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ec99:	e8 62 ef ff ff       	call   1dc00 <_ULx86_64_get_reg>
   1ec9e:	85 c0                	test   %eax,%eax
   1eca0:	78 18                	js     1ecba <_ULx86_64_dwarf_eval_expr+0x11a>
   1eca2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1eca7:	48 03 54 24 38       	add    0x38(%rsp),%rdx
   1ecac:	83 fb 3f             	cmp    $0x3f,%ebx
   1ecaf:	0f 86 88 02 00 00    	jbe    1ef3d <_ULx86_64_dwarf_eval_expr+0x39d>
   1ecb5:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1ecba:	48 8b bc 24 48 02 00 	mov    0x248(%rsp),%rdi
   1ecc1:	00 
   1ecc2:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1ecc9:	00 00 
   1eccb:	0f 85 4b 0a 00 00    	jne    1f71c <_ULx86_64_dwarf_eval_expr+0xb7c>
   1ecd1:	48 81 c4 58 02 00 00 	add    $0x258,%rsp
   1ecd8:	5b                   	pop    %rbx
   1ecd9:	5d                   	pop    %rbp
   1ecda:	41 5c                	pop    %r12
   1ecdc:	41 5d                	pop    %r13
   1ecde:	41 5e                	pop    %r14
   1ece0:	41 5f                	pop    %r15
   1ece2:	c3                   	ret    
   1ece3:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1ece6:	83 f8 3f             	cmp    $0x3f,%eax
   1ece9:	77 ca                	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1eceb:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1ecf0:	48 85 d2             	test   %rdx,%rdx
   1ecf3:	79 03                	jns    1ecf8 <_ULx86_64_dwarf_eval_expr+0x158>
   1ecf5:	48 f7 da             	neg    %rdx
   1ecf8:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1ecfd:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1ed02:	49 8b 0c 24          	mov    (%r12),%rcx
   1ed06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ed0d:	00 00 00 
   1ed10:	4c 39 d9             	cmp    %r11,%rcx
   1ed13:	0f 82 27 ff ff ff    	jb     1ec40 <_ULx86_64_dwarf_eval_expr+0xa0>
   1ed19:	83 eb 01             	sub    $0x1,%ebx
   1ed1c:	83 fb 3f             	cmp    $0x3f,%ebx
   1ed1f:	77 94                	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ed21:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1ed26:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1ed2b:	48 89 07             	mov    %rax,(%rdi)
   1ed2e:	31 c0                	xor    %eax,%eax
   1ed30:	eb 88                	jmp    1ecba <_ULx86_64_dwarf_eval_expr+0x11a>
   1ed32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ed38:	41 89 d2             	mov    %edx,%r10d
   1ed3b:	41 c0 ea 03          	shr    $0x3,%r10b
   1ed3f:	41 83 e2 07          	and    $0x7,%r10d
   1ed43:	41 80 fa 07          	cmp    $0x7,%r10b
   1ed47:	0f 84 b6 00 00 00    	je     1ee03 <_ULx86_64_dwarf_eval_expr+0x263>
   1ed4d:	41 80 fa 05          	cmp    $0x5,%r10b
   1ed51:	0f 87 5e ff ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ed57:	45 0f b6 d2          	movzbl %r10b,%r10d
   1ed5b:	4f 63 54 95 00       	movslq 0x0(%r13,%r10,4),%r10
   1ed60:	4d 01 ea             	add    %r13,%r10
   1ed63:	3e 41 ff e2          	notrack jmp *%r10
   1ed67:	31 c9                	xor    %ecx,%ecx
   1ed69:	31 ed                	xor    %ebp,%ebp
   1ed6b:	44 0f b6 16          	movzbl (%rsi),%r10d
   1ed6f:	48 83 c6 01          	add    $0x1,%rsi
   1ed73:	49 89 34 24          	mov    %rsi,(%r12)
   1ed77:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   1ed7c:	41 83 e2 7f          	and    $0x7f,%r10d
   1ed80:	49 d3 e2             	shl    %cl,%r10
   1ed83:	48 83 c1 07          	add    $0x7,%rcx
   1ed87:	4c 09 d5             	or     %r10,%rbp
   1ed8a:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1ed8f:	78 da                	js     1ed6b <_ULx86_64_dwarf_eval_expr+0x1cb>
   1ed91:	41 83 e1 02          	and    $0x2,%r9d
   1ed95:	0f 84 c8 fe ff ff    	je     1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1ed9b:	83 e2 07             	and    $0x7,%edx
   1ed9e:	80 fa 07             	cmp    $0x7,%dl
   1eda1:	0f 84 a5 00 00 00    	je     1ee4c <_ULx86_64_dwarf_eval_expr+0x2ac>
   1eda7:	80 fa 05             	cmp    $0x5,%dl
   1edaa:	0f 87 05 ff ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1edb0:	0f b6 d2             	movzbl %dl,%edx
   1edb3:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
   1edb7:	4c 01 f2             	add    %r14,%rdx
   1edba:	3e ff e2             	notrack jmp *%rdx
   1edbd:	31 c9                	xor    %ecx,%ecx
   1edbf:	31 ed                	xor    %ebp,%ebp
   1edc1:	44 0f b6 16          	movzbl (%rsi),%r10d
   1edc5:	48 83 c6 01          	add    $0x1,%rsi
   1edc9:	49 89 34 24          	mov    %rsi,(%r12)
   1edcd:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   1edd2:	41 83 e2 7f          	and    $0x7f,%r10d
   1edd6:	49 d3 e2             	shl    %cl,%r10
   1edd9:	48 83 c1 07          	add    $0x7,%rcx
   1eddd:	4c 09 d5             	or     %r10,%rbp
   1ede0:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   1ede5:	78 da                	js     1edc1 <_ULx86_64_dwarf_eval_expr+0x221>
   1ede7:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1edeb:	77 a4                	ja     1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1eded:	f6 44 24 18 40       	testb  $0x40,0x18(%rsp)
   1edf2:	74 9d                	je     1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1edf4:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   1edfb:	48 d3 e6             	shl    %cl,%rsi
   1edfe:	48 09 f5             	or     %rsi,%rbp
   1ee01:	eb 8e                	jmp    1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1ee03:	48 83 c1 09          	add    $0x9,%rcx
   1ee07:	41 83 e1 02          	and    $0x2,%r9d
   1ee0b:	48 8b 2e             	mov    (%rsi),%rbp
   1ee0e:	49 89 0c 24          	mov    %rcx,(%r12)
   1ee12:	0f 84 4b fe ff ff    	je     1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1ee18:	eb 81                	jmp    1ed9b <_ULx86_64_dwarf_eval_expr+0x1fb>
   1ee1a:	f7 c5 00 00 00 80    	test   $0x80000000,%ebp
   1ee20:	74 0e                	je     1ee30 <_ULx86_64_dwarf_eval_expr+0x290>
   1ee22:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   1ee29:	ff ff ff 
   1ee2c:	48 09 c5             	or     %rax,%rbp
   1ee2f:	90                   	nop
   1ee30:	83 fb 3f             	cmp    $0x3f,%ebx
   1ee33:	0f 87 7c fe ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ee39:	89 d8                	mov    %ebx,%eax
   1ee3b:	49 8b 0c 24          	mov    (%r12),%rcx
   1ee3f:	83 c3 01             	add    $0x1,%ebx
   1ee42:	48 89 6c c4 40       	mov    %rbp,0x40(%rsp,%rax,8)
   1ee47:	e9 c4 fe ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1ee4c:	49 8b 14 24          	mov    (%r12),%rdx
   1ee50:	48 8b 32             	mov    (%rdx),%rsi
   1ee53:	48 83 c2 08          	add    $0x8,%rdx
   1ee57:	49 89 14 24          	mov    %rdx,(%r12)
   1ee5b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1ee60:	e9 fe fd ff ff       	jmp    1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1ee65:	48 83 c1 02          	add    $0x2,%rcx
   1ee69:	0f b6 2e             	movzbl (%rsi),%ebp
   1ee6c:	49 89 0c 24          	mov    %rcx,(%r12)
   1ee70:	e9 1c ff ff ff       	jmp    1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1ee75:	48 83 c1 03          	add    $0x3,%rcx
   1ee79:	0f b7 2e             	movzwl (%rsi),%ebp
   1ee7c:	49 89 0c 24          	mov    %rcx,(%r12)
   1ee80:	e9 0c ff ff ff       	jmp    1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1ee85:	48 83 c1 05          	add    $0x5,%rcx
   1ee89:	8b 2e                	mov    (%rsi),%ebp
   1ee8b:	49 89 0c 24          	mov    %rcx,(%r12)
   1ee8f:	e9 fd fe ff ff       	jmp    1ed91 <_ULx86_64_dwarf_eval_expr+0x1f1>
   1ee94:	0f 1f 40 00          	nopl   0x0(%rax)
   1ee98:	83 ef 30             	sub    $0x30,%edi
   1ee9b:	48 63 ff             	movslq %edi,%rdi
   1ee9e:	83 fb 3f             	cmp    $0x3f,%ebx
   1eea1:	0f 87 0e fe ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1eea7:	89 d8                	mov    %ebx,%eax
   1eea9:	49 8b 0c 24          	mov    (%r12),%rcx
   1eead:	83 c3 01             	add    $0x1,%ebx
   1eeb0:	48 89 7c c4 40       	mov    %rdi,0x40(%rsp,%rax,8)
   1eeb5:	e9 56 fe ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1eeba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1eec0:	83 ef 50             	sub    $0x50,%edi
   1eec3:	31 c0                	xor    %eax,%eax
   1eec5:	83 ff 10             	cmp    $0x10,%edi
   1eec8:	7f 0e                	jg     1eed8 <_ULx86_64_dwarf_eval_expr+0x338>
   1eeca:	48 63 ff             	movslq %edi,%rdi
   1eecd:	48 8d 05 dc 46 00 00 	lea    0x46dc(%rip),%rax        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1eed4:	0f b6 04 38          	movzbl (%rax,%rdi,1),%eax
   1eed8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1eedd:	48 89 07             	mov    %rax,(%rdi)
   1eee0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1eee5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1eeeb:	31 c0                	xor    %eax,%eax
   1eeed:	e9 c8 fd ff ff       	jmp    1ecba <_ULx86_64_dwarf_eval_expr+0x11a>
   1eef2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1eef8:	83 ef 70             	sub    $0x70,%edi
   1eefb:	31 f6                	xor    %esi,%esi
   1eefd:	83 ff 10             	cmp    $0x10,%edi
   1ef00:	7f 0e                	jg     1ef10 <_ULx86_64_dwarf_eval_expr+0x370>
   1ef02:	48 63 ff             	movslq %edi,%rdi
   1ef05:	48 8d 05 a4 46 00 00 	lea    0x46a4(%rip),%rax        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1ef0c:	0f b6 34 38          	movzbl (%rax,%rdi,1),%esi
   1ef10:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1ef15:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1ef1a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   1ef1f:	e8 dc ec ff ff       	call   1dc00 <_ULx86_64_get_reg>
   1ef24:	85 c0                	test   %eax,%eax
   1ef26:	0f 88 8e fd ff ff    	js     1ecba <_ULx86_64_dwarf_eval_expr+0x11a>
   1ef2c:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1ef31:	48 01 ea             	add    %rbp,%rdx
   1ef34:	83 fb 3f             	cmp    $0x3f,%ebx
   1ef37:	0f 87 78 fd ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ef3d:	89 d8                	mov    %ebx,%eax
   1ef3f:	49 8b 0c 24          	mov    (%r12),%rcx
   1ef43:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   1ef48:	83 c3 01             	add    $0x1,%ebx
   1ef4b:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1ef50:	4c 8d 05 49 49 00 00 	lea    0x4949(%rip),%r8        # 238a0 <operands>
   1ef57:	e9 b4 fd ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1ef5c:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1ef5f:	83 f8 3f             	cmp    $0x3f,%eax
   1ef62:	0f 87 4d fd ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ef68:	89 c6                	mov    %eax,%esi
   1ef6a:	48 8b 44 f4 40       	mov    0x40(%rsp,%rsi,8),%rax
   1ef6f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1ef74:	48 83 fd 04          	cmp    $0x4,%rbp
   1ef78:	0f 87 5a 06 00 00    	ja     1f5d8 <_ULx86_64_dwarf_eval_expr+0xa38>
   1ef7e:	48 83 fd 02          	cmp    $0x2,%rbp
   1ef82:	0f 87 74 07 00 00    	ja     1f6fc <_ULx86_64_dwarf_eval_expr+0xb5c>
   1ef88:	48 83 fd 01          	cmp    $0x1,%rbp
   1ef8c:	0f 84 59 07 00 00    	je     1f6eb <_ULx86_64_dwarf_eval_expr+0xb4b>
   1ef92:	48 83 fd 02          	cmp    $0x2,%rbp
   1ef96:	0f 85 19 fd ff ff    	jne    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1ef9c:	0f b7 10             	movzwl (%rax),%edx
   1ef9f:	48 83 c0 02          	add    $0x2,%rax
   1efa3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1efa8:	48 89 54 f4 40       	mov    %rdx,0x40(%rsp,%rsi,8)
   1efad:	49 8b 0c 24          	mov    (%r12),%rcx
   1efb1:	e9 5a fd ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1efb6:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1efb9:	83 f8 3f             	cmp    $0x3f,%eax
   1efbc:	0f 87 f3 fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1efc2:	89 c2                	mov    %eax,%edx
   1efc4:	8d 43 fe             	lea    -0x2(%rbx),%eax
   1efc7:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   1efcc:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1efd1:	83 f8 3f             	cmp    $0x3f,%eax
   1efd4:	0f 87 db fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1efda:	89 c1                	mov    %eax,%ecx
   1efdc:	8d 43 fd             	lea    -0x3(%rbx),%eax
   1efdf:	48 8b 7c cc 40       	mov    0x40(%rsp,%rcx,8),%rdi
   1efe4:	83 f8 3f             	cmp    $0x3f,%eax
   1efe7:	0f 87 c8 fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1efed:	4c 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%r9
   1eff2:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   1eff7:	4c 89 4c cc 40       	mov    %r9,0x40(%rsp,%rcx,8)
   1effc:	49 8b 0c 24          	mov    (%r12),%rcx
   1f000:	48 89 7c d4 40       	mov    %rdi,0x40(%rsp,%rdx,8)
   1f005:	e9 06 fd ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f00a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f00d:	83 f8 3f             	cmp    $0x3f,%eax
   1f010:	0f 87 9f fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f016:	89 c2                	mov    %eax,%edx
   1f018:	83 eb 02             	sub    $0x2,%ebx
   1f01b:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1f020:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f025:	83 fb 3f             	cmp    $0x3f,%ebx
   1f028:	0f 87 87 fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f02e:	48 21 54 dc 40       	and    %rdx,0x40(%rsp,%rbx,8)
   1f033:	49 8b 0c 24          	mov    (%r12),%rcx
   1f037:	89 c3                	mov    %eax,%ebx
   1f039:	e9 d2 fc ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f03e:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f041:	83 f8 3f             	cmp    $0x3f,%eax
   1f044:	0f 87 6b fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f04a:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1f04f:	83 fb 40             	cmp    $0x40,%ebx
   1f052:	0f 84 5d fc ff ff    	je     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f058:	89 d8                	mov    %ebx,%eax
   1f05a:	49 8b 0c 24          	mov    (%r12),%rcx
   1f05e:	83 c3 01             	add    $0x1,%ebx
   1f061:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   1f066:	e9 a5 fc ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f06b:	83 eb 01             	sub    $0x1,%ebx
   1f06e:	83 fb 3f             	cmp    $0x3f,%ebx
   1f071:	0f 86 8b fc ff ff    	jbe    1ed02 <_ULx86_64_dwarf_eval_expr+0x162>
   1f077:	e9 39 fc ff ff       	jmp    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f07c:	0f 1f 40 00          	nopl   0x0(%rax)
   1f080:	8d 43 fe             	lea    -0x2(%rbx),%eax
   1f083:	83 f8 3f             	cmp    $0x3f,%eax
   1f086:	0f 87 29 fc ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f08c:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1f091:	83 fb 3f             	cmp    $0x3f,%ebx
   1f094:	76 c2                	jbe    1f058 <_ULx86_64_dwarf_eval_expr+0x4b8>
   1f096:	e9 1a fc ff ff       	jmp    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f09b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f0a0:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f0a3:	29 e8                	sub    %ebp,%eax
   1f0a5:	83 f8 3f             	cmp    $0x3f,%eax
   1f0a8:	76 e2                	jbe    1f08c <_ULx86_64_dwarf_eval_expr+0x4ec>
   1f0aa:	e9 06 fc ff ff       	jmp    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f0af:	90                   	nop
   1f0b0:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f0b3:	83 f8 3f             	cmp    $0x3f,%eax
   1f0b6:	0f 87 f9 fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f0bc:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   1f0c1:	8d 53 fe             	lea    -0x2(%rbx),%edx
   1f0c4:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f0c9:	83 fa 3f             	cmp    $0x3f,%edx
   1f0cc:	0f 87 e3 fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f0d2:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   1f0d7:	48 89 4c d4 40       	mov    %rcx,0x40(%rsp,%rdx,8)
   1f0dc:	49 8b 0c 24          	mov    (%r12),%rcx
   1f0e0:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   1f0e5:	e9 26 fc ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f0ea:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f0ed:	83 f8 3f             	cmp    $0x3f,%eax
   1f0f0:	0f 87 bf fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f0f6:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1f0fb:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f100:	48 8b 0a             	mov    (%rdx),%rcx
   1f103:	48 83 c2 08          	add    $0x8,%rdx
   1f107:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f10c:	48 89 4c c4 40       	mov    %rcx,0x40(%rsp,%rax,8)
   1f111:	49 8b 0c 24          	mov    (%r12),%rcx
   1f115:	e9 f6 fb ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f11a:	31 c0                	xor    %eax,%eax
   1f11c:	48 83 fd 10          	cmp    $0x10,%rbp
   1f120:	0f 87 b2 fd ff ff    	ja     1eed8 <_ULx86_64_dwarf_eval_expr+0x338>
   1f126:	48 8d 05 83 44 00 00 	lea    0x4483(%rip),%rax        # 235b0 <_ULx86_64_dwarf_to_unw_regnum_map>
   1f12d:	0f b6 04 28          	movzbl (%rax,%rbp,1),%eax
   1f131:	e9 a2 fd ff ff       	jmp    1eed8 <_ULx86_64_dwarf_eval_expr+0x338>
   1f136:	8d 73 ff             	lea    -0x1(%rbx),%esi
   1f139:	83 fe 3f             	cmp    $0x3f,%esi
   1f13c:	0f 87 73 fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f142:	89 f0                	mov    %esi,%eax
   1f144:	83 eb 02             	sub    $0x2,%ebx
   1f147:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   1f14c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f151:	83 fb 3f             	cmp    $0x3f,%ebx
   1f154:	0f 87 5b fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f15a:	48 85 c9             	test   %rcx,%rcx
   1f15d:	74 12                	je     1f171 <_ULx86_64_dwarf_eval_expr+0x5d1>
   1f15f:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1f164:	48 99                	cqto   
   1f166:	48 f7 f9             	idiv   %rcx
   1f169:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f16e:	48 89 c1             	mov    %rax,%rcx
   1f171:	48 89 4c dc 40       	mov    %rcx,0x40(%rsp,%rbx,8)
   1f176:	49 8b 0c 24          	mov    (%r12),%rcx
   1f17a:	89 f3                	mov    %esi,%ebx
   1f17c:	e9 8f fb ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f181:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f184:	83 fa 3f             	cmp    $0x3f,%edx
   1f187:	0f 87 28 fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f18d:	89 d0                	mov    %edx,%eax
   1f18f:	83 eb 02             	sub    $0x2,%ebx
   1f192:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f197:	83 fb 3f             	cmp    $0x3f,%ebx
   1f19a:	0f 87 15 fb ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f1a0:	48 8b 7c dc 40       	mov    0x40(%rsp,%rbx,8),%rdi
   1f1a5:	49 8b 0c 24          	mov    (%r12),%rcx
   1f1a9:	48 29 c7             	sub    %rax,%rdi
   1f1ac:	48 89 7c dc 40       	mov    %rdi,0x40(%rsp,%rbx,8)
   1f1b1:	89 d3                	mov    %edx,%ebx
   1f1b3:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   1f1b8:	e9 53 fb ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f1bd:	8d 73 ff             	lea    -0x1(%rbx),%esi
   1f1c0:	83 fe 3f             	cmp    $0x3f,%esi
   1f1c3:	0f 87 ec fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f1c9:	89 f0                	mov    %esi,%eax
   1f1cb:	83 eb 02             	sub    $0x2,%ebx
   1f1ce:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1f1d3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f1d8:	83 fb 3f             	cmp    $0x3f,%ebx
   1f1db:	0f 87 d4 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f1e1:	48 85 d2             	test   %rdx,%rdx
   1f1e4:	74 12                	je     1f1f8 <_ULx86_64_dwarf_eval_expr+0x658>
   1f1e6:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   1f1eb:	48 89 d7             	mov    %rdx,%rdi
   1f1ee:	31 d2                	xor    %edx,%edx
   1f1f0:	48 f7 f7             	div    %rdi
   1f1f3:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f1f8:	48 89 54 dc 40       	mov    %rdx,0x40(%rsp,%rbx,8)
   1f1fd:	49 8b 0c 24          	mov    (%r12),%rcx
   1f201:	89 f3                	mov    %esi,%ebx
   1f203:	e9 08 fb ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f208:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f20b:	83 fa 3f             	cmp    $0x3f,%edx
   1f20e:	0f 87 a1 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f214:	89 d0                	mov    %edx,%eax
   1f216:	83 eb 02             	sub    $0x2,%ebx
   1f219:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f21e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f223:	83 fb 3f             	cmp    $0x3f,%ebx
   1f226:	0f 87 89 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f22c:	48 85 c0             	test   %rax,%rax
   1f22f:	74 0b                	je     1f23c <_ULx86_64_dwarf_eval_expr+0x69c>
   1f231:	48 0f af 44 dc 40    	imul   0x40(%rsp,%rbx,8),%rax
   1f237:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f23c:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f241:	49 8b 0c 24          	mov    (%r12),%rcx
   1f245:	89 d3                	mov    %edx,%ebx
   1f247:	e9 c4 fa ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f24c:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f24f:	83 f8 3f             	cmp    $0x3f,%eax
   1f252:	0f 87 5d fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f258:	48 f7 5c c4 40       	negq   0x40(%rsp,%rax,8)
   1f25d:	49 8b 0c 24          	mov    (%r12),%rcx
   1f261:	e9 aa fa ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f266:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f269:	83 f8 3f             	cmp    $0x3f,%eax
   1f26c:	0f 87 43 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f272:	48 f7 54 c4 40       	notq   0x40(%rsp,%rax,8)
   1f277:	49 8b 0c 24          	mov    (%r12),%rcx
   1f27b:	e9 90 fa ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f280:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f283:	83 f8 3f             	cmp    $0x3f,%eax
   1f286:	0f 87 29 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f28c:	89 c2                	mov    %eax,%edx
   1f28e:	83 eb 02             	sub    $0x2,%ebx
   1f291:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1f296:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f29b:	83 fb 3f             	cmp    $0x3f,%ebx
   1f29e:	0f 87 11 fa ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f2a4:	48 09 54 dc 40       	or     %rdx,0x40(%rsp,%rbx,8)
   1f2a9:	49 8b 0c 24          	mov    (%r12),%rcx
   1f2ad:	89 c3                	mov    %eax,%ebx
   1f2af:	e9 5c fa ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f2b4:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f2b7:	83 f8 3f             	cmp    $0x3f,%eax
   1f2ba:	0f 87 f5 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f2c0:	89 c2                	mov    %eax,%edx
   1f2c2:	83 eb 02             	sub    $0x2,%ebx
   1f2c5:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1f2ca:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f2cf:	83 fb 3f             	cmp    $0x3f,%ebx
   1f2d2:	0f 87 dd f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f2d8:	48 01 54 dc 40       	add    %rdx,0x40(%rsp,%rbx,8)
   1f2dd:	49 8b 0c 24          	mov    (%r12),%rcx
   1f2e1:	89 c3                	mov    %eax,%ebx
   1f2e3:	e9 28 fa ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f2e8:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f2eb:	83 f8 3f             	cmp    $0x3f,%eax
   1f2ee:	0f 87 c1 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f2f4:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   1f2f9:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f2fe:	48 01 ea             	add    %rbp,%rdx
   1f301:	e9 f7 f9 ff ff       	jmp    1ecfd <_ULx86_64_dwarf_eval_expr+0x15d>
   1f306:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f309:	83 f8 3f             	cmp    $0x3f,%eax
   1f30c:	0f 87 a3 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f312:	89 c2                	mov    %eax,%edx
   1f314:	83 eb 02             	sub    $0x2,%ebx
   1f317:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1f31c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f321:	83 fb 3f             	cmp    $0x3f,%ebx
   1f324:	0f 87 8b f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f32a:	48 d3 64 dc 40       	shlq   %cl,0x40(%rsp,%rbx,8)
   1f32f:	49 8b 0c 24          	mov    (%r12),%rcx
   1f333:	89 c3                	mov    %eax,%ebx
   1f335:	e9 d6 f9 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f33a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f33d:	83 f8 3f             	cmp    $0x3f,%eax
   1f340:	0f 87 6f f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f346:	89 c2                	mov    %eax,%edx
   1f348:	83 eb 02             	sub    $0x2,%ebx
   1f34b:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1f350:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f355:	83 fb 3f             	cmp    $0x3f,%ebx
   1f358:	0f 87 57 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f35e:	48 d3 6c dc 40       	shrq   %cl,0x40(%rsp,%rbx,8)
   1f363:	49 8b 0c 24          	mov    (%r12),%rcx
   1f367:	89 c3                	mov    %eax,%ebx
   1f369:	e9 a2 f9 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f36e:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f371:	83 f8 3f             	cmp    $0x3f,%eax
   1f374:	0f 87 3b f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f37a:	89 c2                	mov    %eax,%edx
   1f37c:	83 eb 02             	sub    $0x2,%ebx
   1f37f:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   1f384:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1f389:	83 fb 3f             	cmp    $0x3f,%ebx
   1f38c:	0f 87 23 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f392:	48 d3 7c dc 40       	sarq   %cl,0x40(%rsp,%rbx,8)
   1f397:	49 8b 0c 24          	mov    (%r12),%rcx
   1f39b:	89 c3                	mov    %eax,%ebx
   1f39d:	e9 6e f9 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f3a2:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1f3a5:	83 f8 3f             	cmp    $0x3f,%eax
   1f3a8:	0f 87 07 f9 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f3ae:	89 c2                	mov    %eax,%edx
   1f3b0:	83 eb 02             	sub    $0x2,%ebx
   1f3b3:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   1f3b8:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   1f3bd:	83 fb 3f             	cmp    $0x3f,%ebx
   1f3c0:	0f 87 ef f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f3c6:	48 31 54 dc 40       	xor    %rdx,0x40(%rsp,%rbx,8)
   1f3cb:	49 8b 0c 24          	mov    (%r12),%rcx
   1f3cf:	89 c3                	mov    %eax,%ebx
   1f3d1:	e9 3a f9 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f3d6:	83 eb 01             	sub    $0x1,%ebx
   1f3d9:	83 fb 3f             	cmp    $0x3f,%ebx
   1f3dc:	0f 87 d3 f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f3e2:	89 d8                	mov    %ebx,%eax
   1f3e4:	49 8b 0c 24          	mov    (%r12),%rcx
   1f3e8:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f3ed:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f3f2:	48 85 c0             	test   %rax,%rax
   1f3f5:	0f 84 15 f9 ff ff    	je     1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f3fb:	48 0f bf c5          	movswq %bp,%rax
   1f3ff:	48 01 c1             	add    %rax,%rcx
   1f402:	49 89 0c 24          	mov    %rcx,(%r12)
   1f406:	e9 05 f9 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f40b:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f40e:	83 fa 3f             	cmp    $0x3f,%edx
   1f411:	0f 87 9e f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f417:	89 d0                	mov    %edx,%eax
   1f419:	83 eb 02             	sub    $0x2,%ebx
   1f41c:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f421:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f426:	83 fb 3f             	cmp    $0x3f,%ebx
   1f429:	0f 87 86 f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f42f:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   1f434:	49 8b 0c 24          	mov    (%r12),%rcx
   1f438:	0f 94 c0             	sete   %al
   1f43b:	0f b6 c0             	movzbl %al,%eax
   1f43e:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f443:	89 d3                	mov    %edx,%ebx
   1f445:	e9 c6 f8 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f44a:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f44d:	83 fa 3f             	cmp    $0x3f,%edx
   1f450:	0f 87 5f f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f456:	89 d0                	mov    %edx,%eax
   1f458:	83 eb 02             	sub    $0x2,%ebx
   1f45b:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f460:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f465:	83 fb 3f             	cmp    $0x3f,%ebx
   1f468:	0f 87 47 f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f46e:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1f473:	49 8b 0c 24          	mov    (%r12),%rcx
   1f477:	0f 9e c0             	setle  %al
   1f47a:	0f b6 c0             	movzbl %al,%eax
   1f47d:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f482:	89 d3                	mov    %edx,%ebx
   1f484:	e9 87 f8 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f489:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f48c:	83 fa 3f             	cmp    $0x3f,%edx
   1f48f:	0f 87 20 f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f495:	89 d0                	mov    %edx,%eax
   1f497:	83 eb 02             	sub    $0x2,%ebx
   1f49a:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f49f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f4a4:	83 fb 3f             	cmp    $0x3f,%ebx
   1f4a7:	0f 87 08 f8 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f4ad:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1f4b2:	49 8b 0c 24          	mov    (%r12),%rcx
   1f4b6:	0f 9c c0             	setl   %al
   1f4b9:	0f b6 c0             	movzbl %al,%eax
   1f4bc:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f4c1:	89 d3                	mov    %edx,%ebx
   1f4c3:	e9 48 f8 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f4c8:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f4cb:	83 fa 3f             	cmp    $0x3f,%edx
   1f4ce:	0f 87 e1 f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f4d4:	89 d0                	mov    %edx,%eax
   1f4d6:	83 eb 02             	sub    $0x2,%ebx
   1f4d9:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f4de:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f4e3:	83 fb 3f             	cmp    $0x3f,%ebx
   1f4e6:	0f 87 c9 f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f4ec:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1f4f1:	49 8b 0c 24          	mov    (%r12),%rcx
   1f4f5:	0f 9d c0             	setge  %al
   1f4f8:	0f b6 c0             	movzbl %al,%eax
   1f4fb:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f500:	89 d3                	mov    %edx,%ebx
   1f502:	e9 09 f8 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f507:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f50a:	83 fa 3f             	cmp    $0x3f,%edx
   1f50d:	0f 87 a2 f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f513:	89 d0                	mov    %edx,%eax
   1f515:	83 eb 02             	sub    $0x2,%ebx
   1f518:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f51d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f522:	83 fb 3f             	cmp    $0x3f,%ebx
   1f525:	0f 87 8a f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f52b:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   1f530:	49 8b 0c 24          	mov    (%r12),%rcx
   1f534:	0f 9f c0             	setg   %al
   1f537:	0f b6 c0             	movzbl %al,%eax
   1f53a:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   1f53f:	89 d3                	mov    %edx,%ebx
   1f541:	e9 ca f7 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f546:	8d 53 ff             	lea    -0x1(%rbx),%edx
   1f549:	83 fa 3f             	cmp    $0x3f,%edx
   1f54c:	0f 87 63 f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f552:	89 d0                	mov    %edx,%eax
   1f554:	83 eb 02             	sub    $0x2,%ebx
   1f557:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   1f55c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f561:	83 fb 3f             	cmp    $0x3f,%ebx
   1f564:	0f 87 4b f7 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f56a:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   1f56f:	0f 95 c0             	setne  %al
   1f572:	0f b6 c0             	movzbl %al,%eax
   1f575:	e9 c2 fc ff ff       	jmp    1f23c <_ULx86_64_dwarf_eval_expr+0x69c>
   1f57a:	48 0f bf cd          	movswq %bp,%rcx
   1f57e:	49 03 0c 24          	add    (%r12),%rcx
   1f582:	49 89 0c 24          	mov    %rcx,(%r12)
   1f586:	e9 85 f7 ff ff       	jmp    1ed10 <_ULx86_64_dwarf_eval_expr+0x170>
   1f58b:	48 89 e8             	mov    %rbp,%rax
   1f58e:	48 0d 00 ff ff ff    	or     $0xffffffffffffff00,%rax
   1f594:	40 f6 c5 80          	test   $0x80,%bpl
   1f598:	48 0f 45 e8          	cmovne %rax,%rbp
   1f59c:	83 fb 3f             	cmp    $0x3f,%ebx
   1f59f:	0f 86 94 f8 ff ff    	jbe    1ee39 <_ULx86_64_dwarf_eval_expr+0x299>
   1f5a5:	e9 0b f7 ff ff       	jmp    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f5aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f5b0:	48 89 e8             	mov    %rbp,%rax
   1f5b3:	48 0d 00 00 ff ff    	or     $0xffffffffffff0000,%rax
   1f5b9:	f7 c5 00 80 00 00    	test   $0x8000,%ebp
   1f5bf:	48 0f 45 e8          	cmovne %rax,%rbp
   1f5c3:	83 fb 3f             	cmp    $0x3f,%ebx
   1f5c6:	0f 86 6d f8 ff ff    	jbe    1ee39 <_ULx86_64_dwarf_eval_expr+0x299>
   1f5cc:	e9 e4 f6 ff ff       	jmp    1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f5d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f5d8:	48 8d 55 fb          	lea    -0x5(%rbp),%rdx
   1f5dc:	48 83 fa 03          	cmp    $0x3,%rdx
   1f5e0:	0f 87 cf f6 ff ff    	ja     1ecb5 <_ULx86_64_dwarf_eval_expr+0x115>
   1f5e6:	48 8b 10             	mov    (%rax),%rdx
   1f5e9:	48 83 c0 08          	add    $0x8,%rax
   1f5ed:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f5f2:	48 83 fd 08          	cmp    $0x8,%rbp
   1f5f6:	0f 84 ac f9 ff ff    	je     1efa8 <_ULx86_64_dwarf_eval_expr+0x408>
   1f5fc:	8d 0c ed 00 00 00 00 	lea    0x0(,%rbp,8),%ecx
   1f603:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1f60a:	48 d3 e0             	shl    %cl,%rax
   1f60d:	48 21 c2             	and    %rax,%rdx
   1f610:	e9 93 f9 ff ff       	jmp    1efa8 <_ULx86_64_dwarf_eval_expr+0x408>
   1f615:	49 8b 14 24          	mov    (%r12),%rdx
   1f619:	31 c9                	xor    %ecx,%ecx
   1f61b:	45 31 d2             	xor    %r10d,%r10d
   1f61e:	66 90                	xchg   %ax,%ax
   1f620:	44 0f b6 0a          	movzbl (%rdx),%r9d
   1f624:	48 83 c2 01          	add    $0x1,%rdx
   1f628:	49 89 14 24          	mov    %rdx,(%r12)
   1f62c:	4c 89 ce             	mov    %r9,%rsi
   1f62f:	83 e6 7f             	and    $0x7f,%esi
   1f632:	48 d3 e6             	shl    %cl,%rsi
   1f635:	48 83 c1 07          	add    $0x7,%rcx
   1f639:	49 09 f2             	or     %rsi,%r10
   1f63c:	45 84 c9             	test   %r9b,%r9b
   1f63f:	78 df                	js     1f620 <_ULx86_64_dwarf_eval_expr+0xa80>
   1f641:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1f646:	e9 18 f6 ff ff       	jmp    1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f64b:	49 8b 14 24          	mov    (%r12),%rdx
   1f64f:	31 c9                	xor    %ecx,%ecx
   1f651:	45 31 d2             	xor    %r10d,%r10d
   1f654:	0f 1f 40 00          	nopl   0x0(%rax)
   1f658:	44 0f b6 0a          	movzbl (%rdx),%r9d
   1f65c:	48 83 c2 01          	add    $0x1,%rdx
   1f660:	49 89 14 24          	mov    %rdx,(%r12)
   1f664:	4c 89 ce             	mov    %r9,%rsi
   1f667:	83 e6 7f             	and    $0x7f,%esi
   1f66a:	48 d3 e6             	shl    %cl,%rsi
   1f66d:	48 83 c1 07          	add    $0x7,%rcx
   1f671:	49 09 f2             	or     %rsi,%r10
   1f674:	45 84 c9             	test   %r9b,%r9b
   1f677:	78 df                	js     1f658 <_ULx86_64_dwarf_eval_expr+0xab8>
   1f679:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1f67e:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1f682:	0f 87 db f5 ff ff    	ja     1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f688:	41 83 e1 40          	and    $0x40,%r9d
   1f68c:	0f 84 d1 f5 ff ff    	je     1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f692:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1f699:	48 d3 e2             	shl    %cl,%rdx
   1f69c:	49 09 d2             	or     %rdx,%r10
   1f69f:	eb a0                	jmp    1f641 <_ULx86_64_dwarf_eval_expr+0xaa1>
   1f6a1:	49 8b 14 24          	mov    (%r12),%rdx
   1f6a5:	0f b7 32             	movzwl (%rdx),%esi
   1f6a8:	48 83 c2 02          	add    $0x2,%rdx
   1f6ac:	49 89 14 24          	mov    %rdx,(%r12)
   1f6b0:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1f6b5:	e9 a9 f5 ff ff       	jmp    1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f6ba:	49 8b 14 24          	mov    (%r12),%rdx
   1f6be:	0f b6 32             	movzbl (%rdx),%esi
   1f6c1:	48 83 c2 01          	add    $0x1,%rdx
   1f6c5:	49 89 14 24          	mov    %rdx,(%r12)
   1f6c9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1f6ce:	e9 90 f5 ff ff       	jmp    1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f6d3:	49 8b 14 24          	mov    (%r12),%rdx
   1f6d7:	8b 32                	mov    (%rdx),%esi
   1f6d9:	48 83 c2 04          	add    $0x4,%rdx
   1f6dd:	49 89 14 24          	mov    %rdx,(%r12)
   1f6e1:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1f6e6:	e9 78 f5 ff ff       	jmp    1ec63 <_ULx86_64_dwarf_eval_expr+0xc3>
   1f6eb:	0f b6 10             	movzbl (%rax),%edx
   1f6ee:	48 83 c0 01          	add    $0x1,%rax
   1f6f2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f6f7:	e9 ac f8 ff ff       	jmp    1efa8 <_ULx86_64_dwarf_eval_expr+0x408>
   1f6fc:	8b 10                	mov    (%rax),%edx
   1f6fe:	48 83 c0 04          	add    $0x4,%rax
   1f702:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1f707:	89 d0                	mov    %edx,%eax
   1f709:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
   1f70f:	48 83 fd 03          	cmp    $0x3,%rbp
   1f713:	48 0f 45 d0          	cmovne %rax,%rdx
   1f717:	e9 8c f8 ff ff       	jmp    1efa8 <_ULx86_64_dwarf_eval_expr+0x408>
   1f71c:	e8 9f 02 ff ff       	call   f9c0 <__stack_chk_fail>
   1f721:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f728:	00 00 00 
   1f72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f730 <_ULx86_64_dwarf_callback>:
   1f730:	f3 0f 1e fa          	endbr64 
   1f734:	41 57                	push   %r15
   1f736:	41 56                	push   %r14
   1f738:	41 55                	push   %r13
   1f73a:	41 54                	push   %r12
   1f73c:	55                   	push   %rbp
   1f73d:	53                   	push   %rbx
   1f73e:	48 83 ec 68          	sub    $0x68,%rsp
   1f742:	4c 8b 2a             	mov    (%rdx),%r13
   1f745:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f74c:	00 00 
   1f74e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1f753:	31 c0                	xor    %eax,%eax
   1f755:	48 83 fe 19          	cmp    $0x19,%rsi
   1f759:	0f 86 97 03 00 00    	jbe    1faf6 <_ULx86_64_dwarf_callback+0x3c6>
   1f75f:	0f b7 4f 18          	movzwl 0x18(%rdi),%ecx
   1f763:	49 89 d6             	mov    %rdx,%r14
   1f766:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1f76a:	48 89 fd             	mov    %rdi,%rbp
   1f76d:	4c 8b 27             	mov    (%rdi),%r12
   1f770:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1f774:	48 85 c9             	test   %rcx,%rcx
   1f777:	0f 84 8b 02 00 00    	je     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f77d:	31 db                	xor    %ebx,%ebx
   1f77f:	45 31 ff             	xor    %r15d,%r15d
   1f782:	31 f6                	xor    %esi,%esi
   1f784:	31 ff                	xor    %edi,%edi
   1f786:	eb 29                	jmp    1f7b1 <_ULx86_64_dwarf_callback+0x81>
   1f788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f78f:	00 
   1f790:	81 f9 50 e5 74 64    	cmp    $0x6474e550,%ecx
   1f796:	0f 84 94 02 00 00    	je     1fa30 <_ULx86_64_dwarf_callback+0x300>
   1f79c:	83 f9 02             	cmp    $0x2,%ecx
   1f79f:	48 0f 44 f0          	cmove  %rax,%rsi
   1f7a3:	48 83 ea 01          	sub    $0x1,%rdx
   1f7a7:	48 83 c0 38          	add    $0x38,%rax
   1f7ab:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1f7af:	74 3a                	je     1f7eb <_ULx86_64_dwarf_callback+0xbb>
   1f7b1:	8b 08                	mov    (%rax),%ecx
   1f7b3:	83 f9 01             	cmp    $0x1,%ecx
   1f7b6:	75 d8                	jne    1f790 <_ULx86_64_dwarf_callback+0x60>
   1f7b8:	48 8b 48 10          	mov    0x10(%rax),%rcx
   1f7bc:	4c 01 e1             	add    %r12,%rcx
   1f7bf:	49 39 cd             	cmp    %rcx,%r13
   1f7c2:	72 0e                	jb     1f7d2 <_ULx86_64_dwarf_callback+0xa2>
   1f7c4:	4c 8b 40 28          	mov    0x28(%rax),%r8
   1f7c8:	49 01 c8             	add    %rcx,%r8
   1f7cb:	4d 39 e8             	cmp    %r13,%r8
   1f7ce:	4c 0f 47 f8          	cmova  %rax,%r15
   1f7d2:	48 03 48 20          	add    0x20(%rax),%rcx
   1f7d6:	48 39 cb             	cmp    %rcx,%rbx
   1f7d9:	48 0f 42 d9          	cmovb  %rcx,%rbx
   1f7dd:	48 83 ea 01          	sub    $0x1,%rdx
   1f7e1:	48 83 c0 38          	add    $0x38,%rax
   1f7e5:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1f7e9:	75 c6                	jne    1f7b1 <_ULx86_64_dwarf_callback+0x81>
   1f7eb:	4d 85 ff             	test   %r15,%r15
   1f7ee:	0f 84 14 02 00 00    	je     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f7f4:	48 85 ff             	test   %rdi,%rdi
   1f7f7:	0f 84 55 03 00 00    	je     1fb52 <_ULx86_64_dwarf_callback+0x422>
   1f7fd:	4d 89 e3             	mov    %r12,%r11
   1f800:	4c 03 5f 10          	add    0x10(%rdi),%r11
   1f804:	0f 84 fe 01 00 00    	je     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f80a:	41 8b 46 10          	mov    0x10(%r14),%eax
   1f80e:	4d 8b 56 08          	mov    0x8(%r14),%r10
   1f812:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1f816:	48 85 f6             	test   %rsi,%rsi
   1f819:	0f 84 31 02 00 00    	je     1fa50 <_ULx86_64_dwarf_callback+0x320>
   1f81f:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1f823:	4c 01 e0             	add    %r12,%rax
   1f826:	48 8b 10             	mov    (%rax),%rdx
   1f829:	48 85 d2             	test   %rdx,%rdx
   1f82c:	75 1b                	jne    1f849 <_ULx86_64_dwarf_callback+0x119>
   1f82e:	e9 0d 02 00 00       	jmp    1fa40 <_ULx86_64_dwarf_callback+0x310>
   1f833:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f838:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1f83c:	48 83 c0 10          	add    $0x10,%rax
   1f840:	48 85 d2             	test   %rdx,%rdx
   1f843:	0f 84 f7 01 00 00    	je     1fa40 <_ULx86_64_dwarf_callback+0x310>
   1f849:	48 83 fa 03          	cmp    $0x3,%rdx
   1f84d:	75 e9                	jne    1f838 <_ULx86_64_dwarf_callback+0x108>
   1f84f:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f853:	49 89 46 38          	mov    %rax,0x38(%r14)
   1f857:	49 89 42 20          	mov    %rax,0x20(%r10)
   1f85b:	41 80 3b 01          	cmpb   $0x1,(%r11)
   1f85f:	0f 85 a3 01 00 00    	jne    1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f865:	48 8b 3d 14 ca 00 00 	mov    0xca14(%rip),%rdi        # 2c280 <_ULx86_64_local_addr_space>
   1f86c:	4c 89 1c 24          	mov    %r11,(%rsp)
   1f870:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1f875:	e8 36 e3 ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1f87a:	4c 8b 1c 24          	mov    (%rsp),%r11
   1f87e:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1f883:	48 83 ec 08          	sub    $0x8,%rsp
   1f887:	48 89 c6             	mov    %rax,%rsi
   1f88a:	48 8b 3d ef c9 00 00 	mov    0xc9ef(%rip),%rdi        # 2c280 <_ULx86_64_local_addr_space>
   1f891:	49 8d 43 04          	lea    0x4(%r11),%rax
   1f895:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1f89a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1f89f:	41 0f b6 4b 01       	movzbl 0x1(%r11),%ecx
   1f8a4:	6a 00                	push   $0x0
   1f8a6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1f8ab:	4d 89 d0             	mov    %r10,%r8
   1f8ae:	4c 8d 4c 24 50       	lea    0x50(%rsp),%r9
   1f8b3:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1f8b8:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1f8bd:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1f8c2:	e8 f9 c1 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   1f8c7:	41 5b                	pop    %r11
   1f8c9:	5a                   	pop    %rdx
   1f8ca:	85 c0                	test   %eax,%eax
   1f8cc:	0f 88 38 01 00 00    	js     1fa0a <_ULx86_64_dwarf_callback+0x2da>
   1f8d2:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1f8d7:	48 83 ec 08          	sub    $0x8,%rsp
   1f8db:	48 8b 3d 9e c9 00 00 	mov    0xc99e(%rip),%rdi        # 2c280 <_ULx86_64_local_addr_space>
   1f8e2:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   1f8e7:	6a 00                	push   $0x0
   1f8e9:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1f8ee:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1f8f3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1f8f8:	4c 8d 4c 24 58       	lea    0x58(%rsp),%r9
   1f8fd:	4d 89 d0             	mov    %r10,%r8
   1f900:	e8 bb c1 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   1f905:	41 59                	pop    %r9
   1f907:	41 5a                	pop    %r10
   1f909:	85 c0                	test   %eax,%eax
   1f90b:	0f 88 f9 00 00 00    	js     1fa0a <_ULx86_64_dwarf_callback+0x2da>
   1f911:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   1f916:	41 80 7b 03 3b       	cmpb   $0x3b,0x3(%r11)
   1f91b:	0f 84 3e 01 00 00    	je     1fa5f <_ULx86_64_dwarf_callback+0x32f>
   1f921:	41 80 7b 02 ff       	cmpb   $0xff,0x2(%r11)
   1f926:	41 0f b6 43 01       	movzbl 0x1(%r11),%eax
   1f92b:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1f930:	0f 84 73 01 00 00    	je     1faa9 <_ULx86_64_dwarf_callback+0x379>
   1f936:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1f93b:	3c ff                	cmp    $0xff,%al
   1f93d:	0f 84 0f 02 00 00    	je     1fb52 <_ULx86_64_dwarf_callback+0x422>
   1f943:	4c 8b 25 36 c9 00 00 	mov    0xc936(%rip),%r12        # 2c280 <_ULx86_64_local_addr_space>
   1f94a:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   1f94f:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1f954:	4c 89 e7             	mov    %r12,%rdi
   1f957:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   1f95c:	4c 89 04 24          	mov    %r8,(%rsp)
   1f960:	e8 4b e2 ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1f965:	4c 8b 04 24          	mov    (%rsp),%r8
   1f969:	4d 85 ff             	test   %r15,%r15
   1f96c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1f971:	48 89 c5             	mov    %rax,%rbp
   1f974:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   1f979:	0f 84 89 00 00 00    	je     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f97f:	45 31 ff             	xor    %r15d,%r15d
   1f982:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1f987:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1f98c:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1f991:	4c 89 fb             	mov    %r15,%rbx
   1f994:	4d 89 c5             	mov    %r8,%r13
   1f997:	49 89 d7             	mov    %rdx,%r15
   1f99a:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1f99f:	4d 89 d6             	mov    %r10,%r14
   1f9a2:	4c 89 04 24          	mov    %r8,(%rsp)
   1f9a6:	eb 52                	jmp    1f9fa <_ULx86_64_dwarf_callback+0x2ca>
   1f9a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f9af:	00 
   1f9b0:	6a 00                	push   $0x0
   1f9b2:	4d 89 e8             	mov    %r13,%r8
   1f9b5:	4c 89 e7             	mov    %r12,%rdi
   1f9b8:	45 31 c9             	xor    %r9d,%r9d
   1f9bb:	6a 00                	push   $0x0
   1f9bd:	4c 89 f1             	mov    %r14,%rcx
   1f9c0:	4c 89 fa             	mov    %r15,%rdx
   1f9c3:	48 89 ee             	mov    %rbp,%rsi
   1f9c6:	e8 45 07 00 00       	call   20110 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1f9cb:	5f                   	pop    %rdi
   1f9cc:	41 58                	pop    %r8
   1f9ce:	85 c0                	test   %eax,%eax
   1f9d0:	78 36                	js     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f9d2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1f9d7:	49 3b 06             	cmp    (%r14),%rax
   1f9da:	72 0a                	jb     1f9e6 <_ULx86_64_dwarf_callback+0x2b6>
   1f9dc:	49 3b 46 08          	cmp    0x8(%r14),%rax
   1f9e0:	0f 82 1a 01 00 00    	jb     1fb00 <_ULx86_64_dwarf_callback+0x3d0>
   1f9e6:	48 83 c3 01          	add    $0x1,%rbx
   1f9ea:	48 39 5c 24 20       	cmp    %rbx,0x20(%rsp)
   1f9ef:	76 17                	jbe    1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1f9f1:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1f9f6:	48 89 04 24          	mov    %rax,(%rsp)
   1f9fa:	48 8b 3c 24          	mov    (%rsp),%rdi
   1f9fe:	48 39 7c 24 10       	cmp    %rdi,0x10(%rsp)
   1fa03:	77 ab                	ja     1f9b0 <_ULx86_64_dwarf_callback+0x280>
   1fa05:	0f 1f 00             	nopl   (%rax)
   1fa08:	31 c0                	xor    %eax,%eax
   1fa0a:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1fa0f:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1fa16:	00 00 
   1fa18:	0f 85 39 01 00 00    	jne    1fb57 <_ULx86_64_dwarf_callback+0x427>
   1fa1e:	48 83 c4 68          	add    $0x68,%rsp
   1fa22:	5b                   	pop    %rbx
   1fa23:	5d                   	pop    %rbp
   1fa24:	41 5c                	pop    %r12
   1fa26:	41 5d                	pop    %r13
   1fa28:	41 5e                	pop    %r14
   1fa2a:	41 5f                	pop    %r15
   1fa2c:	c3                   	ret    
   1fa2d:	0f 1f 00             	nopl   (%rax)
   1fa30:	48 89 c7             	mov    %rax,%rdi
   1fa33:	e9 6b fd ff ff       	jmp    1f7a3 <_ULx86_64_dwarf_callback+0x73>
   1fa38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fa3f:	00 
   1fa40:	49 8b 46 38          	mov    0x38(%r14),%rax
   1fa44:	e9 0e fe ff ff       	jmp    1f857 <_ULx86_64_dwarf_callback+0x127>
   1fa49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fa50:	49 c7 46 38 00 00 00 	movq   $0x0,0x38(%r14)
   1fa57:	00 
   1fa58:	31 c0                	xor    %eax,%eax
   1fa5a:	e9 f8 fd ff ff       	jmp    1f857 <_ULx86_64_dwarf_callback+0x127>
   1fa5f:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1fa63:	4d 03 67 10          	add    0x10(%r15),%r12
   1fa67:	41 c7 46 40 02 00 00 	movl   $0x2,0x40(%r14)
   1fa6e:	00 
   1fa6f:	4d 89 66 28          	mov    %r12,0x28(%r14)
   1fa73:	4d 03 67 28          	add    0x28(%r15),%r12
   1fa77:	49 89 46 48          	mov    %rax,0x48(%r14)
   1fa7b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1fa80:	4d 89 66 30          	mov    %r12,0x30(%r14)
   1fa84:	49 89 46 60          	mov    %rax,0x60(%r14)
   1fa88:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1fa8f:	ff ff 1f 
   1fa92:	48 23 44 24 48       	and    0x48(%rsp),%rax
   1fa97:	49 89 46 58          	mov    %rax,0x58(%r14)
   1fa9b:	b8 01 00 00 00       	mov    $0x1,%eax
   1faa0:	4d 89 5e 50          	mov    %r11,0x50(%r14)
   1faa4:	e9 61 ff ff ff       	jmp    1fa0a <_ULx86_64_dwarf_callback+0x2da>
   1faa9:	48 c7 44 24 48 ff ff 	movq   $0xffffffffffffffff,0x48(%rsp)
   1fab0:	ff ff 
   1fab2:	3c ff                	cmp    $0xff,%al
   1fab4:	0f 84 98 00 00 00    	je     1fb52 <_ULx86_64_dwarf_callback+0x422>
   1faba:	4c 8b 25 bf c7 00 00 	mov    0xc7bf(%rip),%r12        # 2c280 <_ULx86_64_local_addr_space>
   1fac1:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1fac6:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1facb:	4c 89 e7             	mov    %r12,%rdi
   1face:	4c 89 04 24          	mov    %r8,(%rsp)
   1fad2:	e8 d9 e0 ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1fad7:	4c 8b 04 24          	mov    (%rsp),%r8
   1fadb:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1fae0:	48 c7 44 24 20 ff ff 	movq   $0xffffffffffffffff,0x20(%rsp)
   1fae7:	ff ff 
   1fae9:	48 89 c5             	mov    %rax,%rbp
   1faec:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   1faf1:	e9 89 fe ff ff       	jmp    1f97f <_ULx86_64_dwarf_callback+0x24f>
   1faf6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1fafb:	e9 0a ff ff ff       	jmp    1fa0a <_ULx86_64_dwarf_callback+0x2da>
   1fb00:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1fb04:	4d 89 f2             	mov    %r14,%r10
   1fb07:	4d 89 e8             	mov    %r13,%r8
   1fb0a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   1fb0f:	4c 89 fa             	mov    %r15,%rdx
   1fb12:	85 f6                	test   %esi,%esi
   1fb14:	74 2a                	je     1fb40 <_ULx86_64_dwarf_callback+0x410>
   1fb16:	48 8b 04 24          	mov    (%rsp),%rax
   1fb1a:	4c 89 d1             	mov    %r10,%rcx
   1fb1d:	48 89 ee             	mov    %rbp,%rsi
   1fb20:	4c 89 e7             	mov    %r12,%rdi
   1fb23:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   1fb28:	6a 00                	push   $0x0
   1fb2a:	6a 00                	push   $0x0
   1fb2c:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   1fb31:	e8 da 05 00 00       	call   20110 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1fb36:	5a                   	pop    %rdx
   1fb37:	59                   	pop    %rcx
   1fb38:	85 c0                	test   %eax,%eax
   1fb3a:	0f 88 c8 fe ff ff    	js     1fa08 <_ULx86_64_dwarf_callback+0x2d8>
   1fb40:	41 c7 46 14 01 00 00 	movl   $0x1,0x14(%r14)
   1fb47:	00 
   1fb48:	b8 01 00 00 00       	mov    $0x1,%eax
   1fb4d:	e9 b8 fe ff ff       	jmp    1fa0a <_ULx86_64_dwarf_callback+0x2da>
   1fb52:	e8 ad 1a 00 00       	call   21604 <abort>
   1fb57:	e8 64 fe fe ff       	call   f9c0 <__stack_chk_fail>
   1fb5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fb60 <_ULx86_64_dwarf_search_unwind_table>:
   1fb60:	f3 0f 1e fa          	endbr64 
   1fb64:	41 57                	push   %r15
   1fb66:	45 89 c2             	mov    %r8d,%r10d
   1fb69:	41 56                	push   %r14
   1fb6b:	41 55                	push   %r13
   1fb6d:	49 89 cd             	mov    %rcx,%r13
   1fb70:	41 54                	push   %r12
   1fb72:	49 89 f4             	mov    %rsi,%r12
   1fb75:	55                   	push   %rbp
   1fb76:	48 89 d5             	mov    %rdx,%rbp
   1fb79:	53                   	push   %rbx
   1fb7a:	48 83 ec 38          	sub    $0x38,%rsp
   1fb7e:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1fb83:	4c 8b 4a 48          	mov    0x48(%rdx),%r9
   1fb87:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fb8e:	00 00 
   1fb90:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1fb95:	31 c0                	xor    %eax,%eax
   1fb97:	8b 42 28             	mov    0x28(%rdx),%eax
   1fb9a:	83 e8 02             	sub    $0x2,%eax
   1fb9d:	83 e0 fd             	and    $0xfffffffd,%eax
   1fba0:	0f 85 32 01 00 00    	jne    1fcd8 <_ULx86_64_dwarf_search_unwind_table+0x178>
   1fba6:	48 8b 42 40          	mov    0x40(%rdx),%rax
   1fbaa:	49 89 fe             	mov    %rdi,%r14
   1fbad:	45 31 c0             	xor    %r8d,%r8d
   1fbb0:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   1fbb7:	00 
   1fbb8:	4c 89 f7             	mov    %r14,%rdi
   1fbbb:	44 89 54 24 14       	mov    %r10d,0x14(%rsp)
   1fbc0:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1fbc5:	4c 89 0c 24          	mov    %r9,(%rsp)
   1fbc9:	e8 e2 df ff ff       	call   1dbb0 <_Ux86_64_get_accessors>
   1fbce:	4c 8b 7d 38          	mov    0x38(%rbp),%r15
   1fbd2:	83 7d 28 04          	cmpl   $0x4,0x28(%rbp)
   1fbd6:	48 89 c6             	mov    %rax,%rsi
   1fbd9:	4c 8b 0c 24          	mov    (%rsp),%r9
   1fbdd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1fbe2:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   1fbe7:	4c 89 f8             	mov    %r15,%rax
   1fbea:	75 04                	jne    1fbf0 <_ULx86_64_dwarf_search_unwind_table+0x90>
   1fbec:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1fbf0:	44 89 e1             	mov    %r12d,%ecx
   1fbf3:	48 c1 eb 03          	shr    $0x3,%rbx
   1fbf7:	31 ff                	xor    %edi,%edi
   1fbf9:	29 c1                	sub    %eax,%ecx
   1fbfb:	4c 39 35 7e c6 00 00 	cmp    %r14,0xc67e(%rip)        # 2c280 <_ULx86_64_local_addr_space>
   1fc02:	89 c8                	mov    %ecx,%eax
   1fc04:	74 1e                	je     1fc24 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   1fc06:	e9 05 01 00 00       	jmp    1fd10 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1fc0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fc10:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
   1fc14:	48 d1 ea             	shr    %rdx
   1fc17:	41 3b 04 d1          	cmp    (%r9,%rdx,8),%eax
   1fc1b:	0f 8d a7 00 00 00    	jge    1fcc8 <_ULx86_64_dwarf_search_unwind_table+0x168>
   1fc21:	48 89 d3             	mov    %rdx,%rbx
   1fc24:	48 39 fb             	cmp    %rdi,%rbx
   1fc27:	77 e7                	ja     1fc10 <_ULx86_64_dwarf_search_unwind_table+0xb0>
   1fc29:	48 85 db             	test   %rbx,%rbx
   1fc2c:	0f 84 de 00 00 00    	je     1fd10 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1fc32:	49 8d 44 d9 f8       	lea    -0x8(%r9,%rbx,8),%rax
   1fc37:	48 85 c0             	test   %rax,%rax
   1fc3a:	0f 84 d0 00 00 00    	je     1fd10 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1fc40:	48 63 40 04          	movslq 0x4(%rax),%rax
   1fc44:	4d 85 c0             	test   %r8,%r8
   1fc47:	0f 85 b3 00 00 00    	jne    1fd00 <_ULx86_64_dwarf_search_unwind_table+0x1a0>
   1fc4d:	4c 01 f8             	add    %r15,%rax
   1fc50:	4d 89 f8             	mov    %r15,%r8
   1fc53:	31 ff                	xor    %edi,%edi
   1fc55:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1fc5a:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1fc5f:	4c 89 e9             	mov    %r13,%rcx
   1fc62:	45 89 d1             	mov    %r10d,%r9d
   1fc65:	ff 74 24 18          	push   0x18(%rsp)
   1fc69:	57                   	push   %rdi
   1fc6a:	4c 89 f7             	mov    %r14,%rdi
   1fc6d:	e8 9e 04 00 00       	call   20110 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   1fc72:	5a                   	pop    %rdx
   1fc73:	59                   	pop    %rcx
   1fc74:	85 c0                	test   %eax,%eax
   1fc76:	78 2a                	js     1fca2 <_ULx86_64_dwarf_search_unwind_table+0x142>
   1fc78:	83 7d 28 01          	cmpl   $0x1,0x28(%rbp)
   1fc7c:	49 8b 45 00          	mov    0x0(%r13),%rax
   1fc80:	75 13                	jne    1fc95 <_ULx86_64_dwarf_search_unwind_table+0x135>
   1fc82:	4c 01 f8             	add    %r15,%rax
   1fc85:	4d 01 7d 08          	add    %r15,0x8(%r13)
   1fc89:	49 89 45 00          	mov    %rax,0x0(%r13)
   1fc8d:	49 c7 45 28 20 00 00 	movq   $0x20,0x28(%r13)
   1fc94:	00 
   1fc95:	49 39 c4             	cmp    %rax,%r12
   1fc98:	72 76                	jb     1fd10 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1fc9a:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   1fc9e:	76 70                	jbe    1fd10 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   1fca0:	31 c0                	xor    %eax,%eax
   1fca2:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1fca7:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   1fcae:	00 00 
   1fcb0:	75 65                	jne    1fd17 <_ULx86_64_dwarf_search_unwind_table+0x1b7>
   1fcb2:	48 83 c4 38          	add    $0x38,%rsp
   1fcb6:	5b                   	pop    %rbx
   1fcb7:	5d                   	pop    %rbp
   1fcb8:	41 5c                	pop    %r12
   1fcba:	41 5d                	pop    %r13
   1fcbc:	41 5e                	pop    %r14
   1fcbe:	41 5f                	pop    %r15
   1fcc0:	c3                   	ret    
   1fcc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fcc8:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   1fccc:	e9 53 ff ff ff       	jmp    1fc24 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   1fcd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fcd8:	49 8b 41 28          	mov    0x28(%r9),%rax
   1fcdc:	4d 8b 41 10          	mov    0x10(%r9),%r8
   1fce0:	4c 8b 35 99 c5 00 00 	mov    0xc599(%rip),%r14        # 2c280 <_ULx86_64_local_addr_space>
   1fce7:	4d 8b 49 20          	mov    0x20(%r9),%r9
   1fceb:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   1fcf2:	00 
   1fcf3:	e9 c0 fe ff ff       	jmp    1fbb8 <_ULx86_64_dwarf_search_unwind_table+0x58>
   1fcf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fcff:	00 
   1fd00:	4c 01 c0             	add    %r8,%rax
   1fd03:	bf 01 00 00 00       	mov    $0x1,%edi
   1fd08:	e9 48 ff ff ff       	jmp    1fc55 <_ULx86_64_dwarf_search_unwind_table+0xf5>
   1fd0d:	0f 1f 00             	nopl   (%rax)
   1fd10:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1fd15:	eb 8b                	jmp    1fca2 <_ULx86_64_dwarf_search_unwind_table+0x142>
   1fd17:	e8 a4 fc fe ff       	call   f9c0 <__stack_chk_fail>
   1fd1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fd20 <_ULx86_64_dwarf_find_proc_info>:
   1fd20:	f3 0f 1e fa          	endbr64 
   1fd24:	41 56                	push   %r14
   1fd26:	4d 89 c6             	mov    %r8,%r14
   1fd29:	41 55                	push   %r13
   1fd2b:	49 89 fd             	mov    %rdi,%r13
   1fd2e:	41 54                	push   %r12
   1fd30:	49 89 d4             	mov    %rdx,%r12
   1fd33:	55                   	push   %rbp
   1fd34:	48 89 f5             	mov    %rsi,%rbp
   1fd37:	53                   	push   %rbx
   1fd38:	89 cb                	mov    %ecx,%ebx
   1fd3a:	b9 15 00 00 00       	mov    $0x15,%ecx
   1fd3f:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1fd46:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fd4d:	00 00 
   1fd4f:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1fd56:	00 
   1fd57:	31 c0                	xor    %eax,%eax
   1fd59:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1fd5e:	48 89 e6             	mov    %rsp,%rsi
   1fd61:	48 89 2c 24          	mov    %rbp,(%rsp)
   1fd65:	48 89 d7             	mov    %rdx,%rdi
   1fd68:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   1fd6d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1fd70:	48 8d 3d b9 f9 ff ff 	lea    -0x647(%rip),%rdi        # 1f730 <_ULx86_64_dwarf_callback>
   1fd77:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
   1fd7b:	c7 44 24 40 ff ff ff 	movl   $0xffffffff,0x40(%rsp)
   1fd82:	ff 
   1fd83:	c7 84 24 90 00 00 00 	movl   $0xffffffff,0x90(%rsp)
   1fd8a:	ff ff ff ff 
   1fd8e:	e8 ad 00 00 00       	call   1fe40 <dl_iterate_phdr>
   1fd93:	85 c0                	test   %eax,%eax
   1fd95:	0f 8e 85 00 00 00    	jle    1fe20 <_ULx86_64_dwarf_find_proc_info+0x100>
   1fd9b:	8b 54 24 14          	mov    0x14(%rsp),%edx
   1fd9f:	31 c0                	xor    %eax,%eax
   1fda1:	85 d2                	test   %edx,%edx
   1fda3:	75 2a                	jne    1fdcf <_ULx86_64_dwarf_find_proc_info+0xaf>
   1fda5:	83 7c 24 40 ff       	cmpl   $0xffffffff,0x40(%rsp)
   1fdaa:	75 4c                	jne    1fdf8 <_ULx86_64_dwarf_find_proc_info+0xd8>
   1fdac:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   1fdb3:	ff 
   1fdb4:	74 6a                	je     1fe20 <_ULx86_64_dwarf_find_proc_info+0x100>
   1fdb6:	48 8d 54 24 68       	lea    0x68(%rsp),%rdx
   1fdbb:	4d 89 f1             	mov    %r14,%r9
   1fdbe:	41 89 d8             	mov    %ebx,%r8d
   1fdc1:	4c 89 e1             	mov    %r12,%rcx
   1fdc4:	48 89 ee             	mov    %rbp,%rsi
   1fdc7:	4c 89 ef             	mov    %r13,%rdi
   1fdca:	e8 91 fd ff ff       	call   1fb60 <_ULx86_64_dwarf_search_unwind_table>
   1fdcf:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
   1fdd6:	00 
   1fdd7:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1fdde:	00 00 
   1fde0:	75 45                	jne    1fe27 <_ULx86_64_dwarf_find_proc_info+0x107>
   1fde2:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1fde9:	5b                   	pop    %rbx
   1fdea:	5d                   	pop    %rbp
   1fdeb:	41 5c                	pop    %r12
   1fded:	41 5d                	pop    %r13
   1fdef:	41 5e                	pop    %r14
   1fdf1:	c3                   	ret    
   1fdf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fdf8:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1fdfd:	4d 89 f1             	mov    %r14,%r9
   1fe00:	41 89 d8             	mov    %ebx,%r8d
   1fe03:	4c 89 e1             	mov    %r12,%rcx
   1fe06:	48 89 ee             	mov    %rbp,%rsi
   1fe09:	4c 89 ef             	mov    %r13,%rdi
   1fe0c:	e8 4f fd ff ff       	call   1fb60 <_ULx86_64_dwarf_search_unwind_table>
   1fe11:	83 f8 f6             	cmp    $0xfffffff6,%eax
   1fe14:	75 b9                	jne    1fdcf <_ULx86_64_dwarf_find_proc_info+0xaf>
   1fe16:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   1fe1d:	ff 
   1fe1e:	75 96                	jne    1fdb6 <_ULx86_64_dwarf_find_proc_info+0x96>
   1fe20:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1fe25:	eb a8                	jmp    1fdcf <_ULx86_64_dwarf_find_proc_info+0xaf>
   1fe27:	e8 94 fb fe ff       	call   f9c0 <__stack_chk_fail>
   1fe2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001fe30 <_ULx86_64_dwarf_put_unwind_info>:
   1fe30:	f3 0f 1e fa          	endbr64 
   1fe34:	c3                   	ret    
   1fe35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fe3c:	00 00 00 
   1fe3f:	90                   	nop

000000000001fe40 <dl_iterate_phdr>:
   1fe40:	f3 0f 1e fa          	endbr64 
   1fe44:	41 54                	push   %r12
   1fe46:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1fe4a:	49 89 f4             	mov    %rsi,%r12
   1fe4d:	55                   	push   %rbp
   1fe4e:	53                   	push   %rbx
   1fe4f:	48 89 fb             	mov    %rdi,%rbx
   1fe52:	48 83 ec 50          	sub    $0x50,%rsp
   1fe56:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fe5d:	00 00 
   1fe5f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1fe64:	31 c0                	xor    %eax,%eax
   1fe66:	0f 29 04 24          	movaps %xmm0,(%rsp)
   1fe6a:	48 89 e5             	mov    %rsp,%rbp
   1fe6d:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   1fe72:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   1fe77:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   1fe7c:	e8 b1 13 00 00       	call   21232 <get_enclave_base>
   1fe81:	48 8d 0d 37 24 00 00 	lea    0x2437(%rip),%rcx        # 222bf <g_dyn_entry_table+0x2bf>
   1fe88:	be 40 00 00 00       	mov    $0x40,%esi
   1fe8d:	48 89 ef             	mov    %rbp,%rdi
   1fe90:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1fe94:	48 89 04 24          	mov    %rax,(%rsp)
   1fe98:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1fe9d:	48 01 c2             	add    %rax,%rdx
   1fea0:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   1fea4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1fea9:	4c 89 e2             	mov    %r12,%rdx
   1feac:	66 89 44 24 18       	mov    %ax,0x18(%rsp)
   1feb1:	ff d3                	call   *%rbx
   1feb3:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1feb8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   1febf:	00 00 
   1fec1:	75 09                	jne    1fecc <dl_iterate_phdr+0x8c>
   1fec3:	48 83 c4 50          	add    $0x50,%rsp
   1fec7:	5b                   	pop    %rbx
   1fec8:	5d                   	pop    %rbp
   1fec9:	41 5c                	pop    %r12
   1fecb:	c3                   	ret    
   1fecc:	e8 ef fa fe ff       	call   f9c0 <__stack_chk_fail>
   1fed1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fed8:	00 00 00 
   1fedb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001fee0 <msync>:
   1fee0:	f3 0f 1e fa          	endbr64 
   1fee4:	31 c0                	xor    %eax,%eax
   1fee6:	c3                   	ret    
   1fee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1feee:	00 00 

000000000001fef0 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   1fef0:	f3 0f 1e fa          	endbr64 
   1fef4:	48 39 f7             	cmp    %rsi,%rdi
   1fef7:	74 5f                	je     1ff58 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x68>
   1fef9:	48 85 ff             	test   %rdi,%rdi
   1fefc:	74 42                	je     1ff40 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x50>
   1fefe:	41 54                	push   %r12
   1ff00:	31 c9                	xor    %ecx,%ecx
   1ff02:	49 89 d4             	mov    %rdx,%r12
   1ff05:	48 8d 15 1c bd 00 00 	lea    0xbd1c(%rip),%rdx        # 2bc28 <_ZTIN10__cxxabiv117__class_type_infoE>
   1ff0c:	55                   	push   %rbp
   1ff0d:	48 89 f5             	mov    %rsi,%rbp
   1ff10:	48 8d 35 01 bd 00 00 	lea    0xbd01(%rip),%rsi        # 2bc18 <_ZTISt9type_info>
   1ff17:	48 83 ec 08          	sub    $0x8,%rsp
   1ff1b:	e8 a0 00 00 00       	call   1ffc0 <__dynamic_cast>
   1ff20:	48 89 c6             	mov    %rax,%rsi
   1ff23:	48 85 c0             	test   %rax,%rax
   1ff26:	74 20                	je     1ff48 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x58>
   1ff28:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1ff2c:	4c 89 e2             	mov    %r12,%rdx
   1ff2f:	48 89 ef             	mov    %rbp,%rdi
   1ff32:	48 8b 40 28          	mov    0x28(%rax),%rax
   1ff36:	48 83 c4 08          	add    $0x8,%rsp
   1ff3a:	5d                   	pop    %rbp
   1ff3b:	41 5c                	pop    %r12
   1ff3d:	ff e0                	jmp    *%rax
   1ff3f:	90                   	nop
   1ff40:	31 c0                	xor    %eax,%eax
   1ff42:	c3                   	ret    
   1ff43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ff48:	48 83 c4 08          	add    $0x8,%rsp
   1ff4c:	31 c0                	xor    %eax,%eax
   1ff4e:	5d                   	pop    %rbp
   1ff4f:	41 5c                	pop    %r12
   1ff51:	c3                   	ret    
   1ff52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ff58:	b8 01 00 00 00       	mov    $0x1,%eax
   1ff5d:	c3                   	ret    
   1ff5e:	66 90                	xchg   %ax,%ax

000000000001ff60 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_>:
   1ff60:	f3 0f 1e fa          	endbr64 
   1ff64:	48 39 fa             	cmp    %rdi,%rdx
   1ff67:	b8 00 00 00 00       	mov    $0x0,%eax
   1ff6c:	48 0f 44 c6          	cmove  %rsi,%rax
   1ff70:	c3                   	ret    
   1ff71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ff78:	00 00 00 
   1ff7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ff80 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE>:
   1ff80:	f3 0f 1e fa          	endbr64 
   1ff84:	48 39 d7             	cmp    %rdx,%rdi
   1ff87:	74 0f                	je     1ff98 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE+0x18>
   1ff89:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1ff8d:	48 8b 07             	mov    (%rdi),%rax
   1ff90:	ff 60 30             	jmp    *0x30(%rax)
   1ff93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ff98:	48 89 f0             	mov    %rsi,%rax
   1ff9b:	c3                   	ret    
   1ff9c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ffa0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv>:
   1ffa0:	f3 0f 1e fa          	endbr64 
   1ffa4:	48 39 f7             	cmp    %rsi,%rdi
   1ffa7:	74 0f                	je     1ffb8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv+0x18>
   1ffa9:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1ffad:	48 8b 07             	mov    (%rdi),%rax
   1ffb0:	ff 60 28             	jmp    *0x28(%rax)
   1ffb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ffb8:	b8 01 00 00 00       	mov    $0x1,%eax
   1ffbd:	c3                   	ret    
   1ffbe:	66 90                	xchg   %ax,%ax

000000000001ffc0 <__dynamic_cast>:
   1ffc0:	f3 0f 1e fa          	endbr64 
   1ffc4:	48 8b 07             	mov    (%rdi),%rax
   1ffc7:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   1ffcb:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
   1ffcf:	49 8b 00             	mov    (%r8),%rax
   1ffd2:	48 01 fe             	add    %rdi,%rsi
   1ffd5:	4c 89 c7             	mov    %r8,%rdi
   1ffd8:	48 8b 40 30          	mov    0x30(%rax),%rax
   1ffdc:	ff e0                	jmp    *%rax
   1ffde:	66 90                	xchg   %ax,%ax

000000000001ffe0 <_UIx86_64_mi_init>:
   1ffe0:	f3 0f 1e fa          	endbr64 
   1ffe4:	c3                   	ret    
   1ffe5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ffec:	00 00 00 
   1ffef:	90                   	nop

000000000001fff0 <_Ux86_64_flush_cache>:
   1fff0:	f3 0f 1e fa          	endbr64 
   1fff4:	55                   	push   %rbp
   1fff5:	48 89 fd             	mov    %rdi,%rbp
   1fff8:	53                   	push   %rbx
   1fff9:	48 83 ec 08          	sub    $0x8,%rsp
   1fffd:	48 8b 9f 88 66 00 00 	mov    0x6688(%rdi),%rbx
   20004:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
   2000b:	00 
   2000c:	48 85 db             	test   %rbx,%rbx
   2000f:	74 27                	je     20038 <_Ux86_64_flush_cache+0x48>
   20011:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20018:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   2001c:	48 85 ff             	test   %rdi,%rdi
   2001f:	74 05                	je     20026 <_Ux86_64_flush_cache+0x36>
   20021:	e8 ba df fe ff       	call   dfe0 <dlfree>
   20026:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2002a:	e8 b1 df fe ff       	call   dfe0 <dlfree>
   2002f:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
   20033:	48 85 db             	test   %rbx,%rbx
   20036:	75 e0                	jne    20018 <_Ux86_64_flush_cache+0x28>
   20038:	48 c7 85 88 66 00 00 	movq   $0x0,0x6688(%rbp)
   2003f:	00 00 00 00 
   20043:	f0 83 45 44 01       	lock addl $0x1,0x44(%rbp)
   20048:	48 83 c4 08          	add    $0x8,%rsp
   2004c:	5b                   	pop    %rbx
   2004d:	5d                   	pop    %rbp
   2004e:	c3                   	ret    
   2004f:	90                   	nop

0000000000020050 <_U_dyn_info_list_addr>:
   20050:	f3 0f 1e fa          	endbr64 
   20054:	48 8d 05 15 ba 01 00 	lea    0x1ba15(%rip),%rax        # 3ba70 <_U_dyn_info_list>
   2005b:	c3                   	ret    
   2005c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020060 <_ULx86_64_Iextract_dynamic_proc_info>:
   20060:	f3 0f 1e fa          	endbr64 
   20064:	48 8b 41 10          	mov    0x10(%rcx),%rax
   20068:	49 89 d2             	mov    %rdx,%r10
   2006b:	48 89 ca             	mov    %rcx,%rdx
   2006e:	49 89 02             	mov    %rax,(%r10)
   20071:	48 8b 41 18          	mov    0x18(%rcx),%rax
   20075:	49 89 42 08          	mov    %rax,0x8(%r10)
   20079:	48 8b 41 20          	mov    0x20(%rcx),%rax
   2007d:	49 89 42 20          	mov    %rax,0x20(%r10)
   20081:	8b 41 28             	mov    0x28(%rcx),%eax
   20084:	41 89 42 30          	mov    %eax,0x30(%r10)
   20088:	85 c0                	test   %eax,%eax
   2008a:	74 14                	je     200a0 <_ULx86_64_Iextract_dynamic_proc_info+0x40>
   2008c:	83 e8 01             	sub    $0x1,%eax
   2008f:	83 f8 03             	cmp    $0x3,%eax
   20092:	77 3c                	ja     200d0 <_ULx86_64_Iextract_dynamic_proc_info+0x70>
   20094:	4c 89 d1             	mov    %r10,%rcx
   20097:	e9 c4 fa ff ff       	jmp    1fb60 <_ULx86_64_dwarf_search_unwind_table>
   2009c:	0f 1f 40 00          	nopl   0x0(%rax)
   200a0:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   200a4:	45 85 c0             	test   %r8d,%r8d
   200a7:	49 c7 42 10 00 00 00 	movq   $0x0,0x10(%r10)
   200ae:	00 
   200af:	49 89 4a 18          	mov    %rcx,0x18(%r10)
   200b3:	8b 4a 40             	mov    0x40(%rdx),%ecx
   200b6:	41 c7 42 34 00 00 00 	movl   $0x0,0x34(%r10)
   200bd:	00 
   200be:	49 89 4a 28          	mov    %rcx,0x28(%r10)
   200c2:	b9 00 00 00 00       	mov    $0x0,%ecx
   200c7:	48 0f 44 d1          	cmove  %rcx,%rdx
   200cb:	49 89 52 38          	mov    %rdx,0x38(%r10)
   200cf:	c3                   	ret    
   200d0:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   200d5:	c3                   	ret    
   200d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   200dd:	00 00 00 

00000000000200e0 <_ULx86_64_set_reg>:
   200e0:	f3 0f 1e fa          	endbr64 
   200e4:	48 83 ec 18          	sub    $0x18,%rsp
   200e8:	b9 01 00 00 00       	mov    $0x1,%ecx
   200ed:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   200f2:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   200f7:	e8 e4 e3 ff ff       	call   1e4e0 <_ULx86_64_access_reg>
   200fc:	48 83 c4 18          	add    $0x18,%rsp
   20100:	c3                   	ret    
   20101:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20108:	00 00 00 
   2010b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000020110 <_ULx86_64_dwarf_extract_proc_info_from_fde>:
   20110:	f3 0f 1e fa          	endbr64 
   20114:	41 57                	push   %r15
   20116:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2011a:	41 56                	push   %r14
   2011c:	49 89 fe             	mov    %rdi,%r14
   2011f:	41 55                	push   %r13
   20121:	49 89 f5             	mov    %rsi,%r13
   20124:	41 54                	push   %r12
   20126:	55                   	push   %rbp
   20127:	48 89 cd             	mov    %rcx,%rbp
   2012a:	53                   	push   %rbx
   2012b:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   20132:	48 8b 0a             	mov    (%rdx),%rcx
   20135:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   2013a:	8b b4 24 e0 00 00 00 	mov    0xe0(%rsp),%esi
   20141:	4c 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%r15
   20148:	00 
   20149:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20150:	00 00 
   20152:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   20159:	00 
   2015a:	31 c0                	xor    %eax,%eax
   2015c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   20161:	48 8d 41 04          	lea    0x4(%rcx),%rax
   20165:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   2016c:	00 00 00 00 00 
   20171:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   20176:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   2017b:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   20180:	8b 19                	mov    (%rcx),%ebx
   20182:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20187:	83 fb ff             	cmp    $0xffffffff,%ebx
   2018a:	0f 84 70 04 00 00    	je     20600 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4f0>
   20190:	85 db                	test   %ebx,%ebx
   20192:	0f 84 e2 05 00 00    	je     2077a <_ULx86_64_dwarf_extract_proc_info_from_fde+0x66a>
   20198:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   2019c:	48 83 c1 08          	add    $0x8,%rcx
   201a0:	48 89 3a             	mov    %rdi,(%rdx)
   201a3:	48 63 51 fc          	movslq -0x4(%rcx),%rdx
   201a7:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   201ac:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   201b1:	85 f6                	test   %esi,%esi
   201b3:	0f 85 17 02 00 00    	jne    203d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c0>
   201b9:	48 29 d0             	sub    %rdx,%rax
   201bc:	49 89 c0             	mov    %rax,%r8
   201bf:	48 85 d2             	test   %rdx,%rdx
   201c2:	0f 84 e4 03 00 00    	je     205ac <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   201c8:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   201cf:	ff 
   201d0:	8b 00                	mov    (%rax),%eax
   201d2:	49 8d 48 04          	lea    0x4(%r8),%rcx
   201d6:	45 31 c9             	xor    %r9d,%r9d
   201d9:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   201e0:	00 00 
   201e2:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   201e7:	83 f8 ff             	cmp    $0xffffffff,%eax
   201ea:	0f 84 19 02 00 00    	je     20409 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2f9>
   201f0:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
   201f4:	8b 09                	mov    (%rcx),%ecx
   201f6:	49 8d 40 08          	lea    0x8(%r8),%rax
   201fa:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   201ff:	44 39 c9             	cmp    %r9d,%ecx
   20202:	0f 85 38 02 00 00    	jne    20440 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   20208:	0f b6 30             	movzbl (%rax),%esi
   2020b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   20210:	48 83 c0 01          	add    $0x1,%rax
   20214:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20219:	8d 56 fd             	lea    -0x3(%rsi),%edx
   2021c:	80 fa 01             	cmp    $0x1,%dl
   2021f:	76 0a                	jbe    2022b <_ULx86_64_dwarf_extract_proc_info_from_fde+0x11b>
   20221:	40 80 fe 01          	cmp    $0x1,%sil
   20225:	0f 85 45 05 00 00    	jne    20770 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x660>
   2022b:	c7 84 24 93 00 00 00 	movl   $0x0,0x93(%rsp)
   20232:	00 00 00 00 
   20236:	31 d2                	xor    %edx,%edx
   20238:	4c 8d 84 24 92 00 00 	lea    0x92(%rsp),%r8
   2023f:	00 
   20240:	c6 84 24 97 00 00 00 	movb   $0x0,0x97(%rsp)
   20247:	00 
   20248:	eb 10                	jmp    2025a <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   2024a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20250:	48 83 fa 03          	cmp    $0x3,%rdx
   20254:	0f 86 5e 03 00 00    	jbe    205b8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4a8>
   2025a:	0f b6 08             	movzbl (%rax),%ecx
   2025d:	48 83 c0 01          	add    $0x1,%rax
   20261:	84 c9                	test   %cl,%cl
   20263:	75 eb                	jne    20250 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x140>
   20265:	31 c9                	xor    %ecx,%ecx
   20267:	45 31 c0             	xor    %r8d,%r8d
   2026a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20270:	0f b6 38             	movzbl (%rax),%edi
   20273:	48 83 c0 01          	add    $0x1,%rax
   20277:	48 89 fa             	mov    %rdi,%rdx
   2027a:	83 e2 7f             	and    $0x7f,%edx
   2027d:	48 d3 e2             	shl    %cl,%rdx
   20280:	48 83 c1 07          	add    $0x7,%rcx
   20284:	49 09 d0             	or     %rdx,%r8
   20287:	40 84 ff             	test   %dil,%dil
   2028a:	78 e4                	js     20270 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x160>
   2028c:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   20291:	31 c9                	xor    %ecx,%ecx
   20293:	45 31 c0             	xor    %r8d,%r8d
   20296:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2029d:	00 00 00 
   202a0:	44 0f b6 10          	movzbl (%rax),%r10d
   202a4:	49 89 c1             	mov    %rax,%r9
   202a7:	48 83 c0 01          	add    $0x1,%rax
   202ab:	4c 89 d2             	mov    %r10,%rdx
   202ae:	83 e2 7f             	and    $0x7f,%edx
   202b1:	48 d3 e2             	shl    %cl,%rdx
   202b4:	48 83 c1 07          	add    $0x7,%rcx
   202b8:	49 09 d0             	or     %rdx,%r8
   202bb:	45 84 d2             	test   %r10b,%r10b
   202be:	78 e0                	js     202a0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x190>
   202c0:	48 83 f9 3f          	cmp    $0x3f,%rcx
   202c4:	77 0a                	ja     202d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   202c6:	41 83 e2 40          	and    $0x40,%r10d
   202ca:	0f 85 d8 03 00 00    	jne    206a8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x598>
   202d0:	4c 89 44 24 68       	mov    %r8,0x68(%rsp)
   202d5:	31 c9                	xor    %ecx,%ecx
   202d7:	45 31 c0             	xor    %r8d,%r8d
   202da:	40 80 fe 01          	cmp    $0x1,%sil
   202de:	0f 84 6c 03 00 00    	je     20650 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x540>
   202e4:	0f 1f 40 00          	nopl   0x0(%rax)
   202e8:	0f b6 30             	movzbl (%rax),%esi
   202eb:	48 83 c0 01          	add    $0x1,%rax
   202ef:	48 89 f2             	mov    %rsi,%rdx
   202f2:	83 e2 7f             	and    $0x7f,%edx
   202f5:	48 d3 e2             	shl    %cl,%rdx
   202f8:	48 83 c1 07          	add    $0x7,%rcx
   202fc:	49 09 d0             	or     %rdx,%r8
   202ff:	40 84 f6             	test   %sil,%sil
   20302:	78 e4                	js     202e8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1d8>
   20304:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20309:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   20310:	00 
   20311:	31 d2                	xor    %edx,%edx
   20313:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   20318:	3c 7a                	cmp    $0x7a,%al
   2031a:	0f 84 53 03 00 00    	je     20673 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x563>
   20320:	bb 04 00 00 00       	mov    $0x4,%ebx
   20325:	4d 89 fa             	mov    %r15,%r10
   20328:	49 89 ef             	mov    %rbp,%r15
   2032b:	4c 8d 9c 24 98 00 00 	lea    0x98(%rsp),%r11
   20332:	00 
   20333:	89 dd                	mov    %ebx,%ebp
   20335:	4c 8d a4 14 93 00 00 	lea    0x93(%rsp,%rdx,1),%r12
   2033c:	00 
   2033d:	4c 8d 4c 24 78       	lea    0x78(%rsp),%r9
   20342:	4c 89 db             	mov    %r11,%rbx
   20345:	84 c0                	test   %al,%al
   20347:	74 79                	je     203c2 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   20349:	3c 52                	cmp    $0x52,%al
   2034b:	0f 84 77 02 00 00    	je     205c8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4b8>
   20351:	0f 87 21 01 00 00    	ja     20478 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x368>
   20357:	3c 4c                	cmp    $0x4c,%al
   20359:	0f 84 81 02 00 00    	je     205e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4d0>
   2035f:	3c 50                	cmp    $0x50,%al
   20361:	0f 85 29 01 00 00    	jne    20490 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   20367:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2036c:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   20371:	4d 89 f8             	mov    %r15,%r8
   20374:	4c 89 ee             	mov    %r13,%rsi
   20377:	48 83 ec 08          	sub    $0x8,%rsp
   2037b:	4c 89 f7             	mov    %r14,%rdi
   2037e:	0f b6 08             	movzbl (%rax),%ecx
   20381:	48 83 c0 01          	add    $0x1,%rax
   20385:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   2038a:	41 52                	push   %r10
   2038c:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   20391:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   20396:	e8 25 b7 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   2039b:	41 5a                	pop    %r10
   2039d:	41 5b                	pop    %r11
   2039f:	85 c0                	test   %eax,%eax
   203a1:	4c 8b 0c 24          	mov    (%rsp),%r9
   203a5:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   203aa:	0f 88 98 00 00 00    	js     20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   203b0:	49 83 c4 01          	add    $0x1,%r12
   203b4:	4c 39 e3             	cmp    %r12,%rbx
   203b7:	74 09                	je     203c2 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   203b9:	41 0f b6 04 24       	movzbl (%r12),%eax
   203be:	84 c0                	test   %al,%al
   203c0:	75 87                	jne    20349 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x239>
   203c2:	89 eb                	mov    %ebp,%ebx
   203c4:	4c 89 fd             	mov    %r15,%rbp
   203c7:	4d 89 d7             	mov    %r10,%r15
   203ca:	e9 d3 00 00 00       	jmp    204a2 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x392>
   203cf:	90                   	nop
   203d0:	49 01 d0             	add    %rdx,%r8
   203d3:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   203d7:	0f 84 cf 01 00 00    	je     205ac <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   203dd:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   203e4:	ff 
   203e5:	41 8b 00             	mov    (%r8),%eax
   203e8:	49 8d 48 04          	lea    0x4(%r8),%rcx
   203ec:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
   203f2:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   203f9:	00 00 
   203fb:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   20400:	83 f8 ff             	cmp    $0xffffffff,%eax
   20403:	0f 85 e7 fd ff ff    	jne    201f0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xe0>
   20409:	48 8b 11             	mov    (%rcx),%rdx
   2040c:	49 8d 40 0c          	lea    0xc(%r8),%rax
   20410:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20415:	49 8b 48 0c          	mov    0xc(%r8),%rcx
   20419:	48 01 c2             	add    %rax,%rdx
   2041c:	85 f6                	test   %esi,%esi
   2041e:	49 8d 40 14          	lea    0x14(%r8),%rax
   20422:	40 0f 95 c6          	setne  %sil
   20426:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2042b:	40 0f b6 f6          	movzbl %sil,%esi
   2042f:	48 01 f1             	add    %rsi,%rcx
   20432:	0f 84 d0 fd ff ff    	je     20208 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xf8>
   20438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2043f:	00 
   20440:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   20445:	0f 1f 00             	nopl   (%rax)
   20448:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   2044f:	00 
   20450:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   20457:	00 00 
   20459:	0f 85 25 03 00 00    	jne    20784 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x674>
   2045f:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   20466:	5b                   	pop    %rbx
   20467:	5d                   	pop    %rbp
   20468:	41 5c                	pop    %r12
   2046a:	41 5d                	pop    %r13
   2046c:	41 5e                	pop    %r14
   2046e:	41 5f                	pop    %r15
   20470:	c3                   	ret    
   20471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20478:	3c 53                	cmp    $0x53,%al
   2047a:	75 14                	jne    20490 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   2047c:	80 8c 24 86 00 00 00 	orb    $0x6,0x86(%rsp)
   20483:	06 
   20484:	e9 27 ff ff ff       	jmp    203b0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   20489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20490:	89 eb                	mov    %ebp,%ebx
   20492:	4c 89 fd             	mov    %r15,%rbp
   20495:	4d 89 d7             	mov    %r10,%r15
   20498:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   2049f:	01 
   204a0:	74 9e                	je     20440 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   204a2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   204a7:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   204ac:	49 89 e8             	mov    %rbp,%r8
   204af:	0f b6 cb             	movzbl %bl,%ecx
   204b2:	88 9c 24 84 00 00 00 	mov    %bl,0x84(%rsp)
   204b9:	48 83 ec 08          	sub    $0x8,%rsp
   204bd:	4c 89 ee             	mov    %r13,%rsi
   204c0:	4c 89 f7             	mov    %r14,%rdi
   204c3:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   204c8:	41 57                	push   %r15
   204ca:	4c 8d 4c 24 38       	lea    0x38(%rsp),%r9
   204cf:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   204d4:	e8 e7 b5 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   204d9:	41 58                	pop    %r8
   204db:	41 59                	pop    %r9
   204dd:	85 c0                	test   %eax,%eax
   204df:	48 8b 14 24          	mov    (%rsp),%rdx
   204e3:	0f 88 5f ff ff ff    	js     20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   204e9:	48 83 ec 08          	sub    $0x8,%rsp
   204ed:	89 d9                	mov    %ebx,%ecx
   204ef:	4c 89 ee             	mov    %r13,%rsi
   204f2:	4c 89 f7             	mov    %r14,%rdi
   204f5:	41 57                	push   %r15
   204f7:	83 e1 0f             	and    $0xf,%ecx
   204fa:	49 89 e8             	mov    %rbp,%r8
   204fd:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   20502:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   20507:	e8 b4 b5 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   2050c:	5e                   	pop    %rsi
   2050d:	5f                   	pop    %rdi
   2050e:	85 c0                	test   %eax,%eax
   20510:	0f 88 32 ff ff ff    	js     20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   20516:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2051b:	45 31 e4             	xor    %r12d,%r12d
   2051e:	48 8b 14 24          	mov    (%rsp),%rdx
   20522:	48 89 45 00          	mov    %rax,0x0(%rbp)
   20526:	48 03 44 24 38       	add    0x38(%rsp),%rax
   2052b:	48 89 45 08          	mov    %rax,0x8(%rbp)
   2052f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   20534:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   2053b:	01 
   2053c:	48 89 45 18          	mov    %rax,0x18(%rbp)
   20540:	74 34                	je     20576 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x466>
   20542:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   20547:	31 c9                	xor    %ecx,%ecx
   20549:	45 31 c0             	xor    %r8d,%r8d
   2054c:	0f 1f 40 00          	nopl   0x0(%rax)
   20550:	41 0f b6 34 24       	movzbl (%r12),%esi
   20555:	49 83 c4 01          	add    $0x1,%r12
   20559:	48 89 f0             	mov    %rsi,%rax
   2055c:	83 e0 7f             	and    $0x7f,%eax
   2055f:	48 d3 e0             	shl    %cl,%rax
   20562:	48 83 c1 07          	add    $0x7,%rcx
   20566:	49 09 c0             	or     %rax,%r8
   20569:	40 84 f6             	test   %sil,%sil
   2056c:	78 e2                	js     20550 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x440>
   2056e:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   20573:	4d 01 c4             	add    %r8,%r12
   20576:	48 83 ec 08          	sub    $0x8,%rsp
   2057a:	4c 8d 4d 10          	lea    0x10(%rbp),%r9
   2057e:	49 89 e8             	mov    %rbp,%r8
   20581:	4c 89 ee             	mov    %r13,%rsi
   20584:	0f b6 8c 24 8d 00 00 	movzbl 0x8d(%rsp),%ecx
   2058b:	00 
   2058c:	41 57                	push   %r15
   2058e:	4c 89 f7             	mov    %r14,%rdi
   20591:	e8 2a b5 ff ff       	call   1bac0 <_ULx86_64_dwarf_read_encoded_pointer>
   20596:	5a                   	pop    %rdx
   20597:	59                   	pop    %rcx
   20598:	85 c0                	test   %eax,%eax
   2059a:	0f 88 a8 fe ff ff    	js     20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   205a0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   205a4:	85 c0                	test   %eax,%eax
   205a6:	0f 85 14 01 00 00    	jne    206c0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5b0>
   205ac:	31 c0                	xor    %eax,%eax
   205ae:	e9 95 fe ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   205b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   205b8:	48 83 c2 01          	add    $0x1,%rdx
   205bc:	41 88 0c 10          	mov    %cl,(%r8,%rdx,1)
   205c0:	e9 95 fc ff ff       	jmp    2025a <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   205c5:	0f 1f 00             	nopl   (%rax)
   205c8:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   205cd:	0f b6 28             	movzbl (%rax),%ebp
   205d0:	48 83 c0 01          	add    $0x1,%rax
   205d4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   205d9:	e9 d2 fd ff ff       	jmp    203b0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   205de:	66 90                	xchg   %ax,%ax
   205e0:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   205e5:	0f b6 10             	movzbl (%rax),%edx
   205e8:	48 83 c0 01          	add    $0x1,%rax
   205ec:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   205f1:	88 94 24 85 00 00 00 	mov    %dl,0x85(%rsp)
   205f8:	e9 b3 fd ff ff       	jmp    203b0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   205fd:	0f 1f 00             	nopl   (%rax)
   20600:	48 8b 59 04          	mov    0x4(%rcx),%rbx
   20604:	48 8d 41 0c          	lea    0xc(%rcx),%rax
   20608:	48 83 c1 14          	add    $0x14,%rcx
   2060c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20611:	48 01 c3             	add    %rax,%rbx
   20614:	48 89 1a             	mov    %rbx,(%rdx)
   20617:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
   2061b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   20620:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   20625:	85 f6                	test   %esi,%esi
   20627:	0f 84 8c fb ff ff    	je     201b9 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xa9>
   2062d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20632:	48 39 c2             	cmp    %rax,%rdx
   20635:	0f 84 71 ff ff ff    	je     205ac <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   2063b:	49 01 d0             	add    %rdx,%r8
   2063e:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   20642:	0f 85 95 fd ff ff    	jne    203dd <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2cd>
   20648:	31 c0                	xor    %eax,%eax
   2064a:	e9 f9 fd ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   2064f:	90                   	nop
   20650:	0f b6 00             	movzbl (%rax),%eax
   20653:	49 83 c1 02          	add    $0x2,%r9
   20657:	31 d2                	xor    %edx,%edx
   20659:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   2065e:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   20663:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   2066a:	00 
   2066b:	3c 7a                	cmp    $0x7a,%al
   2066d:	0f 85 ad fc ff ff    	jne    20320 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   20673:	80 8c 24 86 00 00 00 	orb    $0x1,0x86(%rsp)
   2067a:	01 
   2067b:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   20680:	0f b6 10             	movzbl (%rax),%edx
   20683:	48 83 c0 01          	add    $0x1,%rax
   20687:	84 d2                	test   %dl,%dl
   20689:	78 f5                	js     20680 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x570>
   2068b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20690:	ba 01 00 00 00       	mov    $0x1,%edx
   20695:	0f b6 84 24 94 00 00 	movzbl 0x94(%rsp),%eax
   2069c:	00 
   2069d:	e9 7e fc ff ff       	jmp    20320 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   206a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   206a8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   206af:	48 d3 e2             	shl    %cl,%rdx
   206b2:	49 09 d0             	or     %rdx,%r8
   206b5:	e9 16 fc ff ff       	jmp    202d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   206ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   206c0:	48 b8 01 00 00 00 48 	movabs $0x4800000001,%rax
   206c7:	00 00 00 
   206ca:	48 8d 3d 2f b3 01 00 	lea    0x1b32f(%rip),%rdi        # 3ba00 <dwarf_cie_info_pool>
   206d1:	48 89 45 30          	mov    %rax,0x30(%rbp)
   206d5:	e8 76 d1 ff ff       	call   1d850 <_UIx86_64__mempool_alloc>
   206da:	48 89 45 38          	mov    %rax,0x38(%rbp)
   206de:	48 85 c0             	test   %rax,%rax
   206e1:	0f 84 a2 00 00 00    	je     20789 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x679>
   206e7:	0f b6 94 24 86 00 00 	movzbl 0x86(%rsp),%edx
   206ee:	00 
   206ef:	f6 c2 02             	test   $0x2,%dl
   206f2:	74 25                	je     20719 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x609>
   206f4:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   206f9:	0f b7 31             	movzwl (%rcx),%esi
   206fc:	48 83 c1 04          	add    $0x4,%rcx
   20700:	66 89 b4 24 80 00 00 	mov    %si,0x80(%rsp)
   20707:	00 
   20708:	0f b7 71 fe          	movzwl -0x2(%rcx),%esi
   2070c:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   20711:	66 89 b4 24 82 00 00 	mov    %si,0x82(%rsp)
   20718:	00 
   20719:	66 0f 6f 4c 24 40    	movdqa 0x40(%rsp),%xmm1
   2071f:	83 e2 01             	and    $0x1,%edx
   20722:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   20727:	4c 0f 44 64 24 30    	cmove  0x30(%rsp),%r12
   2072d:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   20732:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   20737:	0f 11 08             	movups %xmm1,(%rax)
   2073a:	66 0f 6f 54 24 50    	movdqa 0x50(%rsp),%xmm2
   20740:	0f 11 50 10          	movups %xmm2,0x10(%rax)
   20744:	66 0f 6f 5c 24 60    	movdqa 0x60(%rsp),%xmm3
   2074a:	0f 11 58 20          	movups %xmm3,0x20(%rax)
   2074e:	66 0f 6f 64 24 70    	movdqa 0x70(%rsp),%xmm4
   20754:	0f 11 60 30          	movups %xmm4,0x30(%rax)
   20758:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
   2075f:	00 
   20760:	48 89 50 40          	mov    %rdx,0x40(%rax)
   20764:	31 c0                	xor    %eax,%eax
   20766:	e9 dd fc ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   2076b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20770:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   20775:	e9 ce fc ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   2077a:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   2077f:	e9 c4 fc ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   20784:	e8 37 f2 fe ff       	call   f9c0 <__stack_chk_fail>
   20789:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2078e:	e9 b5 fc ff ff       	jmp    20448 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   20793:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2079a:	00 00 00 
   2079d:	0f 1f 00             	nopl   (%rax)

00000000000207a0 <sgx_init_crypto_lib>:
   207a0:	f3 0f 1e fa          	endbr64 
   207a4:	e9 07 00 00 00       	jmp    207b0 <init_ipp_cpuid>
   207a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000207b0 <init_ipp_cpuid>:
   207b0:	f3 0f 1e fa          	endbr64 
   207b4:	48 83 3d 34 b8 00 00 	cmpq   $0x0,0xb834(%rip)        # 2bff0 <ippcpSetCpuFeatures>
   207bb:	00 
   207bc:	0f 84 0e 02 00 00    	je     209d0 <init_ipp_cpuid+0x220>
   207c2:	48 89 f8             	mov    %rdi,%rax
   207c5:	f6 c4 02             	test   $0x2,%ah
   207c8:	0f 84 0a 02 00 00    	je     209d8 <init_ipp_cpuid+0x228>
   207ce:	48 89 fa             	mov    %rdi,%rdx
   207d1:	48 83 ec 08          	sub    $0x8,%rsp
   207d5:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   207dc:	00 00 00 
   207df:	81 e2 00 08 00 00    	and    $0x800,%edx
   207e5:	48 83 fa 01          	cmp    $0x1,%rdx
   207e9:	48 19 ff             	sbb    %rdi,%rdi
   207ec:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   207f0:	48 83 c7 7f          	add    $0x7f,%rdi
   207f4:	48 89 fa             	mov    %rdi,%rdx
   207f7:	80 ca 80             	or     $0x80,%dl
   207fa:	f6 c4 04             	test   $0x4,%ah
   207fd:	48 0f 45 fa          	cmovne %rdx,%rdi
   20801:	48 89 fa             	mov    %rdi,%rdx
   20804:	80 ce 03             	or     $0x3,%dh
   20807:	a9 00 00 01 00       	test   $0x10000,%eax
   2080c:	48 0f 45 fa          	cmovne %rdx,%rdi
   20810:	48 89 fa             	mov    %rdi,%rdx
   20813:	80 ce 04             	or     $0x4,%dh
   20816:	f6 c4 40             	test   $0x40,%ah
   20819:	48 0f 45 fa          	cmovne %rdx,%rdi
   2081d:	48 89 fa             	mov    %rdi,%rdx
   20820:	80 ce 08             	or     $0x8,%dh
   20823:	f6 c4 20             	test   $0x20,%ah
   20826:	48 0f 45 fa          	cmovne %rdx,%rdi
   2082a:	48 89 fa             	mov    %rdi,%rdx
   2082d:	80 ce 20             	or     $0x20,%dh
   20830:	a9 00 00 02 00       	test   $0x20000,%eax
   20835:	48 0f 45 fa          	cmovne %rdx,%rdi
   20839:	48 89 fa             	mov    %rdi,%rdx
   2083c:	80 ce 40             	or     $0x40,%dh
   2083f:	f6 c4 80             	test   $0x80,%ah
   20842:	48 0f 45 fa          	cmovne %rdx,%rdi
   20846:	48 89 fa             	mov    %rdi,%rdx
   20849:	80 ce 80             	or     $0x80,%dh
   2084c:	a9 00 00 80 00       	test   $0x800000,%eax
   20851:	48 0f 45 fa          	cmovne %rdx,%rdi
   20855:	48 89 fa             	mov    %rdi,%rdx
   20858:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   2085f:	a9 00 00 00 10       	test   $0x10000000,%eax
   20864:	48 0f 45 fa          	cmovne %rdx,%rdi
   20868:	48 89 fa             	mov    %rdi,%rdx
   2086b:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   20872:	a9 00 00 00 20       	test   $0x20000000,%eax
   20877:	48 0f 45 fa          	cmovne %rdx,%rdi
   2087b:	48 89 fa             	mov    %rdi,%rdx
   2087e:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   20885:	48 85 c8             	test   %rcx,%rax
   20888:	48 0f 45 fa          	cmovne %rdx,%rdi
   2088c:	a9 00 00 00 08       	test   $0x8000000,%eax
   20891:	74 0d                	je     208a0 <init_ipp_cpuid+0xf0>
   20893:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   2089a:	00 00 00 
   2089d:	48 09 d7             	or     %rdx,%rdi
   208a0:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   208a7:	00 00 00 
   208aa:	48 89 fa             	mov    %rdi,%rdx
   208ad:	48 be 00 00 00 00 04 	movabs $0x400000000,%rsi
   208b4:	00 00 00 
   208b7:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   208be:	48 85 c8             	test   %rcx,%rax
   208c1:	48 0f 45 fa          	cmovne %rdx,%rdi
   208c5:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
   208cc:	00 00 00 
   208cf:	48 89 f9             	mov    %rdi,%rcx
   208d2:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
   208d9:	48 85 d0             	test   %rdx,%rax
   208dc:	48 0f 45 f9          	cmovne %rcx,%rdi
   208e0:	48 89 f9             	mov    %rdi,%rcx
   208e3:	48 81 c9 00 00 20 00 	or     $0x200000,%rcx
   208ea:	48 85 f0             	test   %rsi,%rax
   208ed:	48 be 00 00 00 00 20 	movabs $0x2000000000,%rsi
   208f4:	00 00 00 
   208f7:	48 0f 45 f9          	cmovne %rcx,%rdi
   208fb:	48 89 f9             	mov    %rdi,%rcx
   208fe:	48 81 c9 00 00 00 02 	or     $0x2000000,%rcx
   20905:	a9 00 00 00 01       	test   $0x1000000,%eax
   2090a:	48 0f 45 f9          	cmovne %rcx,%rdi
   2090e:	48 89 f9             	mov    %rdi,%rcx
   20911:	48 81 c9 00 00 00 01 	or     $0x1000000,%rcx
   20918:	48 85 f0             	test   %rsi,%rax
   2091b:	48 be 00 00 00 00 40 	movabs $0x4000000000,%rsi
   20922:	00 00 00 
   20925:	48 0f 45 f9          	cmovne %rcx,%rdi
   20929:	48 89 f9             	mov    %rdi,%rcx
   2092c:	48 81 c9 00 00 00 04 	or     $0x4000000,%rcx
   20933:	48 85 f0             	test   %rsi,%rax
   20936:	48 be 00 00 00 00 80 	movabs $0x8000000000,%rsi
   2093d:	00 00 00 
   20940:	48 0f 45 f9          	cmovne %rcx,%rdi
   20944:	48 89 f9             	mov    %rdi,%rcx
   20947:	48 81 c9 00 00 00 08 	or     $0x8000000,%rcx
   2094e:	48 85 f0             	test   %rsi,%rax
   20951:	48 be 00 00 00 00 00 	movabs $0x20000000000,%rsi
   20958:	02 00 00 
   2095b:	48 0f 45 f9          	cmovne %rcx,%rdi
   2095f:	48 89 f9             	mov    %rdi,%rcx
   20962:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
   20969:	48 85 f0             	test   %rsi,%rax
   2096c:	48 be 00 00 00 00 00 	movabs $0x10000000000,%rsi
   20973:	01 00 00 
   20976:	48 0f 45 f9          	cmovne %rcx,%rdi
   2097a:	48 89 f9             	mov    %rdi,%rcx
   2097d:	48 81 c9 00 00 00 20 	or     $0x20000000,%rcx
   20984:	48 85 f0             	test   %rsi,%rax
   20987:	48 0f 45 f9          	cmovne %rcx,%rdi
   2098b:	a9 00 00 00 40       	test   $0x40000000,%eax
   20990:	75 1e                	jne    209b0 <init_ipp_cpuid+0x200>
   20992:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   20997:	e8 7c 16 fe ff       	call   2018 <ippcpSetCpuFeatures@plt>
   2099c:	85 c0                	test   %eax,%eax
   2099e:	75 21                	jne    209c1 <init_ipp_cpuid+0x211>
   209a0:	31 c0                	xor    %eax,%eax
   209a2:	48 83 c4 08          	add    $0x8,%rsp
   209a6:	c3                   	ret    
   209a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   209ae:	00 00 
   209b0:	48 09 d7             	or     %rdx,%rdi
   209b3:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   209b8:	e8 5b 16 fe ff       	call   2018 <ippcpSetCpuFeatures@plt>
   209bd:	85 c0                	test   %eax,%eax
   209bf:	74 df                	je     209a0 <init_ipp_cpuid+0x1f0>
   209c1:	b8 02 00 00 00       	mov    $0x2,%eax
   209c6:	48 83 c4 08          	add    $0x8,%rsp
   209ca:	c3                   	ret    
   209cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   209d0:	31 c0                	xor    %eax,%eax
   209d2:	c3                   	ret    
   209d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   209d8:	b8 02 00 00 00       	mov    $0x2,%eax
   209dd:	c3                   	ret    
   209de:	66 90                	xchg   %ax,%ax

00000000000209e0 <sgx_create_report>:
   209e0:	f3 0f 1e fa          	endbr64 
   209e4:	55                   	push   %rbp
   209e5:	48 89 e5             	mov    %rsp,%rbp
   209e8:	41 57                	push   %r15
   209ea:	41 56                	push   %r14
   209ec:	41 55                	push   %r13
   209ee:	49 89 f5             	mov    %rsi,%r13
   209f1:	31 f6                	xor    %esi,%esi
   209f3:	41 54                	push   %r12
   209f5:	53                   	push   %rbx
   209f6:	48 89 d3             	mov    %rdx,%rbx
   209f9:	ba 40 00 00 00       	mov    $0x40,%edx
   209fe:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   20a05:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   20a0c:	48 89 bc 24 78 01 00 	mov    %rdi,0x178(%rsp)
   20a13:	00 
   20a14:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   20a1b:	00 
   20a1c:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   20a23:	00 
   20a24:	4c 89 ff             	mov    %r15,%rdi
   20a27:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   20a2e:	00 
   20a2f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20a36:	00 00 
   20a38:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   20a3f:	00 
   20a40:	31 c0                	xor    %eax,%eax
   20a42:	e8 69 3d ff ff       	call   147b0 <__memset>
   20a47:	ba 00 02 00 00       	mov    $0x200,%edx
   20a4c:	31 f6                	xor    %esi,%esi
   20a4e:	4c 89 f7             	mov    %r14,%rdi
   20a51:	e8 5a 3d ff ff       	call   147b0 <__memset>
   20a56:	ba b0 01 00 00       	mov    $0x1b0,%edx
   20a5b:	31 f6                	xor    %esi,%esi
   20a5d:	4c 89 e7             	mov    %r12,%rdi
   20a60:	e8 4b 3d ff ff       	call   147b0 <__memset>
   20a65:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   20a6c:	00 
   20a6d:	4d 85 c0             	test   %r8,%r8
   20a70:	74 2b                	je     20a9d <sgx_create_report+0xbd>
   20a72:	be 00 02 00 00       	mov    $0x200,%esi
   20a77:	4c 89 c7             	mov    %r8,%rdi
   20a7a:	e8 c1 82 fe ff       	call   8d40 <sgx_is_within_enclave>
   20a7f:	85 c0                	test   %eax,%eax
   20a81:	0f 84 b9 00 00 00    	je     20b40 <sgx_create_report+0x160>
   20a87:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   20a8e:	00 
   20a8f:	b9 40 00 00 00       	mov    $0x40,%ecx
   20a94:	4c 89 f7             	mov    %r14,%rdi
   20a97:	4c 89 c6             	mov    %r8,%rsi
   20a9a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   20a9d:	4d 85 ed             	test   %r13,%r13
   20aa0:	74 4d                	je     20aef <sgx_create_report+0x10f>
   20aa2:	be 40 00 00 00       	mov    $0x40,%esi
   20aa7:	4c 89 ef             	mov    %r13,%rdi
   20aaa:	e8 91 82 fe ff       	call   8d40 <sgx_is_within_enclave>
   20aaf:	85 c0                	test   %eax,%eax
   20ab1:	0f 84 89 00 00 00    	je     20b40 <sgx_create_report+0x160>
   20ab7:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
   20abd:	f3 41 0f 6f 4d 10    	movdqu 0x10(%r13),%xmm1
   20ac3:	f3 41 0f 6f 55 20    	movdqu 0x20(%r13),%xmm2
   20ac9:	f3 41 0f 6f 5d 30    	movdqu 0x30(%r13),%xmm3
   20acf:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   20ad6:	00 
   20ad7:	0f 29 8c 24 90 01 00 	movaps %xmm1,0x190(%rsp)
   20ade:	00 
   20adf:	0f 29 94 24 a0 01 00 	movaps %xmm2,0x1a0(%rsp)
   20ae6:	00 
   20ae7:	0f 29 9c 24 b0 01 00 	movaps %xmm3,0x1b0(%rsp)
   20aee:	00 
   20aef:	48 85 db             	test   %rbx,%rbx
   20af2:	74 4c                	je     20b40 <sgx_create_report+0x160>
   20af4:	be b0 01 00 00       	mov    $0x1b0,%esi
   20af9:	48 89 df             	mov    %rbx,%rdi
   20afc:	e8 3f 82 fe ff       	call   8d40 <sgx_is_within_enclave>
   20b01:	85 c0                	test   %eax,%eax
   20b03:	74 3b                	je     20b40 <sgx_create_report+0x160>
   20b05:	4c 89 e2             	mov    %r12,%rdx
   20b08:	4c 89 fe             	mov    %r15,%rsi
   20b0b:	4c 89 f7             	mov    %r14,%rdi
   20b0e:	e8 58 0a 00 00       	call   2156b <do_ereport>
   20b13:	41 89 c0             	mov    %eax,%r8d
   20b16:	b8 01 00 00 00       	mov    $0x1,%eax
   20b1b:	45 85 c0             	test   %r8d,%r8d
   20b1e:	75 25                	jne    20b45 <sgx_create_report+0x165>
   20b20:	31 c0                	xor    %eax,%eax
   20b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20b28:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
   20b2c:	48 89 14 c3          	mov    %rdx,(%rbx,%rax,8)
   20b30:	48 83 c0 01          	add    $0x1,%rax
   20b34:	48 83 f8 36          	cmp    $0x36,%rax
   20b38:	75 ee                	jne    20b28 <sgx_create_report+0x148>
   20b3a:	31 c0                	xor    %eax,%eax
   20b3c:	eb 07                	jmp    20b45 <sgx_create_report+0x165>
   20b3e:	66 90                	xchg   %ax,%ax
   20b40:	b8 02 00 00 00       	mov    $0x2,%eax
   20b45:	48 8b 8c 24 f8 07 00 	mov    0x7f8(%rsp),%rcx
   20b4c:	00 
   20b4d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   20b54:	00 00 
   20b56:	75 0f                	jne    20b67 <sgx_create_report+0x187>
   20b58:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   20b5c:	5b                   	pop    %rbx
   20b5d:	41 5c                	pop    %r12
   20b5f:	41 5d                	pop    %r13
   20b61:	41 5e                	pop    %r14
   20b63:	41 5f                	pop    %r15
   20b65:	5d                   	pop    %rbp
   20b66:	c3                   	ret    
   20b67:	e8 54 ee fe ff       	call   f9c0 <__stack_chk_fail>
   20b6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020b70 <sgx_self_report>:
   20b70:	f3 0f 1e fa          	endbr64 
   20b74:	48 83 3d f4 ac 01 00 	cmpq   $0x0,0x1acf4(%rip)        # 3b870 <_ZZ15sgx_self_reportE7_report+0x30>
   20b7b:	00 
   20b7c:	74 12                	je     20b90 <sgx_self_report+0x20>
   20b7e:	48 8d 05 bb ac 01 00 	lea    0x1acbb(%rip),%rax        # 3b840 <_ZZ15sgx_self_reportE7_report>
   20b85:	c3                   	ret    
   20b86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20b8d:	00 00 00 
   20b90:	48 83 ec 08          	sub    $0x8,%rsp
   20b94:	48 8d 3d 95 ac 01 00 	lea    0x1ac95(%rip),%rdi        # 3b830 <_ZZ15sgx_self_reportE11report_lock>
   20b9b:	e8 20 b0 fe ff       	call   bbc0 <sgx_spin_lock>
   20ba0:	48 83 3d c8 ac 01 00 	cmpq   $0x0,0x1acc8(%rip)        # 3b870 <_ZZ15sgx_self_reportE7_report+0x30>
   20ba7:	00 
   20ba8:	74 1e                	je     20bc8 <sgx_self_report+0x58>
   20baa:	48 8d 3d 7f ac 01 00 	lea    0x1ac7f(%rip),%rdi        # 3b830 <_ZZ15sgx_self_reportE11report_lock>
   20bb1:	e8 7a b0 fe ff       	call   bc30 <sgx_spin_unlock>
   20bb6:	48 8d 05 83 ac 01 00 	lea    0x1ac83(%rip),%rax        # 3b840 <_ZZ15sgx_self_reportE7_report>
   20bbd:	48 83 c4 08          	add    $0x8,%rsp
   20bc1:	c3                   	ret    
   20bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20bc8:	48 8d 15 71 ac 01 00 	lea    0x1ac71(%rip),%rdx        # 3b840 <_ZZ15sgx_self_reportE7_report>
   20bcf:	31 f6                	xor    %esi,%esi
   20bd1:	31 ff                	xor    %edi,%edi
   20bd3:	e8 08 fe ff ff       	call   209e0 <sgx_create_report>
   20bd8:	eb d0                	jmp    20baa <sgx_self_report+0x3a>
   20bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020be0 <getpagesize>:
   20be0:	f3 0f 1e fa          	endbr64 
   20be4:	b8 00 10 00 00       	mov    $0x1000,%eax
   20be9:	c3                   	ret    
   20bea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020bf0 <labs>:
   20bf0:	f3 0f 1e fa          	endbr64 
   20bf4:	48 89 f8             	mov    %rdi,%rax
   20bf7:	48 99                	cqto   
   20bf9:	48 31 d0             	xor    %rdx,%rax
   20bfc:	48 29 d0             	sub    %rdx,%rax
   20bff:	c3                   	ret    

Disassembly of section .nipx:

0000000000020c00 <init_enclave>:
   20c00:	f3 0f 1e fa          	endbr64 
   20c04:	41 55                	push   %r13
   20c06:	41 54                	push   %r12
   20c08:	55                   	push   %rbp
   20c09:	53                   	push   %rbx
   20c0a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   20c11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20c18:	00 00 
   20c1a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   20c21:	00 
   20c22:	31 c0                	xor    %eax,%eax
   20c24:	48 85 ff             	test   %rdi,%rdi
   20c27:	0f 84 c3 02 00 00    	je     20ef0 <init_enclave+0x2f0>
   20c2d:	48 89 f3             	mov    %rsi,%rbx
   20c30:	48 85 f6             	test   %rsi,%rsi
   20c33:	0f 84 b7 02 00 00    	je     20ef0 <init_enclave+0x2f0>
   20c39:	48 83 3d 97 b3 00 00 	cmpq   $0x0,0xb397(%rip)        # 2bfd8 <_Z9pcl_entryPvS_>
   20c40:	00 
   20c41:	49 89 fc             	mov    %rdi,%r12
   20c44:	74 10                	je     20c56 <init_enclave+0x56>
   20c46:	0f ae e8             	lfence 
   20c49:	e8 c2 13 fe ff       	call   2010 <_Z9pcl_entryPvS_@plt>
   20c4e:	85 c0                	test   %eax,%eax
   20c50:	0f 85 9a 02 00 00    	jne    20ef0 <init_enclave+0x2f0>
   20c56:	4c 89 e7             	mov    %r12,%rdi
   20c59:	e8 42 a5 fe ff       	call   b1a0 <relocate_enclave>
   20c5e:	41 89 c4             	mov    %eax,%r12d
   20c61:	85 c0                	test   %eax,%eax
   20c63:	0f 85 87 02 00 00    	jne    20ef0 <init_enclave+0x2f0>
   20c69:	e8 c4 05 00 00       	call   21232 <get_enclave_base>
   20c6e:	48 8d 15 4b 2d 00 00 	lea    0x2d4b(%rip),%rdx        # 239c0 <g_global_data>
   20c75:	48 89 05 94 b0 00 00 	mov    %rax,0xb094(%rip)        # 2bd10 <g_enclave_base>
   20c7c:	48 8b 8a 90 06 00 00 	mov    0x690(%rdx),%rcx
   20c83:	48 89 0d 7e b0 00 00 	mov    %rcx,0xb07e(%rip)        # 2bd08 <g_enclave_size>
   20c8a:	48 8b 8a 80 06 00 00 	mov    0x680(%rdx),%rcx
   20c91:	48 85 c9             	test   %rcx,%rcx
   20c94:	74 1e                	je     20cb4 <init_enclave+0xb4>
   20c96:	48 8b 8a 80 06 00 00 	mov    0x680(%rdx),%rcx
   20c9d:	48 39 c8             	cmp    %rcx,%rax
   20ca0:	0f 85 54 02 00 00    	jne    20efa <init_enclave+0x2fa>
   20ca6:	48 8b 82 88 06 00 00 	mov    0x688(%rdx),%rax
   20cad:	48 89 05 5c b0 00 00 	mov    %rax,0xb05c(%rip)        # 2bd10 <g_enclave_base>
   20cb4:	be b0 00 00 00       	mov    $0xb0,%esi
   20cb9:	48 89 df             	mov    %rbx,%rdi
   20cbc:	e8 df 80 fe ff       	call   8da0 <sgx_is_outside_enclave>
   20cc1:	85 c0                	test   %eax,%eax
   20cc3:	0f 84 27 02 00 00    	je     20ef0 <init_enclave+0x2f0>
   20cc9:	0f ae e8             	lfence 
   20ccc:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   20cd0:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   20cd5:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   20cda:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   20cdf:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   20ce4:	0f 29 04 24          	movaps %xmm0,(%rsp)
   20ce8:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   20ced:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   20cf2:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   20cf7:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   20cfc:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   20d03:	00 
   20d04:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   20d09:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   20d10:	00 
   20d11:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   20d18:	00 
   20d19:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   20d1e:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   20d23:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   20d28:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   20d2d:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   20d32:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   20d39:	00 
   20d3a:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   20d41:	00 
   20d42:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   20d49:	00 
   20d4a:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   20d4f:	0f 85 3b 01 00 00    	jne    20e90 <init_enclave+0x290>
   20d55:	ba 14 00 00 00       	mov    $0x14,%edx
   20d5a:	b9 9c 00 00 00       	mov    $0x9c,%ecx
   20d5f:	31 c0                	xor    %eax,%eax
   20d61:	48 01 e1             	add    %rsp,%rcx
   20d64:	0f 1f 40 00          	nopl   0x0(%rax)
   20d68:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
   20d6c:	48 83 c0 01          	add    $0x1,%rax
   20d70:	48 39 d0             	cmp    %rdx,%rax
   20d73:	72 f3                	jb     20d68 <init_enclave+0x168>
   20d75:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   20d7c:	89 05 7e af 00 00    	mov    %eax,0xaf7e(%rip)        # 2bd00 <g_cpu_core_num>
   20d82:	8b 44 24 08          	mov    0x8(%rsp),%eax
   20d86:	89 05 8c af 00 00    	mov    %eax,0xaf8c(%rip)        # 2bd18 <g_sdk_version>
   20d8c:	85 c0                	test   %eax,%eax
   20d8e:	0f 85 2c 01 00 00    	jne    20ec0 <init_enclave+0x2c0>
   20d94:	c7 05 7e af 00 00 00 	movl   $0x0,0xaf7e(%rip)        # 2bd1c <EDMM_supported>
   20d9b:	00 00 00 
   20d9e:	e8 1d 9b fe ff       	call   a8c0 <get_heap_min_size>
   20da3:	49 89 c5             	mov    %rax,%r13
   20da6:	e8 a5 9a fe ff       	call   a850 <get_heap_size>
   20dab:	48 89 c5             	mov    %rax,%rbp
   20dae:	e8 7d 9a fe ff       	call   a830 <get_heap_base>
   20db3:	44 89 e1             	mov    %r12d,%ecx
   20db6:	4c 89 ea             	mov    %r13,%rdx
   20db9:	48 89 ee             	mov    %rbp,%rsi
   20dbc:	48 89 c7             	mov    %rax,%rdi
   20dbf:	e8 2c ac fe ff       	call   b9f0 <heap_init>
   20dc4:	85 c0                	test   %eax,%eax
   20dc6:	0f 85 24 01 00 00    	jne    20ef0 <init_enclave+0x2f0>
   20dcc:	e8 cf a1 fe ff       	call   afa0 <get_xfeature_state>
   20dd1:	48 8b 3c 24          	mov    (%rsp),%rdi
   20dd5:	48 89 c2             	mov    %rax,%rdx
   20dd8:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   20ddf:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   20de4:	48 0f 45 bc 24 a4 00 	cmovne 0xa4(%rsp),%rdi
   20deb:	00 00 
   20ded:	83 3d 24 af 00 00 01 	cmpl   $0x1,0xaf24(%rip)        # 2bd18 <g_sdk_version>
   20df4:	7f 0f                	jg     20e05 <init_enclave+0x205>
   20df6:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   20dfd:	00 00 
   20dff:	0f 84 db 00 00 00    	je     20ee0 <init_enclave+0x2e0>
   20e05:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   20e0a:	e8 c1 7d fe ff       	call   8bd0 <init_optimized_libs>
   20e0f:	85 c0                	test   %eax,%eax
   20e11:	0f 85 d9 00 00 00    	jne    20ef0 <init_enclave+0x2f0>
   20e17:	e8 24 9b fe ff       	call   a940 <get_rsrv_size>
   20e1c:	48 85 c0             	test   %rax,%rax
   20e1f:	74 2b                	je     20e4c <init_enclave+0x24c>
   20e21:	e8 8a 9b fe ff       	call   a9b0 <get_rsrv_min_size>
   20e26:	49 89 c4             	mov    %rax,%r12
   20e29:	e8 12 9b fe ff       	call   a940 <get_rsrv_size>
   20e2e:	48 89 c5             	mov    %rax,%rbp
   20e31:	e8 ea 9a fe ff       	call   a920 <get_rsrv_base>
   20e36:	4c 89 e2             	mov    %r12,%rdx
   20e39:	48 89 ee             	mov    %rbp,%rsi
   20e3c:	48 89 c7             	mov    %rax,%rdi
   20e3f:	e8 fc f2 fe ff       	call   10140 <rsrv_mem_init>
   20e44:	85 c0                	test   %eax,%eax
   20e46:	0f 85 a4 00 00 00    	jne    20ef0 <init_enclave+0x2f0>
   20e4c:	be 08 00 00 00       	mov    $0x8,%esi
   20e51:	48 8d 3d a0 ae 00 00 	lea    0xaea0(%rip),%rdi        # 2bcf8 <__intel_security_cookie>
   20e58:	e8 e3 80 fe ff       	call   8f40 <sgx_read_rand>
   20e5d:	85 c0                	test   %eax,%eax
   20e5f:	0f 95 c0             	setne  %al
   20e62:	0f b6 c0             	movzbl %al,%eax
   20e65:	f7 d8                	neg    %eax
   20e67:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   20e6e:	00 
   20e6f:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   20e76:	00 00 
   20e78:	0f 85 81 00 00 00    	jne    20eff <init_enclave+0x2ff>
   20e7e:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   20e85:	5b                   	pop    %rbx
   20e86:	5d                   	pop    %rbp
   20e87:	41 5c                	pop    %r12
   20e89:	41 5d                	pop    %r13
   20e8b:	c3                   	ret    
   20e8c:	0f 1f 40 00          	nopl   0x0(%rax)
   20e90:	ba b0 00 00 00       	mov    $0xb0,%edx
   20e95:	48 81 bc 24 9c 00 00 	cmpq   $0xb0,0x9c(%rsp)
   20e9c:	00 b0 00 00 00 
   20ea1:	48 89 d1             	mov    %rdx,%rcx
   20ea4:	48 0f 46 8c 24 9c 00 	cmovbe 0x9c(%rsp),%rcx
   20eab:	00 00 
   20ead:	48 29 ca             	sub    %rcx,%rdx
   20eb0:	0f 85 a9 fe ff ff    	jne    20d5f <init_enclave+0x15f>
   20eb6:	e9 ba fe ff ff       	jmp    20d75 <init_enclave+0x175>
   20ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20ec0:	7e 2e                	jle    20ef0 <init_enclave+0x2f0>
   20ec2:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
   20ec7:	31 f6                	xor    %esi,%esi
   20ec9:	e8 62 9b fe ff       	call   aa30 <feature_supported>
   20ece:	89 05 48 ae 00 00    	mov    %eax,0xae48(%rip)        # 2bd1c <EDMM_supported>
   20ed4:	41 89 c4             	mov    %eax,%r12d
   20ed7:	e9 c2 fe ff ff       	jmp    20d9e <init_enclave+0x19e>
   20edc:	0f 1f 40 00          	nopl   0x0(%rax)
   20ee0:	31 f6                	xor    %esi,%esi
   20ee2:	e8 e9 7c fe ff       	call   8bd0 <init_optimized_libs>
   20ee7:	85 c0                	test   %eax,%eax
   20ee9:	0f 84 28 ff ff ff    	je     20e17 <init_enclave+0x217>
   20eef:	90                   	nop
   20ef0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   20ef5:	e9 6d ff ff ff       	jmp    20e67 <init_enclave+0x267>
   20efa:	e8 05 07 00 00       	call   21604 <abort>
   20eff:	e8 bc ea fe ff       	call   f9c0 <__stack_chk_fail>
   20f04:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   20f0b:	00 00 00 00 
   20f0f:	90                   	nop

0000000000020f10 <do_init_enclave>:
   20f10:	f3 0f 1e fa          	endbr64 
   20f14:	41 54                	push   %r12
   20f16:	49 89 f4             	mov    %rsi,%r12
   20f19:	55                   	push   %rbp
   20f1a:	48 89 fd             	mov    %rdi,%rbp
   20f1d:	53                   	push   %rbx
   20f1e:	e8 0f 03 00 00       	call   21232 <get_enclave_base>
   20f23:	48 89 c3             	mov    %rax,%rbx
   20f26:	e8 32 03 00 00       	call   2125d <lock_enclave>
   20f2b:	85 c0                	test   %eax,%eax
   20f2d:	74 11                	je     20f40 <do_init_enclave+0x30>
   20f2f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   20f35:	5b                   	pop    %rbx
   20f36:	5d                   	pop    %rbp
   20f37:	44 89 e0             	mov    %r12d,%eax
   20f3a:	41 5c                	pop    %r12
   20f3c:	c3                   	ret    
   20f3d:	0f 1f 00             	nopl   (%rax)
   20f40:	48 89 ee             	mov    %rbp,%rsi
   20f43:	48 89 df             	mov    %rbx,%rdi
   20f46:	e8 b5 fc ff ff       	call   20c00 <init_enclave>
   20f4b:	85 c0                	test   %eax,%eax
   20f4d:	75 e0                	jne    20f2f <do_init_enclave+0x1f>
   20f4f:	4c 89 e7             	mov    %r12,%rdi
   20f52:	be 01 00 00 00       	mov    $0x1,%esi
   20f57:	e8 d4 8f fe ff       	call   9f30 <do_init_thread>
   20f5c:	41 89 c4             	mov    %eax,%r12d
   20f5f:	85 c0                	test   %eax,%eax
   20f61:	75 cc                	jne    20f2f <do_init_enclave+0x1f>
   20f63:	8b 05 b3 ad 00 00    	mov    0xadb3(%rip),%eax        # 2bd1c <EDMM_supported>
   20f69:	48 8d 2d 50 2a 00 00 	lea    0x2a50(%rip),%rbp        # 239c0 <g_global_data>
   20f70:	85 c0                	test   %eax,%eax
   20f72:	74 5c                	je     20fd0 <do_init_enclave+0xc0>
   20f74:	8b b5 38 01 00 00    	mov    0x138(%rbp),%esi
   20f7a:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
   20f81:	31 d2                	xor    %edx,%edx
   20f83:	48 c1 e6 05          	shl    $0x5,%rsi
   20f87:	48 01 fe             	add    %rdi,%rsi
   20f8a:	e8 f1 86 fe ff       	call   9680 <_Z18accept_post_removePVK9_layout_tS1_m>
   20f8f:	85 c0                	test   %eax,%eax
   20f91:	75 9c                	jne    20f2f <do_init_enclave+0x1f>
   20f93:	e8 28 99 fe ff       	call   a8c0 <get_heap_min_size>
   20f98:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   20f9c:	31 d2                	xor    %edx,%edx
   20f9e:	48 89 c6             	mov    %rax,%rsi
   20fa1:	48 89 c1             	mov    %rax,%rcx
   20fa4:	48 01 df             	add    %rbx,%rdi
   20fa7:	e8 64 e8 fe ff       	call   f810 <memset_s>
   20fac:	48 8d 05 95 ad 00 00 	lea    0xad95(%rip),%rax        # 2bd48 <rsrv_mem_min_size>
   20fb3:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   20fb7:	31 d2                	xor    %edx,%edx
   20fb9:	48 8b 30             	mov    (%rax),%rsi
   20fbc:	48 01 df             	add    %rbx,%rdi
   20fbf:	48 89 f1             	mov    %rsi,%rcx
   20fc2:	e8 49 e8 fe ff       	call   f810 <memset_s>
   20fc7:	eb 33                	jmp    20ffc <do_init_enclave+0xec>
   20fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20fd0:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   20fd4:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   20fd8:	31 d2                	xor    %edx,%edx
   20fda:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   20fde:	48 01 df             	add    %rbx,%rdi
   20fe1:	e8 2a e8 fe ff       	call   f810 <memset_s>
   20fe6:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
   20fea:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   20fee:	31 d2                	xor    %edx,%edx
   20ff0:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   20ff4:	48 01 df             	add    %rbx,%rdi
   20ff7:	e8 14 e8 fe ff       	call   f810 <memset_s>
   20ffc:	c7 05 da b2 00 00 02 	movl   $0x2,0xb2da(%rip)        # 2c2e0 <g_enclave_state>
   21003:	00 00 00 
   21006:	44 89 e0             	mov    %r12d,%eax
   21009:	5b                   	pop    %rbx
   2100a:	5d                   	pop    %rbp
   2100b:	41 5c                	pop    %r12
   2100d:	c3                   	ret    
   2100e:	66 90                	xchg   %ax,%ax

0000000000021010 <sgx_is_enclave_crashed>:
   21010:	f3 0f 1e fa          	endbr64 
   21014:	48 83 ec 08          	sub    $0x8,%rsp
   21018:	e8 21 02 00 00       	call   2123e <get_enclave_state>
   2101d:	83 f8 03             	cmp    $0x3,%eax
   21020:	0f 94 c0             	sete   %al
   21023:	48 83 c4 08          	add    $0x8,%rsp
   21027:	0f b6 c0             	movzbl %al,%eax
   2102a:	c3                   	ret    
   2102b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021030 <enter_enclave>:
   21030:	f3 0f 1e fa          	endbr64 
   21034:	41 55                	push   %r13
   21036:	49 89 d5             	mov    %rdx,%r13
   21039:	41 54                	push   %r12
   2103b:	49 89 f4             	mov    %rsi,%r12
   2103e:	55                   	push   %rbp
   2103f:	89 fd                	mov    %edi,%ebp
   21041:	53                   	push   %rbx
   21042:	89 cb                	mov    %ecx,%ebx
   21044:	48 83 ec 18          	sub    $0x18,%rsp
   21048:	e8 c3 ff ff ff       	call   21010 <sgx_is_enclave_crashed>
   2104d:	85 c0                	test   %eax,%eax
   2104f:	75 6f                	jne    210c0 <enter_enclave+0x90>
   21051:	83 fd ff             	cmp    $0xffffffff,%ebp
   21054:	75 2a                	jne    21080 <enter_enclave+0x50>
   21056:	85 db                	test   %ebx,%ebx
   21058:	0f 84 2a 01 00 00    	je     21188 <enter_enclave+0x158>
   2105e:	bf 03 00 00 00       	mov    $0x3,%edi
   21063:	e8 e7 01 00 00       	call   2124f <set_enclave_state>
   21068:	b8 01 00 00 00       	mov    $0x1,%eax
   2106d:	48 83 c4 18          	add    $0x18,%rsp
   21071:	5b                   	pop    %rbx
   21072:	5d                   	pop    %rbp
   21073:	41 5c                	pop    %r12
   21075:	41 5d                	pop    %r13
   21077:	c3                   	ret    
   21078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2107f:	00 
   21080:	e8 b9 01 00 00       	call   2123e <get_enclave_state>
   21085:	83 f8 02             	cmp    $0x2,%eax
   21088:	75 d4                	jne    2105e <enter_enclave+0x2e>
   2108a:	85 db                	test   %ebx,%ebx
   2108c:	0f 85 bb 00 00 00    	jne    2114d <enter_enclave+0x11d>
   21092:	85 ed                	test   %ebp,%ebp
   21094:	79 3a                	jns    210d0 <enter_enclave+0xa0>
   21096:	83 fd fa             	cmp    $0xfffffffa,%ebp
   21099:	74 35                	je     210d0 <enter_enclave+0xa0>
   2109b:	83 fd fe             	cmp    $0xfffffffe,%ebp
   2109e:	0f 84 fc 00 00 00    	je     211a0 <enter_enclave+0x170>
   210a4:	83 fd fc             	cmp    $0xfffffffc,%ebp
   210a7:	0f 84 03 01 00 00    	je     211b0 <enter_enclave+0x180>
   210ad:	83 fd fb             	cmp    $0xfffffffb,%ebp
   210b0:	75 ac                	jne    2105e <enter_enclave+0x2e>
   210b2:	4c 89 ef             	mov    %r13,%rdi
   210b5:	e8 36 93 fe ff       	call   a3f0 <do_uninit_enclave>
   210ba:	89 c3                	mov    %eax,%ebx
   210bc:	eb 79                	jmp    21137 <enter_enclave+0x107>
   210be:	66 90                	xchg   %ax,%ax
   210c0:	48 83 c4 18          	add    $0x18,%rsp
   210c4:	b8 06 10 00 00       	mov    $0x1006,%eax
   210c9:	5b                   	pop    %rbx
   210ca:	5d                   	pop    %rbp
   210cb:	41 5c                	pop    %r12
   210cd:	41 5d                	pop    %r13
   210cf:	c3                   	ret    
   210d0:	e8 a8 01 00 00       	call   2127d <get_thread_data>
   210d5:	48 85 c0             	test   %rax,%rax
   210d8:	0f 84 e2 00 00 00    	je     211c0 <enter_enclave+0x190>
   210de:	48 8b 58 08          	mov    0x8(%rax),%rbx
   210e2:	48 39 58 10          	cmp    %rbx,0x10(%rax)
   210e6:	75 40                	jne    21128 <enter_enclave+0xf8>
   210e8:	48 8d 05 d1 28 00 00 	lea    0x28d1(%rip),%rax        # 239c0 <g_global_data>
   210ef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   210f3:	48 85 d2             	test   %rdx,%rdx
   210f6:	74 30                	je     21128 <enter_enclave+0xf8>
   210f8:	48 8b 58 50          	mov    0x50(%rax),%rbx
   210fc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   21101:	be 08 00 00 00       	mov    $0x8,%esi
   21106:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   2110d:	00 00 
   2110f:	4c 01 eb             	add    %r13,%rbx
   21112:	e8 29 7e fe ff       	call   8f40 <sgx_read_rand>
   21117:	85 c0                	test   %eax,%eax
   21119:	0f 85 ad 00 00 00    	jne    211cc <enter_enclave+0x19c>
   2111f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21124:	48 89 43 28          	mov    %rax,0x28(%rbx)
   21128:	4c 89 ea             	mov    %r13,%rdx
   2112b:	4c 89 e6             	mov    %r12,%rsi
   2112e:	89 ef                	mov    %ebp,%edi
   21130:	e8 db 8f fe ff       	call   a110 <do_ecall>
   21135:	89 c3                	mov    %eax,%ebx
   21137:	89 d8                	mov    %ebx,%eax
   21139:	83 fb 01             	cmp    $0x1,%ebx
   2113c:	0f 84 1c ff ff ff    	je     2105e <enter_enclave+0x2e>
   21142:	48 83 c4 18          	add    $0x18,%rsp
   21146:	5b                   	pop    %rbx
   21147:	5d                   	pop    %rbp
   21148:	41 5c                	pop    %r12
   2114a:	41 5d                	pop    %r13
   2114c:	c3                   	ret    
   2114d:	83 fb 01             	cmp    $0x1,%ebx
   21150:	0f 85 08 ff ff ff    	jne    2105e <enter_enclave+0x2e>
   21156:	83 fd fd             	cmp    $0xfffffffd,%ebp
   21159:	0f 85 ff fe ff ff    	jne    2105e <enter_enclave+0x2e>
   2115f:	4c 89 ef             	mov    %r13,%rdi
   21162:	e8 49 9b fe ff       	call   acb0 <trts_handle_exception>
   21167:	4c 89 ef             	mov    %r13,%rdi
   2116a:	89 c3                	mov    %eax,%ebx
   2116c:	e8 ff 7e fe ff       	call   9070 <check_static_stack_canary>
   21171:	41 89 c0             	mov    %eax,%r8d
   21174:	b8 09 10 00 00       	mov    $0x1009,%eax
   21179:	45 85 c0             	test   %r8d,%r8d
   2117c:	0f 85 eb fe ff ff    	jne    2106d <enter_enclave+0x3d>
   21182:	eb b3                	jmp    21137 <enter_enclave+0x107>
   21184:	0f 1f 40 00          	nopl   0x0(%rax)
   21188:	4c 89 ee             	mov    %r13,%rsi
   2118b:	4c 89 e7             	mov    %r12,%rdi
   2118e:	e8 7d fd ff ff       	call   20f10 <do_init_enclave>
   21193:	89 c3                	mov    %eax,%ebx
   21195:	eb a0                	jmp    21137 <enter_enclave+0x107>
   21197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2119e:	00 00 
   211a0:	4c 89 e7             	mov    %r12,%rdi
   211a3:	e8 28 95 fe ff       	call   a6d0 <do_oret>
   211a8:	89 c3                	mov    %eax,%ebx
   211aa:	eb 8b                	jmp    21137 <enter_enclave+0x107>
   211ac:	0f 1f 40 00          	nopl   0x0(%rax)
   211b0:	4c 89 e7             	mov    %r12,%rdi
   211b3:	e8 48 91 fe ff       	call   a300 <do_ecall_add_thread>
   211b8:	89 c3                	mov    %eax,%ebx
   211ba:	e9 78 ff ff ff       	jmp    21137 <enter_enclave+0x107>
   211bf:	90                   	nop
   211c0:	48 8d 05 f9 27 00 00 	lea    0x27f9(%rip),%rax        # 239c0 <g_global_data>
   211c7:	e9 2c ff ff ff       	jmp    210f8 <enter_enclave+0xc8>
   211cc:	e8 33 04 00 00       	call   21604 <abort>

00000000000211d1 <restore_xregs>:
   211d1:	f3 0f 1e fa          	endbr64 
   211d5:	48 89 f9             	mov    %rdi,%rcx
   211d8:	48 8d 05 05 b1 00 00 	lea    0xb105(%rip),%rax        # 2c2e4 <g_xsave_enabled>
   211df:	8b 00                	mov    (%rax),%eax
   211e1:	83 f8 00             	cmp    $0x0,%eax
   211e4:	74 16                	je     211fc <restore_xregs+0x2b>
   211e6:	48 31 c0             	xor    %rax,%rax
   211e9:	48 31 d2             	xor    %rdx,%rdx
   211ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   211f1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   211f6:	48 0f ae 29          	xrstor64 (%rcx)
   211fa:	eb 04                	jmp    21200 <restore_xregs+0x2f>
   211fc:	48 0f ae 09          	fxrstor64 (%rcx)
   21200:	c3                   	ret    

0000000000021201 <save_xregs>:
   21201:	f3 0f 1e fa          	endbr64 
   21205:	48 89 f9             	mov    %rdi,%rcx
   21208:	48 8d 05 d5 b0 00 00 	lea    0xb0d5(%rip),%rax        # 2c2e4 <g_xsave_enabled>
   2120f:	9b                   	fwait
   21210:	8b 00                	mov    (%rax),%eax
   21212:	83 f8 00             	cmp    $0x0,%eax
   21215:	74 16                	je     2122d <save_xregs+0x2c>
   21217:	48 31 c0             	xor    %rax,%rax
   2121a:	48 31 d2             	xor    %rdx,%rdx
   2121d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   21222:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   21227:	48 0f c7 21          	xsavec64 (%rcx)
   2122b:	eb 04                	jmp    21231 <save_xregs+0x30>
   2122d:	48 0f ae 01          	fxsave64 (%rcx)
   21231:	c3                   	ret    

0000000000021232 <get_enclave_base>:
   21232:	f3 0f 1e fa          	endbr64 
   21236:	48 8d 05 c3 ed fd ff 	lea    -0x2123d(%rip),%rax        # 0 <enclave.so>
   2123d:	c3                   	ret    

000000000002123e <get_enclave_state>:
   2123e:	f3 0f 1e fa          	endbr64 
   21242:	48 8d 0d 97 b0 00 00 	lea    0xb097(%rip),%rcx        # 2c2e0 <g_enclave_state>
   21249:	48 31 c0             	xor    %rax,%rax
   2124c:	8b 01                	mov    (%rcx),%eax
   2124e:	c3                   	ret    

000000000002124f <set_enclave_state>:
   2124f:	f3 0f 1e fa          	endbr64 
   21253:	48 8d 05 86 b0 00 00 	lea    0xb086(%rip),%rax        # 2c2e0 <g_enclave_state>
   2125a:	89 38                	mov    %edi,(%rax)
   2125c:	c3                   	ret    

000000000002125d <lock_enclave>:
   2125d:	f3 0f 1e fa          	endbr64 
   21261:	48 8d 15 78 b0 00 00 	lea    0xb078(%rip),%rdx        # 2c2e0 <g_enclave_state>
   21268:	48 31 c0             	xor    %rax,%rax
   2126b:	b8 00 00 00 00       	mov    $0x0,%eax
   21270:	48 31 c9             	xor    %rcx,%rcx
   21273:	b9 01 00 00 00       	mov    $0x1,%ecx
   21278:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   2127c:	c3                   	ret    

000000000002127d <get_thread_data>:
   2127d:	f3 0f 1e fa          	endbr64 
   21281:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   21288:	00 00 
   2128a:	c3                   	ret    

000000000002128b <get_stack_guard>:
   2128b:	f3 0f 1e fa          	endbr64 
   2128f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   21296:	00 00 
   21298:	c3                   	ret    

0000000000021299 <enclave_entry>:
   21299:	f3 0f 1e fa          	endbr64 
   2129d:	48 31 d2             	xor    %rdx,%rdx
   212a0:	48 01 d2             	add    %rdx,%rdx
   212a3:	fc                   	cld    
   212a4:	4d 31 c0             	xor    %r8,%r8
   212a7:	4d 31 c9             	xor    %r9,%r9
   212aa:	4d 31 d2             	xor    %r10,%r10
   212ad:	4d 31 db             	xor    %r11,%r11
   212b0:	4d 31 e4             	xor    %r12,%r12
   212b3:	4d 31 ed             	xor    %r13,%r13
   212b6:	4d 31 f6             	xor    %r14,%r14
   212b9:	4d 31 ff             	xor    %r15,%r15
   212bc:	48 83 f8 00          	cmp    $0x0,%rax
   212c0:	0f 85 d1 00 00 00    	jne    21397 <enclave_entry+0xfe>
   212c6:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   212cd:	00 00 
   212cf:	48 83 f8 00          	cmp    $0x0,%rax
   212d3:	75 0f                	jne    212e4 <enclave_entry+0x4b>
   212d5:	48 89 d8             	mov    %rbx,%rax
   212d8:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   212de:	48 2d b0 02 00 00    	sub    $0x2b0,%rax
   212e4:	48 94                	xchg   %rax,%rsp
   212e6:	51                   	push   %rcx
   212e7:	55                   	push   %rbp
   212e8:	48 89 e5             	mov    %rsp,%rbp
   212eb:	9c                   	pushf  
   212ec:	48 f7 14 24          	notq   (%rsp)
   212f0:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   212f7:	00 
   212f8:	48 f7 14 24          	notq   (%rsp)
   212fc:	9d                   	popf   
   212fd:	48 83 ec 30          	sub    $0x30,%rsp
   21301:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   21305:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   21309:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   2130d:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   21311:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   21315:	48 83 ec 20          	sub    $0x20,%rsp
   21319:	48 8d 3d 60 2d 00 00 	lea    0x2d60(%rip),%rdi        # 24080 <SYNTHETIC_STATE>
   21320:	e8 ac fe ff ff       	call   211d1 <restore_xregs>
   21325:	0f ae e8             	lfence 
   21328:	48 83 c4 20          	add    $0x20,%rsp
   2132c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   21330:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   21334:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   21338:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   2133c:	e8 ef fc ff ff       	call   21030 <enter_enclave>
   21341:	48 89 c3             	mov    %rax,%rbx
   21344:	48 8d 3d 35 2d 00 00 	lea    0x2d35(%rip),%rdi        # 24080 <SYNTHETIC_STATE>
   2134b:	e8 81 fe ff ff       	call   211d1 <restore_xregs>
   21350:	0f ae e8             	lfence 
   21353:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   2135a:	48 89 de             	mov    %rbx,%rsi
   2135d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   21361:	48 89 ec             	mov    %rbp,%rsp
   21364:	5d                   	pop    %rbp
   21365:	5b                   	pop    %rbx
   21366:	48 89 d4             	mov    %rdx,%rsp
   21369:	48 31 c9             	xor    %rcx,%rcx
   2136c:	48 31 d2             	xor    %rdx,%rdx
   2136f:	4d 31 c0             	xor    %r8,%r8
   21372:	4d 31 c9             	xor    %r9,%r9
   21375:	4d 31 d2             	xor    %r10,%r10
   21378:	4d 31 db             	xor    %r11,%r11
   2137b:	4d 31 e4             	xor    %r12,%r12
   2137e:	4d 31 ed             	xor    %r13,%r13
   21381:	4d 31 f6             	xor    %r14,%r14
   21384:	4d 31 ff             	xor    %r15,%r15
   21387:	48 01 d2             	add    %rdx,%rdx
   2138a:	fc                   	cld    
   2138b:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   21392:	0f 01 d7             	enclu  
   21395:	0f 0b                	ud2    
   21397:	48 89 c2             	mov    %rax,%rdx
   2139a:	48 89 d8             	mov    %rbx,%rax
   2139d:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   213a3:	e9 3c ff ff ff       	jmp    212e4 <enclave_entry+0x4b>
   213a8:	0f 0b                	ud2    

00000000000213aa <do_ocall>:
   213aa:	f3 0f 1e fa          	endbr64 
   213ae:	55                   	push   %rbp
   213af:	48 89 e5             	mov    %rsp,%rbp
   213b2:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   213b6:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   213ba:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   213c1:	00 00 
   213c3:	48 29 c4             	sub    %rax,%rsp
   213c6:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   213cd:	48 f7 d0             	not    %rax
   213d0:	48 21 c4             	and    %rax,%rsp
   213d3:	48 89 e1             	mov    %rsp,%rcx
   213d6:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   213dd:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   213e4:	00 
   213e5:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   213ea:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   213ef:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   213f4:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   213f9:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   213fe:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   21403:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   21408:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   2140d:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   21414:	00 
   21415:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   2141c:	00 00 
   2141e:	48 89 c1             	mov    %rax,%rcx
   21421:	48 c1 e9 02          	shr    $0x2,%rcx
   21425:	48 31 c0             	xor    %rax,%rax
   21428:	fc                   	cld    
   21429:	f3 ab                	rep stos %eax,%es:(%rdi)
   2142b:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   21432:	00 
   21433:	48 89 3c 24          	mov    %rdi,(%rsp)
   21437:	e8 c5 fd ff ff       	call   21201 <save_xregs>
   2143c:	48 8d 3d 3d 2c 00 00 	lea    0x2c3d(%rip),%rdi        # 24080 <SYNTHETIC_STATE>
   21443:	48 89 3c 24          	mov    %rdi,(%rsp)
   21447:	e8 85 fd ff ff       	call   211d1 <restore_xregs>
   2144c:	0f ae e8             	lfence 
   2144f:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   21454:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   21459:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   21460:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   21465:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   2146a:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   21471:	00 00 
   21473:	48 89 c3             	mov    %rax,%rbx
   21476:	48 89 e7             	mov    %rsp,%rdi
   21479:	e8 12 92 fe ff       	call   a690 <update_ocall_lastsp>
   2147e:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   21483:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   21488:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   2148c:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   21493:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   2149a:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   2149e:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   214a5:	48 31 c9             	xor    %rcx,%rcx
   214a8:	48 31 d2             	xor    %rdx,%rdx
   214ab:	4d 31 c0             	xor    %r8,%r8
   214ae:	4d 31 c9             	xor    %r9,%r9
   214b1:	4d 31 d2             	xor    %r10,%r10
   214b4:	4d 31 db             	xor    %r11,%r11
   214b7:	4d 31 e4             	xor    %r12,%r12
   214ba:	4d 31 ed             	xor    %r13,%r13
   214bd:	4d 31 f6             	xor    %r14,%r14
   214c0:	4d 31 ff             	xor    %r15,%r15
   214c3:	48 01 d2             	add    %rdx,%rdx
   214c6:	fc                   	cld    
   214c7:	0f 01 d7             	enclu  

00000000000214ca <__morestack>:
   214ca:	f3 0f 1e fa          	endbr64 
   214ce:	55                   	push   %rbp
   214cf:	48 89 e5             	mov    %rsp,%rbp
   214d2:	48 83 ec 20          	sub    $0x20,%rsp
   214d6:	e8 cf fe ff ff       	call   213aa <do_ocall>
   214db:	c9                   	leave  
   214dc:	c3                   	ret    

00000000000214dd <asm_oret>:
   214dd:	f3 0f 1e fa          	endbr64 
   214e1:	48 89 e3             	mov    %rsp,%rbx
   214e4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   214e9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   214ee:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   214f2:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   214f9:	00 
   214fa:	e8 d2 fc ff ff       	call   211d1 <restore_xregs>
   214ff:	0f ae e8             	lfence 
   21502:	48 31 c0             	xor    %rax,%rax
   21505:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   2150a:	48 29 f9             	sub    %rdi,%rcx
   2150d:	48 83 e9 08          	sub    $0x8,%rcx
   21511:	48 c1 e9 02          	shr    $0x2,%rcx
   21515:	fc                   	cld    
   21516:	f3 ab                	rep stos %eax,%es:(%rdi)
   21518:	48 8b 43 10          	mov    0x10(%rbx),%rax
   2151c:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   21521:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   21526:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   2152b:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   21530:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   21535:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   2153a:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   2153f:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   21544:	48 89 ec             	mov    %rbp,%rsp
   21547:	5d                   	pop    %rbp
   21548:	c3                   	ret    
   21549:	0f 0b                	ud2    

000000000002154b <do_egetkey>:
   2154b:	f3 0f 1e fa          	endbr64 
   2154f:	53                   	push   %rbx
   21550:	51                   	push   %rcx
   21551:	52                   	push   %rdx
   21552:	48 89 fb             	mov    %rdi,%rbx
   21555:	48 89 f1             	mov    %rsi,%rcx
   21558:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   2155f:	0f 01 d7             	enclu  
   21562:	74 03                	je     21567 <do_egetkey+0x1c>
   21564:	48 31 c0             	xor    %rax,%rax
   21567:	5a                   	pop    %rdx
   21568:	59                   	pop    %rcx
   21569:	5b                   	pop    %rbx
   2156a:	c3                   	ret    

000000000002156b <do_ereport>:
   2156b:	f3 0f 1e fa          	endbr64 
   2156f:	53                   	push   %rbx
   21570:	51                   	push   %rcx
   21571:	52                   	push   %rdx
   21572:	48 89 fb             	mov    %rdi,%rbx
   21575:	48 89 f1             	mov    %rsi,%rcx
   21578:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   2157f:	f8                   	clc    

0000000000021580 <Lereport_inst>:
   21580:	0f 01 d7             	enclu  
   21583:	0f 92 c0             	setb   %al
   21586:	5a                   	pop    %rdx
   21587:	59                   	pop    %rcx
   21588:	5b                   	pop    %rbx
   21589:	c3                   	ret    

000000000002158a <do_everifyreport2>:
   2158a:	f3 0f 1e fa          	endbr64 
   2158e:	53                   	push   %rbx
   2158f:	51                   	push   %rcx
   21590:	52                   	push   %rdx
   21591:	48 89 fb             	mov    %rdi,%rbx
   21594:	48 89 f1             	mov    %rsi,%rcx
   21597:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

000000000002159e <Leverifyreport2_inst>:
   2159e:	0f 01 d7             	enclu  
   215a1:	74 03                	je     215a6 <Leverifyreport2_inst+0x8>
   215a3:	48 31 c0             	xor    %rax,%rax
   215a6:	5a                   	pop    %rdx
   215a7:	59                   	pop    %rcx
   215a8:	5b                   	pop    %rbx
   215a9:	c3                   	ret    

00000000000215aa <do_eaccept>:
   215aa:	f3 0f 1e fa          	endbr64 
   215ae:	53                   	push   %rbx
   215af:	51                   	push   %rcx
   215b0:	52                   	push   %rdx
   215b1:	48 89 fb             	mov    %rdi,%rbx
   215b4:	48 89 f1             	mov    %rsi,%rcx
   215b7:	b8 05 00 00 00       	mov    $0x5,%eax
   215bc:	0f 01 d7             	enclu  
   215bf:	83 f8 00             	cmp    $0x0,%eax
   215c2:	75 40                	jne    21604 <abort>
   215c4:	5a                   	pop    %rdx
   215c5:	59                   	pop    %rcx
   215c6:	5b                   	pop    %rbx
   215c7:	c3                   	ret    

00000000000215c8 <do_emodpe>:
   215c8:	f3 0f 1e fa          	endbr64 
   215cc:	53                   	push   %rbx
   215cd:	51                   	push   %rcx
   215ce:	52                   	push   %rdx
   215cf:	48 89 fb             	mov    %rdi,%rbx
   215d2:	48 89 f1             	mov    %rsi,%rcx
   215d5:	b8 06 00 00 00       	mov    $0x6,%eax
   215da:	0f 01 d7             	enclu  
   215dd:	5a                   	pop    %rdx
   215de:	59                   	pop    %rcx
   215df:	5b                   	pop    %rbx
   215e0:	c3                   	ret    

00000000000215e1 <do_rdrand>:
   215e1:	f3 0f 1e fa          	endbr64 
   215e5:	b9 0a 00 00 00       	mov    $0xa,%ecx
   215ea:	0f c7 f0             	rdrand %eax
   215ed:	72 08                	jb     215f7 <do_rdrand+0x16>
   215ef:	ff c9                	dec    %ecx
   215f1:	75 f7                	jne    215ea <do_rdrand+0x9>
   215f3:	48 31 c0             	xor    %rax,%rax
   215f6:	c3                   	ret    
   215f7:	48 89 f9             	mov    %rdi,%rcx
   215fa:	89 01                	mov    %eax,(%rcx)
   215fc:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   21603:	c3                   	ret    

0000000000021604 <abort>:
   21604:	f3 0f 1e fa          	endbr64 
   21608:	48 8d 05 d1 ac 00 00 	lea    0xacd1(%rip),%rax        # 2c2e0 <g_enclave_state>
   2160f:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   21615:	0f 0b                	ud2    

0000000000021617 <continue_execution>:
   21617:	f3 0f 1e fa          	endbr64 
   2161b:	48 89 f9             	mov    %rdi,%rcx
   2161e:	48 8b 01             	mov    (%rcx),%rax
   21621:	50                   	push   %rax
   21622:	48 8b 41 08          	mov    0x8(%rcx),%rax
   21626:	50                   	push   %rax
   21627:	48 8b 41 20          	mov    0x20(%rcx),%rax
   2162b:	48 2d 88 00 00 00    	sub    $0x88,%rax
   21631:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   21635:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   21639:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   2163d:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   21641:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   21645:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   21649:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   2164d:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   21651:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   21655:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   21659:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   2165d:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   21661:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   21665:	ff b1 80 00 00 00    	push   0x80(%rcx)
   2166b:	9d                   	popf   
   2166c:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   21673:	48 89 08             	mov    %rcx,(%rax)
   21676:	59                   	pop    %rcx
   21677:	5c                   	pop    %rsp
   21678:	48 94                	xchg   %rax,%rsp
   2167a:	c2 80 00             	ret    $0x80
